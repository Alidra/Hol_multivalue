require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 (x0: El real) (x1: El real) (x2: El real) (x3: El real) (x4: El real) (x5: El real) (x6: El real) (x7: El real) (x8: El num) (x9: El real) (x10: El real) (x11: El real) (x12: El num) ≔ (∧ (= (real_mul (real_of_num (NUMERAL _0)) x5) (real_of_num (NUMERAL _0))) (∧ (= (real_mul x5 (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) (∧ (= (real_mul (real_of_num (NUMERAL (BIT1 _0))) x5) x5) (∧ (= (real_mul x5 (real_of_num (NUMERAL (BIT1 _0)))) x5) (∧ (= (real_mul (real_mul x2 x0) (real_mul x1 x3)) (real_mul (real_mul x2 x1) (real_mul x0 x3))) (∧ (= (real_mul (real_mul x2 x0) (real_mul x1 x3)) (real_mul x2 (real_mul x0 (real_mul x1 x3)))) (∧ (= (real_mul (real_mul x2 x0) (real_mul x1 x3)) (real_mul x1 (real_mul (real_mul x2 x0) x3))) (∧ (= (real_mul (real_mul x2 x0) x1) (real_mul (real_mul x2 x1) x0)) (∧ (= (real_mul (real_mul x2 x0) x1) (real_mul x2 (real_mul x0 x1))) (∧ (= (real_mul x2 x1) (real_mul x1 x2)) (∧ (= (real_mul x2 (real_mul x1 x3)) (real_mul (real_mul x2 x1) x3)) (∧ (= (real_mul x2 (real_mul x1 x3)) (real_mul x1 (real_mul x2 x3))) (∧ (= (real_add (real_add x5 x4) (real_add x6 x7)) (real_add (real_add x5 x6) (real_add x4 x7))) (∧ (= (real_add (real_add x5 x4) x6) (real_add x5 (real_add x4 x6))) (∧ (= (real_add x5 (real_add x6 x7)) (real_add x6 (real_add x5 x7))) (∧ (= (real_add (real_add x5 x4) x6) (real_add (real_add x5 x6) x4)) (∧ (= (real_add x5 x6) (real_add x6 x5)) (∧ (= (real_add x5 (real_add x6 x7)) (real_add (real_add x5 x6) x7)) (∧ (= (real_mul (real_pow x11 x8) (real_pow x11 x12)) (real_pow x11 (+ x8 x12))) (∧ (= (real_mul x11 (real_pow x11 x12)) (real_pow x11 (SUC x12))) (∧ (= (real_mul (real_pow x11 x12) x11) (real_pow x11 (SUC x12))) (∧ (= (real_mul x11 x11) (real_pow x11 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (real_pow (real_mul x11 x9) x12) (real_mul (real_pow x11 x12) (real_pow x9 x12))) (∧ (= (real_pow (real_pow x11 x8) x12) (real_pow x11 (* x8 x12))) (∧ (= (real_pow x11 (NUMERAL _0)) (real_of_num (NUMERAL (BIT1 _0)))) (∧ (= (real_pow x11 (NUMERAL (BIT1 _0))) x11) (∧ (= (real_mul x11 (real_add x9 x10)) (real_add (real_mul x11 x9) (real_mul x11 x10))) (= (real_pow x11 (SUC x12)) (real_mul x11 (real_pow x11 x12))))))))))))))))))))))))))))));
