require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1055084 : Prf (= NUMRIGHT ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun num num))) (λ Y : El (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun num num)), (∀ (λ _17373 : El (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))), (∀ (λ x : El bool, (∀ (λ y : El num, (∧ (= (NUMLEFT (NUMSUM x y)) x) (= (Y _17373 (NUMSUM x y)) y))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))))))))))));
