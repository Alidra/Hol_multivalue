Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm6399998_term_abbrevs.
Require Import CARD_PSUBSET_spec.
Require Import CONJ_ASSOC_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXISTS_SWAP_FUN_THM_spec.
Require Import IN_DELETE_spec.
Require Import MEASURE_spec.
Require Import MEMBER_NOT_EMPTY_spec.
Require Import PSUBSET_ALT_spec.
Require Import SKOLEM_THM_spec.
Require Import SWAP_FORALL_THM_spec.
Require Import UNWIND_THM2_spec.
Require Import WF_MEASURE_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm11004_spec.
Require Import thm11005_spec.
Require Import thm12653_spec.
Require Import thm13473_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1834_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1843_spec.
Require Import thm1845_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18946_spec.
Require Import thm18947_spec.
Require Import thm18964_spec.
Require Import thm18965_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19018_spec.
Require Import thm19019_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm19732_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm21740_spec.
Require Import thm21742_spec.
Require Import thm21760_spec.
Require Import thm21761_spec.
Require Import thm21762_spec.
Require Import thm21780_spec.
Require Import thm3184736_spec.
Require Import thm3184739_spec.
Require Import thm3211609_spec.
Require Import thm3211610_spec.
Require Import thm3211640_spec.
Require Import thm3211641_spec.
Require Import thm3211683_spec.
Require Import thm3211684_spec.
Require Import thm3211692_spec.
Require Import thm3211693_spec.
Require Import thm3211701_spec.
Require Import thm3211702_spec.
Require Import thm3211729_spec.
Require Import thm3211730_spec.
Require Import thm3211750_spec.
Require Import thm3211751_spec.
Require Import thm339314_spec.
Require Import thm51_spec.
Require Import thm57691_spec.
Require Import thm57692_spec.
Require Import thm57694_spec.
Require Import thm57695_spec.
Require Import thm68127_spec.
Require Import thm7_spec.
Require Import thm82_spec.
Require Import thm9261_spec.
Require Import thm9306_spec.
Lemma lem6377850 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem6377851 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem6377852 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem6377851 t1) (@lem6377850 t1)). Qed.
Lemma lem6377853 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem6377852 t1 t2). Qed.
Lemma lem6377854 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem6377855 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem6377854 t1 t2) (@lem6377853 t1 t2)). Qed.
Lemma lem6377856 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem6377855 t1 t2 t3). Qed.
Lemma lem6377857 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem6377858 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem6377857 t1 t2 t3) (@lem6377856 t1 t2 t3)). Qed.
Lemma lem6377859 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem6377858 t1 t2 t3)). Qed.
Lemma lem6377893 {_83095 : Type'} : term7 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem6377894 {_83095 : Type'} (p : _83095 -> Prop) : term8 _83095 p.
Proof. exact (@lem6377893 _83095 p). Qed.
Lemma lem6377895 {_83095 : Type'} (p : _83095 -> Prop) : (term8 _83095 p) = (term9 _83095 p).
Proof. exact (eq_refl (term8 _83095 p)). Qed.
Lemma lem6377896 {_83095 : Type'} (p : _83095 -> Prop) : term9 _83095 p.
Proof. exact (EQ_MP (@lem6377895 _83095 p) (@lem6377894 _83095 p)). Qed.
Lemma lem6377897 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term10 _83095 p x.
Proof. exact (@lem6377896 _83095 p x). Qed.
Lemma lem6377898 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term10 _83095 p x) = ((term11 _83095 x p) = (p x)).
Proof. exact (eq_refl (term10 _83095 p x)). Qed.
Lemma lem6377908 {A : Type'} (s : A -> Prop) (h1 : (term12 A s) = (term13 A s)) : (term12 A s) = (term13 A s).
Proof. exact (h1). Qed.
Lemma lem6377909 {A : Type'} (s : A -> Prop) (h1 : (term12 A s) = (term13 A s)) : (term13 A s) = (term12 A s).
Proof. exact (SYM (@lem6377908 A s h1)). Qed.
Lemma lem6377910 {A : Type'} (s : A -> Prop) (h1 : (term13 A s) = (term12 A s)) : (term13 A s) = (term12 A s).
Proof. exact (h1). Qed.
Lemma lem6377911 {A : Type'} (s : A -> Prop) (h1 : (term13 A s) = (term12 A s)) : (term12 A s) = (term13 A s).
Proof. exact (SYM (@lem6377910 A s h1)). Qed.
Lemma lem6377912 {A : Type'} (s : A -> Prop) : ((term12 A s) = (term13 A s)) = ((term13 A s) = (term12 A s)).
Proof. exact (prop_ext (fun h1 : (term12 A s) = (term13 A s) => @lem6377909 A s h1) (fun h1 : (term13 A s) = (term12 A s) => @lem6377911 A s h1)). Qed.
Lemma lem6377913 {A : Type'} : (term14 A) = (term15 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem6377912 A s)). Qed.
Lemma lem6377914 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6377915 {A : Type'} : (term16 A) = (term17 A).
Proof. exact (MK_COMB (@lem6377914 A) (@lem6377913 A)). Qed.
Lemma lem6377916 {A : Type'} : term17 A.
Proof. exact (EQ_MP (@lem6377915 A) (@lem3216368 A)). Qed.
Lemma lem6377917 {A : Type'} (s : A -> Prop) : term18 A s.
Proof. exact (@lem6377916 A s). Qed.
Lemma lem6377918 {A : Type'} (s : A -> Prop) : (term18 A s) = ((term13 A s) = (term12 A s)).
Proof. exact (eq_refl (term18 A s)). Qed.
Lemma lem6377920 {A : Type'} (P : A -> Prop) : term19 A P.
Proof. exact (@lem4564 A P). Qed.
Lemma lem6377921 {A : Type'} (P : A -> Prop) : (term19 A P) = (term20 A P).
Proof. exact (eq_refl (term19 A P)). Qed.
Lemma lem6377922 {A : Type'} (P : A -> Prop) : term20 A P.
Proof. exact (EQ_MP (@lem6377921 A P) (@lem6377920 A P)). Qed.
Lemma lem6377923 {A : Type'} (P : A -> Prop) (a : A) : term21 A P a.
Proof. exact (@lem6377922 A P a). Qed.
Lemma lem6377924 {A : Type'} (P : A -> Prop) (a : A) : (term21 A P a) = ((term22 A a P) = (P a)).
Proof. exact (eq_refl (term21 A P a)). Qed.
Lemma lem6377971 (p : Prop) : p = (term23 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6377972 (r : Prop) (p : Prop) (q : Prop) : ((term24 p r q) = (term25 r p q)) = (term26 r p q).
Proof. exact (@lem6377971 ((term24 p r q) = (term25 r p q))). Qed.
Lemma lem6377973 (r : Prop) (p : Prop) (q : Prop) : (term26 r p q) = ((term24 p r q) = (term25 r p q)).
Proof. exact (SYM (@lem6377972 r p q)). Qed.
Lemma lem6377974 (r : Prop) (p : Prop) (q : Prop) (h1 : term27 r p q) : term27 r p q.
Proof. exact (h1). Qed.
Lemma lem6377977 (r : Prop) (p : Prop) (q : Prop) (h1 : term26 r p q) : term26 r p q.
Proof. exact (h1). Qed.
Lemma lem6377978 (r : Prop) (p : Prop) (q : Prop) : term28 r p q.
Proof. exact (fun h0 : term26 r p q => @lem6377977 r p q h0). Qed.
Lemma lem6377979 (r : Prop) (p : Prop) (q : Prop) (h1 : term28 r p q) : term28 r p q.
Proof. exact (h1). Qed.
Lemma lem6377980 (r : Prop) (p : Prop) (q : Prop) (h1 : term26 r p q) : term26 r p q.
Proof. exact (h1). Qed.
Lemma lem6377981 (r : Prop) (p : Prop) (q : Prop) (h1 : term26 r p q) (h2 : term28 r p q) : term26 r p q.
Proof. exact (@lem6377979 r p q h2 (@lem6377980 r p q h1)). Qed.
Lemma lem6377982 (r : Prop) (p : Prop) (q : Prop) (h1 : term26 r p q) : term29 r p q.
Proof. exact (fun h0 : term28 r p q => @lem6377981 r p q h1 h0). Qed.
Lemma lem6377983 (r : Prop) (p : Prop) (q : Prop) (h1 : term28 r p q) : term28 r p q.
Proof. exact (h1). Qed.
Lemma lem6377984 (r : Prop) (p : Prop) (q : Prop) (h1 : term26 r p q) (h2 : term28 r p q) : term26 r p q.
Proof. exact (@lem6377982 r p q h1 (@lem6377983 r p q h2)). Qed.
Lemma lem6377985 (r : Prop) (p : Prop) (q : Prop) (h1 : term28 r p q) : term28 r p q.
Proof. exact (fun h0 : term26 r p q => @lem6377984 r p q h0 h1). Qed.
Lemma lem6377986 (r : Prop) (p : Prop) (q : Prop) : term30 r p q.
Proof. exact (fun h0 : term28 r p q => @lem6377985 r p q h0). Qed.
Lemma lem6377989 (r : Prop) (p : Prop) (q : Prop) : term28 r p q.
Proof. exact (@lem6377986 r p q (@lem6377978 r p q)). Qed.
Lemma lem6378003 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6378004 (r : Prop) (p : Prop) (q : Prop) : (term26 r p q) = (term31 r p q).
Proof. exact (@lem6378003 (term27 r p q)). Qed.
Lemma lem6378006 (t : Prop) : (term32 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6378007 (r : Prop) (p : Prop) (q : Prop) : (term31 r p q) = ((term24 p r q) = (term25 r p q)).
Proof. exact (@lem6378006 ((term24 p r q) = (term25 r p q))). Qed.
Lemma lem6378008 (r : Prop) (p : Prop) (q : Prop) : (term26 r p q) = ((term24 p r q) = (term25 r p q)).
Proof. exact (TRANS (@lem6378004 r p q) (@lem6378007 r p q)). Qed.
Lemma lem6378021 (p : Prop) (q : Prop) : (term33 p q) = (term34 p q).
Proof. exact (fun_ext (fun r : Prop => @lem6378008 r p q)). Qed.
Lemma lem6378022 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378023 (p : Prop) (q : Prop) : (term35 p q) = (term36 p q).
Proof. exact (MK_COMB (@lem6378022) (@lem6378021 p q)). Qed.
Lemma lem6378028 (q : Prop) : (term37 q) = (term38 q).
Proof. exact (fun_ext (fun p : Prop => @lem6378023 p q)). Qed.
Lemma lem6378029 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378030 (q : Prop) : (term39 q) = (term40 q).
Proof. exact (MK_COMB (@lem6378029) (@lem6378028 q)). Qed.
Lemma lem6378035 : term41 = term42.
Proof. exact (fun_ext (fun q : Prop => @lem6378030 q)). Qed.
Lemma lem6378036 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378045 : term43 = term44.
Proof. exact (MK_COMB (@lem6378036) (@lem6378035)). Qed.
Lemma lem6378078 (r : Prop) (p : Prop) (q : Prop) : ((term24 p r q) = (term25 r p q)) = ((term24 p r q) = (term25 r p q)).
Proof. exact (eq_refl ((term24 p r q) = (term25 r p q))). Qed.
Lemma lem6378079 (p : Prop) (q : Prop) : (term34 p q) = (term34 p q).
Proof. exact (fun_ext (fun r : Prop => @lem6378078 r p q)). Qed.
Lemma lem6378080 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378081 (p : Prop) (q : Prop) : (term36 p q) = (term36 p q).
Proof. exact (MK_COMB (@lem6378080) (@lem6378079 p q)). Qed.
Lemma lem6378082 (q : Prop) : (term38 q) = (term38 q).
Proof. exact (fun_ext (fun p : Prop => @lem6378081 p q)). Qed.
Lemma lem6378083 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378084 (q : Prop) : (term40 q) = (term40 q).
Proof. exact (MK_COMB (@lem6378083) (@lem6378082 q)). Qed.
Lemma lem6378085 : term42 = term42.
Proof. exact (fun_ext (fun q : Prop => @lem6378084 q)). Qed.
Lemma lem6378086 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378087 : term44 = term44.
Proof. exact (MK_COMB (@lem6378086) (@lem6378085)). Qed.
Lemma lem6378088 : term43 = term44.
Proof. exact (TRANS (@lem6378045) (@lem6378087)). Qed.
Lemma lem6378094 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378095 : term47 = term48.
Proof. exact (@lem6378094 term42). Qed.
Lemma lem6378096 (q : Prop) : (term49 q) = (term40 q).
Proof. exact (eq_refl (term49 q)). Qed.
Lemma lem6378097 : term50 = term42.
Proof. exact (fun_ext (fun q : Prop => @lem6378096 q)). Qed.
Lemma lem6378098 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378099 : term47 = term44.
Proof. exact (MK_COMB (@lem6378098) (@lem6378097)). Qed.
Lemma lem6378100 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378101 : term51 = term52.
Proof. exact (MK_COMB (@lem6378100) (@lem6378099)). Qed.
Lemma lem6378102 : term53 = term54.
Proof. exact (eq_refl term53). Qed.
Lemma lem6378103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378104 : term55 = term56.
Proof. exact (MK_COMB (@lem6378103) (@lem6378102)). Qed.
Lemma lem6378105 : term57 = term58.
Proof. exact (eq_refl term57). Qed.
Lemma lem6378106 : term48 = term59.
Proof. exact (MK_COMB (@lem6378104) (@lem6378105)). Qed.
Lemma lem6378107 : (term47 = term48) = (term44 = term59).
Proof. exact (MK_COMB (@lem6378101) (@lem6378106)). Qed.
Lemma lem6378108 : term44 = term59.
Proof. exact (EQ_MP (@lem6378107) (@lem6378095)). Qed.
Lemma lem6378116 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378117 : term60 = term61.
Proof. exact (@lem6378116 term62). Qed.
Lemma lem6378118 (p : Prop) : (term63 p) = (term64 p).
Proof. exact (eq_refl (term63 p)). Qed.
Lemma lem6378119 : term65 = term62.
Proof. exact (fun_ext (fun p : Prop => @lem6378118 p)). Qed.
Lemma lem6378120 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378121 : term60 = term54.
Proof. exact (MK_COMB (@lem6378120) (@lem6378119)). Qed.
Lemma lem6378122 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378123 : term66 = term67.
Proof. exact (MK_COMB (@lem6378122) (@lem6378121)). Qed.
Lemma lem6378124 : term68 = term69.
Proof. exact (eq_refl term68). Qed.
Lemma lem6378125 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378126 : term70 = term71.
Proof. exact (MK_COMB (@lem6378125) (@lem6378124)). Qed.
Lemma lem6378127 : term72 = term73.
Proof. exact (eq_refl term72). Qed.
Lemma lem6378128 : term61 = term74.
Proof. exact (MK_COMB (@lem6378126) (@lem6378127)). Qed.
Lemma lem6378129 : (term60 = term61) = (term54 = term74).
Proof. exact (MK_COMB (@lem6378123) (@lem6378128)). Qed.
Lemma lem6378130 : term54 = term74.
Proof. exact (EQ_MP (@lem6378129) (@lem6378117)). Qed.
Lemma lem6378138 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378139 : term75 = term76.
Proof. exact (@lem6378138 term77). Qed.
Lemma lem6378140 (r : Prop) : (term78 r) = ((term79 r) = (term80 r)).
Proof. exact (eq_refl (term78 r)). Qed.
Lemma lem6378141 : term81 = term77.
Proof. exact (fun_ext (fun r : Prop => @lem6378140 r)). Qed.
Lemma lem6378142 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378143 : term75 = term69.
Proof. exact (MK_COMB (@lem6378142) (@lem6378141)). Qed.
Lemma lem6378144 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378145 : term82 = term83.
Proof. exact (MK_COMB (@lem6378144) (@lem6378143)). Qed.
Lemma lem6378146 : term84 = (term85 = term86).
Proof. exact (eq_refl term84). Qed.
Lemma lem6378147 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378148 : term87 = term88.
Proof. exact (MK_COMB (@lem6378147) (@lem6378146)). Qed.
Lemma lem6378149 : term89 = (term90 = term91).
Proof. exact (eq_refl term89). Qed.
Lemma lem6378150 : term76 = term92.
Proof. exact (MK_COMB (@lem6378148) (@lem6378149)). Qed.
Lemma lem6378151 : (term75 = term76) = (term69 = term92).
Proof. exact (MK_COMB (@lem6378145) (@lem6378150)). Qed.
Lemma lem6378152 : term69 = term92.
Proof. exact (EQ_MP (@lem6378151) (@lem6378139)). Qed.
Lemma lem6378156 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378157 : term85 = term93.
Proof. exact (@lem6378156 term93). Qed.
Lemma lem6378159 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378160 : term93 = term94.
Proof. exact (@lem6378159 term94). Qed.
Lemma lem6378161 : term85 = term94.
Proof. exact (TRANS (@lem6378157) (@lem6378160)). Qed.
Lemma lem6378163 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378164 : term95 = term96.
Proof. exact (@lem6378163 term96). Qed.
Lemma lem6378166 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem6378167 : term96 = (~ True).
Proof. exact (@lem6378166 (~ True)). Qed.
Lemma lem6378169 : (~ True) = False.
Proof. exact (proj1 (@lem21780)). Qed.
Lemma lem6378170 : term96 = False.
Proof. exact (TRANS (@lem6378167) (@lem6378169)). Qed.
Lemma lem6378171 : term95 = False.
Proof. exact (TRANS (@lem6378164) (@lem6378170)). Qed.
Lemma lem6378172 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6378173 : term94 = (~ False).
Proof. exact (MK_COMB (@lem6378172) (@lem6378171)). Qed.
Lemma lem6378175 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378176 : term94 = True.
Proof. exact (TRANS (@lem6378173) (@lem6378175)). Qed.
Lemma lem6378177 : term85 = True.
Proof. exact (TRANS (@lem6378161) (@lem6378176)). Qed.
Lemma lem6378178 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378179 : term97 = (@eq Prop True).
Proof. exact (MK_COMB (@lem6378178) (@lem6378177)). Qed.
Lemma lem6378181 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378182 : term86 = (True /\ True).
Proof. exact (@lem6378181 (True /\ True)). Qed.
Lemma lem6378184 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378185 : (True /\ True) = True.
Proof. exact (@lem6378184 True). Qed.
Lemma lem6378186 : term86 = True.
Proof. exact (TRANS (@lem6378182) (@lem6378185)). Qed.
Lemma lem6378187 : (term85 = term86) = (True = True).
Proof. exact (MK_COMB (@lem6378179) (@lem6378186)). Qed.
Lemma lem6378189 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem21740 t)). Qed.
Lemma lem6378190 : (True = True) = True.
Proof. exact (@lem6378189 True). Qed.
Lemma lem6378191 : (term85 = term86) = True.
Proof. exact (TRANS (@lem6378187) (@lem6378190)). Qed.
Lemma lem6378192 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378193 : term88 = (and True).
Proof. exact (MK_COMB (@lem6378192) (@lem6378191)). Qed.
Lemma lem6378195 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378196 : term90 = term98.
Proof. exact (@lem6378195 term98). Qed.
Lemma lem6378198 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378199 : term98 = term99.
Proof. exact (@lem6378198 term99). Qed.
Lemma lem6378200 : term90 = term99.
Proof. exact (TRANS (@lem6378196) (@lem6378199)). Qed.
Lemma lem6378202 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378203 : term100 = term101.
Proof. exact (@lem6378202 term101). Qed.
Lemma lem6378205 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem6378206 : term101 = (~ False).
Proof. exact (@lem6378205 (~ False)). Qed.
Lemma lem6378208 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378209 : term101 = True.
Proof. exact (TRANS (@lem6378206) (@lem6378208)). Qed.
Lemma lem6378210 : term100 = True.
Proof. exact (TRANS (@lem6378203) (@lem6378209)). Qed.
Lemma lem6378211 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6378212 : term99 = (~ True).
Proof. exact (MK_COMB (@lem6378211) (@lem6378210)). Qed.
Lemma lem6378214 : (~ True) = False.
Proof. exact (proj1 (@lem21780)). Qed.
Lemma lem6378215 : term99 = False.
Proof. exact (TRANS (@lem6378212) (@lem6378214)). Qed.
Lemma lem6378216 : term90 = False.
Proof. exact (TRANS (@lem6378200) (@lem6378215)). Qed.
Lemma lem6378217 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378218 : term102 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378217) (@lem6378216)). Qed.
Lemma lem6378220 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378221 : term91 = False.
Proof. exact (@lem6378220 (True /\ True)). Qed.
Lemma lem6378222 : (term90 = term91) = (False = False).
Proof. exact (MK_COMB (@lem6378218) (@lem6378221)). Qed.
Lemma lem6378224 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378225 : (False = False) = (~ False).
Proof. exact (@lem6378224 False). Qed.
Lemma lem6378227 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378228 : (False = False) = True.
Proof. exact (TRANS (@lem6378225) (@lem6378227)). Qed.
Lemma lem6378229 : (term90 = term91) = True.
Proof. exact (TRANS (@lem6378222) (@lem6378228)). Qed.
Lemma lem6378230 : term92 = (True /\ True).
Proof. exact (MK_COMB (@lem6378193) (@lem6378229)). Qed.
Lemma lem6378232 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378233 : (True /\ True) = True.
Proof. exact (@lem6378232 True). Qed.
Lemma lem6378234 : term92 = True.
Proof. exact (TRANS (@lem6378230) (@lem6378233)). Qed.
Lemma lem6378235 : term69 = True.
Proof. exact (TRANS (@lem6378152) (@lem6378234)). Qed.
Lemma lem6378236 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378237 : term71 = (and True).
Proof. exact (MK_COMB (@lem6378236) (@lem6378235)). Qed.
Lemma lem6378243 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378244 : term103 = term104.
Proof. exact (@lem6378243 term105). Qed.
Lemma lem6378245 (r : Prop) : (term106 r) = ((term107 r) = (term108 r)).
Proof. exact (eq_refl (term106 r)). Qed.
Lemma lem6378246 : term109 = term105.
Proof. exact (fun_ext (fun r : Prop => @lem6378245 r)). Qed.
Lemma lem6378247 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378248 : term103 = term73.
Proof. exact (MK_COMB (@lem6378247) (@lem6378246)). Qed.
Lemma lem6378249 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378250 : term110 = term111.
Proof. exact (MK_COMB (@lem6378249) (@lem6378248)). Qed.
Lemma lem6378251 : term112 = (term113 = term114).
Proof. exact (eq_refl term112). Qed.
Lemma lem6378252 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378253 : term115 = term116.
Proof. exact (MK_COMB (@lem6378252) (@lem6378251)). Qed.
Lemma lem6378254 : term117 = (term118 = term119).
Proof. exact (eq_refl term117). Qed.
Lemma lem6378255 : term104 = term120.
Proof. exact (MK_COMB (@lem6378253) (@lem6378254)). Qed.
Lemma lem6378256 : (term103 = term104) = (term73 = term120).
Proof. exact (MK_COMB (@lem6378250) (@lem6378255)). Qed.
Lemma lem6378257 : term73 = term120.
Proof. exact (EQ_MP (@lem6378256) (@lem6378244)). Qed.
Lemma lem6378261 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378262 : term113 = False.
Proof. exact (@lem6378261 term121). Qed.
Lemma lem6378263 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378264 : term122 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378263) (@lem6378262)). Qed.
Lemma lem6378266 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378267 : term114 = (False /\ True).
Proof. exact (@lem6378266 (False /\ True)). Qed.
Lemma lem6378269 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378270 : (False /\ True) = False.
Proof. exact (@lem6378269 True). Qed.
Lemma lem6378271 : term114 = False.
Proof. exact (TRANS (@lem6378267) (@lem6378270)). Qed.
Lemma lem6378272 : (term113 = term114) = (False = False).
Proof. exact (MK_COMB (@lem6378264) (@lem6378271)). Qed.
Lemma lem6378274 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378275 : (False = False) = (~ False).
Proof. exact (@lem6378274 False). Qed.
Lemma lem6378277 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378278 : (False = False) = True.
Proof. exact (TRANS (@lem6378275) (@lem6378277)). Qed.
Lemma lem6378279 : (term113 = term114) = True.
Proof. exact (TRANS (@lem6378272) (@lem6378278)). Qed.
Lemma lem6378280 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378281 : term116 = (and True).
Proof. exact (MK_COMB (@lem6378280) (@lem6378279)). Qed.
Lemma lem6378283 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378284 : term118 = False.
Proof. exact (@lem6378283 term123). Qed.
Lemma lem6378285 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378286 : term124 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378285) (@lem6378284)). Qed.
Lemma lem6378288 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378289 : term119 = False.
Proof. exact (@lem6378288 (False /\ True)). Qed.
Lemma lem6378290 : (term118 = term119) = (False = False).
Proof. exact (MK_COMB (@lem6378286) (@lem6378289)). Qed.
Lemma lem6378292 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378293 : (False = False) = (~ False).
Proof. exact (@lem6378292 False). Qed.
Lemma lem6378295 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378296 : (False = False) = True.
Proof. exact (TRANS (@lem6378293) (@lem6378295)). Qed.
Lemma lem6378297 : (term118 = term119) = True.
Proof. exact (TRANS (@lem6378290) (@lem6378296)). Qed.
Lemma lem6378298 : term120 = (True /\ True).
Proof. exact (MK_COMB (@lem6378281) (@lem6378297)). Qed.
Lemma lem6378300 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378301 : (True /\ True) = True.
Proof. exact (@lem6378300 True). Qed.
Lemma lem6378302 : term120 = True.
Proof. exact (TRANS (@lem6378298) (@lem6378301)). Qed.
Lemma lem6378303 : term73 = True.
Proof. exact (TRANS (@lem6378257) (@lem6378302)). Qed.
Lemma lem6378304 : term74 = (True /\ True).
Proof. exact (MK_COMB (@lem6378237) (@lem6378303)). Qed.
Lemma lem6378306 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378307 : (True /\ True) = True.
Proof. exact (@lem6378306 True). Qed.
Lemma lem6378308 : term74 = True.
Proof. exact (TRANS (@lem6378304) (@lem6378307)). Qed.
Lemma lem6378309 : term54 = True.
Proof. exact (TRANS (@lem6378130) (@lem6378308)). Qed.
Lemma lem6378310 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378311 : term56 = (and True).
Proof. exact (MK_COMB (@lem6378310) (@lem6378309)). Qed.
Lemma lem6378317 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378318 : term125 = term126.
Proof. exact (@lem6378317 term127). Qed.
Lemma lem6378319 (p : Prop) : (term128 p) = (term129 p).
Proof. exact (eq_refl (term128 p)). Qed.
Lemma lem6378320 : term130 = term127.
Proof. exact (fun_ext (fun p : Prop => @lem6378319 p)). Qed.
Lemma lem6378321 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378322 : term125 = term58.
Proof. exact (MK_COMB (@lem6378321) (@lem6378320)). Qed.
Lemma lem6378323 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378324 : term131 = term132.
Proof. exact (MK_COMB (@lem6378323) (@lem6378322)). Qed.
Lemma lem6378325 : term133 = term134.
Proof. exact (eq_refl term133). Qed.
Lemma lem6378326 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378327 : term135 = term136.
Proof. exact (MK_COMB (@lem6378326) (@lem6378325)). Qed.
Lemma lem6378328 : term137 = term138.
Proof. exact (eq_refl term137). Qed.
Lemma lem6378329 : term126 = term139.
Proof. exact (MK_COMB (@lem6378327) (@lem6378328)). Qed.
Lemma lem6378330 : (term125 = term126) = (term58 = term139).
Proof. exact (MK_COMB (@lem6378324) (@lem6378329)). Qed.
Lemma lem6378331 : term58 = term139.
Proof. exact (EQ_MP (@lem6378330) (@lem6378318)). Qed.
Lemma lem6378339 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378340 : term140 = term141.
Proof. exact (@lem6378339 term142). Qed.
Lemma lem6378341 (r : Prop) : (term143 r) = ((term144 r) = (term145 r)).
Proof. exact (eq_refl (term143 r)). Qed.
Lemma lem6378342 : term146 = term142.
Proof. exact (fun_ext (fun r : Prop => @lem6378341 r)). Qed.
Lemma lem6378343 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378344 : term140 = term134.
Proof. exact (MK_COMB (@lem6378343) (@lem6378342)). Qed.
Lemma lem6378345 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378346 : term147 = term148.
Proof. exact (MK_COMB (@lem6378345) (@lem6378344)). Qed.
Lemma lem6378347 : term149 = (term150 = term151).
Proof. exact (eq_refl term149). Qed.
Lemma lem6378348 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378349 : term152 = term153.
Proof. exact (MK_COMB (@lem6378348) (@lem6378347)). Qed.
Lemma lem6378350 : term154 = (term155 = term156).
Proof. exact (eq_refl term154). Qed.
Lemma lem6378351 : term141 = term157.
Proof. exact (MK_COMB (@lem6378349) (@lem6378350)). Qed.
Lemma lem6378352 : (term140 = term141) = (term134 = term157).
Proof. exact (MK_COMB (@lem6378346) (@lem6378351)). Qed.
Lemma lem6378353 : term134 = term157.
Proof. exact (EQ_MP (@lem6378352) (@lem6378340)). Qed.
Lemma lem6378357 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378358 : term150 = term158.
Proof. exact (@lem6378357 term158). Qed.
Lemma lem6378360 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378361 : term158 = False.
Proof. exact (@lem6378360 term159). Qed.
Lemma lem6378362 : term150 = False.
Proof. exact (TRANS (@lem6378358) (@lem6378361)). Qed.
Lemma lem6378363 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378364 : term160 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378363) (@lem6378362)). Qed.
Lemma lem6378366 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378367 : term151 = (True /\ False).
Proof. exact (@lem6378366 (True /\ False)). Qed.
Lemma lem6378369 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378370 : (True /\ False) = False.
Proof. exact (@lem6378369 False). Qed.
Lemma lem6378371 : term151 = False.
Proof. exact (TRANS (@lem6378367) (@lem6378370)). Qed.
Lemma lem6378372 : (term150 = term151) = (False = False).
Proof. exact (MK_COMB (@lem6378364) (@lem6378371)). Qed.
Lemma lem6378374 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378375 : (False = False) = (~ False).
Proof. exact (@lem6378374 False). Qed.
Lemma lem6378377 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378378 : (False = False) = True.
Proof. exact (TRANS (@lem6378375) (@lem6378377)). Qed.
Lemma lem6378379 : (term150 = term151) = True.
Proof. exact (TRANS (@lem6378372) (@lem6378378)). Qed.
Lemma lem6378380 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378381 : term153 = (and True).
Proof. exact (MK_COMB (@lem6378380) (@lem6378379)). Qed.
Lemma lem6378383 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378384 : term155 = term161.
Proof. exact (@lem6378383 term161). Qed.
Lemma lem6378386 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378387 : term161 = False.
Proof. exact (@lem6378386 term162). Qed.
Lemma lem6378388 : term155 = False.
Proof. exact (TRANS (@lem6378384) (@lem6378387)). Qed.
Lemma lem6378389 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378390 : term163 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378389) (@lem6378388)). Qed.
Lemma lem6378392 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378393 : term156 = False.
Proof. exact (@lem6378392 (True /\ False)). Qed.
Lemma lem6378394 : (term155 = term156) = (False = False).
Proof. exact (MK_COMB (@lem6378390) (@lem6378393)). Qed.
Lemma lem6378396 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378397 : (False = False) = (~ False).
Proof. exact (@lem6378396 False). Qed.
Lemma lem6378399 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378400 : (False = False) = True.
Proof. exact (TRANS (@lem6378397) (@lem6378399)). Qed.
Lemma lem6378401 : (term155 = term156) = True.
Proof. exact (TRANS (@lem6378394) (@lem6378400)). Qed.
Lemma lem6378402 : term157 = (True /\ True).
Proof. exact (MK_COMB (@lem6378381) (@lem6378401)). Qed.
Lemma lem6378404 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378405 : (True /\ True) = True.
Proof. exact (@lem6378404 True). Qed.
Lemma lem6378406 : term157 = True.
Proof. exact (TRANS (@lem6378402) (@lem6378405)). Qed.
Lemma lem6378407 : term134 = True.
Proof. exact (TRANS (@lem6378353) (@lem6378406)). Qed.
Lemma lem6378408 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378409 : term136 = (and True).
Proof. exact (MK_COMB (@lem6378408) (@lem6378407)). Qed.
Lemma lem6378415 (P : Prop -> Prop) : (term45 P) = (term46 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6378416 : term164 = term165.
Proof. exact (@lem6378415 term166). Qed.
Lemma lem6378417 (r : Prop) : (term167 r) = ((term168 r) = (term169 r)).
Proof. exact (eq_refl (term167 r)). Qed.
Lemma lem6378418 : term170 = term166.
Proof. exact (fun_ext (fun r : Prop => @lem6378417 r)). Qed.
Lemma lem6378419 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378420 : term164 = term138.
Proof. exact (MK_COMB (@lem6378419) (@lem6378418)). Qed.
Lemma lem6378421 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378422 : term171 = term172.
Proof. exact (MK_COMB (@lem6378421) (@lem6378420)). Qed.
Lemma lem6378423 : term173 = (term174 = term175).
Proof. exact (eq_refl term173). Qed.
Lemma lem6378424 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378425 : term176 = term177.
Proof. exact (MK_COMB (@lem6378424) (@lem6378423)). Qed.
Lemma lem6378426 : term178 = (term179 = term180).
Proof. exact (eq_refl term178). Qed.
Lemma lem6378427 : term165 = term181.
Proof. exact (MK_COMB (@lem6378425) (@lem6378426)). Qed.
Lemma lem6378428 : (term164 = term165) = (term138 = term181).
Proof. exact (MK_COMB (@lem6378422) (@lem6378427)). Qed.
Lemma lem6378429 : term138 = term181.
Proof. exact (EQ_MP (@lem6378428) (@lem6378416)). Qed.
Lemma lem6378433 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378434 : term174 = False.
Proof. exact (@lem6378433 term182). Qed.
Lemma lem6378435 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378436 : term183 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378435) (@lem6378434)). Qed.
Lemma lem6378438 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378439 : term175 = (False /\ False).
Proof. exact (@lem6378438 (False /\ False)). Qed.
Lemma lem6378441 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378442 : (False /\ False) = False.
Proof. exact (@lem6378441 False). Qed.
Lemma lem6378443 : term175 = False.
Proof. exact (TRANS (@lem6378439) (@lem6378442)). Qed.
Lemma lem6378444 : (term174 = term175) = (False = False).
Proof. exact (MK_COMB (@lem6378436) (@lem6378443)). Qed.
Lemma lem6378446 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378447 : (False = False) = (~ False).
Proof. exact (@lem6378446 False). Qed.
Lemma lem6378449 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378450 : (False = False) = True.
Proof. exact (TRANS (@lem6378447) (@lem6378449)). Qed.
Lemma lem6378451 : (term174 = term175) = True.
Proof. exact (TRANS (@lem6378444) (@lem6378450)). Qed.
Lemma lem6378452 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6378453 : term177 = (and True).
Proof. exact (MK_COMB (@lem6378452) (@lem6378451)). Qed.
Lemma lem6378455 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378456 : term179 = False.
Proof. exact (@lem6378455 term184). Qed.
Lemma lem6378457 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6378458 : term185 = (@eq Prop False).
Proof. exact (MK_COMB (@lem6378457) (@lem6378456)). Qed.
Lemma lem6378460 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem21762 t)). Qed.
Lemma lem6378461 : term180 = False.
Proof. exact (@lem6378460 (False /\ False)). Qed.
Lemma lem6378462 : (term179 = term180) = (False = False).
Proof. exact (MK_COMB (@lem6378458) (@lem6378461)). Qed.
Lemma lem6378464 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6378465 : (False = False) = (~ False).
Proof. exact (@lem6378464 False). Qed.
Lemma lem6378467 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6378468 : (False = False) = True.
Proof. exact (TRANS (@lem6378465) (@lem6378467)). Qed.
Lemma lem6378469 : (term179 = term180) = True.
Proof. exact (TRANS (@lem6378462) (@lem6378468)). Qed.
Lemma lem6378470 : term181 = (True /\ True).
Proof. exact (MK_COMB (@lem6378453) (@lem6378469)). Qed.
Lemma lem6378472 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378473 : (True /\ True) = True.
Proof. exact (@lem6378472 True). Qed.
Lemma lem6378474 : term181 = True.
Proof. exact (TRANS (@lem6378470) (@lem6378473)). Qed.
Lemma lem6378475 : term138 = True.
Proof. exact (TRANS (@lem6378429) (@lem6378474)). Qed.
Lemma lem6378476 : term139 = (True /\ True).
Proof. exact (MK_COMB (@lem6378409) (@lem6378475)). Qed.
Lemma lem6378478 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378479 : (True /\ True) = True.
Proof. exact (@lem6378478 True). Qed.
Lemma lem6378480 : term139 = True.
Proof. exact (TRANS (@lem6378476) (@lem6378479)). Qed.
Lemma lem6378481 : term58 = True.
Proof. exact (TRANS (@lem6378331) (@lem6378480)). Qed.
Lemma lem6378482 : term59 = (True /\ True).
Proof. exact (MK_COMB (@lem6378311) (@lem6378481)). Qed.
Lemma lem6378484 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem21760 t)). Qed.
Lemma lem6378485 : (True /\ True) = True.
Proof. exact (@lem6378484 True). Qed.
Lemma lem6378486 : term59 = True.
Proof. exact (TRANS (@lem6378482) (@lem6378485)). Qed.
Lemma lem6378487 : term44 = True.
Proof. exact (TRANS (@lem6378108) (@lem6378486)). Qed.
Lemma lem6378488 : term43 = True.
Proof. exact (TRANS (@lem6378088) (@lem6378487)). Qed.
Lemma lem6378489 : True = term43.
Proof. exact (SYM (@lem6378488)). Qed.
Lemma lem6378490 : term43.
Proof. exact (EQ_MP (@lem6378489) (@lem0)). Qed.
Lemma lem6378491 (q : Prop) : term186 q.
Proof. exact (@lem6378490 q). Qed.
Lemma lem6378492 (q : Prop) : (term186 q) = (term39 q).
Proof. exact (eq_refl (term186 q)). Qed.
Lemma lem6378493 (q : Prop) : term39 q.
Proof. exact (EQ_MP (@lem6378492 q) (@lem6378491 q)). Qed.
Lemma lem6378494 (q : Prop) (p : Prop) : term187 q p.
Proof. exact (@lem6378493 q p). Qed.
Lemma lem6378495 (p : Prop) (q : Prop) : (term187 q p) = (term35 p q).
Proof. exact (eq_refl (term187 q p)). Qed.
Lemma lem6378496 (p : Prop) (q : Prop) : term35 p q.
Proof. exact (EQ_MP (@lem6378495 p q) (@lem6378494 q p)). Qed.
Lemma lem6378497 (p : Prop) (q : Prop) (r : Prop) : term188 p q r.
Proof. exact (@lem6378496 p q r). Qed.
Lemma lem6378498 (r : Prop) (p : Prop) (q : Prop) : (term188 p q r) = (term26 r p q).
Proof. exact (eq_refl (term188 p q r)). Qed.
Lemma lem6378499 (r : Prop) (p : Prop) (q : Prop) : term26 r p q.
Proof. exact (EQ_MP (@lem6378498 r p q) (@lem6378497 p q r)). Qed.
Lemma lem6378501 (r : Prop) (p : Prop) (q : Prop) : term26 r p q.
Proof. exact (@lem6377989 r p q (@lem6378499 r p q)). Qed.
Lemma lem6378502 (r : Prop) (p : Prop) (q : Prop) (h1 : term27 r p q) : False.
Proof. exact (@lem6378501 r p q (@lem6377974 r p q h1)). Qed.
Lemma lem6378503 (r : Prop) (p : Prop) (q : Prop) (h1 : term27 r p q) : (term27 r p q) = False.
Proof. exact (prop_ext (fun h2 : term27 r p q => @lem6378502 r p q h1) (fun h2 : False => @lem6377974 r p q h1)). Qed.
Lemma lem6378504 (r : Prop) (p : Prop) (q : Prop) (h1 : term27 r p q) : False.
Proof. exact (EQ_MP (@lem6378503 r p q h1) (@lem6377974 r p q h1)). Qed.
Lemma lem6378505 (r : Prop) (p : Prop) (q : Prop) : term26 r p q.
Proof. exact (fun h0 : term27 r p q => @lem6378504 r p q h0). Qed.
Lemma lem6378512 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term25 t1 t2 t3) = (term189 t1 t2 t3)) : (term25 t1 t2 t3) = (term189 t1 t2 t3).
Proof. exact (h1). Qed.
Lemma lem6378513 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term25 t1 t2 t3) = (term189 t1 t2 t3)) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (SYM (@lem6378512 t1 t2 t3 h1)). Qed.
Lemma lem6378514 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term189 t1 t2 t3) = (term25 t1 t2 t3)) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (h1). Qed.
Lemma lem6378515 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term189 t1 t2 t3) = (term25 t1 t2 t3)) : (term25 t1 t2 t3) = (term189 t1 t2 t3).
Proof. exact (SYM (@lem6378514 t1 t2 t3 h1)). Qed.
Lemma lem6378516 (t1 : Prop) (t2 : Prop) (t3 : Prop) : ((term25 t1 t2 t3) = (term189 t1 t2 t3)) = ((term189 t1 t2 t3) = (term25 t1 t2 t3)).
Proof. exact (prop_ext (fun h1 : (term25 t1 t2 t3) = (term189 t1 t2 t3) => @lem6378513 t1 t2 t3 h1) (fun h1 : (term189 t1 t2 t3) = (term25 t1 t2 t3) => @lem6378515 t1 t2 t3 h1)). Qed.
Lemma lem6378517 (t1 : Prop) (t2 : Prop) : (term190 t1 t2) = (term191 t1 t2).
Proof. exact (fun_ext (fun t3 : Prop => @lem6378516 t1 t2 t3)). Qed.
Lemma lem6378518 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378519 (t1 : Prop) (t2 : Prop) : (term192 t1 t2) = (term193 t1 t2).
Proof. exact (MK_COMB (@lem6378518) (@lem6378517 t1 t2)). Qed.
Lemma lem6378520 (t1 : Prop) : (term194 t1) = (term195 t1).
Proof. exact (fun_ext (fun t2 : Prop => @lem6378519 t1 t2)). Qed.
Lemma lem6378521 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378522 (t1 : Prop) : (term196 t1) = (term197 t1).
Proof. exact (MK_COMB (@lem6378521) (@lem6378520 t1)). Qed.
Lemma lem6378523 : term198 = term199.
Proof. exact (fun_ext (fun t1 : Prop => @lem6378522 t1)). Qed.
Lemma lem6378524 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6378525 : term200 = term201.
Proof. exact (MK_COMB (@lem6378524) (@lem6378523)). Qed.
Lemma lem6378526 : term201.
Proof. exact (EQ_MP (@lem6378525) (@lem512)). Qed.
Lemma lem6378527 (t1 : Prop) : term202 t1.
Proof. exact (@lem6378526 t1). Qed.
Lemma lem6378528 (t1 : Prop) : (term202 t1) = (term197 t1).
Proof. exact (eq_refl (term202 t1)). Qed.
Lemma lem6378529 (t1 : Prop) : term197 t1.
Proof. exact (EQ_MP (@lem6378528 t1) (@lem6378527 t1)). Qed.
Lemma lem6378530 (t1 : Prop) (t2 : Prop) : term203 t1 t2.
Proof. exact (@lem6378529 t1 t2). Qed.
Lemma lem6378531 (t1 : Prop) (t2 : Prop) : (term203 t1 t2) = (term193 t1 t2).
Proof. exact (eq_refl (term203 t1 t2)). Qed.
Lemma lem6378532 (t1 : Prop) (t2 : Prop) : term193 t1 t2.
Proof. exact (EQ_MP (@lem6378531 t1 t2) (@lem6378530 t1 t2)). Qed.
Lemma lem6378533 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term204 t1 t2 t3.
Proof. exact (@lem6378532 t1 t2 t3). Qed.
Lemma lem6378534 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term204 t1 t2 t3) = ((term189 t1 t2 t3) = (term25 t1 t2 t3)).
Proof. exact (eq_refl (term204 t1 t2 t3)). Qed.
Lemma lem6378536 {A : Type'} (s : A -> Prop) : term205 A s.
Proof. exact (@lem3205803 A s). Qed.
Lemma lem6378537 {A : Type'} (s : A -> Prop) : (term205 A s) = (term206 A s).
Proof. exact (eq_refl (term205 A s)). Qed.
Lemma lem6378538 {A : Type'} (s : A -> Prop) : term206 A s.
Proof. exact (EQ_MP (@lem6378537 A s) (@lem6378536 A s)). Qed.
Lemma lem6378539 {A : Type'} (s : A -> Prop) (x : A) : term207 A s x.
Proof. exact (@lem6378538 A s x). Qed.
Lemma lem6378540 {A : Type'} (s : A -> Prop) (x : A) : (term207 A s x) = (term208 A s x).
Proof. exact (eq_refl (term207 A s x)). Qed.
Lemma lem6378541 {A : Type'} (s : A -> Prop) (x : A) : term208 A s x.
Proof. exact (EQ_MP (@lem6378540 A s x) (@lem6378539 A s x)). Qed.
Lemma lem6378542 {A : Type'} (s : A -> Prop) (x : A) (y : A) : term209 A s x y.
Proof. exact (@lem6378541 A s x y). Qed.
Lemma lem6378543 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term209 A s x y) = ((term210 A x s y) = (term211 A s x y)).
Proof. exact (eq_refl (term209 A s x y)). Qed.
Lemma lem6378569 {_83095 : Type'} : term7 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem6378570 {_83095 : Type'} (p : _83095 -> Prop) : term8 _83095 p.
Proof. exact (@lem6378569 _83095 p). Qed.
Lemma lem6378571 {_83095 : Type'} (p : _83095 -> Prop) : (term8 _83095 p) = (term9 _83095 p).
Proof. exact (eq_refl (term8 _83095 p)). Qed.
Lemma lem6378572 {_83095 : Type'} (p : _83095 -> Prop) : term9 _83095 p.
Proof. exact (EQ_MP (@lem6378571 _83095 p) (@lem6378570 _83095 p)). Qed.
Lemma lem6378573 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term10 _83095 p x.
Proof. exact (@lem6378572 _83095 p x). Qed.
Lemma lem6378574 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term10 _83095 p x) = ((term11 _83095 x p) = (p x)).
Proof. exact (eq_refl (term10 _83095 p x)). Qed.
Lemma lem6378593 {A : Type'} (s : A -> Prop) : term212 A s.
Proof. exact (@lem3231915 A s). Qed.
Lemma lem6378594 {A : Type'} (s : A -> Prop) : (term212 A s) = (term213 A s).
Proof. exact (eq_refl (term212 A s)). Qed.
Lemma lem6378595 {A : Type'} (s : A -> Prop) : term213 A s.
Proof. exact (EQ_MP (@lem6378594 A s) (@lem6378593 A s)). Qed.
Lemma lem6378596 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term214 A s t.
Proof. exact (@lem6378595 A s t). Qed.
Lemma lem6378597 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term214 A s t) = ((@PSUBSET A s t) = (term215 A t s)).
Proof. exact (eq_refl (term214 A s t)). Qed.
Lemma lem6378599 {A : Type'} (h1 : term216 A) : term216 A.
Proof. exact (h1). Qed.
Lemma lem6378600 {A : Type'} (a : A -> Prop) (h1 : term216 A) : term217 A a.
Proof. exact (@lem6378599 A h1 a). Qed.
Lemma lem6378601 {A : Type'} (a : A -> Prop) : (term217 A a) = (term218 A a).
Proof. exact (eq_refl (term217 A a)). Qed.
Lemma lem6378602 {A : Type'} (a : A -> Prop) (h1 : term216 A) : term218 A a.
Proof. exact (EQ_MP (@lem6378601 A a) (@lem6378600 A a h1)). Qed.
Lemma lem6378603 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term216 A) : term219 A a b.
Proof. exact (@lem6378602 A a h1 b). Qed.
Lemma lem6378604 {A : Type'} (a : A -> Prop) (b : A -> Prop) : (term219 A a b) = (term220 A a b).
Proof. exact (eq_refl (term219 A a b)). Qed.
Lemma lem6378605 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term216 A) : term220 A a b.
Proof. exact (EQ_MP (@lem6378604 A a b) (@lem6378603 A a b h1)). Qed.
Lemma lem6378606 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term221 A a b) : term221 A a b.
Proof. exact (h1). Qed.
Lemma lem6378607 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term216 A) (h2 : term221 A a b) : term222 A a b.
Proof. exact (@lem6378605 A a b h1 (@lem6378606 A a b h2)). Qed.
Lemma lem6378608 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term221 A a b) : term223 A a b.
Proof. exact (fun h0 : term216 A => @lem6378607 A a b h0 h1). Qed.
Lemma lem6378609 {A : Type'} (h1 : term216 A) : term216 A.
Proof. exact (h1). Qed.
Lemma lem6378610 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term216 A) (h2 : term221 A a b) : term222 A a b.
Proof. exact (@lem6378608 A a b h2 (@lem6378609 A h1)). Qed.
Lemma lem6378611 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term216 A) : term220 A a b.
Proof. exact (fun h0 : term221 A a b => @lem6378610 A a b h1 h0). Qed.
Lemma lem6378612 {A : Type'} (a : A -> Prop) (h1 : term216 A) : term218 A a.
Proof. exact (fun b : A -> Prop => @lem6378611 A a b h1). Qed.
Lemma lem6378613 {A : Type'} (h1 : term216 A) : term216 A.
Proof. exact (fun a : A -> Prop => @lem6378612 A a h1). Qed.
Lemma lem6378614 {A : Type'} : term224 A.
Proof. exact (fun h0 : term216 A => @lem6378613 A h0). Qed.
Lemma lem6378615 {A : Type'} : term216 A.
Proof. exact (@lem6378614 A (@lem3921097 A)). Qed.
Lemma lem6378616 {A : Type'} (a : A -> Prop) : term217 A a.
Proof. exact (@lem6378615 A a). Qed.
Lemma lem6378617 {A : Type'} (a : A -> Prop) : (term217 A a) = (term218 A a).
Proof. exact (eq_refl (term217 A a)). Qed.
Lemma lem6378618 {A : Type'} (a : A -> Prop) : term218 A a.
Proof. exact (EQ_MP (@lem6378617 A a) (@lem6378616 A a)). Qed.
Lemma lem6378619 {A : Type'} (a : A -> Prop) (b : A -> Prop) : term219 A a b.
Proof. exact (@lem6378618 A a b). Qed.
Lemma lem6378620 {A : Type'} (a : A -> Prop) (b : A -> Prop) : (term219 A a b) = (term220 A a b).
Proof. exact (eq_refl (term219 A a b)). Qed.
Lemma lem6379762 {_16406 : Type'} (m : _16406 -> nat) : term225 _16406 m.
Proof. exact (@lem365417 _16406 m). Qed.
Lemma lem6379763 {_16406 : Type'} (m : _16406 -> nat) : (term225 _16406 m) = ((@MEASURE _16406 m) = (term226 _16406 m)).
Proof. exact (eq_refl (term225 _16406 m)). Qed.
Lemma lem6379765 {K : Type'} : term227 K.
Proof. exact (@lem365462 (K -> Prop)). Qed.
Lemma lem6379766 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term228 A K f dom neut.
Proof. exact (@lem6379765 K (term229 A K f dom neut)). Qed.
Lemma lem6379767 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term228 A K f dom neut) = (term230 A K f dom neut).
Proof. exact (eq_refl (term228 A K f dom neut)). Qed.
Lemma lem6379768 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term230 A K f dom neut.
Proof. exact (EQ_MP (@lem6379767 A K f dom neut) (@lem6379766 A K f dom neut)). Qed.
Lemma lem6379770 {A B : Type'} (lt2 : type1402 A) : term231 A B lt2.
Proof. exact (fun h0 : @WF A lt2 => @lem339314 A B lt2 h0). Qed.
Lemma lem6379771 {B K : Type'} (lt2 : type639 K) : term232 B K lt2.
Proof. exact (@lem6379770 (K -> Prop) B lt2). Qed.
Lemma lem6379772 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term233 A B K f dom neut.
Proof. exact (@lem6379771 B K (term234 A K f dom neut)). Qed.
Lemma lem6379773 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term235 A B K f dom neut.
Proof. exact (@lem6379772 A B K f dom neut (@lem6379768 A K f dom neut)). Qed.
Lemma lem6379774 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term235 A B K f dom neut.
Proof. exact (h1). Qed.
Lemma lem6379775 {A B K : Type'} (H : type229 B K) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term236 A B K f dom neut H.
Proof. exact (@lem6379774 A B K f dom neut h1 H). Qed.
Lemma lem6379776 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) : (term236 A B K f dom neut H) = (term237 A B K f dom neut H).
Proof. exact (eq_refl (term236 A B K f dom neut H)). Qed.
Lemma lem6379777 {A B K : Type'} (H : type229 B K) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term237 A B K f dom neut H.
Proof. exact (EQ_MP (@lem6379776 A B K f dom neut H) (@lem6379775 A B K H f dom neut h1)). Qed.
Lemma lem6379778 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) (h1 : term238 A B K f dom neut H) : term238 A B K f dom neut H.
Proof. exact (h1). Qed.
Lemma lem6379779 {A B K : Type'} (H : type229 B K) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term238 A B K f dom neut H) (h2 : term235 A B K f dom neut) : term239 B K H.
Proof. exact (@lem6379777 A B K H f dom neut h2 (@lem6379778 A B K f dom neut H h1)). Qed.
Lemma lem6379780 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) (h1 : term238 A B K f dom neut H) : term240 A B K f dom neut H.
Proof. exact (fun h0 : term235 A B K f dom neut => @lem6379779 A B K H f dom neut h1 h0). Qed.
Lemma lem6379781 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term235 A B K f dom neut.
Proof. exact (h1). Qed.
Lemma lem6379782 {A B K : Type'} (H : type229 B K) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term238 A B K f dom neut H) (h2 : term235 A B K f dom neut) : term239 B K H.
Proof. exact (@lem6379780 A B K f dom neut H h1 (@lem6379781 A B K f dom neut h2)). Qed.
Lemma lem6379783 {A B K : Type'} (H : type229 B K) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term237 A B K f dom neut H.
Proof. exact (fun h0 : term238 A B K f dom neut H => @lem6379782 A B K H f dom neut h0 h1). Qed.
Lemma lem6379784 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term235 A B K f dom neut) : term235 A B K f dom neut.
Proof. exact (fun H : type229 B K => @lem6379783 A B K H f dom neut h1). Qed.
Lemma lem6379785 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term241 A B K f dom neut.
Proof. exact (fun h0 : term235 A B K f dom neut => @lem6379784 A B K f dom neut h0). Qed.
Lemma lem6379786 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : term235 A B K f dom neut.
Proof. exact (@lem6379785 A B K f dom neut (@lem6379773 A B K f dom neut)). Qed.
Lemma lem6379787 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) : term236 A B K f dom neut H.
Proof. exact (@lem6379786 A B K f dom neut H). Qed.
Lemma lem6379788 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) : (term236 A B K f dom neut H) = (term237 A B K f dom neut H).
Proof. exact (eq_refl (term236 A B K f dom neut H)). Qed.
Lemma lem6379791 {A B : Type'} (P : type1413 A B) (h1 : (term242 A B P) = (term243 A B P)) : (term242 A B P) = (term243 A B P).
Proof. exact (h1). Qed.
Lemma lem6379792 {A B : Type'} (P : type1413 A B) (h1 : (term242 A B P) = (term243 A B P)) : (term243 A B P) = (term242 A B P).
Proof. exact (SYM (@lem6379791 A B P h1)). Qed.
Lemma lem6379793 {A B : Type'} (P : type1413 A B) (h1 : (term243 A B P) = (term242 A B P)) : (term243 A B P) = (term242 A B P).
Proof. exact (h1). Qed.
Lemma lem6379794 {A B : Type'} (P : type1413 A B) (h1 : (term243 A B P) = (term242 A B P)) : (term242 A B P) = (term243 A B P).
Proof. exact (SYM (@lem6379793 A B P h1)). Qed.
Lemma lem6379795 {A B : Type'} (P : type1413 A B) : ((term242 A B P) = (term243 A B P)) = ((term243 A B P) = (term242 A B P)).
Proof. exact (prop_ext (fun h1 : (term242 A B P) = (term243 A B P) => @lem6379792 A B P h1) (fun h1 : (term243 A B P) = (term242 A B P) => @lem6379794 A B P h1)). Qed.
Lemma lem6379796 {A B : Type'} : (term244 A B) = (term245 A B).
Proof. exact (fun_ext (fun P : type1413 A B => @lem6379795 A B P)). Qed.
Lemma lem6379797 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem6379798 {A B : Type'} : (term246 A B) = (term247 A B).
Proof. exact (MK_COMB (@lem6379797 A B) (@lem6379796 A B)). Qed.
Lemma lem6379799 {A B : Type'} : term247 A B.
Proof. exact (EQ_MP (@lem6379798 A B) (@lem13546 A B)). Qed.
Lemma lem6379800 {A B : Type'} (P : type1413 A B) : term248 A B P.
Proof. exact (@lem6379799 A B P). Qed.
Lemma lem6379801 {A B : Type'} (P : type1413 A B) : (term248 A B P) = ((term243 A B P) = (term242 A B P)).
Proof. exact (eq_refl (term248 A B P)). Qed.
Lemma lem6379803 {A B : Type'} (P : type1413 A B) : term249 A B P.
Proof. exact (@lem4792 A B P). Qed.
Lemma lem6379804 {A B : Type'} (P : type1413 A B) : (term249 A B P) = ((term250 A B P) = (term251 A B P)).
Proof. exact (eq_refl (term249 A B P)). Qed.
Lemma lem6379806 {A B C : Type'} (P : type443 A B C) : term252 A B C P.
Proof. exact (@lem55243 A B C P). Qed.
Lemma lem6379807 {A B C : Type'} (P : type443 A B C) : (term252 A B C P) = ((term253 A B C P) = (term254 A B C P)).
Proof. exact (eq_refl (term252 A B C P)). Qed.
Lemma lem6379810 {A B : Type'} (P : type1413 A B) (h1 : (term242 A B P) = (term243 A B P)) : (term242 A B P) = (term243 A B P).
Proof. exact (h1). Qed.
Lemma lem6379811 {A B : Type'} (P : type1413 A B) (h1 : (term242 A B P) = (term243 A B P)) : (term243 A B P) = (term242 A B P).
Proof. exact (SYM (@lem6379810 A B P h1)). Qed.
Lemma lem6379812 {A B : Type'} (P : type1413 A B) (h1 : (term243 A B P) = (term242 A B P)) : (term243 A B P) = (term242 A B P).
Proof. exact (h1). Qed.
Lemma lem6379813 {A B : Type'} (P : type1413 A B) (h1 : (term243 A B P) = (term242 A B P)) : (term242 A B P) = (term243 A B P).
Proof. exact (SYM (@lem6379812 A B P h1)). Qed.
Lemma lem6379814 {A B : Type'} (P : type1413 A B) : ((term242 A B P) = (term243 A B P)) = ((term243 A B P) = (term242 A B P)).
Proof. exact (prop_ext (fun h1 : (term242 A B P) = (term243 A B P) => @lem6379811 A B P h1) (fun h1 : (term243 A B P) = (term242 A B P) => @lem6379813 A B P h1)). Qed.
Lemma lem6379815 {A B : Type'} : (term244 A B) = (term245 A B).
Proof. exact (fun_ext (fun P : type1413 A B => @lem6379814 A B P)). Qed.
Lemma lem6379816 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem6379817 {A B : Type'} : (term246 A B) = (term247 A B).
Proof. exact (MK_COMB (@lem6379816 A B) (@lem6379815 A B)). Qed.
Lemma lem6379818 {A B : Type'} : term247 A B.
Proof. exact (EQ_MP (@lem6379817 A B) (@lem13546 A B)). Qed.
Lemma lem6379819 {A B : Type'} (P : type1413 A B) : term248 A B P.
Proof. exact (@lem6379818 A B P). Qed.
Lemma lem6379820 {A B : Type'} (P : type1413 A B) : (term248 A B P) = ((term243 A B P) = (term242 A B P)).
Proof. exact (eq_refl (term248 A B P)). Qed.
Lemma lem6379823 {A B : Type'} (P : type1413 A B) : (term243 A B P) = (term242 A B P).
Proof. exact (EQ_MP (@lem6379820 A B P) (@lem6379819 A B P)). Qed.
Lemma lem6379824 {A K : Type'} (P : type609 A K) : (term255 A K P) = (term256 A K P).
Proof. exact (@lem6379823 (A -> Prop) (type1358 A K) P). Qed.
Lemma lem6379825 {A K : Type'} : (term257 A K) = (term258 A K).
Proof. exact (@lem6379824 A K (term259 A K)). Qed.
Lemma lem6379826 {A K : Type'} (dom : A -> Prop) : (term260 A K dom) = (term261 A K dom).
Proof. exact (eq_refl (term260 A K dom)). Qed.
Lemma lem6379827 {A K : Type'} (itty : type665 A K) (dom : A -> Prop) : (itty dom) = (itty dom).
Proof. exact (eq_refl (itty dom)). Qed.
Lemma lem6379828 {A K : Type'} (itty : type665 A K) (dom : A -> Prop) : (term262 A K itty dom) = (term263 A K itty dom).
Proof. exact (MK_COMB (@lem6379826 A K dom) (@lem6379827 A K itty dom)). Qed.
Lemma lem6379829 {A K : Type'} (itty : type665 A K) (dom : A -> Prop) : (term263 A K itty dom) = (term264 A K itty dom).
Proof. exact (eq_refl (term263 A K itty dom)). Qed.
Lemma lem6379830 {A K : Type'} (itty : type665 A K) (dom : A -> Prop) : (term262 A K itty dom) = (term264 A K itty dom).
Proof. exact (TRANS (@lem6379828 A K itty dom) (@lem6379829 A K itty dom)). Qed.
Lemma lem6379831 {A K : Type'} (itty : type665 A K) : (term265 A K itty) = (term266 A K itty).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6379830 A K itty dom)). Qed.
Lemma lem6379832 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6379833 {A K : Type'} (itty : type665 A K) : (term267 A K itty) = (term268 A K itty).
Proof. exact (MK_COMB (@lem6379832 A) (@lem6379831 A K itty)). Qed.
Lemma lem6379834 {A K : Type'} : (term269 A K) = (term270 A K).
Proof. exact (fun_ext (fun itty : type665 A K => @lem6379833 A K itty)). Qed.
Lemma lem6379835 {A K : Type'} : (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379836 {A K : Type'} : (term257 A K) = (term271 A K).
Proof. exact (MK_COMB (@lem6379835 A K) (@lem6379834 A K)). Qed.
Lemma lem6379837 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6379838 {A K : Type'} : (term272 A K) = (term273 A K).
Proof. exact (MK_COMB (@lem6379837) (@lem6379836 A K)). Qed.
Lemma lem6379839 {A K : Type'} (dom : A -> Prop) : (term260 A K dom) = (term261 A K dom).
Proof. exact (eq_refl (term260 A K dom)). Qed.
Lemma lem6379840 {A K : Type'} (itty : type1358 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6379841 {A K : Type'} (dom : A -> Prop) (itty : type1358 A K) : (term274 A K dom itty) = (term275 A K dom itty).
Proof. exact (MK_COMB (@lem6379839 A K dom) (@lem6379840 A K itty)). Qed.
Lemma lem6379842 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) : (term275 A K dom itty) = (term276 A K itty dom).
Proof. exact (eq_refl (term275 A K dom itty)). Qed.
Lemma lem6379843 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) : (term274 A K dom itty) = (term276 A K itty dom).
Proof. exact (TRANS (@lem6379841 A K dom itty) (@lem6379842 A K itty dom)). Qed.
Lemma lem6379844 {A K : Type'} (dom : A -> Prop) : (term277 A K dom) = (term261 A K dom).
Proof. exact (fun_ext (fun itty : type1358 A K => @lem6379843 A K itty dom)). Qed.
Lemma lem6379845 {A K : Type'} : (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379846 {A K : Type'} (dom : A -> Prop) : (term278 A K dom) = (term279 A K dom).
Proof. exact (MK_COMB (@lem6379845 A K) (@lem6379844 A K dom)). Qed.
Lemma lem6379847 {A K : Type'} : (term280 A K) = (term281 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6379846 A K dom)). Qed.
Lemma lem6379848 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6379849 {A K : Type'} : (term258 A K) = (term282 A K).
Proof. exact (MK_COMB (@lem6379848 A) (@lem6379847 A K)). Qed.
Lemma lem6379850 {A K : Type'} : ((term257 A K) = (term258 A K)) = ((term271 A K) = (term282 A K)).
Proof. exact (MK_COMB (@lem6379838 A K) (@lem6379849 A K)). Qed.
Lemma lem6379851 {A K : Type'} : (term271 A K) = (term282 A K).
Proof. exact (EQ_MP (@lem6379850 A K) (@lem6379825 A K)). Qed.
Lemma lem6379852 {A K : Type'} : (term282 A K) = (term271 A K).
Proof. exact (SYM (@lem6379851 A K)). Qed.
Lemma lem6379858 {A B : Type'} (P : type1413 A B) : (term243 A B P) = (term242 A B P).
Proof. exact (EQ_MP (@lem6379820 A B P) (@lem6379819 A B P)). Qed.
Lemma lem6379859 {A K : Type'} (P : type1355 A K) : (term283 A K P) = (term284 A K P).
Proof. exact (@lem6379858 A (type398 A K) P). Qed.
Lemma lem6379860 {A K : Type'} (dom : A -> Prop) : (term285 A K dom) = (term286 A K dom).
Proof. exact (@lem6379859 A K (term287 A K dom)). Qed.
Lemma lem6379861 {A K : Type'} (dom : A -> Prop) (neut : A) : (term288 A K dom neut) = (term289 A K dom neut).
Proof. exact (eq_refl (term288 A K dom neut)). Qed.
Lemma lem6379862 {A K : Type'} (itty : type1358 A K) (neut : A) : (itty neut) = (itty neut).
Proof. exact (eq_refl (itty neut)). Qed.
Lemma lem6379863 {A K : Type'} (dom : A -> Prop) (itty : type1358 A K) (neut : A) : (term290 A K dom itty neut) = (term291 A K dom itty neut).
Proof. exact (MK_COMB (@lem6379861 A K dom neut) (@lem6379862 A K itty neut)). Qed.
Lemma lem6379864 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) (neut : A) : (term291 A K dom itty neut) = (term292 A K itty dom neut).
Proof. exact (eq_refl (term291 A K dom itty neut)). Qed.
Lemma lem6379865 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) (neut : A) : (term290 A K dom itty neut) = (term292 A K itty dom neut).
Proof. exact (TRANS (@lem6379863 A K dom itty neut) (@lem6379864 A K itty dom neut)). Qed.
Lemma lem6379866 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) : (term293 A K dom itty) = (term294 A K itty dom).
Proof. exact (fun_ext (fun neut : A => @lem6379865 A K itty dom neut)). Qed.
Lemma lem6379867 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6379868 {A K : Type'} (itty : type1358 A K) (dom : A -> Prop) : (term295 A K dom itty) = (term276 A K itty dom).
Proof. exact (MK_COMB (@lem6379867 A) (@lem6379866 A K itty dom)). Qed.
Lemma lem6379869 {A K : Type'} (dom : A -> Prop) : (term296 A K dom) = (term261 A K dom).
Proof. exact (fun_ext (fun itty : type1358 A K => @lem6379868 A K itty dom)). Qed.
Lemma lem6379870 {A K : Type'} : (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379871 {A K : Type'} (dom : A -> Prop) : (term285 A K dom) = (term279 A K dom).
Proof. exact (MK_COMB (@lem6379870 A K) (@lem6379869 A K dom)). Qed.
Lemma lem6379872 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6379873 {A K : Type'} (dom : A -> Prop) : (term297 A K dom) = (term298 A K dom).
Proof. exact (MK_COMB (@lem6379872) (@lem6379871 A K dom)). Qed.
Lemma lem6379874 {A K : Type'} (dom : A -> Prop) (neut : A) : (term288 A K dom neut) = (term289 A K dom neut).
Proof. exact (eq_refl (term288 A K dom neut)). Qed.
Lemma lem6379875 {A K : Type'} (itty : type398 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6379876 {A K : Type'} (dom : A -> Prop) (neut : A) (itty : type398 A K) : (term299 A K dom neut itty) = (term300 A K dom neut itty).
Proof. exact (MK_COMB (@lem6379874 A K dom neut) (@lem6379875 A K itty)). Qed.
Lemma lem6379877 {A K : Type'} (itty : type398 A K) (dom : A -> Prop) (neut : A) : (term300 A K dom neut itty) = (term301 A K itty dom neut).
Proof. exact (eq_refl (term300 A K dom neut itty)). Qed.
Lemma lem6379878 {A K : Type'} (itty : type398 A K) (dom : A -> Prop) (neut : A) : (term299 A K dom neut itty) = (term301 A K itty dom neut).
Proof. exact (TRANS (@lem6379876 A K dom neut itty) (@lem6379877 A K itty dom neut)). Qed.
Lemma lem6379879 {A K : Type'} (dom : A -> Prop) (neut : A) : (term302 A K dom neut) = (term289 A K dom neut).
Proof. exact (fun_ext (fun itty : type398 A K => @lem6379878 A K itty dom neut)). Qed.
Lemma lem6379880 {A K : Type'} : (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379881 {A K : Type'} (dom : A -> Prop) (neut : A) : (term303 A K dom neut) = (term304 A K dom neut).
Proof. exact (MK_COMB (@lem6379880 A K) (@lem6379879 A K dom neut)). Qed.
Lemma lem6379882 {A K : Type'} (dom : A -> Prop) : (term305 A K dom) = (term306 A K dom).
Proof. exact (fun_ext (fun neut : A => @lem6379881 A K dom neut)). Qed.
Lemma lem6379883 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6379884 {A K : Type'} (dom : A -> Prop) : (term286 A K dom) = (term307 A K dom).
Proof. exact (MK_COMB (@lem6379883 A) (@lem6379882 A K dom)). Qed.
Lemma lem6379885 {A K : Type'} (dom : A -> Prop) : ((term285 A K dom) = (term286 A K dom)) = ((term279 A K dom) = (term307 A K dom)).
Proof. exact (MK_COMB (@lem6379873 A K dom) (@lem6379884 A K dom)). Qed.
Lemma lem6379886 {A K : Type'} (dom : A -> Prop) : (term279 A K dom) = (term307 A K dom).
Proof. exact (EQ_MP (@lem6379885 A K dom) (@lem6379860 A K dom)). Qed.
Lemma lem6379887 {A K : Type'} : (term281 A K) = (term308 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6379886 A K dom)). Qed.
Lemma lem6379888 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6379889 {A K : Type'} : (term282 A K) = (term309 A K).
Proof. exact (MK_COMB (@lem6379888 A) (@lem6379887 A K)). Qed.
Lemma lem6379890 {A K : Type'} : (term309 A K) = (term282 A K).
Proof. exact (SYM (@lem6379889 A K)). Qed.
Lemma lem6379900 {A B : Type'} (P : type1413 A B) : (term243 A B P) = (term242 A B P).
Proof. exact (EQ_MP (@lem6379820 A B P) (@lem6379819 A B P)). Qed.
Lemma lem6379901 {A K : Type'} (P : type395 A K) : (term310 A K P) = (term311 A K P).
Proof. exact (@lem6379900 (type1400 A) (type759 A K) P). Qed.
Lemma lem6379902 {A K : Type'} (dom : A -> Prop) (neut : A) : (term312 A K dom neut) = (term313 A K dom neut).
Proof. exact (@lem6379901 A K (term314 A K dom neut)). Qed.
Lemma lem6379903 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term315 A K dom neut op) = (term316 A K op dom neut).
Proof. exact (eq_refl (term315 A K dom neut op)). Qed.
Lemma lem6379904 {A K : Type'} (itty : type398 A K) (op : type1400 A) : (itty op) = (itty op).
Proof. exact (eq_refl (itty op)). Qed.
Lemma lem6379905 {A K : Type'} (dom : A -> Prop) (neut : A) (itty : type398 A K) (op : type1400 A) : (term317 A K dom neut itty op) = (term318 A K dom neut itty op).
Proof. exact (MK_COMB (@lem6379903 A K op dom neut) (@lem6379904 A K itty op)). Qed.
Lemma lem6379906 {A K : Type'} (itty : type398 A K) (op : type1400 A) (dom : A -> Prop) (neut : A) : (term318 A K dom neut itty op) = (term319 A K itty op dom neut).
Proof. exact (eq_refl (term318 A K dom neut itty op)). Qed.
Lemma lem6379907 {A K : Type'} (itty : type398 A K) (op : type1400 A) (dom : A -> Prop) (neut : A) : (term317 A K dom neut itty op) = (term319 A K itty op dom neut).
Proof. exact (TRANS (@lem6379905 A K dom neut itty op) (@lem6379906 A K itty op dom neut)). Qed.
Lemma lem6379908 {A K : Type'} (itty : type398 A K) (dom : A -> Prop) (neut : A) : (term320 A K dom neut itty) = (term321 A K itty dom neut).
Proof. exact (fun_ext (fun op : type1400 A => @lem6379907 A K itty op dom neut)). Qed.
Lemma lem6379909 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6379910 {A K : Type'} (itty : type398 A K) (dom : A -> Prop) (neut : A) : (term322 A K dom neut itty) = (term301 A K itty dom neut).
Proof. exact (MK_COMB (@lem6379909 A) (@lem6379908 A K itty dom neut)). Qed.
Lemma lem6379911 {A K : Type'} (dom : A -> Prop) (neut : A) : (term323 A K dom neut) = (term289 A K dom neut).
Proof. exact (fun_ext (fun itty : type398 A K => @lem6379910 A K itty dom neut)). Qed.
Lemma lem6379912 {A K : Type'} : (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379913 {A K : Type'} (dom : A -> Prop) (neut : A) : (term312 A K dom neut) = (term304 A K dom neut).
Proof. exact (MK_COMB (@lem6379912 A K) (@lem6379911 A K dom neut)). Qed.
Lemma lem6379914 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6379915 {A K : Type'} (dom : A -> Prop) (neut : A) : (term324 A K dom neut) = (term325 A K dom neut).
Proof. exact (MK_COMB (@lem6379914) (@lem6379913 A K dom neut)). Qed.
Lemma lem6379916 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term315 A K dom neut op) = (term316 A K op dom neut).
Proof. exact (eq_refl (term315 A K dom neut op)). Qed.
Lemma lem6379917 {A K : Type'} (itty : type759 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6379918 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (itty : type759 A K) : (term326 A K dom neut op itty) = (term327 A K op dom neut itty).
Proof. exact (MK_COMB (@lem6379916 A K op dom neut) (@lem6379917 A K itty)). Qed.
Lemma lem6379919 {A K : Type'} (op : type1400 A) (itty : type759 A K) (dom : A -> Prop) (neut : A) : (term327 A K op dom neut itty) = (term328 A K op itty dom neut).
Proof. exact (eq_refl (term327 A K op dom neut itty)). Qed.
Lemma lem6379920 {A K : Type'} (op : type1400 A) (itty : type759 A K) (dom : A -> Prop) (neut : A) : (term326 A K dom neut op itty) = (term328 A K op itty dom neut).
Proof. exact (TRANS (@lem6379918 A K op dom neut itty) (@lem6379919 A K op itty dom neut)). Qed.
Lemma lem6379921 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term329 A K dom neut op) = (term316 A K op dom neut).
Proof. exact (fun_ext (fun itty : type759 A K => @lem6379920 A K op itty dom neut)). Qed.
Lemma lem6379922 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379923 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term330 A K dom neut op) = (term331 A K op dom neut).
Proof. exact (MK_COMB (@lem6379922 A K) (@lem6379921 A K op dom neut)). Qed.
Lemma lem6379924 {A K : Type'} (dom : A -> Prop) (neut : A) : (term332 A K dom neut) = (term333 A K dom neut).
Proof. exact (fun_ext (fun op : type1400 A => @lem6379923 A K op dom neut)). Qed.
Lemma lem6379925 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6379926 {A K : Type'} (dom : A -> Prop) (neut : A) : (term313 A K dom neut) = (term334 A K dom neut).
Proof. exact (MK_COMB (@lem6379925 A) (@lem6379924 A K dom neut)). Qed.
Lemma lem6379927 {A K : Type'} (dom : A -> Prop) (neut : A) : ((term312 A K dom neut) = (term313 A K dom neut)) = ((term304 A K dom neut) = (term334 A K dom neut)).
Proof. exact (MK_COMB (@lem6379915 A K dom neut) (@lem6379926 A K dom neut)). Qed.
Lemma lem6379928 {A K : Type'} (dom : A -> Prop) (neut : A) : (term304 A K dom neut) = (term334 A K dom neut).
Proof. exact (EQ_MP (@lem6379927 A K dom neut) (@lem6379902 A K dom neut)). Qed.
Lemma lem6379929 {A K : Type'} (dom : A -> Prop) : (term306 A K dom) = (term335 A K dom).
Proof. exact (fun_ext (fun neut : A => @lem6379928 A K dom neut)). Qed.
Lemma lem6379930 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6379931 {A K : Type'} (dom : A -> Prop) : (term307 A K dom) = (term336 A K dom).
Proof. exact (MK_COMB (@lem6379930 A) (@lem6379929 A K dom)). Qed.
Lemma lem6379932 {A K : Type'} : (term308 A K) = (term337 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6379931 A K dom)). Qed.
Lemma lem6379933 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6379934 {A K : Type'} : (term309 A K) = (term338 A K).
Proof. exact (MK_COMB (@lem6379933 A) (@lem6379932 A K)). Qed.
Lemma lem6379935 {A K : Type'} : (term338 A K) = (term309 A K).
Proof. exact (SYM (@lem6379934 A K)). Qed.
Lemma lem6379949 {A B : Type'} (P : type1413 A B) : (term243 A B P) = (term242 A B P).
Proof. exact (EQ_MP (@lem6379820 A B P) (@lem6379819 A B P)). Qed.
Lemma lem6379950 {A K : Type'} (P : type754 A K) : (term339 A K P) = (term340 A K P).
Proof. exact (@lem6379949 (type1402 K) (type854 A K) P). Qed.
Lemma lem6379951 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term341 A K op dom neut) = (term342 A K op dom neut).
Proof. exact (@lem6379950 A K (term343 A K op dom neut)). Qed.
Lemma lem6379952 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term344 A K op dom neut ltle) = (term345 A K op ltle dom neut).
Proof. exact (eq_refl (term344 A K op dom neut ltle)). Qed.
Lemma lem6379953 {A K : Type'} (itty : type759 A K) (ltle : type1402 K) : (itty ltle) = (itty ltle).
Proof. exact (eq_refl (itty ltle)). Qed.
Lemma lem6379954 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (itty : type759 A K) (ltle : type1402 K) : (term346 A K op dom neut itty ltle) = (term347 A K op dom neut itty ltle).
Proof. exact (MK_COMB (@lem6379952 A K op ltle dom neut) (@lem6379953 A K itty ltle)). Qed.
Lemma lem6379955 {A K : Type'} (op : type1400 A) (itty : type759 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term347 A K op dom neut itty ltle) = (term348 A K op itty ltle dom neut).
Proof. exact (eq_refl (term347 A K op dom neut itty ltle)). Qed.
Lemma lem6379956 {A K : Type'} (op : type1400 A) (itty : type759 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term346 A K op dom neut itty ltle) = (term348 A K op itty ltle dom neut).
Proof. exact (TRANS (@lem6379954 A K op dom neut itty ltle) (@lem6379955 A K op itty ltle dom neut)). Qed.
Lemma lem6379957 {A K : Type'} (op : type1400 A) (itty : type759 A K) (dom : A -> Prop) (neut : A) : (term349 A K op dom neut itty) = (term350 A K op itty dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6379956 A K op itty ltle dom neut)). Qed.
Lemma lem6379958 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6379959 {A K : Type'} (op : type1400 A) (itty : type759 A K) (dom : A -> Prop) (neut : A) : (term351 A K op dom neut itty) = (term328 A K op itty dom neut).
Proof. exact (MK_COMB (@lem6379958 K) (@lem6379957 A K op itty dom neut)). Qed.
Lemma lem6379960 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term352 A K op dom neut) = (term316 A K op dom neut).
Proof. exact (fun_ext (fun itty : type759 A K => @lem6379959 A K op itty dom neut)). Qed.
Lemma lem6379961 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379962 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term341 A K op dom neut) = (term331 A K op dom neut).
Proof. exact (MK_COMB (@lem6379961 A K) (@lem6379960 A K op dom neut)). Qed.
Lemma lem6379963 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6379964 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term353 A K op dom neut) = (term354 A K op dom neut).
Proof. exact (MK_COMB (@lem6379963) (@lem6379962 A K op dom neut)). Qed.
Lemma lem6379965 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term344 A K op dom neut ltle) = (term345 A K op ltle dom neut).
Proof. exact (eq_refl (term344 A K op dom neut ltle)). Qed.
Lemma lem6379966 {A K : Type'} (itty : type854 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6379967 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (itty : type854 A K) : (term355 A K op dom neut ltle itty) = (term356 A K op ltle dom neut itty).
Proof. exact (MK_COMB (@lem6379965 A K op ltle dom neut) (@lem6379966 A K itty)). Qed.
Lemma lem6379968 {A K : Type'} (op : type1400 A) (itty : type854 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term356 A K op ltle dom neut itty) = (term357 A K op itty ltle dom neut).
Proof. exact (eq_refl (term356 A K op ltle dom neut itty)). Qed.
Lemma lem6379969 {A K : Type'} (op : type1400 A) (itty : type854 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term355 A K op dom neut ltle itty) = (term357 A K op itty ltle dom neut).
Proof. exact (TRANS (@lem6379967 A K op ltle dom neut itty) (@lem6379968 A K op itty ltle dom neut)). Qed.
Lemma lem6379970 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term358 A K op dom neut ltle) = (term345 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type854 A K => @lem6379969 A K op itty ltle dom neut)). Qed.
Lemma lem6379971 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> A)) = (@ex ((K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379972 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term359 A K op dom neut ltle) = (term360 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6379971 A K) (@lem6379970 A K op ltle dom neut)). Qed.
Lemma lem6379973 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term361 A K op dom neut) = (term362 A K op dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6379972 A K op ltle dom neut)). Qed.
Lemma lem6379974 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6379975 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term342 A K op dom neut) = (term363 A K op dom neut).
Proof. exact (MK_COMB (@lem6379974 K) (@lem6379973 A K op dom neut)). Qed.
Lemma lem6379976 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : ((term341 A K op dom neut) = (term342 A K op dom neut)) = ((term331 A K op dom neut) = (term363 A K op dom neut)).
Proof. exact (MK_COMB (@lem6379964 A K op dom neut) (@lem6379975 A K op dom neut)). Qed.
Lemma lem6379977 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term331 A K op dom neut) = (term363 A K op dom neut).
Proof. exact (EQ_MP (@lem6379976 A K op dom neut) (@lem6379951 A K op dom neut)). Qed.
Lemma lem6379978 {A K : Type'} (dom : A -> Prop) (neut : A) : (term333 A K dom neut) = (term364 A K dom neut).
Proof. exact (fun_ext (fun op : type1400 A => @lem6379977 A K op dom neut)). Qed.
Lemma lem6379979 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6379980 {A K : Type'} (dom : A -> Prop) (neut : A) : (term334 A K dom neut) = (term365 A K dom neut).
Proof. exact (MK_COMB (@lem6379979 A) (@lem6379978 A K dom neut)). Qed.
Lemma lem6379981 {A K : Type'} (dom : A -> Prop) : (term335 A K dom) = (term366 A K dom).
Proof. exact (fun_ext (fun neut : A => @lem6379980 A K dom neut)). Qed.
Lemma lem6379982 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6379983 {A K : Type'} (dom : A -> Prop) : (term336 A K dom) = (term367 A K dom).
Proof. exact (MK_COMB (@lem6379982 A) (@lem6379981 A K dom)). Qed.
Lemma lem6379984 {A K : Type'} : (term337 A K) = (term368 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6379983 A K dom)). Qed.
Lemma lem6379985 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6379986 {A K : Type'} : (term338 A K) = (term369 A K).
Proof. exact (MK_COMB (@lem6379985 A) (@lem6379984 A K)). Qed.
Lemma lem6379987 {A K : Type'} : (term369 A K) = (term338 A K).
Proof. exact (SYM (@lem6379986 A K)). Qed.
Lemma lem6379989 {A B C : Type'} (P : type443 A B C) : (term253 A B C P) = (term254 A B C P).
Proof. exact (EQ_MP (@lem6379807 A B C P) (@lem6379806 A B C P)). Qed.
Lemma lem6379990 {A K : Type'} (P : type223 A K) : (term370 A K P) = (term371 A K P).
Proof. exact (@lem6379989 (K -> Prop) (K -> A) A P). Qed.
Lemma lem6379991 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term372 A K op ltle dom neut) = (term373 A K op ltle dom neut).
Proof. exact (@lem6379990 A K (term345 A K op ltle dom neut)). Qed.
Lemma lem6379992 {A K : Type'} (op : type1400 A) (itty : type854 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term356 A K op ltle dom neut itty) = (term357 A K op itty ltle dom neut).
Proof. exact (eq_refl (term356 A K op ltle dom neut itty)). Qed.
Lemma lem6379993 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term374 A K op ltle dom neut) = (term345 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type854 A K => @lem6379992 A K op itty ltle dom neut)). Qed.
Lemma lem6379994 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> A)) = (@ex ((K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6379995 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term372 A K op ltle dom neut) = (term360 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6379994 A K) (@lem6379993 A K op ltle dom neut)). Qed.
Lemma lem6379996 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6379997 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term375 A K op ltle dom neut) = (term376 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6379996) (@lem6379995 A K op ltle dom neut)). Qed.
Lemma lem6379998 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term377 A K op ltle dom neut itty) = (term378 A K op itty ltle dom neut).
Proof. exact (eq_refl (term377 A K op ltle dom neut itty)). Qed.
Lemma lem6379999 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term379 A K op ltle dom neut) = (term380 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type790 A K => @lem6379998 A K op itty ltle dom neut)). Qed.
Lemma lem6380000 {A K : Type'} : (@ex ((K -> A) -> (K -> Prop) -> A)) = (@ex ((K -> A) -> (K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> A) -> (K -> Prop) -> A))). Qed.
Lemma lem6380001 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term373 A K op ltle dom neut) = (term381 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380000 A K) (@lem6379999 A K op ltle dom neut)). Qed.
Lemma lem6380002 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : ((term372 A K op ltle dom neut) = (term373 A K op ltle dom neut)) = ((term360 A K op ltle dom neut) = (term381 A K op ltle dom neut)).
Proof. exact (MK_COMB (@lem6379997 A K op ltle dom neut) (@lem6380001 A K op ltle dom neut)). Qed.
Lemma lem6380003 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term360 A K op ltle dom neut) = (term381 A K op ltle dom neut).
Proof. exact (EQ_MP (@lem6380002 A K op ltle dom neut) (@lem6379991 A K op ltle dom neut)). Qed.
Lemma lem6380004 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term381 A K op ltle dom neut) = (term360 A K op ltle dom neut).
Proof. exact (SYM (@lem6380003 A K op ltle dom neut)). Qed.
Lemma lem6380020 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380021 {A K : Type'} (f : type854 A K) (y : K -> Prop) : (term383 A K f y) = (f y).
Proof. exact (@lem6380020 (K -> Prop) (type802 A K) f y). Qed.
Lemma lem6380022 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term384 A K itty k) = (term385 A K itty k).
Proof. exact (@lem6380021 A K (term386 A K itty) k). Qed.
Lemma lem6380023 {A K : Type'} (itty : type790 A K) (a : K -> Prop) : (term385 A K itty a) = (term387 A K itty a).
Proof. exact (eq_refl (term385 A K itty a)). Qed.
Lemma lem6380024 {A K : Type'} (itty : type790 A K) : (term388 A K itty) = (term386 A K itty).
Proof. exact (fun_ext (fun a : K -> Prop => @lem6380023 A K itty a)). Qed.
Lemma lem6380025 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380026 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term384 A K itty k) = (term385 A K itty k).
Proof. exact (MK_COMB (@lem6380024 A K itty) (@lem6380025 K k)). Qed.
Lemma lem6380027 {A K : Type'} : (@eq ((K -> A) -> A)) = (@eq ((K -> A) -> A)).
Proof. exact (eq_refl (@eq ((K -> A) -> A))). Qed.
Lemma lem6380028 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term389 A K itty k) = (term390 A K itty k).
Proof. exact (MK_COMB (@lem6380027 A K) (@lem6380026 A K itty k)). Qed.
Lemma lem6380029 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term385 A K itty k) = (term387 A K itty k).
Proof. exact (eq_refl (term385 A K itty k)). Qed.
Lemma lem6380030 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : ((term384 A K itty k) = (term385 A K itty k)) = ((term385 A K itty k) = (term387 A K itty k)).
Proof. exact (MK_COMB (@lem6380028 A K itty k) (@lem6380029 A K itty k)). Qed.
Lemma lem6380031 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term385 A K itty k) = (term387 A K itty k).
Proof. exact (EQ_MP (@lem6380030 A K itty k) (@lem6380022 A K itty k)). Qed.
Lemma lem6380032 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380033 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (f : K -> A) : (term391 A K itty k f) = (term392 A K itty k f).
Proof. exact (MK_COMB (@lem6380031 A K itty k) (@lem6380032 A K f)). Qed.
Lemma lem6380035 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380036 {A K : Type'} (f : type802 A K) (y : K -> A) : (term393 A K f y) = (f y).
Proof. exact (@lem6380035 (K -> A) A f y). Qed.
Lemma lem6380037 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (f : K -> A) : (term394 A K itty k f) = (term392 A K itty k f).
Proof. exact (@lem6380036 A K (term387 A K itty k) f). Qed.
Lemma lem6380038 {A K : Type'} (itty : type790 A K) (b : K -> A) (k : K -> Prop) : (term392 A K itty k b) = (itty b k).
Proof. exact (eq_refl (term392 A K itty k b)). Qed.
Lemma lem6380039 {A K : Type'} (itty : type790 A K) (k : K -> Prop) : (term395 A K itty k) = (term387 A K itty k).
Proof. exact (fun_ext (fun b : K -> A => @lem6380038 A K itty b k)). Qed.
Lemma lem6380040 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380041 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (f : K -> A) : (term394 A K itty k f) = (term392 A K itty k f).
Proof. exact (MK_COMB (@lem6380039 A K itty k) (@lem6380040 A K f)). Qed.
Lemma lem6380042 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6380043 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (f : K -> A) : (term396 A K itty k f) = (term397 A K itty k f).
Proof. exact (MK_COMB (@lem6380042 A) (@lem6380041 A K itty k f)). Qed.
Lemma lem6380044 {A K : Type'} (itty : type790 A K) (f : K -> A) (k : K -> Prop) : (term392 A K itty k f) = (itty f k).
Proof. exact (eq_refl (term392 A K itty k f)). Qed.
Lemma lem6380045 {A K : Type'} (itty : type790 A K) (f : K -> A) (k : K -> Prop) : ((term394 A K itty k f) = (term392 A K itty k f)) = ((term392 A K itty k f) = (itty f k)).
Proof. exact (MK_COMB (@lem6380043 A K itty k f) (@lem6380044 A K itty f k)). Qed.
Lemma lem6380046 {A K : Type'} (itty : type790 A K) (f : K -> A) (k : K -> Prop) : (term392 A K itty k f) = (itty f k).
Proof. exact (EQ_MP (@lem6380045 A K itty f k) (@lem6380037 A K itty k f)). Qed.
Lemma lem6380047 {A K : Type'} (itty : type790 A K) (f : K -> A) (k : K -> Prop) : (term391 A K itty k f) = (itty f k).
Proof. exact (TRANS (@lem6380033 A K itty k f) (@lem6380046 A K itty f k)). Qed.
Lemma lem6380048 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6380049 {A K : Type'} (itty : type790 A K) (f : K -> A) (k : K -> Prop) : (term398 A K itty k f) = (term399 A K itty f k).
Proof. exact (MK_COMB (@lem6380048 A) (@lem6380047 A K itty f k)). Qed.
Lemma lem6380067 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380068 {A K : Type'} (f : type854 A K) (y : K -> Prop) : (term383 A K f y) = (f y).
Proof. exact (@lem6380067 (K -> Prop) (type802 A K) f y). Qed.
Lemma lem6380069 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term400 A K itty k i f dom neut) = (term401 A K itty k i f dom neut).
Proof. exact (@lem6380068 A K (term386 A K itty) (term402 A K k i f dom neut)). Qed.
Lemma lem6380070 {A K : Type'} (itty : type790 A K) (a : K -> Prop) : (term385 A K itty a) = (term387 A K itty a).
Proof. exact (eq_refl (term385 A K itty a)). Qed.
Lemma lem6380071 {A K : Type'} (itty : type790 A K) : (term388 A K itty) = (term386 A K itty).
Proof. exact (fun_ext (fun a : K -> Prop => @lem6380070 A K itty a)). Qed.
Lemma lem6380072 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term402 A K k i f dom neut) = (term402 A K k i f dom neut).
Proof. exact (eq_refl (term402 A K k i f dom neut)). Qed.
Lemma lem6380073 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term400 A K itty k i f dom neut) = (term401 A K itty k i f dom neut).
Proof. exact (MK_COMB (@lem6380071 A K itty) (@lem6380072 A K k i f dom neut)). Qed.
Lemma lem6380074 {A K : Type'} : (@eq ((K -> A) -> A)) = (@eq ((K -> A) -> A)).
Proof. exact (eq_refl (@eq ((K -> A) -> A))). Qed.
Lemma lem6380075 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term403 A K itty k i f dom neut) = (term404 A K itty k i f dom neut).
Proof. exact (MK_COMB (@lem6380074 A K) (@lem6380073 A K itty k i f dom neut)). Qed.
Lemma lem6380076 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term401 A K itty k i f dom neut) = (term405 A K itty k i f dom neut).
Proof. exact (eq_refl (term401 A K itty k i f dom neut)). Qed.
Lemma lem6380077 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term400 A K itty k i f dom neut) = (term401 A K itty k i f dom neut)) = ((term401 A K itty k i f dom neut) = (term405 A K itty k i f dom neut)).
Proof. exact (MK_COMB (@lem6380075 A K itty k i f dom neut) (@lem6380076 A K itty k i f dom neut)). Qed.
Lemma lem6380078 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term401 A K itty k i f dom neut) = (term405 A K itty k i f dom neut).
Proof. exact (EQ_MP (@lem6380077 A K itty k i f dom neut) (@lem6380069 A K itty k i f dom neut)). Qed.
Lemma lem6380085 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380086 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term406 A K itty k i dom neut f) = (term407 A K itty k i dom neut f).
Proof. exact (MK_COMB (@lem6380078 A K itty k i f dom neut) (@lem6380085 A K f)). Qed.
Lemma lem6380088 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380089 {A K : Type'} (f : type802 A K) (y : K -> A) : (term393 A K f y) = (f y).
Proof. exact (@lem6380088 (K -> A) A f y). Qed.
Lemma lem6380090 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term408 A K itty k i dom neut f) = (term407 A K itty k i dom neut f).
Proof. exact (@lem6380089 A K (term405 A K itty k i f dom neut) f). Qed.
Lemma lem6380091 {A K : Type'} (itty : type790 A K) (b : K -> A) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term409 A K itty k i f dom neut b) = (term410 A K itty b k i f dom neut).
Proof. exact (eq_refl (term409 A K itty k i f dom neut b)). Qed.
Lemma lem6380092 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term411 A K itty k i f dom neut) = (term405 A K itty k i f dom neut).
Proof. exact (fun_ext (fun b : K -> A => @lem6380091 A K itty b k i f dom neut)). Qed.
Lemma lem6380093 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380094 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term408 A K itty k i dom neut f) = (term407 A K itty k i dom neut f).
Proof. exact (MK_COMB (@lem6380092 A K itty k i f dom neut) (@lem6380093 A K f)). Qed.
Lemma lem6380095 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6380096 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : (term412 A K itty k i dom neut f) = (term413 A K itty k i dom neut f).
Proof. exact (MK_COMB (@lem6380095 A) (@lem6380094 A K itty k i dom neut f)). Qed.
Lemma lem6380097 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term407 A K itty k i dom neut f) = (term414 A K itty k i f dom neut).
Proof. exact (eq_refl (term407 A K itty k i dom neut f)). Qed.
Lemma lem6380098 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term408 A K itty k i dom neut f) = (term407 A K itty k i dom neut f)) = ((term407 A K itty k i dom neut f) = (term414 A K itty k i f dom neut)).
Proof. exact (MK_COMB (@lem6380096 A K itty k i dom neut f) (@lem6380097 A K itty k i f dom neut)). Qed.
Lemma lem6380099 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term407 A K itty k i dom neut f) = (term414 A K itty k i f dom neut).
Proof. exact (EQ_MP (@lem6380098 A K itty k i f dom neut) (@lem6380090 A K itty k i dom neut f)). Qed.
Lemma lem6380106 {A K : Type'} (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term406 A K itty k i dom neut f) = (term414 A K itty k i f dom neut).
Proof. exact (TRANS (@lem6380086 A K itty k i dom neut f) (@lem6380099 A K itty k i f dom neut)). Qed.
Lemma lem6380107 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) : (term415 A K op f i) = (term415 A K op f i).
Proof. exact (eq_refl (term415 A K op f i)). Qed.
Lemma lem6380108 {A K : Type'} (op : type1400 A) (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term416 A K op itty k i dom neut f) = (term417 A K op itty k i f dom neut).
Proof. exact (MK_COMB (@lem6380107 A K op f i) (@lem6380106 A K itty k i f dom neut)). Qed.
Lemma lem6380109 {A : Type'} : (@LET_END A) = (@LET_END A).
Proof. exact (eq_refl (@LET_END A)). Qed.
Lemma lem6380110 {A K : Type'} (op : type1400 A) (itty : type790 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term418 A K op itty k i dom neut f) = (term419 A K op itty k i f dom neut).
Proof. exact (MK_COMB (@lem6380109 A) (@lem6380108 A K op itty k i f dom neut)). Qed.
Lemma lem6380111 {A K : Type'} (op : type1400 A) (itty : type790 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term420 A K op itty k dom neut f) = (term421 A K op itty k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6380110 A K op itty k i f dom neut)). Qed.
Lemma lem6380112 {A K : Type'} : (@LET K A) = (@LET K A).
Proof. exact (eq_refl (@LET K A)). Qed.
Lemma lem6380113 {A K : Type'} (op : type1400 A) (itty : type790 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term422 A K op itty k dom neut f) = (term423 A K op itty k f dom neut).
Proof. exact (MK_COMB (@lem6380112 A K) (@lem6380111 A K op itty k f dom neut)). Qed.
Lemma lem6380152 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term424 A K ltle k f dom neut) = (term424 A K ltle k f dom neut).
Proof. exact (eq_refl (term424 A K ltle k f dom neut)). Qed.
Lemma lem6380153 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term425 A K op itty ltle k f dom neut) = (term426 A K op itty ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380113 A K op itty k f dom neut) (@lem6380152 A K ltle k f dom neut)). Qed.
Lemma lem6380154 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term427 A K k f dom neut) = (term427 A K k f dom neut).
Proof. exact (eq_refl (term427 A K k f dom neut)). Qed.
Lemma lem6380155 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term428 A K op itty ltle k f dom neut) = (term429 A K op itty ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380154 A K k f dom neut) (@lem6380153 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380156 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6380157 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term430 A K op itty ltle k f dom neut) = (term431 A K op itty ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380155 A K op itty ltle k f dom neut) (@lem6380156 A neut)). Qed.
Lemma lem6380158 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term391 A K itty k f) = (term430 A K op itty ltle k f dom neut)) = ((itty f k) = (term431 A K op itty ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6380049 A K itty f k) (@lem6380157 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380161 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term432 A K op itty ltle k dom neut) = (term433 A K op itty ltle k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6380158 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380162 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6380163 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term434 A K op itty ltle k dom neut) = (term435 A K op itty ltle k dom neut).
Proof. exact (MK_COMB (@lem6380162 A K) (@lem6380161 A K op itty ltle k dom neut)). Qed.
Lemma lem6380168 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term436 A K op itty ltle dom neut) = (term437 A K op itty ltle dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380163 A K op itty ltle k dom neut)). Qed.
Lemma lem6380169 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380170 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term378 A K op itty ltle dom neut) = (term438 A K op itty ltle dom neut).
Proof. exact (MK_COMB (@lem6380169 K) (@lem6380168 A K op itty ltle dom neut)). Qed.
Lemma lem6380175 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term380 A K op ltle dom neut) = (term439 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type790 A K => @lem6380170 A K op itty ltle dom neut)). Qed.
Lemma lem6380176 {A K : Type'} : (@ex ((K -> A) -> (K -> Prop) -> A)) = (@ex ((K -> A) -> (K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> A) -> (K -> Prop) -> A))). Qed.
Lemma lem6380177 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term381 A K op ltle dom neut) = (term440 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380176 A K) (@lem6380175 A K op ltle dom neut)). Qed.
Lemma lem6380182 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term440 A K op ltle dom neut) = (term381 A K op ltle dom neut).
Proof. exact (SYM (@lem6380177 A K op ltle dom neut)). Qed.
Lemma lem6380184 {A B : Type'} (P : type1413 A B) : (term250 A B P) = (term251 A B P).
Proof. exact (EQ_MP (@lem6379804 A B P) (@lem6379803 A B P)). Qed.
Lemma lem6380185 {A K : Type'} (P : type856 A K) : (term441 A K P) = (term442 A K P).
Proof. exact (@lem6380184 (K -> Prop) (K -> A) P). Qed.
Lemma lem6380186 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term443 A K op itty ltle dom neut) = (term444 A K op itty ltle dom neut).
Proof. exact (@lem6380185 A K (term445 A K op itty ltle dom neut)). Qed.
Lemma lem6380187 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term446 A K op itty ltle dom neut k) = (term433 A K op itty ltle k dom neut).
Proof. exact (eq_refl (term446 A K op itty ltle dom neut k)). Qed.
Lemma lem6380188 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380189 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term447 A K op itty ltle dom neut k f) = (term448 A K op itty ltle k dom neut f).
Proof. exact (MK_COMB (@lem6380187 A K op itty ltle k dom neut) (@lem6380188 A K f)). Qed.
Lemma lem6380190 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term448 A K op itty ltle k dom neut f) = ((itty f k) = (term431 A K op itty ltle k f dom neut)).
Proof. exact (eq_refl (term448 A K op itty ltle k dom neut f)). Qed.
Lemma lem6380191 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term447 A K op itty ltle dom neut k f) = ((itty f k) = (term431 A K op itty ltle k f dom neut)).
Proof. exact (TRANS (@lem6380189 A K op itty ltle k dom neut f) (@lem6380190 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380192 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term449 A K op itty ltle dom neut k) = (term433 A K op itty ltle k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6380191 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380193 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6380194 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term450 A K op itty ltle dom neut k) = (term435 A K op itty ltle k dom neut).
Proof. exact (MK_COMB (@lem6380193 A K) (@lem6380192 A K op itty ltle k dom neut)). Qed.
Lemma lem6380195 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term451 A K op itty ltle dom neut) = (term437 A K op itty ltle dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380194 A K op itty ltle k dom neut)). Qed.
Lemma lem6380196 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380197 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term443 A K op itty ltle dom neut) = (term438 A K op itty ltle dom neut).
Proof. exact (MK_COMB (@lem6380196 K) (@lem6380195 A K op itty ltle dom neut)). Qed.
Lemma lem6380198 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380199 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term452 A K op itty ltle dom neut) = (term453 A K op itty ltle dom neut).
Proof. exact (MK_COMB (@lem6380198) (@lem6380197 A K op itty ltle dom neut)). Qed.
Lemma lem6380200 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term446 A K op itty ltle dom neut k) = (term433 A K op itty ltle k dom neut).
Proof. exact (eq_refl (term446 A K op itty ltle dom neut k)). Qed.
Lemma lem6380201 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6380202 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term447 A K op itty ltle dom neut k f) = (term448 A K op itty ltle k dom neut f).
Proof. exact (MK_COMB (@lem6380200 A K op itty ltle k dom neut) (@lem6380201 A K f)). Qed.
Lemma lem6380203 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term448 A K op itty ltle k dom neut f) = ((itty f k) = (term431 A K op itty ltle k f dom neut)).
Proof. exact (eq_refl (term448 A K op itty ltle k dom neut f)). Qed.
Lemma lem6380204 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term447 A K op itty ltle dom neut k f) = ((itty f k) = (term431 A K op itty ltle k f dom neut)).
Proof. exact (TRANS (@lem6380202 A K op itty ltle k dom neut f) (@lem6380203 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380205 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term454 A K op itty ltle dom neut f) = (term455 A K op itty ltle f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380204 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380206 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380207 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term456 A K op itty ltle dom neut f) = (term457 A K op itty ltle f dom neut).
Proof. exact (MK_COMB (@lem6380206 K) (@lem6380205 A K op itty ltle f dom neut)). Qed.
Lemma lem6380208 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term458 A K op itty ltle dom neut) = (term459 A K op itty ltle dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6380207 A K op itty ltle f dom neut)). Qed.
Lemma lem6380209 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6380210 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term444 A K op itty ltle dom neut) = (term460 A K op itty ltle dom neut).
Proof. exact (MK_COMB (@lem6380209 A K) (@lem6380208 A K op itty ltle dom neut)). Qed.
Lemma lem6380211 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : ((term443 A K op itty ltle dom neut) = (term444 A K op itty ltle dom neut)) = ((term438 A K op itty ltle dom neut) = (term460 A K op itty ltle dom neut)).
Proof. exact (MK_COMB (@lem6380199 A K op itty ltle dom neut) (@lem6380210 A K op itty ltle dom neut)). Qed.
Lemma lem6380212 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term438 A K op itty ltle dom neut) = (term460 A K op itty ltle dom neut).
Proof. exact (EQ_MP (@lem6380211 A K op itty ltle dom neut) (@lem6380186 A K op itty ltle dom neut)). Qed.
Lemma lem6380213 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term439 A K op ltle dom neut) = (term461 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type790 A K => @lem6380212 A K op itty ltle dom neut)). Qed.
Lemma lem6380214 {A K : Type'} : (@ex ((K -> A) -> (K -> Prop) -> A)) = (@ex ((K -> A) -> (K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> A) -> (K -> Prop) -> A))). Qed.
Lemma lem6380215 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term440 A K op ltle dom neut) = (term462 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380214 A K) (@lem6380213 A K op ltle dom neut)). Qed.
Lemma lem6380216 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term462 A K op ltle dom neut) = (term440 A K op ltle dom neut).
Proof. exact (SYM (@lem6380215 A K op ltle dom neut)). Qed.
Lemma lem6380218 {A B : Type'} (P : type1413 A B) : (term243 A B P) = (term242 A B P).
Proof. exact (EQ_MP (@lem6379801 A B P) (@lem6379800 A B P)). Qed.
Lemma lem6380219 {A K : Type'} (P : type775 A K) : (term463 A K P) = (term464 A K P).
Proof. exact (@lem6380218 (K -> A) (type862 A K) P). Qed.
Lemma lem6380220 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term465 A K op ltle dom neut) = (term466 A K op ltle dom neut).
Proof. exact (@lem6380219 A K (term467 A K op ltle dom neut)). Qed.
Lemma lem6380221 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term468 A K op ltle dom neut f) = (term469 A K op ltle f dom neut).
Proof. exact (eq_refl (term468 A K op ltle dom neut f)). Qed.
Lemma lem6380222 {A K : Type'} (itty : type790 A K) (f : K -> A) : (itty f) = (itty f).
Proof. exact (eq_refl (itty f)). Qed.
Lemma lem6380223 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (itty : type790 A K) (f : K -> A) : (term470 A K op ltle dom neut itty f) = (term471 A K op ltle dom neut itty f).
Proof. exact (MK_COMB (@lem6380221 A K op ltle f dom neut) (@lem6380222 A K itty f)). Qed.
Lemma lem6380224 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term471 A K op ltle dom neut itty f) = (term457 A K op itty ltle f dom neut).
Proof. exact (eq_refl (term471 A K op ltle dom neut itty f)). Qed.
Lemma lem6380225 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term470 A K op ltle dom neut itty f) = (term457 A K op itty ltle f dom neut).
Proof. exact (TRANS (@lem6380223 A K op ltle dom neut itty f) (@lem6380224 A K op itty ltle f dom neut)). Qed.
Lemma lem6380226 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term472 A K op ltle dom neut itty) = (term459 A K op itty ltle dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6380225 A K op itty ltle f dom neut)). Qed.
Lemma lem6380227 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6380228 {A K : Type'} (op : type1400 A) (itty : type790 A K) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term473 A K op ltle dom neut itty) = (term460 A K op itty ltle dom neut).
Proof. exact (MK_COMB (@lem6380227 A K) (@lem6380226 A K op itty ltle dom neut)). Qed.
Lemma lem6380229 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term474 A K op ltle dom neut) = (term461 A K op ltle dom neut).
Proof. exact (fun_ext (fun itty : type790 A K => @lem6380228 A K op itty ltle dom neut)). Qed.
Lemma lem6380230 {A K : Type'} : (@ex ((K -> A) -> (K -> Prop) -> A)) = (@ex ((K -> A) -> (K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> A) -> (K -> Prop) -> A))). Qed.
Lemma lem6380231 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term465 A K op ltle dom neut) = (term462 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380230 A K) (@lem6380229 A K op ltle dom neut)). Qed.
Lemma lem6380232 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380233 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term475 A K op ltle dom neut) = (term476 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380232) (@lem6380231 A K op ltle dom neut)). Qed.
Lemma lem6380234 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term468 A K op ltle dom neut f) = (term469 A K op ltle f dom neut).
Proof. exact (eq_refl (term468 A K op ltle dom neut f)). Qed.
Lemma lem6380235 {A K : Type'} (itty : type862 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6380236 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) : (term477 A K op ltle dom neut f itty) = (term478 A K op ltle f dom neut itty).
Proof. exact (MK_COMB (@lem6380234 A K op ltle f dom neut) (@lem6380235 A K itty)). Qed.
Lemma lem6380237 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term478 A K op ltle f dom neut itty) = (term479 A K op itty ltle f dom neut).
Proof. exact (eq_refl (term478 A K op ltle f dom neut itty)). Qed.
Lemma lem6380238 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term477 A K op ltle dom neut f itty) = (term479 A K op itty ltle f dom neut).
Proof. exact (TRANS (@lem6380236 A K op ltle f dom neut itty) (@lem6380237 A K op itty ltle f dom neut)). Qed.
Lemma lem6380239 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term480 A K op ltle dom neut f) = (term469 A K op ltle f dom neut).
Proof. exact (fun_ext (fun itty : type862 A K => @lem6380238 A K op itty ltle f dom neut)). Qed.
Lemma lem6380240 {A K : Type'} : (@ex ((K -> Prop) -> A)) = (@ex ((K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> A))). Qed.
Lemma lem6380241 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term481 A K op ltle dom neut f) = (term482 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380240 A K) (@lem6380239 A K op ltle f dom neut)). Qed.
Lemma lem6380242 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term483 A K op ltle dom neut) = (term484 A K op ltle dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6380241 A K op ltle f dom neut)). Qed.
Lemma lem6380243 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6380244 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term466 A K op ltle dom neut) = (term485 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6380243 A K) (@lem6380242 A K op ltle dom neut)). Qed.
Lemma lem6380245 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : ((term465 A K op ltle dom neut) = (term466 A K op ltle dom neut)) = ((term462 A K op ltle dom neut) = (term485 A K op ltle dom neut)).
Proof. exact (MK_COMB (@lem6380233 A K op ltle dom neut) (@lem6380244 A K op ltle dom neut)). Qed.
Lemma lem6380246 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term462 A K op ltle dom neut) = (term485 A K op ltle dom neut).
Proof. exact (EQ_MP (@lem6380245 A K op ltle dom neut) (@lem6380220 A K op ltle dom neut)). Qed.
Lemma lem6380247 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term485 A K op ltle dom neut) = (term462 A K op ltle dom neut).
Proof. exact (SYM (@lem6380246 A K op ltle dom neut)). Qed.
Lemma lem6380249 {A B K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 B K) : term237 A B K f dom neut H.
Proof. exact (EQ_MP (@lem6379788 A B K f dom neut H) (@lem6379787 A B K f dom neut H)). Qed.
Lemma lem6380250 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (H : type229 A K) : term486 A K f dom neut H.
Proof. exact (@lem6380249 A A K f dom neut H). Qed.
Lemma lem6380251 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term487 A K op ltle f dom neut.
Proof. exact (@lem6380250 A K f dom neut (term488 A K op ltle f dom neut)). Qed.
Lemma lem6380252 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term489 A K op ltle f dom neut itty) = (term490 A K op itty ltle f dom neut).
Proof. exact (eq_refl (term489 A K op ltle f dom neut itty)). Qed.
Lemma lem6380253 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380254 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term491 A K op ltle f dom neut itty k) = (term492 A K op itty ltle f dom neut k).
Proof. exact (MK_COMB (@lem6380252 A K op itty ltle f dom neut) (@lem6380253 K k)). Qed.
Lemma lem6380255 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term492 A K op itty ltle f dom neut k) = (term493 A K op itty ltle k f dom neut).
Proof. exact (eq_refl (term492 A K op itty ltle f dom neut k)). Qed.
Lemma lem6380256 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term491 A K op ltle f dom neut itty k) = (term493 A K op itty ltle k f dom neut).
Proof. exact (TRANS (@lem6380254 A K op itty ltle f dom neut k) (@lem6380255 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380257 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6380258 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term494 A K op ltle f dom neut itty k) = (term495 A K op itty ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380257 A) (@lem6380256 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380259 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term489 A K op ltle f dom neut g) = (term490 A K op g ltle f dom neut).
Proof. exact (eq_refl (term489 A K op ltle f dom neut g)). Qed.
Lemma lem6380260 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380261 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term491 A K op ltle f dom neut g k) = (term492 A K op g ltle f dom neut k).
Proof. exact (MK_COMB (@lem6380259 A K op g ltle f dom neut) (@lem6380260 K k)). Qed.
Lemma lem6380262 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term492 A K op g ltle f dom neut k) = (term493 A K op g ltle k f dom neut).
Proof. exact (eq_refl (term492 A K op g ltle f dom neut k)). Qed.
Lemma lem6380263 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term491 A K op ltle f dom neut g k) = (term493 A K op g ltle k f dom neut).
Proof. exact (TRANS (@lem6380261 A K op g ltle f dom neut k) (@lem6380262 A K op g ltle k f dom neut)). Qed.
Lemma lem6380264 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term491 A K op ltle f dom neut itty k) = (term491 A K op ltle f dom neut g k)) = ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6380258 A K op itty ltle k f dom neut) (@lem6380263 A K op g ltle k f dom neut)). Qed.
Lemma lem6380265 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (itty : type862 A K) (g : type862 A K) : (term496 A K f dom neut k itty g) = (term496 A K f dom neut k itty g).
Proof. exact (eq_refl (term496 A K f dom neut k itty g)). Qed.
Lemma lem6380266 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term497 A K itty op ltle f dom neut g k) = (term498 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380265 A K f dom neut k itty g) (@lem6380264 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380267 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term499 A K itty op ltle f dom neut g) = (term500 A K itty op g ltle f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380266 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380268 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380269 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term501 A K itty op ltle f dom neut g) = (term502 A K itty op g ltle f dom neut).
Proof. exact (MK_COMB (@lem6380268 K) (@lem6380267 A K itty op g ltle f dom neut)). Qed.
Lemma lem6380270 {A K : Type'} (itty : type862 A K) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term503 A K itty op ltle f dom neut) = (term504 A K itty op ltle f dom neut).
Proof. exact (fun_ext (fun g : type862 A K => @lem6380269 A K itty op g ltle f dom neut)). Qed.
Lemma lem6380271 {A K : Type'} : (@all ((K -> Prop) -> A)) = (@all ((K -> Prop) -> A)).
Proof. exact (eq_refl (@all ((K -> Prop) -> A))). Qed.
Lemma lem6380272 {A K : Type'} (itty : type862 A K) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term505 A K itty op ltle f dom neut) = (term506 A K itty op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380271 A K) (@lem6380270 A K itty op ltle f dom neut)). Qed.
Lemma lem6380273 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term507 A K op ltle f dom neut) = (term508 A K op ltle f dom neut).
Proof. exact (fun_ext (fun itty : type862 A K => @lem6380272 A K itty op ltle f dom neut)). Qed.
Lemma lem6380274 {A K : Type'} : (@all ((K -> Prop) -> A)) = (@all ((K -> Prop) -> A)).
Proof. exact (eq_refl (@all ((K -> Prop) -> A))). Qed.
Lemma lem6380275 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term509 A K op ltle f dom neut) = (term510 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380274 A K) (@lem6380273 A K op ltle f dom neut)). Qed.
Lemma lem6380276 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6380277 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term511 A K op ltle f dom neut) = (term512 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380276) (@lem6380275 A K op ltle f dom neut)). Qed.
Lemma lem6380278 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term489 A K op ltle f dom neut itty) = (term490 A K op itty ltle f dom neut).
Proof. exact (eq_refl (term489 A K op ltle f dom neut itty)). Qed.
Lemma lem6380279 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380280 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term491 A K op ltle f dom neut itty k) = (term492 A K op itty ltle f dom neut k).
Proof. exact (MK_COMB (@lem6380278 A K op itty ltle f dom neut) (@lem6380279 K k)). Qed.
Lemma lem6380281 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term492 A K op itty ltle f dom neut k) = (term493 A K op itty ltle k f dom neut).
Proof. exact (eq_refl (term492 A K op itty ltle f dom neut k)). Qed.
Lemma lem6380282 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term491 A K op ltle f dom neut itty k) = (term493 A K op itty ltle k f dom neut).
Proof. exact (TRANS (@lem6380280 A K op itty ltle f dom neut k) (@lem6380281 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380283 {A K : Type'} (itty : type862 A K) (k : K -> Prop) : (term513 A K itty k) = (term513 A K itty k).
Proof. exact (eq_refl (term513 A K itty k)). Qed.
Lemma lem6380284 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((itty k) = (term491 A K op ltle f dom neut itty k)) = ((itty k) = (term493 A K op itty ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6380283 A K itty k) (@lem6380282 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380285 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term514 A K op ltle f dom neut itty) = (term515 A K op itty ltle f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380284 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380286 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380287 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term516 A K op ltle f dom neut itty) = (term479 A K op itty ltle f dom neut).
Proof. exact (MK_COMB (@lem6380286 K) (@lem6380285 A K op itty ltle f dom neut)). Qed.
Lemma lem6380288 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term517 A K op ltle f dom neut) = (term469 A K op ltle f dom neut).
Proof. exact (fun_ext (fun itty : type862 A K => @lem6380287 A K op itty ltle f dom neut)). Qed.
Lemma lem6380289 {A K : Type'} : (@ex ((K -> Prop) -> A)) = (@ex ((K -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> A))). Qed.
Lemma lem6380290 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term518 A K op ltle f dom neut) = (term482 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380289 A K) (@lem6380288 A K op ltle f dom neut)). Qed.
Lemma lem6380291 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term487 A K op ltle f dom neut) = (term519 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380277 A K op ltle f dom neut) (@lem6380290 A K op ltle f dom neut)). Qed.
Lemma lem6380292 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term519 A K op ltle f dom neut.
Proof. exact (EQ_MP (@lem6380291 A K op ltle f dom neut) (@lem6380251 A K op ltle f dom neut)). Qed.
Lemma lem6380314 {_16406 : Type'} (m : _16406 -> nat) : (@MEASURE _16406 m) = (term226 _16406 m).
Proof. exact (EQ_MP (@lem6379763 _16406 m) (@lem6379762 _16406 m)). Qed.
Lemma lem6380315 {K : Type'} (m : type687 K) : (@MEASURE (K -> Prop) m) = (term520 K m).
Proof. exact (@lem6380314 (K -> Prop) m). Qed.
Lemma lem6380316 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term234 A K f dom neut) = (term521 A K f dom neut).
Proof. exact (@lem6380315 K (term229 A K f dom neut)). Qed.
Lemma lem6380318 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380319 {K : Type'} (f : type687 K) (y : K -> Prop) : (term522 K f y) = (f y).
Proof. exact (@lem6380318 (K -> Prop) nat f y). Qed.
Lemma lem6380320 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (x : K -> Prop) : (term523 A K f dom neut x) = (term524 A K f dom neut x).
Proof. exact (@lem6380319 K (term229 A K f dom neut) x). Qed.
Lemma lem6380321 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut k) = (term525 A K k f dom neut).
Proof. exact (eq_refl (term524 A K f dom neut k)). Qed.
Lemma lem6380322 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term526 A K f dom neut) = (term229 A K f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380321 A K k f dom neut)). Qed.
Lemma lem6380323 {K : Type'} (x : K -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6380324 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (x : K -> Prop) : (term523 A K f dom neut x) = (term524 A K f dom neut x).
Proof. exact (MK_COMB (@lem6380322 A K f dom neut) (@lem6380323 K x)). Qed.
Lemma lem6380325 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6380326 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (x : K -> Prop) : (term527 A K f dom neut x) = (term528 A K f dom neut x).
Proof. exact (MK_COMB (@lem6380325) (@lem6380324 A K f dom neut x)). Qed.
Lemma lem6380327 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut x) = (term525 A K x f dom neut).
Proof. exact (eq_refl (term524 A K f dom neut x)). Qed.
Lemma lem6380328 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term523 A K f dom neut x) = (term524 A K f dom neut x)) = ((term524 A K f dom neut x) = (term525 A K x f dom neut)).
Proof. exact (MK_COMB (@lem6380326 A K f dom neut x) (@lem6380327 A K x f dom neut)). Qed.
Lemma lem6380329 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut x) = (term525 A K x f dom neut).
Proof. exact (EQ_MP (@lem6380328 A K x f dom neut) (@lem6380320 A K f dom neut x)). Qed.
Lemma lem6380336 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem6380337 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term529 A K f dom neut x) = (term530 A K x f dom neut).
Proof. exact (MK_COMB (@lem6380336) (@lem6380329 A K x f dom neut)). Qed.
Lemma lem6380339 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380340 {K : Type'} (f : type687 K) (y : K -> Prop) : (term522 K f y) = (f y).
Proof. exact (@lem6380339 (K -> Prop) nat f y). Qed.
Lemma lem6380341 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (y : K -> Prop) : (term523 A K f dom neut y) = (term524 A K f dom neut y).
Proof. exact (@lem6380340 K (term229 A K f dom neut) y). Qed.
Lemma lem6380342 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut k) = (term525 A K k f dom neut).
Proof. exact (eq_refl (term524 A K f dom neut k)). Qed.
Lemma lem6380343 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term526 A K f dom neut) = (term229 A K f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380342 A K k f dom neut)). Qed.
Lemma lem6380344 {K : Type'} (y : K -> Prop) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6380345 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (y : K -> Prop) : (term523 A K f dom neut y) = (term524 A K f dom neut y).
Proof. exact (MK_COMB (@lem6380343 A K f dom neut) (@lem6380344 K y)). Qed.
Lemma lem6380346 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6380347 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (y : K -> Prop) : (term527 A K f dom neut y) = (term528 A K f dom neut y).
Proof. exact (MK_COMB (@lem6380346) (@lem6380345 A K f dom neut y)). Qed.
Lemma lem6380348 {A K : Type'} (y : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut y) = (term525 A K y f dom neut).
Proof. exact (eq_refl (term524 A K f dom neut y)). Qed.
Lemma lem6380349 {A K : Type'} (y : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term523 A K f dom neut y) = (term524 A K f dom neut y)) = ((term524 A K f dom neut y) = (term525 A K y f dom neut)).
Proof. exact (MK_COMB (@lem6380347 A K f dom neut y) (@lem6380348 A K y f dom neut)). Qed.
Lemma lem6380350 {A K : Type'} (y : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term524 A K f dom neut y) = (term525 A K y f dom neut).
Proof. exact (EQ_MP (@lem6380349 A K y f dom neut) (@lem6380341 A K f dom neut y)). Qed.
Lemma lem6380357 {A K : Type'} (x : K -> Prop) (y : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term531 A K x f dom neut y) = (term532 A K x y f dom neut).
Proof. exact (MK_COMB (@lem6380337 A K x f dom neut) (@lem6380350 A K y f dom neut)). Qed.
Lemma lem6380358 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term533 A K x f dom neut) = (term534 A K x f dom neut).
Proof. exact (fun_ext (fun y : K -> Prop => @lem6380357 A K x y f dom neut)). Qed.
Lemma lem6380359 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term521 A K f dom neut) = (term535 A K f dom neut).
Proof. exact (fun_ext (fun x : K -> Prop => @lem6380358 A K x f dom neut)). Qed.
Lemma lem6380360 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term234 A K f dom neut) = (term535 A K f dom neut).
Proof. exact (TRANS (@lem6380316 A K f dom neut) (@lem6380359 A K f dom neut)). Qed.
Lemma lem6380361 {K : Type'} (z : K -> Prop) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6380362 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (z : K -> Prop) : (term536 A K f dom neut z) = (term537 A K f dom neut z).
Proof. exact (MK_COMB (@lem6380360 A K f dom neut) (@lem6380361 K z)). Qed.
Lemma lem6380364 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380365 {K : Type'} (f : type639 K) (y : K -> Prop) : (term538 K f y) = (f y).
Proof. exact (@lem6380364 (K -> Prop) (type686 K) f y). Qed.
Lemma lem6380366 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (z : K -> Prop) : (term539 A K f dom neut z) = (term537 A K f dom neut z).
Proof. exact (@lem6380365 K (term535 A K f dom neut) z). Qed.
Lemma lem6380367 {A K : Type'} (x : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term537 A K f dom neut x) = (term534 A K x f dom neut).
Proof. exact (eq_refl (term537 A K f dom neut x)). Qed.
Lemma lem6380368 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term540 A K f dom neut) = (term535 A K f dom neut).
Proof. exact (fun_ext (fun x : K -> Prop => @lem6380367 A K x f dom neut)). Qed.
Lemma lem6380369 {K : Type'} (z : K -> Prop) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6380370 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (z : K -> Prop) : (term539 A K f dom neut z) = (term537 A K f dom neut z).
Proof. exact (MK_COMB (@lem6380368 A K f dom neut) (@lem6380369 K z)). Qed.
Lemma lem6380371 {K : Type'} : (@eq ((K -> Prop) -> Prop)) = (@eq ((K -> Prop) -> Prop)).
Proof. exact (eq_refl (@eq ((K -> Prop) -> Prop))). Qed.
Lemma lem6380372 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (z : K -> Prop) : (term541 A K f dom neut z) = (term542 A K f dom neut z).
Proof. exact (MK_COMB (@lem6380371 K) (@lem6380370 A K f dom neut z)). Qed.
Lemma lem6380373 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term537 A K f dom neut z) = (term534 A K z f dom neut).
Proof. exact (eq_refl (term537 A K f dom neut z)). Qed.
Lemma lem6380374 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term539 A K f dom neut z) = (term537 A K f dom neut z)) = ((term537 A K f dom neut z) = (term534 A K z f dom neut)).
Proof. exact (MK_COMB (@lem6380372 A K f dom neut z) (@lem6380373 A K z f dom neut)). Qed.
Lemma lem6380375 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term537 A K f dom neut z) = (term534 A K z f dom neut).
Proof. exact (EQ_MP (@lem6380374 A K z f dom neut) (@lem6380366 A K f dom neut z)). Qed.
Lemma lem6380388 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term536 A K f dom neut z) = (term534 A K z f dom neut).
Proof. exact (TRANS (@lem6380362 A K f dom neut z) (@lem6380375 A K z f dom neut)). Qed.
Lemma lem6380389 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380390 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term543 A K f dom neut z k) = (term544 A K z f dom neut k).
Proof. exact (MK_COMB (@lem6380388 A K z f dom neut) (@lem6380389 K k)). Qed.
Lemma lem6380392 {A B : Type'} (f : A -> B) (y : A) : (term382 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6380393 {K : Type'} (f : type686 K) (y : K -> Prop) : (term545 K f y) = (f y).
Proof. exact (@lem6380392 (K -> Prop) Prop f y). Qed.
Lemma lem6380394 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term546 A K z f dom neut k) = (term544 A K z f dom neut k).
Proof. exact (@lem6380393 K (term534 A K z f dom neut) k). Qed.
Lemma lem6380395 {A K : Type'} (z : K -> Prop) (y : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term544 A K z f dom neut y) = (term532 A K z y f dom neut).
Proof. exact (eq_refl (term544 A K z f dom neut y)). Qed.
Lemma lem6380396 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term547 A K z f dom neut) = (term534 A K z f dom neut).
Proof. exact (fun_ext (fun y : K -> Prop => @lem6380395 A K z y f dom neut)). Qed.
Lemma lem6380397 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6380398 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term546 A K z f dom neut k) = (term544 A K z f dom neut k).
Proof. exact (MK_COMB (@lem6380396 A K z f dom neut) (@lem6380397 K k)). Qed.
Lemma lem6380399 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380400 {A K : Type'} (z : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term548 A K z f dom neut k) = (term549 A K z f dom neut k).
Proof. exact (MK_COMB (@lem6380399) (@lem6380398 A K z f dom neut k)). Qed.
Lemma lem6380401 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term544 A K z f dom neut k) = (term532 A K z k f dom neut).
Proof. exact (eq_refl (term544 A K z f dom neut k)). Qed.
Lemma lem6380402 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term546 A K z f dom neut k) = (term544 A K z f dom neut k)) = ((term544 A K z f dom neut k) = (term532 A K z k f dom neut)).
Proof. exact (MK_COMB (@lem6380400 A K z f dom neut k) (@lem6380401 A K z k f dom neut)). Qed.
Lemma lem6380403 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term544 A K z f dom neut k) = (term532 A K z k f dom neut).
Proof. exact (EQ_MP (@lem6380402 A K z k f dom neut) (@lem6380394 A K z f dom neut k)). Qed.
Lemma lem6380416 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term543 A K f dom neut z k) = (term532 A K z k f dom neut).
Proof. exact (TRANS (@lem6380390 A K z f dom neut k) (@lem6380403 A K z k f dom neut)). Qed.
Lemma lem6380417 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6380418 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term550 A K f dom neut z k) = (term551 A K z k f dom neut).
Proof. exact (MK_COMB (@lem6380417) (@lem6380416 A K z k f dom neut)). Qed.
Lemma lem6380421 {A K : Type'} (itty : type862 A K) (g : type862 A K) (z : K -> Prop) : ((itty z) = (g z)) = ((itty z) = (g z)).
Proof. exact (eq_refl ((itty z) = (g z))). Qed.
Lemma lem6380422 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (z : K -> Prop) : (term552 A K f dom neut k itty g z) = (term553 A K k f dom neut itty g z).
Proof. exact (MK_COMB (@lem6380418 A K z k f dom neut) (@lem6380421 A K itty g z)). Qed.
Lemma lem6380425 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) : (term554 A K f dom neut k itty g) = (term555 A K k f dom neut itty g).
Proof. exact (fun_ext (fun z : K -> Prop => @lem6380422 A K k f dom neut itty g z)). Qed.
Lemma lem6380426 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380427 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) : (term556 A K f dom neut k itty g) = (term557 A K k f dom neut itty g).
Proof. exact (MK_COMB (@lem6380426 K) (@lem6380425 A K k f dom neut itty g)). Qed.
Lemma lem6380432 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6380433 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) : (term496 A K f dom neut k itty g) = (term558 A K k f dom neut itty g).
Proof. exact (MK_COMB (@lem6380432) (@lem6380427 A K k f dom neut itty g)). Qed.
Lemma lem6380556 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut))). Qed.
Lemma lem6380557 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term498 A K itty op g ltle k f dom neut) = (term559 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380433 A K k f dom neut itty g) (@lem6380556 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380560 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term500 A K itty op g ltle f dom neut) = (term560 A K itty op g ltle f dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6380557 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380561 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6380562 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term502 A K itty op g ltle f dom neut) = (term561 A K itty op g ltle f dom neut).
Proof. exact (MK_COMB (@lem6380561 K) (@lem6380560 A K itty op g ltle f dom neut)). Qed.
Lemma lem6380567 {A K : Type'} (itty : type862 A K) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term504 A K itty op ltle f dom neut) = (term562 A K itty op ltle f dom neut).
Proof. exact (fun_ext (fun g : type862 A K => @lem6380562 A K itty op g ltle f dom neut)). Qed.
Lemma lem6380568 {A K : Type'} : (@all ((K -> Prop) -> A)) = (@all ((K -> Prop) -> A)).
Proof. exact (eq_refl (@all ((K -> Prop) -> A))). Qed.
Lemma lem6380569 {A K : Type'} (itty : type862 A K) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term506 A K itty op ltle f dom neut) = (term563 A K itty op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380568 A K) (@lem6380567 A K itty op ltle f dom neut)). Qed.
Lemma lem6380574 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term508 A K op ltle f dom neut) = (term564 A K op ltle f dom neut).
Proof. exact (fun_ext (fun itty : type862 A K => @lem6380569 A K itty op ltle f dom neut)). Qed.
Lemma lem6380575 {A K : Type'} : (@all ((K -> Prop) -> A)) = (@all ((K -> Prop) -> A)).
Proof. exact (eq_refl (@all ((K -> Prop) -> A))). Qed.
Lemma lem6380576 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term510 A K op ltle f dom neut) = (term565 A K op ltle f dom neut).
Proof. exact (MK_COMB (@lem6380575 A K) (@lem6380574 A K op ltle f dom neut)). Qed.
Lemma lem6380581 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term565 A K op ltle f dom neut) = (term510 A K op ltle f dom neut).
Proof. exact (SYM (@lem6380576 A K op ltle f dom neut)). Qed.
Lemma lem6380582 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (h1). Qed.
Lemma lem6380583 {A : Type'} (_474 : A) (_475 : Prop) (_476 : A -> Prop) (_477 : A) : (term566 A _476 _475 _474 _477) = (term567 A _474 _475 _476 _477).
Proof. exact (@lem13473 A _474 _475 _476 _477). Qed.
Lemma lem6380584 {A K : Type'} (_474 : A) (_475 : Prop) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_477 : A) : (term568 A K op g ltle k f dom neut _475 _474 _477) = (term569 A K _474 _475 op g ltle k f dom neut _477).
Proof. exact (@lem6380583 A _474 _475 (term570 A K op g ltle k f dom neut) _477). Qed.
Lemma lem6380585 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term571 A K g op itty ltle k f dom neut) = (term572 A K itty op g ltle k f dom neut).
Proof. exact (@lem6380584 A K (term573 A K op itty ltle k f dom neut) (term574 A K k f dom neut) op g ltle k f dom neut neut). Qed.
Lemma lem6380586 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term575 A K op g ltle k f dom neut) = (neut = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term575 A K op g ltle k f dom neut)). Qed.
Lemma lem6380587 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term576 A K k f dom neut) = (term576 A K k f dom neut).
Proof. exact (eq_refl (term576 A K k f dom neut)). Qed.
Lemma lem6380588 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term577 A K op g ltle k f dom neut) = (term578 A K op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380587 A K k f dom neut) (@lem6380586 A K op g ltle k f dom neut)). Qed.
Lemma lem6380589 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term579 A K g op itty ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term579 A K g op itty ltle k f dom neut)). Qed.
Lemma lem6380590 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term580 A K k f dom neut) = (term580 A K k f dom neut).
Proof. exact (eq_refl (term580 A K k f dom neut)). Qed.
Lemma lem6380591 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term581 A K g op itty ltle k f dom neut) = (term582 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380590 A K k f dom neut) (@lem6380589 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380592 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6380593 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term583 A K g op itty ltle k f dom neut) = (term584 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380592) (@lem6380591 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380594 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term572 A K itty op g ltle k f dom neut) = (term585 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380593 A K itty op g ltle k f dom neut) (@lem6380588 A K op g ltle k f dom neut)). Qed.
Lemma lem6380595 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term571 A K g op itty ltle k f dom neut) = ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term571 A K g op itty ltle k f dom neut)). Qed.
Lemma lem6380596 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380597 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term586 A K g op itty ltle k f dom neut) = (term587 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380596) (@lem6380595 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380598 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term571 A K g op itty ltle k f dom neut) = (term572 A K itty op g ltle k f dom neut)) = (((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = (term585 A K itty op g ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6380597 A K itty op g ltle k f dom neut) (@lem6380594 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380599 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = (term585 A K itty op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380598 A K itty op g ltle k f dom neut) (@lem6380585 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380600 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term585 A K itty op g ltle k f dom neut) = ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380599 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380601 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : term574 A K k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6380602 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term574 A K k f dom neut) = ((term574 A K k f dom neut) = True).
Proof. exact (@lem7 (term574 A K k f dom neut)). Qed.
Lemma lem6380603 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term574 A K k f dom neut) = True.
Proof. exact (EQ_MP (@lem6380602 A K k f dom neut) (@lem6380601 A K k f dom neut h1)). Qed.
Lemma lem6380604 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term588 A K itty op g ltle k f dom neut) = (term588 A K itty op g ltle k f dom neut).
Proof. exact (eq_refl (term588 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380605 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term589 A K itty op g ltle k f dom neut) = (term590 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380604 A K itty op g ltle k f dom neut) (@lem6380603 A K k f dom neut h1)). Qed.
Lemma lem6380606 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term590 A K itty op g ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term590 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380607 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term592 A K itty op g ltle k f dom neut) = (term592 A K itty op g ltle k f dom neut).
Proof. exact (eq_refl (term592 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380608 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term589 A K itty op g ltle k f dom neut) = (term590 A K itty op g ltle k f dom neut)) = ((term589 A K itty op g ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut))).
Proof. exact (MK_COMB (@lem6380607 A K itty op g ltle k f dom neut) (@lem6380606 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380609 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term589 A K itty op g ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term589 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380610 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380611 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term592 A K itty op g ltle k f dom neut) = (term593 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380610) (@lem6380609 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380612 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)).
Proof. exact (eq_refl ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut))). Qed.
Lemma lem6380613 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term589 A K itty op g ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut))) = (((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut))).
Proof. exact (MK_COMB (@lem6380611 A K itty op g ltle k f dom neut) (@lem6380612 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380614 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term589 A K itty op g ltle k f dom neut) = (term590 A K itty op g ltle k f dom neut)) = (((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut))).
Proof. exact (TRANS (@lem6380608 A K itty op g ltle k f dom neut) (@lem6380613 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380615 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : ((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)).
Proof. exact (EQ_MP (@lem6380614 A K itty op g ltle k f dom neut) (@lem6380605 A K itty op g ltle k f dom neut h1)). Qed.
Lemma lem6380616 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380615 A K itty op g ltle k f dom neut h1)). Qed.
Lemma lem6380617 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : term594 A K k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6380618 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term595 A K k f dom neut.
Proof. exact (@lem82 (term574 A K k f dom neut)). Qed.
Lemma lem6380619 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : (term574 A K k f dom neut) = False.
Proof. exact (@lem6380618 A K k f dom neut (@lem6380617 A K k f dom neut h1)). Qed.
Lemma lem6380620 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term596 A K op g ltle k f dom neut) = (term596 A K op g ltle k f dom neut).
Proof. exact (eq_refl (term596 A K op g ltle k f dom neut)). Qed.
Lemma lem6380621 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : (term597 A K op g ltle k f dom neut) = (term598 A K op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380620 A K op g ltle k f dom neut) (@lem6380619 A K k f dom neut h1)). Qed.
Lemma lem6380622 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term598 A K op g ltle k f dom neut) = (neut = (term599 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term598 A K op g ltle k f dom neut)). Qed.
Lemma lem6380623 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term600 A K op g ltle k f dom neut) = (term600 A K op g ltle k f dom neut).
Proof. exact (eq_refl (term600 A K op g ltle k f dom neut)). Qed.
Lemma lem6380624 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term597 A K op g ltle k f dom neut) = (term598 A K op g ltle k f dom neut)) = ((term597 A K op g ltle k f dom neut) = (neut = (term599 A K op g ltle k f dom neut))).
Proof. exact (MK_COMB (@lem6380623 A K op g ltle k f dom neut) (@lem6380622 A K op g ltle k f dom neut)). Qed.
Lemma lem6380625 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term597 A K op g ltle k f dom neut) = (neut = (term493 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term597 A K op g ltle k f dom neut)). Qed.
Lemma lem6380626 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380627 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term600 A K op g ltle k f dom neut) = (term601 A K op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380626) (@lem6380625 A K op g ltle k f dom neut)). Qed.
Lemma lem6380628 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (neut = (term599 A K op g ltle k f dom neut)) = (neut = (term599 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (neut = (term599 A K op g ltle k f dom neut))). Qed.
Lemma lem6380629 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term597 A K op g ltle k f dom neut) = (neut = (term599 A K op g ltle k f dom neut))) = ((neut = (term493 A K op g ltle k f dom neut)) = (neut = (term599 A K op g ltle k f dom neut))).
Proof. exact (MK_COMB (@lem6380627 A K op g ltle k f dom neut) (@lem6380628 A K op g ltle k f dom neut)). Qed.
Lemma lem6380630 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term597 A K op g ltle k f dom neut) = (term598 A K op g ltle k f dom neut)) = ((neut = (term493 A K op g ltle k f dom neut)) = (neut = (term599 A K op g ltle k f dom neut))).
Proof. exact (TRANS (@lem6380624 A K op g ltle k f dom neut) (@lem6380629 A K op g ltle k f dom neut)). Qed.
Lemma lem6380631 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : (neut = (term493 A K op g ltle k f dom neut)) = (neut = (term599 A K op g ltle k f dom neut)).
Proof. exact (EQ_MP (@lem6380630 A K op g ltle k f dom neut) (@lem6380621 A K op g ltle k f dom neut h1)). Qed.
Lemma lem6380632 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : (neut = (term599 A K op g ltle k f dom neut)) = (neut = (term493 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380631 A K op g ltle k f dom neut h1)). Qed.
Lemma lem6380702 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6380703 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem6380702 A t2 t1). Qed.
Lemma lem6380704 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term591 A K op g ltle k f dom neut) = (term573 A K op g ltle k f dom neut).
Proof. exact (@lem6380703 A neut (term573 A K op g ltle k f dom neut)). Qed.
Lemma lem6380749 {A K : Type'} (op : type1400 A) (itty : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term602 A K op itty ltle k f dom neut) = (term602 A K op itty ltle k f dom neut).
Proof. exact (eq_refl (term602 A K op itty ltle k f dom neut)). Qed.
Lemma lem6380750 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6380749 A K op itty ltle k f dom neut) (@lem6380704 A K op g ltle k f dom neut)). Qed.
Lemma lem6380753 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)) = ((term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380750 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380764 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6380765 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem6380764 A t1 t2). Qed.
Lemma lem6380766 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term599 A K op g ltle k f dom neut) = neut.
Proof. exact (@lem6380765 A (term573 A K op g ltle k f dom neut) neut). Qed.
Lemma lem6380767 {A : Type'} (neut : A) : (@eq A neut) = (@eq A neut).
Proof. exact (eq_refl (@eq A neut)). Qed.
Lemma lem6380768 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (neut = (term599 A K op g ltle k f dom neut)) = (neut = neut).
Proof. exact (MK_COMB (@lem6380767 A neut) (@lem6380766 A K op g ltle k f dom neut)). Qed.
Lemma lem6380770 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6380771 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem6380770 A x). Qed.
Lemma lem6380772 {A : Type'} (neut : A) : (neut = neut) = True.
Proof. exact (@lem6380771 A neut). Qed.
Lemma lem6380773 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (neut = (term599 A K op g ltle k f dom neut)) = True.
Proof. exact (TRANS (@lem6380768 A K op g ltle k f dom neut) (@lem6380772 A neut)). Qed.
Lemma lem6380774 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : True = (neut = (term599 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380773 A K op g ltle k f dom neut)). Qed.
Lemma lem6380775 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : neut = (term599 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380774 A K op g ltle k f dom neut) (@lem0)). Qed.
Lemma lem6380779 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : i = (term424 A K ltle k f dom neut).
Proof. exact (h1). Qed.
Lemma lem6380780 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : term603 A K ltle k f dom neut.
Proof. exact (ex_intro (term604 A K ltle k f dom neut) i (@lem6380779 A K i ltle k f dom neut h1)). Qed.
Lemma lem6380781 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term605 A K i ltle k f dom neut.
Proof. exact (fun h0 : i = (term424 A K ltle k f dom neut) => @lem6380780 A K i ltle k f dom neut h0). Qed.
Lemma lem6380782 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term606 A K ltle k f dom neut.
Proof. exact (@lem6380781 A K (term424 A K ltle k f dom neut) ltle k f dom neut). Qed.
Lemma lem6380792 {_5989 : Type'} (x : _5989) : (x = x) = True.
Proof. exact (EQ_MP (@lem68127 _5989 x) (@lem0)). Qed.
Lemma lem6380793 {K : Type'} (x : K) : (x = x) = True.
Proof. exact (@lem6380792 K x). Qed.
Lemma lem6380794 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term424 A K ltle k f dom neut) = (term424 A K ltle k f dom neut)) = True.
Proof. exact (@lem6380793 K (term424 A K ltle k f dom neut)). Qed.
Lemma lem6380795 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6380796 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term607 A K ltle k f dom neut) = (imp True).
Proof. exact (MK_COMB (@lem6380795) (@lem6380794 A K ltle k f dom neut)). Qed.
Lemma lem6380797 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term603 A K ltle k f dom neut) = (term603 A K ltle k f dom neut).
Proof. exact (eq_refl (term603 A K ltle k f dom neut)). Qed.
Lemma lem6380798 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term606 A K ltle k f dom neut) = (term608 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380796 A K ltle k f dom neut) (@lem6380797 A K ltle k f dom neut)). Qed.
Lemma lem6380799 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term608 A K ltle k f dom neut.
Proof. exact (EQ_MP (@lem6380798 A K ltle k f dom neut) (@lem6380782 A K ltle k f dom neut)). Qed.
Lemma lem6380800 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term603 A K ltle k f dom neut.
Proof. exact (@lem6380799 A K ltle k f dom neut (@lem0)). Qed.
Lemma lem6380801 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : i = (term424 A K ltle k f dom neut).
Proof. exact (h1). Qed.
Lemma lem6380802 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : (term424 A K ltle k f dom neut) = i.
Proof. exact (SYM (@lem6380801 A K i ltle k f dom neut h1)). Qed.
Lemma lem6380803 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term609 A K itty op g k f dom neut) = (term609 A K itty op g k f dom neut).
Proof. exact (eq_refl (term609 A K itty op g k f dom neut)). Qed.
Lemma lem6380804 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : (term610 A K itty op g ltle k f dom neut) = (term611 A K itty op g k f dom neut i).
Proof. exact (MK_COMB (@lem6380803 A K itty op g k f dom neut) (@lem6380802 A K i ltle k f dom neut h1)). Qed.
Lemma lem6380805 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term611 A K itty op g k f dom neut i) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (eq_refl (term611 A K itty op g k f dom neut i)). Qed.
Lemma lem6380806 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term613 A K itty op g ltle k f dom neut) = (term613 A K itty op g ltle k f dom neut).
Proof. exact (eq_refl (term613 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380807 {A K : Type'} (ltle : type1402 K) (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term610 A K itty op g ltle k f dom neut) = (term611 A K itty op g k f dom neut i)) = ((term610 A K itty op g ltle k f dom neut) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i))).
Proof. exact (MK_COMB (@lem6380806 A K itty op g ltle k f dom neut) (@lem6380805 A K itty op g k f dom neut i)). Qed.
Lemma lem6380808 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term610 A K itty op g ltle k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)).
Proof. exact (eq_refl (term610 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380809 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6380810 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term613 A K itty op g ltle k f dom neut) = (term614 A K itty op g ltle k f dom neut).
Proof. exact (MK_COMB (@lem6380809) (@lem6380808 A K itty op g ltle k f dom neut)). Qed.
Lemma lem6380811 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (eq_refl ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i))). Qed.
Lemma lem6380812 {A K : Type'} (ltle : type1402 K) (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term610 A K itty op g ltle k f dom neut) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i))) = (((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i))).
Proof. exact (MK_COMB (@lem6380810 A K itty op g ltle k f dom neut) (@lem6380811 A K itty op g k f dom neut i)). Qed.
Lemma lem6380813 {A K : Type'} (ltle : type1402 K) (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term610 A K itty op g ltle k f dom neut) = (term611 A K itty op g k f dom neut i)) = (((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i))).
Proof. exact (TRANS (@lem6380807 A K ltle itty op g k f dom neut i) (@lem6380812 A K ltle itty op g k f dom neut i)). Qed.
Lemma lem6380814 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : ((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (EQ_MP (@lem6380813 A K ltle itty op g k f dom neut i) (@lem6380804 A K itty op g i ltle k f dom neut h1)). Qed.
Lemma lem6380815 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)) = ((term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut)).
Proof. exact (SYM (@lem6380814 A K itty op g i ltle k f dom neut h1)). Qed.
Lemma lem6380829 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (h1). Qed.
Lemma lem6380843 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : term574 A K k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6380845 {A B : Type'} (f : A -> B) (x : A) : (@LET A B f x) = (f x).
Proof. exact (EQ_MP (@lem57692 A B f x) (@lem57691 A B f x)). Qed.
Lemma lem6380846 {A K : Type'} (f : K -> A) (x : K) : (@LET K A f x) = (f x).
Proof. exact (@lem6380845 K A f x). Qed.
Lemma lem6380847 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term612 A K op g k f dom neut i) = (term615 A K op g k f dom neut i).
Proof. exact (@lem6380846 A K (term616 A K op g k f dom neut) i). Qed.
Lemma lem6380848 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term615 A K op g k f dom neut i) = (term617 A K op g k i f dom neut).
Proof. exact (eq_refl (term615 A K op g k f dom neut i)). Qed.
Lemma lem6380849 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term612 A K op g k f dom neut i) = (term617 A K op g k i f dom neut).
Proof. exact (TRANS (@lem6380847 A K op g k f dom neut i) (@lem6380848 A K op g k i f dom neut)). Qed.
Lemma lem6380851 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (EQ_MP (@lem57695 A t) (@lem57694 A t)). Qed.
Lemma lem6380852 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (@lem6380851 A t). Qed.
Lemma lem6380853 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term617 A K op g k i f dom neut) = (term618 A K op g k i f dom neut).
Proof. exact (@lem6380852 A (term618 A K op g k i f dom neut)). Qed.
Lemma lem6380854 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term612 A K op g k f dom neut i) = (term618 A K op g k i f dom neut).
Proof. exact (TRANS (@lem6380849 A K op g k i f dom neut) (@lem6380853 A K op g k i f dom neut)). Qed.
Lemma lem6380855 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term619 A K op itty k f dom neut i) = (term619 A K op itty k f dom neut i).
Proof. exact (eq_refl (term619 A K op itty k f dom neut i)). Qed.
Lemma lem6380856 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)) = ((term612 A K op itty k f dom neut i) = (term618 A K op g k i f dom neut)).
Proof. exact (MK_COMB (@lem6380855 A K op itty k f dom neut i) (@lem6380854 A K op g k i f dom neut)). Qed.
Lemma lem6380857 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term612 A K op itty k f dom neut i) = (term618 A K op g k i f dom neut)) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (SYM (@lem6380856 A K itty op g k i f dom neut)). Qed.
Lemma lem6380859 {A B : Type'} (f : A -> B) (x : A) : (@LET A B f x) = (f x).
Proof. exact (EQ_MP (@lem57692 A B f x) (@lem57691 A B f x)). Qed.
Lemma lem6380860 {A K : Type'} (f : K -> A) (x : K) : (@LET K A f x) = (f x).
Proof. exact (@lem6380859 K A f x). Qed.
Lemma lem6380861 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term612 A K op itty k f dom neut i) = (term615 A K op itty k f dom neut i).
Proof. exact (@lem6380860 A K (term616 A K op itty k f dom neut) i). Qed.
Lemma lem6380862 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term615 A K op itty k f dom neut i) = (term617 A K op itty k i f dom neut).
Proof. exact (eq_refl (term615 A K op itty k f dom neut i)). Qed.
Lemma lem6380863 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term612 A K op itty k f dom neut i) = (term617 A K op itty k i f dom neut).
Proof. exact (TRANS (@lem6380861 A K op itty k f dom neut i) (@lem6380862 A K op itty k i f dom neut)). Qed.
Lemma lem6380865 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (EQ_MP (@lem57695 A t) (@lem57694 A t)). Qed.
Lemma lem6380866 {A : Type'} (t : A) : (@LET_END A t) = t.
Proof. exact (@lem6380865 A t). Qed.
Lemma lem6380867 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term617 A K op itty k i f dom neut) = (term618 A K op itty k i f dom neut).
Proof. exact (@lem6380866 A (term618 A K op itty k i f dom neut)). Qed.
Lemma lem6380868 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term612 A K op itty k f dom neut i) = (term618 A K op itty k i f dom neut).
Proof. exact (TRANS (@lem6380863 A K op itty k i f dom neut) (@lem6380867 A K op itty k i f dom neut)). Qed.
Lemma lem6380869 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem6380870 {A K : Type'} (op : type1400 A) (itty : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term619 A K op itty k f dom neut i) = (term620 A K op itty k i f dom neut).
Proof. exact (MK_COMB (@lem6380869 A) (@lem6380868 A K op itty k i f dom neut)). Qed.
Lemma lem6380871 {A K : Type'} (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term618 A K op g k i f dom neut) = (term618 A K op g k i f dom neut).
Proof. exact (eq_refl (term618 A K op g k i f dom neut)). Qed.
Lemma lem6380872 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term612 A K op itty k f dom neut i) = (term618 A K op g k i f dom neut)) = ((term618 A K op itty k i f dom neut) = (term618 A K op g k i f dom neut)).
Proof. exact (MK_COMB (@lem6380870 A K op itty k i f dom neut) (@lem6380871 A K op g k i f dom neut)). Qed.
Lemma lem6380873 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term618 A K op itty k i f dom neut) = (term618 A K op g k i f dom neut)) = ((term612 A K op itty k f dom neut i) = (term618 A K op g k i f dom neut)).
Proof. exact (SYM (@lem6380872 A K itty op g k i f dom neut)). Qed.
Lemma lem6380874 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) : (term415 A K op f i) = (term415 A K op f i).
Proof. exact (eq_refl (term415 A K op f i)). Qed.
Lemma lem6380875 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (h1). Qed.
Lemma lem6380876 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term621 A K k f dom neut itty g z.
Proof. exact (@lem6380875 A K k f dom neut itty g h1 z). Qed.
Lemma lem6380877 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (z : K -> Prop) : (term621 A K k f dom neut itty g z) = (term553 A K k f dom neut itty g z).
Proof. exact (eq_refl (term621 A K k f dom neut itty g z)). Qed.
Lemma lem6380878 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term553 A K k f dom neut itty g z.
Proof. exact (EQ_MP (@lem6380877 A K k f dom neut itty g z) (@lem6380876 A K z k f dom neut itty g h1)). Qed.
Lemma lem6380879 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term532 A K z k f dom neut) : term532 A K z k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6380880 {A K : Type'} (itty : type862 A K) (g : type862 A K) (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term532 A K z k f dom neut) : (itty z) = (g z).
Proof. exact (@lem6380878 A K z k f dom neut itty g h1 (@lem6380879 A K z k f dom neut h2)). Qed.
Lemma lem6380881 {A K : Type'} (itty : type862 A K) (g : type862 A K) (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term532 A K z k f dom neut) : term622 A K k f dom neut itty g z.
Proof. exact (fun h0 : term557 A K k f dom neut itty g => @lem6380880 A K itty g z k f dom neut h0 h1). Qed.
Lemma lem6380882 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (h1). Qed.
Lemma lem6380883 {A K : Type'} (itty : type862 A K) (g : type862 A K) (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term532 A K z k f dom neut) : (itty z) = (g z).
Proof. exact (@lem6380881 A K itty g z k f dom neut h2 (@lem6380882 A K k f dom neut itty g h1)). Qed.
Lemma lem6380884 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term553 A K k f dom neut itty g z.
Proof. exact (fun h0 : term532 A K z k f dom neut => @lem6380883 A K itty g z k f dom neut h1 h0). Qed.
Lemma lem6380885 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (fun z : K -> Prop => @lem6380884 A K z k f dom neut itty g h1). Qed.
Lemma lem6380886 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) : term623 A K k f dom neut itty g.
Proof. exact (fun h0 : term557 A K k f dom neut itty g => @lem6380885 A K k f dom neut itty g h0). Qed.
Lemma lem6380887 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term557 A K k f dom neut itty g.
Proof. exact (@lem6380886 A K k f dom neut itty g (@lem6380829 A K k f dom neut itty g h1)). Qed.
Lemma lem6380888 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term621 A K k f dom neut itty g z.
Proof. exact (@lem6380887 A K k f dom neut itty g h1 z). Qed.
Lemma lem6380889 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (z : K -> Prop) : (term621 A K k f dom neut itty g z) = (term553 A K k f dom neut itty g z).
Proof. exact (eq_refl (term621 A K k f dom neut itty g z)). Qed.
Lemma lem6380892 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term553 A K k f dom neut itty g z.
Proof. exact (EQ_MP (@lem6380889 A K k f dom neut itty g z) (@lem6380888 A K z k f dom neut itty g h1)). Qed.
Lemma lem6380893 {A K : Type'} (z : K -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term553 A K k f dom neut itty g z.
Proof. exact (@lem6380892 A K z k f dom neut itty g h1). Qed.
Lemma lem6380894 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term624 A K itty g k i f dom neut.
Proof. exact (@lem6380893 A K (term402 A K k i f dom neut) k f dom neut itty g h1). Qed.
Lemma lem6380916 {A : Type'} (a : A -> Prop) (b : A -> Prop) : term220 A a b.
Proof. exact (EQ_MP (@lem6378620 A a b) (@lem6378619 A a b)). Qed.
Lemma lem6380917 {K : Type'} (a : K -> Prop) (b : K -> Prop) : term220 K a b.
Proof. exact (@lem6380916 K a b). Qed.
Lemma lem6380918 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term625 A K i k f dom neut.
Proof. exact (@lem6380917 K (term626 A K k i f dom neut) (term627 A K k f dom neut)). Qed.
Lemma lem6380933 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : term628 A K k f dom neut.
Proof. exact (proj1 (@lem6380843 A K k f dom neut h1)). Qed.
Lemma lem6380934 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term628 A K k f dom neut) = ((term628 A K k f dom neut) = True).
Proof. exact (@lem7 (term628 A K k f dom neut)). Qed.
Lemma lem6380957 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term628 A K k f dom neut) = True.
Proof. exact (EQ_MP (@lem6380934 A K k f dom neut) (@lem6380933 A K k f dom neut h1)). Qed.
Lemma lem6380958 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term628 A K k f dom neut) = True.
Proof. exact (@lem6380957 A K k f dom neut h1). Qed.
Lemma lem6380959 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term629 A K i k f dom neut) = (term629 A K i k f dom neut).
Proof. exact (eq_refl (term629 A K i k f dom neut)). Qed.
Lemma lem6380960 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term630 A K i k f dom neut) = (term631 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6380959 A K i k f dom neut) (@lem6380958 A K k f dom neut h1)). Qed.
Lemma lem6380962 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem6380963 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term631 A K i k f dom neut) = (term632 A K i k f dom neut).
Proof. exact (@lem6380962 (term632 A K i k f dom neut)). Qed.
Lemma lem6380982 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term630 A K i k f dom neut) = (term632 A K i k f dom neut).
Proof. exact (TRANS (@lem6380960 A K i k f dom neut h1) (@lem6380963 A K i k f dom neut)). Qed.
Lemma lem6380983 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : (term632 A K i k f dom neut) = (term630 A K i k f dom neut).
Proof. exact (SYM (@lem6380982 A K i k f dom neut h1)). Qed.
Lemma lem6380985 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (@PSUBSET A s t) = (term215 A t s).
Proof. exact (EQ_MP (@lem6378597 A t s) (@lem6378596 A s t)). Qed.
Lemma lem6380986 {K : Type'} (t : K -> Prop) (s : K -> Prop) : (@PSUBSET K s t) = (term215 K t s).
Proof. exact (@lem6380985 K t s). Qed.
Lemma lem6380987 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term632 A K i k f dom neut) = (term633 A K k i f dom neut).
Proof. exact (@lem6380986 K (term627 A K k f dom neut) (term626 A K k i f dom neut)). Qed.
Lemma lem6381032 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term633 A K k i f dom neut) = (term632 A K i k f dom neut).
Proof. exact (SYM (@lem6380987 A K k i f dom neut)). Qed.
Lemma lem6381034 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term634 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem6381035 {K : Type'} (s : K -> Prop) (t : K -> Prop) : (@SUBSET K s t) = (term634 K s t).
Proof. exact (@lem6381034 K s t). Qed.
Lemma lem6381036 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term635 A K i k f dom neut) = (term636 A K i k f dom neut).
Proof. exact (@lem6381035 K (term626 A K k i f dom neut) (term627 A K k f dom neut)). Qed.
Lemma lem6381061 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term636 A K i k f dom neut) = (term635 A K i k f dom neut).
Proof. exact (SYM (@lem6381036 A K i k f dom neut)). Qed.
Lemma lem6381069 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6381070 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6381069 K p x). Qed.
Lemma lem6381071 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term637 A K x k i f dom neut) = (term638 A K k i f dom neut x).
Proof. exact (@lem6381070 K (term639 A K k i f dom neut) x). Qed.
Lemma lem6381072 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term638 A K k i f dom neut i') = (term640 A K k i f i' dom neut).
Proof. exact (eq_refl (term638 A K k i f dom neut i')). Qed.
Lemma lem6381073 {K : Type'} (GEN_PVAR_262 : K) : (@SETSPEC K GEN_PVAR_262) = (@SETSPEC K GEN_PVAR_262).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_262)). Qed.
Lemma lem6381074 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term641 A K GEN_PVAR_262 k i f dom neut i') = (term642 A K GEN_PVAR_262 k i f i' dom neut).
Proof. exact (MK_COMB (@lem6381073 K GEN_PVAR_262) (@lem6381072 A K k i f i' dom neut)). Qed.
Lemma lem6381075 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6381076 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term643 A K GEN_PVAR_262 k i f dom neut i') = (term644 A K GEN_PVAR_262 k i f dom neut i').
Proof. exact (MK_COMB (@lem6381074 A K GEN_PVAR_262 k i f i' dom neut) (@lem6381075 K i')). Qed.
Lemma lem6381077 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term645 A K GEN_PVAR_262 k i f dom neut) = (term646 A K GEN_PVAR_262 k i f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6381076 A K GEN_PVAR_262 k i f dom neut i')). Qed.
Lemma lem6381078 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6381079 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term647 A K GEN_PVAR_262 k i f dom neut) = (term648 A K GEN_PVAR_262 k i f dom neut).
Proof. exact (MK_COMB (@lem6381078 K) (@lem6381077 A K GEN_PVAR_262 k i f dom neut)). Qed.
Lemma lem6381080 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term649 A K k i f dom neut) = (term650 A K k i f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_262 : K => @lem6381079 A K GEN_PVAR_262 k i f dom neut)). Qed.
Lemma lem6381081 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6381082 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term651 A K k i f dom neut) = (term626 A K k i f dom neut).
Proof. exact (MK_COMB (@lem6381081 K) (@lem6381080 A K k i f dom neut)). Qed.
Lemma lem6381083 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6381084 {A K : Type'} (x : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term637 A K x k i f dom neut) = (term652 A K x k i f dom neut).
Proof. exact (MK_COMB (@lem6381083 K x) (@lem6381082 A K k i f dom neut)). Qed.
Lemma lem6381085 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6381086 {A K : Type'} (x : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term653 A K x k i f dom neut) = (term654 A K x k i f dom neut).
Proof. exact (MK_COMB (@lem6381085) (@lem6381084 A K x k i f dom neut)). Qed.
Lemma lem6381087 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term638 A K k i f dom neut x) = (term640 A K k i f x dom neut).
Proof. exact (eq_refl (term638 A K k i f dom neut x)). Qed.
Lemma lem6381088 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term637 A K x k i f dom neut) = (term638 A K k i f dom neut x)) = ((term652 A K x k i f dom neut) = (term640 A K k i f x dom neut)).
Proof. exact (MK_COMB (@lem6381086 A K x k i f dom neut) (@lem6381087 A K k i f x dom neut)). Qed.
Lemma lem6381089 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term652 A K x k i f dom neut) = (term640 A K k i f x dom neut).
Proof. exact (EQ_MP (@lem6381088 A K k i f x dom neut) (@lem6381071 A K k i f dom neut x)). Qed.
Lemma lem6381093 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6381094 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6381093 K p x). Qed.
Lemma lem6381095 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term655 A K x k i f dom neut) = (term656 A K k i f dom neut x).
Proof. exact (@lem6381094 K (term657 A K k i f dom neut) x). Qed.
Lemma lem6381096 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term656 A K k i f dom neut j) = (term658 A K k i f j dom neut).
Proof. exact (eq_refl (term656 A K k i f dom neut j)). Qed.
Lemma lem6381097 {K : Type'} (GEN_PVAR_265 : K) : (@SETSPEC K GEN_PVAR_265) = (@SETSPEC K GEN_PVAR_265).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_265)). Qed.
Lemma lem6381098 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term659 A K GEN_PVAR_265 k i f dom neut j) = (term660 A K GEN_PVAR_265 k i f j dom neut).
Proof. exact (MK_COMB (@lem6381097 K GEN_PVAR_265) (@lem6381096 A K k i f j dom neut)). Qed.
Lemma lem6381099 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6381100 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term661 A K GEN_PVAR_265 k i f dom neut j) = (term662 A K GEN_PVAR_265 k i f dom neut j).
Proof. exact (MK_COMB (@lem6381098 A K GEN_PVAR_265 k i f j dom neut) (@lem6381099 K j)). Qed.
Lemma lem6381101 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term663 A K GEN_PVAR_265 k i f dom neut) = (term664 A K GEN_PVAR_265 k i f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6381100 A K GEN_PVAR_265 k i f dom neut j)). Qed.
Lemma lem6381102 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6381103 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term665 A K GEN_PVAR_265 k i f dom neut) = (term666 A K GEN_PVAR_265 k i f dom neut).
Proof. exact (MK_COMB (@lem6381102 K) (@lem6381101 A K GEN_PVAR_265 k i f dom neut)). Qed.
Lemma lem6381104 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term667 A K k i f dom neut) = (term668 A K k i f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_265 : K => @lem6381103 A K GEN_PVAR_265 k i f dom neut)). Qed.
Lemma lem6381105 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6381106 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term669 A K k i f dom neut) = (term402 A K k i f dom neut).
Proof. exact (MK_COMB (@lem6381105 K) (@lem6381104 A K k i f dom neut)). Qed.
Lemma lem6381107 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6381108 {A K : Type'} (x : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term655 A K x k i f dom neut) = (term670 A K x k i f dom neut).
Proof. exact (MK_COMB (@lem6381107 K x) (@lem6381106 A K k i f dom neut)). Qed.
Lemma lem6381109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6381110 {A K : Type'} (x : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term671 A K x k i f dom neut) = (term672 A K x k i f dom neut).
Proof. exact (MK_COMB (@lem6381109) (@lem6381108 A K x k i f dom neut)). Qed.
Lemma lem6381111 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term656 A K k i f dom neut x) = (term658 A K k i f x dom neut).
Proof. exact (eq_refl (term656 A K k i f dom neut x)). Qed.
Lemma lem6381112 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term655 A K x k i f dom neut) = (term656 A K k i f dom neut x)) = ((term670 A K x k i f dom neut) = (term658 A K k i f x dom neut)).
Proof. exact (MK_COMB (@lem6381110 A K x k i f dom neut) (@lem6381111 A K k i f x dom neut)). Qed.
Lemma lem6381113 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term670 A K x k i f dom neut) = (term658 A K k i f x dom neut).
Proof. exact (EQ_MP (@lem6381112 A K k i f x dom neut) (@lem6381095 A K k i f dom neut x)). Qed.
Lemma lem6381117 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term210 A x s y) = (term211 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem6381118 {K : Type'} (s : K -> Prop) (x : K) (y : K) : (term210 K x s y) = (term211 K s x y).
Proof. exact (@lem6381117 K s x y). Qed.
Lemma lem6381119 {K : Type'} (k : K -> Prop) (x : K) (i : K) : (term210 K x k i) = (term211 K k x i).
Proof. exact (@lem6381118 K k x i). Qed.
Lemma lem6381123 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6381124 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6381123 K P x). Qed.
Lemma lem6381125 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6381124 K k x). Qed.
Lemma lem6381126 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381127 {K : Type'} (k : K -> Prop) (x : K) : (term673 K x k) = (term674 K k x).
Proof. exact (MK_COMB (@lem6381126) (@lem6381125 K k x)). Qed.
Lemma lem6381130 {K : Type'} (x : K) (i : K) : (term675 K x i) = (term675 K x i).
Proof. exact (eq_refl (term675 K x i)). Qed.
Lemma lem6381131 {K : Type'} (k : K -> Prop) (x : K) (i : K) : (term211 K k x i) = (term676 K k x i).
Proof. exact (MK_COMB (@lem6381127 K k x) (@lem6381130 K x i)). Qed.
Lemma lem6381134 {K : Type'} (k : K -> Prop) (x : K) (i : K) : (term210 K x k i) = (term676 K k x i).
Proof. exact (TRANS (@lem6381119 K k x i) (@lem6381131 K k x i)). Qed.
Lemma lem6381135 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381136 {K : Type'} (k : K -> Prop) (x : K) (i : K) : (term677 K x k i) = (term678 K k x i).
Proof. exact (MK_COMB (@lem6381135) (@lem6381134 K k x i)). Qed.
Lemma lem6381138 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6381139 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (@lem6381138 A s x t). Qed.
Lemma lem6381140 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term682 A K dom f x neut).
Proof. exact (@lem6381139 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6381144 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6381145 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6381144 A P x). Qed.
Lemma lem6381146 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term683 A K f x dom) = (term684 A K dom f x).
Proof. exact (@lem6381145 A dom (f x)). Qed.
Lemma lem6381147 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381148 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term685 A K f x dom) = (term686 A K dom f x).
Proof. exact (MK_COMB (@lem6381147) (@lem6381146 A K dom f x)). Qed.
Lemma lem6381150 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6381151 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (@lem6381150 A y x s). Qed.
Lemma lem6381152 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term689 A K f x neut) = (term690 A K neut f x).
Proof. exact (@lem6381151 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6381158 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6381159 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6381158 A x). Qed.
Lemma lem6381160 {A K : Type'} (f : K -> A) (x : K) : (term691 A K f x) = False.
Proof. exact (@lem6381159 A (f x)). Qed.
Lemma lem6381161 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term692 A K f x neut) = (term692 A K f x neut).
Proof. exact (eq_refl (term692 A K f x neut)). Qed.
Lemma lem6381162 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = (term693 A K f x neut).
Proof. exact (MK_COMB (@lem6381161 A K f x neut) (@lem6381160 A K f x)). Qed.
Lemma lem6381164 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6381165 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term693 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6381164 ((f x) = neut)). Qed.
Lemma lem6381168 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6381162 A K f x neut) (@lem6381165 A K f x neut)). Qed.
Lemma lem6381169 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term689 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6381152 A K neut f x) (@lem6381168 A K f x neut)). Qed.
Lemma lem6381170 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6381171 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term694 A K f x neut) = (term695 A K f x neut).
Proof. exact (MK_COMB (@lem6381170) (@lem6381169 A K f x neut)). Qed.
Lemma lem6381172 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term682 A K dom f x neut) = (term696 A K dom f x neut).
Proof. exact (MK_COMB (@lem6381148 A K dom f x) (@lem6381171 A K f x neut)). Qed.
Lemma lem6381175 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term696 A K dom f x neut).
Proof. exact (TRANS (@lem6381140 A K dom f x neut) (@lem6381172 A K dom f x neut)). Qed.
Lemma lem6381176 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term658 A K k i f x dom neut) = (term697 A K k i dom f x neut).
Proof. exact (MK_COMB (@lem6381136 K k x i) (@lem6381175 A K dom f x neut)). Qed.
Lemma lem6381179 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term670 A K x k i f dom neut) = (term697 A K k i dom f x neut).
Proof. exact (TRANS (@lem6381113 A K k i f x dom neut) (@lem6381176 A K k i dom f x neut)). Qed.
Lemma lem6381180 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381181 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term698 A K x k i f dom neut) = (term699 A K k i dom f x neut).
Proof. exact (MK_COMB (@lem6381180) (@lem6381179 A K k i dom f x neut)). Qed.
Lemma lem6381183 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6381184 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (@lem6381183 A s x t). Qed.
Lemma lem6381185 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term682 A K dom f x neut).
Proof. exact (@lem6381184 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6381189 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6381190 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6381189 A P x). Qed.
Lemma lem6381191 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term683 A K f x dom) = (term684 A K dom f x).
Proof. exact (@lem6381190 A dom (f x)). Qed.
Lemma lem6381192 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381193 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term685 A K f x dom) = (term686 A K dom f x).
Proof. exact (MK_COMB (@lem6381192) (@lem6381191 A K dom f x)). Qed.
Lemma lem6381195 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6381196 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (@lem6381195 A y x s). Qed.
Lemma lem6381197 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term689 A K f x neut) = (term690 A K neut f x).
Proof. exact (@lem6381196 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6381203 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6381204 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6381203 A x). Qed.
Lemma lem6381205 {A K : Type'} (f : K -> A) (x : K) : (term691 A K f x) = False.
Proof. exact (@lem6381204 A (f x)). Qed.
Lemma lem6381206 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term692 A K f x neut) = (term692 A K f x neut).
Proof. exact (eq_refl (term692 A K f x neut)). Qed.
Lemma lem6381207 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = (term693 A K f x neut).
Proof. exact (MK_COMB (@lem6381206 A K f x neut) (@lem6381205 A K f x)). Qed.
Lemma lem6381209 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6381210 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term693 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6381209 ((f x) = neut)). Qed.
Lemma lem6381213 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6381207 A K f x neut) (@lem6381210 A K f x neut)). Qed.
Lemma lem6381214 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term689 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6381197 A K neut f x) (@lem6381213 A K f x neut)). Qed.
Lemma lem6381215 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6381216 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term694 A K f x neut) = (term695 A K f x neut).
Proof. exact (MK_COMB (@lem6381215) (@lem6381214 A K f x neut)). Qed.
Lemma lem6381217 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term682 A K dom f x neut) = (term696 A K dom f x neut).
Proof. exact (MK_COMB (@lem6381193 A K dom f x) (@lem6381216 A K f x neut)). Qed.
Lemma lem6381220 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term696 A K dom f x neut).
Proof. exact (TRANS (@lem6381185 A K dom f x neut) (@lem6381217 A K dom f x neut)). Qed.
Lemma lem6381221 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term640 A K k i f x dom neut) = (term700 A K k i dom f x neut).
Proof. exact (MK_COMB (@lem6381181 A K k i dom f x neut) (@lem6381220 A K dom f x neut)). Qed.
Lemma lem6381224 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term652 A K x k i f dom neut) = (term700 A K k i dom f x neut).
Proof. exact (TRANS (@lem6381089 A K k i f x dom neut) (@lem6381221 A K k i dom f x neut)). Qed.
Lemma lem6381225 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6381226 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term701 A K x k i f dom neut) = (term702 A K k i dom f x neut).
Proof. exact (MK_COMB (@lem6381225) (@lem6381224 A K k i dom f x neut)). Qed.
Lemma lem6381228 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6381229 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6381228 K p x). Qed.
Lemma lem6381230 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term703 A K x k f dom neut) = (term704 A K k f dom neut x).
Proof. exact (@lem6381229 K (term705 A K k f dom neut) x). Qed.
Lemma lem6381231 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut i) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut i)). Qed.
Lemma lem6381232 {K : Type'} (GEN_PVAR_262 : K) : (@SETSPEC K GEN_PVAR_262) = (@SETSPEC K GEN_PVAR_262).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_262)). Qed.
Lemma lem6381233 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term707 A K GEN_PVAR_262 k f dom neut i) = (term708 A K GEN_PVAR_262 k f i dom neut).
Proof. exact (MK_COMB (@lem6381232 K GEN_PVAR_262) (@lem6381231 A K k f i dom neut)). Qed.
Lemma lem6381234 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6381235 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term709 A K GEN_PVAR_262 k f dom neut i) = (term710 A K GEN_PVAR_262 k f dom neut i).
Proof. exact (MK_COMB (@lem6381233 A K GEN_PVAR_262 k f i dom neut) (@lem6381234 K i)). Qed.
Lemma lem6381236 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term711 A K GEN_PVAR_262 k f dom neut) = (term712 A K GEN_PVAR_262 k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6381235 A K GEN_PVAR_262 k f dom neut i)). Qed.
Lemma lem6381237 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6381238 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term713 A K GEN_PVAR_262 k f dom neut) = (term714 A K GEN_PVAR_262 k f dom neut).
Proof. exact (MK_COMB (@lem6381237 K) (@lem6381236 A K GEN_PVAR_262 k f dom neut)). Qed.
Lemma lem6381239 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term715 A K k f dom neut) = (term716 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_262 : K => @lem6381238 A K GEN_PVAR_262 k f dom neut)). Qed.
Lemma lem6381240 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6381241 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term717 A K k f dom neut) = (term627 A K k f dom neut).
Proof. exact (MK_COMB (@lem6381240 K) (@lem6381239 A K k f dom neut)). Qed.
Lemma lem6381242 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6381243 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term703 A K x k f dom neut) = (term718 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6381242 K x) (@lem6381241 A K k f dom neut)). Qed.
Lemma lem6381244 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6381245 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term719 A K x k f dom neut) = (term720 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6381244) (@lem6381243 A K x k f dom neut)). Qed.
Lemma lem6381246 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6381247 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term703 A K x k f dom neut) = (term704 A K k f dom neut x)) = ((term718 A K x k f dom neut) = (term706 A K k f x dom neut)).
Proof. exact (MK_COMB (@lem6381245 A K x k f dom neut) (@lem6381246 A K k f x dom neut)). Qed.
Lemma lem6381248 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term718 A K x k f dom neut) = (term706 A K k f x dom neut).
Proof. exact (EQ_MP (@lem6381247 A K k f x dom neut) (@lem6381230 A K k f dom neut x)). Qed.
Lemma lem6381252 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6381253 {K : Type'} (P : K -> Prop) (x : K) : (@IN K x P) = (P x).
Proof. exact (@lem6381252 K P x). Qed.
Lemma lem6381254 {K : Type'} (k : K -> Prop) (x : K) : (@IN K x k) = (k x).
Proof. exact (@lem6381253 K k x). Qed.
Lemma lem6381255 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381256 {K : Type'} (k : K -> Prop) (x : K) : (term673 K x k) = (term674 K k x).
Proof. exact (MK_COMB (@lem6381255) (@lem6381254 K k x)). Qed.
Lemma lem6381258 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6381259 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term679 A x s t) = (term680 A s x t).
Proof. exact (@lem6381258 A s x t). Qed.
Lemma lem6381260 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term682 A K dom f x neut).
Proof. exact (@lem6381259 A dom (f x) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6381264 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6381265 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem6381264 A P x). Qed.
Lemma lem6381266 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term683 A K f x dom) = (term684 A K dom f x).
Proof. exact (@lem6381265 A dom (f x)). Qed.
Lemma lem6381267 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6381268 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term685 A K f x dom) = (term686 A K dom f x).
Proof. exact (MK_COMB (@lem6381267) (@lem6381266 A K dom f x)). Qed.
Lemma lem6381270 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6381271 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term687 A x y s) = (term688 A y x s).
Proof. exact (@lem6381270 A y x s). Qed.
Lemma lem6381272 {A K : Type'} (neut : A) (f : K -> A) (x : K) : (term689 A K f x neut) = (term690 A K neut f x).
Proof. exact (@lem6381271 A neut (f x) (@EMPTY A)). Qed.
Lemma lem6381278 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6381279 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem6381278 A x). Qed.
Lemma lem6381280 {A K : Type'} (f : K -> A) (x : K) : (term691 A K f x) = False.
Proof. exact (@lem6381279 A (f x)). Qed.
Lemma lem6381281 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term692 A K f x neut) = (term692 A K f x neut).
Proof. exact (eq_refl (term692 A K f x neut)). Qed.
Lemma lem6381282 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = (term693 A K f x neut).
Proof. exact (MK_COMB (@lem6381281 A K f x neut) (@lem6381280 A K f x)). Qed.
Lemma lem6381284 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6381285 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term693 A K f x neut) = ((f x) = neut).
Proof. exact (@lem6381284 ((f x) = neut)). Qed.
Lemma lem6381288 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term690 A K neut f x) = ((f x) = neut).
Proof. exact (TRANS (@lem6381282 A K f x neut) (@lem6381285 A K f x neut)). Qed.
Lemma lem6381289 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term689 A K f x neut) = ((f x) = neut).
Proof. exact (TRANS (@lem6381272 A K neut f x) (@lem6381288 A K f x neut)). Qed.
Lemma lem6381290 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6381291 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term694 A K f x neut) = (term695 A K f x neut).
Proof. exact (MK_COMB (@lem6381290) (@lem6381289 A K f x neut)). Qed.
Lemma lem6381292 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term682 A K dom f x neut) = (term696 A K dom f x neut).
Proof. exact (MK_COMB (@lem6381268 A K dom f x) (@lem6381291 A K f x neut)). Qed.
Lemma lem6381295 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term681 A K f x dom neut) = (term696 A K dom f x neut).
Proof. exact (TRANS (@lem6381260 A K dom f x neut) (@lem6381292 A K dom f x neut)). Qed.
Lemma lem6381296 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term706 A K k f x dom neut) = (term721 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6381256 K k x) (@lem6381295 A K dom f x neut)). Qed.
Lemma lem6381299 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term718 A K x k f dom neut) = (term721 A K k dom f x neut).
Proof. exact (TRANS (@lem6381248 A K k f x dom neut) (@lem6381296 A K k dom f x neut)). Qed.
Lemma lem6381300 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term722 A K i x k f dom neut) = (term723 A K i k dom f x neut).
Proof. exact (MK_COMB (@lem6381226 A K k i dom f x neut) (@lem6381299 A K k dom f x neut)). Qed.
Lemma lem6381303 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term724 A K i k f dom neut) = (term725 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6381300 A K i k dom f x neut)). Qed.
Lemma lem6381304 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6381305 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term636 A K i k f dom neut) = (term726 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6381304 K) (@lem6381303 A K i k dom f neut)). Qed.
Lemma lem6381310 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term726 A K i k dom f neut) = (term636 A K i k f dom neut).
Proof. exact (SYM (@lem6381305 A K i k dom f neut)). Qed.
Lemma lem6381312 (p : Prop) : p = (term23 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6381313 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term726 A K i k dom f neut) = (term727 A K i k dom f neut).
Proof. exact (@lem6381312 (term726 A K i k dom f neut)). Qed.
Lemma lem6381314 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term727 A K i k dom f neut) = (term726 A K i k dom f neut).
Proof. exact (SYM (@lem6381313 A K i k dom f neut)). Qed.
Lemma lem6381315 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term728 A K i k dom f neut) : term728 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6381318 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term727 A K i k dom f neut) : term727 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6381319 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term729 A K i k dom f neut.
Proof. exact (fun h0 : term727 A K i k dom f neut => @lem6381318 A K i k dom f neut h0). Qed.
Lemma lem6381320 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term729 A K i k dom f neut) : term729 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6381321 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term727 A K i k dom f neut) : term727 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6381322 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term727 A K i k dom f neut) (h2 : term729 A K i k dom f neut) : term727 A K i k dom f neut.
Proof. exact (@lem6381320 A K i k dom f neut h2 (@lem6381321 A K i k dom f neut h1)). Qed.
Lemma lem6381323 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term727 A K i k dom f neut) : term730 A K i k dom f neut.
Proof. exact (fun h0 : term729 A K i k dom f neut => @lem6381322 A K i k dom f neut h1 h0). Qed.
Lemma lem6381324 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term729 A K i k dom f neut) : term729 A K i k dom f neut.
Proof. exact (h1). Qed.
Lemma lem6381325 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term727 A K i k dom f neut) (h2 : term729 A K i k dom f neut) : term727 A K i k dom f neut.
Proof. exact (@lem6381323 A K i k dom f neut h1 (@lem6381324 A K i k dom f neut h2)). Qed.
Lemma lem6381326 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term729 A K i k dom f neut) : term729 A K i k dom f neut.
Proof. exact (fun h0 : term727 A K i k dom f neut => @lem6381325 A K i k dom f neut h0 h1). Qed.
Lemma lem6381327 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term731 A K i k dom f neut.
Proof. exact (fun h0 : term729 A K i k dom f neut => @lem6381326 A K i k dom f neut h0). Qed.
Lemma lem6381330 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term729 A K i k dom f neut.
Proof. exact (@lem6381327 A K i k dom f neut (@lem6381319 A K i k dom f neut)). Qed.
Lemma lem6381331 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term729 A K i k dom f neut.
Proof. exact (@lem6381330 A K i k dom f neut). Qed.
Lemma lem6381353 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6381354 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term727 A K i k dom f neut) = (term732 A K i k dom f neut).
Proof. exact (@lem6381353 (term728 A K i k dom f neut)). Qed.
Lemma lem6381356 (t : Prop) : (term32 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6381357 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term732 A K i k dom f neut) = (term726 A K i k dom f neut).
Proof. exact (@lem6381356 (term726 A K i k dom f neut)). Qed.
Lemma lem6381362 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term727 A K i k dom f neut) = (term726 A K i k dom f neut).
Proof. exact (TRANS (@lem6381354 A K i k dom f neut) (@lem6381357 A K i k dom f neut)). Qed.
Lemma lem6381379 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term733 A K k dom f neut) = (term734 A K k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6381362 A K i k dom f neut)). Qed.
Lemma lem6381380 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6381381 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term735 A K k dom f neut) = (term736 A K k dom f neut).
Proof. exact (MK_COMB (@lem6381380 K) (@lem6381379 A K k dom f neut)). Qed.
Lemma lem6381386 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term737 A K dom f neut) = (term738 A K dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6381381 A K k dom f neut)). Qed.
Lemma lem6381387 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6381388 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term739 A K dom f neut) = (term740 A K dom f neut).
Proof. exact (MK_COMB (@lem6381387 K) (@lem6381386 A K dom f neut)). Qed.
Lemma lem6381393 {A K : Type'} (f : K -> A) (neut : A) : (term741 A K f neut) = (term742 A K f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6381388 A K dom f neut)). Qed.
Lemma lem6381394 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6381395 {A K : Type'} (f : K -> A) (neut : A) : (term743 A K f neut) = (term744 A K f neut).
Proof. exact (MK_COMB (@lem6381394 A) (@lem6381393 A K f neut)). Qed.
Lemma lem6381400 {A K : Type'} (neut : A) : (term745 A K neut) = (term746 A K neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6381395 A K f neut)). Qed.
Lemma lem6381401 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6381402 {A K : Type'} (neut : A) : (term747 A K neut) = (term748 A K neut).
Proof. exact (MK_COMB (@lem6381401 A K) (@lem6381400 A K neut)). Qed.
Lemma lem6381407 {A K : Type'} : (term749 A K) = (term750 A K).
Proof. exact (fun_ext (fun neut : A => @lem6381402 A K neut)). Qed.
Lemma lem6381408 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6381417 {A K : Type'} : (term751 A K) = (term752 A K).
Proof. exact (MK_COMB (@lem6381408 A) (@lem6381407 A K)). Qed.
Lemma lem6381458 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term723 A K i k dom f x neut) = (term723 A K i k dom f x neut).
Proof. exact (eq_refl (term723 A K i k dom f x neut)). Qed.
Lemma lem6381459 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term725 A K i k dom f neut) = (term725 A K i k dom f neut).
Proof. exact (fun_ext (fun x : K => @lem6381458 A K i k dom f x neut)). Qed.
Lemma lem6381460 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6381461 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term726 A K i k dom f neut) = (term726 A K i k dom f neut).
Proof. exact (MK_COMB (@lem6381460 K) (@lem6381459 A K i k dom f neut)). Qed.
Lemma lem6381462 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term734 A K k dom f neut) = (term734 A K k dom f neut).
Proof. exact (fun_ext (fun i : K => @lem6381461 A K i k dom f neut)). Qed.
Lemma lem6381463 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6381464 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term736 A K k dom f neut) = (term736 A K k dom f neut).
Proof. exact (MK_COMB (@lem6381463 K) (@lem6381462 A K k dom f neut)). Qed.
Lemma lem6381465 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term738 A K dom f neut) = (term738 A K dom f neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6381464 A K k dom f neut)). Qed.
Lemma lem6381466 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6381467 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term740 A K dom f neut) = (term740 A K dom f neut).
Proof. exact (MK_COMB (@lem6381466 K) (@lem6381465 A K dom f neut)). Qed.
Lemma lem6381468 {A K : Type'} (f : K -> A) (neut : A) : (term742 A K f neut) = (term742 A K f neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6381467 A K dom f neut)). Qed.
Lemma lem6381469 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6381470 {A K : Type'} (f : K -> A) (neut : A) : (term744 A K f neut) = (term744 A K f neut).
Proof. exact (MK_COMB (@lem6381469 A) (@lem6381468 A K f neut)). Qed.
Lemma lem6381471 {A K : Type'} (neut : A) : (term746 A K neut) = (term746 A K neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6381470 A K f neut)). Qed.
Lemma lem6381472 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6381473 {A K : Type'} (neut : A) : (term748 A K neut) = (term748 A K neut).
Proof. exact (MK_COMB (@lem6381472 A K) (@lem6381471 A K neut)). Qed.
Lemma lem6381474 {A K : Type'} : (term750 A K) = (term750 A K).
Proof. exact (fun_ext (fun neut : A => @lem6381473 A K neut)). Qed.
Lemma lem6381475 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6381476 {A K : Type'} : (term752 A K) = (term752 A K).
Proof. exact (MK_COMB (@lem6381475 A) (@lem6381474 A K)). Qed.
Lemma lem6381531 {A K : Type'} : (term751 A K) = (term752 A K).
Proof. exact (TRANS (@lem6381417 A K) (@lem6381476 A K)). Qed.
Lemma lem6381532 {A K : Type'} : (term752 A K) = (term751 A K).
Proof. exact (SYM (@lem6381531 A K)). Qed.
Lemma lem6381535 (p : Prop) : p = (term23 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6381536 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term721 A K k dom f x neut) = (term753 A K k dom f x neut).
Proof. exact (@lem6381535 (term721 A K k dom f x neut)). Qed.
Lemma lem6381537 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term753 A K k dom f x neut) = (term721 A K k dom f x neut).
Proof. exact (SYM (@lem6381536 A K k dom f x neut)). Qed.
Lemma lem6381538 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) : term754 A K k dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6381564 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term700 A K k i dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6381569 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term755 A K f x neut) = ((f x) = neut).
Proof. exact (@lem16933 ((f x) = neut)). Qed.
Lemma lem6381571 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term756 A K dom f x) = (term756 A K dom f x).
Proof. exact (eq_refl (term756 A K dom f x)). Qed.
Lemma lem6381572 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term757 A K dom f x neut) = (term758 A K dom f x neut).
Proof. exact (MK_COMB (@lem6381571 A K dom f x) (@lem6381569 A K f x neut)). Qed.
Lemma lem6381573 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term759 A K dom f x neut) = (term757 A K dom f x neut).
Proof. exact (@lem17045 (term684 A K dom f x) (term695 A K f x neut)). Qed.
Lemma lem6381574 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term759 A K dom f x neut) = (term758 A K dom f x neut).
Proof. exact (TRANS (@lem6381573 A K dom f x neut) (@lem6381572 A K dom f x neut)). Qed.
Lemma lem6381576 {K : Type'} (k : K -> Prop) (x : K) : (term760 K k x) = (term760 K k x).
Proof. exact (eq_refl (term760 K k x)). Qed.
Lemma lem6381577 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term761 A K k dom f x neut) = (term762 A K k dom f x neut).
Proof. exact (MK_COMB (@lem6381576 K k x) (@lem6381574 A K dom f x neut)). Qed.
Lemma lem6381578 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term754 A K k dom f x neut) = (term761 A K k dom f x neut).
Proof. exact (@lem17045 (k x) (term696 A K dom f x neut)). Qed.
Lemma lem6381583 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : (term754 A K k dom f x neut) = (term762 A K k dom f x neut).
Proof. exact (TRANS (@lem6381578 A K k dom f x neut) (@lem6381577 A K k dom f x neut)). Qed.
Lemma lem6381638 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term700 A K k i dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6381664 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) : term762 A K k dom f x neut.
Proof. exact (EQ_MP (@lem6381583 A K k dom f x neut) (@lem6381538 A K k dom f x neut h1)). Qed.
Lemma lem6381665 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term696 A K dom f x neut.
Proof. exact (proj2 (@lem6381638 A K k i dom f x neut h1)). Qed.
Lemma lem6381666 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term697 A K k i dom f x neut.
Proof. exact (proj1 (@lem6381638 A K k i dom f x neut h1)). Qed.
Lemma lem6381670 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term676 K k x i.
Proof. exact (proj1 (@lem6381666 A K k i dom f x neut h1)). Qed.
Lemma lem6381676 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term758 A K dom f x neut) : term758 A K dom f x neut.
Proof. exact (h1). Qed.
Lemma lem6381706 {K : Type'} (k : K -> Prop) (x : K) (h1 : term763 K k x) : term763 K k x.
Proof. exact (h1). Qed.
Lemma lem6381734 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term764 A K dom f x) : term764 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6381762 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (f x) = neut) : (f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6381776 {K : Type'} (k : K -> Prop) (x : K) (h1 : term763 K k x) : term763 K k x.
Proof. exact (h1). Qed.
Lemma lem6381790 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term764 A K dom f x) : term764 A K dom f x.
Proof. exact (h1). Qed.
Lemma lem6381794 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term695 A K f x neut.
Proof. exact (proj2 (@lem6381665 A K k i dom f x neut h1)). Qed.
Lemma lem6381804 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (f x) = neut) : (f x) = neut.
Proof. exact (h1). Qed.
Lemma lem6381805 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (f x) = neut) : neut = (f x).
Proof. exact (SYM (@lem6381804 A K f x neut h1)). Qed.
Lemma lem6381834 {A K : Type'} (f : K -> A) (x : K) : (term765 A K f x) = (term765 A K f x).
Proof. exact (eq_refl (term765 A K f x)). Qed.
Lemma lem6381835 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (f x) = neut) : (term766 A K f x neut) = (term767 A K f x).
Proof. exact (MK_COMB (@lem6381834 A K f x) (@lem6381805 A K f x neut h1)). Qed.
Lemma lem6381836 {A K : Type'} (f : K -> A) (x : K) : (term767 A K f x) = (term768 A K f x).
Proof. exact (eq_refl (term767 A K f x)). Qed.
Lemma lem6381837 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term769 A K f x neut) = (term769 A K f x neut).
Proof. exact (eq_refl (term769 A K f x neut)). Qed.
Lemma lem6381838 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term766 A K f x neut) = (term767 A K f x)) = ((term766 A K f x neut) = (term768 A K f x)).
Proof. exact (MK_COMB (@lem6381837 A K f x neut) (@lem6381836 A K f x)). Qed.
Lemma lem6381839 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term766 A K f x neut) = (term695 A K f x neut).
Proof. exact (eq_refl (term766 A K f x neut)). Qed.
Lemma lem6381840 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6381841 {A K : Type'} (f : K -> A) (x : K) (neut : A) : (term769 A K f x neut) = (term770 A K f x neut).
Proof. exact (MK_COMB (@lem6381840) (@lem6381839 A K f x neut)). Qed.
Lemma lem6381842 {A K : Type'} (f : K -> A) (x : K) : (term768 A K f x) = (term768 A K f x).
Proof. exact (eq_refl (term768 A K f x)). Qed.
Lemma lem6381843 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term766 A K f x neut) = (term768 A K f x)) = ((term695 A K f x neut) = (term768 A K f x)).
Proof. exact (MK_COMB (@lem6381841 A K f x neut) (@lem6381842 A K f x)). Qed.
Lemma lem6381844 {A K : Type'} (neut : A) (f : K -> A) (x : K) : ((term766 A K f x neut) = (term767 A K f x)) = ((term695 A K f x neut) = (term768 A K f x)).
Proof. exact (TRANS (@lem6381838 A K neut f x) (@lem6381843 A K neut f x)). Qed.
Lemma lem6381845 {A K : Type'} (f : K -> A) (x : K) (neut : A) (h1 : (f x) = neut) : (term695 A K f x neut) = (term768 A K f x).
Proof. exact (EQ_MP (@lem6381844 A K neut f x) (@lem6381835 A K f x neut h1)). Qed.
Lemma lem6381846 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : term768 A K f x.
Proof. exact (EQ_MP (@lem6381845 A K f x neut h2) (@lem6381794 A K k i dom f x neut h1)). Qed.
Lemma lem6381939 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : k x.
Proof. exact (proj1 (@lem6381670 A K k i dom f x neut h1)). Qed.
Lemma lem6381940 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term771 K k x.
Proof. exact (fun h0 : term763 K k x => @lem6381939 A K k i dom f x neut h1). Qed.
Lemma lem6381942 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6381943 {K : Type'} (k : K -> Prop) (x : K) : (term771 K k x) = (k x).
Proof. exact (@lem6381942 (k x)). Qed.
Lemma lem6381944 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : k x.
Proof. exact (EQ_MP (@lem6381943 K k x) (@lem6381940 A K k i dom f x neut h1)). Qed.
Lemma lem6381947 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6381949 {K : Type'} (k : K -> Prop) (x : K) : (term763 K k x) = (term773 K k x).
Proof. exact (@lem6381947 (k x)). Qed.
Lemma lem6381952 {K : Type'} (k : K -> Prop) (x : K) (h1 : term763 K k x) : term773 K k x.
Proof. exact (EQ_MP (@lem6381949 K k x) (@lem6381776 K k x h1)). Qed.
Lemma lem6381955 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (@lem6381952 K k x h1 (@lem6381944 A K k i dom f x neut h2)). Qed.
Lemma lem6381956 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6381955 A K k i dom f x neut h1 h2). Qed.
Lemma lem6381958 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6381959 : term774 = False.
Proof. exact (@lem6381958 False). Qed.
Lemma lem6381960 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6381959) (@lem6381956 A K k i dom f x neut h1 h2)). Qed.
Lemma lem6381998 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term684 A K dom f x.
Proof. exact (proj1 (@lem6381665 A K k i dom f x neut h1)). Qed.
Lemma lem6381999 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term775 A K dom f x.
Proof. exact (fun h0 : term764 A K dom f x => @lem6381998 A K k i dom f x neut h1). Qed.
Lemma lem6382001 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6382002 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term775 A K dom f x) = (term684 A K dom f x).
Proof. exact (@lem6382001 (term684 A K dom f x)). Qed.
Lemma lem6382003 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term684 A K dom f x.
Proof. exact (EQ_MP (@lem6382002 A K dom f x) (@lem6381999 A K k i dom f x neut h1)). Qed.
Lemma lem6382006 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6382008 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) : (term764 A K dom f x) = (term776 A K dom f x).
Proof. exact (@lem6382006 (term684 A K dom f x)). Qed.
Lemma lem6382011 {A K : Type'} (dom : A -> Prop) (f : K -> A) (x : K) (h1 : term764 A K dom f x) : term776 A K dom f x.
Proof. exact (EQ_MP (@lem6382008 A K dom f x) (@lem6381790 A K dom f x h1)). Qed.
Lemma lem6382014 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (@lem6382011 A K dom f x h1 (@lem6382003 A K k i dom f x neut h2)). Qed.
Lemma lem6382015 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6382014 A K k i dom f x neut h1 h2). Qed.
Lemma lem6382017 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6382018 : term774 = False.
Proof. exact (@lem6382017 False). Qed.
Lemma lem6382019 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382018) (@lem6382015 A K k i dom f x neut h1 h2)). Qed.
Lemma lem6382057 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem6382058 {A : Type'} (x : A) : x = x.
Proof. exact (@lem6382057 A x). Qed.
Lemma lem6382059 {A K : Type'} (f : K -> A) (x : K) : (f x) = (f x).
Proof. exact (@lem6382058 A (f x)). Qed.
Lemma lem6382060 {A K : Type'} (f : K -> A) (x : K) : term777 A K f x.
Proof. exact (fun h0 : term768 A K f x => @lem6382059 A K f x). Qed.
Lemma lem6382062 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6382063 {A K : Type'} (f : K -> A) (x : K) : (term777 A K f x) = ((f x) = (f x)).
Proof. exact (@lem6382062 ((f x) = (f x))). Qed.
Lemma lem6382064 {A K : Type'} (f : K -> A) (x : K) : (f x) = (f x).
Proof. exact (EQ_MP (@lem6382063 A K f x) (@lem6382060 A K f x)). Qed.
Lemma lem6382067 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6382069 {A K : Type'} (f : K -> A) (x : K) : (term768 A K f x) = (term778 A K f x).
Proof. exact (@lem6382067 ((f x) = (f x))). Qed.
Lemma lem6382072 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : term778 A K f x.
Proof. exact (EQ_MP (@lem6382069 A K f x) (@lem6381846 A K k i dom f x neut h1 h2)). Qed.
Lemma lem6382075 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : False.
Proof. exact (@lem6382072 A K k i dom f x neut h1 h2 (@lem6382064 A K f x)). Qed.
Lemma lem6382076 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6382075 A K k i dom f x neut h1 h2). Qed.
Lemma lem6382078 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6382079 : term774 = False.
Proof. exact (@lem6382078 False). Qed.
Lemma lem6382081 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : False.
Proof. exact (EQ_MP (@lem6382079) (@lem6382076 A K k i dom f x neut h1 h2)). Qed.
Lemma lem6382082 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : ((f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (f x) = neut => @lem6382081 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381804 A K f x neut h2)). Qed.
Lemma lem6382083 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : False.
Proof. exact (EQ_MP (@lem6382082 A K k i dom f x neut h1 h2) (@lem6381804 A K f x neut h2)). Qed.
Lemma lem6382084 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : (term764 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term764 A K dom f x => @lem6382019 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381790 A K dom f x h1)). Qed.
Lemma lem6382085 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382084 A K k i dom f x neut h1 h2) (@lem6381790 A K dom f x h1)). Qed.
Lemma lem6382086 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : (term763 K k x) = False.
Proof. exact (prop_ext (fun h3 : term763 K k x => @lem6381960 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381776 K k x h1)). Qed.
Lemma lem6382087 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382086 A K k i dom f x neut h1 h2) (@lem6381776 K k x h1)). Qed.
Lemma lem6382088 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : ((f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (f x) = neut => @lem6382083 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381762 A K f x neut h2)). Qed.
Lemma lem6382089 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : False.
Proof. exact (EQ_MP (@lem6382088 A K k i dom f x neut h1 h2) (@lem6381762 A K f x neut h2)). Qed.
Lemma lem6382090 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : (term764 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term764 A K dom f x => @lem6382085 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381734 A K dom f x h1)). Qed.
Lemma lem6382091 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382090 A K k i dom f x neut h1 h2) (@lem6381734 A K dom f x h1)). Qed.
Lemma lem6382092 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : (term763 K k x) = False.
Proof. exact (prop_ext (fun h3 : term763 K k x => @lem6382087 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381706 K k x h1)). Qed.
Lemma lem6382093 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382092 A K k i dom f x neut h1 h2) (@lem6381706 K k x h1)). Qed.
Lemma lem6382094 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : ((f x) = neut) = False.
Proof. exact (prop_ext (fun h3 : (f x) = neut => @lem6382089 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381762 A K f x neut h2)). Qed.
Lemma lem6382095 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : (f x) = neut) : False.
Proof. exact (EQ_MP (@lem6382094 A K k i dom f x neut h1 h2) (@lem6381762 A K f x neut h2)). Qed.
Lemma lem6382096 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : (term764 A K dom f x) = False.
Proof. exact (prop_ext (fun h3 : term764 A K dom f x => @lem6382091 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381734 A K dom f x h1)). Qed.
Lemma lem6382097 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term764 A K dom f x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382096 A K k i dom f x neut h1 h2) (@lem6381734 A K dom f x h1)). Qed.
Lemma lem6382098 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : (term763 K k x) = False.
Proof. exact (prop_ext (fun h3 : term763 K k x => @lem6382093 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381706 K k x h1)). Qed.
Lemma lem6382099 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term763 K k x) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382098 A K k i dom f x neut h1 h2) (@lem6381706 K k x h1)). Qed.
Lemma lem6382100 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) (h2 : term758 A K dom f x neut) : False.
Proof. exact (or_elim (@lem6381676 A K dom f x neut h2) (fun h0 : term764 A K dom f x => @lem6382097 A K k i dom f x neut h0 h1) (fun h0 : (f x) = neut => @lem6382095 A K k i dom f x neut h1 h0)). Qed.
Lemma lem6382101 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (or_elim (@lem6381664 A K k dom f x neut h1) (fun h0 : term763 K k x => @lem6382099 A K k i dom f x neut h0 h2) (fun h0 : term758 A K dom f x neut => @lem6382100 A K k i dom f x neut h2 h0)). Qed.
Lemma lem6382102 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : (term700 A K k i dom f x neut) = False.
Proof. exact (prop_ext (fun h3 : term700 A K k i dom f x neut => @lem6382101 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381638 A K k i dom f x neut h2)). Qed.
Lemma lem6382103 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382102 A K k i dom f x neut h1 h2) (@lem6381638 A K k i dom f x neut h2)). Qed.
Lemma lem6382104 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : (term700 A K k i dom f x neut) = False.
Proof. exact (prop_ext (fun h3 : term700 A K k i dom f x neut => @lem6382103 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381564 A K k i dom f x neut h2)). Qed.
Lemma lem6382105 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382104 A K k i dom f x neut h1 h2) (@lem6381564 A K k i dom f x neut h2)). Qed.
Lemma lem6382106 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : (term754 A K k dom f x neut) = False.
Proof. exact (prop_ext (fun h3 : term754 A K k dom f x neut => @lem6382105 A K k i dom f x neut h1 h2) (fun h3 : False => @lem6381538 A K k dom f x neut h1)). Qed.
Lemma lem6382107 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term754 A K k dom f x neut) (h2 : term700 A K k i dom f x neut) : False.
Proof. exact (EQ_MP (@lem6382106 A K k i dom f x neut h1 h2) (@lem6381538 A K k dom f x neut h1)). Qed.
Lemma lem6382108 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term753 A K k dom f x neut.
Proof. exact (fun h0 : term754 A K k dom f x neut => @lem6382107 A K k i dom f x neut h0 h1). Qed.
Lemma lem6382109 {A K : Type'} (k : K -> Prop) (i : K) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) (h1 : term700 A K k i dom f x neut) : term721 A K k dom f x neut.
Proof. exact (EQ_MP (@lem6381537 A K k dom f x neut) (@lem6382108 A K k i dom f x neut h1)). Qed.
Lemma lem6382110 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (x : K) (neut : A) : term723 A K i k dom f x neut.
Proof. exact (fun h0 : term700 A K k i dom f x neut => @lem6382109 A K k i dom f x neut h0). Qed.
Lemma lem6382115 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term726 A K i k dom f neut.
Proof. exact (fun x : K => @lem6382110 A K i k dom f x neut). Qed.
Lemma lem6382120 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term736 A K k dom f neut.
Proof. exact (fun i : K => @lem6382115 A K i k dom f neut). Qed.
Lemma lem6382125 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : term740 A K dom f neut.
Proof. exact (fun k : K -> Prop => @lem6382120 A K k dom f neut). Qed.
Lemma lem6382130 {A K : Type'} (f : K -> A) (neut : A) : term744 A K f neut.
Proof. exact (fun dom : A -> Prop => @lem6382125 A K dom f neut). Qed.
Lemma lem6382135 {A K : Type'} (neut : A) : term748 A K neut.
Proof. exact (fun f : K -> A => @lem6382130 A K f neut). Qed.
Lemma lem6382140 {A K : Type'} : term752 A K.
Proof. exact (fun neut : A => @lem6382135 A K neut). Qed.
Lemma lem6382141 {A K : Type'} : term751 A K.
Proof. exact (EQ_MP (@lem6381532 A K) (@lem6382140 A K)). Qed.
Lemma lem6382142 {A K : Type'} (neut : A) : term779 A K neut.
Proof. exact (@lem6382141 A K neut). Qed.
Lemma lem6382143 {A K : Type'} (neut : A) : (term779 A K neut) = (term747 A K neut).
Proof. exact (eq_refl (term779 A K neut)). Qed.
Lemma lem6382144 {A K : Type'} (neut : A) : term747 A K neut.
Proof. exact (EQ_MP (@lem6382143 A K neut) (@lem6382142 A K neut)). Qed.
Lemma lem6382145 {A K : Type'} (neut : A) (f : K -> A) : term780 A K neut f.
Proof. exact (@lem6382144 A K neut f). Qed.
Lemma lem6382146 {A K : Type'} (f : K -> A) (neut : A) : (term780 A K neut f) = (term743 A K f neut).
Proof. exact (eq_refl (term780 A K neut f)). Qed.
Lemma lem6382147 {A K : Type'} (f : K -> A) (neut : A) : term743 A K f neut.
Proof. exact (EQ_MP (@lem6382146 A K f neut) (@lem6382145 A K neut f)). Qed.
Lemma lem6382148 {A K : Type'} (f : K -> A) (neut : A) (dom : A -> Prop) : term781 A K f neut dom.
Proof. exact (@lem6382147 A K f neut dom). Qed.
Lemma lem6382149 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : (term781 A K f neut dom) = (term739 A K dom f neut).
Proof. exact (eq_refl (term781 A K f neut dom)). Qed.
Lemma lem6382150 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) : term739 A K dom f neut.
Proof. exact (EQ_MP (@lem6382149 A K dom f neut) (@lem6382148 A K f neut dom)). Qed.
Lemma lem6382151 {A K : Type'} (dom : A -> Prop) (f : K -> A) (neut : A) (k : K -> Prop) : term782 A K dom f neut k.
Proof. exact (@lem6382150 A K dom f neut k). Qed.
Lemma lem6382152 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term782 A K dom f neut k) = (term735 A K k dom f neut).
Proof. exact (eq_refl (term782 A K dom f neut k)). Qed.
Lemma lem6382153 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term735 A K k dom f neut.
Proof. exact (EQ_MP (@lem6382152 A K k dom f neut) (@lem6382151 A K dom f neut k)). Qed.
Lemma lem6382154 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (i : K) : term783 A K k dom f neut i.
Proof. exact (@lem6382153 A K k dom f neut i). Qed.
Lemma lem6382155 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term783 A K k dom f neut i) = (term727 A K i k dom f neut).
Proof. exact (eq_refl (term783 A K k dom f neut i)). Qed.
Lemma lem6382156 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term727 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6382155 A K i k dom f neut) (@lem6382154 A K k dom f neut i)). Qed.
Lemma lem6382158 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term727 A K i k dom f neut.
Proof. exact (@lem6381331 A K i k dom f neut (@lem6382156 A K i k dom f neut)). Qed.
Lemma lem6382159 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term728 A K i k dom f neut) : False.
Proof. exact (@lem6382158 A K i k dom f neut (@lem6381315 A K i k dom f neut h1)). Qed.
Lemma lem6382160 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term728 A K i k dom f neut) : (term728 A K i k dom f neut) = False.
Proof. exact (prop_ext (fun h2 : term728 A K i k dom f neut => @lem6382159 A K i k dom f neut h1) (fun h2 : False => @lem6381315 A K i k dom f neut h1)). Qed.
Lemma lem6382161 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) (h1 : term728 A K i k dom f neut) : False.
Proof. exact (EQ_MP (@lem6382160 A K i k dom f neut h1) (@lem6381315 A K i k dom f neut h1)). Qed.
Lemma lem6382162 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term727 A K i k dom f neut.
Proof. exact (fun h0 : term728 A K i k dom f neut => @lem6382161 A K i k dom f neut h0). Qed.
Lemma lem6382163 {A K : Type'} (i : K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term726 A K i k dom f neut.
Proof. exact (EQ_MP (@lem6381314 A K i k dom f neut) (@lem6382162 A K i k dom f neut)). Qed.
Lemma lem6382164 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term636 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6381310 A K i k f dom neut) (@lem6382163 A K i k dom f neut)). Qed.
Lemma lem6382165 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term635 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6381061 A K i k f dom neut) (@lem6382164 A K i k f dom neut)). Qed.
Lemma lem6382173 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem6378574 _83095 p x) (@lem6378573 _83095 p x)). Qed.
Lemma lem6382174 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6382173 K p x). Qed.
Lemma lem6382175 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (a : K) : (term703 A K a k f dom neut) = (term704 A K k f dom neut a).
Proof. exact (@lem6382174 K (term705 A K k f dom neut) a). Qed.
Lemma lem6382176 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut i) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut i)). Qed.
Lemma lem6382177 {K : Type'} (GEN_PVAR_262 : K) : (@SETSPEC K GEN_PVAR_262) = (@SETSPEC K GEN_PVAR_262).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_262)). Qed.
Lemma lem6382178 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term707 A K GEN_PVAR_262 k f dom neut i) = (term708 A K GEN_PVAR_262 k f i dom neut).
Proof. exact (MK_COMB (@lem6382177 K GEN_PVAR_262) (@lem6382176 A K k f i dom neut)). Qed.
Lemma lem6382179 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6382180 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term709 A K GEN_PVAR_262 k f dom neut i) = (term710 A K GEN_PVAR_262 k f dom neut i).
Proof. exact (MK_COMB (@lem6382178 A K GEN_PVAR_262 k f i dom neut) (@lem6382179 K i)). Qed.
Lemma lem6382181 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term711 A K GEN_PVAR_262 k f dom neut) = (term712 A K GEN_PVAR_262 k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6382180 A K GEN_PVAR_262 k f dom neut i)). Qed.
Lemma lem6382182 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382183 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term713 A K GEN_PVAR_262 k f dom neut) = (term714 A K GEN_PVAR_262 k f dom neut).
Proof. exact (MK_COMB (@lem6382182 K) (@lem6382181 A K GEN_PVAR_262 k f dom neut)). Qed.
Lemma lem6382184 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term715 A K k f dom neut) = (term716 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_262 : K => @lem6382183 A K GEN_PVAR_262 k f dom neut)). Qed.
Lemma lem6382185 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6382186 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term717 A K k f dom neut) = (term627 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382185 K) (@lem6382184 A K k f dom neut)). Qed.
Lemma lem6382187 {K : Type'} (a : K) : (@IN K a) = (@IN K a).
Proof. exact (eq_refl (@IN K a)). Qed.
Lemma lem6382188 {A K : Type'} (a : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term703 A K a k f dom neut) = (term718 A K a k f dom neut).
Proof. exact (MK_COMB (@lem6382187 K a) (@lem6382186 A K k f dom neut)). Qed.
Lemma lem6382189 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382190 {A K : Type'} (a : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term719 A K a k f dom neut) = (term720 A K a k f dom neut).
Proof. exact (MK_COMB (@lem6382189) (@lem6382188 A K a k f dom neut)). Qed.
Lemma lem6382191 {A K : Type'} (k : K -> Prop) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut a) = (term706 A K k f a dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut a)). Qed.
Lemma lem6382192 {A K : Type'} (k : K -> Prop) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : ((term703 A K a k f dom neut) = (term704 A K k f dom neut a)) = ((term718 A K a k f dom neut) = (term706 A K k f a dom neut)).
Proof. exact (MK_COMB (@lem6382190 A K a k f dom neut) (@lem6382191 A K k f a dom neut)). Qed.
Lemma lem6382193 {A K : Type'} (k : K -> Prop) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term718 A K a k f dom neut) = (term706 A K k f a dom neut).
Proof. exact (EQ_MP (@lem6382192 A K k f a dom neut) (@lem6382175 A K k f dom neut a)). Qed.
Lemma lem6382196 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382197 {A K : Type'} (k : K -> Prop) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term784 A K a k f dom neut) = (term785 A K k f a dom neut).
Proof. exact (MK_COMB (@lem6382196) (@lem6382193 A K k f a dom neut)). Qed.
Lemma lem6382199 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem6378574 _83095 p x) (@lem6378573 _83095 p x)). Qed.
Lemma lem6382200 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6382199 K p x). Qed.
Lemma lem6382201 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (a : K) : (term637 A K a k i f dom neut) = (term638 A K k i f dom neut a).
Proof. exact (@lem6382200 K (term639 A K k i f dom neut) a). Qed.
Lemma lem6382202 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term638 A K k i f dom neut i') = (term640 A K k i f i' dom neut).
Proof. exact (eq_refl (term638 A K k i f dom neut i')). Qed.
Lemma lem6382203 {K : Type'} (GEN_PVAR_262 : K) : (@SETSPEC K GEN_PVAR_262) = (@SETSPEC K GEN_PVAR_262).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_262)). Qed.
Lemma lem6382204 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term641 A K GEN_PVAR_262 k i f dom neut i') = (term642 A K GEN_PVAR_262 k i f i' dom neut).
Proof. exact (MK_COMB (@lem6382203 K GEN_PVAR_262) (@lem6382202 A K k i f i' dom neut)). Qed.
Lemma lem6382205 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6382206 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term643 A K GEN_PVAR_262 k i f dom neut i') = (term644 A K GEN_PVAR_262 k i f dom neut i').
Proof. exact (MK_COMB (@lem6382204 A K GEN_PVAR_262 k i f i' dom neut) (@lem6382205 K i')). Qed.
Lemma lem6382207 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term645 A K GEN_PVAR_262 k i f dom neut) = (term646 A K GEN_PVAR_262 k i f dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6382206 A K GEN_PVAR_262 k i f dom neut i')). Qed.
Lemma lem6382208 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382209 {A K : Type'} (GEN_PVAR_262 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term647 A K GEN_PVAR_262 k i f dom neut) = (term648 A K GEN_PVAR_262 k i f dom neut).
Proof. exact (MK_COMB (@lem6382208 K) (@lem6382207 A K GEN_PVAR_262 k i f dom neut)). Qed.
Lemma lem6382210 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term649 A K k i f dom neut) = (term650 A K k i f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_262 : K => @lem6382209 A K GEN_PVAR_262 k i f dom neut)). Qed.
Lemma lem6382211 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6382212 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term651 A K k i f dom neut) = (term626 A K k i f dom neut).
Proof. exact (MK_COMB (@lem6382211 K) (@lem6382210 A K k i f dom neut)). Qed.
Lemma lem6382213 {K : Type'} (a : K) : (@IN K a) = (@IN K a).
Proof. exact (eq_refl (@IN K a)). Qed.
Lemma lem6382214 {A K : Type'} (a : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term637 A K a k i f dom neut) = (term652 A K a k i f dom neut).
Proof. exact (MK_COMB (@lem6382213 K a) (@lem6382212 A K k i f dom neut)). Qed.
Lemma lem6382215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382216 {A K : Type'} (a : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term653 A K a k i f dom neut) = (term654 A K a k i f dom neut).
Proof. exact (MK_COMB (@lem6382215) (@lem6382214 A K a k i f dom neut)). Qed.
Lemma lem6382217 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term638 A K k i f dom neut a) = (term640 A K k i f a dom neut).
Proof. exact (eq_refl (term638 A K k i f dom neut a)). Qed.
Lemma lem6382218 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : ((term637 A K a k i f dom neut) = (term638 A K k i f dom neut a)) = ((term652 A K a k i f dom neut) = (term640 A K k i f a dom neut)).
Proof. exact (MK_COMB (@lem6382216 A K a k i f dom neut) (@lem6382217 A K k i f a dom neut)). Qed.
Lemma lem6382219 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term652 A K a k i f dom neut) = (term640 A K k i f a dom neut).
Proof. exact (EQ_MP (@lem6382218 A K k i f a dom neut) (@lem6382201 A K k i f dom neut a)). Qed.
Lemma lem6382223 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem6378574 _83095 p x) (@lem6378573 _83095 p x)). Qed.
Lemma lem6382224 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6382223 K p x). Qed.
Lemma lem6382225 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (a : K) : (term655 A K a k i f dom neut) = (term656 A K k i f dom neut a).
Proof. exact (@lem6382224 K (term657 A K k i f dom neut) a). Qed.
Lemma lem6382226 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term656 A K k i f dom neut j) = (term658 A K k i f j dom neut).
Proof. exact (eq_refl (term656 A K k i f dom neut j)). Qed.
Lemma lem6382227 {K : Type'} (GEN_PVAR_265 : K) : (@SETSPEC K GEN_PVAR_265) = (@SETSPEC K GEN_PVAR_265).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_265)). Qed.
Lemma lem6382228 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term659 A K GEN_PVAR_265 k i f dom neut j) = (term660 A K GEN_PVAR_265 k i f j dom neut).
Proof. exact (MK_COMB (@lem6382227 K GEN_PVAR_265) (@lem6382226 A K k i f j dom neut)). Qed.
Lemma lem6382229 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6382230 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) : (term661 A K GEN_PVAR_265 k i f dom neut j) = (term662 A K GEN_PVAR_265 k i f dom neut j).
Proof. exact (MK_COMB (@lem6382228 A K GEN_PVAR_265 k i f j dom neut) (@lem6382229 K j)). Qed.
Lemma lem6382231 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term663 A K GEN_PVAR_265 k i f dom neut) = (term664 A K GEN_PVAR_265 k i f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6382230 A K GEN_PVAR_265 k i f dom neut j)). Qed.
Lemma lem6382232 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382233 {A K : Type'} (GEN_PVAR_265 : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term665 A K GEN_PVAR_265 k i f dom neut) = (term666 A K GEN_PVAR_265 k i f dom neut).
Proof. exact (MK_COMB (@lem6382232 K) (@lem6382231 A K GEN_PVAR_265 k i f dom neut)). Qed.
Lemma lem6382234 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term667 A K k i f dom neut) = (term668 A K k i f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_265 : K => @lem6382233 A K GEN_PVAR_265 k i f dom neut)). Qed.
Lemma lem6382235 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6382236 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term669 A K k i f dom neut) = (term402 A K k i f dom neut).
Proof. exact (MK_COMB (@lem6382235 K) (@lem6382234 A K k i f dom neut)). Qed.
Lemma lem6382237 {K : Type'} (a : K) : (@IN K a) = (@IN K a).
Proof. exact (eq_refl (@IN K a)). Qed.
Lemma lem6382238 {A K : Type'} (a : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term655 A K a k i f dom neut) = (term670 A K a k i f dom neut).
Proof. exact (MK_COMB (@lem6382237 K a) (@lem6382236 A K k i f dom neut)). Qed.
Lemma lem6382239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382240 {A K : Type'} (a : K) (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term671 A K a k i f dom neut) = (term672 A K a k i f dom neut).
Proof. exact (MK_COMB (@lem6382239) (@lem6382238 A K a k i f dom neut)). Qed.
Lemma lem6382241 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term656 A K k i f dom neut a) = (term658 A K k i f a dom neut).
Proof. exact (eq_refl (term656 A K k i f dom neut a)). Qed.
Lemma lem6382242 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : ((term655 A K a k i f dom neut) = (term656 A K k i f dom neut a)) = ((term670 A K a k i f dom neut) = (term658 A K k i f a dom neut)).
Proof. exact (MK_COMB (@lem6382240 A K a k i f dom neut) (@lem6382241 A K k i f a dom neut)). Qed.
Lemma lem6382243 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term670 A K a k i f dom neut) = (term658 A K k i f a dom neut).
Proof. exact (EQ_MP (@lem6382242 A K k i f a dom neut) (@lem6382225 A K k i f dom neut a)). Qed.
Lemma lem6382247 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term210 A x s y) = (term211 A s x y).
Proof. exact (EQ_MP (@lem6378543 A s x y) (@lem6378542 A s x y)). Qed.
Lemma lem6382248 {K : Type'} (s : K -> Prop) (x : K) (y : K) : (term210 K x s y) = (term211 K s x y).
Proof. exact (@lem6382247 K s x y). Qed.
Lemma lem6382249 {K : Type'} (k : K -> Prop) (a : K) (i : K) : (term210 K a k i) = (term211 K k a i).
Proof. exact (@lem6382248 K k a i). Qed.
Lemma lem6382254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382255 {K : Type'} (k : K -> Prop) (a : K) (i : K) : (term677 K a k i) = (term786 K k a i).
Proof. exact (MK_COMB (@lem6382254) (@lem6382249 K k a i)). Qed.
Lemma lem6382256 {A K : Type'} (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term681 A K f a dom neut) = (term681 A K f a dom neut).
Proof. exact (eq_refl (term681 A K f a dom neut)). Qed.
Lemma lem6382257 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term658 A K k i f a dom neut) = (term787 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382255 K k a i) (@lem6382256 A K f a dom neut)). Qed.
Lemma lem6382259 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (EQ_MP (@lem6378534 t1 t2 t3) (@lem6378533 t1 t2 t3)). Qed.
Lemma lem6382260 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term787 A K k i f a dom neut) = (term788 A K k i f a dom neut).
Proof. exact (@lem6382259 (@IN K a k) (term675 K a i) (term681 A K f a dom neut)). Qed.
Lemma lem6382267 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term658 A K k i f a dom neut) = (term788 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382257 A K k i f a dom neut) (@lem6382260 A K k i f a dom neut)). Qed.
Lemma lem6382268 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term670 A K a k i f dom neut) = (term788 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382243 A K k i f a dom neut) (@lem6382267 A K k i f a dom neut)). Qed.
Lemma lem6382269 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382270 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term698 A K a k i f dom neut) = (term789 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382269) (@lem6382268 A K k i f a dom neut)). Qed.
Lemma lem6382271 {A K : Type'} (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term681 A K f a dom neut) = (term681 A K f a dom neut).
Proof. exact (eq_refl (term681 A K f a dom neut)). Qed.
Lemma lem6382272 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term640 A K k i f a dom neut) = (term790 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382270 A K k i f a dom neut) (@lem6382271 A K f a dom neut)). Qed.
Lemma lem6382274 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (EQ_MP (@lem6378534 t1 t2 t3) (@lem6378533 t1 t2 t3)). Qed.
Lemma lem6382275 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term790 A K k i f a dom neut) = (term791 A K k i f a dom neut).
Proof. exact (@lem6382274 (@IN K a k) (term792 A K i f a dom neut) (term681 A K f a dom neut)). Qed.
Lemma lem6382279 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (EQ_MP (@lem6378534 t1 t2 t3) (@lem6378533 t1 t2 t3)). Qed.
Lemma lem6382280 {A K : Type'} (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term793 A K i f a dom neut) = (term794 A K i f a dom neut).
Proof. exact (@lem6382279 (term675 K a i) (term681 A K f a dom neut) (term681 A K f a dom neut)). Qed.
Lemma lem6382286 (t : Prop) : (t /\ t) = t.
Proof. exact (proj2 (@lem1845 t)). Qed.
Lemma lem6382287 {A K : Type'} (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term795 A K f a dom neut) = (term681 A K f a dom neut).
Proof. exact (@lem6382286 (term681 A K f a dom neut)). Qed.
Lemma lem6382288 {K : Type'} (a : K) (i : K) : (term796 K a i) = (term796 K a i).
Proof. exact (eq_refl (term796 K a i)). Qed.
Lemma lem6382289 {A K : Type'} (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term794 A K i f a dom neut) = (term792 A K i f a dom neut).
Proof. exact (MK_COMB (@lem6382288 K a i) (@lem6382287 A K f a dom neut)). Qed.
Lemma lem6382292 {A K : Type'} (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term793 A K i f a dom neut) = (term792 A K i f a dom neut).
Proof. exact (TRANS (@lem6382280 A K i f a dom neut) (@lem6382289 A K i f a dom neut)). Qed.
Lemma lem6382293 {K : Type'} (a : K) (k : K -> Prop) : (term673 K a k) = (term673 K a k).
Proof. exact (eq_refl (term673 K a k)). Qed.
Lemma lem6382294 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term791 A K k i f a dom neut) = (term788 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382293 K a k) (@lem6382292 A K i f a dom neut)). Qed.
Lemma lem6382297 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term790 A K k i f a dom neut) = (term788 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382275 A K k i f a dom neut) (@lem6382294 A K k i f a dom neut)). Qed.
Lemma lem6382298 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term640 A K k i f a dom neut) = (term788 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382272 A K k i f a dom neut) (@lem6382297 A K k i f a dom neut)). Qed.
Lemma lem6382299 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term652 A K a k i f dom neut) = (term788 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382219 A K k i f a dom neut) (@lem6382298 A K k i f a dom neut)). Qed.
Lemma lem6382300 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6382301 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term797 A K a k i f dom neut) = (term798 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382300) (@lem6382299 A K k i f a dom neut)). Qed.
Lemma lem6382302 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term799 A K a k i f dom neut) = (term800 A K k i f a dom neut).
Proof. exact (MK_COMB (@lem6382197 A K k f a dom neut) (@lem6382301 A K k i f a dom neut)). Qed.
Lemma lem6382304 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term189 t1 t2 t3) = (term25 t1 t2 t3).
Proof. exact (EQ_MP (@lem6378534 t1 t2 t3) (@lem6378533 t1 t2 t3)). Qed.
Lemma lem6382305 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term800 A K k i f a dom neut) = (term801 A K k i f a dom neut).
Proof. exact (@lem6382304 (@IN K a k) (term681 A K f a dom neut) (term798 A K k i f a dom neut)). Qed.
Lemma lem6382316 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term799 A K a k i f dom neut) = (term801 A K k i f a dom neut).
Proof. exact (TRANS (@lem6382302 A K k i f a dom neut) (@lem6382305 A K k i f a dom neut)). Qed.
Lemma lem6382317 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term802 A K k i f dom neut) = (term803 A K k i f dom neut).
Proof. exact (fun_ext (fun a : K => @lem6382316 A K k i f a dom neut)). Qed.
Lemma lem6382318 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382319 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term804 A K k i f dom neut) = (term805 A K k i f dom neut).
Proof. exact (MK_COMB (@lem6382318 K) (@lem6382317 A K k i f dom neut)). Qed.
Lemma lem6382324 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term805 A K k i f dom neut) = (term804 A K k i f dom neut).
Proof. exact (SYM (@lem6382319 A K k i f dom neut)). Qed.
Lemma lem6382330 (r : Prop) (p : Prop) (q : Prop) : (term24 p r q) = (term25 r p q).
Proof. exact (EQ_MP (@lem6377973 r p q) (@lem6378505 r p q)). Qed.
Lemma lem6382331 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (a : K) (dom : A -> Prop) (neut : A) : (term801 A K k i f a dom neut) = (term806 A K i k f a dom neut).
Proof. exact (@lem6382330 (a = i) (@IN K a k) (term681 A K f a dom neut)). Qed.
Lemma lem6382338 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term803 A K k i f dom neut) = (term807 A K i k f dom neut).
Proof. exact (fun_ext (fun a : K => @lem6382331 A K i k f a dom neut)). Qed.
Lemma lem6382339 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382340 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term805 A K k i f dom neut) = (term808 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6382339 K) (@lem6382338 A K i k f dom neut)). Qed.
Lemma lem6382345 {A K : Type'} (k : K -> Prop) (i : K) (f : K -> A) (dom : A -> Prop) (neut : A) : (term808 A K i k f dom neut) = (term805 A K k i f dom neut).
Proof. exact (SYM (@lem6382340 A K i k f dom neut)). Qed.
Lemma lem6382347 {A : Type'} (P : A -> Prop) (a : A) : (term22 A a P) = (P a).
Proof. exact (EQ_MP (@lem6377924 A P a) (@lem6377923 A P a)). Qed.
Lemma lem6382348 {K : Type'} (P : K -> Prop) (a : K) : (term22 K a P) = (P a).
Proof. exact (@lem6382347 K P a). Qed.
Lemma lem6382349 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term809 A K i k f dom neut) = (term704 A K k f dom neut i).
Proof. exact (@lem6382348 K (term705 A K k f dom neut) i). Qed.
Lemma lem6382350 {A K : Type'} (k : K -> Prop) (f : K -> A) (a' : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut a') = (term706 A K k f a' dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut a')). Qed.
Lemma lem6382351 {K : Type'} (a' : K) (i : K) : (term810 K a' i) = (term810 K a' i).
Proof. exact (eq_refl (term810 K a' i)). Qed.
Lemma lem6382352 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (a' : K) (dom : A -> Prop) (neut : A) : (term811 A K i k f dom neut a') = (term806 A K i k f a' dom neut).
Proof. exact (MK_COMB (@lem6382351 K a' i) (@lem6382350 A K k f a' dom neut)). Qed.
Lemma lem6382353 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term812 A K i k f dom neut) = (term807 A K i k f dom neut).
Proof. exact (fun_ext (fun a' : K => @lem6382352 A K i k f a' dom neut)). Qed.
Lemma lem6382354 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382355 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term809 A K i k f dom neut) = (term808 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6382354 K) (@lem6382353 A K i k f dom neut)). Qed.
Lemma lem6382356 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382357 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term813 A K i k f dom neut) = (term814 A K i k f dom neut).
Proof. exact (MK_COMB (@lem6382356) (@lem6382355 A K i k f dom neut)). Qed.
Lemma lem6382358 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut i) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut i)). Qed.
Lemma lem6382359 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term809 A K i k f dom neut) = (term704 A K k f dom neut i)) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)).
Proof. exact (MK_COMB (@lem6382357 A K i k f dom neut) (@lem6382358 A K k f i dom neut)). Qed.
Lemma lem6382360 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term808 A K i k f dom neut) = (term706 A K k f i dom neut).
Proof. exact (EQ_MP (@lem6382359 A K k f i dom neut) (@lem6382349 A K k f dom neut i)). Qed.
Lemma lem6382363 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term815 A K i k f dom neut) = (term815 A K i k f dom neut).
Proof. exact (eq_refl (term815 A K i k f dom neut)). Qed.
Lemma lem6382364 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term815 A K i k f dom neut) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)).
Proof. exact (eq_refl (term815 A K i k f dom neut)). Qed.
Lemma lem6382365 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term816 A K i k f dom neut) = (term816 A K i k f dom neut).
Proof. exact (eq_refl (term816 A K i k f dom neut)). Qed.
Lemma lem6382366 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term815 A K i k f dom neut) = (term815 A K i k f dom neut)) = ((term815 A K i k f dom neut) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut))).
Proof. exact (MK_COMB (@lem6382365 A K i k f dom neut) (@lem6382364 A K k f i dom neut)). Qed.
Lemma lem6382367 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term815 A K i k f dom neut) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)).
Proof. exact (eq_refl (term815 A K i k f dom neut)). Qed.
Lemma lem6382368 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382369 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term816 A K i k f dom neut) = (term817 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6382368) (@lem6382367 A K k f i dom neut)). Qed.
Lemma lem6382370 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)).
Proof. exact (eq_refl ((term808 A K i k f dom neut) = (term706 A K k f i dom neut))). Qed.
Lemma lem6382371 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term815 A K i k f dom neut) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut))) = (((term808 A K i k f dom neut) = (term706 A K k f i dom neut)) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut))).
Proof. exact (MK_COMB (@lem6382369 A K k f i dom neut) (@lem6382370 A K k f i dom neut)). Qed.
Lemma lem6382372 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term815 A K i k f dom neut) = (term815 A K i k f dom neut)) = (((term808 A K i k f dom neut) = (term706 A K k f i dom neut)) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut))).
Proof. exact (TRANS (@lem6382366 A K k f i dom neut) (@lem6382371 A K k f i dom neut)). Qed.
Lemma lem6382373 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)) = ((term808 A K i k f dom neut) = (term706 A K k f i dom neut)).
Proof. exact (EQ_MP (@lem6382372 A K k f i dom neut) (@lem6382363 A K i k f dom neut)). Qed.
Lemma lem6382374 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term808 A K i k f dom neut) = (term706 A K k f i dom neut).
Proof. exact (EQ_MP (@lem6382373 A K k f i dom neut) (@lem6382360 A K k f i dom neut)). Qed.
Lemma lem6382377 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term706 A K k f i dom neut) = (term808 A K i k f dom neut).
Proof. exact (SYM (@lem6382374 A K k f i dom neut)). Qed.
Lemma lem6382378 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : term818 A K k f dom neut.
Proof. exact (proj2 (@lem6380843 A K k f dom neut h1)). Qed.
Lemma lem6382380 {A : Type'} (s : A -> Prop) : (term13 A s) = (term12 A s).
Proof. exact (EQ_MP (@lem6377918 A s) (@lem6377917 A s)). Qed.
Lemma lem6382381 {K : Type'} (s : K -> Prop) : (term13 K s) = (term12 K s).
Proof. exact (@lem6382380 K s). Qed.
Lemma lem6382382 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term818 A K k f dom neut) = (term819 A K k f dom neut).
Proof. exact (@lem6382381 K (term627 A K k f dom neut)). Qed.
Lemma lem6382393 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) : term819 A K k f dom neut.
Proof. exact (EQ_MP (@lem6382382 A K k f dom neut) (@lem6382378 A K k f dom neut h1)). Qed.
Lemma lem6382401 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term11 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem6377898 _83095 p x) (@lem6377897 _83095 p x)). Qed.
Lemma lem6382402 {K : Type'} (p : K -> Prop) (x : K) : (term11 K x p) = (p x).
Proof. exact (@lem6382401 K p x). Qed.
Lemma lem6382403 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term703 A K x k f dom neut) = (term704 A K k f dom neut x).
Proof. exact (@lem6382402 K (term705 A K k f dom neut) x). Qed.
Lemma lem6382404 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut i) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut i)). Qed.
Lemma lem6382405 {K : Type'} (GEN_PVAR_264 : K) : (@SETSPEC K GEN_PVAR_264) = (@SETSPEC K GEN_PVAR_264).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_264)). Qed.
Lemma lem6382406 {A K : Type'} (GEN_PVAR_264 : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term707 A K GEN_PVAR_264 k f dom neut i) = (term708 A K GEN_PVAR_264 k f i dom neut).
Proof. exact (MK_COMB (@lem6382405 K GEN_PVAR_264) (@lem6382404 A K k f i dom neut)). Qed.
Lemma lem6382407 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6382408 {A K : Type'} (GEN_PVAR_264 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term709 A K GEN_PVAR_264 k f dom neut i) = (term710 A K GEN_PVAR_264 k f dom neut i).
Proof. exact (MK_COMB (@lem6382406 A K GEN_PVAR_264 k f i dom neut) (@lem6382407 K i)). Qed.
Lemma lem6382409 {A K : Type'} (GEN_PVAR_264 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term711 A K GEN_PVAR_264 k f dom neut) = (term712 A K GEN_PVAR_264 k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6382408 A K GEN_PVAR_264 k f dom neut i)). Qed.
Lemma lem6382410 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382411 {A K : Type'} (GEN_PVAR_264 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term713 A K GEN_PVAR_264 k f dom neut) = (term714 A K GEN_PVAR_264 k f dom neut).
Proof. exact (MK_COMB (@lem6382410 K) (@lem6382409 A K GEN_PVAR_264 k f dom neut)). Qed.
Lemma lem6382412 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term715 A K k f dom neut) = (term716 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_264 : K => @lem6382411 A K GEN_PVAR_264 k f dom neut)). Qed.
Lemma lem6382413 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6382414 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term717 A K k f dom neut) = (term627 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382413 K) (@lem6382412 A K k f dom neut)). Qed.
Lemma lem6382415 {K : Type'} (x : K) : (@IN K x) = (@IN K x).
Proof. exact (eq_refl (@IN K x)). Qed.
Lemma lem6382416 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term703 A K x k f dom neut) = (term718 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6382415 K x) (@lem6382414 A K k f dom neut)). Qed.
Lemma lem6382417 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6382418 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term719 A K x k f dom neut) = (term720 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6382417) (@lem6382416 A K x k f dom neut)). Qed.
Lemma lem6382419 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6382420 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : ((term703 A K x k f dom neut) = (term704 A K k f dom neut x)) = ((term718 A K x k f dom neut) = (term706 A K k f x dom neut)).
Proof. exact (MK_COMB (@lem6382418 A K x k f dom neut) (@lem6382419 A K k f x dom neut)). Qed.
Lemma lem6382421 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term718 A K x k f dom neut) = (term706 A K k f x dom neut).
Proof. exact (EQ_MP (@lem6382420 A K k f x dom neut) (@lem6382403 A K k f dom neut x)). Qed.
Lemma lem6382424 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term820 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6382421 A K k f x dom neut)). Qed.
Lemma lem6382425 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6382426 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term819 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382425 K) (@lem6382424 A K k f dom neut)). Qed.
Lemma lem6382431 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382432 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term822 A K k f dom neut) = (term823 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382431) (@lem6382426 A K k f dom neut)). Qed.
Lemma lem6382435 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term706 A K k f i dom neut) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term706 A K k f i dom neut)). Qed.
Lemma lem6382436 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term824 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6382432 A K k f dom neut) (@lem6382435 A K k f i dom neut)). Qed.
Lemma lem6382439 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term824 A K k f i dom neut).
Proof. exact (SYM (@lem6382436 A K k f i dom neut)). Qed.
Lemma lem6382441 (p : Prop) : p = (term23 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6382442 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term826 A K k f i dom neut).
Proof. exact (@lem6382441 (term825 A K k f i dom neut)). Qed.
Lemma lem6382443 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term826 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (SYM (@lem6382442 A K k f i dom neut)). Qed.
Lemma lem6382444 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term827 A K k f i dom neut) : term827 A K k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382463 {K : Type'} (P : K -> Prop) : term828 K P.
Proof. exact (@lem19732 K P). Qed.
Lemma lem6382464 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term829 A K ltle k f dom neut.
Proof. exact (@lem6382463 K (term830 A K ltle k f dom neut)). Qed.
Lemma lem6382465 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term831 A K ltle k f dom neut) = (term832 A K ltle k f dom neut).
Proof. exact (eq_refl (term831 A K ltle k f dom neut)). Qed.
Lemma lem6382466 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term833 A K ltle k f dom neut x) = (term834 A K ltle k f dom neut x).
Proof. exact (eq_refl (term833 A K ltle k f dom neut x)). Qed.
Lemma lem6382467 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382468 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term835 A K ltle k f dom neut x) = (term836 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6382467) (@lem6382466 A K ltle k f dom neut x)). Qed.
Lemma lem6382469 {A K : Type'} (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term837 A K x ltle k f dom neut) = (term838 A K x ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382468 A K ltle k f dom neut x) (@lem6382465 A K ltle k f dom neut)). Qed.
Lemma lem6382470 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term839 A K ltle k f dom neut) = (term840 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6382469 A K x ltle k f dom neut)). Qed.
Lemma lem6382471 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6382472 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term829 A K ltle k f dom neut) = (term841 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382471 K) (@lem6382470 A K ltle k f dom neut)). Qed.
Lemma lem6382473 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term841 A K ltle k f dom neut.
Proof. exact (EQ_MP (@lem6382472 A K ltle k f dom neut) (@lem6382464 A K ltle k f dom neut)). Qed.
Lemma lem6382474 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : term842 A K ltle k f dom.
Proof. exact (fun neut : A => @lem6382473 A K ltle k f dom neut). Qed.
Lemma lem6382475 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term843 A K ltle k f.
Proof. exact (fun dom : A -> Prop => @lem6382474 A K ltle k f dom). Qed.
Lemma lem6382476 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) : term844 A K ltle k.
Proof. exact (fun f : K -> A => @lem6382475 A K ltle k f). Qed.
Lemma lem6382477 {A K : Type'} (ltle : type1402 K) : term845 A K ltle.
Proof. exact (fun k : K -> Prop => @lem6382476 A K ltle k). Qed.
Lemma lem6382478 {A K : Type'} : term846 A K.
Proof. exact (fun ltle : type1402 K => @lem6382477 A K ltle). Qed.
Lemma lem6382479 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term847 A K ltle k f i dom neut) : term847 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382480 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term847 A K ltle k f i dom neut) : term848 A K ltle k f i dom neut.
Proof. exact (@lem6382479 A K ltle k f i dom neut h1 (@lem6382478 A K)). Qed.
Lemma lem6382481 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term849 A K ltle k f i dom neut.
Proof. exact (fun h0 : term847 A K ltle k f i dom neut => @lem6382480 A K ltle k f i dom neut h0). Qed.
Lemma lem6382482 {A K : Type'} (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : _79516 = (term850 A K).
Proof. exact (h1). Qed.
Lemma lem6382483 {K : Type'} (ltle : type1402 K) : ltle = ltle.
Proof. exact (eq_refl ltle). Qed.
Lemma lem6382484 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle) = (term851 A K ltle).
Proof. exact (MK_COMB (@lem6382482 A K _79516 h1) (@lem6382483 K ltle)). Qed.
Lemma lem6382485 {A K : Type'} (ltle : type1402 K) : (term851 A K ltle) = (term852 A K ltle).
Proof. exact (eq_refl (term851 A K ltle)). Qed.
Lemma lem6382486 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term853 A K _79516 ltle) = (term853 A K _79516 ltle).
Proof. exact (eq_refl (term853 A K _79516 ltle)). Qed.
Lemma lem6382487 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : ((_79516 ltle) = (term851 A K ltle)) = ((_79516 ltle) = (term852 A K ltle)).
Proof. exact (MK_COMB (@lem6382486 A K _79516 ltle) (@lem6382485 A K ltle)). Qed.
Lemma lem6382488 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle) = (term852 A K ltle).
Proof. exact (EQ_MP (@lem6382487 A K _79516 ltle) (@lem6382484 A K ltle _79516 h1)). Qed.
Lemma lem6382489 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6382490 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k) = (term854 A K ltle k).
Proof. exact (MK_COMB (@lem6382488 A K ltle _79516 h1) (@lem6382489 K k)). Qed.
Lemma lem6382491 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) : (term854 A K ltle k) = (term855 A K ltle k).
Proof. exact (eq_refl (term854 A K ltle k)). Qed.
Lemma lem6382492 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term856 A K _79516 ltle k) = (term856 A K _79516 ltle k).
Proof. exact (eq_refl (term856 A K _79516 ltle k)). Qed.
Lemma lem6382493 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : ((_79516 ltle k) = (term854 A K ltle k)) = ((_79516 ltle k) = (term855 A K ltle k)).
Proof. exact (MK_COMB (@lem6382492 A K _79516 ltle k) (@lem6382491 A K ltle k)). Qed.
Lemma lem6382494 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k) = (term855 A K ltle k).
Proof. exact (EQ_MP (@lem6382493 A K _79516 ltle k) (@lem6382490 A K ltle k _79516 h1)). Qed.
Lemma lem6382495 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6382496 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f) = (term857 A K ltle k f).
Proof. exact (MK_COMB (@lem6382494 A K ltle k _79516 h1) (@lem6382495 A K f)). Qed.
Lemma lem6382497 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term857 A K ltle k f) = (term858 A K ltle k f).
Proof. exact (eq_refl (term857 A K ltle k f)). Qed.
Lemma lem6382498 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term859 A K _79516 ltle k f) = (term859 A K _79516 ltle k f).
Proof. exact (eq_refl (term859 A K _79516 ltle k f)). Qed.
Lemma lem6382499 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((_79516 ltle k f) = (term857 A K ltle k f)) = ((_79516 ltle k f) = (term858 A K ltle k f)).
Proof. exact (MK_COMB (@lem6382498 A K _79516 ltle k f) (@lem6382497 A K ltle k f)). Qed.
Lemma lem6382500 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f) = (term858 A K ltle k f).
Proof. exact (EQ_MP (@lem6382499 A K _79516 ltle k f) (@lem6382496 A K ltle k f _79516 h1)). Qed.
Lemma lem6382501 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6382502 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f dom) = (term860 A K ltle k f dom).
Proof. exact (MK_COMB (@lem6382500 A K ltle k f _79516 h1) (@lem6382501 A dom)). Qed.
Lemma lem6382503 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term860 A K ltle k f dom) = (term861 A K ltle k f dom).
Proof. exact (eq_refl (term860 A K ltle k f dom)). Qed.
Lemma lem6382504 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term862 A K _79516 ltle k f dom) = (term862 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term862 A K _79516 ltle k f dom)). Qed.
Lemma lem6382505 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : ((_79516 ltle k f dom) = (term860 A K ltle k f dom)) = ((_79516 ltle k f dom) = (term861 A K ltle k f dom)).
Proof. exact (MK_COMB (@lem6382504 A K _79516 ltle k f dom) (@lem6382503 A K ltle k f dom)). Qed.
Lemma lem6382506 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f dom) = (term861 A K ltle k f dom).
Proof. exact (EQ_MP (@lem6382505 A K _79516 ltle k f dom) (@lem6382502 A K ltle k f dom _79516 h1)). Qed.
Lemma lem6382507 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6382508 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f dom neut) = (term863 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382506 A K ltle k f dom _79516 h1) (@lem6382507 A neut)). Qed.
Lemma lem6382509 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term863 A K ltle k f dom neut) = (term864 A K ltle k f dom neut).
Proof. exact (eq_refl (term863 A K ltle k f dom neut)). Qed.
Lemma lem6382510 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term865 A K _79516 ltle k f dom neut) = (term865 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term865 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6382511 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((_79516 ltle k f dom neut) = (term863 A K ltle k f dom neut)) = ((_79516 ltle k f dom neut) = (term864 A K ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6382510 A K _79516 ltle k f dom neut) (@lem6382509 A K ltle k f dom neut)). Qed.
Lemma lem6382512 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (_79516 ltle k f dom neut) = (term864 A K ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382511 A K _79516 ltle k f dom neut) (@lem6382508 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382513 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (SYM (@lem6382512 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382514 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term866 A K _79516 ltle k f dom.
Proof. exact (fun neut : A => @lem6382513 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382515 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term867 A K _79516 ltle k f.
Proof. exact (fun dom : A -> Prop => @lem6382514 A K ltle k f dom _79516 h1). Qed.
Lemma lem6382516 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term868 A K _79516 ltle k.
Proof. exact (fun f : K -> A => @lem6382515 A K ltle k f _79516 h1). Qed.
Lemma lem6382517 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term869 A K _79516 ltle.
Proof. exact (fun k : K -> Prop => @lem6382516 A K ltle k _79516 h1). Qed.
Lemma lem6382518 {A K : Type'} (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term870 A K _79516.
Proof. exact (fun ltle : type1402 K => @lem6382517 A K ltle _79516 h1). Qed.
Lemma lem6382519 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term871 A K _79516 ltle.
Proof. exact (@lem6382518 A K _79516 h1 ltle). Qed.
Lemma lem6382520 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term871 A K _79516 ltle) = (term869 A K _79516 ltle).
Proof. exact (eq_refl (term871 A K _79516 ltle)). Qed.
Lemma lem6382521 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term869 A K _79516 ltle.
Proof. exact (EQ_MP (@lem6382520 A K _79516 ltle) (@lem6382519 A K ltle _79516 h1)). Qed.
Lemma lem6382522 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term872 A K _79516 ltle k.
Proof. exact (@lem6382521 A K ltle _79516 h1 k). Qed.
Lemma lem6382523 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term872 A K _79516 ltle k) = (term868 A K _79516 ltle k).
Proof. exact (eq_refl (term872 A K _79516 ltle k)). Qed.
Lemma lem6382524 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term868 A K _79516 ltle k.
Proof. exact (EQ_MP (@lem6382523 A K _79516 ltle k) (@lem6382522 A K ltle k _79516 h1)). Qed.
Lemma lem6382525 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term873 A K _79516 ltle k f.
Proof. exact (@lem6382524 A K ltle k _79516 h1 f). Qed.
Lemma lem6382526 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term873 A K _79516 ltle k f) = (term867 A K _79516 ltle k f).
Proof. exact (eq_refl (term873 A K _79516 ltle k f)). Qed.
Lemma lem6382527 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term867 A K _79516 ltle k f.
Proof. exact (EQ_MP (@lem6382526 A K _79516 ltle k f) (@lem6382525 A K ltle k f _79516 h1)). Qed.
Lemma lem6382528 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term874 A K _79516 ltle k f dom.
Proof. exact (@lem6382527 A K ltle k f _79516 h1 dom). Qed.
Lemma lem6382529 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term874 A K _79516 ltle k f dom) = (term866 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term874 A K _79516 ltle k f dom)). Qed.
Lemma lem6382530 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term866 A K _79516 ltle k f dom.
Proof. exact (EQ_MP (@lem6382529 A K _79516 ltle k f dom) (@lem6382528 A K ltle k f dom _79516 h1)). Qed.
Lemma lem6382531 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term875 A K _79516 ltle k f dom neut.
Proof. exact (@lem6382530 A K ltle k f dom _79516 h1 neut). Qed.
Lemma lem6382532 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term875 A K _79516 ltle k f dom neut) = ((term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut)).
Proof. exact (eq_refl (term875 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6382535 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382532 A K _79516 ltle k f dom neut) (@lem6382531 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382536 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6382535 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382537 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6382538 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term876 A K ltle k f dom neut) = (term877 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382537 K) (@lem6382536 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382539 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6382540 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term878 A K ltle f dom neut k) = (term879 A K _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6382538 A K ltle k f dom neut _79516 h1) (@lem6382539 K k)). Qed.
Lemma lem6382541 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382542 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term880 A K ltle f dom neut k) = (term881 A K _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6382541) (@lem6382540 A K ltle f dom neut k _79516 h1)). Qed.
Lemma lem6382544 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382532 A K _79516 ltle k f dom neut) (@lem6382531 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382545 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6382544 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382546 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6382547 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term882 A K ltle k f dom neut) = (term883 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382546 A K f) (@lem6382545 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382548 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6382549 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term884 A K ltle k f dom neut) = (term885 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382548 A) (@lem6382547 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382550 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term886 A dom neut).
Proof. exact (eq_refl (term886 A dom neut)). Qed.
Lemma lem6382551 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term887 A K ltle k f dom neut) = (term888 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382549 A K ltle k f dom neut _79516 h1) (@lem6382550 A dom neut)). Qed.
Lemma lem6382552 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382553 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term889 A K ltle k f dom neut) = (term890 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382552) (@lem6382551 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382555 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382532 A K _79516 ltle k f dom neut) (@lem6382531 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382556 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6382555 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382557 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (ltle j).
Proof. exact (eq_refl (ltle j)). Qed.
Lemma lem6382558 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term891 A K j ltle k f dom neut) = (term892 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382557 K ltle j) (@lem6382556 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382559 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382560 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term893 A K j ltle k f dom neut) = (term894 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382559) (@lem6382558 A K j ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382561 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term706 A K k f j dom neut) = (term706 A K k f j dom neut).
Proof. exact (eq_refl (term706 A K k f j dom neut)). Qed.
Lemma lem6382562 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term895 A K ltle k f j dom neut) = (term896 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6382560 A K j ltle k f dom neut _79516 h1) (@lem6382561 A K k f j dom neut)). Qed.
Lemma lem6382563 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382564 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term897 A K ltle k f j dom neut) = (term898 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6382563) (@lem6382562 A K ltle k f j dom neut _79516 h1)). Qed.
Lemma lem6382566 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382532 A K _79516 ltle k f dom neut) (@lem6382531 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382567 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6382566 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382568 {K : Type'} (j : K) : (@eq K j) = (@eq K j).
Proof. exact (eq_refl (@eq K j)). Qed.
Lemma lem6382569 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (j = (term864 A K ltle k f dom neut)) = (j = (_79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6382568 K j) (@lem6382567 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382570 {A K : Type'} (j : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term899 A K j ltle k f dom neut) = (term900 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382564 A K ltle k f j dom neut _79516 h1) (@lem6382569 A K j ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382571 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term901 A K ltle k f dom neut) = (term902 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6382570 A K j ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382572 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6382573 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term903 A K ltle k f dom neut) = (term904 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382572 K) (@lem6382571 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382574 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term905 A K ltle k f dom neut) = (term906 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382553 A K ltle k f dom neut _79516 h1) (@lem6382573 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382575 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term832 A K ltle k f dom neut) = (term907 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382542 A K ltle f dom neut k _79516 h1) (@lem6382574 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382576 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term836 A K ltle k f dom neut x) = (term836 A K ltle k f dom neut x).
Proof. exact (eq_refl (term836 A K ltle k f dom neut x)). Qed.
Lemma lem6382577 {A K : Type'} (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term838 A K x ltle k f dom neut) = (term908 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382576 A K ltle k f dom neut x) (@lem6382575 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382578 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term840 A K ltle k f dom neut) = (term909 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6382577 A K x ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382579 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6382580 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term841 A K ltle k f dom neut) = (term910 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382579 K) (@lem6382578 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382581 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term911 A K ltle k f dom) = (term912 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6382580 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382582 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6382583 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term842 A K ltle k f dom) = (term913 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6382582 A) (@lem6382581 A K ltle k f dom _79516 h1)). Qed.
Lemma lem6382584 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term914 A K ltle k f) = (term915 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6382583 A K ltle k f dom _79516 h1)). Qed.
Lemma lem6382585 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6382586 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term843 A K ltle k f) = (term916 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6382585 A) (@lem6382584 A K ltle k f _79516 h1)). Qed.
Lemma lem6382587 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term917 A K ltle k) = (term918 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6382586 A K ltle k f _79516 h1)). Qed.
Lemma lem6382588 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6382589 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term844 A K ltle k) = (term919 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6382588 A K) (@lem6382587 A K ltle k _79516 h1)). Qed.
Lemma lem6382590 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term920 A K ltle) = (term921 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6382589 A K ltle k _79516 h1)). Qed.
Lemma lem6382591 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6382592 {A K : Type'} (ltle : type1402 K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term845 A K ltle) = (term922 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6382591 K) (@lem6382590 A K ltle _79516 h1)). Qed.
Lemma lem6382593 {A K : Type'} (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term923 A K) = (term924 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6382592 A K ltle _79516 h1)). Qed.
Lemma lem6382594 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6382595 {A K : Type'} (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term846 A K) = (term925 A K _79516).
Proof. exact (MK_COMB (@lem6382594 K) (@lem6382593 A K _79516 h1)). Qed.
Lemma lem6382596 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382597 {A K : Type'} (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term926 A K) = (term927 A K _79516).
Proof. exact (MK_COMB (@lem6382596) (@lem6382595 A K _79516 h1)). Qed.
Lemma lem6382599 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6382532 A K _79516 ltle k f dom neut) (@lem6382531 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382600 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term864 A K ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6382599 A K ltle k f dom neut _79516 h1). Qed.
Lemma lem6382601 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term928 A K ltle k f dom neut) = (term928 A K ltle k f dom neut).
Proof. exact (eq_refl (term928 A K ltle k f dom neut)). Qed.
Lemma lem6382602 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term929 A K ltle k f dom neut) = (term930 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382601 A K ltle k f dom neut) (@lem6382600 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382603 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term931 A K k f dom neut) = (term931 A K k f dom neut).
Proof. exact (eq_refl (term931 A K k f dom neut)). Qed.
Lemma lem6382604 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term424 A K ltle k f dom neut) = (term932 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382602 A K ltle k f dom neut _79516 h1) (@lem6382603 A K k f dom neut)). Qed.
Lemma lem6382605 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6382606 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term933 A K ltle k f dom neut) = (term934 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6382605 K) (@lem6382604 A K ltle k f dom neut _79516 h1)). Qed.
Lemma lem6382607 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6382608 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : ((term424 A K ltle k f dom neut) = i) = ((term932 A K _79516 ltle k f dom neut) = i).
Proof. exact (MK_COMB (@lem6382606 A K ltle k f dom neut _79516 h1) (@lem6382607 K i)). Qed.
Lemma lem6382609 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382610 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term935 A K ltle k f dom neut i) = (term936 A K _79516 ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6382609) (@lem6382608 A K ltle k f dom neut i _79516 h1)). Qed.
Lemma lem6382611 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term826 A K k f i dom neut) = (term826 A K k f i dom neut).
Proof. exact (eq_refl (term826 A K k f i dom neut)). Qed.
Lemma lem6382612 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term848 A K ltle k f i dom neut) = (term937 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6382610 A K ltle k f dom neut i _79516 h1) (@lem6382611 A K k f i dom neut)). Qed.
Lemma lem6382613 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term847 A K ltle k f i dom neut) = (term938 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6382597 A K _79516 h1) (@lem6382612 A K ltle k f i dom neut _79516 h1)). Qed.
Lemma lem6382614 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term939 A K ltle k f i dom neut) : term939 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382615 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term939 A K ltle k f i dom neut) : term940 A K ltle k f i dom neut _79516.
Proof. exact (@lem6382614 A K ltle k f i dom neut h1 _79516). Qed.
Lemma lem6382616 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term940 A K ltle k f i dom neut _79516) = (term938 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term940 A K ltle k f i dom neut _79516)). Qed.
Lemma lem6382617 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term939 A K ltle k f i dom neut) : term938 A K _79516 ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6382616 A K _79516 ltle k f i dom neut) (@lem6382615 A K _79516 ltle k f i dom neut h1)). Qed.
Lemma lem6382618 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : (term938 A K _79516 ltle k f i dom neut) = (term847 A K ltle k f i dom neut).
Proof. exact (SYM (@lem6382613 A K ltle k f i dom neut _79516 h1)). Qed.
Lemma lem6382619 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : term939 A K ltle k f i dom neut) (h2 : _79516 = (term850 A K)) : term847 A K ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6382618 A K ltle k f i dom neut _79516 h2) (@lem6382617 A K _79516 ltle k f i dom neut h1)). Qed.
Lemma lem6382620 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term941 A K ltle k f i dom neut.
Proof. exact (fun h0 : term939 A K ltle k f i dom neut => @lem6382619 A K ltle k f i dom neut _79516 h0 h1). Qed.
Lemma lem6382621 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term942 A K ltle k f i dom neut.
Proof. exact (@lem51 (term847 A K ltle k f i dom neut) (term939 A K ltle k f i dom neut) (term848 A K ltle k f i dom neut)). Qed.
Lemma lem6382622 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term943 A K ltle k f i dom neut.
Proof. exact (@lem6382621 A K ltle k f i dom neut (@lem6382620 A K ltle k f i dom neut _79516 h1)). Qed.
Lemma lem6382623 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79516 : type758 A K) (h1 : _79516 = (term850 A K)) : term944 A K ltle k f i dom neut.
Proof. exact (@lem6382622 A K ltle k f i dom neut _79516 h1 (@lem6382481 A K ltle k f i dom neut)). Qed.
Lemma lem6382624 {A K : Type'} : (term850 A K) = (term850 A K).
Proof. exact (eq_refl (term850 A K)). Qed.
Lemma lem6382625 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term945 A K _79516 ltle k f i dom neut.
Proof. exact (fun h0 : _79516 = (term850 A K) => @lem6382623 A K ltle k f i dom neut _79516 h0). Qed.
Lemma lem6382626 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term946 A K ltle k f i dom neut.
Proof. exact (@lem6382625 A K (term850 A K) ltle k f i dom neut). Qed.
Lemma lem6382627 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term944 A K ltle k f i dom neut.
Proof. exact (@lem6382626 A K ltle k f i dom neut (@lem6382624 A K)). Qed.
Lemma lem6382628 {K : Type'} (P : K -> Prop) : term828 K P.
Proof. exact (@lem19732 K P). Qed.
Lemma lem6382629 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term947 A K k f dom neut.
Proof. exact (@lem6382628 K (term705 A K k f dom neut)). Qed.
Lemma lem6382630 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term948 A K k f dom neut) = (term949 A K k f dom neut).
Proof. exact (eq_refl (term948 A K k f dom neut)). Qed.
Lemma lem6382631 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6382632 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382633 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term950 A K k f dom neut x) = (term951 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6382632) (@lem6382631 A K k f x dom neut)). Qed.
Lemma lem6382634 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term952 A K x k f dom neut) = (term953 A K x k f dom neut).
Proof. exact (MK_COMB (@lem6382633 A K k f x dom neut) (@lem6382630 A K k f dom neut)). Qed.
Lemma lem6382635 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term954 A K k f dom neut) = (term955 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6382634 A K x k f dom neut)). Qed.
Lemma lem6382636 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6382637 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term947 A K k f dom neut) = (term956 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382636 K) (@lem6382635 A K k f dom neut)). Qed.
Lemma lem6382638 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term956 A K k f dom neut.
Proof. exact (EQ_MP (@lem6382637 A K k f dom neut) (@lem6382629 A K k f dom neut)). Qed.
Lemma lem6382639 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : term957 A K k f dom.
Proof. exact (fun neut : A => @lem6382638 A K k f dom neut). Qed.
Lemma lem6382640 {A K : Type'} (k : K -> Prop) (f : K -> A) : term958 A K k f.
Proof. exact (fun dom : A -> Prop => @lem6382639 A K k f dom). Qed.
Lemma lem6382641 {A K : Type'} (k : K -> Prop) : term959 A K k.
Proof. exact (fun f : K -> A => @lem6382640 A K k f). Qed.
Lemma lem6382642 {A K : Type'} : term960 A K.
Proof. exact (fun k : K -> Prop => @lem6382641 A K k). Qed.
Lemma lem6382643 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term961 A K ltle k f i dom neut) : term961 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382644 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term961 A K ltle k f i dom neut) : term939 A K ltle k f i dom neut.
Proof. exact (@lem6382643 A K ltle k f i dom neut h1 (@lem6382642 A K)). Qed.
Lemma lem6382645 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term962 A K ltle k f i dom neut.
Proof. exact (fun h0 : term961 A K ltle k f i dom neut => @lem6382644 A K ltle k f i dom neut h0). Qed.
Lemma lem6382646 {A K : Type'} (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : _79517 = (term963 A K).
Proof. exact (h1). Qed.
Lemma lem6382647 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6382648 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k) = (term964 A K k).
Proof. exact (MK_COMB (@lem6382646 A K _79517 h1) (@lem6382647 K k)). Qed.
Lemma lem6382649 {A K : Type'} (k : K -> Prop) : (term964 A K k) = (term965 A K k).
Proof. exact (eq_refl (term964 A K k)). Qed.
Lemma lem6382650 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term966 A K _79517 k) = (term966 A K _79517 k).
Proof. exact (eq_refl (term966 A K _79517 k)). Qed.
Lemma lem6382651 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : ((_79517 k) = (term964 A K k)) = ((_79517 k) = (term965 A K k)).
Proof. exact (MK_COMB (@lem6382650 A K _79517 k) (@lem6382649 A K k)). Qed.
Lemma lem6382652 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k) = (term965 A K k).
Proof. exact (EQ_MP (@lem6382651 A K _79517 k) (@lem6382648 A K k _79517 h1)). Qed.
Lemma lem6382653 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6382654 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f) = (term967 A K k f).
Proof. exact (MK_COMB (@lem6382652 A K k _79517 h1) (@lem6382653 A K f)). Qed.
Lemma lem6382655 {A K : Type'} (k : K -> Prop) (f : K -> A) : (term967 A K k f) = (term968 A K k f).
Proof. exact (eq_refl (term967 A K k f)). Qed.
Lemma lem6382656 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term969 A K _79517 k f) = (term969 A K _79517 k f).
Proof. exact (eq_refl (term969 A K _79517 k f)). Qed.
Lemma lem6382657 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : ((_79517 k f) = (term967 A K k f)) = ((_79517 k f) = (term968 A K k f)).
Proof. exact (MK_COMB (@lem6382656 A K _79517 k f) (@lem6382655 A K k f)). Qed.
Lemma lem6382658 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f) = (term968 A K k f).
Proof. exact (EQ_MP (@lem6382657 A K _79517 k f) (@lem6382654 A K k f _79517 h1)). Qed.
Lemma lem6382659 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6382660 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f dom) = (term970 A K k f dom).
Proof. exact (MK_COMB (@lem6382658 A K k f _79517 h1) (@lem6382659 A dom)). Qed.
Lemma lem6382661 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term970 A K k f dom) = (term971 A K k f dom).
Proof. exact (eq_refl (term970 A K k f dom)). Qed.
Lemma lem6382662 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term972 A K _79517 k f dom) = (term972 A K _79517 k f dom).
Proof. exact (eq_refl (term972 A K _79517 k f dom)). Qed.
Lemma lem6382663 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : ((_79517 k f dom) = (term970 A K k f dom)) = ((_79517 k f dom) = (term971 A K k f dom)).
Proof. exact (MK_COMB (@lem6382662 A K _79517 k f dom) (@lem6382661 A K k f dom)). Qed.
Lemma lem6382664 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f dom) = (term971 A K k f dom).
Proof. exact (EQ_MP (@lem6382663 A K _79517 k f dom) (@lem6382660 A K k f dom _79517 h1)). Qed.
Lemma lem6382665 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6382666 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f dom neut) = (term973 A K k f dom neut).
Proof. exact (MK_COMB (@lem6382664 A K k f dom _79517 h1) (@lem6382665 A neut)). Qed.
Lemma lem6382667 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term973 A K k f dom neut) = (term931 A K k f dom neut).
Proof. exact (eq_refl (term973 A K k f dom neut)). Qed.
Lemma lem6382668 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term974 A K _79517 k f dom neut) = (term974 A K _79517 k f dom neut).
Proof. exact (eq_refl (term974 A K _79517 k f dom neut)). Qed.
Lemma lem6382669 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((_79517 k f dom neut) = (term973 A K k f dom neut)) = ((_79517 k f dom neut) = (term931 A K k f dom neut)).
Proof. exact (MK_COMB (@lem6382668 A K _79517 k f dom neut) (@lem6382667 A K k f dom neut)). Qed.
Lemma lem6382670 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (_79517 k f dom neut) = (term931 A K k f dom neut).
Proof. exact (EQ_MP (@lem6382669 A K _79517 k f dom neut) (@lem6382666 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382671 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (SYM (@lem6382670 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382672 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term975 A K _79517 k f dom.
Proof. exact (fun neut : A => @lem6382671 A K k f dom neut _79517 h1). Qed.
Lemma lem6382673 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term976 A K _79517 k f.
Proof. exact (fun dom : A -> Prop => @lem6382672 A K k f dom _79517 h1). Qed.
Lemma lem6382674 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term977 A K _79517 k.
Proof. exact (fun f : K -> A => @lem6382673 A K k f _79517 h1). Qed.
Lemma lem6382675 {A K : Type'} (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term978 A K _79517.
Proof. exact (fun k : K -> Prop => @lem6382674 A K k _79517 h1). Qed.
Lemma lem6382676 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term979 A K _79517 k.
Proof. exact (@lem6382675 A K _79517 h1 k). Qed.
Lemma lem6382677 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term979 A K _79517 k) = (term977 A K _79517 k).
Proof. exact (eq_refl (term979 A K _79517 k)). Qed.
Lemma lem6382678 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term977 A K _79517 k.
Proof. exact (EQ_MP (@lem6382677 A K _79517 k) (@lem6382676 A K k _79517 h1)). Qed.
Lemma lem6382679 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term980 A K _79517 k f.
Proof. exact (@lem6382678 A K k _79517 h1 f). Qed.
Lemma lem6382680 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term980 A K _79517 k f) = (term976 A K _79517 k f).
Proof. exact (eq_refl (term980 A K _79517 k f)). Qed.
Lemma lem6382681 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term976 A K _79517 k f.
Proof. exact (EQ_MP (@lem6382680 A K _79517 k f) (@lem6382679 A K k f _79517 h1)). Qed.
Lemma lem6382682 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term981 A K _79517 k f dom.
Proof. exact (@lem6382681 A K k f _79517 h1 dom). Qed.
Lemma lem6382683 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term981 A K _79517 k f dom) = (term975 A K _79517 k f dom).
Proof. exact (eq_refl (term981 A K _79517 k f dom)). Qed.
Lemma lem6382684 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term975 A K _79517 k f dom.
Proof. exact (EQ_MP (@lem6382683 A K _79517 k f dom) (@lem6382682 A K k f dom _79517 h1)). Qed.
Lemma lem6382685 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term982 A K _79517 k f dom neut.
Proof. exact (@lem6382684 A K k f dom _79517 h1 neut). Qed.
Lemma lem6382686 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term982 A K _79517 k f dom neut) = ((term931 A K k f dom neut) = (_79517 k f dom neut)).
Proof. exact (eq_refl (term982 A K _79517 k f dom neut)). Qed.
Lemma lem6382689 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (EQ_MP (@lem6382686 A K _79517 k f dom neut) (@lem6382685 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382690 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (@lem6382689 A K k f dom neut _79517 h1). Qed.
Lemma lem6382691 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6382692 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term983 A K k f dom neut) = (term984 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382691 K) (@lem6382690 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382693 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6382694 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term985 A K f dom neut k) = (term986 A K _79517 f dom neut k).
Proof. exact (MK_COMB (@lem6382692 A K k f dom neut _79517 h1) (@lem6382693 K k)). Qed.
Lemma lem6382695 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6382696 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term987 A K f dom neut k) = (term988 A K _79517 f dom neut k).
Proof. exact (MK_COMB (@lem6382695) (@lem6382694 A K f dom neut k _79517 h1)). Qed.
Lemma lem6382698 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (EQ_MP (@lem6382686 A K _79517 k f dom neut) (@lem6382685 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382699 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (@lem6382698 A K k f dom neut _79517 h1). Qed.
Lemma lem6382700 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6382701 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term989 A K k f dom neut) = (term990 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382700 A K f) (@lem6382699 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382702 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6382703 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term991 A K k f dom neut) = (term992 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382702 A) (@lem6382701 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382704 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term886 A dom neut).
Proof. exact (eq_refl (term886 A dom neut)). Qed.
Lemma lem6382705 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term993 A K k f dom neut) = (term994 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382703 A K k f dom neut _79517 h1) (@lem6382704 A dom neut)). Qed.
Lemma lem6382706 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term949 A K k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382696 A K f dom neut k _79517 h1) (@lem6382705 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382707 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term951 A K k f x dom neut) = (term951 A K k f x dom neut).
Proof. exact (eq_refl (term951 A K k f x dom neut)). Qed.
Lemma lem6382708 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term953 A K x k f dom neut) = (term996 A K x _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382707 A K k f x dom neut) (@lem6382706 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382709 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term955 A K k f dom neut) = (term997 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6382708 A K x k f dom neut _79517 h1)). Qed.
Lemma lem6382710 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6382711 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term956 A K k f dom neut) = (term998 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382710 K) (@lem6382709 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382712 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term999 A K k f dom) = (term1000 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6382711 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382713 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6382714 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term957 A K k f dom) = (term1001 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6382713 A) (@lem6382712 A K k f dom _79517 h1)). Qed.
Lemma lem6382715 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1002 A K k f) = (term1003 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6382714 A K k f dom _79517 h1)). Qed.
Lemma lem6382716 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6382717 {A K : Type'} (k : K -> Prop) (f : K -> A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term958 A K k f) = (term1004 A K _79517 k f).
Proof. exact (MK_COMB (@lem6382716 A) (@lem6382715 A K k f _79517 h1)). Qed.
Lemma lem6382718 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1005 A K k) = (term1006 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6382717 A K k f _79517 h1)). Qed.
Lemma lem6382719 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6382720 {A K : Type'} (k : K -> Prop) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term959 A K k) = (term1007 A K _79517 k).
Proof. exact (MK_COMB (@lem6382719 A K) (@lem6382718 A K k _79517 h1)). Qed.
Lemma lem6382721 {A K : Type'} (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1008 A K) = (term1009 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6382720 A K k _79517 h1)). Qed.
Lemma lem6382722 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6382723 {A K : Type'} (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term960 A K) = (term1010 A K _79517).
Proof. exact (MK_COMB (@lem6382722 K) (@lem6382721 A K _79517 h1)). Qed.
Lemma lem6382724 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382725 {A K : Type'} (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1011 A K) = (term1012 A K _79517).
Proof. exact (MK_COMB (@lem6382724) (@lem6382723 A K _79517 h1)). Qed.
Lemma lem6382727 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (EQ_MP (@lem6382686 A K _79517 k f dom neut) (@lem6382685 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382728 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term931 A K k f dom neut) = (_79517 k f dom neut).
Proof. exact (@lem6382727 A K k f dom neut _79517 h1). Qed.
Lemma lem6382729 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term930 A K _79516 ltle k f dom neut) = (term930 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term930 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6382730 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term932 A K _79516 ltle k f dom neut) = (term1013 A K _79516 ltle _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382729 A K _79516 ltle k f dom neut) (@lem6382728 A K k f dom neut _79517 h1)). Qed.
Lemma lem6382731 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6382732 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term934 A K _79516 ltle k f dom neut) = (term1014 A K _79516 ltle _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6382731 K) (@lem6382730 A K _79516 ltle k f dom neut _79517 h1)). Qed.
Lemma lem6382733 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6382734 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : ((term932 A K _79516 ltle k f dom neut) = i) = ((term1013 A K _79516 ltle _79517 k f dom neut) = i).
Proof. exact (MK_COMB (@lem6382732 A K _79516 ltle k f dom neut _79517 h1) (@lem6382733 K i)). Qed.
Lemma lem6382735 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6382736 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term936 A K _79516 ltle k f dom neut i) = (term1015 A K _79516 ltle _79517 k f dom neut i).
Proof. exact (MK_COMB (@lem6382735) (@lem6382734 A K _79516 ltle k f dom neut i _79517 h1)). Qed.
Lemma lem6382737 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term826 A K k f i dom neut) = (term826 A K k f i dom neut).
Proof. exact (eq_refl (term826 A K k f i dom neut)). Qed.
Lemma lem6382738 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term937 A K _79516 ltle k f i dom neut) = (term1016 A K _79516 ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6382736 A K _79516 ltle k f dom neut i _79517 h1) (@lem6382737 A K k f i dom neut)). Qed.
Lemma lem6382739 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (eq_refl (term927 A K _79516)). Qed.
Lemma lem6382740 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term938 A K _79516 ltle k f i dom neut) = (term1017 A K _79516 ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6382739 A K _79516) (@lem6382738 A K _79516 ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382741 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1018 A K ltle k f i dom neut) = (term1019 A K ltle _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6382740 A K _79516 ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382742 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6382743 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term939 A K ltle k f i dom neut) = (term1020 A K ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6382742 A K) (@lem6382741 A K ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382744 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term961 A K ltle k f i dom neut) = (term1021 A K ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6382725 A K _79517 h1) (@lem6382743 A K ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382745 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1022 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382746 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1023 A K ltle k f i dom neut _79517.
Proof. exact (@lem6382745 A K ltle k f i dom neut h1 _79517). Qed.
Lemma lem6382747 {A K : Type'} (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1023 A K ltle k f i dom neut _79517) = (term1021 A K ltle _79517 k f i dom neut).
Proof. exact (eq_refl (term1023 A K ltle k f i dom neut _79517)). Qed.
Lemma lem6382748 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1021 A K ltle _79517 k f i dom neut.
Proof. exact (EQ_MP (@lem6382747 A K ltle _79517 k f i dom neut) (@lem6382746 A K _79517 ltle k f i dom neut h1)). Qed.
Lemma lem6382749 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : (term1021 A K ltle _79517 k f i dom neut) = (term961 A K ltle k f i dom neut).
Proof. exact (SYM (@lem6382744 A K ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382750 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : term1022 A K ltle k f i dom neut) (h2 : _79517 = (term963 A K)) : term961 A K ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6382749 A K ltle k f i dom neut _79517 h2) (@lem6382748 A K _79517 ltle k f i dom neut h1)). Qed.
Lemma lem6382751 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term1024 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1022 A K ltle k f i dom neut => @lem6382750 A K ltle k f i dom neut _79517 h0 h1). Qed.
Lemma lem6382752 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1025 A K ltle k f i dom neut.
Proof. exact (@lem51 (term961 A K ltle k f i dom neut) (term1022 A K ltle k f i dom neut) (term939 A K ltle k f i dom neut)). Qed.
Lemma lem6382753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term1026 A K ltle k f i dom neut.
Proof. exact (@lem6382752 A K ltle k f i dom neut (@lem6382751 A K ltle k f i dom neut _79517 h1)). Qed.
Lemma lem6382754 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (_79517 : type850 A K) (h1 : _79517 = (term963 A K)) : term1027 A K ltle k f i dom neut.
Proof. exact (@lem6382753 A K ltle k f i dom neut _79517 h1 (@lem6382645 A K ltle k f i dom neut)). Qed.
Lemma lem6382755 {A K : Type'} : (term963 A K) = (term963 A K).
Proof. exact (eq_refl (term963 A K)). Qed.
Lemma lem6382756 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1028 A K _79517 ltle k f i dom neut.
Proof. exact (fun h0 : _79517 = (term963 A K) => @lem6382754 A K ltle k f i dom neut _79517 h0). Qed.
Lemma lem6382757 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1029 A K ltle k f i dom neut.
Proof. exact (@lem6382756 A K (term963 A K) ltle k f i dom neut). Qed.
Lemma lem6382758 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1027 A K ltle k f i dom neut.
Proof. exact (@lem6382757 A K ltle k f i dom neut (@lem6382755 A K)). Qed.
Lemma lem6382759 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1022 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382760 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1030 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1022 A K ltle k f i dom neut => @lem6382759 A K ltle k f i dom neut h0). Qed.
Lemma lem6382761 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1031 A K ltle k f i dom neut.
Proof. exact (@lem51 (term1022 A K ltle k f i dom neut) (term1022 A K ltle k f i dom neut) (term939 A K ltle k f i dom neut)). Qed.
Lemma lem6382762 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1032 A K ltle k f i dom neut.
Proof. exact (@lem6382761 A K ltle k f i dom neut (@lem6382760 A K ltle k f i dom neut)). Qed.
Lemma lem6382763 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1027 A K ltle k f i dom neut.
Proof. exact (@lem6382762 A K ltle k f i dom neut (@lem6382758 A K ltle k f i dom neut)). Qed.
Lemma lem6382764 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1033 A K ltle k f i dom neut.
Proof. exact (@lem51 (term939 A K ltle k f i dom neut) (term1022 A K ltle k f i dom neut) (term848 A K ltle k f i dom neut)). Qed.
Lemma lem6382765 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1034 A K ltle k f i dom neut.
Proof. exact (@lem6382764 A K ltle k f i dom neut (@lem6382763 A K ltle k f i dom neut)). Qed.
Lemma lem6382766 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1035 A K ltle k f i dom neut.
Proof. exact (@lem6382765 A K ltle k f i dom neut (@lem6382627 A K ltle k f i dom neut)). Qed.
Lemma lem6382767 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1035 A K ltle k f i dom neut) : term1035 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382768 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1022 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382769 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) (h2 : term1035 A K ltle k f i dom neut) : term848 A K ltle k f i dom neut.
Proof. exact (@lem6382767 A K ltle k f i dom neut h2 (@lem6382768 A K ltle k f i dom neut h1)). Qed.
Lemma lem6382770 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) : term1036 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1035 A K ltle k f i dom neut => @lem6382769 A K ltle k f i dom neut h1 h0). Qed.
Lemma lem6382771 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1035 A K ltle k f i dom neut) : term1035 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6382772 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1022 A K ltle k f i dom neut) (h2 : term1035 A K ltle k f i dom neut) : term848 A K ltle k f i dom neut.
Proof. exact (@lem6382770 A K ltle k f i dom neut h1 (@lem6382771 A K ltle k f i dom neut h2)). Qed.
Lemma lem6382773 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1035 A K ltle k f i dom neut) : term1035 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1022 A K ltle k f i dom neut => @lem6382772 A K ltle k f i dom neut h0 h1). Qed.
Lemma lem6382774 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1037 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1035 A K ltle k f i dom neut => @lem6382773 A K ltle k f i dom neut h0). Qed.
Lemma lem6382777 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1035 A K ltle k f i dom neut.
Proof. exact (@lem6382774 A K ltle k f i dom neut (@lem6382766 A K ltle k f i dom neut)). Qed.
Lemma lem6382778 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1035 A K ltle k f i dom neut.
Proof. exact (@lem6382777 A K ltle k f i dom neut). Qed.
Lemma lem6382960 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6382961 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term826 A K k f i dom neut) = (term1038 A K k f i dom neut).
Proof. exact (@lem6382960 (term827 A K k f i dom neut)). Qed.
Lemma lem6382963 (t : Prop) : (term32 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6382964 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1038 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (@lem6382963 (term825 A K k f i dom neut)). Qed.
Lemma lem6382967 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term826 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (TRANS (@lem6382961 A K k f i dom neut) (@lem6382964 A K k f i dom neut)). Qed.
Lemma lem6383020 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1015 A K _79516 ltle _79517 k f dom neut i) = (term1015 A K _79516 ltle _79517 k f dom neut i).
Proof. exact (eq_refl (term1015 A K _79516 ltle _79517 k f dom neut i)). Qed.
Lemma lem6383021 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1016 A K _79516 ltle _79517 k f i dom neut) = (term1039 A K _79516 ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383020 A K _79516 ltle _79517 k f dom neut i) (@lem6382967 A K k f i dom neut)). Qed.
Lemma lem6383024 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (eq_refl (term927 A K _79516)). Qed.
Lemma lem6383025 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1017 A K _79516 ltle _79517 k f i dom neut) = (term1040 A K _79516 ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383024 A K _79516) (@lem6383021 A K _79516 ltle _79517 k f i dom neut)). Qed.
Lemma lem6383028 {A K : Type'} (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1019 A K ltle _79517 k f i dom neut) = (term1041 A K ltle _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6383025 A K _79516 ltle _79517 k f i dom neut)). Qed.
Lemma lem6383029 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383030 {A K : Type'} (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1020 A K ltle _79517 k f i dom neut) = (term1042 A K ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383029 A K) (@lem6383028 A K ltle _79517 k f i dom neut)). Qed.
Lemma lem6383035 {A K : Type'} (_79517 : type850 A K) : (term1012 A K _79517) = (term1012 A K _79517).
Proof. exact (eq_refl (term1012 A K _79517)). Qed.
Lemma lem6383036 {A K : Type'} (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1021 A K ltle _79517 k f i dom neut) = (term1043 A K ltle _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383035 A K _79517) (@lem6383030 A K ltle _79517 k f i dom neut)). Qed.
Lemma lem6383039 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1044 A K ltle k f i dom neut) = (term1045 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6383036 A K ltle _79517 k f i dom neut)). Qed.
Lemma lem6383040 {A K : Type'} : (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383041 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1022 A K ltle k f i dom neut) = (term1046 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383040 A K) (@lem6383039 A K ltle k f i dom neut)). Qed.
Lemma lem6383046 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1047 A K k f i dom neut) = (term1048 A K k f i dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6383041 A K ltle k f i dom neut)). Qed.
Lemma lem6383047 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6383048 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1049 A K k f i dom neut) = (term1050 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383047 K) (@lem6383046 A K k f i dom neut)). Qed.
Lemma lem6383053 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1051 A K f i dom neut) = (term1052 A K f i dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383048 A K k f i dom neut)). Qed.
Lemma lem6383054 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383055 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1053 A K f i dom neut) = (term1054 A K f i dom neut).
Proof. exact (MK_COMB (@lem6383054 K) (@lem6383053 A K f i dom neut)). Qed.
Lemma lem6383060 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : (term1055 A K i dom neut) = (term1056 A K i dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6383055 A K f i dom neut)). Qed.
Lemma lem6383061 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383062 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : (term1057 A K i dom neut) = (term1058 A K i dom neut).
Proof. exact (MK_COMB (@lem6383061 A K) (@lem6383060 A K i dom neut)). Qed.
Lemma lem6383067 {A K : Type'} (dom : A -> Prop) (neut : A) : (term1059 A K dom neut) = (term1060 A K dom neut).
Proof. exact (fun_ext (fun i : K => @lem6383062 A K i dom neut)). Qed.
Lemma lem6383068 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383069 {A K : Type'} (dom : A -> Prop) (neut : A) : (term1061 A K dom neut) = (term1062 A K dom neut).
Proof. exact (MK_COMB (@lem6383068 K) (@lem6383067 A K dom neut)). Qed.
Lemma lem6383074 {A K : Type'} (neut : A) : (term1063 A K neut) = (term1064 A K neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383069 A K dom neut)). Qed.
Lemma lem6383075 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383076 {A K : Type'} (neut : A) : (term1065 A K neut) = (term1066 A K neut).
Proof. exact (MK_COMB (@lem6383075 A) (@lem6383074 A K neut)). Qed.
Lemma lem6383081 {A K : Type'} : (term1067 A K) = (term1068 A K).
Proof. exact (fun_ext (fun neut : A => @lem6383076 A K neut)). Qed.
Lemma lem6383082 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383091 {A K : Type'} : (term1069 A K) = (term1070 A K).
Proof. exact (MK_COMB (@lem6383082 A) (@lem6383081 A K)). Qed.
Lemma lem6383195 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1071 A K ltle k f dom neut) = False.
Proof. exact (h1). Qed.
Lemma lem6383196 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1071 A K ltle k f dom neut) = False.
Proof. exact (@lem6383195 A K ltle k f dom neut h1). Qed.
Lemma lem6383197 {K : Type'} : (@COND K) = (@COND K).
Proof. exact (eq_refl (@COND K)). Qed.
Lemma lem6383198 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term928 A K ltle k f dom neut) = (@COND K False).
Proof. exact (MK_COMB (@lem6383197 K) (@lem6383196 A K ltle k f dom neut h1)). Qed.
Lemma lem6383199 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (eq_refl (_79516 ltle k f dom neut)). Qed.
Lemma lem6383200 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term930 A K _79516 ltle k f dom neut) = (term1072 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383198 A K ltle k f dom neut h1) (@lem6383199 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383201 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (_79517 k f dom neut).
Proof. exact (eq_refl (_79517 k f dom neut)). Qed.
Lemma lem6383202 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1013 A K _79516 ltle _79517 k f dom neut) = (term1073 A K _79516 ltle _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6383200 A K _79516 ltle k f dom neut h1) (@lem6383201 A K _79517 k f dom neut)). Qed.
Lemma lem6383204 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6383205 {K : Type'} (t1 : K) (t2 : K) : (@COND K False t1 t2) = t2.
Proof. exact (@lem6383204 K t1 t2). Qed.
Lemma lem6383206 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1073 A K _79516 ltle _79517 k f dom neut) = (_79517 k f dom neut).
Proof. exact (@lem6383205 K (_79516 ltle k f dom neut) (_79517 k f dom neut)). Qed.
Lemma lem6383207 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1013 A K _79516 ltle _79517 k f dom neut) = (_79517 k f dom neut).
Proof. exact (TRANS (@lem6383202 A K _79516 _79517 ltle k f dom neut h1) (@lem6383206 A K _79516 ltle _79517 k f dom neut)). Qed.
Lemma lem6383208 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6383209 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1014 A K _79516 ltle _79517 k f dom neut) = (term974 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6383208 K) (@lem6383207 A K _79516 _79517 ltle k f dom neut h1)). Qed.
Lemma lem6383210 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6383211 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : ((term1013 A K _79516 ltle _79517 k f dom neut) = i) = ((_79517 k f dom neut) = i).
Proof. exact (MK_COMB (@lem6383209 A K _79516 _79517 ltle k f dom neut h1) (@lem6383210 K i)). Qed.
Lemma lem6383214 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383215 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1015 A K _79516 ltle _79517 k f dom neut i) = (term1074 A K _79517 k f dom neut i).
Proof. exact (MK_COMB (@lem6383214) (@lem6383211 A K _79516 _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383226 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (eq_refl (term825 A K k f i dom neut)). Qed.
Lemma lem6383227 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1039 A K _79516 ltle _79517 k f i dom neut) = (term1075 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383215 A K _79516 _79517 i ltle k f dom neut h1) (@lem6383226 A K k f i dom neut)). Qed.
Lemma lem6383232 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (eq_refl (term927 A K _79516)). Qed.
Lemma lem6383233 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1040 A K _79516 ltle _79517 k f i dom neut) = (term1076 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383232 A K _79516) (@lem6383227 A K _79516 _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383236 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1041 A K ltle _79517 k f i dom neut) = (term1077 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6383233 A K _79516 _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383237 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383238 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1042 A K ltle _79517 k f i dom neut) = (term1078 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383237 A K) (@lem6383236 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383243 {A K : Type'} (_79517 : type850 A K) : (term1012 A K _79517) = (term1012 A K _79517).
Proof. exact (eq_refl (term1012 A K _79517)). Qed.
Lemma lem6383244 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1043 A K ltle _79517 k f i dom neut) = (term1079 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383243 A K _79517) (@lem6383238 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383247 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1045 A K ltle k f i dom neut) = (term1080 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6383244 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383248 {A K : Type'} : (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383249 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = False) : (term1046 A K ltle k f i dom neut) = (term1081 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383248 A K) (@lem6383247 A K i ltle k f dom neut h1)). Qed.
Lemma lem6383254 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1082 A K ltle k f i dom neut.
Proof. exact (fun h0 : (term1071 A K ltle k f dom neut) = False => @lem6383249 A K i ltle k f dom neut h0). Qed.
Lemma lem6383356 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1071 A K ltle k f dom neut) = True.
Proof. exact (h1). Qed.
Lemma lem6383357 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1071 A K ltle k f dom neut) = True.
Proof. exact (@lem6383356 A K ltle k f dom neut h1). Qed.
Lemma lem6383358 {K : Type'} : (@COND K) = (@COND K).
Proof. exact (eq_refl (@COND K)). Qed.
Lemma lem6383359 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term928 A K ltle k f dom neut) = (@COND K True).
Proof. exact (MK_COMB (@lem6383358 K) (@lem6383357 A K ltle k f dom neut h1)). Qed.
Lemma lem6383360 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (eq_refl (_79516 ltle k f dom neut)). Qed.
Lemma lem6383361 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term930 A K _79516 ltle k f dom neut) = (term1083 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383359 A K ltle k f dom neut h1) (@lem6383360 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383362 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (_79517 k f dom neut).
Proof. exact (eq_refl (_79517 k f dom neut)). Qed.
Lemma lem6383363 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1013 A K _79516 ltle _79517 k f dom neut) = (term1084 A K _79516 ltle _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6383361 A K _79516 ltle k f dom neut h1) (@lem6383362 A K _79517 k f dom neut)). Qed.
Lemma lem6383365 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6383366 {K : Type'} (t2 : K) (t1 : K) : (@COND K True t1 t2) = t1.
Proof. exact (@lem6383365 K t2 t1). Qed.
Lemma lem6383367 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1084 A K _79516 ltle _79517 k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (@lem6383366 K (_79517 k f dom neut) (_79516 ltle k f dom neut)). Qed.
Lemma lem6383368 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1013 A K _79516 ltle _79517 k f dom neut) = (_79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6383363 A K _79516 _79517 ltle k f dom neut h1) (@lem6383367 A K _79517 _79516 ltle k f dom neut)). Qed.
Lemma lem6383369 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6383370 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1014 A K _79516 ltle _79517 k f dom neut) = (term865 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383369 K) (@lem6383368 A K _79517 _79516 ltle k f dom neut h1)). Qed.
Lemma lem6383371 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6383372 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : ((term1013 A K _79516 ltle _79517 k f dom neut) = i) = ((_79516 ltle k f dom neut) = i).
Proof. exact (MK_COMB (@lem6383370 A K _79517 _79516 ltle k f dom neut h1) (@lem6383371 K i)). Qed.
Lemma lem6383375 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383376 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1015 A K _79516 ltle _79517 k f dom neut i) = (term1085 A K _79516 ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383375) (@lem6383372 A K _79517 _79516 i ltle k f dom neut h1)). Qed.
Lemma lem6383387 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (eq_refl (term825 A K k f i dom neut)). Qed.
Lemma lem6383388 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1039 A K _79516 ltle _79517 k f i dom neut) = (term1086 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383376 A K _79517 _79516 i ltle k f dom neut h1) (@lem6383387 A K k f i dom neut)). Qed.
Lemma lem6383393 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (eq_refl (term927 A K _79516)). Qed.
Lemma lem6383394 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1040 A K _79516 ltle _79517 k f i dom neut) = (term1087 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383393 A K _79516) (@lem6383388 A K _79517 _79516 i ltle k f dom neut h1)). Qed.
Lemma lem6383397 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1041 A K ltle _79517 k f i dom neut) = (term1088 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6383394 A K _79517 _79516 i ltle k f dom neut h1)). Qed.
Lemma lem6383398 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383399 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1042 A K ltle _79517 k f i dom neut) = (term1089 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383398 A K) (@lem6383397 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383404 {A K : Type'} (_79517 : type850 A K) : (term1012 A K _79517) = (term1012 A K _79517).
Proof. exact (eq_refl (term1012 A K _79517)). Qed.
Lemma lem6383405 {A K : Type'} (_79517 : type850 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1043 A K ltle _79517 k f i dom neut) = (term1090 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383404 A K _79517) (@lem6383399 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383408 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1045 A K ltle k f i dom neut) = (term1091 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6383405 A K _79517 i ltle k f dom neut h1)). Qed.
Lemma lem6383409 {A K : Type'} : (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383410 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1071 A K ltle k f dom neut) = True) : (term1046 A K ltle k f i dom neut) = (term1092 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383409 A K) (@lem6383408 A K i ltle k f dom neut h1)). Qed.
Lemma lem6383415 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1093 A K ltle k f i dom neut.
Proof. exact (fun h0 : (term1071 A K ltle k f dom neut) = True => @lem6383410 A K i ltle k f dom neut h0). Qed.
Lemma lem6383416 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1094 A K ltle k f i dom neut.
Proof. exact (conj (@lem6383254 A K ltle k f i dom neut) (@lem6383415 A K ltle k f i dom neut)). Qed.
Lemma lem6383418 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1095 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem6383419 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1096 A K ltle k f i dom neut.
Proof. exact (@lem6383418 (term1046 A K ltle k f i dom neut) (term1092 A K ltle k f i dom neut) (term1071 A K ltle k f dom neut) (term1081 A K k f i dom neut)). Qed.
Lemma lem6383434 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1046 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut).
Proof. exact (@lem6383419 A K ltle k f i dom neut (@lem6383416 A K ltle k f i dom neut)). Qed.
Lemma lem6383439 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term706 A K k f i dom neut) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term706 A K k f i dom neut)). Qed.
Lemma lem6383444 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x dom neut) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term706 A K k f x dom neut)). Qed.
Lemma lem6383445 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term705 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383444 A K k f x dom neut)). Qed.
Lemma lem6383446 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6383447 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term821 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6383446 K) (@lem6383445 A K k f dom neut)). Qed.
Lemma lem6383448 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383449 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term823 A K k f dom neut) = (term823 A K k f dom neut).
Proof. exact (MK_COMB (@lem6383448) (@lem6383447 A K k f dom neut)). Qed.
Lemma lem6383450 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383449 A K k f dom neut) (@lem6383439 A K k f i dom neut)). Qed.
Lemma lem6383453 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1074 A K _79517 k f dom neut i) = (term1074 A K _79517 k f dom neut i).
Proof. exact (eq_refl (term1074 A K _79517 k f dom neut i)). Qed.
Lemma lem6383454 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1075 A K _79517 k f i dom neut) = (term1075 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383453 A K _79517 k f dom neut i) (@lem6383450 A K k f i dom neut)). Qed.
Lemma lem6383467 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term900 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term900 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6383468 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term902 A K _79516 ltle k f dom neut) = (term902 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6383467 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6383469 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383470 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term904 A K _79516 ltle k f dom neut) = (term904 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383469 K) (@lem6383468 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383473 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516 ltle k f dom neut) = (term890 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term890 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383474 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term906 A K _79516 ltle k f dom neut) = (term906 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383473 A K _79516 ltle k f dom neut) (@lem6383470 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383477 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516 ltle f dom neut k) = (term881 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term881 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6383478 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term907 A K _79516 ltle k f dom neut) = (term907 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383477 A K _79516 ltle f dom neut k) (@lem6383474 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383491 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1098 A K ltle k f dom neut j x) = (term1098 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1098 A K ltle k f dom neut j x)). Qed.
Lemma lem6383492 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1099 A K ltle k f dom neut x) = (term1099 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6383491 A K ltle k f dom neut j x)). Qed.
Lemma lem6383493 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383494 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1100 A K ltle k f dom neut x) = (term1100 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383493 K) (@lem6383492 A K ltle k f dom neut x)). Qed.
Lemma lem6383497 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1101 A K f x dom neut) = (term1101 A K f x dom neut).
Proof. exact (eq_refl (term1101 A K f x dom neut)). Qed.
Lemma lem6383498 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1102 A K ltle k f dom neut x) = (term1102 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383497 A K f x dom neut) (@lem6383494 A K ltle k f dom neut x)). Qed.
Lemma lem6383501 {K : Type'} (x : K) (k : K -> Prop) : (term673 K x k) = (term673 K x k).
Proof. exact (eq_refl (term673 K x k)). Qed.
Lemma lem6383502 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term834 A K ltle k f dom neut x) = (term834 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383501 K x k) (@lem6383498 A K ltle k f dom neut x)). Qed.
Lemma lem6383503 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383504 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term836 A K ltle k f dom neut x) = (term836 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383503) (@lem6383502 A K ltle k f dom neut x)). Qed.
Lemma lem6383505 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term908 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383504 A K ltle k f dom neut x) (@lem6383478 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383506 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term909 A K _79516 ltle k f dom neut) = (term909 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383505 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6383507 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383508 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term910 A K _79516 ltle k f dom neut) = (term910 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383507 K) (@lem6383506 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383509 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term912 A K _79516 ltle k f dom) = (term912 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6383508 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383510 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383511 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term913 A K _79516 ltle k f dom) = (term913 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6383510 A) (@lem6383509 A K _79516 ltle k f dom)). Qed.
Lemma lem6383512 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term915 A K _79516 ltle k f) = (term915 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383511 A K _79516 ltle k f dom)). Qed.
Lemma lem6383513 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383514 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term916 A K _79516 ltle k f) = (term916 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6383513 A) (@lem6383512 A K _79516 ltle k f)). Qed.
Lemma lem6383515 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term918 A K _79516 ltle k) = (term918 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6383514 A K _79516 ltle k f)). Qed.
Lemma lem6383516 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383517 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term919 A K _79516 ltle k) = (term919 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6383516 A K) (@lem6383515 A K _79516 ltle k)). Qed.
Lemma lem6383518 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term921 A K _79516 ltle) = (term921 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383517 A K _79516 ltle k)). Qed.
Lemma lem6383519 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383520 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term922 A K _79516 ltle) = (term922 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6383519 K) (@lem6383518 A K _79516 ltle)). Qed.
Lemma lem6383521 {A K : Type'} (_79516 : type758 A K) : (term924 A K _79516) = (term924 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6383520 A K _79516 ltle)). Qed.
Lemma lem6383522 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6383523 {A K : Type'} (_79516 : type758 A K) : (term925 A K _79516) = (term925 A K _79516).
Proof. exact (MK_COMB (@lem6383522 K) (@lem6383521 A K _79516)). Qed.
Lemma lem6383524 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383525 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (MK_COMB (@lem6383524) (@lem6383523 A K _79516)). Qed.
Lemma lem6383526 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1076 A K _79516 _79517 k f i dom neut) = (term1076 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383525 A K _79516) (@lem6383454 A K _79517 k f i dom neut)). Qed.
Lemma lem6383527 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1077 A K _79517 k f i dom neut) = (term1077 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6383526 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6383528 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383529 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1078 A K _79517 k f i dom neut) = (term1078 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383528 A K) (@lem6383527 A K _79517 k f i dom neut)). Qed.
Lemma lem6383542 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term996 A K x _79517 k f dom neut).
Proof. exact (eq_refl (term996 A K x _79517 k f dom neut)). Qed.
Lemma lem6383543 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term997 A K _79517 k f dom neut) = (term997 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383542 A K x _79517 k f dom neut)). Qed.
Lemma lem6383544 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383545 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term998 A K _79517 k f dom neut) = (term998 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6383544 K) (@lem6383543 A K _79517 k f dom neut)). Qed.
Lemma lem6383546 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1000 A K _79517 k f dom) = (term1000 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6383545 A K _79517 k f dom neut)). Qed.
Lemma lem6383547 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383548 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1001 A K _79517 k f dom) = (term1001 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6383547 A) (@lem6383546 A K _79517 k f dom)). Qed.
Lemma lem6383549 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1003 A K _79517 k f) = (term1003 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383548 A K _79517 k f dom)). Qed.
Lemma lem6383550 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383551 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1004 A K _79517 k f) = (term1004 A K _79517 k f).
Proof. exact (MK_COMB (@lem6383550 A) (@lem6383549 A K _79517 k f)). Qed.
Lemma lem6383552 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1006 A K _79517 k) = (term1006 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6383551 A K _79517 k f)). Qed.
Lemma lem6383553 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383554 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1007 A K _79517 k) = (term1007 A K _79517 k).
Proof. exact (MK_COMB (@lem6383553 A K) (@lem6383552 A K _79517 k)). Qed.
Lemma lem6383555 {A K : Type'} (_79517 : type850 A K) : (term1009 A K _79517) = (term1009 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383554 A K _79517 k)). Qed.
Lemma lem6383556 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383557 {A K : Type'} (_79517 : type850 A K) : (term1010 A K _79517) = (term1010 A K _79517).
Proof. exact (MK_COMB (@lem6383556 K) (@lem6383555 A K _79517)). Qed.
Lemma lem6383558 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383559 {A K : Type'} (_79517 : type850 A K) : (term1012 A K _79517) = (term1012 A K _79517).
Proof. exact (MK_COMB (@lem6383558) (@lem6383557 A K _79517)). Qed.
Lemma lem6383560 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1079 A K _79517 k f i dom neut) = (term1079 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6383559 A K _79517) (@lem6383529 A K _79517 k f i dom neut)). Qed.
Lemma lem6383561 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1080 A K k f i dom neut) = (term1080 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6383560 A K _79517 k f i dom neut)). Qed.
Lemma lem6383562 {A K : Type'} : (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383563 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1081 A K k f i dom neut) = (term1081 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383562 A K) (@lem6383561 A K k f i dom neut)). Qed.
Lemma lem6383576 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1098 A K ltle k f dom neut j i) = (term1098 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1098 A K ltle k f dom neut j i)). Qed.
Lemma lem6383577 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1099 A K ltle k f dom neut i) = (term1099 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6383576 A K ltle k f dom neut j i)). Qed.
Lemma lem6383578 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383579 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1100 A K ltle k f dom neut i) = (term1100 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383578 K) (@lem6383577 A K ltle k f dom neut i)). Qed.
Lemma lem6383582 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1101 A K f i dom neut) = (term1101 A K f i dom neut).
Proof. exact (eq_refl (term1101 A K f i dom neut)). Qed.
Lemma lem6383583 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1102 A K ltle k f dom neut i) = (term1102 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383582 A K f i dom neut) (@lem6383579 A K ltle k f dom neut i)). Qed.
Lemma lem6383586 {K : Type'} (i : K) (k : K -> Prop) : (term673 K i k) = (term673 K i k).
Proof. exact (eq_refl (term673 K i k)). Qed.
Lemma lem6383587 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term834 A K ltle k f dom neut i) = (term834 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383586 K i k) (@lem6383583 A K ltle k f dom neut i)). Qed.
Lemma lem6383588 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term830 A K ltle k f dom neut) = (term830 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6383587 A K ltle k f dom neut i)). Qed.
Lemma lem6383589 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6383590 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1071 A K ltle k f dom neut) = (term1071 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383589 K) (@lem6383588 A K ltle k f dom neut)). Qed.
Lemma lem6383591 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6383592 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1103 A K ltle k f dom neut) = (term1103 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383591) (@lem6383590 A K ltle k f dom neut)). Qed.
Lemma lem6383593 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1104 A K ltle k f i dom neut) = (term1104 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383592 A K ltle k f dom neut) (@lem6383563 A K k f i dom neut)). Qed.
Lemma lem6383598 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term706 A K k f i dom neut) = (term706 A K k f i dom neut).
Proof. exact (eq_refl (term706 A K k f i dom neut)). Qed.
Lemma lem6383603 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x dom neut) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term706 A K k f x dom neut)). Qed.
Lemma lem6383604 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term705 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383603 A K k f x dom neut)). Qed.
Lemma lem6383605 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6383606 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term821 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6383605 K) (@lem6383604 A K k f dom neut)). Qed.
Lemma lem6383607 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383608 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term823 A K k f dom neut) = (term823 A K k f dom neut).
Proof. exact (MK_COMB (@lem6383607) (@lem6383606 A K k f dom neut)). Qed.
Lemma lem6383609 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term825 A K k f i dom neut) = (term825 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383608 A K k f dom neut) (@lem6383598 A K k f i dom neut)). Qed.
Lemma lem6383612 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1085 A K _79516 ltle k f dom neut i) = (term1085 A K _79516 ltle k f dom neut i).
Proof. exact (eq_refl (term1085 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6383613 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1086 A K _79516 ltle k f i dom neut) = (term1086 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383612 A K _79516 ltle k f dom neut i) (@lem6383609 A K k f i dom neut)). Qed.
Lemma lem6383626 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term900 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term900 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6383627 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term902 A K _79516 ltle k f dom neut) = (term902 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6383626 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6383628 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383629 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term904 A K _79516 ltle k f dom neut) = (term904 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383628 K) (@lem6383627 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383632 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516 ltle k f dom neut) = (term890 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term890 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383633 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term906 A K _79516 ltle k f dom neut) = (term906 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383632 A K _79516 ltle k f dom neut) (@lem6383629 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383636 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516 ltle f dom neut k) = (term881 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term881 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6383637 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term907 A K _79516 ltle k f dom neut) = (term907 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383636 A K _79516 ltle f dom neut k) (@lem6383633 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383650 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1098 A K ltle k f dom neut j x) = (term1098 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1098 A K ltle k f dom neut j x)). Qed.
Lemma lem6383651 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1099 A K ltle k f dom neut x) = (term1099 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6383650 A K ltle k f dom neut j x)). Qed.
Lemma lem6383652 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383653 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1100 A K ltle k f dom neut x) = (term1100 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383652 K) (@lem6383651 A K ltle k f dom neut x)). Qed.
Lemma lem6383656 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1101 A K f x dom neut) = (term1101 A K f x dom neut).
Proof. exact (eq_refl (term1101 A K f x dom neut)). Qed.
Lemma lem6383657 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1102 A K ltle k f dom neut x) = (term1102 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383656 A K f x dom neut) (@lem6383653 A K ltle k f dom neut x)). Qed.
Lemma lem6383660 {K : Type'} (x : K) (k : K -> Prop) : (term673 K x k) = (term673 K x k).
Proof. exact (eq_refl (term673 K x k)). Qed.
Lemma lem6383661 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term834 A K ltle k f dom neut x) = (term834 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383660 K x k) (@lem6383657 A K ltle k f dom neut x)). Qed.
Lemma lem6383662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383663 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term836 A K ltle k f dom neut x) = (term836 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6383662) (@lem6383661 A K ltle k f dom neut x)). Qed.
Lemma lem6383664 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term908 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383663 A K ltle k f dom neut x) (@lem6383637 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383665 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term909 A K _79516 ltle k f dom neut) = (term909 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383664 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6383666 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383667 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term910 A K _79516 ltle k f dom neut) = (term910 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383666 K) (@lem6383665 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383668 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term912 A K _79516 ltle k f dom) = (term912 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6383667 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6383669 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383670 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term913 A K _79516 ltle k f dom) = (term913 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6383669 A) (@lem6383668 A K _79516 ltle k f dom)). Qed.
Lemma lem6383671 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term915 A K _79516 ltle k f) = (term915 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383670 A K _79516 ltle k f dom)). Qed.
Lemma lem6383672 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383673 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term916 A K _79516 ltle k f) = (term916 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6383672 A) (@lem6383671 A K _79516 ltle k f)). Qed.
Lemma lem6383674 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term918 A K _79516 ltle k) = (term918 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6383673 A K _79516 ltle k f)). Qed.
Lemma lem6383675 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383676 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term919 A K _79516 ltle k) = (term919 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6383675 A K) (@lem6383674 A K _79516 ltle k)). Qed.
Lemma lem6383677 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term921 A K _79516 ltle) = (term921 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383676 A K _79516 ltle k)). Qed.
Lemma lem6383678 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383679 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term922 A K _79516 ltle) = (term922 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6383678 K) (@lem6383677 A K _79516 ltle)). Qed.
Lemma lem6383680 {A K : Type'} (_79516 : type758 A K) : (term924 A K _79516) = (term924 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6383679 A K _79516 ltle)). Qed.
Lemma lem6383681 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6383682 {A K : Type'} (_79516 : type758 A K) : (term925 A K _79516) = (term925 A K _79516).
Proof. exact (MK_COMB (@lem6383681 K) (@lem6383680 A K _79516)). Qed.
Lemma lem6383683 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383684 {A K : Type'} (_79516 : type758 A K) : (term927 A K _79516) = (term927 A K _79516).
Proof. exact (MK_COMB (@lem6383683) (@lem6383682 A K _79516)). Qed.
Lemma lem6383685 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1087 A K _79516 ltle k f i dom neut) = (term1087 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383684 A K _79516) (@lem6383613 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6383686 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1088 A K ltle k f i dom neut) = (term1088 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6383685 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6383687 {A K : Type'} : (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383688 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1089 A K ltle k f i dom neut) = (term1089 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383687 A K) (@lem6383686 A K ltle k f i dom neut)). Qed.
Lemma lem6383701 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term996 A K x _79517 k f dom neut).
Proof. exact (eq_refl (term996 A K x _79517 k f dom neut)). Qed.
Lemma lem6383702 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term997 A K _79517 k f dom neut) = (term997 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6383701 A K x _79517 k f dom neut)). Qed.
Lemma lem6383703 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383704 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term998 A K _79517 k f dom neut) = (term998 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6383703 K) (@lem6383702 A K _79517 k f dom neut)). Qed.
Lemma lem6383705 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1000 A K _79517 k f dom) = (term1000 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6383704 A K _79517 k f dom neut)). Qed.
Lemma lem6383706 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383707 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1001 A K _79517 k f dom) = (term1001 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6383706 A) (@lem6383705 A K _79517 k f dom)). Qed.
Lemma lem6383708 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1003 A K _79517 k f) = (term1003 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383707 A K _79517 k f dom)). Qed.
Lemma lem6383709 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383710 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1004 A K _79517 k f) = (term1004 A K _79517 k f).
Proof. exact (MK_COMB (@lem6383709 A) (@lem6383708 A K _79517 k f)). Qed.
Lemma lem6383711 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1006 A K _79517 k) = (term1006 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6383710 A K _79517 k f)). Qed.
Lemma lem6383712 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383713 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1007 A K _79517 k) = (term1007 A K _79517 k).
Proof. exact (MK_COMB (@lem6383712 A K) (@lem6383711 A K _79517 k)). Qed.
Lemma lem6383714 {A K : Type'} (_79517 : type850 A K) : (term1009 A K _79517) = (term1009 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383713 A K _79517 k)). Qed.
Lemma lem6383715 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383716 {A K : Type'} (_79517 : type850 A K) : (term1010 A K _79517) = (term1010 A K _79517).
Proof. exact (MK_COMB (@lem6383715 K) (@lem6383714 A K _79517)). Qed.
Lemma lem6383717 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6383718 {A K : Type'} (_79517 : type850 A K) : (term1012 A K _79517) = (term1012 A K _79517).
Proof. exact (MK_COMB (@lem6383717) (@lem6383716 A K _79517)). Qed.
Lemma lem6383719 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1090 A K _79517 ltle k f i dom neut) = (term1090 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383718 A K _79517) (@lem6383688 A K ltle k f i dom neut)). Qed.
Lemma lem6383720 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1091 A K ltle k f i dom neut) = (term1091 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6383719 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6383721 {A K : Type'} : (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@all ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6383722 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1092 A K ltle k f i dom neut) = (term1092 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383721 A K) (@lem6383720 A K ltle k f i dom neut)). Qed.
Lemma lem6383735 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1098 A K ltle k f dom neut j i) = (term1098 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1098 A K ltle k f dom neut j i)). Qed.
Lemma lem6383736 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1099 A K ltle k f dom neut i) = (term1099 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6383735 A K ltle k f dom neut j i)). Qed.
Lemma lem6383737 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383738 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1100 A K ltle k f dom neut i) = (term1100 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383737 K) (@lem6383736 A K ltle k f dom neut i)). Qed.
Lemma lem6383741 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1101 A K f i dom neut) = (term1101 A K f i dom neut).
Proof. exact (eq_refl (term1101 A K f i dom neut)). Qed.
Lemma lem6383742 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1102 A K ltle k f dom neut i) = (term1102 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383741 A K f i dom neut) (@lem6383738 A K ltle k f dom neut i)). Qed.
Lemma lem6383745 {K : Type'} (i : K) (k : K -> Prop) : (term673 K i k) = (term673 K i k).
Proof. exact (eq_refl (term673 K i k)). Qed.
Lemma lem6383746 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term834 A K ltle k f dom neut i) = (term834 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6383745 K i k) (@lem6383742 A K ltle k f dom neut i)). Qed.
Lemma lem6383747 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term830 A K ltle k f dom neut) = (term830 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6383746 A K ltle k f dom neut i)). Qed.
Lemma lem6383748 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6383749 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1071 A K ltle k f dom neut) = (term1071 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383748 K) (@lem6383747 A K ltle k f dom neut)). Qed.
Lemma lem6383750 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6383751 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1105 A K ltle k f dom neut) = (term1105 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383750) (@lem6383749 A K ltle k f dom neut)). Qed.
Lemma lem6383752 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6383753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1106 A K ltle k f dom neut) = (term1106 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6383752) (@lem6383751 A K ltle k f dom neut)). Qed.
Lemma lem6383754 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1107 A K ltle k f i dom neut) = (term1107 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383753 A K ltle k f dom neut) (@lem6383722 A K ltle k f i dom neut)). Qed.
Lemma lem6383755 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6383756 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1108 A K ltle k f i dom neut) = (term1108 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383755) (@lem6383754 A K ltle k f i dom neut)). Qed.
Lemma lem6383757 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1097 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6383756 A K ltle k f i dom neut) (@lem6383593 A K ltle k f i dom neut)). Qed.
Lemma lem6383758 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1109 A K ltle k f i dom neut) = (term1109 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1109 A K ltle k f i dom neut)). Qed.
Lemma lem6383759 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1046 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut)) = ((term1046 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6383758 A K ltle k f i dom neut) (@lem6383757 A K ltle k f i dom neut)). Qed.
Lemma lem6383760 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1046 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6383759 A K ltle k f i dom neut) (@lem6383434 A K ltle k f i dom neut)). Qed.
Lemma lem6383761 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1048 A K k f i dom neut) = (term1110 A K k f i dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6383760 A K ltle k f i dom neut)). Qed.
Lemma lem6383762 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6383763 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1050 A K k f i dom neut) = (term1111 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6383762 K) (@lem6383761 A K k f i dom neut)). Qed.
Lemma lem6383764 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1052 A K f i dom neut) = (term1112 A K f i dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6383763 A K k f i dom neut)). Qed.
Lemma lem6383765 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6383766 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1054 A K f i dom neut) = (term1113 A K f i dom neut).
Proof. exact (MK_COMB (@lem6383765 K) (@lem6383764 A K f i dom neut)). Qed.
Lemma lem6383767 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : (term1056 A K i dom neut) = (term1114 A K i dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6383766 A K f i dom neut)). Qed.
Lemma lem6383768 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6383769 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : (term1058 A K i dom neut) = (term1115 A K i dom neut).
Proof. exact (MK_COMB (@lem6383768 A K) (@lem6383767 A K i dom neut)). Qed.
Lemma lem6383770 {A K : Type'} (dom : A -> Prop) (neut : A) : (term1060 A K dom neut) = (term1116 A K dom neut).
Proof. exact (fun_ext (fun i : K => @lem6383769 A K i dom neut)). Qed.
Lemma lem6383771 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6383772 {A K : Type'} (dom : A -> Prop) (neut : A) : (term1062 A K dom neut) = (term1117 A K dom neut).
Proof. exact (MK_COMB (@lem6383771 K) (@lem6383770 A K dom neut)). Qed.
Lemma lem6383773 {A K : Type'} (neut : A) : (term1064 A K neut) = (term1118 A K neut).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6383772 A K dom neut)). Qed.
Lemma lem6383774 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6383775 {A K : Type'} (neut : A) : (term1066 A K neut) = (term1119 A K neut).
Proof. exact (MK_COMB (@lem6383774 A) (@lem6383773 A K neut)). Qed.
Lemma lem6383776 {A K : Type'} : (term1068 A K) = (term1120 A K).
Proof. exact (fun_ext (fun neut : A => @lem6383775 A K neut)). Qed.
Lemma lem6383777 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6383778 {A K : Type'} : (term1070 A K) = (term1121 A K).
Proof. exact (MK_COMB (@lem6383777 A) (@lem6383776 A K)). Qed.
Lemma lem6384139 {A K : Type'} : (term1069 A K) = (term1121 A K).
Proof. exact (TRANS (@lem6383091 A K) (@lem6383778 A K)). Qed.
Lemma lem6384140 {A K : Type'} : (term1121 A K) = (term1069 A K).
Proof. exact (SYM (@lem6384139 A K)). Qed.
Lemma lem6384142 (p : Prop) : p = (term23 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6384143 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1097 A K ltle k f i dom neut) = (term1122 A K ltle k f i dom neut).
Proof. exact (@lem6384142 (term1097 A K ltle k f i dom neut)). Qed.
Lemma lem6384144 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1122 A K ltle k f i dom neut) = (term1097 A K ltle k f i dom neut).
Proof. exact (SYM (@lem6384143 A K ltle k f i dom neut)). Qed.
Lemma lem6384145 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1123 A K ltle k f i dom neut) : term1123 A K ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6384155 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f j dom neut) = (term1125 A K k f j dom neut).
Proof. exact (@lem17045 (@IN K j k) (term681 A K f j dom neut)). Qed.
Lemma lem6384157 {K : Type'} (ltle : type1402 K) (j : K) (i : K) : (term1126 K ltle j i) = (term1126 K ltle j i).
Proof. exact (eq_refl (term1126 K ltle j i)). Qed.
Lemma lem6384158 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1127 A K ltle i k f j dom neut) = (term1128 A K ltle i k f j dom neut).
Proof. exact (MK_COMB (@lem6384157 K ltle j i) (@lem6384155 A K k f j dom neut)). Qed.
Lemma lem6384159 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1129 A K ltle i k f j dom neut) = (term1127 A K ltle i k f j dom neut).
Proof. exact (@lem17045 (ltle j i) (term706 A K k f j dom neut)). Qed.
Lemma lem6384160 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1129 A K ltle i k f j dom neut) = (term1128 A K ltle i k f j dom neut).
Proof. exact (TRANS (@lem6384159 A K ltle i k f j dom neut) (@lem6384158 A K ltle i k f j dom neut)). Qed.
Lemma lem6384161 {K : Type'} (j : K) (i : K) : (j = i) = (j = i).
Proof. exact (eq_refl (j = i)). Qed.
Lemma lem6384162 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384163 {A K : Type'} (ltle : type1402 K) (i : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1130 A K ltle i k f j dom neut) = (term1131 A K ltle i k f j dom neut).
Proof. exact (MK_COMB (@lem6384162) (@lem6384160 A K ltle i k f j dom neut)). Qed.
Lemma lem6384164 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1132 A K ltle k f dom neut j i) = (term1133 A K ltle k f dom neut j i).
Proof. exact (MK_COMB (@lem6384163 A K ltle i k f j dom neut) (@lem6384161 K j i)). Qed.
Lemma lem6384165 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1098 A K ltle k f dom neut j i) = (term1132 A K ltle k f dom neut j i).
Proof. exact (@lem17265 (term1134 A K ltle i k f j dom neut) (j = i)). Qed.
Lemma lem6384166 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1098 A K ltle k f dom neut j i) = (term1133 A K ltle k f dom neut j i).
Proof. exact (TRANS (@lem6384165 A K ltle k f dom neut j i) (@lem6384164 A K ltle k f dom neut j i)). Qed.
Lemma lem6384167 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1099 A K ltle k f dom neut i) = (term1135 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6384166 A K ltle k f dom neut j i)). Qed.
Lemma lem6384168 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384169 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1100 A K ltle k f dom neut i) = (term1136 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384168 K) (@lem6384167 A K ltle k f dom neut i)). Qed.
Lemma lem6384171 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1101 A K f i dom neut) = (term1101 A K f i dom neut).
Proof. exact (eq_refl (term1101 A K f i dom neut)). Qed.
Lemma lem6384172 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1102 A K ltle k f dom neut i) = (term1137 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384171 A K f i dom neut) (@lem6384169 A K ltle k f dom neut i)). Qed.
Lemma lem6384174 {K : Type'} (i : K) (k : K -> Prop) : (term673 K i k) = (term673 K i k).
Proof. exact (eq_refl (term673 K i k)). Qed.
Lemma lem6384175 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term834 A K ltle k f dom neut i) = (term1138 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384174 K i k) (@lem6384172 A K ltle k f dom neut i)). Qed.
Lemma lem6384176 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term830 A K ltle k f dom neut) = (term1139 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6384175 A K ltle k f dom neut i)). Qed.
Lemma lem6384177 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384178 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1071 A K ltle k f dom neut) = (term1140 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384177 K) (@lem6384176 A K ltle k f dom neut)). Qed.
Lemma lem6384179 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1141 A K ltle k f dom neut) = (term1071 A K ltle k f dom neut).
Proof. exact (@lem16933 (term1071 A K ltle k f dom neut)). Qed.
Lemma lem6384180 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1141 A K ltle k f dom neut) = (term1140 A K ltle k f dom neut).
Proof. exact (TRANS (@lem6384179 A K ltle k f dom neut) (@lem6384178 A K ltle k f dom neut)). Qed.
Lemma lem6384187 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f x dom neut) = (term1125 A K k f x dom neut).
Proof. exact (@lem17045 (@IN K x k) (term681 A K f x dom neut)). Qed.
Lemma lem6384192 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384193 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384194 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1142 A K k f x dom neut) = (term1143 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6384193) (@lem6384187 A K k f x dom neut)). Qed.
Lemma lem6384195 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1144 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384194 A K k f x dom neut) (@lem6384192 A K _79517 k f dom neut)). Qed.
Lemma lem6384196 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term1144 A K x _79517 k f dom neut).
Proof. exact (@lem17265 (term706 A K k f x dom neut) (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384197 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (TRANS (@lem6384196 A K x _79517 k f dom neut) (@lem6384195 A K x _79517 k f dom neut)). Qed.
Lemma lem6384198 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term997 A K _79517 k f dom neut) = (term1146 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384197 A K x _79517 k f dom neut)). Qed.
Lemma lem6384199 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384200 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term998 A K _79517 k f dom neut) = (term1147 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384199 K) (@lem6384198 A K _79517 k f dom neut)). Qed.
Lemma lem6384201 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1000 A K _79517 k f dom) = (term1148 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6384200 A K _79517 k f dom neut)). Qed.
Lemma lem6384202 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6384203 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1001 A K _79517 k f dom) = (term1149 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6384202 A) (@lem6384201 A K _79517 k f dom)). Qed.
Lemma lem6384204 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1003 A K _79517 k f) = (term1150 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6384203 A K _79517 k f dom)). Qed.
Lemma lem6384205 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6384206 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1004 A K _79517 k f) = (term1151 A K _79517 k f).
Proof. exact (MK_COMB (@lem6384205 A) (@lem6384204 A K _79517 k f)). Qed.
Lemma lem6384207 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1006 A K _79517 k) = (term1152 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6384206 A K _79517 k f)). Qed.
Lemma lem6384208 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6384209 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1007 A K _79517 k) = (term1153 A K _79517 k).
Proof. exact (MK_COMB (@lem6384208 A K) (@lem6384207 A K _79517 k)). Qed.
Lemma lem6384210 {A K : Type'} (_79517 : type850 A K) : (term1009 A K _79517) = (term1154 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6384209 A K _79517 k)). Qed.
Lemma lem6384211 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6384212 {A K : Type'} (_79517 : type850 A K) : (term1010 A K _79517) = (term1155 A K _79517).
Proof. exact (MK_COMB (@lem6384211 K) (@lem6384210 A K _79517)). Qed.
Lemma lem6384229 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1156 A K ltle k f dom neut j x) = (term1157 A K ltle k f dom neut j x).
Proof. exact (@lem17362 (term1134 A K ltle x k f j dom neut) (j = x)). Qed.
Lemma lem6384230 {K : Type'} (P : K -> Prop) : (term1158 K P) = (term1159 K P).
Proof. exact (@lem18392 K P). Qed.
Lemma lem6384231 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1160 A K ltle k f dom neut x) = (term1161 A K ltle k f dom neut x).
Proof. exact (@lem6384230 K (term1099 A K ltle k f dom neut x)). Qed.
Lemma lem6384232 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1162 A K ltle k f dom neut x j) = (term1098 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1162 A K ltle k f dom neut x j)). Qed.
Lemma lem6384233 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384234 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1163 A K ltle k f dom neut x j) = (term1156 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6384233) (@lem6384232 A K ltle k f dom neut j x)). Qed.
Lemma lem6384235 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1163 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6384234 A K ltle k f dom neut j x) (@lem6384229 A K ltle k f dom neut j x)). Qed.
Lemma lem6384236 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1164 A K ltle k f dom neut x) = (term1165 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6384235 A K ltle k f dom neut j x)). Qed.
Lemma lem6384237 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384238 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1161 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384237 K) (@lem6384236 A K ltle k f dom neut x)). Qed.
Lemma lem6384239 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1160 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384231 A K ltle k f dom neut x) (@lem6384238 A K ltle k f dom neut x)). Qed.
Lemma lem6384241 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6384242 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1168 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384241 A K f x dom neut) (@lem6384239 A K ltle k f dom neut x)). Qed.
Lemma lem6384243 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1170 A K ltle k f dom neut x) = (term1168 A K ltle k f dom neut x).
Proof. exact (@lem17045 (term681 A K f x dom neut) (term1100 A K ltle k f dom neut x)). Qed.
Lemma lem6384244 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1170 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384243 A K ltle k f dom neut x) (@lem6384242 A K ltle k f dom neut x)). Qed.
Lemma lem6384246 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6384247 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1172 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384246 K x k) (@lem6384244 A K ltle k f dom neut x)). Qed.
Lemma lem6384248 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1174 A K ltle k f dom neut x) = (term1172 A K ltle k f dom neut x).
Proof. exact (@lem17045 (@IN K x k) (term1102 A K ltle k f dom neut x)). Qed.
Lemma lem6384249 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1174 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384248 A K ltle k f dom neut x) (@lem6384247 A K ltle k f dom neut x)). Qed.
Lemma lem6384259 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f j dom neut) = (term1125 A K k f j dom neut).
Proof. exact (@lem17045 (@IN K j k) (term681 A K f j dom neut)). Qed.
Lemma lem6384261 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1175 A K j _79516 ltle k f dom neut) = (term1175 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1175 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384262 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1176 A K _79516 ltle k f j dom neut) = (term1177 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6384261 A K j _79516 ltle k f dom neut) (@lem6384259 A K k f j dom neut)). Qed.
Lemma lem6384263 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1178 A K _79516 ltle k f j dom neut) = (term1176 A K _79516 ltle k f j dom neut).
Proof. exact (@lem17045 (term892 A K j _79516 ltle k f dom neut) (term706 A K k f j dom neut)). Qed.
Lemma lem6384264 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1178 A K _79516 ltle k f j dom neut) = (term1177 A K _79516 ltle k f j dom neut).
Proof. exact (TRANS (@lem6384263 A K _79516 ltle k f j dom neut) (@lem6384262 A K _79516 ltle k f j dom neut)). Qed.
Lemma lem6384265 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j = (_79516 ltle k f dom neut)) = (j = (_79516 ltle k f dom neut)).
Proof. exact (eq_refl (j = (_79516 ltle k f dom neut))). Qed.
Lemma lem6384266 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384267 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1179 A K _79516 ltle k f j dom neut) = (term1180 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6384266) (@lem6384264 A K _79516 ltle k f j dom neut)). Qed.
Lemma lem6384268 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1181 A K j _79516 ltle k f dom neut) = (term1182 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384267 A K _79516 ltle k f j dom neut) (@lem6384265 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384269 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term1181 A K j _79516 ltle k f dom neut).
Proof. exact (@lem17265 (term896 A K _79516 ltle k f j dom neut) (j = (_79516 ltle k f dom neut))). Qed.
Lemma lem6384270 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term1182 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6384269 A K j _79516 ltle k f dom neut) (@lem6384268 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384271 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term902 A K _79516 ltle k f dom neut) = (term1183 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6384270 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384272 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384273 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term904 A K _79516 ltle k f dom neut) = (term1184 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384272 K) (@lem6384271 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384275 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516 ltle k f dom neut) = (term890 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term890 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384276 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term906 A K _79516 ltle k f dom neut) = (term1185 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384275 A K _79516 ltle k f dom neut) (@lem6384273 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384278 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516 ltle f dom neut k) = (term881 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term881 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6384279 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term907 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384278 A K _79516 ltle f dom neut k) (@lem6384276 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384280 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384281 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1187 A K ltle k f dom neut x) = (term1188 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384280) (@lem6384249 A K ltle k f dom neut x)). Qed.
Lemma lem6384282 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1189 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384281 A K ltle k f dom neut x) (@lem6384279 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384283 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term1189 A K x _79516 ltle k f dom neut).
Proof. exact (@lem17265 (term834 A K ltle k f dom neut x) (term907 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384284 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6384283 A K x _79516 ltle k f dom neut) (@lem6384282 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6384285 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term909 A K _79516 ltle k f dom neut) = (term1191 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384284 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6384286 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384287 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term910 A K _79516 ltle k f dom neut) = (term1192 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384286 K) (@lem6384285 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384288 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term912 A K _79516 ltle k f dom) = (term1193 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6384287 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384289 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6384290 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term913 A K _79516 ltle k f dom) = (term1194 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6384289 A) (@lem6384288 A K _79516 ltle k f dom)). Qed.
Lemma lem6384291 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term915 A K _79516 ltle k f) = (term1195 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6384290 A K _79516 ltle k f dom)). Qed.
Lemma lem6384292 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6384293 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term916 A K _79516 ltle k f) = (term1196 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6384292 A) (@lem6384291 A K _79516 ltle k f)). Qed.
Lemma lem6384294 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term918 A K _79516 ltle k) = (term1197 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6384293 A K _79516 ltle k f)). Qed.
Lemma lem6384295 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6384296 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term919 A K _79516 ltle k) = (term1198 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6384295 A K) (@lem6384294 A K _79516 ltle k)). Qed.
Lemma lem6384297 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term921 A K _79516 ltle) = (term1199 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6384296 A K _79516 ltle k)). Qed.
Lemma lem6384298 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6384299 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term922 A K _79516 ltle) = (term1200 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6384298 K) (@lem6384297 A K _79516 ltle)). Qed.
Lemma lem6384300 {A K : Type'} (_79516 : type758 A K) : (term924 A K _79516) = (term1201 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6384299 A K _79516 ltle)). Qed.
Lemma lem6384301 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6384302 {A K : Type'} (_79516 : type758 A K) : (term925 A K _79516) = (term1202 A K _79516).
Proof. exact (MK_COMB (@lem6384301 K) (@lem6384300 A K _79516)). Qed.
Lemma lem6384308 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x dom neut) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term706 A K k f x dom neut)). Qed.
Lemma lem6384309 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term705 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384308 A K k f x dom neut)). Qed.
Lemma lem6384310 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384311 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term821 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384310 K) (@lem6384309 A K k f dom neut)). Qed.
Lemma lem6384318 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (@lem17045 (@IN K i k) (term681 A K f i dom neut)). Qed.
Lemma lem6384319 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384320 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1203 A K k f dom neut) = (term1203 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384319) (@lem6384311 A K k f dom neut)). Qed.
Lemma lem6384321 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1204 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6384320 A K k f dom neut) (@lem6384318 A K k f i dom neut)). Qed.
Lemma lem6384322 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term827 A K k f i dom neut) = (term1204 A K k f i dom neut).
Proof. exact (@lem17362 (term821 A K k f dom neut) (term706 A K k f i dom neut)). Qed.
Lemma lem6384323 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term827 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (TRANS (@lem6384322 A K k f i dom neut) (@lem6384321 A K k f i dom neut)). Qed.
Lemma lem6384325 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1206 A K _79516 ltle k f dom neut i) = (term1206 A K _79516 ltle k f dom neut i).
Proof. exact (eq_refl (term1206 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6384326 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1207 A K _79516 ltle k f i dom neut) = (term1208 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384325 A K _79516 ltle k f dom neut i) (@lem6384323 A K k f i dom neut)). Qed.
Lemma lem6384327 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1209 A K _79516 ltle k f i dom neut) = (term1207 A K _79516 ltle k f i dom neut).
Proof. exact (@lem17362 ((_79516 ltle k f dom neut) = i) (term825 A K k f i dom neut)). Qed.
Lemma lem6384328 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1209 A K _79516 ltle k f i dom neut) = (term1208 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6384327 A K _79516 ltle k f i dom neut) (@lem6384326 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384329 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384330 {A K : Type'} (_79516 : type758 A K) : (term1210 A K _79516) = (term1211 A K _79516).
Proof. exact (MK_COMB (@lem6384329) (@lem6384302 A K _79516)). Qed.
Lemma lem6384331 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1212 A K _79516 ltle k f i dom neut) = (term1213 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384330 A K _79516) (@lem6384328 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384332 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1214 A K _79516 ltle k f i dom neut) = (term1212 A K _79516 ltle k f i dom neut).
Proof. exact (@lem17362 (term925 A K _79516) (term1086 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384333 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1214 A K _79516 ltle k f i dom neut) = (term1213 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6384332 A K _79516 ltle k f i dom neut) (@lem6384331 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384334 {A K : Type'} (P : type193 A K) : (term1215 A K P) = (term1216 A K P).
Proof. exact (@lem18392 (type758 A K) P). Qed.
Lemma lem6384335 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1217 A K ltle k f i dom neut) = (term1218 A K ltle k f i dom neut).
Proof. exact (@lem6384334 A K (term1088 A K ltle k f i dom neut)). Qed.
Lemma lem6384336 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1219 A K ltle k f i dom neut _79516) = (term1087 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1219 A K ltle k f i dom neut _79516)). Qed.
Lemma lem6384337 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384338 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1220 A K ltle k f i dom neut _79516) = (term1214 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384337) (@lem6384336 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384339 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1220 A K ltle k f i dom neut _79516) = (term1213 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6384338 A K _79516 ltle k f i dom neut) (@lem6384333 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384340 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1221 A K ltle k f i dom neut) = (term1222 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6384339 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6384341 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384342 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1218 A K ltle k f i dom neut) = (term1223 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384341 A K) (@lem6384340 A K ltle k f i dom neut)). Qed.
Lemma lem6384343 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1217 A K ltle k f i dom neut) = (term1223 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384335 A K ltle k f i dom neut) (@lem6384342 A K ltle k f i dom neut)). Qed.
Lemma lem6384344 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384345 {A K : Type'} (_79517 : type850 A K) : (term1224 A K _79517) = (term1225 A K _79517).
Proof. exact (MK_COMB (@lem6384344) (@lem6384212 A K _79517)). Qed.
Lemma lem6384346 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1226 A K _79517 ltle k f i dom neut) = (term1227 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384345 A K _79517) (@lem6384343 A K ltle k f i dom neut)). Qed.
Lemma lem6384347 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1228 A K _79517 ltle k f i dom neut) = (term1226 A K _79517 ltle k f i dom neut).
Proof. exact (@lem17362 (term1010 A K _79517) (term1089 A K ltle k f i dom neut)). Qed.
Lemma lem6384348 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1228 A K _79517 ltle k f i dom neut) = (term1227 A K _79517 ltle k f i dom neut).
Proof. exact (TRANS (@lem6384347 A K _79517 ltle k f i dom neut) (@lem6384346 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6384349 {A K : Type'} (P : type220 A K) : (term1229 A K P) = (term1230 A K P).
Proof. exact (@lem18392 (type850 A K) P). Qed.
Lemma lem6384350 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1231 A K ltle k f i dom neut) = (term1232 A K ltle k f i dom neut).
Proof. exact (@lem6384349 A K (term1091 A K ltle k f i dom neut)). Qed.
Lemma lem6384351 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1233 A K ltle k f i dom neut _79517) = (term1090 A K _79517 ltle k f i dom neut).
Proof. exact (eq_refl (term1233 A K ltle k f i dom neut _79517)). Qed.
Lemma lem6384352 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384353 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1234 A K ltle k f i dom neut _79517) = (term1228 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384352) (@lem6384351 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6384354 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1234 A K ltle k f i dom neut _79517) = (term1227 A K _79517 ltle k f i dom neut).
Proof. exact (TRANS (@lem6384353 A K _79517 ltle k f i dom neut) (@lem6384348 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6384355 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1235 A K ltle k f i dom neut) = (term1236 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6384354 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6384356 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384357 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1232 A K ltle k f i dom neut) = (term1237 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384356 A K) (@lem6384355 A K ltle k f i dom neut)). Qed.
Lemma lem6384358 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1231 A K ltle k f i dom neut) = (term1237 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384350 A K ltle k f i dom neut) (@lem6384357 A K ltle k f i dom neut)). Qed.
Lemma lem6384359 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384360 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1238 A K ltle k f dom neut) = (term1239 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384359) (@lem6384180 A K ltle k f dom neut)). Qed.
Lemma lem6384361 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1240 A K ltle k f i dom neut) = (term1241 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384360 A K ltle k f dom neut) (@lem6384358 A K ltle k f i dom neut)). Qed.
Lemma lem6384362 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1242 A K ltle k f i dom neut) = (term1240 A K ltle k f i dom neut).
Proof. exact (@lem17160 (term1105 A K ltle k f dom neut) (term1092 A K ltle k f i dom neut)). Qed.
Lemma lem6384363 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1242 A K ltle k f i dom neut) = (term1241 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384362 A K ltle k f i dom neut) (@lem6384361 A K ltle k f i dom neut)). Qed.
Lemma lem6384380 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1156 A K ltle k f dom neut j i) = (term1157 A K ltle k f dom neut j i).
Proof. exact (@lem17362 (term1134 A K ltle i k f j dom neut) (j = i)). Qed.
Lemma lem6384381 {K : Type'} (P : K -> Prop) : (term1158 K P) = (term1159 K P).
Proof. exact (@lem18392 K P). Qed.
Lemma lem6384382 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1160 A K ltle k f dom neut i) = (term1161 A K ltle k f dom neut i).
Proof. exact (@lem6384381 K (term1099 A K ltle k f dom neut i)). Qed.
Lemma lem6384383 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1162 A K ltle k f dom neut i j) = (term1098 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1162 A K ltle k f dom neut i j)). Qed.
Lemma lem6384384 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384385 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1163 A K ltle k f dom neut i j) = (term1156 A K ltle k f dom neut j i).
Proof. exact (MK_COMB (@lem6384384) (@lem6384383 A K ltle k f dom neut j i)). Qed.
Lemma lem6384386 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1163 A K ltle k f dom neut i j) = (term1157 A K ltle k f dom neut j i).
Proof. exact (TRANS (@lem6384385 A K ltle k f dom neut j i) (@lem6384380 A K ltle k f dom neut j i)). Qed.
Lemma lem6384387 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1164 A K ltle k f dom neut i) = (term1165 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6384386 A K ltle k f dom neut j i)). Qed.
Lemma lem6384388 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384389 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1161 A K ltle k f dom neut i) = (term1166 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384388 K) (@lem6384387 A K ltle k f dom neut i)). Qed.
Lemma lem6384390 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1160 A K ltle k f dom neut i) = (term1166 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6384382 A K ltle k f dom neut i) (@lem6384389 A K ltle k f dom neut i)). Qed.
Lemma lem6384392 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1167 A K f i dom neut) = (term1167 A K f i dom neut).
Proof. exact (eq_refl (term1167 A K f i dom neut)). Qed.
Lemma lem6384393 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1168 A K ltle k f dom neut i) = (term1169 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384392 A K f i dom neut) (@lem6384390 A K ltle k f dom neut i)). Qed.
Lemma lem6384394 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1170 A K ltle k f dom neut i) = (term1168 A K ltle k f dom neut i).
Proof. exact (@lem17045 (term681 A K f i dom neut) (term1100 A K ltle k f dom neut i)). Qed.
Lemma lem6384395 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1170 A K ltle k f dom neut i) = (term1169 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6384394 A K ltle k f dom neut i) (@lem6384393 A K ltle k f dom neut i)). Qed.
Lemma lem6384397 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term1171 K i k).
Proof. exact (eq_refl (term1171 K i k)). Qed.
Lemma lem6384398 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1172 A K ltle k f dom neut i) = (term1173 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384397 K i k) (@lem6384395 A K ltle k f dom neut i)). Qed.
Lemma lem6384399 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1174 A K ltle k f dom neut i) = (term1172 A K ltle k f dom neut i).
Proof. exact (@lem17045 (@IN K i k) (term1102 A K ltle k f dom neut i)). Qed.
Lemma lem6384400 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1174 A K ltle k f dom neut i) = (term1173 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6384399 A K ltle k f dom neut i) (@lem6384398 A K ltle k f dom neut i)). Qed.
Lemma lem6384401 {K : Type'} (P : K -> Prop) : (term1243 K P) = (term1244 K P).
Proof. exact (@lem18394 K P). Qed.
Lemma lem6384402 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1105 A K ltle k f dom neut) = (term1245 A K ltle k f dom neut).
Proof. exact (@lem6384401 K (term830 A K ltle k f dom neut)). Qed.
Lemma lem6384403 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term833 A K ltle k f dom neut i) = (term834 A K ltle k f dom neut i).
Proof. exact (eq_refl (term833 A K ltle k f dom neut i)). Qed.
Lemma lem6384404 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384405 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1246 A K ltle k f dom neut i) = (term1174 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6384404) (@lem6384403 A K ltle k f dom neut i)). Qed.
Lemma lem6384406 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1246 A K ltle k f dom neut i) = (term1173 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6384405 A K ltle k f dom neut i) (@lem6384400 A K ltle k f dom neut i)). Qed.
Lemma lem6384407 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1247 A K ltle k f dom neut) = (term1248 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6384406 A K ltle k f dom neut i)). Qed.
Lemma lem6384408 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384409 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1245 A K ltle k f dom neut) = (term1249 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384408 K) (@lem6384407 A K ltle k f dom neut)). Qed.
Lemma lem6384410 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1105 A K ltle k f dom neut) = (term1249 A K ltle k f dom neut).
Proof. exact (TRANS (@lem6384402 A K ltle k f dom neut) (@lem6384409 A K ltle k f dom neut)). Qed.
Lemma lem6384417 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f x dom neut) = (term1125 A K k f x dom neut).
Proof. exact (@lem17045 (@IN K x k) (term681 A K f x dom neut)). Qed.
Lemma lem6384422 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384423 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384424 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1142 A K k f x dom neut) = (term1143 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6384423) (@lem6384417 A K k f x dom neut)). Qed.
Lemma lem6384425 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1144 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384424 A K k f x dom neut) (@lem6384422 A K _79517 k f dom neut)). Qed.
Lemma lem6384426 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term1144 A K x _79517 k f dom neut).
Proof. exact (@lem17265 (term706 A K k f x dom neut) (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384427 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term996 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (TRANS (@lem6384426 A K x _79517 k f dom neut) (@lem6384425 A K x _79517 k f dom neut)). Qed.
Lemma lem6384428 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term997 A K _79517 k f dom neut) = (term1146 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384427 A K x _79517 k f dom neut)). Qed.
Lemma lem6384429 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384430 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term998 A K _79517 k f dom neut) = (term1147 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384429 K) (@lem6384428 A K _79517 k f dom neut)). Qed.
Lemma lem6384431 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1000 A K _79517 k f dom) = (term1148 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6384430 A K _79517 k f dom neut)). Qed.
Lemma lem6384432 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6384433 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1001 A K _79517 k f dom) = (term1149 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6384432 A) (@lem6384431 A K _79517 k f dom)). Qed.
Lemma lem6384434 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1003 A K _79517 k f) = (term1150 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6384433 A K _79517 k f dom)). Qed.
Lemma lem6384435 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6384436 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1004 A K _79517 k f) = (term1151 A K _79517 k f).
Proof. exact (MK_COMB (@lem6384435 A) (@lem6384434 A K _79517 k f)). Qed.
Lemma lem6384437 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1006 A K _79517 k) = (term1152 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6384436 A K _79517 k f)). Qed.
Lemma lem6384438 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6384439 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1007 A K _79517 k) = (term1153 A K _79517 k).
Proof. exact (MK_COMB (@lem6384438 A K) (@lem6384437 A K _79517 k)). Qed.
Lemma lem6384440 {A K : Type'} (_79517 : type850 A K) : (term1009 A K _79517) = (term1154 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6384439 A K _79517 k)). Qed.
Lemma lem6384441 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6384442 {A K : Type'} (_79517 : type850 A K) : (term1010 A K _79517) = (term1155 A K _79517).
Proof. exact (MK_COMB (@lem6384441 K) (@lem6384440 A K _79517)). Qed.
Lemma lem6384459 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1156 A K ltle k f dom neut j x) = (term1157 A K ltle k f dom neut j x).
Proof. exact (@lem17362 (term1134 A K ltle x k f j dom neut) (j = x)). Qed.
Lemma lem6384460 {K : Type'} (P : K -> Prop) : (term1158 K P) = (term1159 K P).
Proof. exact (@lem18392 K P). Qed.
Lemma lem6384461 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1160 A K ltle k f dom neut x) = (term1161 A K ltle k f dom neut x).
Proof. exact (@lem6384460 K (term1099 A K ltle k f dom neut x)). Qed.
Lemma lem6384462 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1162 A K ltle k f dom neut x j) = (term1098 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1162 A K ltle k f dom neut x j)). Qed.
Lemma lem6384463 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384464 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1163 A K ltle k f dom neut x j) = (term1156 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6384463) (@lem6384462 A K ltle k f dom neut j x)). Qed.
Lemma lem6384465 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1163 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6384464 A K ltle k f dom neut j x) (@lem6384459 A K ltle k f dom neut j x)). Qed.
Lemma lem6384466 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1164 A K ltle k f dom neut x) = (term1165 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6384465 A K ltle k f dom neut j x)). Qed.
Lemma lem6384467 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384468 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1161 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384467 K) (@lem6384466 A K ltle k f dom neut x)). Qed.
Lemma lem6384469 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1160 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384461 A K ltle k f dom neut x) (@lem6384468 A K ltle k f dom neut x)). Qed.
Lemma lem6384471 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6384472 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1168 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384471 A K f x dom neut) (@lem6384469 A K ltle k f dom neut x)). Qed.
Lemma lem6384473 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1170 A K ltle k f dom neut x) = (term1168 A K ltle k f dom neut x).
Proof. exact (@lem17045 (term681 A K f x dom neut) (term1100 A K ltle k f dom neut x)). Qed.
Lemma lem6384474 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1170 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384473 A K ltle k f dom neut x) (@lem6384472 A K ltle k f dom neut x)). Qed.
Lemma lem6384476 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6384477 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1172 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384476 K x k) (@lem6384474 A K ltle k f dom neut x)). Qed.
Lemma lem6384478 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1174 A K ltle k f dom neut x) = (term1172 A K ltle k f dom neut x).
Proof. exact (@lem17045 (@IN K x k) (term1102 A K ltle k f dom neut x)). Qed.
Lemma lem6384479 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1174 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6384478 A K ltle k f dom neut x) (@lem6384477 A K ltle k f dom neut x)). Qed.
Lemma lem6384489 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f j dom neut) = (term1125 A K k f j dom neut).
Proof. exact (@lem17045 (@IN K j k) (term681 A K f j dom neut)). Qed.
Lemma lem6384491 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1175 A K j _79516 ltle k f dom neut) = (term1175 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1175 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384492 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1176 A K _79516 ltle k f j dom neut) = (term1177 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6384491 A K j _79516 ltle k f dom neut) (@lem6384489 A K k f j dom neut)). Qed.
Lemma lem6384493 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1178 A K _79516 ltle k f j dom neut) = (term1176 A K _79516 ltle k f j dom neut).
Proof. exact (@lem17045 (term892 A K j _79516 ltle k f dom neut) (term706 A K k f j dom neut)). Qed.
Lemma lem6384494 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1178 A K _79516 ltle k f j dom neut) = (term1177 A K _79516 ltle k f j dom neut).
Proof. exact (TRANS (@lem6384493 A K _79516 ltle k f j dom neut) (@lem6384492 A K _79516 ltle k f j dom neut)). Qed.
Lemma lem6384495 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j = (_79516 ltle k f dom neut)) = (j = (_79516 ltle k f dom neut)).
Proof. exact (eq_refl (j = (_79516 ltle k f dom neut))). Qed.
Lemma lem6384496 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384497 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1179 A K _79516 ltle k f j dom neut) = (term1180 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6384496) (@lem6384494 A K _79516 ltle k f j dom neut)). Qed.
Lemma lem6384498 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1181 A K j _79516 ltle k f dom neut) = (term1182 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384497 A K _79516 ltle k f j dom neut) (@lem6384495 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384499 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term1181 A K j _79516 ltle k f dom neut).
Proof. exact (@lem17265 (term896 A K _79516 ltle k f j dom neut) (j = (_79516 ltle k f dom neut))). Qed.
Lemma lem6384500 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term900 A K j _79516 ltle k f dom neut) = (term1182 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6384499 A K j _79516 ltle k f dom neut) (@lem6384498 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384501 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term902 A K _79516 ltle k f dom neut) = (term1183 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6384500 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6384502 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384503 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term904 A K _79516 ltle k f dom neut) = (term1184 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384502 K) (@lem6384501 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384505 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516 ltle k f dom neut) = (term890 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term890 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384506 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term906 A K _79516 ltle k f dom neut) = (term1185 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384505 A K _79516 ltle k f dom neut) (@lem6384503 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384508 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516 ltle f dom neut k) = (term881 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term881 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6384509 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term907 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384508 A K _79516 ltle f dom neut k) (@lem6384506 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384510 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384511 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1187 A K ltle k f dom neut x) = (term1188 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6384510) (@lem6384479 A K ltle k f dom neut x)). Qed.
Lemma lem6384512 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1189 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384511 A K ltle k f dom neut x) (@lem6384509 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384513 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term1189 A K x _79516 ltle k f dom neut).
Proof. exact (@lem17265 (term834 A K ltle k f dom neut x) (term907 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384514 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term908 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6384513 A K x _79516 ltle k f dom neut) (@lem6384512 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6384515 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term909 A K _79516 ltle k f dom neut) = (term1191 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384514 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6384516 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384517 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term910 A K _79516 ltle k f dom neut) = (term1192 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384516 K) (@lem6384515 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384518 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term912 A K _79516 ltle k f dom) = (term1193 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6384517 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6384519 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6384520 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term913 A K _79516 ltle k f dom) = (term1194 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6384519 A) (@lem6384518 A K _79516 ltle k f dom)). Qed.
Lemma lem6384521 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term915 A K _79516 ltle k f) = (term1195 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6384520 A K _79516 ltle k f dom)). Qed.
Lemma lem6384522 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6384523 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term916 A K _79516 ltle k f) = (term1196 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6384522 A) (@lem6384521 A K _79516 ltle k f)). Qed.
Lemma lem6384524 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term918 A K _79516 ltle k) = (term1197 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6384523 A K _79516 ltle k f)). Qed.
Lemma lem6384525 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6384526 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term919 A K _79516 ltle k) = (term1198 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6384525 A K) (@lem6384524 A K _79516 ltle k)). Qed.
Lemma lem6384527 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term921 A K _79516 ltle) = (term1199 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6384526 A K _79516 ltle k)). Qed.
Lemma lem6384528 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6384529 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term922 A K _79516 ltle) = (term1200 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6384528 K) (@lem6384527 A K _79516 ltle)). Qed.
Lemma lem6384530 {A K : Type'} (_79516 : type758 A K) : (term924 A K _79516) = (term1201 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6384529 A K _79516 ltle)). Qed.
Lemma lem6384531 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6384532 {A K : Type'} (_79516 : type758 A K) : (term925 A K _79516) = (term1202 A K _79516).
Proof. exact (MK_COMB (@lem6384531 K) (@lem6384530 A K _79516)). Qed.
Lemma lem6384538 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x dom neut) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term706 A K k f x dom neut)). Qed.
Lemma lem6384539 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term705 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384538 A K k f x dom neut)). Qed.
Lemma lem6384540 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6384541 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term821 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384540 K) (@lem6384539 A K k f dom neut)). Qed.
Lemma lem6384548 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1124 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (@lem17045 (@IN K i k) (term681 A K f i dom neut)). Qed.
Lemma lem6384549 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384550 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1203 A K k f dom neut) = (term1203 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384549) (@lem6384541 A K k f dom neut)). Qed.
Lemma lem6384551 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1204 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6384550 A K k f dom neut) (@lem6384548 A K k f i dom neut)). Qed.
Lemma lem6384552 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term827 A K k f i dom neut) = (term1204 A K k f i dom neut).
Proof. exact (@lem17362 (term821 A K k f dom neut) (term706 A K k f i dom neut)). Qed.
Lemma lem6384553 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term827 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (TRANS (@lem6384552 A K k f i dom neut) (@lem6384551 A K k f i dom neut)). Qed.
Lemma lem6384555 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1250 A K _79517 k f dom neut i) = (term1250 A K _79517 k f dom neut i).
Proof. exact (eq_refl (term1250 A K _79517 k f dom neut i)). Qed.
Lemma lem6384556 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1251 A K _79517 k f i dom neut) = (term1252 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384555 A K _79517 k f dom neut i) (@lem6384553 A K k f i dom neut)). Qed.
Lemma lem6384557 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1253 A K _79517 k f i dom neut) = (term1251 A K _79517 k f i dom neut).
Proof. exact (@lem17362 ((_79517 k f dom neut) = i) (term825 A K k f i dom neut)). Qed.
Lemma lem6384558 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1253 A K _79517 k f i dom neut) = (term1252 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384557 A K _79517 k f i dom neut) (@lem6384556 A K _79517 k f i dom neut)). Qed.
Lemma lem6384559 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384560 {A K : Type'} (_79516 : type758 A K) : (term1210 A K _79516) = (term1211 A K _79516).
Proof. exact (MK_COMB (@lem6384559) (@lem6384532 A K _79516)). Qed.
Lemma lem6384561 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1254 A K _79516 _79517 k f i dom neut) = (term1255 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384560 A K _79516) (@lem6384558 A K _79517 k f i dom neut)). Qed.
Lemma lem6384562 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1256 A K _79516 _79517 k f i dom neut) = (term1254 A K _79516 _79517 k f i dom neut).
Proof. exact (@lem17362 (term925 A K _79516) (term1075 A K _79517 k f i dom neut)). Qed.
Lemma lem6384563 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1256 A K _79516 _79517 k f i dom neut) = (term1255 A K _79516 _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384562 A K _79516 _79517 k f i dom neut) (@lem6384561 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6384564 {A K : Type'} (P : type193 A K) : (term1215 A K P) = (term1216 A K P).
Proof. exact (@lem18392 (type758 A K) P). Qed.
Lemma lem6384565 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1257 A K _79517 k f i dom neut) = (term1258 A K _79517 k f i dom neut).
Proof. exact (@lem6384564 A K (term1077 A K _79517 k f i dom neut)). Qed.
Lemma lem6384566 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1259 A K _79517 k f i dom neut _79516) = (term1076 A K _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1259 A K _79517 k f i dom neut _79516)). Qed.
Lemma lem6384567 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384568 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1260 A K _79517 k f i dom neut _79516) = (term1256 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384567) (@lem6384566 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6384569 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1260 A K _79517 k f i dom neut _79516) = (term1255 A K _79516 _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384568 A K _79516 _79517 k f i dom neut) (@lem6384563 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6384570 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1261 A K _79517 k f i dom neut) = (term1262 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6384569 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6384571 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384572 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1258 A K _79517 k f i dom neut) = (term1263 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384571 A K) (@lem6384570 A K _79517 k f i dom neut)). Qed.
Lemma lem6384573 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1257 A K _79517 k f i dom neut) = (term1263 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384565 A K _79517 k f i dom neut) (@lem6384572 A K _79517 k f i dom neut)). Qed.
Lemma lem6384574 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384575 {A K : Type'} (_79517 : type850 A K) : (term1224 A K _79517) = (term1225 A K _79517).
Proof. exact (MK_COMB (@lem6384574) (@lem6384442 A K _79517)). Qed.
Lemma lem6384576 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1264 A K _79517 k f i dom neut) = (term1265 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384575 A K _79517) (@lem6384573 A K _79517 k f i dom neut)). Qed.
Lemma lem6384577 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1266 A K _79517 k f i dom neut) = (term1264 A K _79517 k f i dom neut).
Proof. exact (@lem17362 (term1010 A K _79517) (term1078 A K _79517 k f i dom neut)). Qed.
Lemma lem6384578 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1266 A K _79517 k f i dom neut) = (term1265 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384577 A K _79517 k f i dom neut) (@lem6384576 A K _79517 k f i dom neut)). Qed.
Lemma lem6384579 {A K : Type'} (P : type220 A K) : (term1229 A K P) = (term1230 A K P).
Proof. exact (@lem18392 (type850 A K) P). Qed.
Lemma lem6384580 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1267 A K k f i dom neut) = (term1268 A K k f i dom neut).
Proof. exact (@lem6384579 A K (term1080 A K k f i dom neut)). Qed.
Lemma lem6384581 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1269 A K k f i dom neut _79517) = (term1079 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1269 A K k f i dom neut _79517)). Qed.
Lemma lem6384582 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6384583 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1270 A K k f i dom neut _79517) = (term1266 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6384582) (@lem6384581 A K _79517 k f i dom neut)). Qed.
Lemma lem6384584 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1270 A K k f i dom neut _79517) = (term1265 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6384583 A K _79517 k f i dom neut) (@lem6384578 A K _79517 k f i dom neut)). Qed.
Lemma lem6384585 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1271 A K k f i dom neut) = (term1272 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6384584 A K _79517 k f i dom neut)). Qed.
Lemma lem6384586 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384587 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1268 A K k f i dom neut) = (term1273 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6384586 A K) (@lem6384585 A K k f i dom neut)). Qed.
Lemma lem6384588 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1267 A K k f i dom neut) = (term1273 A K k f i dom neut).
Proof. exact (TRANS (@lem6384580 A K k f i dom neut) (@lem6384587 A K k f i dom neut)). Qed.
Lemma lem6384589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384590 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1274 A K ltle k f dom neut) = (term1275 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6384589) (@lem6384410 A K ltle k f dom neut)). Qed.
Lemma lem6384591 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1276 A K ltle k f i dom neut) = (term1277 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384590 A K ltle k f dom neut) (@lem6384588 A K k f i dom neut)). Qed.
Lemma lem6384592 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1278 A K ltle k f i dom neut) = (term1276 A K ltle k f i dom neut).
Proof. exact (@lem17160 (term1071 A K ltle k f dom neut) (term1081 A K k f i dom neut)). Qed.
Lemma lem6384593 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1278 A K ltle k f i dom neut) = (term1277 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384592 A K ltle k f i dom neut) (@lem6384591 A K ltle k f i dom neut)). Qed.
Lemma lem6384594 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384595 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1279 A K ltle k f i dom neut) = (term1280 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384594) (@lem6384363 A K ltle k f i dom neut)). Qed.
Lemma lem6384596 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1281 A K ltle k f i dom neut) = (term1282 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384595 A K ltle k f i dom neut) (@lem6384593 A K ltle k f i dom neut)). Qed.
Lemma lem6384597 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1123 A K ltle k f i dom neut) = (term1281 A K ltle k f i dom neut).
Proof. exact (@lem17045 (term1107 A K ltle k f i dom neut) (term1104 A K ltle k f i dom neut)). Qed.
Lemma lem6384598 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1123 A K ltle k f i dom neut) = (term1282 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384597 A K ltle k f i dom neut) (@lem6384596 A K ltle k f i dom neut)). Qed.
Lemma lem6384716 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1283 A P Q) = (term1284 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem6384717 {A K : Type'} (P : type220 A K) (Q : Prop) : (term1285 A K P Q) = (term1286 A K P Q).
Proof. exact (@lem6384716 (type850 A K) P Q). Qed.
Lemma lem6384718 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1287 A K ltle k f i dom neut) = (term1288 A K ltle k f i dom neut).
Proof. exact (@lem6384717 A K (term1289 A K) (term1223 A K ltle k f i dom neut)). Qed.
Lemma lem6384719 {A K : Type'} (_79517 : type850 A K) : (term1290 A K _79517) = (term1155 A K _79517).
Proof. exact (eq_refl (term1290 A K _79517)). Qed.
Lemma lem6384720 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384721 {A K : Type'} (_79517 : type850 A K) : (term1291 A K _79517) = (term1225 A K _79517).
Proof. exact (MK_COMB (@lem6384720) (@lem6384719 A K _79517)). Qed.
Lemma lem6384722 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1223 A K ltle k f i dom neut) = (term1223 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1223 A K ltle k f i dom neut)). Qed.
Lemma lem6384723 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1292 A K _79517 ltle k f i dom neut) = (term1227 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384721 A K _79517) (@lem6384722 A K ltle k f i dom neut)). Qed.
Lemma lem6384724 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1293 A K ltle k f i dom neut) = (term1236 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6384723 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6384725 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384726 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1287 A K ltle k f i dom neut) = (term1237 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384725 A K) (@lem6384724 A K ltle k f i dom neut)). Qed.
Lemma lem6384727 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6384728 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1294 A K ltle k f i dom neut) = (term1295 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384727) (@lem6384726 A K ltle k f i dom neut)). Qed.
Lemma lem6384729 {A K : Type'} (_79517 : type850 A K) : (term1290 A K _79517) = (term1155 A K _79517).
Proof. exact (eq_refl (term1290 A K _79517)). Qed.
Lemma lem6384730 {A K : Type'} : (term1296 A K) = (term1289 A K).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6384729 A K _79517)). Qed.
Lemma lem6384731 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384732 {A K : Type'} : (term1297 A K) = (term1298 A K).
Proof. exact (MK_COMB (@lem6384731 A K) (@lem6384730 A K)). Qed.
Lemma lem6384733 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384734 {A K : Type'} : (term1299 A K) = (term1300 A K).
Proof. exact (MK_COMB (@lem6384733) (@lem6384732 A K)). Qed.
Lemma lem6384735 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1223 A K ltle k f i dom neut) = (term1223 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1223 A K ltle k f i dom neut)). Qed.
Lemma lem6384736 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1288 A K ltle k f i dom neut) = (term1301 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384734 A K) (@lem6384735 A K ltle k f i dom neut)). Qed.
Lemma lem6384737 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1287 A K ltle k f i dom neut) = (term1288 A K ltle k f i dom neut)) = ((term1237 A K ltle k f i dom neut) = (term1301 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6384728 A K ltle k f i dom neut) (@lem6384736 A K ltle k f i dom neut)). Qed.
Lemma lem6384738 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1237 A K ltle k f i dom neut) = (term1301 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6384737 A K ltle k f i dom neut) (@lem6384718 A K ltle k f i dom neut)). Qed.
Lemma lem6384780 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1302 A P Q) = (term1303 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem6384781 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1302 K P Q) = (term1303 K P Q).
Proof. exact (@lem6384780 K P Q). Qed.
Lemma lem6384782 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1304 A K _79517 k f dom neut) = (term1305 A K _79517 k f dom neut).
Proof. exact (@lem6384781 K (term1306 A K k f dom neut) (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384783 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1307 A K k f dom neut x) = (term1125 A K k f x dom neut).
Proof. exact (eq_refl (term1307 A K k f dom neut x)). Qed.
Lemma lem6384784 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384785 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1308 A K k f dom neut x) = (term1143 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6384784) (@lem6384783 A K k f x dom neut)). Qed.
Lemma lem6384786 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384787 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1309 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384785 A K k f x dom neut) (@lem6384786 A K _79517 k f dom neut)). Qed.
Lemma lem6384788 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1310 A K _79517 k f dom neut) = (term1146 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384787 A K x _79517 k f dom neut)). Qed.
Lemma lem6384789 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384790 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1304 A K _79517 k f dom neut) = (term1147 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384789 K) (@lem6384788 A K _79517 k f dom neut)). Qed.
Lemma lem6384791 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6384792 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1311 A K _79517 k f dom neut) = (term1312 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384791) (@lem6384790 A K _79517 k f dom neut)). Qed.
Lemma lem6384793 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1307 A K k f dom neut x) = (term1125 A K k f x dom neut).
Proof. exact (eq_refl (term1307 A K k f dom neut x)). Qed.
Lemma lem6384794 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1313 A K k f dom neut) = (term1306 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6384793 A K k f x dom neut)). Qed.
Lemma lem6384795 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6384796 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1314 A K k f dom neut) = (term1315 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384795 K) (@lem6384794 A K k f dom neut)). Qed.
Lemma lem6384797 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6384798 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1316 A K k f dom neut) = (term1317 A K k f dom neut).
Proof. exact (MK_COMB (@lem6384797) (@lem6384796 A K k f dom neut)). Qed.
Lemma lem6384799 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6384800 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1305 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6384798 A K k f dom neut) (@lem6384799 A K _79517 k f dom neut)). Qed.
Lemma lem6384801 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1304 A K _79517 k f dom neut) = (term1305 A K _79517 k f dom neut)) = ((term1147 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut)).
Proof. exact (MK_COMB (@lem6384792 A K _79517 k f dom neut) (@lem6384800 A K _79517 k f dom neut)). Qed.
Lemma lem6384802 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1147 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut).
Proof. exact (EQ_MP (@lem6384801 A K _79517 k f dom neut) (@lem6384782 A K _79517 k f dom neut)). Qed.
Lemma lem6384851 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1148 A K _79517 k f dom) = (term1319 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6384802 A K _79517 k f dom neut)). Qed.
Lemma lem6384852 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6384853 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1149 A K _79517 k f dom) = (term1320 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6384852 A) (@lem6384851 A K _79517 k f dom)). Qed.
Lemma lem6384902 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1150 A K _79517 k f) = (term1321 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6384853 A K _79517 k f dom)). Qed.
Lemma lem6384903 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6384904 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1151 A K _79517 k f) = (term1322 A K _79517 k f).
Proof. exact (MK_COMB (@lem6384903 A) (@lem6384902 A K _79517 k f)). Qed.
Lemma lem6384909 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1152 A K _79517 k) = (term1323 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6384904 A K _79517 k f)). Qed.
Lemma lem6384910 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6384911 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1153 A K _79517 k) = (term1324 A K _79517 k).
Proof. exact (MK_COMB (@lem6384910 A K) (@lem6384909 A K _79517 k)). Qed.
Lemma lem6384916 {A K : Type'} (_79517 : type850 A K) : (term1154 A K _79517) = (term1325 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6384911 A K _79517 k)). Qed.
Lemma lem6384917 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6384918 {A K : Type'} (_79517 : type850 A K) : (term1155 A K _79517) = (term1326 A K _79517).
Proof. exact (MK_COMB (@lem6384917 K) (@lem6384916 A K _79517)). Qed.
Lemma lem6384923 {A K : Type'} : (term1289 A K) = (term1327 A K).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6384918 A K _79517)). Qed.
Lemma lem6384924 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6384925 {A K : Type'} : (term1298 A K) = (term1328 A K).
Proof. exact (MK_COMB (@lem6384924 A K) (@lem6384923 A K)). Qed.
Lemma lem6384930 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6384931 {A K : Type'} : (term1300 A K) = (term1329 A K).
Proof. exact (MK_COMB (@lem6384930) (@lem6384925 A K)). Qed.
Lemma lem6385021 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1302 A P Q) = (term1303 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem6385022 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1302 K P Q) = (term1303 K P Q).
Proof. exact (@lem6385021 K P Q). Qed.
Lemma lem6385023 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1330 A K _79516 ltle k f dom neut) = (term1331 A K _79516 ltle k f dom neut).
Proof. exact (@lem6385022 K (term1248 A K ltle k f dom neut) (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385024 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1332 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1332 A K ltle k f dom neut x)). Qed.
Lemma lem6385025 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385026 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1333 A K ltle k f dom neut x) = (term1188 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6385025) (@lem6385024 A K ltle k f dom neut x)). Qed.
Lemma lem6385027 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385028 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1334 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385026 A K ltle k f dom neut x) (@lem6385027 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385029 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1335 A K _79516 ltle k f dom neut) = (term1191 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385028 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6385030 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385031 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1330 A K _79516 ltle k f dom neut) = (term1192 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385030 K) (@lem6385029 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385032 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6385033 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1336 A K _79516 ltle k f dom neut) = (term1337 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385032) (@lem6385031 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385034 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1332 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1332 A K ltle k f dom neut x)). Qed.
Lemma lem6385035 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1338 A K ltle k f dom neut) = (term1248 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385034 A K ltle k f dom neut x)). Qed.
Lemma lem6385036 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385037 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1339 A K ltle k f dom neut) = (term1249 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385036 K) (@lem6385035 A K ltle k f dom neut)). Qed.
Lemma lem6385038 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385039 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1340 A K ltle k f dom neut) = (term1341 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385038) (@lem6385037 A K ltle k f dom neut)). Qed.
Lemma lem6385040 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385041 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1331 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385039 A K ltle k f dom neut) (@lem6385040 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385042 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1330 A K _79516 ltle k f dom neut) = (term1331 A K _79516 ltle k f dom neut)) = ((term1192 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6385033 A K _79516 ltle k f dom neut) (@lem6385041 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385043 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1192 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6385042 A K _79516 ltle k f dom neut) (@lem6385023 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385188 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1193 A K _79516 ltle k f dom) = (term1343 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6385043 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385189 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6385190 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1194 A K _79516 ltle k f dom) = (term1344 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6385189 A) (@lem6385188 A K _79516 ltle k f dom)). Qed.
Lemma lem6385239 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1195 A K _79516 ltle k f) = (term1345 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6385190 A K _79516 ltle k f dom)). Qed.
Lemma lem6385240 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6385241 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1196 A K _79516 ltle k f) = (term1346 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6385240 A) (@lem6385239 A K _79516 ltle k f)). Qed.
Lemma lem6385246 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1197 A K _79516 ltle k) = (term1347 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6385241 A K _79516 ltle k f)). Qed.
Lemma lem6385247 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6385248 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1198 A K _79516 ltle k) = (term1348 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6385247 A K) (@lem6385246 A K _79516 ltle k)). Qed.
Lemma lem6385253 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1199 A K _79516 ltle) = (term1349 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6385248 A K _79516 ltle k)). Qed.
Lemma lem6385254 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6385255 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1200 A K _79516 ltle) = (term1350 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6385254 K) (@lem6385253 A K _79516 ltle)). Qed.
Lemma lem6385260 {A K : Type'} (_79516 : type758 A K) : (term1201 A K _79516) = (term1351 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6385255 A K _79516 ltle)). Qed.
Lemma lem6385261 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6385262 {A K : Type'} (_79516 : type758 A K) : (term1202 A K _79516) = (term1352 A K _79516).
Proof. exact (MK_COMB (@lem6385261 K) (@lem6385260 A K _79516)). Qed.
Lemma lem6385267 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6385268 {A K : Type'} (_79516 : type758 A K) : (term1211 A K _79516) = (term1353 A K _79516).
Proof. exact (MK_COMB (@lem6385267) (@lem6385262 A K _79516)). Qed.
Lemma lem6385317 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1208 A K _79516 ltle k f i dom neut) = (term1208 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1208 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6385318 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1213 A K _79516 ltle k f i dom neut) = (term1354 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6385268 A K _79516) (@lem6385317 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6385319 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1222 A K ltle k f i dom neut) = (term1355 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6385318 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6385320 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6385321 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1223 A K ltle k f i dom neut) = (term1356 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6385320 A K) (@lem6385319 A K ltle k f i dom neut)). Qed.
Lemma lem6385370 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1301 A K ltle k f i dom neut) = (term1357 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6384931 A K) (@lem6385321 A K ltle k f i dom neut)). Qed.
Lemma lem6385371 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1237 A K ltle k f i dom neut) = (term1357 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384738 A K ltle k f i dom neut) (@lem6385370 A K ltle k f i dom neut)). Qed.
Lemma lem6385372 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1239 A K ltle k f dom neut) = (term1239 A K ltle k f dom neut).
Proof. exact (eq_refl (term1239 A K ltle k f dom neut)). Qed.
Lemma lem6385373 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1241 A K ltle k f i dom neut) = (term1358 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6385372 A K ltle k f dom neut) (@lem6385371 A K ltle k f i dom neut)). Qed.
Lemma lem6385374 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385375 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1280 A K ltle k f i dom neut) = (term1359 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6385374) (@lem6385373 A K ltle k f i dom neut)). Qed.
Lemma lem6385557 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1302 A P Q) = (term1303 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem6385558 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1302 K P Q) = (term1303 K P Q).
Proof. exact (@lem6385557 K P Q). Qed.
Lemma lem6385559 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1304 A K _79517 k f dom neut) = (term1305 A K _79517 k f dom neut).
Proof. exact (@lem6385558 K (term1306 A K k f dom neut) (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6385560 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1307 A K k f dom neut x) = (term1125 A K k f x dom neut).
Proof. exact (eq_refl (term1307 A K k f dom neut x)). Qed.
Lemma lem6385561 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385562 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1308 A K k f dom neut x) = (term1143 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6385561) (@lem6385560 A K k f x dom neut)). Qed.
Lemma lem6385563 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6385564 {A K : Type'} (x : K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1309 A K x _79517 k f dom neut) = (term1145 A K x _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6385562 A K k f x dom neut) (@lem6385563 A K _79517 k f dom neut)). Qed.
Lemma lem6385565 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1310 A K _79517 k f dom neut) = (term1146 A K _79517 k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385564 A K x _79517 k f dom neut)). Qed.
Lemma lem6385566 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385567 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1304 A K _79517 k f dom neut) = (term1147 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6385566 K) (@lem6385565 A K _79517 k f dom neut)). Qed.
Lemma lem6385568 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6385569 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1311 A K _79517 k f dom neut) = (term1312 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6385568) (@lem6385567 A K _79517 k f dom neut)). Qed.
Lemma lem6385570 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1307 A K k f dom neut x) = (term1125 A K k f x dom neut).
Proof. exact (eq_refl (term1307 A K k f dom neut x)). Qed.
Lemma lem6385571 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1313 A K k f dom neut) = (term1306 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385570 A K k f x dom neut)). Qed.
Lemma lem6385572 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385573 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1314 A K k f dom neut) = (term1315 A K k f dom neut).
Proof. exact (MK_COMB (@lem6385572 K) (@lem6385571 A K k f dom neut)). Qed.
Lemma lem6385574 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385575 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1316 A K k f dom neut) = (term1317 A K k f dom neut).
Proof. exact (MK_COMB (@lem6385574) (@lem6385573 A K k f dom neut)). Qed.
Lemma lem6385576 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term995 A K _79517 k f dom neut).
Proof. exact (eq_refl (term995 A K _79517 k f dom neut)). Qed.
Lemma lem6385577 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1305 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6385575 A K k f dom neut) (@lem6385576 A K _79517 k f dom neut)). Qed.
Lemma lem6385578 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1304 A K _79517 k f dom neut) = (term1305 A K _79517 k f dom neut)) = ((term1147 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut)).
Proof. exact (MK_COMB (@lem6385569 A K _79517 k f dom neut) (@lem6385577 A K _79517 k f dom neut)). Qed.
Lemma lem6385579 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1147 A K _79517 k f dom neut) = (term1318 A K _79517 k f dom neut).
Proof. exact (EQ_MP (@lem6385578 A K _79517 k f dom neut) (@lem6385559 A K _79517 k f dom neut)). Qed.
Lemma lem6385628 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1148 A K _79517 k f dom) = (term1319 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6385579 A K _79517 k f dom neut)). Qed.
Lemma lem6385629 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6385630 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1149 A K _79517 k f dom) = (term1320 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6385629 A) (@lem6385628 A K _79517 k f dom)). Qed.
Lemma lem6385679 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1150 A K _79517 k f) = (term1321 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6385630 A K _79517 k f dom)). Qed.
Lemma lem6385680 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6385681 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1151 A K _79517 k f) = (term1322 A K _79517 k f).
Proof. exact (MK_COMB (@lem6385680 A) (@lem6385679 A K _79517 k f)). Qed.
Lemma lem6385686 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1152 A K _79517 k) = (term1323 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6385681 A K _79517 k f)). Qed.
Lemma lem6385687 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6385688 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1153 A K _79517 k) = (term1324 A K _79517 k).
Proof. exact (MK_COMB (@lem6385687 A K) (@lem6385686 A K _79517 k)). Qed.
Lemma lem6385693 {A K : Type'} (_79517 : type850 A K) : (term1154 A K _79517) = (term1325 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6385688 A K _79517 k)). Qed.
Lemma lem6385694 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6385695 {A K : Type'} (_79517 : type850 A K) : (term1155 A K _79517) = (term1326 A K _79517).
Proof. exact (MK_COMB (@lem6385694 K) (@lem6385693 A K _79517)). Qed.
Lemma lem6385700 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6385701 {A K : Type'} (_79517 : type850 A K) : (term1225 A K _79517) = (term1360 A K _79517).
Proof. exact (MK_COMB (@lem6385700) (@lem6385695 A K _79517)). Qed.
Lemma lem6385723 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1283 A P Q) = (term1284 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem6385724 {A K : Type'} (P : type193 A K) (Q : Prop) : (term1361 A K P Q) = (term1362 A K P Q).
Proof. exact (@lem6385723 (type758 A K) P Q). Qed.
Lemma lem6385725 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1363 A K _79517 k f i dom neut) = (term1364 A K _79517 k f i dom neut).
Proof. exact (@lem6385724 A K (term1365 A K) (term1252 A K _79517 k f i dom neut)). Qed.
Lemma lem6385726 {A K : Type'} (_79516 : type758 A K) : (term1366 A K _79516) = (term1202 A K _79516).
Proof. exact (eq_refl (term1366 A K _79516)). Qed.
Lemma lem6385727 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6385728 {A K : Type'} (_79516 : type758 A K) : (term1367 A K _79516) = (term1211 A K _79516).
Proof. exact (MK_COMB (@lem6385727) (@lem6385726 A K _79516)). Qed.
Lemma lem6385729 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1252 A K _79517 k f i dom neut) = (term1252 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1252 A K _79517 k f i dom neut)). Qed.
Lemma lem6385730 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1368 A K _79516 _79517 k f i dom neut) = (term1255 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6385728 A K _79516) (@lem6385729 A K _79517 k f i dom neut)). Qed.
Lemma lem6385731 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1369 A K _79517 k f i dom neut) = (term1262 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6385730 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6385732 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6385733 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1363 A K _79517 k f i dom neut) = (term1263 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6385732 A K) (@lem6385731 A K _79517 k f i dom neut)). Qed.
Lemma lem6385734 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6385735 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1370 A K _79517 k f i dom neut) = (term1371 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6385734) (@lem6385733 A K _79517 k f i dom neut)). Qed.
Lemma lem6385736 {A K : Type'} (_79516 : type758 A K) : (term1366 A K _79516) = (term1202 A K _79516).
Proof. exact (eq_refl (term1366 A K _79516)). Qed.
Lemma lem6385737 {A K : Type'} : (term1372 A K) = (term1365 A K).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6385736 A K _79516)). Qed.
Lemma lem6385738 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6385739 {A K : Type'} : (term1373 A K) = (term1374 A K).
Proof. exact (MK_COMB (@lem6385738 A K) (@lem6385737 A K)). Qed.
Lemma lem6385740 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6385741 {A K : Type'} : (term1375 A K) = (term1376 A K).
Proof. exact (MK_COMB (@lem6385740) (@lem6385739 A K)). Qed.
Lemma lem6385742 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1252 A K _79517 k f i dom neut) = (term1252 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1252 A K _79517 k f i dom neut)). Qed.
Lemma lem6385743 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1364 A K _79517 k f i dom neut) = (term1377 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6385741 A K) (@lem6385742 A K _79517 k f i dom neut)). Qed.
Lemma lem6385744 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1363 A K _79517 k f i dom neut) = (term1364 A K _79517 k f i dom neut)) = ((term1263 A K _79517 k f i dom neut) = (term1377 A K _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6385735 A K _79517 k f i dom neut) (@lem6385743 A K _79517 k f i dom neut)). Qed.
Lemma lem6385745 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1263 A K _79517 k f i dom neut) = (term1377 A K _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6385744 A K _79517 k f i dom neut) (@lem6385725 A K _79517 k f i dom neut)). Qed.
Lemma lem6385791 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1302 A P Q) = (term1303 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem6385792 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1302 K P Q) = (term1303 K P Q).
Proof. exact (@lem6385791 K P Q). Qed.
Lemma lem6385793 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1330 A K _79516 ltle k f dom neut) = (term1331 A K _79516 ltle k f dom neut).
Proof. exact (@lem6385792 K (term1248 A K ltle k f dom neut) (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385794 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1332 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1332 A K ltle k f dom neut x)). Qed.
Lemma lem6385795 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385796 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1333 A K ltle k f dom neut x) = (term1188 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6385795) (@lem6385794 A K ltle k f dom neut x)). Qed.
Lemma lem6385797 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385798 {A K : Type'} (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1334 A K x _79516 ltle k f dom neut) = (term1190 A K x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385796 A K ltle k f dom neut x) (@lem6385797 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385799 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1335 A K _79516 ltle k f dom neut) = (term1191 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385798 A K x _79516 ltle k f dom neut)). Qed.
Lemma lem6385800 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385801 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1330 A K _79516 ltle k f dom neut) = (term1192 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385800 K) (@lem6385799 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385802 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6385803 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1336 A K _79516 ltle k f dom neut) = (term1337 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385802) (@lem6385801 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385804 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1332 A K ltle k f dom neut x) = (term1173 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1332 A K ltle k f dom neut x)). Qed.
Lemma lem6385805 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1338 A K ltle k f dom neut) = (term1248 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6385804 A K ltle k f dom neut x)). Qed.
Lemma lem6385806 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6385807 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1339 A K ltle k f dom neut) = (term1249 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385806 K) (@lem6385805 A K ltle k f dom neut)). Qed.
Lemma lem6385808 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6385809 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1340 A K ltle k f dom neut) = (term1341 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385808) (@lem6385807 A K ltle k f dom neut)). Qed.
Lemma lem6385810 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385811 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1331 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6385809 A K ltle k f dom neut) (@lem6385810 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385812 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1330 A K _79516 ltle k f dom neut) = (term1331 A K _79516 ltle k f dom neut)) = ((term1192 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6385803 A K _79516 ltle k f dom neut) (@lem6385811 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385813 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1192 A K _79516 ltle k f dom neut) = (term1342 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6385812 A K _79516 ltle k f dom neut) (@lem6385793 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385958 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1193 A K _79516 ltle k f dom) = (term1343 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6385813 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6385959 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6385960 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1194 A K _79516 ltle k f dom) = (term1344 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6385959 A) (@lem6385958 A K _79516 ltle k f dom)). Qed.
Lemma lem6386009 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1195 A K _79516 ltle k f) = (term1345 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6385960 A K _79516 ltle k f dom)). Qed.
Lemma lem6386010 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386011 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1196 A K _79516 ltle k f) = (term1346 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386010 A) (@lem6386009 A K _79516 ltle k f)). Qed.
Lemma lem6386016 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1197 A K _79516 ltle k) = (term1347 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6386011 A K _79516 ltle k f)). Qed.
Lemma lem6386017 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6386018 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1198 A K _79516 ltle k) = (term1348 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386017 A K) (@lem6386016 A K _79516 ltle k)). Qed.
Lemma lem6386023 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1199 A K _79516 ltle) = (term1349 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6386018 A K _79516 ltle k)). Qed.
Lemma lem6386024 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6386025 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1200 A K _79516 ltle) = (term1350 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386024 K) (@lem6386023 A K _79516 ltle)). Qed.
Lemma lem6386030 {A K : Type'} (_79516 : type758 A K) : (term1201 A K _79516) = (term1351 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6386025 A K _79516 ltle)). Qed.
Lemma lem6386031 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6386032 {A K : Type'} (_79516 : type758 A K) : (term1202 A K _79516) = (term1352 A K _79516).
Proof. exact (MK_COMB (@lem6386031 K) (@lem6386030 A K _79516)). Qed.
Lemma lem6386037 {A K : Type'} : (term1365 A K) = (term1378 A K).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386032 A K _79516)). Qed.
Lemma lem6386038 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386039 {A K : Type'} : (term1374 A K) = (term1379 A K).
Proof. exact (MK_COMB (@lem6386038 A K) (@lem6386037 A K)). Qed.
Lemma lem6386044 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386045 {A K : Type'} : (term1376 A K) = (term1380 A K).
Proof. exact (MK_COMB (@lem6386044) (@lem6386039 A K)). Qed.
Lemma lem6386094 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1252 A K _79517 k f i dom neut) = (term1252 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1252 A K _79517 k f i dom neut)). Qed.
Lemma lem6386095 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1377 A K _79517 k f i dom neut) = (term1381 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6386045 A K) (@lem6386094 A K _79517 k f i dom neut)). Qed.
Lemma lem6386096 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1263 A K _79517 k f i dom neut) = (term1381 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6385745 A K _79517 k f i dom neut) (@lem6386095 A K _79517 k f i dom neut)). Qed.
Lemma lem6386097 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1265 A K _79517 k f i dom neut) = (term1382 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6385701 A K _79517) (@lem6386096 A K _79517 k f i dom neut)). Qed.
Lemma lem6386098 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1272 A K k f i dom neut) = (term1383 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386097 A K _79517 k f i dom neut)). Qed.
Lemma lem6386099 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386100 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1273 A K k f i dom neut) = (term1384 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6386099 A K) (@lem6386098 A K k f i dom neut)). Qed.
Lemma lem6386149 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1275 A K ltle k f dom neut) = (term1275 A K ltle k f dom neut).
Proof. exact (eq_refl (term1275 A K ltle k f dom neut)). Qed.
Lemma lem6386150 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1277 A K ltle k f i dom neut) = (term1385 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386149 A K ltle k f dom neut) (@lem6386100 A K k f i dom neut)). Qed.
Lemma lem6386151 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1282 A K ltle k f i dom neut) = (term1386 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6385375 A K ltle k f i dom neut) (@lem6386150 A K ltle k f i dom neut)). Qed.
Lemma lem6386153 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386154 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386153 K P Q). Qed.
Lemma lem6386155 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1389 A K ltle k f dom neut x) = (term1390 A K ltle k f dom neut x).
Proof. exact (@lem6386154 K (term1391 A K f x dom neut) (term1165 A K ltle k f dom neut x)). Qed.
Lemma lem6386156 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1392 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut x j)). Qed.
Lemma lem6386157 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1393 A K ltle k f dom neut x) = (term1165 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386156 A K ltle k f dom neut j x)). Qed.
Lemma lem6386158 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386159 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1394 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386158 K) (@lem6386157 A K ltle k f dom neut x)). Qed.
Lemma lem6386160 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6386161 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1389 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386160 A K f x dom neut) (@lem6386159 A K ltle k f dom neut x)). Qed.
Lemma lem6386162 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386163 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1395 A K ltle k f dom neut x) = (term1396 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386162) (@lem6386161 A K ltle k f dom neut x)). Qed.
Lemma lem6386164 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1392 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut x j)). Qed.
Lemma lem6386165 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6386166 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1397 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386165 A K f x dom neut) (@lem6386164 A K ltle k f dom neut j x)). Qed.
Lemma lem6386167 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1399 A K ltle k f dom neut x) = (term1400 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386166 A K ltle k f dom neut j x)). Qed.
Lemma lem6386168 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386169 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1390 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386168 K) (@lem6386167 A K ltle k f dom neut x)). Qed.
Lemma lem6386170 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((term1389 A K ltle k f dom neut x) = (term1390 A K ltle k f dom neut x)) = ((term1169 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x)).
Proof. exact (MK_COMB (@lem6386163 A K ltle k f dom neut x) (@lem6386169 A K ltle k f dom neut x)). Qed.
Lemma lem6386171 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1169 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (EQ_MP (@lem6386170 A K ltle k f dom neut x) (@lem6386155 A K ltle k f dom neut x)). Qed.
Lemma lem6386172 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386173 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1173 A K ltle k f dom neut x) = (term1402 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386172 K x k) (@lem6386171 A K ltle k f dom neut x)). Qed.
Lemma lem6386175 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386176 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386175 K P Q). Qed.
Lemma lem6386177 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1403 A K ltle k f dom neut x) = (term1404 A K ltle k f dom neut x).
Proof. exact (@lem6386176 K (term1405 K x k) (term1400 A K ltle k f dom neut x)). Qed.
Lemma lem6386178 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1406 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut x j)). Qed.
Lemma lem6386179 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1407 A K ltle k f dom neut x) = (term1400 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386178 A K ltle k f dom neut j x)). Qed.
Lemma lem6386180 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386181 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1408 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386180 K) (@lem6386179 A K ltle k f dom neut x)). Qed.
Lemma lem6386182 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386183 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1403 A K ltle k f dom neut x) = (term1402 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386182 K x k) (@lem6386181 A K ltle k f dom neut x)). Qed.
Lemma lem6386184 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386185 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1409 A K ltle k f dom neut x) = (term1410 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386184) (@lem6386183 A K ltle k f dom neut x)). Qed.
Lemma lem6386186 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1406 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut x j)). Qed.
Lemma lem6386187 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386188 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1411 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386187 K x k) (@lem6386186 A K ltle k f dom neut j x)). Qed.
Lemma lem6386189 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1413 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386188 A K ltle k f dom neut j x)). Qed.
Lemma lem6386190 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386191 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1404 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386190 K) (@lem6386189 A K ltle k f dom neut x)). Qed.
Lemma lem6386192 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((term1403 A K ltle k f dom neut x) = (term1404 A K ltle k f dom neut x)) = ((term1402 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x)).
Proof. exact (MK_COMB (@lem6386185 A K ltle k f dom neut x) (@lem6386191 A K ltle k f dom neut x)). Qed.
Lemma lem6386193 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1402 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (EQ_MP (@lem6386192 A K ltle k f dom neut x) (@lem6386177 A K ltle k f dom neut x)). Qed.
Lemma lem6386194 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1173 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6386173 A K ltle k f dom neut x) (@lem6386193 A K ltle k f dom neut x)). Qed.
Lemma lem6386195 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1248 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386194 A K ltle k f dom neut x)). Qed.
Lemma lem6386196 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386197 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386196 K) (@lem6386195 A K ltle k f dom neut)). Qed.
Lemma lem6386199 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386200 {K : Type'} (P : type1402 K) : (term1418 K P) = (term1419 K P).
Proof. exact (@lem6386199 K K P). Qed.
Lemma lem6386201 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut).
Proof. exact (@lem6386200 K (term1422 A K ltle k f dom neut)). Qed.
Lemma lem6386202 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1423 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut x)). Qed.
Lemma lem6386203 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386204 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (j : K) : (term1424 A K ltle k f dom neut x j) = (term1425 A K ltle k f dom neut x j).
Proof. exact (MK_COMB (@lem6386202 A K ltle k f dom neut x) (@lem6386203 K j)). Qed.
Lemma lem6386205 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1425 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1425 A K ltle k f dom neut x j)). Qed.
Lemma lem6386206 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1424 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6386204 A K ltle k f dom neut x j) (@lem6386205 A K ltle k f dom neut j x)). Qed.
Lemma lem6386207 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1426 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386206 A K ltle k f dom neut j x)). Qed.
Lemma lem6386208 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386209 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1427 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386208 K) (@lem6386207 A K ltle k f dom neut x)). Qed.
Lemma lem6386210 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1428 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386209 A K ltle k f dom neut x)). Qed.
Lemma lem6386211 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386212 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386211 K) (@lem6386210 A K ltle k f dom neut)). Qed.
Lemma lem6386213 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386214 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1429 A K ltle k f dom neut) = (term1430 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386213) (@lem6386212 A K ltle k f dom neut)). Qed.
Lemma lem6386215 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1423 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut x)). Qed.
Lemma lem6386216 {K : Type'} (j : K -> K) (x : K) : (j x) = (j x).
Proof. exact (eq_refl (j x)). Qed.
Lemma lem6386217 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1431 A K ltle k f dom neut j x) = (term1432 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386215 A K ltle k f dom neut x) (@lem6386216 K j x)). Qed.
Lemma lem6386218 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1432 A K ltle k f dom neut j x) = (term1433 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1432 A K ltle k f dom neut j x)). Qed.
Lemma lem6386219 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1431 A K ltle k f dom neut j x) = (term1433 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6386217 A K ltle k f dom neut j x) (@lem6386218 A K ltle k f dom neut j x)). Qed.
Lemma lem6386220 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1434 A K ltle k f dom neut j) = (term1435 A K ltle k f dom neut j).
Proof. exact (fun_ext (fun x : K => @lem6386219 A K ltle k f dom neut j x)). Qed.
Lemma lem6386221 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386222 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1436 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386221 K) (@lem6386220 A K ltle k f dom neut j)). Qed.
Lemma lem6386223 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1438 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386222 A K ltle k f dom neut j)). Qed.
Lemma lem6386224 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386225 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1421 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386224 K) (@lem6386223 A K ltle k f dom neut)). Qed.
Lemma lem6386226 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut)) = ((term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6386214 A K ltle k f dom neut) (@lem6386225 A K ltle k f dom neut)). Qed.
Lemma lem6386227 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (EQ_MP (@lem6386226 A K ltle k f dom neut) (@lem6386201 A K ltle k f dom neut)). Qed.
Lemma lem6386228 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (TRANS (@lem6386197 A K ltle k f dom neut) (@lem6386227 A K ltle k f dom neut)). Qed.
Lemma lem6386229 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386230 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1341 A K ltle k f dom neut) = (term1441 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386229) (@lem6386228 A K ltle k f dom neut)). Qed.
Lemma lem6386231 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386232 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1342 A K _79516 ltle k f dom neut) = (term1442 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386230 A K ltle k f dom neut) (@lem6386231 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386234 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6386235 {K : Type'} (P : type488 K) (Q : Prop) : (term1445 K P Q) = (term1446 K P Q).
Proof. exact (@lem6386234 (K -> K) P Q). Qed.
Lemma lem6386236 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1447 A K _79516 ltle k f dom neut) = (term1448 A K _79516 ltle k f dom neut).
Proof. exact (@lem6386235 K (term1439 A K ltle k f dom neut) (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386237 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6386238 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1450 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386237 A K ltle k f dom neut j)). Qed.
Lemma lem6386239 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386240 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1451 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386239 K) (@lem6386238 A K ltle k f dom neut)). Qed.
Lemma lem6386241 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386242 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1452 A K ltle k f dom neut) = (term1441 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386241) (@lem6386240 A K ltle k f dom neut)). Qed.
Lemma lem6386243 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386244 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1447 A K _79516 ltle k f dom neut) = (term1442 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386242 A K ltle k f dom neut) (@lem6386243 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386245 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386246 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1453 A K _79516 ltle k f dom neut) = (term1454 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386245) (@lem6386244 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386247 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6386248 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386249 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1455 A K ltle k f dom neut j) = (term1456 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386248) (@lem6386247 A K ltle k f dom neut j)). Qed.
Lemma lem6386250 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386251 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1457 A K j _79516 ltle k f dom neut) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386249 A K ltle k f dom neut j) (@lem6386250 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386252 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1459 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386251 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386253 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386254 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1448 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386253 K) (@lem6386252 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386255 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1447 A K _79516 ltle k f dom neut) = (term1448 A K _79516 ltle k f dom neut)) = ((term1442 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6386246 A K _79516 ltle k f dom neut) (@lem6386254 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386256 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1442 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6386255 A K _79516 ltle k f dom neut) (@lem6386236 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386257 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1342 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386232 A K _79516 ltle k f dom neut) (@lem6386256 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386258 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1343 A K _79516 ltle k f dom) = (term1462 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386257 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386259 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386260 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1344 A K _79516 ltle k f dom) = (term1463 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386259 A) (@lem6386258 A K _79516 ltle k f dom)). Qed.
Lemma lem6386262 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386263 {A K : Type'} (P : type1373 A K) : (term1464 A K P) = (term1465 A K P).
Proof. exact (@lem6386262 A (K -> K) P). Qed.
Lemma lem6386264 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1466 A K _79516 ltle k f dom) = (term1467 A K _79516 ltle k f dom).
Proof. exact (@lem6386263 A K (term1468 A K _79516 ltle k f dom)). Qed.
Lemma lem6386265 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1469 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1469 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386266 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386267 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1470 A K _79516 ltle k f dom neut j) = (term1471 A K _79516 ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386265 A K _79516 ltle k f dom neut) (@lem6386266 K j)). Qed.
Lemma lem6386268 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1471 A K _79516 ltle k f dom neut j) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1471 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6386269 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1470 A K _79516 ltle k f dom neut j) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386267 A K _79516 ltle k f dom neut j) (@lem6386268 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386270 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1472 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386269 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386271 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386272 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1473 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386271 K) (@lem6386270 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386273 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1474 A K _79516 ltle k f dom) = (term1462 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386272 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386274 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386275 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1466 A K _79516 ltle k f dom) = (term1463 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386274 A) (@lem6386273 A K _79516 ltle k f dom)). Qed.
Lemma lem6386276 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386277 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1475 A K _79516 ltle k f dom) = (term1476 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386276) (@lem6386275 A K _79516 ltle k f dom)). Qed.
Lemma lem6386278 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1469 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1469 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386279 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6386280 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (j : type1411 A K) (neut : A) : (term1477 A K _79516 ltle k f dom j neut) = (term1478 A K _79516 ltle k f dom j neut).
Proof. exact (MK_COMB (@lem6386278 A K _79516 ltle k f dom neut) (@lem6386279 A K j neut)). Qed.
Lemma lem6386281 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1478 A K _79516 ltle k f dom j neut) = (term1479 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1478 A K _79516 ltle k f dom j neut)). Qed.
Lemma lem6386282 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1477 A K _79516 ltle k f dom j neut) = (term1479 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386280 A K _79516 ltle k f dom j neut) (@lem6386281 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386283 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1480 A K _79516 ltle k f dom j) = (term1481 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386282 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386284 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386285 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1482 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386284 A) (@lem6386283 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386286 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1484 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6386285 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386287 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6386288 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1467 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386287 A K) (@lem6386286 A K _79516 ltle k f dom)). Qed.
Lemma lem6386289 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : ((term1466 A K _79516 ltle k f dom) = (term1467 A K _79516 ltle k f dom)) = ((term1463 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom)).
Proof. exact (MK_COMB (@lem6386277 A K _79516 ltle k f dom) (@lem6386288 A K _79516 ltle k f dom)). Qed.
Lemma lem6386290 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1463 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (EQ_MP (@lem6386289 A K _79516 ltle k f dom) (@lem6386264 A K _79516 ltle k f dom)). Qed.
Lemma lem6386291 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1344 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386260 A K _79516 ltle k f dom) (@lem6386290 A K _79516 ltle k f dom)). Qed.
Lemma lem6386292 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1345 A K _79516 ltle k f) = (term1487 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386291 A K _79516 ltle k f dom)). Qed.
Lemma lem6386293 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386294 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1346 A K _79516 ltle k f) = (term1488 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386293 A) (@lem6386292 A K _79516 ltle k f)). Qed.
Lemma lem6386296 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386297 {A K : Type'} (P : type612 A K) : (term1489 A K P) = (term1490 A K P).
Proof. exact (@lem6386296 (A -> Prop) (type1411 A K) P). Qed.
Lemma lem6386298 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1491 A K _79516 ltle k f) = (term1492 A K _79516 ltle k f).
Proof. exact (@lem6386297 A K (term1493 A K _79516 ltle k f)). Qed.
Lemma lem6386299 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1494 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term1494 A K _79516 ltle k f dom)). Qed.
Lemma lem6386300 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386301 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (j : type1411 A K) : (term1495 A K _79516 ltle k f dom j) = (term1496 A K _79516 ltle k f dom j).
Proof. exact (MK_COMB (@lem6386299 A K _79516 ltle k f dom) (@lem6386300 A K j)). Qed.
Lemma lem6386302 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1496 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (eq_refl (term1496 A K _79516 ltle k f dom j)). Qed.
Lemma lem6386303 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1495 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386301 A K _79516 ltle k f dom j) (@lem6386302 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386304 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1497 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6386303 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386305 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6386306 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1498 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386305 A K) (@lem6386304 A K _79516 ltle k f dom)). Qed.
Lemma lem6386307 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1499 A K _79516 ltle k f) = (term1487 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386306 A K _79516 ltle k f dom)). Qed.
Lemma lem6386308 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386309 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1491 A K _79516 ltle k f) = (term1488 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386308 A) (@lem6386307 A K _79516 ltle k f)). Qed.
Lemma lem6386310 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386311 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1500 A K _79516 ltle k f) = (term1501 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386310) (@lem6386309 A K _79516 ltle k f)). Qed.
Lemma lem6386312 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1494 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term1494 A K _79516 ltle k f dom)). Qed.
Lemma lem6386313 {A K : Type'} (j : type668 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6386314 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : type668 A K) (dom : A -> Prop) : (term1502 A K _79516 ltle k f j dom) = (term1503 A K _79516 ltle k f j dom).
Proof. exact (MK_COMB (@lem6386312 A K _79516 ltle k f dom) (@lem6386313 A K j dom)). Qed.
Lemma lem6386315 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1503 A K _79516 ltle k f j dom) = (term1504 A K j _79516 ltle k f dom).
Proof. exact (eq_refl (term1503 A K _79516 ltle k f j dom)). Qed.
Lemma lem6386316 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1502 A K _79516 ltle k f j dom) = (term1504 A K j _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386314 A K _79516 ltle k f j dom) (@lem6386315 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386317 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1505 A K _79516 ltle k f j) = (term1506 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386316 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386318 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386319 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1507 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386318 A) (@lem6386317 A K j _79516 ltle k f)). Qed.
Lemma lem6386320 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1509 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (fun_ext (fun j : type668 A K => @lem6386319 A K j _79516 ltle k f)). Qed.
Lemma lem6386321 {A K : Type'} : (@ex ((A -> Prop) -> A -> K -> K)) = (@ex ((A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386322 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1492 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386321 A K) (@lem6386320 A K _79516 ltle k f)). Qed.
Lemma lem6386323 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1491 A K _79516 ltle k f) = (term1492 A K _79516 ltle k f)) = ((term1488 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f)).
Proof. exact (MK_COMB (@lem6386311 A K _79516 ltle k f) (@lem6386322 A K _79516 ltle k f)). Qed.
Lemma lem6386324 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1488 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (EQ_MP (@lem6386323 A K _79516 ltle k f) (@lem6386298 A K _79516 ltle k f)). Qed.
Lemma lem6386325 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1346 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6386294 A K _79516 ltle k f) (@lem6386324 A K _79516 ltle k f)). Qed.
Lemma lem6386326 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1347 A K _79516 ltle k) = (term1512 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6386325 A K _79516 ltle k f)). Qed.
Lemma lem6386327 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6386328 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1348 A K _79516 ltle k) = (term1513 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386327 A K) (@lem6386326 A K _79516 ltle k)). Qed.
Lemma lem6386330 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386331 {A K : Type'} (P : type770 A K) : (term1514 A K P) = (term1515 A K P).
Proof. exact (@lem6386330 (K -> A) (type668 A K) P). Qed.
Lemma lem6386332 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1516 A K _79516 ltle k) = (term1517 A K _79516 ltle k).
Proof. exact (@lem6386331 A K (term1518 A K _79516 ltle k)). Qed.
Lemma lem6386333 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (eq_refl (term1519 A K _79516 ltle k f)). Qed.
Lemma lem6386334 {A K : Type'} (j : type668 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386335 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : type668 A K) : (term1520 A K _79516 ltle k f j) = (term1521 A K _79516 ltle k f j).
Proof. exact (MK_COMB (@lem6386333 A K _79516 ltle k f) (@lem6386334 A K j)). Qed.
Lemma lem6386336 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1521 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (eq_refl (term1521 A K _79516 ltle k f j)). Qed.
Lemma lem6386337 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1520 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (TRANS (@lem6386335 A K _79516 ltle k f j) (@lem6386336 A K j _79516 ltle k f)). Qed.
Lemma lem6386338 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1522 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (fun_ext (fun j : type668 A K => @lem6386337 A K j _79516 ltle k f)). Qed.
Lemma lem6386339 {A K : Type'} : (@ex ((A -> Prop) -> A -> K -> K)) = (@ex ((A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386340 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1523 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386339 A K) (@lem6386338 A K _79516 ltle k f)). Qed.
Lemma lem6386341 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1524 A K _79516 ltle k) = (term1512 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6386340 A K _79516 ltle k f)). Qed.
Lemma lem6386342 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6386343 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1516 A K _79516 ltle k) = (term1513 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386342 A K) (@lem6386341 A K _79516 ltle k)). Qed.
Lemma lem6386344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386345 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1525 A K _79516 ltle k) = (term1526 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386344) (@lem6386343 A K _79516 ltle k)). Qed.
Lemma lem6386346 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (eq_refl (term1519 A K _79516 ltle k f)). Qed.
Lemma lem6386347 {A K : Type'} (j : type780 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6386348 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (j : type780 A K) (f : K -> A) : (term1527 A K _79516 ltle k j f) = (term1528 A K _79516 ltle k j f).
Proof. exact (MK_COMB (@lem6386346 A K _79516 ltle k f) (@lem6386347 A K j f)). Qed.
Lemma lem6386349 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1528 A K _79516 ltle k j f) = (term1529 A K j _79516 ltle k f).
Proof. exact (eq_refl (term1528 A K _79516 ltle k j f)). Qed.
Lemma lem6386350 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1527 A K _79516 ltle k j f) = (term1529 A K j _79516 ltle k f).
Proof. exact (TRANS (@lem6386348 A K _79516 ltle k j f) (@lem6386349 A K j _79516 ltle k f)). Qed.
Lemma lem6386351 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1530 A K _79516 ltle k j) = (term1531 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6386350 A K j _79516 ltle k f)). Qed.
Lemma lem6386352 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6386353 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1532 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6386352 A K) (@lem6386351 A K j _79516 ltle k)). Qed.
Lemma lem6386354 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1534 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (fun_ext (fun j : type780 A K => @lem6386353 A K j _79516 ltle k)). Qed.
Lemma lem6386355 {A K : Type'} : (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386356 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1517 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386355 A K) (@lem6386354 A K _79516 ltle k)). Qed.
Lemma lem6386357 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : ((term1516 A K _79516 ltle k) = (term1517 A K _79516 ltle k)) = ((term1513 A K _79516 ltle k) = (term1536 A K _79516 ltle k)).
Proof. exact (MK_COMB (@lem6386345 A K _79516 ltle k) (@lem6386356 A K _79516 ltle k)). Qed.
Lemma lem6386358 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1513 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (EQ_MP (@lem6386357 A K _79516 ltle k) (@lem6386332 A K _79516 ltle k)). Qed.
Lemma lem6386359 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1348 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (TRANS (@lem6386328 A K _79516 ltle k) (@lem6386358 A K _79516 ltle k)). Qed.
Lemma lem6386360 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1349 A K _79516 ltle) = (term1537 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6386359 A K _79516 ltle k)). Qed.
Lemma lem6386361 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6386362 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1350 A K _79516 ltle) = (term1538 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386361 K) (@lem6386360 A K _79516 ltle)). Qed.
Lemma lem6386364 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386365 {A K : Type'} (P : type826 A K) : (term1539 A K P) = (term1540 A K P).
Proof. exact (@lem6386364 (K -> Prop) (type780 A K) P). Qed.
Lemma lem6386366 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1541 A K _79516 ltle) = (term1542 A K _79516 ltle).
Proof. exact (@lem6386365 A K (term1543 A K _79516 ltle)). Qed.
Lemma lem6386367 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1544 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (eq_refl (term1544 A K _79516 ltle k)). Qed.
Lemma lem6386368 {A K : Type'} (j : type780 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386369 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (j : type780 A K) : (term1545 A K _79516 ltle k j) = (term1546 A K _79516 ltle k j).
Proof. exact (MK_COMB (@lem6386367 A K _79516 ltle k) (@lem6386368 A K j)). Qed.
Lemma lem6386370 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1546 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (eq_refl (term1546 A K _79516 ltle k j)). Qed.
Lemma lem6386371 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1545 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (TRANS (@lem6386369 A K _79516 ltle k j) (@lem6386370 A K j _79516 ltle k)). Qed.
Lemma lem6386372 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1547 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (fun_ext (fun j : type780 A K => @lem6386371 A K j _79516 ltle k)). Qed.
Lemma lem6386373 {A K : Type'} : (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386374 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1548 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6386373 A K) (@lem6386372 A K _79516 ltle k)). Qed.
Lemma lem6386375 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1549 A K _79516 ltle) = (term1537 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6386374 A K _79516 ltle k)). Qed.
Lemma lem6386376 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6386377 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1541 A K _79516 ltle) = (term1538 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386376 K) (@lem6386375 A K _79516 ltle)). Qed.
Lemma lem6386378 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386379 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1550 A K _79516 ltle) = (term1551 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386378) (@lem6386377 A K _79516 ltle)). Qed.
Lemma lem6386380 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1544 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (eq_refl (term1544 A K _79516 ltle k)). Qed.
Lemma lem6386381 {A K : Type'} (j : type848 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6386382 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (j : type848 A K) (k : K -> Prop) : (term1552 A K _79516 ltle j k) = (term1553 A K _79516 ltle j k).
Proof. exact (MK_COMB (@lem6386380 A K _79516 ltle k) (@lem6386381 A K j k)). Qed.
Lemma lem6386383 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1553 A K _79516 ltle j k) = (term1554 A K j _79516 ltle k).
Proof. exact (eq_refl (term1553 A K _79516 ltle j k)). Qed.
Lemma lem6386384 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1552 A K _79516 ltle j k) = (term1554 A K j _79516 ltle k).
Proof. exact (TRANS (@lem6386382 A K _79516 ltle j k) (@lem6386383 A K j _79516 ltle k)). Qed.
Lemma lem6386385 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1555 A K _79516 ltle j) = (term1556 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6386384 A K j _79516 ltle k)). Qed.
Lemma lem6386386 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6386387 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1557 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6386386 K) (@lem6386385 A K j _79516 ltle)). Qed.
Lemma lem6386388 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1559 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (fun_ext (fun j : type848 A K => @lem6386387 A K j _79516 ltle)). Qed.
Lemma lem6386389 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386390 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1542 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386389 A K) (@lem6386388 A K _79516 ltle)). Qed.
Lemma lem6386391 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : ((term1541 A K _79516 ltle) = (term1542 A K _79516 ltle)) = ((term1538 A K _79516 ltle) = (term1561 A K _79516 ltle)).
Proof. exact (MK_COMB (@lem6386379 A K _79516 ltle) (@lem6386390 A K _79516 ltle)). Qed.
Lemma lem6386392 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1538 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (EQ_MP (@lem6386391 A K _79516 ltle) (@lem6386366 A K _79516 ltle)). Qed.
Lemma lem6386393 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1350 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (TRANS (@lem6386362 A K _79516 ltle) (@lem6386392 A K _79516 ltle)). Qed.
Lemma lem6386394 {A K : Type'} (_79516 : type758 A K) : (term1351 A K _79516) = (term1562 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6386393 A K _79516 ltle)). Qed.
Lemma lem6386395 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6386396 {A K : Type'} (_79516 : type758 A K) : (term1352 A K _79516) = (term1563 A K _79516).
Proof. exact (MK_COMB (@lem6386395 K) (@lem6386394 A K _79516)). Qed.
Lemma lem6386398 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386399 {A K : Type'} (P : type753 A K) : (term1564 A K P) = (term1565 A K P).
Proof. exact (@lem6386398 (type1402 K) (type848 A K) P). Qed.
Lemma lem6386400 {A K : Type'} (_79516 : type758 A K) : (term1566 A K _79516) = (term1567 A K _79516).
Proof. exact (@lem6386399 A K (term1568 A K _79516)). Qed.
Lemma lem6386401 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1569 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (eq_refl (term1569 A K _79516 ltle)). Qed.
Lemma lem6386402 {A K : Type'} (j : type848 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386403 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (j : type848 A K) : (term1570 A K _79516 ltle j) = (term1571 A K _79516 ltle j).
Proof. exact (MK_COMB (@lem6386401 A K _79516 ltle) (@lem6386402 A K j)). Qed.
Lemma lem6386404 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1571 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (eq_refl (term1571 A K _79516 ltle j)). Qed.
Lemma lem6386405 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1570 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (TRANS (@lem6386403 A K _79516 ltle j) (@lem6386404 A K j _79516 ltle)). Qed.
Lemma lem6386406 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1572 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (fun_ext (fun j : type848 A K => @lem6386405 A K j _79516 ltle)). Qed.
Lemma lem6386407 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386408 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1573 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6386407 A K) (@lem6386406 A K _79516 ltle)). Qed.
Lemma lem6386409 {A K : Type'} (_79516 : type758 A K) : (term1574 A K _79516) = (term1562 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6386408 A K _79516 ltle)). Qed.
Lemma lem6386410 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6386411 {A K : Type'} (_79516 : type758 A K) : (term1566 A K _79516) = (term1563 A K _79516).
Proof. exact (MK_COMB (@lem6386410 K) (@lem6386409 A K _79516)). Qed.
Lemma lem6386412 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386413 {A K : Type'} (_79516 : type758 A K) : (term1575 A K _79516) = (term1576 A K _79516).
Proof. exact (MK_COMB (@lem6386412) (@lem6386411 A K _79516)). Qed.
Lemma lem6386414 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1569 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (eq_refl (term1569 A K _79516 ltle)). Qed.
Lemma lem6386415 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (j ltle).
Proof. exact (eq_refl (j ltle)). Qed.
Lemma lem6386416 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (ltle : type1402 K) : (term1577 A K _79516 j ltle) = (term1578 A K _79516 j ltle).
Proof. exact (MK_COMB (@lem6386414 A K _79516 ltle) (@lem6386415 A K j ltle)). Qed.
Lemma lem6386417 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1578 A K _79516 j ltle) = (term1579 A K j _79516 ltle).
Proof. exact (eq_refl (term1578 A K _79516 j ltle)). Qed.
Lemma lem6386418 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1577 A K _79516 j ltle) = (term1579 A K j _79516 ltle).
Proof. exact (TRANS (@lem6386416 A K _79516 j ltle) (@lem6386417 A K j _79516 ltle)). Qed.
Lemma lem6386419 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1580 A K _79516 j) = (term1581 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6386418 A K j _79516 ltle)). Qed.
Lemma lem6386420 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6386421 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1582 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (MK_COMB (@lem6386420 K) (@lem6386419 A K j _79516)). Qed.
Lemma lem6386422 {A K : Type'} (_79516 : type758 A K) : (term1584 A K _79516) = (term1585 A K _79516).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386421 A K j _79516)). Qed.
Lemma lem6386423 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386424 {A K : Type'} (_79516 : type758 A K) : (term1567 A K _79516) = (term1586 A K _79516).
Proof. exact (MK_COMB (@lem6386423 A K) (@lem6386422 A K _79516)). Qed.
Lemma lem6386425 {A K : Type'} (_79516 : type758 A K) : ((term1566 A K _79516) = (term1567 A K _79516)) = ((term1563 A K _79516) = (term1586 A K _79516)).
Proof. exact (MK_COMB (@lem6386413 A K _79516) (@lem6386424 A K _79516)). Qed.
Lemma lem6386426 {A K : Type'} (_79516 : type758 A K) : (term1563 A K _79516) = (term1586 A K _79516).
Proof. exact (EQ_MP (@lem6386425 A K _79516) (@lem6386400 A K _79516)). Qed.
Lemma lem6386427 {A K : Type'} (_79516 : type758 A K) : (term1352 A K _79516) = (term1586 A K _79516).
Proof. exact (TRANS (@lem6386396 A K _79516) (@lem6386426 A K _79516)). Qed.
Lemma lem6386428 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386429 {A K : Type'} (_79516 : type758 A K) : (term1353 A K _79516) = (term1587 A K _79516).
Proof. exact (MK_COMB (@lem6386428) (@lem6386427 A K _79516)). Qed.
Lemma lem6386431 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6386432 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1284 K P Q) = (term1283 K P Q).
Proof. exact (@lem6386431 K P Q). Qed.
Lemma lem6386433 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1588 A K k f i dom neut) = (term1589 A K k f i dom neut).
Proof. exact (@lem6386432 K (term705 A K k f dom neut) (term1125 A K k f i dom neut)). Qed.
Lemma lem6386434 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6386435 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1590 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386434 A K k f x dom neut)). Qed.
Lemma lem6386436 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386437 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1591 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6386436 K) (@lem6386435 A K k f dom neut)). Qed.
Lemma lem6386438 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386439 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1592 A K k f dom neut) = (term1203 A K k f dom neut).
Proof. exact (MK_COMB (@lem6386438) (@lem6386437 A K k f dom neut)). Qed.
Lemma lem6386440 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (eq_refl (term1125 A K k f i dom neut)). Qed.
Lemma lem6386441 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1588 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6386439 A K k f dom neut) (@lem6386440 A K k f i dom neut)). Qed.
Lemma lem6386442 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386443 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1593 A K k f i dom neut) = (term1594 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6386442) (@lem6386441 A K k f i dom neut)). Qed.
Lemma lem6386444 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6386445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386446 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1595 A K k f dom neut x) = (term785 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6386445) (@lem6386444 A K k f x dom neut)). Qed.
Lemma lem6386447 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (eq_refl (term1125 A K k f i dom neut)). Qed.
Lemma lem6386448 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1596 A K x k f i dom neut) = (term1597 A K x k f i dom neut).
Proof. exact (MK_COMB (@lem6386446 A K k f x dom neut) (@lem6386447 A K k f i dom neut)). Qed.
Lemma lem6386449 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1598 A K k f i dom neut) = (term1599 A K k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386448 A K x k f i dom neut)). Qed.
Lemma lem6386450 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386451 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1589 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6386450 K) (@lem6386449 A K k f i dom neut)). Qed.
Lemma lem6386452 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1588 A K k f i dom neut) = (term1589 A K k f i dom neut)) = ((term1205 A K k f i dom neut) = (term1600 A K k f i dom neut)).
Proof. exact (MK_COMB (@lem6386443 A K k f i dom neut) (@lem6386451 A K k f i dom neut)). Qed.
Lemma lem6386453 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1205 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (EQ_MP (@lem6386452 A K k f i dom neut) (@lem6386433 A K k f i dom neut)). Qed.
Lemma lem6386454 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1206 A K _79516 ltle k f dom neut i) = (term1206 A K _79516 ltle k f dom neut i).
Proof. exact (eq_refl (term1206 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6386455 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1208 A K _79516 ltle k f i dom neut) = (term1601 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386454 A K _79516 ltle k f dom neut i) (@lem6386453 A K k f i dom neut)). Qed.
Lemma lem6386457 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386458 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6386457 K P Q). Qed.
Lemma lem6386459 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1604 A K _79516 ltle k f i dom neut) = (term1605 A K _79516 ltle k f i dom neut).
Proof. exact (@lem6386458 K ((_79516 ltle k f dom neut) = i) (term1599 A K k f i dom neut)). Qed.
Lemma lem6386460 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1606 A K k f i dom neut x) = (term1597 A K x k f i dom neut).
Proof. exact (eq_refl (term1606 A K k f i dom neut x)). Qed.
Lemma lem6386461 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1607 A K k f i dom neut) = (term1599 A K k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386460 A K x k f i dom neut)). Qed.
Lemma lem6386462 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386463 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1608 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6386462 K) (@lem6386461 A K k f i dom neut)). Qed.
Lemma lem6386464 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1206 A K _79516 ltle k f dom neut i) = (term1206 A K _79516 ltle k f dom neut i).
Proof. exact (eq_refl (term1206 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6386465 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1604 A K _79516 ltle k f i dom neut) = (term1601 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386464 A K _79516 ltle k f dom neut i) (@lem6386463 A K k f i dom neut)). Qed.
Lemma lem6386466 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386467 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1609 A K _79516 ltle k f i dom neut) = (term1610 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386466) (@lem6386465 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386468 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1606 A K k f i dom neut x) = (term1597 A K x k f i dom neut).
Proof. exact (eq_refl (term1606 A K k f i dom neut x)). Qed.
Lemma lem6386469 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1206 A K _79516 ltle k f dom neut i) = (term1206 A K _79516 ltle k f dom neut i).
Proof. exact (eq_refl (term1206 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6386470 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1611 A K _79516 ltle k f i dom neut x) = (term1612 A K _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6386469 A K _79516 ltle k f dom neut i) (@lem6386468 A K x k f i dom neut)). Qed.
Lemma lem6386471 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1613 A K _79516 ltle k f i dom neut) = (term1614 A K _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386470 A K _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386472 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386473 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1605 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386472 K) (@lem6386471 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386474 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1604 A K _79516 ltle k f i dom neut) = (term1605 A K _79516 ltle k f i dom neut)) = ((term1601 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386467 A K _79516 ltle k f i dom neut) (@lem6386473 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386475 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1601 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386474 A K _79516 ltle k f i dom neut) (@lem6386459 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386476 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1208 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386455 A K _79516 ltle k f i dom neut) (@lem6386475 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386477 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1354 A K _79516 ltle k f i dom neut) = (term1616 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386429 A K _79516) (@lem6386476 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386479 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6386480 {A K : Type'} (P : type192 A K) (Q : Prop) : (term1617 A K P Q) = (term1618 A K P Q).
Proof. exact (@lem6386479 (type757 A K) P Q). Qed.
Lemma lem6386481 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1619 A K _79516 ltle k f i dom neut) = (term1620 A K _79516 ltle k f i dom neut).
Proof. exact (@lem6386480 A K (term1585 A K _79516) (term1615 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386482 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1621 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (eq_refl (term1621 A K _79516 j)). Qed.
Lemma lem6386483 {A K : Type'} (_79516 : type758 A K) : (term1622 A K _79516) = (term1585 A K _79516).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386482 A K j _79516)). Qed.
Lemma lem6386484 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386485 {A K : Type'} (_79516 : type758 A K) : (term1623 A K _79516) = (term1586 A K _79516).
Proof. exact (MK_COMB (@lem6386484 A K) (@lem6386483 A K _79516)). Qed.
Lemma lem6386486 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386487 {A K : Type'} (_79516 : type758 A K) : (term1624 A K _79516) = (term1587 A K _79516).
Proof. exact (MK_COMB (@lem6386486) (@lem6386485 A K _79516)). Qed.
Lemma lem6386488 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1615 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1615 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386489 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1619 A K _79516 ltle k f i dom neut) = (term1616 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386487 A K _79516) (@lem6386488 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386490 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386491 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1625 A K _79516 ltle k f i dom neut) = (term1626 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386490) (@lem6386489 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386492 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1621 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (eq_refl (term1621 A K _79516 j)). Qed.
Lemma lem6386493 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386494 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1627 A K _79516 j) = (term1628 A K j _79516).
Proof. exact (MK_COMB (@lem6386493) (@lem6386492 A K j _79516)). Qed.
Lemma lem6386495 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1615 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1615 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386496 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1629 A K j _79516 ltle k f i dom neut) = (term1630 A K j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386494 A K j _79516) (@lem6386495 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386497 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1631 A K _79516 ltle k f i dom neut) = (term1632 A K _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386496 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386498 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386499 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1620 A K _79516 ltle k f i dom neut) = (term1633 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386498 A K) (@lem6386497 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386500 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1619 A K _79516 ltle k f i dom neut) = (term1620 A K _79516 ltle k f i dom neut)) = ((term1616 A K _79516 ltle k f i dom neut) = (term1633 A K _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386491 A K _79516 ltle k f i dom neut) (@lem6386499 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386501 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1616 A K _79516 ltle k f i dom neut) = (term1633 A K _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386500 A K _79516 ltle k f i dom neut) (@lem6386481 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386503 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386504 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6386503 K P Q). Qed.
Lemma lem6386505 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1634 A K j _79516 ltle k f i dom neut) = (term1635 A K j _79516 ltle k f i dom neut).
Proof. exact (@lem6386504 K (term1583 A K j _79516) (term1614 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386506 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1636 A K _79516 ltle k f i dom neut x) = (term1612 A K _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1636 A K _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386507 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1637 A K _79516 ltle k f i dom neut) = (term1614 A K _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386506 A K _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386508 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386509 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1638 A K _79516 ltle k f i dom neut) = (term1615 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386508 K) (@lem6386507 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386510 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1628 A K j _79516) = (term1628 A K j _79516).
Proof. exact (eq_refl (term1628 A K j _79516)). Qed.
Lemma lem6386511 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1634 A K j _79516 ltle k f i dom neut) = (term1630 A K j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386510 A K j _79516) (@lem6386509 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386512 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386513 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1639 A K j _79516 ltle k f i dom neut) = (term1640 A K j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386512) (@lem6386511 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386514 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1636 A K _79516 ltle k f i dom neut x) = (term1612 A K _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1636 A K _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386515 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1628 A K j _79516) = (term1628 A K j _79516).
Proof. exact (eq_refl (term1628 A K j _79516)). Qed.
Lemma lem6386516 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1641 A K j _79516 ltle k f i dom neut x) = (term1642 A K j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6386515 A K j _79516) (@lem6386514 A K _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386517 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1643 A K j _79516 ltle k f i dom neut) = (term1644 A K j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386516 A K j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386518 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386519 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1635 A K j _79516 ltle k f i dom neut) = (term1645 A K j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386518 K) (@lem6386517 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386520 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1634 A K j _79516 ltle k f i dom neut) = (term1635 A K j _79516 ltle k f i dom neut)) = ((term1630 A K j _79516 ltle k f i dom neut) = (term1645 A K j _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386513 A K j _79516 ltle k f i dom neut) (@lem6386519 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386521 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1630 A K j _79516 ltle k f i dom neut) = (term1645 A K j _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386520 A K j _79516 ltle k f i dom neut) (@lem6386505 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386522 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1632 A K _79516 ltle k f i dom neut) = (term1646 A K _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386521 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386523 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386524 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1633 A K _79516 ltle k f i dom neut) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386523 A K) (@lem6386522 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386525 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1616 A K _79516 ltle k f i dom neut) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386501 A K _79516 ltle k f i dom neut) (@lem6386524 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386526 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1354 A K _79516 ltle k f i dom neut) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386477 A K _79516 ltle k f i dom neut) (@lem6386525 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386527 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1355 A K ltle k f i dom neut) = (term1648 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386526 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386528 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386529 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1356 A K ltle k f i dom neut) = (term1649 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386528 A K) (@lem6386527 A K ltle k f i dom neut)). Qed.
Lemma lem6386530 {A K : Type'} : (term1329 A K) = (term1329 A K).
Proof. exact (eq_refl (term1329 A K)). Qed.
Lemma lem6386531 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1357 A K ltle k f i dom neut) = (term1650 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386530 A K) (@lem6386529 A K ltle k f i dom neut)). Qed.
Lemma lem6386533 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6386534 {A K : Type'} (P : type220 A K) (Q : Prop) : (term1286 A K P Q) = (term1285 A K P Q).
Proof. exact (@lem6386533 (type850 A K) P Q). Qed.
Lemma lem6386535 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1651 A K ltle k f i dom neut) = (term1652 A K ltle k f i dom neut).
Proof. exact (@lem6386534 A K (term1327 A K) (term1649 A K ltle k f i dom neut)). Qed.
Lemma lem6386536 {A K : Type'} (_79517 : type850 A K) : (term1653 A K _79517) = (term1326 A K _79517).
Proof. exact (eq_refl (term1653 A K _79517)). Qed.
Lemma lem6386537 {A K : Type'} : (term1654 A K) = (term1327 A K).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386536 A K _79517)). Qed.
Lemma lem6386538 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386539 {A K : Type'} : (term1655 A K) = (term1328 A K).
Proof. exact (MK_COMB (@lem6386538 A K) (@lem6386537 A K)). Qed.
Lemma lem6386540 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386541 {A K : Type'} : (term1656 A K) = (term1329 A K).
Proof. exact (MK_COMB (@lem6386540) (@lem6386539 A K)). Qed.
Lemma lem6386542 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1649 A K ltle k f i dom neut) = (term1649 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1649 A K ltle k f i dom neut)). Qed.
Lemma lem6386543 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1651 A K ltle k f i dom neut) = (term1650 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386541 A K) (@lem6386542 A K ltle k f i dom neut)). Qed.
Lemma lem6386544 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386545 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1657 A K ltle k f i dom neut) = (term1658 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386544) (@lem6386543 A K ltle k f i dom neut)). Qed.
Lemma lem6386546 {A K : Type'} (_79517 : type850 A K) : (term1653 A K _79517) = (term1326 A K _79517).
Proof. exact (eq_refl (term1653 A K _79517)). Qed.
Lemma lem6386547 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386548 {A K : Type'} (_79517 : type850 A K) : (term1659 A K _79517) = (term1360 A K _79517).
Proof. exact (MK_COMB (@lem6386547) (@lem6386546 A K _79517)). Qed.
Lemma lem6386549 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1649 A K ltle k f i dom neut) = (term1649 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1649 A K ltle k f i dom neut)). Qed.
Lemma lem6386550 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1660 A K _79517 ltle k f i dom neut) = (term1661 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386548 A K _79517) (@lem6386549 A K ltle k f i dom neut)). Qed.
Lemma lem6386551 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1662 A K ltle k f i dom neut) = (term1663 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386550 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386552 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386553 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1652 A K ltle k f i dom neut) = (term1664 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386552 A K) (@lem6386551 A K ltle k f i dom neut)). Qed.
Lemma lem6386554 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1651 A K ltle k f i dom neut) = (term1652 A K ltle k f i dom neut)) = ((term1650 A K ltle k f i dom neut) = (term1664 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386545 A K ltle k f i dom neut) (@lem6386553 A K ltle k f i dom neut)). Qed.
Lemma lem6386555 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1650 A K ltle k f i dom neut) = (term1664 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386554 A K ltle k f i dom neut) (@lem6386535 A K ltle k f i dom neut)). Qed.
Lemma lem6386557 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386558 {A K : Type'} (P : Prop) (Q : type193 A K) : (term1665 A K P Q) = (term1666 A K P Q).
Proof. exact (@lem6386557 (type758 A K) P Q). Qed.
Lemma lem6386559 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1667 A K _79517 ltle k f i dom neut) = (term1668 A K _79517 ltle k f i dom neut).
Proof. exact (@lem6386558 A K (term1326 A K _79517) (term1648 A K ltle k f i dom neut)). Qed.
Lemma lem6386560 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1669 A K ltle k f i dom neut _79516) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1669 A K ltle k f i dom neut _79516)). Qed.
Lemma lem6386561 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1670 A K ltle k f i dom neut) = (term1648 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386560 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386562 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386563 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1671 A K ltle k f i dom neut) = (term1649 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386562 A K) (@lem6386561 A K ltle k f i dom neut)). Qed.
Lemma lem6386564 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386565 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1667 A K _79517 ltle k f i dom neut) = (term1661 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386564 A K _79517) (@lem6386563 A K ltle k f i dom neut)). Qed.
Lemma lem6386566 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386567 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1672 A K _79517 ltle k f i dom neut) = (term1673 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386566) (@lem6386565 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386568 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1669 A K ltle k f i dom neut _79516) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1669 A K ltle k f i dom neut _79516)). Qed.
Lemma lem6386569 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386570 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1674 A K _79517 ltle k f i dom neut _79516) = (term1675 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386569 A K _79517) (@lem6386568 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386571 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1676 A K _79517 ltle k f i dom neut) = (term1677 A K _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386570 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386572 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386573 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1668 A K _79517 ltle k f i dom neut) = (term1678 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386572 A K) (@lem6386571 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386574 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1667 A K _79517 ltle k f i dom neut) = (term1668 A K _79517 ltle k f i dom neut)) = ((term1661 A K _79517 ltle k f i dom neut) = (term1678 A K _79517 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386567 A K _79517 ltle k f i dom neut) (@lem6386573 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386575 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1661 A K _79517 ltle k f i dom neut) = (term1678 A K _79517 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386574 A K _79517 ltle k f i dom neut) (@lem6386559 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386577 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386578 {A K : Type'} (P : Prop) (Q : type192 A K) : (term1679 A K P Q) = (term1680 A K P Q).
Proof. exact (@lem6386577 (type757 A K) P Q). Qed.
Lemma lem6386579 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1681 A K _79517 _79516 ltle k f i dom neut) = (term1682 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (@lem6386578 A K (term1326 A K _79517) (term1646 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386580 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1683 A K _79516 ltle k f i dom neut j) = (term1645 A K j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1683 A K _79516 ltle k f i dom neut j)). Qed.
Lemma lem6386581 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1684 A K _79516 ltle k f i dom neut) = (term1646 A K _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386580 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386582 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386583 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1685 A K _79516 ltle k f i dom neut) = (term1647 A K _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386582 A K) (@lem6386581 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386584 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386585 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1681 A K _79517 _79516 ltle k f i dom neut) = (term1675 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386584 A K _79517) (@lem6386583 A K _79516 ltle k f i dom neut)). Qed.
Lemma lem6386586 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386587 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1686 A K _79517 _79516 ltle k f i dom neut) = (term1687 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386586) (@lem6386585 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386588 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1683 A K _79516 ltle k f i dom neut j) = (term1645 A K j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1683 A K _79516 ltle k f i dom neut j)). Qed.
Lemma lem6386589 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386590 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1688 A K _79517 _79516 ltle k f i dom neut j) = (term1689 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386589 A K _79517) (@lem6386588 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386591 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1690 A K _79517 _79516 ltle k f i dom neut) = (term1691 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386590 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386592 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386593 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1682 A K _79517 _79516 ltle k f i dom neut) = (term1692 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386592 A K) (@lem6386591 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386594 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1681 A K _79517 _79516 ltle k f i dom neut) = (term1682 A K _79517 _79516 ltle k f i dom neut)) = ((term1675 A K _79517 _79516 ltle k f i dom neut) = (term1692 A K _79517 _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386587 A K _79517 _79516 ltle k f i dom neut) (@lem6386593 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386595 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1675 A K _79517 _79516 ltle k f i dom neut) = (term1692 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386594 A K _79517 _79516 ltle k f i dom neut) (@lem6386579 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386597 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386598 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6386597 K P Q). Qed.
Lemma lem6386599 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1693 A K _79517 j _79516 ltle k f i dom neut) = (term1694 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (@lem6386598 K (term1326 A K _79517) (term1644 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386600 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1695 A K j _79516 ltle k f i dom neut x) = (term1642 A K j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1695 A K j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386601 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1696 A K j _79516 ltle k f i dom neut) = (term1644 A K j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386600 A K j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386602 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386603 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1697 A K j _79516 ltle k f i dom neut) = (term1645 A K j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386602 K) (@lem6386601 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386604 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386605 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1693 A K _79517 j _79516 ltle k f i dom neut) = (term1689 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386604 A K _79517) (@lem6386603 A K j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386606 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386607 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1698 A K _79517 j _79516 ltle k f i dom neut) = (term1699 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386606) (@lem6386605 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386608 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1695 A K j _79516 ltle k f i dom neut x) = (term1642 A K j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1695 A K j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386609 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6386610 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1700 A K _79517 j _79516 ltle k f i dom neut x) = (term1701 A K _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6386609 A K _79517) (@lem6386608 A K j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386611 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1702 A K _79517 j _79516 ltle k f i dom neut) = (term1703 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386610 A K _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386612 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386613 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1694 A K _79517 j _79516 ltle k f i dom neut) = (term1704 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386612 K) (@lem6386611 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386614 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1693 A K _79517 j _79516 ltle k f i dom neut) = (term1694 A K _79517 j _79516 ltle k f i dom neut)) = ((term1689 A K _79517 j _79516 ltle k f i dom neut) = (term1704 A K _79517 j _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386607 A K _79517 j _79516 ltle k f i dom neut) (@lem6386613 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386615 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1689 A K _79517 j _79516 ltle k f i dom neut) = (term1704 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386614 A K _79517 j _79516 ltle k f i dom neut) (@lem6386599 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386616 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1691 A K _79517 _79516 ltle k f i dom neut) = (term1705 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386615 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386617 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386618 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1692 A K _79517 _79516 ltle k f i dom neut) = (term1706 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386617 A K) (@lem6386616 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386619 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1675 A K _79517 _79516 ltle k f i dom neut) = (term1706 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386595 A K _79517 _79516 ltle k f i dom neut) (@lem6386618 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386620 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1677 A K _79517 ltle k f i dom neut) = (term1707 A K _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386619 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386621 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386622 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1678 A K _79517 ltle k f i dom neut) = (term1708 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386621 A K) (@lem6386620 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386623 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1661 A K _79517 ltle k f i dom neut) = (term1708 A K _79517 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386575 A K _79517 ltle k f i dom neut) (@lem6386622 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386624 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1663 A K ltle k f i dom neut) = (term1709 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386623 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386625 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386626 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1664 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386625 A K) (@lem6386624 A K ltle k f i dom neut)). Qed.
Lemma lem6386627 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1650 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6386555 A K ltle k f i dom neut) (@lem6386626 A K ltle k f i dom neut)). Qed.
Lemma lem6386628 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1357 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6386531 A K ltle k f i dom neut) (@lem6386627 A K ltle k f i dom neut)). Qed.
Lemma lem6386629 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1239 A K ltle k f dom neut) = (term1239 A K ltle k f dom neut).
Proof. exact (eq_refl (term1239 A K ltle k f dom neut)). Qed.
Lemma lem6386630 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1358 A K ltle k f i dom neut) = (term1711 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386629 A K ltle k f dom neut) (@lem6386628 A K ltle k f i dom neut)). Qed.
Lemma lem6386632 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6386633 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1284 K P Q) = (term1283 K P Q).
Proof. exact (@lem6386632 K P Q). Qed.
Lemma lem6386634 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1712 A K ltle k f i dom neut) = (term1713 A K ltle k f i dom neut).
Proof. exact (@lem6386633 K (term1139 A K ltle k f dom neut) (term1710 A K ltle k f i dom neut)). Qed.
Lemma lem6386635 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1714 A K ltle k f dom neut i) = (term1138 A K ltle k f dom neut i).
Proof. exact (eq_refl (term1714 A K ltle k f dom neut i)). Qed.
Lemma lem6386636 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1715 A K ltle k f dom neut) = (term1139 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6386635 A K ltle k f dom neut i)). Qed.
Lemma lem6386637 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386638 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1716 A K ltle k f dom neut) = (term1140 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386637 K) (@lem6386636 A K ltle k f dom neut)). Qed.
Lemma lem6386639 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386640 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1717 A K ltle k f dom neut) = (term1239 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386639) (@lem6386638 A K ltle k f dom neut)). Qed.
Lemma lem6386641 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1710 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1710 A K ltle k f i dom neut)). Qed.
Lemma lem6386642 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1712 A K ltle k f i dom neut) = (term1711 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386640 A K ltle k f dom neut) (@lem6386641 A K ltle k f i dom neut)). Qed.
Lemma lem6386643 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386644 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1718 A K ltle k f i dom neut) = (term1719 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386643) (@lem6386642 A K ltle k f i dom neut)). Qed.
Lemma lem6386645 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1714 A K ltle k f dom neut i') = (term1138 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1714 A K ltle k f dom neut i')). Qed.
Lemma lem6386646 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386647 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1720 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6386646) (@lem6386645 A K ltle k f dom neut i')). Qed.
Lemma lem6386648 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1710 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1710 A K ltle k f i dom neut)). Qed.
Lemma lem6386649 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1722 A K i' ltle k f i dom neut) = (term1723 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386647 A K ltle k f dom neut i') (@lem6386648 A K ltle k f i dom neut)). Qed.
Lemma lem6386650 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1724 A K ltle k f i dom neut) = (term1725 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6386649 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386651 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386652 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1713 A K ltle k f i dom neut) = (term1726 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386651 K) (@lem6386650 A K ltle k f i dom neut)). Qed.
Lemma lem6386653 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1712 A K ltle k f i dom neut) = (term1713 A K ltle k f i dom neut)) = ((term1711 A K ltle k f i dom neut) = (term1726 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386644 A K ltle k f i dom neut) (@lem6386652 A K ltle k f i dom neut)). Qed.
Lemma lem6386654 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1711 A K ltle k f i dom neut) = (term1726 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386653 A K ltle k f i dom neut) (@lem6386634 A K ltle k f i dom neut)). Qed.
Lemma lem6386656 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386657 {A K : Type'} (P : Prop) (Q : type220 A K) : (term1727 A K P Q) = (term1728 A K P Q).
Proof. exact (@lem6386656 (type850 A K) P Q). Qed.
Lemma lem6386658 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1729 A K i' ltle k f i dom neut) = (term1730 A K i' ltle k f i dom neut).
Proof. exact (@lem6386657 A K (term1138 A K ltle k f dom neut i') (term1709 A K ltle k f i dom neut)). Qed.
Lemma lem6386659 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1731 A K ltle k f i dom neut _79517) = (term1708 A K _79517 ltle k f i dom neut).
Proof. exact (eq_refl (term1731 A K ltle k f i dom neut _79517)). Qed.
Lemma lem6386660 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1732 A K ltle k f i dom neut) = (term1709 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386659 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386661 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386662 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1733 A K ltle k f i dom neut) = (term1710 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386661 A K) (@lem6386660 A K ltle k f i dom neut)). Qed.
Lemma lem6386663 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386664 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1729 A K i' ltle k f i dom neut) = (term1723 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386663 A K ltle k f dom neut i') (@lem6386662 A K ltle k f i dom neut)). Qed.
Lemma lem6386665 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386666 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1734 A K i' ltle k f i dom neut) = (term1735 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386665) (@lem6386664 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386667 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1731 A K ltle k f i dom neut _79517) = (term1708 A K _79517 ltle k f i dom neut).
Proof. exact (eq_refl (term1731 A K ltle k f i dom neut _79517)). Qed.
Lemma lem6386668 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386669 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1736 A K i' ltle k f i dom neut _79517) = (term1737 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386668 A K ltle k f dom neut i') (@lem6386667 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386670 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1738 A K i' ltle k f i dom neut) = (term1739 A K i' ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386669 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386671 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386672 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1730 A K i' ltle k f i dom neut) = (term1740 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386671 A K) (@lem6386670 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386673 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1729 A K i' ltle k f i dom neut) = (term1730 A K i' ltle k f i dom neut)) = ((term1723 A K i' ltle k f i dom neut) = (term1740 A K i' ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386666 A K i' ltle k f i dom neut) (@lem6386672 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386674 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1723 A K i' ltle k f i dom neut) = (term1740 A K i' ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386673 A K i' ltle k f i dom neut) (@lem6386658 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386676 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386677 {A K : Type'} (P : Prop) (Q : type193 A K) : (term1665 A K P Q) = (term1666 A K P Q).
Proof. exact (@lem6386676 (type758 A K) P Q). Qed.
Lemma lem6386678 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1741 A K i' _79517 ltle k f i dom neut) = (term1742 A K i' _79517 ltle k f i dom neut).
Proof. exact (@lem6386677 A K (term1138 A K ltle k f dom neut i') (term1707 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386679 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1743 A K _79517 ltle k f i dom neut _79516) = (term1706 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1743 A K _79517 ltle k f i dom neut _79516)). Qed.
Lemma lem6386680 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1744 A K _79517 ltle k f i dom neut) = (term1707 A K _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386679 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386681 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386682 {A K : Type'} (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1745 A K _79517 ltle k f i dom neut) = (term1708 A K _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386681 A K) (@lem6386680 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386683 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386684 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1741 A K i' _79517 ltle k f i dom neut) = (term1737 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386683 A K ltle k f dom neut i') (@lem6386682 A K _79517 ltle k f i dom neut)). Qed.
Lemma lem6386685 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386686 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1746 A K i' _79517 ltle k f i dom neut) = (term1747 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386685) (@lem6386684 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386687 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1743 A K _79517 ltle k f i dom neut _79516) = (term1706 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1743 A K _79517 ltle k f i dom neut _79516)). Qed.
Lemma lem6386688 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386689 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1748 A K i' _79517 ltle k f i dom neut _79516) = (term1749 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386688 A K ltle k f dom neut i') (@lem6386687 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386690 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1750 A K i' _79517 ltle k f i dom neut) = (term1751 A K i' _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386689 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386691 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386692 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1742 A K i' _79517 ltle k f i dom neut) = (term1752 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386691 A K) (@lem6386690 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386693 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1741 A K i' _79517 ltle k f i dom neut) = (term1742 A K i' _79517 ltle k f i dom neut)) = ((term1737 A K i' _79517 ltle k f i dom neut) = (term1752 A K i' _79517 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386686 A K i' _79517 ltle k f i dom neut) (@lem6386692 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386694 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1737 A K i' _79517 ltle k f i dom neut) = (term1752 A K i' _79517 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386693 A K i' _79517 ltle k f i dom neut) (@lem6386678 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386696 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386697 {A K : Type'} (P : Prop) (Q : type192 A K) : (term1679 A K P Q) = (term1680 A K P Q).
Proof. exact (@lem6386696 (type757 A K) P Q). Qed.
Lemma lem6386698 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1753 A K i' _79517 _79516 ltle k f i dom neut) = (term1754 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (@lem6386697 A K (term1138 A K ltle k f dom neut i') (term1705 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386699 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1755 A K _79517 _79516 ltle k f i dom neut j) = (term1704 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1755 A K _79517 _79516 ltle k f i dom neut j)). Qed.
Lemma lem6386700 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1756 A K _79517 _79516 ltle k f i dom neut) = (term1705 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386699 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386701 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386702 {A K : Type'} (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1757 A K _79517 _79516 ltle k f i dom neut) = (term1706 A K _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386701 A K) (@lem6386700 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386703 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386704 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1753 A K i' _79517 _79516 ltle k f i dom neut) = (term1749 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386703 A K ltle k f dom neut i') (@lem6386702 A K _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386705 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386706 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1758 A K i' _79517 _79516 ltle k f i dom neut) = (term1759 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386705) (@lem6386704 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386707 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1755 A K _79517 _79516 ltle k f i dom neut j) = (term1704 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1755 A K _79517 _79516 ltle k f i dom neut j)). Qed.
Lemma lem6386708 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386709 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1760 A K i' _79517 _79516 ltle k f i dom neut j) = (term1761 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386708 A K ltle k f dom neut i') (@lem6386707 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386710 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1762 A K i' _79517 _79516 ltle k f i dom neut) = (term1763 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386709 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386711 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386712 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1754 A K i' _79517 _79516 ltle k f i dom neut) = (term1764 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386711 A K) (@lem6386710 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386713 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1753 A K i' _79517 _79516 ltle k f i dom neut) = (term1754 A K i' _79517 _79516 ltle k f i dom neut)) = ((term1749 A K i' _79517 _79516 ltle k f i dom neut) = (term1764 A K i' _79517 _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386706 A K i' _79517 _79516 ltle k f i dom neut) (@lem6386712 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386714 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1749 A K i' _79517 _79516 ltle k f i dom neut) = (term1764 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386713 A K i' _79517 _79516 ltle k f i dom neut) (@lem6386698 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386716 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6386717 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6386716 K P Q). Qed.
Lemma lem6386718 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1765 A K i' _79517 j _79516 ltle k f i dom neut) = (term1766 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (@lem6386717 K (term1138 A K ltle k f dom neut i') (term1703 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386719 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1767 A K _79517 j _79516 ltle k f i dom neut x) = (term1701 A K _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1767 A K _79517 j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386720 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1768 A K _79517 j _79516 ltle k f i dom neut) = (term1703 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386719 A K _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386721 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386722 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1769 A K _79517 j _79516 ltle k f i dom neut) = (term1704 A K _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386721 K) (@lem6386720 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386723 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386724 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1765 A K i' _79517 j _79516 ltle k f i dom neut) = (term1761 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386723 A K ltle k f dom neut i') (@lem6386722 A K _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386725 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386726 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1770 A K i' _79517 j _79516 ltle k f i dom neut) = (term1771 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386725) (@lem6386724 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386727 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1767 A K _79517 j _79516 ltle k f i dom neut x) = (term1701 A K _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term1767 A K _79517 j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6386728 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term1721 A K ltle k f dom neut i').
Proof. exact (eq_refl (term1721 A K ltle k f dom neut i')). Qed.
Lemma lem6386729 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1772 A K i' _79517 j _79516 ltle k f i dom neut x) = (term1773 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6386728 A K ltle k f dom neut i') (@lem6386727 A K _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386730 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1774 A K i' _79517 j _79516 ltle k f i dom neut) = (term1775 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386729 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6386731 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386732 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1766 A K i' _79517 j _79516 ltle k f i dom neut) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386731 K) (@lem6386730 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386733 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1765 A K i' _79517 j _79516 ltle k f i dom neut) = (term1766 A K i' _79517 j _79516 ltle k f i dom neut)) = ((term1761 A K i' _79517 j _79516 ltle k f i dom neut) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6386726 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6386732 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386734 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1761 A K i' _79517 j _79516 ltle k f i dom neut) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6386733 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6386718 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386735 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1763 A K i' _79517 _79516 ltle k f i dom neut) = (term1777 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6386734 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6386736 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6386737 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1764 A K i' _79517 _79516 ltle k f i dom neut) = (term1778 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386736 A K) (@lem6386735 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386738 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1749 A K i' _79517 _79516 ltle k f i dom neut) = (term1778 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386714 A K i' _79517 _79516 ltle k f i dom neut) (@lem6386737 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386739 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1751 A K i' _79517 ltle k f i dom neut) = (term1779 A K i' _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6386738 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6386740 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386741 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1752 A K i' _79517 ltle k f i dom neut) = (term1780 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386740 A K) (@lem6386739 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386742 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1737 A K i' _79517 ltle k f i dom neut) = (term1780 A K i' _79517 ltle k f i dom neut).
Proof. exact (TRANS (@lem6386694 A K i' _79517 ltle k f i dom neut) (@lem6386741 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386743 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1739 A K i' ltle k f i dom neut) = (term1781 A K i' ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6386742 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6386744 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6386745 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1740 A K i' ltle k f i dom neut) = (term1782 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386744 A K) (@lem6386743 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386746 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1723 A K i' ltle k f i dom neut) = (term1782 A K i' ltle k f i dom neut).
Proof. exact (TRANS (@lem6386674 A K i' ltle k f i dom neut) (@lem6386745 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386747 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1725 A K ltle k f i dom neut) = (term1783 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6386746 A K i' ltle k f i dom neut)). Qed.
Lemma lem6386748 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386749 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1726 A K ltle k f i dom neut) = (term1784 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386748 K) (@lem6386747 A K ltle k f i dom neut)). Qed.
Lemma lem6386750 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1711 A K ltle k f i dom neut) = (term1784 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6386654 A K ltle k f i dom neut) (@lem6386749 A K ltle k f i dom neut)). Qed.
Lemma lem6386751 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1358 A K ltle k f i dom neut) = (term1784 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6386630 A K ltle k f i dom neut) (@lem6386750 A K ltle k f i dom neut)). Qed.
Lemma lem6386752 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386753 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1359 A K ltle k f i dom neut) = (term1785 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386752) (@lem6386751 A K ltle k f i dom neut)). Qed.
Lemma lem6386755 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386756 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386755 K P Q). Qed.
Lemma lem6386757 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1389 A K ltle k f dom neut i) = (term1390 A K ltle k f dom neut i).
Proof. exact (@lem6386756 K (term1391 A K f i dom neut) (term1165 A K ltle k f dom neut i)). Qed.
Lemma lem6386758 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1392 A K ltle k f dom neut i j) = (term1157 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut i j)). Qed.
Lemma lem6386759 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1393 A K ltle k f dom neut i) = (term1165 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6386758 A K ltle k f dom neut j i)). Qed.
Lemma lem6386760 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386761 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1394 A K ltle k f dom neut i) = (term1166 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386760 K) (@lem6386759 A K ltle k f dom neut i)). Qed.
Lemma lem6386762 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1167 A K f i dom neut) = (term1167 A K f i dom neut).
Proof. exact (eq_refl (term1167 A K f i dom neut)). Qed.
Lemma lem6386763 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1389 A K ltle k f dom neut i) = (term1169 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386762 A K f i dom neut) (@lem6386761 A K ltle k f dom neut i)). Qed.
Lemma lem6386764 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386765 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1395 A K ltle k f dom neut i) = (term1396 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386764) (@lem6386763 A K ltle k f dom neut i)). Qed.
Lemma lem6386766 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1392 A K ltle k f dom neut i j) = (term1157 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut i j)). Qed.
Lemma lem6386767 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1167 A K f i dom neut) = (term1167 A K f i dom neut).
Proof. exact (eq_refl (term1167 A K f i dom neut)). Qed.
Lemma lem6386768 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1397 A K ltle k f dom neut i j) = (term1398 A K ltle k f dom neut j i).
Proof. exact (MK_COMB (@lem6386767 A K f i dom neut) (@lem6386766 A K ltle k f dom neut j i)). Qed.
Lemma lem6386769 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1399 A K ltle k f dom neut i) = (term1400 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6386768 A K ltle k f dom neut j i)). Qed.
Lemma lem6386770 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386771 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1390 A K ltle k f dom neut i) = (term1401 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386770 K) (@lem6386769 A K ltle k f dom neut i)). Qed.
Lemma lem6386772 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term1389 A K ltle k f dom neut i) = (term1390 A K ltle k f dom neut i)) = ((term1169 A K ltle k f dom neut i) = (term1401 A K ltle k f dom neut i)).
Proof. exact (MK_COMB (@lem6386765 A K ltle k f dom neut i) (@lem6386771 A K ltle k f dom neut i)). Qed.
Lemma lem6386773 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1169 A K ltle k f dom neut i) = (term1401 A K ltle k f dom neut i).
Proof. exact (EQ_MP (@lem6386772 A K ltle k f dom neut i) (@lem6386757 A K ltle k f dom neut i)). Qed.
Lemma lem6386774 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term1171 K i k).
Proof. exact (eq_refl (term1171 K i k)). Qed.
Lemma lem6386775 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1173 A K ltle k f dom neut i) = (term1402 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386774 K i k) (@lem6386773 A K ltle k f dom neut i)). Qed.
Lemma lem6386777 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386778 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386777 K P Q). Qed.
Lemma lem6386779 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1403 A K ltle k f dom neut i) = (term1404 A K ltle k f dom neut i).
Proof. exact (@lem6386778 K (term1405 K i k) (term1400 A K ltle k f dom neut i)). Qed.
Lemma lem6386780 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1406 A K ltle k f dom neut i j) = (term1398 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut i j)). Qed.
Lemma lem6386781 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1407 A K ltle k f dom neut i) = (term1400 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6386780 A K ltle k f dom neut j i)). Qed.
Lemma lem6386782 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386783 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1408 A K ltle k f dom neut i) = (term1401 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386782 K) (@lem6386781 A K ltle k f dom neut i)). Qed.
Lemma lem6386784 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term1171 K i k).
Proof. exact (eq_refl (term1171 K i k)). Qed.
Lemma lem6386785 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1403 A K ltle k f dom neut i) = (term1402 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386784 K i k) (@lem6386783 A K ltle k f dom neut i)). Qed.
Lemma lem6386786 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386787 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1409 A K ltle k f dom neut i) = (term1410 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386786) (@lem6386785 A K ltle k f dom neut i)). Qed.
Lemma lem6386788 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1406 A K ltle k f dom neut i j) = (term1398 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut i j)). Qed.
Lemma lem6386789 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term1171 K i k).
Proof. exact (eq_refl (term1171 K i k)). Qed.
Lemma lem6386790 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1411 A K ltle k f dom neut i j) = (term1412 A K ltle k f dom neut j i).
Proof. exact (MK_COMB (@lem6386789 K i k) (@lem6386788 A K ltle k f dom neut j i)). Qed.
Lemma lem6386791 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1413 A K ltle k f dom neut i) = (term1414 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6386790 A K ltle k f dom neut j i)). Qed.
Lemma lem6386792 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386793 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1404 A K ltle k f dom neut i) = (term1415 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386792 K) (@lem6386791 A K ltle k f dom neut i)). Qed.
Lemma lem6386794 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((term1403 A K ltle k f dom neut i) = (term1404 A K ltle k f dom neut i)) = ((term1402 A K ltle k f dom neut i) = (term1415 A K ltle k f dom neut i)).
Proof. exact (MK_COMB (@lem6386787 A K ltle k f dom neut i) (@lem6386793 A K ltle k f dom neut i)). Qed.
Lemma lem6386795 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1402 A K ltle k f dom neut i) = (term1415 A K ltle k f dom neut i).
Proof. exact (EQ_MP (@lem6386794 A K ltle k f dom neut i) (@lem6386779 A K ltle k f dom neut i)). Qed.
Lemma lem6386796 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1173 A K ltle k f dom neut i) = (term1415 A K ltle k f dom neut i).
Proof. exact (TRANS (@lem6386775 A K ltle k f dom neut i) (@lem6386795 A K ltle k f dom neut i)). Qed.
Lemma lem6386797 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1248 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6386796 A K ltle k f dom neut i)). Qed.
Lemma lem6386798 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386799 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386798 K) (@lem6386797 A K ltle k f dom neut)). Qed.
Lemma lem6386801 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386802 {K : Type'} (P : type1402 K) : (term1418 K P) = (term1419 K P).
Proof. exact (@lem6386801 K K P). Qed.
Lemma lem6386803 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut).
Proof. exact (@lem6386802 K (term1422 A K ltle k f dom neut)). Qed.
Lemma lem6386804 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1423 A K ltle k f dom neut i) = (term1414 A K ltle k f dom neut i).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut i)). Qed.
Lemma lem6386805 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386806 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) (j : K) : (term1424 A K ltle k f dom neut i j) = (term1425 A K ltle k f dom neut i j).
Proof. exact (MK_COMB (@lem6386804 A K ltle k f dom neut i) (@lem6386805 K j)). Qed.
Lemma lem6386807 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1425 A K ltle k f dom neut i j) = (term1412 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1425 A K ltle k f dom neut i j)). Qed.
Lemma lem6386808 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i : K) : (term1424 A K ltle k f dom neut i j) = (term1412 A K ltle k f dom neut j i).
Proof. exact (TRANS (@lem6386806 A K ltle k f dom neut i j) (@lem6386807 A K ltle k f dom neut j i)). Qed.
Lemma lem6386809 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1426 A K ltle k f dom neut i) = (term1414 A K ltle k f dom neut i).
Proof. exact (fun_ext (fun j : K => @lem6386808 A K ltle k f dom neut j i)). Qed.
Lemma lem6386810 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386811 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1427 A K ltle k f dom neut i) = (term1415 A K ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6386810 K) (@lem6386809 A K ltle k f dom neut i)). Qed.
Lemma lem6386812 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1428 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6386811 A K ltle k f dom neut i)). Qed.
Lemma lem6386813 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386814 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386813 K) (@lem6386812 A K ltle k f dom neut)). Qed.
Lemma lem6386815 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386816 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1429 A K ltle k f dom neut) = (term1430 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386815) (@lem6386814 A K ltle k f dom neut)). Qed.
Lemma lem6386817 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1423 A K ltle k f dom neut i) = (term1414 A K ltle k f dom neut i).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut i)). Qed.
Lemma lem6386818 {K : Type'} (j : K -> K) (i : K) : (j i) = (j i).
Proof. exact (eq_refl (j i)). Qed.
Lemma lem6386819 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (i : K) : (term1431 A K ltle k f dom neut j i) = (term1432 A K ltle k f dom neut j i).
Proof. exact (MK_COMB (@lem6386817 A K ltle k f dom neut i) (@lem6386818 K j i)). Qed.
Lemma lem6386820 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (i : K) : (term1432 A K ltle k f dom neut j i) = (term1433 A K ltle k f dom neut j i).
Proof. exact (eq_refl (term1432 A K ltle k f dom neut j i)). Qed.
Lemma lem6386821 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (i : K) : (term1431 A K ltle k f dom neut j i) = (term1433 A K ltle k f dom neut j i).
Proof. exact (TRANS (@lem6386819 A K ltle k f dom neut j i) (@lem6386820 A K ltle k f dom neut j i)). Qed.
Lemma lem6386822 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1434 A K ltle k f dom neut j) = (term1435 A K ltle k f dom neut j).
Proof. exact (fun_ext (fun i : K => @lem6386821 A K ltle k f dom neut j i)). Qed.
Lemma lem6386823 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386824 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1436 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386823 K) (@lem6386822 A K ltle k f dom neut j)). Qed.
Lemma lem6386825 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1438 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386824 A K ltle k f dom neut j)). Qed.
Lemma lem6386826 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386827 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1421 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386826 K) (@lem6386825 A K ltle k f dom neut)). Qed.
Lemma lem6386828 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut)) = ((term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6386816 A K ltle k f dom neut) (@lem6386827 A K ltle k f dom neut)). Qed.
Lemma lem6386829 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (EQ_MP (@lem6386828 A K ltle k f dom neut) (@lem6386803 A K ltle k f dom neut)). Qed.
Lemma lem6386830 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (TRANS (@lem6386799 A K ltle k f dom neut) (@lem6386829 A K ltle k f dom neut)). Qed.
Lemma lem6386831 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6386832 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1275 A K ltle k f dom neut) = (term1786 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386831) (@lem6386830 A K ltle k f dom neut)). Qed.
Lemma lem6386834 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386835 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386834 K P Q). Qed.
Lemma lem6386836 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1389 A K ltle k f dom neut x) = (term1390 A K ltle k f dom neut x).
Proof. exact (@lem6386835 K (term1391 A K f x dom neut) (term1165 A K ltle k f dom neut x)). Qed.
Lemma lem6386837 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1392 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut x j)). Qed.
Lemma lem6386838 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1393 A K ltle k f dom neut x) = (term1165 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386837 A K ltle k f dom neut j x)). Qed.
Lemma lem6386839 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386840 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1394 A K ltle k f dom neut x) = (term1166 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386839 K) (@lem6386838 A K ltle k f dom neut x)). Qed.
Lemma lem6386841 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6386842 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1389 A K ltle k f dom neut x) = (term1169 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386841 A K f x dom neut) (@lem6386840 A K ltle k f dom neut x)). Qed.
Lemma lem6386843 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386844 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1395 A K ltle k f dom neut x) = (term1396 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386843) (@lem6386842 A K ltle k f dom neut x)). Qed.
Lemma lem6386845 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1392 A K ltle k f dom neut x j) = (term1157 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1392 A K ltle k f dom neut x j)). Qed.
Lemma lem6386846 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term1167 A K f x dom neut).
Proof. exact (eq_refl (term1167 A K f x dom neut)). Qed.
Lemma lem6386847 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1397 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386846 A K f x dom neut) (@lem6386845 A K ltle k f dom neut j x)). Qed.
Lemma lem6386848 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1399 A K ltle k f dom neut x) = (term1400 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386847 A K ltle k f dom neut j x)). Qed.
Lemma lem6386849 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386850 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1390 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386849 K) (@lem6386848 A K ltle k f dom neut x)). Qed.
Lemma lem6386851 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((term1389 A K ltle k f dom neut x) = (term1390 A K ltle k f dom neut x)) = ((term1169 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x)).
Proof. exact (MK_COMB (@lem6386844 A K ltle k f dom neut x) (@lem6386850 A K ltle k f dom neut x)). Qed.
Lemma lem6386852 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1169 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (EQ_MP (@lem6386851 A K ltle k f dom neut x) (@lem6386836 A K ltle k f dom neut x)). Qed.
Lemma lem6386853 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386854 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1173 A K ltle k f dom neut x) = (term1402 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386853 K x k) (@lem6386852 A K ltle k f dom neut x)). Qed.
Lemma lem6386856 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6386857 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6386856 K P Q). Qed.
Lemma lem6386858 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1403 A K ltle k f dom neut x) = (term1404 A K ltle k f dom neut x).
Proof. exact (@lem6386857 K (term1405 K x k) (term1400 A K ltle k f dom neut x)). Qed.
Lemma lem6386859 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1406 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut x j)). Qed.
Lemma lem6386860 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1407 A K ltle k f dom neut x) = (term1400 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386859 A K ltle k f dom neut j x)). Qed.
Lemma lem6386861 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386862 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1408 A K ltle k f dom neut x) = (term1401 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386861 K) (@lem6386860 A K ltle k f dom neut x)). Qed.
Lemma lem6386863 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386864 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1403 A K ltle k f dom neut x) = (term1402 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386863 K x k) (@lem6386862 A K ltle k f dom neut x)). Qed.
Lemma lem6386865 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386866 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1409 A K ltle k f dom neut x) = (term1410 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386865) (@lem6386864 A K ltle k f dom neut x)). Qed.
Lemma lem6386867 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1406 A K ltle k f dom neut x j) = (term1398 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1406 A K ltle k f dom neut x j)). Qed.
Lemma lem6386868 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term1171 K x k).
Proof. exact (eq_refl (term1171 K x k)). Qed.
Lemma lem6386869 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1411 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386868 K x k) (@lem6386867 A K ltle k f dom neut j x)). Qed.
Lemma lem6386870 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1413 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386869 A K ltle k f dom neut j x)). Qed.
Lemma lem6386871 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386872 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1404 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386871 K) (@lem6386870 A K ltle k f dom neut x)). Qed.
Lemma lem6386873 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((term1403 A K ltle k f dom neut x) = (term1404 A K ltle k f dom neut x)) = ((term1402 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x)).
Proof. exact (MK_COMB (@lem6386866 A K ltle k f dom neut x) (@lem6386872 A K ltle k f dom neut x)). Qed.
Lemma lem6386874 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1402 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (EQ_MP (@lem6386873 A K ltle k f dom neut x) (@lem6386858 A K ltle k f dom neut x)). Qed.
Lemma lem6386875 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1173 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (TRANS (@lem6386854 A K ltle k f dom neut x) (@lem6386874 A K ltle k f dom neut x)). Qed.
Lemma lem6386876 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1248 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386875 A K ltle k f dom neut x)). Qed.
Lemma lem6386877 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386878 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386877 K) (@lem6386876 A K ltle k f dom neut)). Qed.
Lemma lem6386880 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386881 {K : Type'} (P : type1402 K) : (term1418 K P) = (term1419 K P).
Proof. exact (@lem6386880 K K P). Qed.
Lemma lem6386882 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut).
Proof. exact (@lem6386881 K (term1422 A K ltle k f dom neut)). Qed.
Lemma lem6386883 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1423 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut x)). Qed.
Lemma lem6386884 {K : Type'} (j : K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386885 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (j : K) : (term1424 A K ltle k f dom neut x j) = (term1425 A K ltle k f dom neut x j).
Proof. exact (MK_COMB (@lem6386883 A K ltle k f dom neut x) (@lem6386884 K j)). Qed.
Lemma lem6386886 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1425 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1425 A K ltle k f dom neut x j)). Qed.
Lemma lem6386887 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (x : K) : (term1424 A K ltle k f dom neut x j) = (term1412 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6386885 A K ltle k f dom neut x j) (@lem6386886 A K ltle k f dom neut j x)). Qed.
Lemma lem6386888 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1426 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (fun_ext (fun j : K => @lem6386887 A K ltle k f dom neut j x)). Qed.
Lemma lem6386889 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6386890 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1427 A K ltle k f dom neut x) = (term1415 A K ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6386889 K) (@lem6386888 A K ltle k f dom neut x)). Qed.
Lemma lem6386891 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1428 A K ltle k f dom neut) = (term1416 A K ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6386890 A K ltle k f dom neut x)). Qed.
Lemma lem6386892 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386893 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1420 A K ltle k f dom neut) = (term1417 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386892 K) (@lem6386891 A K ltle k f dom neut)). Qed.
Lemma lem6386894 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386895 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1429 A K ltle k f dom neut) = (term1430 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386894) (@lem6386893 A K ltle k f dom neut)). Qed.
Lemma lem6386896 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term1423 A K ltle k f dom neut x) = (term1414 A K ltle k f dom neut x).
Proof. exact (eq_refl (term1423 A K ltle k f dom neut x)). Qed.
Lemma lem6386897 {K : Type'} (j : K -> K) (x : K) : (j x) = (j x).
Proof. exact (eq_refl (j x)). Qed.
Lemma lem6386898 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1431 A K ltle k f dom neut j x) = (term1432 A K ltle k f dom neut j x).
Proof. exact (MK_COMB (@lem6386896 A K ltle k f dom neut x) (@lem6386897 K j x)). Qed.
Lemma lem6386899 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1432 A K ltle k f dom neut j x) = (term1433 A K ltle k f dom neut j x).
Proof. exact (eq_refl (term1432 A K ltle k f dom neut j x)). Qed.
Lemma lem6386900 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) (x : K) : (term1431 A K ltle k f dom neut j x) = (term1433 A K ltle k f dom neut j x).
Proof. exact (TRANS (@lem6386898 A K ltle k f dom neut j x) (@lem6386899 A K ltle k f dom neut j x)). Qed.
Lemma lem6386901 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1434 A K ltle k f dom neut j) = (term1435 A K ltle k f dom neut j).
Proof. exact (fun_ext (fun x : K => @lem6386900 A K ltle k f dom neut j x)). Qed.
Lemma lem6386902 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6386903 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1436 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386902 K) (@lem6386901 A K ltle k f dom neut j)). Qed.
Lemma lem6386904 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1438 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386903 A K ltle k f dom neut j)). Qed.
Lemma lem6386905 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386906 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1421 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386905 K) (@lem6386904 A K ltle k f dom neut)). Qed.
Lemma lem6386907 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1420 A K ltle k f dom neut) = (term1421 A K ltle k f dom neut)) = ((term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6386895 A K ltle k f dom neut) (@lem6386906 A K ltle k f dom neut)). Qed.
Lemma lem6386908 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1417 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (EQ_MP (@lem6386907 A K ltle k f dom neut) (@lem6386882 A K ltle k f dom neut)). Qed.
Lemma lem6386909 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1249 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (TRANS (@lem6386878 A K ltle k f dom neut) (@lem6386908 A K ltle k f dom neut)). Qed.
Lemma lem6386910 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386911 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1341 A K ltle k f dom neut) = (term1441 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386910) (@lem6386909 A K ltle k f dom neut)). Qed.
Lemma lem6386912 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386913 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1342 A K _79516 ltle k f dom neut) = (term1442 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386911 A K ltle k f dom neut) (@lem6386912 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386915 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6386916 {K : Type'} (P : type488 K) (Q : Prop) : (term1445 K P Q) = (term1446 K P Q).
Proof. exact (@lem6386915 (K -> K) P Q). Qed.
Lemma lem6386917 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1447 A K _79516 ltle k f dom neut) = (term1448 A K _79516 ltle k f dom neut).
Proof. exact (@lem6386916 K (term1439 A K ltle k f dom neut) (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386918 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6386919 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1450 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386918 A K ltle k f dom neut j)). Qed.
Lemma lem6386920 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386921 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1451 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386920 K) (@lem6386919 A K ltle k f dom neut)). Qed.
Lemma lem6386922 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386923 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1452 A K ltle k f dom neut) = (term1441 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386922) (@lem6386921 A K ltle k f dom neut)). Qed.
Lemma lem6386924 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386925 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1447 A K _79516 ltle k f dom neut) = (term1442 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386923 A K ltle k f dom neut) (@lem6386924 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386926 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386927 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1453 A K _79516 ltle k f dom neut) = (term1454 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386926) (@lem6386925 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386928 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6386929 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6386930 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1455 A K ltle k f dom neut j) = (term1456 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386929) (@lem6386928 A K ltle k f dom neut j)). Qed.
Lemma lem6386931 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term1186 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1186 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386932 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1457 A K j _79516 ltle k f dom neut) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386930 A K ltle k f dom neut j) (@lem6386931 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386933 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1459 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386932 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386934 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386935 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1448 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386934 K) (@lem6386933 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386936 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1447 A K _79516 ltle k f dom neut) = (term1448 A K _79516 ltle k f dom neut)) = ((term1442 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6386927 A K _79516 ltle k f dom neut) (@lem6386935 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386937 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1442 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6386936 A K _79516 ltle k f dom neut) (@lem6386917 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386938 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1342 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386913 A K _79516 ltle k f dom neut) (@lem6386937 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386939 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1343 A K _79516 ltle k f dom) = (term1462 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386938 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386940 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386941 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1344 A K _79516 ltle k f dom) = (term1463 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386940 A) (@lem6386939 A K _79516 ltle k f dom)). Qed.
Lemma lem6386943 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386944 {A K : Type'} (P : type1373 A K) : (term1464 A K P) = (term1465 A K P).
Proof. exact (@lem6386943 A (K -> K) P). Qed.
Lemma lem6386945 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1466 A K _79516 ltle k f dom) = (term1467 A K _79516 ltle k f dom).
Proof. exact (@lem6386944 A K (term1468 A K _79516 ltle k f dom)). Qed.
Lemma lem6386946 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1469 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1469 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386947 {K : Type'} (j : K -> K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386948 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1470 A K _79516 ltle k f dom neut j) = (term1471 A K _79516 ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6386946 A K _79516 ltle k f dom neut) (@lem6386947 K j)). Qed.
Lemma lem6386949 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1471 A K _79516 ltle k f dom neut j) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1471 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6386950 {A K : Type'} (j : K -> K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1470 A K _79516 ltle k f dom neut j) = (term1458 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386948 A K _79516 ltle k f dom neut j) (@lem6386949 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386951 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1472 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6386950 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386952 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6386953 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1473 A K _79516 ltle k f dom neut) = (term1461 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6386952 K) (@lem6386951 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386954 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1474 A K _79516 ltle k f dom) = (term1462 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386953 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386955 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386956 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1466 A K _79516 ltle k f dom) = (term1463 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386955 A) (@lem6386954 A K _79516 ltle k f dom)). Qed.
Lemma lem6386957 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386958 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1475 A K _79516 ltle k f dom) = (term1476 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386957) (@lem6386956 A K _79516 ltle k f dom)). Qed.
Lemma lem6386959 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1469 A K _79516 ltle k f dom neut) = (term1460 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1469 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6386960 {A K : Type'} (j : type1411 A K) (neut : A) : (j neut) = (j neut).
Proof. exact (eq_refl (j neut)). Qed.
Lemma lem6386961 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (j : type1411 A K) (neut : A) : (term1477 A K _79516 ltle k f dom j neut) = (term1478 A K _79516 ltle k f dom j neut).
Proof. exact (MK_COMB (@lem6386959 A K _79516 ltle k f dom neut) (@lem6386960 A K j neut)). Qed.
Lemma lem6386962 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1478 A K _79516 ltle k f dom j neut) = (term1479 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term1478 A K _79516 ltle k f dom j neut)). Qed.
Lemma lem6386963 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1477 A K _79516 ltle k f dom j neut) = (term1479 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6386961 A K _79516 ltle k f dom j neut) (@lem6386962 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386964 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1480 A K _79516 ltle k f dom j) = (term1481 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6386963 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6386965 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6386966 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1482 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386965 A) (@lem6386964 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386967 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1484 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6386966 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386968 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6386969 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1467 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386968 A K) (@lem6386967 A K _79516 ltle k f dom)). Qed.
Lemma lem6386970 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : ((term1466 A K _79516 ltle k f dom) = (term1467 A K _79516 ltle k f dom)) = ((term1463 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom)).
Proof. exact (MK_COMB (@lem6386958 A K _79516 ltle k f dom) (@lem6386969 A K _79516 ltle k f dom)). Qed.
Lemma lem6386971 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1463 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (EQ_MP (@lem6386970 A K _79516 ltle k f dom) (@lem6386945 A K _79516 ltle k f dom)). Qed.
Lemma lem6386972 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1344 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386941 A K _79516 ltle k f dom) (@lem6386971 A K _79516 ltle k f dom)). Qed.
Lemma lem6386973 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1345 A K _79516 ltle k f) = (term1487 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386972 A K _79516 ltle k f dom)). Qed.
Lemma lem6386974 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386975 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1346 A K _79516 ltle k f) = (term1488 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386974 A) (@lem6386973 A K _79516 ltle k f)). Qed.
Lemma lem6386977 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6386978 {A K : Type'} (P : type612 A K) : (term1489 A K P) = (term1490 A K P).
Proof. exact (@lem6386977 (A -> Prop) (type1411 A K) P). Qed.
Lemma lem6386979 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1491 A K _79516 ltle k f) = (term1492 A K _79516 ltle k f).
Proof. exact (@lem6386978 A K (term1493 A K _79516 ltle k f)). Qed.
Lemma lem6386980 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1494 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term1494 A K _79516 ltle k f dom)). Qed.
Lemma lem6386981 {A K : Type'} (j : type1411 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6386982 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (j : type1411 A K) : (term1495 A K _79516 ltle k f dom j) = (term1496 A K _79516 ltle k f dom j).
Proof. exact (MK_COMB (@lem6386980 A K _79516 ltle k f dom) (@lem6386981 A K j)). Qed.
Lemma lem6386983 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1496 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (eq_refl (term1496 A K _79516 ltle k f dom j)). Qed.
Lemma lem6386984 {A K : Type'} (j : type1411 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1495 A K _79516 ltle k f dom j) = (term1483 A K j _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386982 A K _79516 ltle k f dom j) (@lem6386983 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386985 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1497 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (fun_ext (fun j : type1411 A K => @lem6386984 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386986 {A K : Type'} : (@ex (A -> K -> K)) = (@ex (A -> K -> K)).
Proof. exact (eq_refl (@ex (A -> K -> K))). Qed.
Lemma lem6386987 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1498 A K _79516 ltle k f dom) = (term1486 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6386986 A K) (@lem6386985 A K _79516 ltle k f dom)). Qed.
Lemma lem6386988 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1499 A K _79516 ltle k f) = (term1487 A K _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386987 A K _79516 ltle k f dom)). Qed.
Lemma lem6386989 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6386990 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1491 A K _79516 ltle k f) = (term1488 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386989 A) (@lem6386988 A K _79516 ltle k f)). Qed.
Lemma lem6386991 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6386992 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1500 A K _79516 ltle k f) = (term1501 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386991) (@lem6386990 A K _79516 ltle k f)). Qed.
Lemma lem6386993 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1494 A K _79516 ltle k f dom) = (term1485 A K _79516 ltle k f dom).
Proof. exact (eq_refl (term1494 A K _79516 ltle k f dom)). Qed.
Lemma lem6386994 {A K : Type'} (j : type668 A K) (dom : A -> Prop) : (j dom) = (j dom).
Proof. exact (eq_refl (j dom)). Qed.
Lemma lem6386995 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : type668 A K) (dom : A -> Prop) : (term1502 A K _79516 ltle k f j dom) = (term1503 A K _79516 ltle k f j dom).
Proof. exact (MK_COMB (@lem6386993 A K _79516 ltle k f dom) (@lem6386994 A K j dom)). Qed.
Lemma lem6386996 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1503 A K _79516 ltle k f j dom) = (term1504 A K j _79516 ltle k f dom).
Proof. exact (eq_refl (term1503 A K _79516 ltle k f j dom)). Qed.
Lemma lem6386997 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1502 A K _79516 ltle k f j dom) = (term1504 A K j _79516 ltle k f dom).
Proof. exact (TRANS (@lem6386995 A K _79516 ltle k f j dom) (@lem6386996 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386998 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1505 A K _79516 ltle k f j) = (term1506 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6386997 A K j _79516 ltle k f dom)). Qed.
Lemma lem6386999 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6387000 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1507 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6386999 A) (@lem6386998 A K j _79516 ltle k f)). Qed.
Lemma lem6387001 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1509 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (fun_ext (fun j : type668 A K => @lem6387000 A K j _79516 ltle k f)). Qed.
Lemma lem6387002 {A K : Type'} : (@ex ((A -> Prop) -> A -> K -> K)) = (@ex ((A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387003 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1492 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6387002 A K) (@lem6387001 A K _79516 ltle k f)). Qed.
Lemma lem6387004 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : ((term1491 A K _79516 ltle k f) = (term1492 A K _79516 ltle k f)) = ((term1488 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f)).
Proof. exact (MK_COMB (@lem6386992 A K _79516 ltle k f) (@lem6387003 A K _79516 ltle k f)). Qed.
Lemma lem6387005 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1488 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (EQ_MP (@lem6387004 A K _79516 ltle k f) (@lem6386979 A K _79516 ltle k f)). Qed.
Lemma lem6387006 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1346 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6386975 A K _79516 ltle k f) (@lem6387005 A K _79516 ltle k f)). Qed.
Lemma lem6387007 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1347 A K _79516 ltle k) = (term1512 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6387006 A K _79516 ltle k f)). Qed.
Lemma lem6387008 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6387009 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1348 A K _79516 ltle k) = (term1513 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6387008 A K) (@lem6387007 A K _79516 ltle k)). Qed.
Lemma lem6387011 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6387012 {A K : Type'} (P : type770 A K) : (term1514 A K P) = (term1515 A K P).
Proof. exact (@lem6387011 (K -> A) (type668 A K) P). Qed.
Lemma lem6387013 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1516 A K _79516 ltle k) = (term1517 A K _79516 ltle k).
Proof. exact (@lem6387012 A K (term1518 A K _79516 ltle k)). Qed.
Lemma lem6387014 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (eq_refl (term1519 A K _79516 ltle k f)). Qed.
Lemma lem6387015 {A K : Type'} (j : type668 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6387016 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : type668 A K) : (term1520 A K _79516 ltle k f j) = (term1521 A K _79516 ltle k f j).
Proof. exact (MK_COMB (@lem6387014 A K _79516 ltle k f) (@lem6387015 A K j)). Qed.
Lemma lem6387017 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1521 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (eq_refl (term1521 A K _79516 ltle k f j)). Qed.
Lemma lem6387018 {A K : Type'} (j : type668 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1520 A K _79516 ltle k f j) = (term1508 A K j _79516 ltle k f).
Proof. exact (TRANS (@lem6387016 A K _79516 ltle k f j) (@lem6387017 A K j _79516 ltle k f)). Qed.
Lemma lem6387019 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1522 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (fun_ext (fun j : type668 A K => @lem6387018 A K j _79516 ltle k f)). Qed.
Lemma lem6387020 {A K : Type'} : (@ex ((A -> Prop) -> A -> K -> K)) = (@ex ((A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387021 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1523 A K _79516 ltle k f) = (term1511 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6387020 A K) (@lem6387019 A K _79516 ltle k f)). Qed.
Lemma lem6387022 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1524 A K _79516 ltle k) = (term1512 A K _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6387021 A K _79516 ltle k f)). Qed.
Lemma lem6387023 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6387024 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1516 A K _79516 ltle k) = (term1513 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6387023 A K) (@lem6387022 A K _79516 ltle k)). Qed.
Lemma lem6387025 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387026 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1525 A K _79516 ltle k) = (term1526 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6387025) (@lem6387024 A K _79516 ltle k)). Qed.
Lemma lem6387027 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1519 A K _79516 ltle k f) = (term1510 A K _79516 ltle k f).
Proof. exact (eq_refl (term1519 A K _79516 ltle k f)). Qed.
Lemma lem6387028 {A K : Type'} (j : type780 A K) (f : K -> A) : (j f) = (j f).
Proof. exact (eq_refl (j f)). Qed.
Lemma lem6387029 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (j : type780 A K) (f : K -> A) : (term1527 A K _79516 ltle k j f) = (term1528 A K _79516 ltle k j f).
Proof. exact (MK_COMB (@lem6387027 A K _79516 ltle k f) (@lem6387028 A K j f)). Qed.
Lemma lem6387030 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1528 A K _79516 ltle k j f) = (term1529 A K j _79516 ltle k f).
Proof. exact (eq_refl (term1528 A K _79516 ltle k j f)). Qed.
Lemma lem6387031 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1527 A K _79516 ltle k j f) = (term1529 A K j _79516 ltle k f).
Proof. exact (TRANS (@lem6387029 A K _79516 ltle k j f) (@lem6387030 A K j _79516 ltle k f)). Qed.
Lemma lem6387032 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1530 A K _79516 ltle k j) = (term1531 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6387031 A K j _79516 ltle k f)). Qed.
Lemma lem6387033 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6387034 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1532 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6387033 A K) (@lem6387032 A K j _79516 ltle k)). Qed.
Lemma lem6387035 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1534 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (fun_ext (fun j : type780 A K => @lem6387034 A K j _79516 ltle k)). Qed.
Lemma lem6387036 {A K : Type'} : (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387037 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1517 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6387036 A K) (@lem6387035 A K _79516 ltle k)). Qed.
Lemma lem6387038 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : ((term1516 A K _79516 ltle k) = (term1517 A K _79516 ltle k)) = ((term1513 A K _79516 ltle k) = (term1536 A K _79516 ltle k)).
Proof. exact (MK_COMB (@lem6387026 A K _79516 ltle k) (@lem6387037 A K _79516 ltle k)). Qed.
Lemma lem6387039 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1513 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (EQ_MP (@lem6387038 A K _79516 ltle k) (@lem6387013 A K _79516 ltle k)). Qed.
Lemma lem6387040 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1348 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (TRANS (@lem6387009 A K _79516 ltle k) (@lem6387039 A K _79516 ltle k)). Qed.
Lemma lem6387041 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1349 A K _79516 ltle) = (term1537 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6387040 A K _79516 ltle k)). Qed.
Lemma lem6387042 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6387043 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1350 A K _79516 ltle) = (term1538 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6387042 K) (@lem6387041 A K _79516 ltle)). Qed.
Lemma lem6387045 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6387046 {A K : Type'} (P : type826 A K) : (term1539 A K P) = (term1540 A K P).
Proof. exact (@lem6387045 (K -> Prop) (type780 A K) P). Qed.
Lemma lem6387047 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1541 A K _79516 ltle) = (term1542 A K _79516 ltle).
Proof. exact (@lem6387046 A K (term1543 A K _79516 ltle)). Qed.
Lemma lem6387048 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1544 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (eq_refl (term1544 A K _79516 ltle k)). Qed.
Lemma lem6387049 {A K : Type'} (j : type780 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6387050 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (j : type780 A K) : (term1545 A K _79516 ltle k j) = (term1546 A K _79516 ltle k j).
Proof. exact (MK_COMB (@lem6387048 A K _79516 ltle k) (@lem6387049 A K j)). Qed.
Lemma lem6387051 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1546 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (eq_refl (term1546 A K _79516 ltle k j)). Qed.
Lemma lem6387052 {A K : Type'} (j : type780 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1545 A K _79516 ltle k j) = (term1533 A K j _79516 ltle k).
Proof. exact (TRANS (@lem6387050 A K _79516 ltle k j) (@lem6387051 A K j _79516 ltle k)). Qed.
Lemma lem6387053 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1547 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (fun_ext (fun j : type780 A K => @lem6387052 A K j _79516 ltle k)). Qed.
Lemma lem6387054 {A K : Type'} : (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387055 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1548 A K _79516 ltle k) = (term1536 A K _79516 ltle k).
Proof. exact (MK_COMB (@lem6387054 A K) (@lem6387053 A K _79516 ltle k)). Qed.
Lemma lem6387056 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1549 A K _79516 ltle) = (term1537 A K _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6387055 A K _79516 ltle k)). Qed.
Lemma lem6387057 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6387058 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1541 A K _79516 ltle) = (term1538 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6387057 K) (@lem6387056 A K _79516 ltle)). Qed.
Lemma lem6387059 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387060 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1550 A K _79516 ltle) = (term1551 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6387059) (@lem6387058 A K _79516 ltle)). Qed.
Lemma lem6387061 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1544 A K _79516 ltle k) = (term1535 A K _79516 ltle k).
Proof. exact (eq_refl (term1544 A K _79516 ltle k)). Qed.
Lemma lem6387062 {A K : Type'} (j : type848 A K) (k : K -> Prop) : (j k) = (j k).
Proof. exact (eq_refl (j k)). Qed.
Lemma lem6387063 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (j : type848 A K) (k : K -> Prop) : (term1552 A K _79516 ltle j k) = (term1553 A K _79516 ltle j k).
Proof. exact (MK_COMB (@lem6387061 A K _79516 ltle k) (@lem6387062 A K j k)). Qed.
Lemma lem6387064 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1553 A K _79516 ltle j k) = (term1554 A K j _79516 ltle k).
Proof. exact (eq_refl (term1553 A K _79516 ltle j k)). Qed.
Lemma lem6387065 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term1552 A K _79516 ltle j k) = (term1554 A K j _79516 ltle k).
Proof. exact (TRANS (@lem6387063 A K _79516 ltle j k) (@lem6387064 A K j _79516 ltle k)). Qed.
Lemma lem6387066 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1555 A K _79516 ltle j) = (term1556 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6387065 A K j _79516 ltle k)). Qed.
Lemma lem6387067 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6387068 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1557 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6387067 K) (@lem6387066 A K j _79516 ltle)). Qed.
Lemma lem6387069 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1559 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (fun_ext (fun j : type848 A K => @lem6387068 A K j _79516 ltle)). Qed.
Lemma lem6387070 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387071 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1542 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6387070 A K) (@lem6387069 A K _79516 ltle)). Qed.
Lemma lem6387072 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : ((term1541 A K _79516 ltle) = (term1542 A K _79516 ltle)) = ((term1538 A K _79516 ltle) = (term1561 A K _79516 ltle)).
Proof. exact (MK_COMB (@lem6387060 A K _79516 ltle) (@lem6387071 A K _79516 ltle)). Qed.
Lemma lem6387073 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1538 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (EQ_MP (@lem6387072 A K _79516 ltle) (@lem6387047 A K _79516 ltle)). Qed.
Lemma lem6387074 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1350 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (TRANS (@lem6387043 A K _79516 ltle) (@lem6387073 A K _79516 ltle)). Qed.
Lemma lem6387075 {A K : Type'} (_79516 : type758 A K) : (term1351 A K _79516) = (term1562 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6387074 A K _79516 ltle)). Qed.
Lemma lem6387076 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6387077 {A K : Type'} (_79516 : type758 A K) : (term1352 A K _79516) = (term1563 A K _79516).
Proof. exact (MK_COMB (@lem6387076 K) (@lem6387075 A K _79516)). Qed.
Lemma lem6387079 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6387080 {A K : Type'} (P : type753 A K) : (term1564 A K P) = (term1565 A K P).
Proof. exact (@lem6387079 (type1402 K) (type848 A K) P). Qed.
Lemma lem6387081 {A K : Type'} (_79516 : type758 A K) : (term1566 A K _79516) = (term1567 A K _79516).
Proof. exact (@lem6387080 A K (term1568 A K _79516)). Qed.
Lemma lem6387082 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1569 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (eq_refl (term1569 A K _79516 ltle)). Qed.
Lemma lem6387083 {A K : Type'} (j : type848 A K) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6387084 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (j : type848 A K) : (term1570 A K _79516 ltle j) = (term1571 A K _79516 ltle j).
Proof. exact (MK_COMB (@lem6387082 A K _79516 ltle) (@lem6387083 A K j)). Qed.
Lemma lem6387085 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1571 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (eq_refl (term1571 A K _79516 ltle j)). Qed.
Lemma lem6387086 {A K : Type'} (j : type848 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1570 A K _79516 ltle j) = (term1558 A K j _79516 ltle).
Proof. exact (TRANS (@lem6387084 A K _79516 ltle j) (@lem6387085 A K j _79516 ltle)). Qed.
Lemma lem6387087 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1572 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (fun_ext (fun j : type848 A K => @lem6387086 A K j _79516 ltle)). Qed.
Lemma lem6387088 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387089 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1573 A K _79516 ltle) = (term1561 A K _79516 ltle).
Proof. exact (MK_COMB (@lem6387088 A K) (@lem6387087 A K _79516 ltle)). Qed.
Lemma lem6387090 {A K : Type'} (_79516 : type758 A K) : (term1574 A K _79516) = (term1562 A K _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6387089 A K _79516 ltle)). Qed.
Lemma lem6387091 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6387092 {A K : Type'} (_79516 : type758 A K) : (term1566 A K _79516) = (term1563 A K _79516).
Proof. exact (MK_COMB (@lem6387091 K) (@lem6387090 A K _79516)). Qed.
Lemma lem6387093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387094 {A K : Type'} (_79516 : type758 A K) : (term1575 A K _79516) = (term1576 A K _79516).
Proof. exact (MK_COMB (@lem6387093) (@lem6387092 A K _79516)). Qed.
Lemma lem6387095 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (term1569 A K _79516 ltle) = (term1560 A K _79516 ltle).
Proof. exact (eq_refl (term1569 A K _79516 ltle)). Qed.
Lemma lem6387096 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (j ltle).
Proof. exact (eq_refl (j ltle)). Qed.
Lemma lem6387097 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (ltle : type1402 K) : (term1577 A K _79516 j ltle) = (term1578 A K _79516 j ltle).
Proof. exact (MK_COMB (@lem6387095 A K _79516 ltle) (@lem6387096 A K j ltle)). Qed.
Lemma lem6387098 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1578 A K _79516 j ltle) = (term1579 A K j _79516 ltle).
Proof. exact (eq_refl (term1578 A K _79516 j ltle)). Qed.
Lemma lem6387099 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1577 A K _79516 j ltle) = (term1579 A K j _79516 ltle).
Proof. exact (TRANS (@lem6387097 A K _79516 j ltle) (@lem6387098 A K j _79516 ltle)). Qed.
Lemma lem6387100 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1580 A K _79516 j) = (term1581 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6387099 A K j _79516 ltle)). Qed.
Lemma lem6387101 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6387102 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1582 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (MK_COMB (@lem6387101 K) (@lem6387100 A K j _79516)). Qed.
Lemma lem6387103 {A K : Type'} (_79516 : type758 A K) : (term1584 A K _79516) = (term1585 A K _79516).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387102 A K j _79516)). Qed.
Lemma lem6387104 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387105 {A K : Type'} (_79516 : type758 A K) : (term1567 A K _79516) = (term1586 A K _79516).
Proof. exact (MK_COMB (@lem6387104 A K) (@lem6387103 A K _79516)). Qed.
Lemma lem6387106 {A K : Type'} (_79516 : type758 A K) : ((term1566 A K _79516) = (term1567 A K _79516)) = ((term1563 A K _79516) = (term1586 A K _79516)).
Proof. exact (MK_COMB (@lem6387094 A K _79516) (@lem6387105 A K _79516)). Qed.
Lemma lem6387107 {A K : Type'} (_79516 : type758 A K) : (term1563 A K _79516) = (term1586 A K _79516).
Proof. exact (EQ_MP (@lem6387106 A K _79516) (@lem6387081 A K _79516)). Qed.
Lemma lem6387108 {A K : Type'} (_79516 : type758 A K) : (term1352 A K _79516) = (term1586 A K _79516).
Proof. exact (TRANS (@lem6387077 A K _79516) (@lem6387107 A K _79516)). Qed.
Lemma lem6387109 {A K : Type'} : (term1378 A K) = (term1787 A K).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387108 A K _79516)). Qed.
Lemma lem6387110 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387111 {A K : Type'} : (term1379 A K) = (term1788 A K).
Proof. exact (MK_COMB (@lem6387110 A K) (@lem6387109 A K)). Qed.
Lemma lem6387112 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387113 {A K : Type'} : (term1380 A K) = (term1789 A K).
Proof. exact (MK_COMB (@lem6387112) (@lem6387111 A K)). Qed.
Lemma lem6387115 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6387116 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1284 K P Q) = (term1283 K P Q).
Proof. exact (@lem6387115 K P Q). Qed.
Lemma lem6387117 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1588 A K k f i dom neut) = (term1589 A K k f i dom neut).
Proof. exact (@lem6387116 K (term705 A K k f dom neut) (term1125 A K k f i dom neut)). Qed.
Lemma lem6387118 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6387119 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1590 A K k f dom neut) = (term705 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387118 A K k f x dom neut)). Qed.
Lemma lem6387120 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387121 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1591 A K k f dom neut) = (term821 A K k f dom neut).
Proof. exact (MK_COMB (@lem6387120 K) (@lem6387119 A K k f dom neut)). Qed.
Lemma lem6387122 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387123 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1592 A K k f dom neut) = (term1203 A K k f dom neut).
Proof. exact (MK_COMB (@lem6387122) (@lem6387121 A K k f dom neut)). Qed.
Lemma lem6387124 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (eq_refl (term1125 A K k f i dom neut)). Qed.
Lemma lem6387125 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1588 A K k f i dom neut) = (term1205 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387123 A K k f dom neut) (@lem6387124 A K k f i dom neut)). Qed.
Lemma lem6387126 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387127 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1593 A K k f i dom neut) = (term1594 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387126) (@lem6387125 A K k f i dom neut)). Qed.
Lemma lem6387128 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term704 A K k f dom neut x) = (term706 A K k f x dom neut).
Proof. exact (eq_refl (term704 A K k f dom neut x)). Qed.
Lemma lem6387129 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387130 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1595 A K k f dom neut x) = (term785 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6387129) (@lem6387128 A K k f x dom neut)). Qed.
Lemma lem6387131 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term1125 A K k f i dom neut).
Proof. exact (eq_refl (term1125 A K k f i dom neut)). Qed.
Lemma lem6387132 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1596 A K x k f i dom neut) = (term1597 A K x k f i dom neut).
Proof. exact (MK_COMB (@lem6387130 A K k f x dom neut) (@lem6387131 A K k f i dom neut)). Qed.
Lemma lem6387133 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1598 A K k f i dom neut) = (term1599 A K k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387132 A K x k f i dom neut)). Qed.
Lemma lem6387134 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387135 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1589 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387134 K) (@lem6387133 A K k f i dom neut)). Qed.
Lemma lem6387136 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1588 A K k f i dom neut) = (term1589 A K k f i dom neut)) = ((term1205 A K k f i dom neut) = (term1600 A K k f i dom neut)).
Proof. exact (MK_COMB (@lem6387127 A K k f i dom neut) (@lem6387135 A K k f i dom neut)). Qed.
Lemma lem6387137 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1205 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (EQ_MP (@lem6387136 A K k f i dom neut) (@lem6387117 A K k f i dom neut)). Qed.
Lemma lem6387138 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1250 A K _79517 k f dom neut i) = (term1250 A K _79517 k f dom neut i).
Proof. exact (eq_refl (term1250 A K _79517 k f dom neut i)). Qed.
Lemma lem6387139 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1252 A K _79517 k f i dom neut) = (term1790 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387138 A K _79517 k f dom neut i) (@lem6387137 A K k f i dom neut)). Qed.
Lemma lem6387141 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387142 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6387141 K P Q). Qed.
Lemma lem6387143 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1791 A K _79517 k f i dom neut) = (term1792 A K _79517 k f i dom neut).
Proof. exact (@lem6387142 K ((_79517 k f dom neut) = i) (term1599 A K k f i dom neut)). Qed.
Lemma lem6387144 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1606 A K k f i dom neut x) = (term1597 A K x k f i dom neut).
Proof. exact (eq_refl (term1606 A K k f i dom neut x)). Qed.
Lemma lem6387145 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1607 A K k f i dom neut) = (term1599 A K k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387144 A K x k f i dom neut)). Qed.
Lemma lem6387146 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387147 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1608 A K k f i dom neut) = (term1600 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387146 K) (@lem6387145 A K k f i dom neut)). Qed.
Lemma lem6387148 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1250 A K _79517 k f dom neut i) = (term1250 A K _79517 k f dom neut i).
Proof. exact (eq_refl (term1250 A K _79517 k f dom neut i)). Qed.
Lemma lem6387149 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1791 A K _79517 k f i dom neut) = (term1790 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387148 A K _79517 k f dom neut i) (@lem6387147 A K k f i dom neut)). Qed.
Lemma lem6387150 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387151 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1793 A K _79517 k f i dom neut) = (term1794 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387150) (@lem6387149 A K _79517 k f i dom neut)). Qed.
Lemma lem6387152 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1606 A K k f i dom neut x) = (term1597 A K x k f i dom neut).
Proof. exact (eq_refl (term1606 A K k f i dom neut x)). Qed.
Lemma lem6387153 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1250 A K _79517 k f dom neut i) = (term1250 A K _79517 k f dom neut i).
Proof. exact (eq_refl (term1250 A K _79517 k f dom neut i)). Qed.
Lemma lem6387154 {A K : Type'} (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1795 A K _79517 k f i dom neut x) = (term1796 A K _79517 x k f i dom neut).
Proof. exact (MK_COMB (@lem6387153 A K _79517 k f dom neut i) (@lem6387152 A K x k f i dom neut)). Qed.
Lemma lem6387155 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1797 A K _79517 k f i dom neut) = (term1798 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387154 A K _79517 x k f i dom neut)). Qed.
Lemma lem6387156 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387157 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1792 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387156 K) (@lem6387155 A K _79517 k f i dom neut)). Qed.
Lemma lem6387158 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1791 A K _79517 k f i dom neut) = (term1792 A K _79517 k f i dom neut)) = ((term1790 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387151 A K _79517 k f i dom neut) (@lem6387157 A K _79517 k f i dom neut)). Qed.
Lemma lem6387159 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1790 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387158 A K _79517 k f i dom neut) (@lem6387143 A K _79517 k f i dom neut)). Qed.
Lemma lem6387160 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1252 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387139 A K _79517 k f i dom neut) (@lem6387159 A K _79517 k f i dom neut)). Qed.
Lemma lem6387161 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1381 A K _79517 k f i dom neut) = (term1800 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387113 A K) (@lem6387160 A K _79517 k f i dom neut)). Qed.
Lemma lem6387163 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6387164 {A K : Type'} (P : type193 A K) (Q : Prop) : (term1362 A K P Q) = (term1361 A K P Q).
Proof. exact (@lem6387163 (type758 A K) P Q). Qed.
Lemma lem6387165 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1801 A K _79517 k f i dom neut) = (term1802 A K _79517 k f i dom neut).
Proof. exact (@lem6387164 A K (term1787 A K) (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387166 {A K : Type'} (_79516 : type758 A K) : (term1803 A K _79516) = (term1586 A K _79516).
Proof. exact (eq_refl (term1803 A K _79516)). Qed.
Lemma lem6387167 {A K : Type'} : (term1804 A K) = (term1787 A K).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387166 A K _79516)). Qed.
Lemma lem6387168 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387169 {A K : Type'} : (term1805 A K) = (term1788 A K).
Proof. exact (MK_COMB (@lem6387168 A K) (@lem6387167 A K)). Qed.
Lemma lem6387170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387171 {A K : Type'} : (term1806 A K) = (term1789 A K).
Proof. exact (MK_COMB (@lem6387170) (@lem6387169 A K)). Qed.
Lemma lem6387172 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1799 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387173 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1801 A K _79517 k f i dom neut) = (term1800 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387171 A K) (@lem6387172 A K _79517 k f i dom neut)). Qed.
Lemma lem6387174 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387175 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1807 A K _79517 k f i dom neut) = (term1808 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387174) (@lem6387173 A K _79517 k f i dom neut)). Qed.
Lemma lem6387176 {A K : Type'} (_79516 : type758 A K) : (term1803 A K _79516) = (term1586 A K _79516).
Proof. exact (eq_refl (term1803 A K _79516)). Qed.
Lemma lem6387177 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387178 {A K : Type'} (_79516 : type758 A K) : (term1809 A K _79516) = (term1587 A K _79516).
Proof. exact (MK_COMB (@lem6387177) (@lem6387176 A K _79516)). Qed.
Lemma lem6387179 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1799 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387180 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1810 A K _79516 _79517 k f i dom neut) = (term1811 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387178 A K _79516) (@lem6387179 A K _79517 k f i dom neut)). Qed.
Lemma lem6387181 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1812 A K _79517 k f i dom neut) = (term1813 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387180 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387182 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387183 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1802 A K _79517 k f i dom neut) = (term1814 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387182 A K) (@lem6387181 A K _79517 k f i dom neut)). Qed.
Lemma lem6387184 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1801 A K _79517 k f i dom neut) = (term1802 A K _79517 k f i dom neut)) = ((term1800 A K _79517 k f i dom neut) = (term1814 A K _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387175 A K _79517 k f i dom neut) (@lem6387183 A K _79517 k f i dom neut)). Qed.
Lemma lem6387185 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1800 A K _79517 k f i dom neut) = (term1814 A K _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387184 A K _79517 k f i dom neut) (@lem6387165 A K _79517 k f i dom neut)). Qed.
Lemma lem6387187 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6387188 {A K : Type'} (P : type192 A K) (Q : Prop) : (term1617 A K P Q) = (term1618 A K P Q).
Proof. exact (@lem6387187 (type757 A K) P Q). Qed.
Lemma lem6387189 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1815 A K _79516 _79517 k f i dom neut) = (term1816 A K _79516 _79517 k f i dom neut).
Proof. exact (@lem6387188 A K (term1585 A K _79516) (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387190 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1621 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (eq_refl (term1621 A K _79516 j)). Qed.
Lemma lem6387191 {A K : Type'} (_79516 : type758 A K) : (term1622 A K _79516) = (term1585 A K _79516).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387190 A K j _79516)). Qed.
Lemma lem6387192 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387193 {A K : Type'} (_79516 : type758 A K) : (term1623 A K _79516) = (term1586 A K _79516).
Proof. exact (MK_COMB (@lem6387192 A K) (@lem6387191 A K _79516)). Qed.
Lemma lem6387194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387195 {A K : Type'} (_79516 : type758 A K) : (term1624 A K _79516) = (term1587 A K _79516).
Proof. exact (MK_COMB (@lem6387194) (@lem6387193 A K _79516)). Qed.
Lemma lem6387196 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1799 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387197 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1815 A K _79516 _79517 k f i dom neut) = (term1811 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387195 A K _79516) (@lem6387196 A K _79517 k f i dom neut)). Qed.
Lemma lem6387198 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387199 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1817 A K _79516 _79517 k f i dom neut) = (term1818 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387198) (@lem6387197 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387200 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1621 A K _79516 j) = (term1583 A K j _79516).
Proof. exact (eq_refl (term1621 A K _79516 j)). Qed.
Lemma lem6387201 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387202 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1627 A K _79516 j) = (term1628 A K j _79516).
Proof. exact (MK_COMB (@lem6387201) (@lem6387200 A K j _79516)). Qed.
Lemma lem6387203 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1799 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1799 A K _79517 k f i dom neut)). Qed.
Lemma lem6387204 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1819 A K _79516 j _79517 k f i dom neut) = (term1820 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387202 A K j _79516) (@lem6387203 A K _79517 k f i dom neut)). Qed.
Lemma lem6387205 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1821 A K _79516 _79517 k f i dom neut) = (term1822 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387204 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387206 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387207 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1816 A K _79516 _79517 k f i dom neut) = (term1823 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387206 A K) (@lem6387205 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387208 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1815 A K _79516 _79517 k f i dom neut) = (term1816 A K _79516 _79517 k f i dom neut)) = ((term1811 A K _79516 _79517 k f i dom neut) = (term1823 A K _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387199 A K _79516 _79517 k f i dom neut) (@lem6387207 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387209 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1811 A K _79516 _79517 k f i dom neut) = (term1823 A K _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387208 A K _79516 _79517 k f i dom neut) (@lem6387189 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387211 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387212 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6387211 K P Q). Qed.
Lemma lem6387213 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1824 A K j _79516 _79517 k f i dom neut) = (term1825 A K j _79516 _79517 k f i dom neut).
Proof. exact (@lem6387212 K (term1583 A K j _79516) (term1798 A K _79517 k f i dom neut)). Qed.
Lemma lem6387214 {A K : Type'} (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1826 A K _79517 k f i dom neut x) = (term1796 A K _79517 x k f i dom neut).
Proof. exact (eq_refl (term1826 A K _79517 k f i dom neut x)). Qed.
Lemma lem6387215 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1827 A K _79517 k f i dom neut) = (term1798 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387214 A K _79517 x k f i dom neut)). Qed.
Lemma lem6387216 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387217 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1828 A K _79517 k f i dom neut) = (term1799 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387216 K) (@lem6387215 A K _79517 k f i dom neut)). Qed.
Lemma lem6387218 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1628 A K j _79516) = (term1628 A K j _79516).
Proof. exact (eq_refl (term1628 A K j _79516)). Qed.
Lemma lem6387219 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1824 A K j _79516 _79517 k f i dom neut) = (term1820 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387218 A K j _79516) (@lem6387217 A K _79517 k f i dom neut)). Qed.
Lemma lem6387220 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387221 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1829 A K j _79516 _79517 k f i dom neut) = (term1830 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387220) (@lem6387219 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387222 {A K : Type'} (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1826 A K _79517 k f i dom neut x) = (term1796 A K _79517 x k f i dom neut).
Proof. exact (eq_refl (term1826 A K _79517 k f i dom neut x)). Qed.
Lemma lem6387223 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1628 A K j _79516) = (term1628 A K j _79516).
Proof. exact (eq_refl (term1628 A K j _79516)). Qed.
Lemma lem6387224 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1831 A K j _79516 _79517 k f i dom neut x) = (term1832 A K j _79516 _79517 x k f i dom neut).
Proof. exact (MK_COMB (@lem6387223 A K j _79516) (@lem6387222 A K _79517 x k f i dom neut)). Qed.
Lemma lem6387225 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1833 A K j _79516 _79517 k f i dom neut) = (term1834 A K j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387224 A K j _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387226 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387227 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1825 A K j _79516 _79517 k f i dom neut) = (term1835 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387226 K) (@lem6387225 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387228 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1824 A K j _79516 _79517 k f i dom neut) = (term1825 A K j _79516 _79517 k f i dom neut)) = ((term1820 A K j _79516 _79517 k f i dom neut) = (term1835 A K j _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387221 A K j _79516 _79517 k f i dom neut) (@lem6387227 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387229 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1820 A K j _79516 _79517 k f i dom neut) = (term1835 A K j _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387228 A K j _79516 _79517 k f i dom neut) (@lem6387213 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387230 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1822 A K _79516 _79517 k f i dom neut) = (term1836 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387229 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387231 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387232 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1823 A K _79516 _79517 k f i dom neut) = (term1837 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387231 A K) (@lem6387230 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387233 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1811 A K _79516 _79517 k f i dom neut) = (term1837 A K _79516 _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387209 A K _79516 _79517 k f i dom neut) (@lem6387232 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387234 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1813 A K _79517 k f i dom neut) = (term1838 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387233 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387235 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387236 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1814 A K _79517 k f i dom neut) = (term1839 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387235 A K) (@lem6387234 A K _79517 k f i dom neut)). Qed.
Lemma lem6387237 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1800 A K _79517 k f i dom neut) = (term1839 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387185 A K _79517 k f i dom neut) (@lem6387236 A K _79517 k f i dom neut)). Qed.
Lemma lem6387238 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1381 A K _79517 k f i dom neut) = (term1839 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387161 A K _79517 k f i dom neut) (@lem6387237 A K _79517 k f i dom neut)). Qed.
Lemma lem6387239 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387240 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1382 A K _79517 k f i dom neut) = (term1840 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387239 A K _79517) (@lem6387238 A K _79517 k f i dom neut)). Qed.
Lemma lem6387242 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387243 {A K : Type'} (P : Prop) (Q : type193 A K) : (term1665 A K P Q) = (term1666 A K P Q).
Proof. exact (@lem6387242 (type758 A K) P Q). Qed.
Lemma lem6387244 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1841 A K _79517 k f i dom neut) = (term1842 A K _79517 k f i dom neut).
Proof. exact (@lem6387243 A K (term1326 A K _79517) (term1838 A K _79517 k f i dom neut)). Qed.
Lemma lem6387245 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1843 A K _79517 k f i dom neut _79516) = (term1837 A K _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1843 A K _79517 k f i dom neut _79516)). Qed.
Lemma lem6387246 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1844 A K _79517 k f i dom neut) = (term1838 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387245 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387247 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387248 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1845 A K _79517 k f i dom neut) = (term1839 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387247 A K) (@lem6387246 A K _79517 k f i dom neut)). Qed.
Lemma lem6387249 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387250 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1841 A K _79517 k f i dom neut) = (term1840 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387249 A K _79517) (@lem6387248 A K _79517 k f i dom neut)). Qed.
Lemma lem6387251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387252 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1846 A K _79517 k f i dom neut) = (term1847 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387251) (@lem6387250 A K _79517 k f i dom neut)). Qed.
Lemma lem6387253 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1843 A K _79517 k f i dom neut _79516) = (term1837 A K _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1843 A K _79517 k f i dom neut _79516)). Qed.
Lemma lem6387254 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387255 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1848 A K _79517 k f i dom neut _79516) = (term1849 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387254 A K _79517) (@lem6387253 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387256 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1850 A K _79517 k f i dom neut) = (term1851 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387255 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387257 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387258 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1842 A K _79517 k f i dom neut) = (term1852 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387257 A K) (@lem6387256 A K _79517 k f i dom neut)). Qed.
Lemma lem6387259 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1841 A K _79517 k f i dom neut) = (term1842 A K _79517 k f i dom neut)) = ((term1840 A K _79517 k f i dom neut) = (term1852 A K _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387252 A K _79517 k f i dom neut) (@lem6387258 A K _79517 k f i dom neut)). Qed.
Lemma lem6387260 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1840 A K _79517 k f i dom neut) = (term1852 A K _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387259 A K _79517 k f i dom neut) (@lem6387244 A K _79517 k f i dom neut)). Qed.
Lemma lem6387262 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387263 {A K : Type'} (P : Prop) (Q : type192 A K) : (term1679 A K P Q) = (term1680 A K P Q).
Proof. exact (@lem6387262 (type757 A K) P Q). Qed.
Lemma lem6387264 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1853 A K _79516 _79517 k f i dom neut) = (term1854 A K _79516 _79517 k f i dom neut).
Proof. exact (@lem6387263 A K (term1326 A K _79517) (term1836 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387265 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1855 A K _79516 _79517 k f i dom neut j) = (term1835 A K j _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1855 A K _79516 _79517 k f i dom neut j)). Qed.
Lemma lem6387266 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1856 A K _79516 _79517 k f i dom neut) = (term1836 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387265 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387267 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387268 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1857 A K _79516 _79517 k f i dom neut) = (term1837 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387267 A K) (@lem6387266 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387269 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387270 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1853 A K _79516 _79517 k f i dom neut) = (term1849 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387269 A K _79517) (@lem6387268 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387271 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387272 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1858 A K _79516 _79517 k f i dom neut) = (term1859 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387271) (@lem6387270 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387273 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1855 A K _79516 _79517 k f i dom neut j) = (term1835 A K j _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1855 A K _79516 _79517 k f i dom neut j)). Qed.
Lemma lem6387274 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387275 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1860 A K _79516 _79517 k f i dom neut j) = (term1861 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387274 A K _79517) (@lem6387273 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387276 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1862 A K _79516 _79517 k f i dom neut) = (term1863 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387275 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387277 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387278 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1854 A K _79516 _79517 k f i dom neut) = (term1864 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387277 A K) (@lem6387276 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387279 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1853 A K _79516 _79517 k f i dom neut) = (term1854 A K _79516 _79517 k f i dom neut)) = ((term1849 A K _79516 _79517 k f i dom neut) = (term1864 A K _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387272 A K _79516 _79517 k f i dom neut) (@lem6387278 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387280 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1849 A K _79516 _79517 k f i dom neut) = (term1864 A K _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387279 A K _79516 _79517 k f i dom neut) (@lem6387264 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387282 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387283 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6387282 K P Q). Qed.
Lemma lem6387284 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1865 A K j _79516 _79517 k f i dom neut) = (term1866 A K j _79516 _79517 k f i dom neut).
Proof. exact (@lem6387283 K (term1326 A K _79517) (term1834 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387285 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1867 A K j _79516 _79517 k f i dom neut x) = (term1832 A K j _79516 _79517 x k f i dom neut).
Proof. exact (eq_refl (term1867 A K j _79516 _79517 k f i dom neut x)). Qed.
Lemma lem6387286 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1868 A K j _79516 _79517 k f i dom neut) = (term1834 A K j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387285 A K j _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387287 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387288 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1869 A K j _79516 _79517 k f i dom neut) = (term1835 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387287 K) (@lem6387286 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387289 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387290 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1865 A K j _79516 _79517 k f i dom neut) = (term1861 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387289 A K _79517) (@lem6387288 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387291 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387292 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1870 A K j _79516 _79517 k f i dom neut) = (term1871 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387291) (@lem6387290 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387293 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1867 A K j _79516 _79517 k f i dom neut x) = (term1832 A K j _79516 _79517 x k f i dom neut).
Proof. exact (eq_refl (term1867 A K j _79516 _79517 k f i dom neut x)). Qed.
Lemma lem6387294 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term1360 A K _79517).
Proof. exact (eq_refl (term1360 A K _79517)). Qed.
Lemma lem6387295 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1872 A K j _79516 _79517 k f i dom neut x) = (term1873 A K j _79516 _79517 x k f i dom neut).
Proof. exact (MK_COMB (@lem6387294 A K _79517) (@lem6387293 A K j _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387296 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1874 A K j _79516 _79517 k f i dom neut) = (term1875 A K j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387295 A K j _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387297 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387298 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1866 A K j _79516 _79517 k f i dom neut) = (term1876 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387297 K) (@lem6387296 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387299 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1865 A K j _79516 _79517 k f i dom neut) = (term1866 A K j _79516 _79517 k f i dom neut)) = ((term1861 A K j _79516 _79517 k f i dom neut) = (term1876 A K j _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387292 A K j _79516 _79517 k f i dom neut) (@lem6387298 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387300 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1861 A K j _79516 _79517 k f i dom neut) = (term1876 A K j _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387299 A K j _79516 _79517 k f i dom neut) (@lem6387284 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387301 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1863 A K _79516 _79517 k f i dom neut) = (term1877 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387300 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387302 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387303 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1864 A K _79516 _79517 k f i dom neut) = (term1878 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387302 A K) (@lem6387301 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387304 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1849 A K _79516 _79517 k f i dom neut) = (term1878 A K _79516 _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387280 A K _79516 _79517 k f i dom neut) (@lem6387303 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387305 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1851 A K _79517 k f i dom neut) = (term1879 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387304 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387306 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387307 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1852 A K _79517 k f i dom neut) = (term1880 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387306 A K) (@lem6387305 A K _79517 k f i dom neut)). Qed.
Lemma lem6387308 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1840 A K _79517 k f i dom neut) = (term1880 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387260 A K _79517 k f i dom neut) (@lem6387307 A K _79517 k f i dom neut)). Qed.
Lemma lem6387309 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1382 A K _79517 k f i dom neut) = (term1880 A K _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387240 A K _79517 k f i dom neut) (@lem6387308 A K _79517 k f i dom neut)). Qed.
Lemma lem6387310 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1383 A K k f i dom neut) = (term1881 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387309 A K _79517 k f i dom neut)). Qed.
Lemma lem6387311 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387312 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1384 A K k f i dom neut) = (term1882 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387311 A K) (@lem6387310 A K k f i dom neut)). Qed.
Lemma lem6387313 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1385 A K ltle k f i dom neut) = (term1883 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386832 A K ltle k f dom neut) (@lem6387312 A K k f i dom neut)). Qed.
Lemma lem6387315 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1284 A P Q) = (term1283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6387316 {K : Type'} (P : type488 K) (Q : Prop) : (term1884 K P Q) = (term1885 K P Q).
Proof. exact (@lem6387315 (K -> K) P Q). Qed.
Lemma lem6387317 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1886 A K ltle k f i dom neut) = (term1887 A K ltle k f i dom neut).
Proof. exact (@lem6387316 K (term1439 A K ltle k f dom neut) (term1882 A K k f i dom neut)). Qed.
Lemma lem6387318 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6387319 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1450 A K ltle k f dom neut) = (term1439 A K ltle k f dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6387318 A K ltle k f dom neut j)). Qed.
Lemma lem6387320 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387321 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1451 A K ltle k f dom neut) = (term1440 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6387320 K) (@lem6387319 A K ltle k f dom neut)). Qed.
Lemma lem6387322 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387323 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1888 A K ltle k f dom neut) = (term1786 A K ltle k f dom neut).
Proof. exact (MK_COMB (@lem6387322) (@lem6387321 A K ltle k f dom neut)). Qed.
Lemma lem6387324 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1882 A K k f i dom neut) = (term1882 A K k f i dom neut).
Proof. exact (eq_refl (term1882 A K k f i dom neut)). Qed.
Lemma lem6387325 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1886 A K ltle k f i dom neut) = (term1883 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387323 A K ltle k f dom neut) (@lem6387324 A K k f i dom neut)). Qed.
Lemma lem6387326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387327 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1889 A K ltle k f i dom neut) = (term1890 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387326) (@lem6387325 A K ltle k f i dom neut)). Qed.
Lemma lem6387328 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1449 A K ltle k f dom neut j) = (term1437 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1449 A K ltle k f dom neut j)). Qed.
Lemma lem6387329 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387330 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1891 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (MK_COMB (@lem6387329) (@lem6387328 A K ltle k f dom neut j)). Qed.
Lemma lem6387331 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1882 A K k f i dom neut) = (term1882 A K k f i dom neut).
Proof. exact (eq_refl (term1882 A K k f i dom neut)). Qed.
Lemma lem6387332 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1893 A K ltle j k f i dom neut) = (term1894 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387330 A K ltle k f dom neut j) (@lem6387331 A K k f i dom neut)). Qed.
Lemma lem6387333 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1895 A K ltle k f i dom neut) = (term1896 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6387332 A K ltle j k f i dom neut)). Qed.
Lemma lem6387334 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387335 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1887 A K ltle k f i dom neut) = (term1897 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387334 K) (@lem6387333 A K ltle k f i dom neut)). Qed.
Lemma lem6387336 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1886 A K ltle k f i dom neut) = (term1887 A K ltle k f i dom neut)) = ((term1883 A K ltle k f i dom neut) = (term1897 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387327 A K ltle k f i dom neut) (@lem6387335 A K ltle k f i dom neut)). Qed.
Lemma lem6387337 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1883 A K ltle k f i dom neut) = (term1897 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387336 A K ltle k f i dom neut) (@lem6387317 A K ltle k f i dom neut)). Qed.
Lemma lem6387339 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387340 {A K : Type'} (P : Prop) (Q : type220 A K) : (term1727 A K P Q) = (term1728 A K P Q).
Proof. exact (@lem6387339 (type850 A K) P Q). Qed.
Lemma lem6387341 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1898 A K ltle j k f i dom neut) = (term1899 A K ltle j k f i dom neut).
Proof. exact (@lem6387340 A K (term1437 A K ltle k f dom neut j) (term1881 A K k f i dom neut)). Qed.
Lemma lem6387342 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1900 A K k f i dom neut _79517) = (term1880 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1900 A K k f i dom neut _79517)). Qed.
Lemma lem6387343 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1901 A K k f i dom neut) = (term1881 A K k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387342 A K _79517 k f i dom neut)). Qed.
Lemma lem6387344 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387345 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1902 A K k f i dom neut) = (term1882 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387344 A K) (@lem6387343 A K k f i dom neut)). Qed.
Lemma lem6387346 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387347 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1898 A K ltle j k f i dom neut) = (term1894 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387346 A K ltle k f dom neut j) (@lem6387345 A K k f i dom neut)). Qed.
Lemma lem6387348 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387349 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1903 A K ltle j k f i dom neut) = (term1904 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387348) (@lem6387347 A K ltle j k f i dom neut)). Qed.
Lemma lem6387350 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1900 A K k f i dom neut _79517) = (term1880 A K _79517 k f i dom neut).
Proof. exact (eq_refl (term1900 A K k f i dom neut _79517)). Qed.
Lemma lem6387351 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387352 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1905 A K ltle j k f i dom neut _79517) = (term1906 A K ltle j _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387351 A K ltle k f dom neut j) (@lem6387350 A K _79517 k f i dom neut)). Qed.
Lemma lem6387353 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1907 A K ltle j k f i dom neut) = (term1908 A K ltle j k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387352 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387354 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387355 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1899 A K ltle j k f i dom neut) = (term1909 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387354 A K) (@lem6387353 A K ltle j k f i dom neut)). Qed.
Lemma lem6387356 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1898 A K ltle j k f i dom neut) = (term1899 A K ltle j k f i dom neut)) = ((term1894 A K ltle j k f i dom neut) = (term1909 A K ltle j k f i dom neut)).
Proof. exact (MK_COMB (@lem6387349 A K ltle j k f i dom neut) (@lem6387355 A K ltle j k f i dom neut)). Qed.
Lemma lem6387357 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1894 A K ltle j k f i dom neut) = (term1909 A K ltle j k f i dom neut).
Proof. exact (EQ_MP (@lem6387356 A K ltle j k f i dom neut) (@lem6387341 A K ltle j k f i dom neut)). Qed.
Lemma lem6387359 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387360 {A K : Type'} (P : Prop) (Q : type193 A K) : (term1665 A K P Q) = (term1666 A K P Q).
Proof. exact (@lem6387359 (type758 A K) P Q). Qed.
Lemma lem6387361 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1910 A K ltle j _79517 k f i dom neut) = (term1911 A K ltle j _79517 k f i dom neut).
Proof. exact (@lem6387360 A K (term1437 A K ltle k f dom neut j) (term1879 A K _79517 k f i dom neut)). Qed.
Lemma lem6387362 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1912 A K _79517 k f i dom neut _79516) = (term1878 A K _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1912 A K _79517 k f i dom neut _79516)). Qed.
Lemma lem6387363 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1913 A K _79517 k f i dom neut) = (term1879 A K _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387362 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387364 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387365 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1914 A K _79517 k f i dom neut) = (term1880 A K _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387364 A K) (@lem6387363 A K _79517 k f i dom neut)). Qed.
Lemma lem6387366 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387367 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1910 A K ltle j _79517 k f i dom neut) = (term1906 A K ltle j _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387366 A K ltle k f dom neut j) (@lem6387365 A K _79517 k f i dom neut)). Qed.
Lemma lem6387368 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387369 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1915 A K ltle j _79517 k f i dom neut) = (term1916 A K ltle j _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387368) (@lem6387367 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387370 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1912 A K _79517 k f i dom neut _79516) = (term1878 A K _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1912 A K _79517 k f i dom neut _79516)). Qed.
Lemma lem6387371 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387372 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1917 A K ltle j _79517 k f i dom neut _79516) = (term1918 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387371 A K ltle k f dom neut j) (@lem6387370 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387373 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1919 A K ltle j _79517 k f i dom neut) = (term1920 A K ltle j _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387372 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387374 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387375 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1911 A K ltle j _79517 k f i dom neut) = (term1921 A K ltle j _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387374 A K) (@lem6387373 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387376 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1910 A K ltle j _79517 k f i dom neut) = (term1911 A K ltle j _79517 k f i dom neut)) = ((term1906 A K ltle j _79517 k f i dom neut) = (term1921 A K ltle j _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387369 A K ltle j _79517 k f i dom neut) (@lem6387375 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387377 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1906 A K ltle j _79517 k f i dom neut) = (term1921 A K ltle j _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387376 A K ltle j _79517 k f i dom neut) (@lem6387361 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387379 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387380 {A K : Type'} (P : Prop) (Q : type192 A K) : (term1679 A K P Q) = (term1680 A K P Q).
Proof. exact (@lem6387379 (type757 A K) P Q). Qed.
Lemma lem6387381 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1922 A K ltle j _79516 _79517 k f i dom neut) = (term1923 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (@lem6387380 A K (term1437 A K ltle k f dom neut j) (term1877 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387382 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1924 A K _79516 _79517 k f i dom neut j) = (term1876 A K j _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1924 A K _79516 _79517 k f i dom neut j)). Qed.
Lemma lem6387383 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1925 A K _79516 _79517 k f i dom neut) = (term1877 A K _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387382 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387384 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387385 {A K : Type'} (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1926 A K _79516 _79517 k f i dom neut) = (term1878 A K _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387384 A K) (@lem6387383 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387386 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387387 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1922 A K ltle j _79516 _79517 k f i dom neut) = (term1918 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387386 A K ltle k f dom neut j) (@lem6387385 A K _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387388 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387389 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1927 A K ltle j _79516 _79517 k f i dom neut) = (term1928 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387388) (@lem6387387 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387390 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1924 A K _79516 _79517 k f i dom neut j) = (term1876 A K j _79516 _79517 k f i dom neut).
Proof. exact (eq_refl (term1924 A K _79516 _79517 k f i dom neut j)). Qed.
Lemma lem6387391 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387392 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1929 A K ltle j _79516 _79517 k f i dom neut j') = (term1930 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387391 A K ltle k f dom neut j) (@lem6387390 A K j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387393 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1931 A K ltle j _79516 _79517 k f i dom neut) = (term1932 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j' : type757 A K => @lem6387392 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387394 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387395 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1923 A K ltle j _79516 _79517 k f i dom neut) = (term1933 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387394 A K) (@lem6387393 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387396 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1922 A K ltle j _79516 _79517 k f i dom neut) = (term1923 A K ltle j _79516 _79517 k f i dom neut)) = ((term1918 A K ltle j _79516 _79517 k f i dom neut) = (term1933 A K ltle j _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387389 A K ltle j _79516 _79517 k f i dom neut) (@lem6387395 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387397 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1918 A K ltle j _79516 _79517 k f i dom neut) = (term1933 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387396 A K ltle j _79516 _79517 k f i dom neut) (@lem6387381 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387399 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1602 A P Q) = (term1603 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem6387400 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1602 K P Q) = (term1603 K P Q).
Proof. exact (@lem6387399 K P Q). Qed.
Lemma lem6387401 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1934 A K ltle j j' _79516 _79517 k f i dom neut) = (term1935 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (@lem6387400 K (term1437 A K ltle k f dom neut j) (term1875 A K j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387402 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1936 A K j _79516 _79517 k f i dom neut x) = (term1873 A K j _79516 _79517 x k f i dom neut).
Proof. exact (eq_refl (term1936 A K j _79516 _79517 k f i dom neut x)). Qed.
Lemma lem6387403 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1937 A K j _79516 _79517 k f i dom neut) = (term1875 A K j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387402 A K j _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387404 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387405 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1938 A K j _79516 _79517 k f i dom neut) = (term1876 A K j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387404 K) (@lem6387403 A K j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387406 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387407 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1934 A K ltle j j' _79516 _79517 k f i dom neut) = (term1930 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387406 A K ltle k f dom neut j) (@lem6387405 A K j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387408 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387409 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1939 A K ltle j j' _79516 _79517 k f i dom neut) = (term1940 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387408) (@lem6387407 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387410 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1936 A K j _79516 _79517 k f i dom neut x) = (term1873 A K j _79516 _79517 x k f i dom neut).
Proof. exact (eq_refl (term1936 A K j _79516 _79517 k f i dom neut x)). Qed.
Lemma lem6387411 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K -> K) : (term1892 A K ltle k f dom neut j) = (term1892 A K ltle k f dom neut j).
Proof. exact (eq_refl (term1892 A K ltle k f dom neut j)). Qed.
Lemma lem6387412 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1941 A K ltle j j' _79516 _79517 k f i dom neut x) = (term1942 A K ltle j j' _79516 _79517 x k f i dom neut).
Proof. exact (MK_COMB (@lem6387411 A K ltle k f dom neut j) (@lem6387410 A K j' _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387413 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1943 A K ltle j j' _79516 _79517 k f i dom neut) = (term1944 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387412 A K ltle j j' _79516 _79517 x k f i dom neut)). Qed.
Lemma lem6387414 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387415 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1935 A K ltle j j' _79516 _79517 k f i dom neut) = (term1945 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387414 K) (@lem6387413 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387416 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1934 A K ltle j j' _79516 _79517 k f i dom neut) = (term1935 A K ltle j j' _79516 _79517 k f i dom neut)) = ((term1930 A K ltle j j' _79516 _79517 k f i dom neut) = (term1945 A K ltle j j' _79516 _79517 k f i dom neut)).
Proof. exact (MK_COMB (@lem6387409 A K ltle j j' _79516 _79517 k f i dom neut) (@lem6387415 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387417 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1930 A K ltle j j' _79516 _79517 k f i dom neut) = (term1945 A K ltle j j' _79516 _79517 k f i dom neut).
Proof. exact (EQ_MP (@lem6387416 A K ltle j j' _79516 _79517 k f i dom neut) (@lem6387401 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387418 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1932 A K ltle j _79516 _79517 k f i dom neut) = (term1946 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (fun_ext (fun j' : type757 A K => @lem6387417 A K ltle j j' _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387419 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387420 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1933 A K ltle j _79516 _79517 k f i dom neut) = (term1947 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387419 A K) (@lem6387418 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387421 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1918 A K ltle j _79516 _79517 k f i dom neut) = (term1947 A K ltle j _79516 _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387397 A K ltle j _79516 _79517 k f i dom neut) (@lem6387420 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387422 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1920 A K ltle j _79517 k f i dom neut) = (term1948 A K ltle j _79517 k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387421 A K ltle j _79516 _79517 k f i dom neut)). Qed.
Lemma lem6387423 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387424 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1921 A K ltle j _79517 k f i dom neut) = (term1949 A K ltle j _79517 k f i dom neut).
Proof. exact (MK_COMB (@lem6387423 A K) (@lem6387422 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387425 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1906 A K ltle j _79517 k f i dom neut) = (term1949 A K ltle j _79517 k f i dom neut).
Proof. exact (TRANS (@lem6387377 A K ltle j _79517 k f i dom neut) (@lem6387424 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387426 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1908 A K ltle j k f i dom neut) = (term1950 A K ltle j k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387425 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387427 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387428 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1909 A K ltle j k f i dom neut) = (term1951 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387427 A K) (@lem6387426 A K ltle j k f i dom neut)). Qed.
Lemma lem6387429 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1894 A K ltle j k f i dom neut) = (term1951 A K ltle j k f i dom neut).
Proof. exact (TRANS (@lem6387357 A K ltle j k f i dom neut) (@lem6387428 A K ltle j k f i dom neut)). Qed.
Lemma lem6387430 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1896 A K ltle k f i dom neut) = (term1952 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6387429 A K ltle j k f i dom neut)). Qed.
Lemma lem6387431 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387432 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1897 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387431 K) (@lem6387430 A K ltle k f i dom neut)). Qed.
Lemma lem6387433 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1883 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6387337 A K ltle k f i dom neut) (@lem6387432 A K ltle k f i dom neut)). Qed.
Lemma lem6387434 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1385 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6387313 A K ltle k f i dom neut) (@lem6387433 A K ltle k f i dom neut)). Qed.
Lemma lem6387435 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1386 A K ltle k f i dom neut) = (term1954 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6386753 A K ltle k f i dom neut) (@lem6387434 A K ltle k f i dom neut)). Qed.
Lemma lem6387439 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6387440 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1443 K P Q) = (term1444 K P Q).
Proof. exact (@lem6387439 K P Q). Qed.
Lemma lem6387441 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1955 A K ltle k f i dom neut) = (term1956 A K ltle k f i dom neut).
Proof. exact (@lem6387440 K (term1783 A K ltle k f i dom neut) (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387442 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1957 A K ltle k f i dom neut i') = (term1782 A K i' ltle k f i dom neut).
Proof. exact (eq_refl (term1957 A K ltle k f i dom neut i')). Qed.
Lemma lem6387443 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1958 A K ltle k f i dom neut) = (term1783 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6387442 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387444 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387445 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1959 A K ltle k f i dom neut) = (term1784 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387444 K) (@lem6387443 A K ltle k f i dom neut)). Qed.
Lemma lem6387446 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387447 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1960 A K ltle k f i dom neut) = (term1785 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387446) (@lem6387445 A K ltle k f i dom neut)). Qed.
Lemma lem6387448 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387449 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1955 A K ltle k f i dom neut) = (term1954 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387447 A K ltle k f i dom neut) (@lem6387448 A K ltle k f i dom neut)). Qed.
Lemma lem6387450 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387451 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1961 A K ltle k f i dom neut) = (term1962 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387450) (@lem6387449 A K ltle k f i dom neut)). Qed.
Lemma lem6387452 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1957 A K ltle k f i dom neut i') = (term1782 A K i' ltle k f i dom neut).
Proof. exact (eq_refl (term1957 A K ltle k f i dom neut i')). Qed.
Lemma lem6387453 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387454 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1963 A K ltle k f i dom neut i') = (term1964 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387453) (@lem6387452 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387455 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387456 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1965 A K i' ltle k f i dom neut) = (term1966 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387454 A K i' ltle k f i dom neut) (@lem6387455 A K ltle k f i dom neut)). Qed.
Lemma lem6387457 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1967 A K ltle k f i dom neut) = (term1968 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6387456 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387458 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387459 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1956 A K ltle k f i dom neut) = (term1969 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387458 K) (@lem6387457 A K ltle k f i dom neut)). Qed.
Lemma lem6387460 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1955 A K ltle k f i dom neut) = (term1956 A K ltle k f i dom neut)) = ((term1954 A K ltle k f i dom neut) = (term1969 A K ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387451 A K ltle k f i dom neut) (@lem6387459 A K ltle k f i dom neut)). Qed.
Lemma lem6387461 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1954 A K ltle k f i dom neut) = (term1969 A K ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387460 A K ltle k f i dom neut) (@lem6387441 A K ltle k f i dom neut)). Qed.
Lemma lem6387465 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6387466 {A K : Type'} (P : type220 A K) (Q : Prop) : (term1970 A K P Q) = (term1971 A K P Q).
Proof. exact (@lem6387465 (type850 A K) P Q). Qed.
Lemma lem6387467 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1972 A K i' ltle k f i dom neut) = (term1973 A K i' ltle k f i dom neut).
Proof. exact (@lem6387466 A K (term1781 A K i' ltle k f i dom neut) (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387468 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1974 A K i' ltle k f i dom neut _79517) = (term1780 A K i' _79517 ltle k f i dom neut).
Proof. exact (eq_refl (term1974 A K i' ltle k f i dom neut _79517)). Qed.
Lemma lem6387469 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1975 A K i' ltle k f i dom neut) = (term1781 A K i' ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387468 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387470 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387471 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1976 A K i' ltle k f i dom neut) = (term1782 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387470 A K) (@lem6387469 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387472 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387473 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1977 A K i' ltle k f i dom neut) = (term1964 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387472) (@lem6387471 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387474 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387475 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1972 A K i' ltle k f i dom neut) = (term1966 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387473 A K i' ltle k f i dom neut) (@lem6387474 A K ltle k f i dom neut)). Qed.
Lemma lem6387476 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387477 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1978 A K i' ltle k f i dom neut) = (term1979 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387476) (@lem6387475 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387478 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1974 A K i' ltle k f i dom neut _79517) = (term1780 A K i' _79517 ltle k f i dom neut).
Proof. exact (eq_refl (term1974 A K i' ltle k f i dom neut _79517)). Qed.
Lemma lem6387479 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387480 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1980 A K i' ltle k f i dom neut _79517) = (term1981 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387479) (@lem6387478 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387481 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387482 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1982 A K i' _79517 ltle k f i dom neut) = (term1983 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387480 A K i' _79517 ltle k f i dom neut) (@lem6387481 A K ltle k f i dom neut)). Qed.
Lemma lem6387483 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1984 A K i' ltle k f i dom neut) = (term1985 A K i' ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387482 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387484 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387485 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1973 A K i' ltle k f i dom neut) = (term1986 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387484 A K) (@lem6387483 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387486 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1972 A K i' ltle k f i dom neut) = (term1973 A K i' ltle k f i dom neut)) = ((term1966 A K i' ltle k f i dom neut) = (term1986 A K i' ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387477 A K i' ltle k f i dom neut) (@lem6387485 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387487 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1966 A K i' ltle k f i dom neut) = (term1986 A K i' ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387486 A K i' ltle k f i dom neut) (@lem6387467 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387491 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6387492 {A K : Type'} (P : type193 A K) (Q : Prop) : (term1987 A K P Q) = (term1988 A K P Q).
Proof. exact (@lem6387491 (type758 A K) P Q). Qed.
Lemma lem6387493 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1989 A K i' _79517 ltle k f i dom neut) = (term1990 A K i' _79517 ltle k f i dom neut).
Proof. exact (@lem6387492 A K (term1779 A K i' _79517 ltle k f i dom neut) (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387494 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1991 A K i' _79517 ltle k f i dom neut _79516) = (term1778 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1991 A K i' _79517 ltle k f i dom neut _79516)). Qed.
Lemma lem6387495 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1992 A K i' _79517 ltle k f i dom neut) = (term1779 A K i' _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387494 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387496 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387497 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1993 A K i' _79517 ltle k f i dom neut) = (term1780 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387496 A K) (@lem6387495 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387498 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387499 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1994 A K i' _79517 ltle k f i dom neut) = (term1981 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387498) (@lem6387497 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387500 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387501 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1989 A K i' _79517 ltle k f i dom neut) = (term1983 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387499 A K i' _79517 ltle k f i dom neut) (@lem6387500 A K ltle k f i dom neut)). Qed.
Lemma lem6387502 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387503 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1995 A K i' _79517 ltle k f i dom neut) = (term1996 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387502) (@lem6387501 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387504 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1991 A K i' _79517 ltle k f i dom neut _79516) = (term1778 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term1991 A K i' _79517 ltle k f i dom neut _79516)). Qed.
Lemma lem6387505 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387506 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1997 A K i' _79517 ltle k f i dom neut _79516) = (term1998 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387505) (@lem6387504 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387507 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387508 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1999 A K i' _79517 _79516 ltle k f i dom neut) = (term2000 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387506 A K i' _79517 _79516 ltle k f i dom neut) (@lem6387507 A K ltle k f i dom neut)). Qed.
Lemma lem6387509 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2001 A K i' _79517 ltle k f i dom neut) = (term2002 A K i' _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387508 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387510 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387511 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1990 A K i' _79517 ltle k f i dom neut) = (term2003 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387510 A K) (@lem6387509 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387512 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term1989 A K i' _79517 ltle k f i dom neut) = (term1990 A K i' _79517 ltle k f i dom neut)) = ((term1983 A K i' _79517 ltle k f i dom neut) = (term2003 A K i' _79517 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387503 A K i' _79517 ltle k f i dom neut) (@lem6387511 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387513 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1983 A K i' _79517 ltle k f i dom neut) = (term2003 A K i' _79517 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387512 A K i' _79517 ltle k f i dom neut) (@lem6387493 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387517 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6387518 {A K : Type'} (P : type192 A K) (Q : Prop) : (term2004 A K P Q) = (term2005 A K P Q).
Proof. exact (@lem6387517 (type757 A K) P Q). Qed.
Lemma lem6387519 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2006 A K i' _79517 _79516 ltle k f i dom neut) = (term2007 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (@lem6387518 A K (term1777 A K i' _79517 _79516 ltle k f i dom neut) (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387520 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2008 A K i' _79517 _79516 ltle k f i dom neut j) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term2008 A K i' _79517 _79516 ltle k f i dom neut j)). Qed.
Lemma lem6387521 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2009 A K i' _79517 _79516 ltle k f i dom neut) = (term1777 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387520 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387522 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387523 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2010 A K i' _79517 _79516 ltle k f i dom neut) = (term1778 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387522 A K) (@lem6387521 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387524 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387525 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2011 A K i' _79517 _79516 ltle k f i dom neut) = (term1998 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387524) (@lem6387523 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387526 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387527 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2006 A K i' _79517 _79516 ltle k f i dom neut) = (term2000 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387525 A K i' _79517 _79516 ltle k f i dom neut) (@lem6387526 A K ltle k f i dom neut)). Qed.
Lemma lem6387528 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387529 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2012 A K i' _79517 _79516 ltle k f i dom neut) = (term2013 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387528) (@lem6387527 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387530 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2008 A K i' _79517 _79516 ltle k f i dom neut j) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (eq_refl (term2008 A K i' _79517 _79516 ltle k f i dom neut j)). Qed.
Lemma lem6387531 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387532 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2014 A K i' _79517 _79516 ltle k f i dom neut j) = (term2015 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387531) (@lem6387530 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387533 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387534 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2016 A K i' _79517 _79516 j ltle k f i dom neut) = (term2017 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387532 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6387533 A K ltle k f i dom neut)). Qed.
Lemma lem6387535 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2018 A K i' _79517 _79516 ltle k f i dom neut) = (term2019 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387534 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387536 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387537 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2007 A K i' _79517 _79516 ltle k f i dom neut) = (term2020 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387536 A K) (@lem6387535 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387538 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2006 A K i' _79517 _79516 ltle k f i dom neut) = (term2007 A K i' _79517 _79516 ltle k f i dom neut)) = ((term2000 A K i' _79517 _79516 ltle k f i dom neut) = (term2020 A K i' _79517 _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387529 A K i' _79517 _79516 ltle k f i dom neut) (@lem6387537 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387539 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2000 A K i' _79517 _79516 ltle k f i dom neut) = (term2020 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387538 A K i' _79517 _79516 ltle k f i dom neut) (@lem6387519 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387543 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1443 A P Q) = (term1444 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6387544 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1443 K P Q) = (term1444 K P Q).
Proof. exact (@lem6387543 K P Q). Qed.
Lemma lem6387545 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2021 A K i' _79517 j _79516 ltle k f i dom neut) = (term2022 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (@lem6387544 K (term1775 A K i' _79517 j _79516 ltle k f i dom neut) (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387546 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2023 A K i' _79517 j _79516 ltle k f i dom neut x) = (term1773 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2023 A K i' _79517 j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6387547 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2024 A K i' _79517 j _79516 ltle k f i dom neut) = (term1775 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387546 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387548 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387549 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2025 A K i' _79517 j _79516 ltle k f i dom neut) = (term1776 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387548 K) (@lem6387547 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387550 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387551 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2026 A K i' _79517 j _79516 ltle k f i dom neut) = (term2015 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387550) (@lem6387549 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387552 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387553 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2021 A K i' _79517 j _79516 ltle k f i dom neut) = (term2017 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387551 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6387552 A K ltle k f i dom neut)). Qed.
Lemma lem6387554 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387555 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2027 A K i' _79517 j _79516 ltle k f i dom neut) = (term2028 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387554) (@lem6387553 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387556 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2023 A K i' _79517 j _79516 ltle k f i dom neut x) = (term1773 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2023 A K i' _79517 j _79516 ltle k f i dom neut x)). Qed.
Lemma lem6387557 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387558 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2029 A K i' _79517 j _79516 ltle k f i dom neut x) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6387557) (@lem6387556 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387559 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1953 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (eq_refl (term1953 A K ltle k f i dom neut)). Qed.
Lemma lem6387560 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2031 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2032 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387558 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387559 A K ltle k f i dom neut)). Qed.
Lemma lem6387561 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2033 A K i' _79517 j _79516 ltle k f i dom neut) = (term2034 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387560 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387562 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387563 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2022 A K i' _79517 j _79516 ltle k f i dom neut) = (term2035 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387562 K) (@lem6387561 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387564 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2021 A K i' _79517 j _79516 ltle k f i dom neut) = (term2022 A K i' _79517 j _79516 ltle k f i dom neut)) = ((term2017 A K i' _79517 j _79516 ltle k f i dom neut) = (term2035 A K i' _79517 j _79516 ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387555 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6387563 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387565 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2017 A K i' _79517 j _79516 ltle k f i dom neut) = (term2035 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387564 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6387545 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387567 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6387568 {K : Type'} (P : Prop) (Q : type488 K) : (term2036 K P Q) = (term2037 K P Q).
Proof. exact (@lem6387567 (K -> K) P Q). Qed.
Lemma lem6387569 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2038 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2039 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (@lem6387568 K (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) (term1952 A K ltle k f i dom neut)). Qed.
Lemma lem6387570 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2040 A K ltle k f i dom neut j) = (term1951 A K ltle j k f i dom neut).
Proof. exact (eq_refl (term2040 A K ltle k f i dom neut j)). Qed.
Lemma lem6387571 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2041 A K ltle k f i dom neut) = (term1952 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun j : K -> K => @lem6387570 A K ltle j k f i dom neut)). Qed.
Lemma lem6387572 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387573 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2042 A K ltle k f i dom neut) = (term1953 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387572 K) (@lem6387571 A K ltle k f i dom neut)). Qed.
Lemma lem6387574 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387575 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2038 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2032 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387574 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387573 A K ltle k f i dom neut)). Qed.
Lemma lem6387576 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387577 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2043 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2044 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387576) (@lem6387575 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387578 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2040 A K ltle k f i dom neut j) = (term1951 A K ltle j k f i dom neut).
Proof. exact (eq_refl (term2040 A K ltle k f i dom neut j)). Qed.
Lemma lem6387579 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387580 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2045 A K i' _79517 j _79516 x ltle k f i dom neut j') = (term2046 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (MK_COMB (@lem6387579 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387578 A K ltle j' k f i dom neut)). Qed.
Lemma lem6387581 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2047 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2048 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (fun_ext (fun j' : K -> K => @lem6387580 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387582 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387583 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2039 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2049 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387582 K) (@lem6387581 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387584 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2038 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2039 A K i' _79517 j _79516 x ltle k f i dom neut)) = ((term2032 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2049 A K i' _79517 j _79516 x ltle k f i dom neut)).
Proof. exact (MK_COMB (@lem6387577 A K i' _79517 j _79516 x ltle k f i dom neut) (@lem6387583 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387585 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2032 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2049 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (EQ_MP (@lem6387584 A K i' _79517 j _79516 x ltle k f i dom neut) (@lem6387569 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387587 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6387588 {A K : Type'} (P : Prop) (Q : type220 A K) : (term2050 A K P Q) = (term2051 A K P Q).
Proof. exact (@lem6387587 (type850 A K) P Q). Qed.
Lemma lem6387589 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2052 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2053 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (@lem6387588 A K (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) (term1950 A K ltle j' k f i dom neut)). Qed.
Lemma lem6387590 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2054 A K ltle j k f i dom neut _79517) = (term1949 A K ltle j _79517 k f i dom neut).
Proof. exact (eq_refl (term2054 A K ltle j k f i dom neut _79517)). Qed.
Lemma lem6387591 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2055 A K ltle j k f i dom neut) = (term1950 A K ltle j k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387590 A K ltle j _79517 k f i dom neut)). Qed.
Lemma lem6387592 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387593 {A K : Type'} (ltle : type1402 K) (j : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2056 A K ltle j k f i dom neut) = (term1951 A K ltle j k f i dom neut).
Proof. exact (MK_COMB (@lem6387592 A K) (@lem6387591 A K ltle j k f i dom neut)). Qed.
Lemma lem6387594 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387595 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2052 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2046 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (MK_COMB (@lem6387594 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387593 A K ltle j' k f i dom neut)). Qed.
Lemma lem6387596 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387597 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2057 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2058 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (MK_COMB (@lem6387596) (@lem6387595 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387598 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2054 A K ltle j k f i dom neut _79517') = (term1949 A K ltle j _79517' k f i dom neut).
Proof. exact (eq_refl (term2054 A K ltle j k f i dom neut _79517')). Qed.
Lemma lem6387599 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387600 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2059 A K i' _79517 j _79516 x ltle j' k f i dom neut _79517') = (term2060 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387599 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387598 A K ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387601 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2061 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2062 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (fun_ext (fun _79517' : type850 A K => @lem6387600 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387602 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387603 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2053 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2063 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (MK_COMB (@lem6387602 A K) (@lem6387601 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387604 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2052 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2053 A K i' _79517 j _79516 x ltle j' k f i dom neut)) = ((term2046 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2063 A K i' _79517 j _79516 x ltle j' k f i dom neut)).
Proof. exact (MK_COMB (@lem6387597 A K i' _79517 j _79516 x ltle j' k f i dom neut) (@lem6387603 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387605 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2046 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2063 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (EQ_MP (@lem6387604 A K i' _79517 j _79516 x ltle j' k f i dom neut) (@lem6387589 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387607 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6387608 {A K : Type'} (P : Prop) (Q : type193 A K) : (term2064 A K P Q) = (term2065 A K P Q).
Proof. exact (@lem6387607 (type758 A K) P Q). Qed.
Lemma lem6387609 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2066 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2067 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (@lem6387608 A K (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) (term1948 A K ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387610 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516 : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2068 A K ltle j _79517' k f i dom neut _79516) = (term1947 A K ltle j _79516 _79517' k f i dom neut).
Proof. exact (eq_refl (term2068 A K ltle j _79517' k f i dom neut _79516)). Qed.
Lemma lem6387611 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2069 A K ltle j _79517' k f i dom neut) = (term1948 A K ltle j _79517' k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387610 A K ltle j _79516 _79517' k f i dom neut)). Qed.
Lemma lem6387612 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387613 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2070 A K ltle j _79517' k f i dom neut) = (term1949 A K ltle j _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387612 A K) (@lem6387611 A K ltle j _79517' k f i dom neut)). Qed.
Lemma lem6387614 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387615 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2066 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2060 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387614 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387613 A K ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387616 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387617 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2071 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2072 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387616) (@lem6387615 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387618 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2068 A K ltle j _79517' k f i dom neut _79516') = (term1947 A K ltle j _79516' _79517' k f i dom neut).
Proof. exact (eq_refl (term2068 A K ltle j _79517' k f i dom neut _79516')). Qed.
Lemma lem6387619 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387620 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2073 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut _79516') = (term2074 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387619 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387618 A K ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387621 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2075 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2076 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (fun_ext (fun _79516' : type758 A K => @lem6387620 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387622 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387623 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2067 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2077 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387622 A K) (@lem6387621 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387624 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2066 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2067 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)) = ((term2060 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2077 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)).
Proof. exact (MK_COMB (@lem6387617 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) (@lem6387623 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387625 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2060 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2077 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (EQ_MP (@lem6387624 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) (@lem6387609 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387627 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6387628 {A K : Type'} (P : Prop) (Q : type192 A K) : (term2078 A K P Q) = (term2079 A K P Q).
Proof. exact (@lem6387627 (type757 A K) P Q). Qed.
Lemma lem6387629 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2080 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2081 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (@lem6387628 A K (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) (term1946 A K ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387630 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2082 A K ltle j _79516' _79517' k f i dom neut j') = (term1945 A K ltle j j' _79516' _79517' k f i dom neut).
Proof. exact (eq_refl (term2082 A K ltle j _79516' _79517' k f i dom neut j')). Qed.
Lemma lem6387631 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2083 A K ltle j _79516' _79517' k f i dom neut) = (term1946 A K ltle j _79516' _79517' k f i dom neut).
Proof. exact (fun_ext (fun j' : type757 A K => @lem6387630 A K ltle j j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387632 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387633 {A K : Type'} (ltle : type1402 K) (j : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2084 A K ltle j _79516' _79517' k f i dom neut) = (term1947 A K ltle j _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387632 A K) (@lem6387631 A K ltle j _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387634 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387635 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2080 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2074 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387634 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387633 A K ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387637 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2085 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2086 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387636) (@lem6387635 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387638 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2082 A K ltle j _79516' _79517' k f i dom neut j') = (term1945 A K ltle j j' _79516' _79517' k f i dom neut).
Proof. exact (eq_refl (term2082 A K ltle j _79516' _79517' k f i dom neut j')). Qed.
Lemma lem6387639 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387640 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2087 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut j'') = (term2088 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387639 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387638 A K ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387641 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2089 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2090 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (fun_ext (fun j'' : type757 A K => @lem6387640 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387642 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387643 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2081 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2091 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387642 A K) (@lem6387641 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387644 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2080 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2081 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)) = ((term2074 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2091 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)).
Proof. exact (MK_COMB (@lem6387637 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) (@lem6387643 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387645 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2074 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2091 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (EQ_MP (@lem6387644 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) (@lem6387629 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387647 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1387 A P Q) = (term1388 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6387648 {K : Type'} (P : Prop) (Q : K -> Prop) : (term1387 K P Q) = (term1388 K P Q).
Proof. exact (@lem6387647 K P Q). Qed.
Lemma lem6387649 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2092 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2093 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (@lem6387648 K (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) (term1944 A K ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387650 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2094 A K ltle j j' _79516' _79517' k f i dom neut x) = (term1942 A K ltle j j' _79516' _79517' x k f i dom neut).
Proof. exact (eq_refl (term2094 A K ltle j j' _79516' _79517' k f i dom neut x)). Qed.
Lemma lem6387651 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2095 A K ltle j j' _79516' _79517' k f i dom neut) = (term1944 A K ltle j j' _79516' _79517' k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387650 A K ltle j j' _79516' _79517' x k f i dom neut)). Qed.
Lemma lem6387652 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387653 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2096 A K ltle j j' _79516' _79517' k f i dom neut) = (term1945 A K ltle j j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387652 K) (@lem6387651 A K ltle j j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387654 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387655 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2092 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2088 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387654 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387653 A K ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387656 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6387657 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2097 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2098 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387656) (@lem6387655 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387658 {A K : Type'} (ltle : type1402 K) (j : K -> K) (j' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2094 A K ltle j j' _79516' _79517' k f i dom neut x') = (term1942 A K ltle j j' _79516' _79517' x' k f i dom neut).
Proof. exact (eq_refl (term2094 A K ltle j j' _79516' _79517' k f i dom neut x')). Qed.
Lemma lem6387659 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2030 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (eq_refl (term2030 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6387660 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2099 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut x') = (term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6387659 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6387658 A K ltle j' j'' _79516' _79517' x' k f i dom neut)). Qed.
Lemma lem6387661 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2101 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2102 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (fun_ext (fun x' : K => @lem6387660 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut)). Qed.
Lemma lem6387662 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387663 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2093 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387662 K) (@lem6387661 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387664 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : ((term2092 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2093 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)) = ((term2088 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)).
Proof. exact (MK_COMB (@lem6387657 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) (@lem6387663 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387665 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2088 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) = (term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut).
Proof. exact (EQ_MP (@lem6387664 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) (@lem6387649 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387666 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2090 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2104 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (fun_ext (fun j'' : type757 A K => @lem6387665 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387667 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387668 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2091 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2105 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387667 A K) (@lem6387666 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387669 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2074 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) = (term2105 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut).
Proof. exact (TRANS (@lem6387645 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) (@lem6387668 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387670 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2076 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2106 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (fun_ext (fun _79516' : type758 A K => @lem6387669 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut)). Qed.
Lemma lem6387671 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387672 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2077 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2107 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (MK_COMB (@lem6387671 A K) (@lem6387670 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387673 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2060 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) = (term2107 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut).
Proof. exact (TRANS (@lem6387625 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) (@lem6387672 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387674 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2062 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2108 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (fun_ext (fun _79517' : type850 A K => @lem6387673 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut)). Qed.
Lemma lem6387675 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387676 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2063 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2109 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (MK_COMB (@lem6387675 A K) (@lem6387674 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387677 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2046 A K i' _79517 j _79516 x ltle j' k f i dom neut) = (term2109 A K i' _79517 j _79516 x ltle j' k f i dom neut).
Proof. exact (TRANS (@lem6387605 A K i' _79517 j _79516 x ltle j' k f i dom neut) (@lem6387676 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387678 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2048 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2110 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (fun_ext (fun j' : K -> K => @lem6387677 A K i' _79517 j _79516 x ltle j' k f i dom neut)). Qed.
Lemma lem6387679 {K : Type'} : (@ex (K -> K)) = (@ex (K -> K)).
Proof. exact (eq_refl (@ex (K -> K))). Qed.
Lemma lem6387680 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2049 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2111 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387679 K) (@lem6387678 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387681 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2032 A K i' _79517 j _79516 x ltle k f i dom neut) = (term2111 A K i' _79517 j _79516 x ltle k f i dom neut).
Proof. exact (TRANS (@lem6387585 A K i' _79517 j _79516 x ltle k f i dom neut) (@lem6387680 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387682 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2034 A K i' _79517 j _79516 ltle k f i dom neut) = (term2112 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun x : K => @lem6387681 A K i' _79517 j _79516 x ltle k f i dom neut)). Qed.
Lemma lem6387683 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387684 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2035 A K i' _79517 j _79516 ltle k f i dom neut) = (term2113 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387683 K) (@lem6387682 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387685 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2017 A K i' _79517 j _79516 ltle k f i dom neut) = (term2113 A K i' _79517 j _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6387565 A K i' _79517 j _79516 ltle k f i dom neut) (@lem6387684 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387686 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2019 A K i' _79517 _79516 ltle k f i dom neut) = (term2114 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (fun_ext (fun j : type757 A K => @lem6387685 A K i' _79517 j _79516 ltle k f i dom neut)). Qed.
Lemma lem6387687 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K))). Qed.
Lemma lem6387688 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2020 A K i' _79517 _79516 ltle k f i dom neut) = (term2115 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387687 A K) (@lem6387686 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387689 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2000 A K i' _79517 _79516 ltle k f i dom neut) = (term2115 A K i' _79517 _79516 ltle k f i dom neut).
Proof. exact (TRANS (@lem6387539 A K i' _79517 _79516 ltle k f i dom neut) (@lem6387688 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387690 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2002 A K i' _79517 ltle k f i dom neut) = (term2116 A K i' _79517 ltle k f i dom neut).
Proof. exact (fun_ext (fun _79516 : type758 A K => @lem6387689 A K i' _79517 _79516 ltle k f i dom neut)). Qed.
Lemma lem6387691 {A K : Type'} : (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387692 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2003 A K i' _79517 ltle k f i dom neut) = (term2117 A K i' _79517 ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387691 A K) (@lem6387690 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387693 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1983 A K i' _79517 ltle k f i dom neut) = (term2117 A K i' _79517 ltle k f i dom neut).
Proof. exact (TRANS (@lem6387513 A K i' _79517 ltle k f i dom neut) (@lem6387692 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387694 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1985 A K i' ltle k f i dom neut) = (term2118 A K i' ltle k f i dom neut).
Proof. exact (fun_ext (fun _79517 : type850 A K => @lem6387693 A K i' _79517 ltle k f i dom neut)). Qed.
Lemma lem6387695 {A K : Type'} : (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)) = (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K)).
Proof. exact (eq_refl (@ex ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K))). Qed.
Lemma lem6387696 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1986 A K i' ltle k f i dom neut) = (term2119 A K i' ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387695 A K) (@lem6387694 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387697 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1966 A K i' ltle k f i dom neut) = (term2119 A K i' ltle k f i dom neut).
Proof. exact (TRANS (@lem6387487 A K i' ltle k f i dom neut) (@lem6387696 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387698 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1968 A K ltle k f i dom neut) = (term2120 A K ltle k f i dom neut).
Proof. exact (fun_ext (fun i' : K => @lem6387697 A K i' ltle k f i dom neut)). Qed.
Lemma lem6387699 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6387700 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1969 A K ltle k f i dom neut) = (term2121 A K ltle k f i dom neut).
Proof. exact (MK_COMB (@lem6387699 K) (@lem6387698 A K ltle k f i dom neut)). Qed.
Lemma lem6387701 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1954 A K ltle k f i dom neut) = (term2121 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6387461 A K ltle k f i dom neut) (@lem6387700 A K ltle k f i dom neut)). Qed.
Lemma lem6387702 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1386 A K ltle k f i dom neut) = (term2121 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6387435 A K ltle k f i dom neut) (@lem6387701 A K ltle k f i dom neut)). Qed.
Lemma lem6387703 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1282 A K ltle k f i dom neut) = (term2121 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6386151 A K ltle k f i dom neut) (@lem6387702 A K ltle k f i dom neut)). Qed.
Lemma lem6387704 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1123 A K ltle k f i dom neut) = (term2121 A K ltle k f i dom neut).
Proof. exact (TRANS (@lem6384598 A K ltle k f i dom neut) (@lem6387703 A K ltle k f i dom neut)). Qed.
Lemma lem6387705 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1123 A K ltle k f i dom neut) : term2121 A K ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6387704 A K ltle k f i dom neut) (@lem6384145 A K ltle k f i dom neut h1)). Qed.
Lemma lem6387706 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2119 A K i' ltle k f i dom neut) : term2119 A K i' ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387707 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2117 A K i' _79517 ltle k f i dom neut) : term2117 A K i' _79517 ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387708 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2115 A K i' _79517 _79516 ltle k f i dom neut) : term2115 A K i' _79517 _79516 ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387709 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2113 A K i' _79517 j _79516 ltle k f i dom neut) : term2113 A K i' _79517 j _79516 ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387710 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2111 A K i' _79517 j _79516 x ltle k f i dom neut) : term2111 A K i' _79517 j _79516 x ltle k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387711 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2109 A K i' _79517 j _79516 x ltle j' k f i dom neut) : term2109 A K i' _79517 j _79516 x ltle j' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387712 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2107 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) : term2107 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387713 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2105 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) : term2105 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387714 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) : term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387715 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut) : term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6387716 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6387717 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6387722 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387723 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6387722 K A f x). Qed.
Lemma lem6387725 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6387723 A K f i). Qed.
Lemma lem6387734 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387735 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387734 A (type672 A) f x). Qed.
Lemma lem6387736 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6387735 A (@INSERT A) neut). Qed.
Lemma lem6387737 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6387738 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6387736 A neut) (@lem6387737 A)). Qed.
Lemma lem6387740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387741 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387740 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6387742 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6387741 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6387744 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6387738 A neut) (@lem6387742 A neut)). Qed.
Lemma lem6387745 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6387746 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6387745 A dom) (@lem6387744 A neut)). Qed.
Lemma lem6387748 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387749 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387748 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6387750 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6387749 A (@DIFF A) dom). Qed.
Lemma lem6387751 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6387752 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6387750 A dom) (@lem6387751 A neut)). Qed.
Lemma lem6387754 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387755 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387754 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6387756 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6387755 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6387757 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6387752 A dom neut) (@lem6387756 A dom neut)). Qed.
Lemma lem6387758 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6387746 A dom neut) (@lem6387757 A dom neut)). Qed.
Lemma lem6387759 {A K : Type'} (f : K -> A) (i : K) : (term2126 A K f i) = (term2127 A K f i).
Proof. exact (MK_COMB (@lem6387717 A) (@lem6387725 A K f i)). Qed.
Lemma lem6387760 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2128 A K f i dom neut).
Proof. exact (MK_COMB (@lem6387759 A K f i) (@lem6387758 A dom neut)). Qed.
Lemma lem6387762 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387763 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6387762 A (type686 A) f x). Qed.
Lemma lem6387764 {A K : Type'} (f : K -> A) (i : K) : (term2127 A K f i) = (term2129 A K f i).
Proof. exact (@lem6387763 A (@IN A) (@I (K -> A) f i)). Qed.
Lemma lem6387765 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6387766 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2130 A K f i dom neut).
Proof. exact (MK_COMB (@lem6387764 A K f i) (@lem6387765 A dom neut)). Qed.
Lemma lem6387768 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387769 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6387768 (A -> Prop) Prop f x). Qed.
Lemma lem6387770 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2130 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (@lem6387769 A (term2129 A K f i) (term2125 A dom neut)). Qed.
Lemma lem6387771 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6387766 A K f i dom neut) (@lem6387770 A K f i dom neut)). Qed.
Lemma lem6387772 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6387760 A K f i dom neut) (@lem6387771 A K f i dom neut)). Qed.
Lemma lem6387773 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1391 A K f i dom neut) = (term2132 A K f i dom neut).
Proof. exact (MK_COMB (@lem6387716) (@lem6387772 A K f i dom neut)). Qed.
Lemma lem6387774 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6387781 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387782 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6387781 K (type686 K) f x). Qed.
Lemma lem6387783 {K : Type'} (i : K) : (@IN K i) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i).
Proof. exact (@lem6387782 K (@IN K) i). Qed.
Lemma lem6387784 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6387785 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i k).
Proof. exact (MK_COMB (@lem6387783 K i) (@lem6387784 K k)). Qed.
Lemma lem6387787 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387788 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6387787 (K -> Prop) Prop f x). Qed.
Lemma lem6387789 {K : Type'} (i : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) i k) = (term2133 K i k).
Proof. exact (@lem6387788 K (@I (K -> (K -> Prop) -> Prop) (@IN K) i) k). Qed.
Lemma lem6387791 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (term2133 K i k).
Proof. exact (TRANS (@lem6387785 K i k) (@lem6387789 K i k)). Qed.
Lemma lem6387792 {K : Type'} (i : K) (k : K -> Prop) : (term1405 K i k) = (term2134 K i k).
Proof. exact (MK_COMB (@lem6387774) (@lem6387791 K i k)). Qed.
Lemma lem6387793 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6387794 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term2135 K i k).
Proof. exact (MK_COMB (@lem6387793) (@lem6387792 K i k)). Qed.
Lemma lem6387795 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term2136 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6387794 K i k) (@lem6387773 A K f i dom neut)). Qed.
Lemma lem6387796 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6387801 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387802 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6387801 K A f x). Qed.
Lemma lem6387804 {A K : Type'} (f : K -> A) (x' : K) : (f x') = (@I (K -> A) f x').
Proof. exact (@lem6387802 A K f x'). Qed.
Lemma lem6387813 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387814 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387813 A (type672 A) f x). Qed.
Lemma lem6387815 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6387814 A (@INSERT A) neut). Qed.
Lemma lem6387816 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6387817 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6387815 A neut) (@lem6387816 A)). Qed.
Lemma lem6387819 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387820 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387819 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6387821 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6387820 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6387823 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6387817 A neut) (@lem6387821 A neut)). Qed.
Lemma lem6387824 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6387825 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6387824 A dom) (@lem6387823 A neut)). Qed.
Lemma lem6387827 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387828 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387827 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6387829 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6387828 A (@DIFF A) dom). Qed.
Lemma lem6387830 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6387831 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6387829 A dom) (@lem6387830 A neut)). Qed.
Lemma lem6387833 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387834 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387833 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6387835 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6387834 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6387836 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6387831 A dom neut) (@lem6387835 A dom neut)). Qed.
Lemma lem6387837 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6387825 A dom neut) (@lem6387836 A dom neut)). Qed.
Lemma lem6387838 {A K : Type'} (f : K -> A) (x' : K) : (term2126 A K f x') = (term2127 A K f x').
Proof. exact (MK_COMB (@lem6387796 A) (@lem6387804 A K f x')). Qed.
Lemma lem6387839 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term681 A K f x' dom neut) = (term2128 A K f x' dom neut).
Proof. exact (MK_COMB (@lem6387838 A K f x') (@lem6387837 A dom neut)). Qed.
Lemma lem6387841 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387842 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6387841 A (type686 A) f x). Qed.
Lemma lem6387843 {A K : Type'} (f : K -> A) (x' : K) : (term2127 A K f x') = (term2129 A K f x').
Proof. exact (@lem6387842 A (@IN A) (@I (K -> A) f x')). Qed.
Lemma lem6387844 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6387845 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x' dom neut) = (term2130 A K f x' dom neut).
Proof. exact (MK_COMB (@lem6387843 A K f x') (@lem6387844 A dom neut)). Qed.
Lemma lem6387847 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387848 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6387847 (A -> Prop) Prop f x). Qed.
Lemma lem6387849 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x' dom neut) = (term2131 A K f x' dom neut).
Proof. exact (@lem6387848 A (term2129 A K f x') (term2125 A dom neut)). Qed.
Lemma lem6387850 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x' dom neut) = (term2131 A K f x' dom neut).
Proof. exact (TRANS (@lem6387845 A K f x' dom neut) (@lem6387849 A K f x' dom neut)). Qed.
Lemma lem6387851 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term681 A K f x' dom neut) = (term2131 A K f x' dom neut).
Proof. exact (TRANS (@lem6387839 A K f x' dom neut) (@lem6387850 A K f x' dom neut)). Qed.
Lemma lem6387858 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387859 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6387858 K (type686 K) f x). Qed.
Lemma lem6387860 {K : Type'} (x' : K) : (@IN K x') = (@I (K -> (K -> Prop) -> Prop) (@IN K) x').
Proof. exact (@lem6387859 K (@IN K) x'). Qed.
Lemma lem6387861 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6387862 {K : Type'} (x' : K) (k : K -> Prop) : (@IN K x' k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x' k).
Proof. exact (MK_COMB (@lem6387860 K x') (@lem6387861 K k)). Qed.
Lemma lem6387864 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387865 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6387864 (K -> Prop) Prop f x). Qed.
Lemma lem6387866 {K : Type'} (x' : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x' k) = (term2133 K x' k).
Proof. exact (@lem6387865 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x') k). Qed.
Lemma lem6387868 {K : Type'} (x' : K) (k : K -> Prop) : (@IN K x' k) = (term2133 K x' k).
Proof. exact (TRANS (@lem6387862 K x' k) (@lem6387866 K x' k)). Qed.
Lemma lem6387869 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387870 {K : Type'} (x' : K) (k : K -> Prop) : (term673 K x' k) = (term2137 K x' k).
Proof. exact (MK_COMB (@lem6387869) (@lem6387868 K x' k)). Qed.
Lemma lem6387871 {A K : Type'} (k : K -> Prop) (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x' dom neut) = (term2138 A K k f x' dom neut).
Proof. exact (MK_COMB (@lem6387870 K x' k) (@lem6387851 A K f x' dom neut)). Qed.
Lemma lem6387872 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387873 {A K : Type'} (k : K -> Prop) (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term785 A K k f x' dom neut) = (term2139 A K k f x' dom neut).
Proof. exact (MK_COMB (@lem6387872) (@lem6387871 A K k f x' dom neut)). Qed.
Lemma lem6387874 {A K : Type'} (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1597 A K x' k f i dom neut) = (term2140 A K x' k f i dom neut).
Proof. exact (MK_COMB (@lem6387873 A K k f x' dom neut) (@lem6387795 A K k f i dom neut)). Qed.
Lemma lem6387875 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6387886 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387887 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387886 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6387888 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (_79517' k) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k).
Proof. exact (@lem6387887 A K _79517' k). Qed.
Lemma lem6387889 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6387890 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f).
Proof. exact (MK_COMB (@lem6387888 A K _79517' k) (@lem6387889 A K f)). Qed.
Lemma lem6387892 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387893 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387892 (K -> A) (type671 A K) f x). Qed.
Lemma lem6387894 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f) = (term2141 A K _79517' k f).
Proof. exact (@lem6387893 A K (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k) f). Qed.
Lemma lem6387895 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (term2141 A K _79517' k f).
Proof. exact (TRANS (@lem6387890 A K _79517' k f) (@lem6387894 A K _79517' k f)). Qed.
Lemma lem6387896 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6387897 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2142 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6387895 A K _79517' k f) (@lem6387896 A dom)). Qed.
Lemma lem6387899 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387900 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387899 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6387901 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2142 A K _79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (@lem6387900 A K (term2141 A K _79517' k f) dom). Qed.
Lemma lem6387902 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (TRANS (@lem6387897 A K _79517' k f dom) (@lem6387901 A K _79517' k f dom)). Qed.
Lemma lem6387903 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6387904 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2144 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6387902 A K _79517' k f dom) (@lem6387903 A neut)). Qed.
Lemma lem6387906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387907 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6387906 A K f x). Qed.
Lemma lem6387908 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2144 A K _79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (@lem6387907 A K (term2143 A K _79517' k f dom) neut). Qed.
Lemma lem6387910 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6387904 A K _79517' k f dom neut) (@lem6387908 A K _79517' k f dom neut)). Qed.
Lemma lem6387911 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6387912 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term974 A K _79517' k f dom neut) = (term2146 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6387875 K) (@lem6387910 A K _79517' k f dom neut)). Qed.
Lemma lem6387913 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((_79517' k f dom neut) = i) = ((term2145 A K _79517' k f dom neut) = i).
Proof. exact (MK_COMB (@lem6387912 A K _79517' k f dom neut) (@lem6387911 K i)). Qed.
Lemma lem6387914 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6387915 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1250 A K _79517' k f dom neut i) = (term2147 A K _79517' k f dom neut i).
Proof. exact (MK_COMB (@lem6387914) (@lem6387913 A K _79517' k f dom neut i)). Qed.
Lemma lem6387916 {A K : Type'} (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1796 A K _79517' x' k f i dom neut) = (term2148 A K _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6387915 A K _79517' k f dom neut i) (@lem6387874 A K x' k f i dom neut)). Qed.
Lemma lem6387931 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387932 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387931 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6387933 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) : (_79516' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle).
Proof. exact (@lem6387932 A K _79516' ltle). Qed.
Lemma lem6387934 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6387935 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k).
Proof. exact (MK_COMB (@lem6387933 A K _79516' ltle) (@lem6387934 K k)). Qed.
Lemma lem6387937 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387938 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387937 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6387939 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (@lem6387938 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle) k). Qed.
Lemma lem6387940 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (TRANS (@lem6387935 A K _79516' ltle k) (@lem6387939 A K _79516' ltle k)). Qed.
Lemma lem6387941 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6387942 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2150 A K _79516' ltle k f).
Proof. exact (MK_COMB (@lem6387940 A K _79516' ltle k) (@lem6387941 A K f)). Qed.
Lemma lem6387944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387945 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387944 (K -> A) (type671 A K) f x). Qed.
Lemma lem6387946 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (@lem6387945 A K (term2149 A K _79516' ltle k) f). Qed.
Lemma lem6387947 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (TRANS (@lem6387942 A K _79516' ltle k f) (@lem6387946 A K _79516' ltle k f)). Qed.
Lemma lem6387948 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6387949 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2152 A K _79516' ltle k f dom).
Proof. exact (MK_COMB (@lem6387947 A K _79516' ltle k f) (@lem6387948 A dom)). Qed.
Lemma lem6387951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387952 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6387951 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6387953 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (@lem6387952 A K (term2151 A K _79516' ltle k f) dom). Qed.
Lemma lem6387954 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (TRANS (@lem6387949 A K _79516' ltle k f dom) (@lem6387953 A K _79516' ltle k f dom)). Qed.
Lemma lem6387955 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6387956 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2154 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6387954 A K _79516' ltle k f dom) (@lem6387955 A neut)). Qed.
Lemma lem6387958 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387959 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6387958 A K f x). Qed.
Lemma lem6387960 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (@lem6387959 A K (term2153 A K _79516' ltle k f dom) neut). Qed.
Lemma lem6387962 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6387956 A K _79516' ltle k f dom neut) (@lem6387960 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6387963 {K : Type'} (j : K) : (@eq K j) = (@eq K j).
Proof. exact (eq_refl (@eq K j)). Qed.
Lemma lem6387964 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j = (_79516' ltle k f dom neut)) = (j = (term2155 A K _79516' ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6387963 K j) (@lem6387962 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6387965 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6387966 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6387971 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387972 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6387971 K A f x). Qed.
Lemma lem6387974 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6387972 A K f j). Qed.
Lemma lem6387983 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387984 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387983 A (type672 A) f x). Qed.
Lemma lem6387985 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6387984 A (@INSERT A) neut). Qed.
Lemma lem6387986 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6387987 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6387985 A neut) (@lem6387986 A)). Qed.
Lemma lem6387989 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387990 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387989 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6387991 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6387990 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6387993 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6387987 A neut) (@lem6387991 A neut)). Qed.
Lemma lem6387994 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6387995 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6387994 A dom) (@lem6387993 A neut)). Qed.
Lemma lem6387997 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6387998 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6387997 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6387999 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6387998 A (@DIFF A) dom). Qed.
Lemma lem6388000 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388001 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6387999 A dom) (@lem6388000 A neut)). Qed.
Lemma lem6388003 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388004 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388003 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388005 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388004 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388006 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388001 A dom neut) (@lem6388005 A dom neut)). Qed.
Lemma lem6388007 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6387995 A dom neut) (@lem6388006 A dom neut)). Qed.
Lemma lem6388008 {A K : Type'} (f : K -> A) (j : K) : (term2126 A K f j) = (term2127 A K f j).
Proof. exact (MK_COMB (@lem6387966 A) (@lem6387974 A K f j)). Qed.
Lemma lem6388009 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2128 A K f j dom neut).
Proof. exact (MK_COMB (@lem6388008 A K f j) (@lem6388007 A dom neut)). Qed.
Lemma lem6388011 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388012 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388011 A (type686 A) f x). Qed.
Lemma lem6388013 {A K : Type'} (f : K -> A) (j : K) : (term2127 A K f j) = (term2129 A K f j).
Proof. exact (@lem6388012 A (@IN A) (@I (K -> A) f j)). Qed.
Lemma lem6388014 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388015 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2130 A K f j dom neut).
Proof. exact (MK_COMB (@lem6388013 A K f j) (@lem6388014 A dom neut)). Qed.
Lemma lem6388017 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388018 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388017 (A -> Prop) Prop f x). Qed.
Lemma lem6388019 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2130 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (@lem6388018 A (term2129 A K f j) (term2125 A dom neut)). Qed.
Lemma lem6388020 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6388015 A K f j dom neut) (@lem6388019 A K f j dom neut)). Qed.
Lemma lem6388021 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6388009 A K f j dom neut) (@lem6388020 A K f j dom neut)). Qed.
Lemma lem6388022 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1391 A K f j dom neut) = (term2132 A K f j dom neut).
Proof. exact (MK_COMB (@lem6387965) (@lem6388021 A K f j dom neut)). Qed.
Lemma lem6388023 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388030 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388031 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388030 K (type686 K) f x). Qed.
Lemma lem6388032 {K : Type'} (j : K) : (@IN K j) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j).
Proof. exact (@lem6388031 K (@IN K) j). Qed.
Lemma lem6388033 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388034 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j k).
Proof. exact (MK_COMB (@lem6388032 K j) (@lem6388033 K k)). Qed.
Lemma lem6388036 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388037 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388036 (K -> Prop) Prop f x). Qed.
Lemma lem6388038 {K : Type'} (j : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) j k) = (term2133 K j k).
Proof. exact (@lem6388037 K (@I (K -> (K -> Prop) -> Prop) (@IN K) j) k). Qed.
Lemma lem6388040 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (term2133 K j k).
Proof. exact (TRANS (@lem6388034 K j k) (@lem6388038 K j k)). Qed.
Lemma lem6388041 {K : Type'} (j : K) (k : K -> Prop) : (term1405 K j k) = (term2134 K j k).
Proof. exact (MK_COMB (@lem6388023) (@lem6388040 K j k)). Qed.
Lemma lem6388042 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388043 {K : Type'} (j : K) (k : K -> Prop) : (term1171 K j k) = (term2135 K j k).
Proof. exact (MK_COMB (@lem6388042) (@lem6388041 K j k)). Qed.
Lemma lem6388044 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f j dom neut) = (term2136 A K k f j dom neut).
Proof. exact (MK_COMB (@lem6388043 K j k) (@lem6388022 A K f j dom neut)). Qed.
Lemma lem6388045 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388060 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388061 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388060 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6388062 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) : (_79516' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle).
Proof. exact (@lem6388061 A K _79516' ltle). Qed.
Lemma lem6388063 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388064 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k).
Proof. exact (MK_COMB (@lem6388062 A K _79516' ltle) (@lem6388063 K k)). Qed.
Lemma lem6388066 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388067 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388066 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6388068 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (@lem6388067 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle) k). Qed.
Lemma lem6388069 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (TRANS (@lem6388064 A K _79516' ltle k) (@lem6388068 A K _79516' ltle k)). Qed.
Lemma lem6388070 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388071 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2150 A K _79516' ltle k f).
Proof. exact (MK_COMB (@lem6388069 A K _79516' ltle k) (@lem6388070 A K f)). Qed.
Lemma lem6388073 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388074 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388073 (K -> A) (type671 A K) f x). Qed.
Lemma lem6388075 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (@lem6388074 A K (term2149 A K _79516' ltle k) f). Qed.
Lemma lem6388076 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (TRANS (@lem6388071 A K _79516' ltle k f) (@lem6388075 A K _79516' ltle k f)). Qed.
Lemma lem6388077 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388078 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2152 A K _79516' ltle k f dom).
Proof. exact (MK_COMB (@lem6388076 A K _79516' ltle k f) (@lem6388077 A dom)). Qed.
Lemma lem6388080 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388081 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388080 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6388082 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (@lem6388081 A K (term2151 A K _79516' ltle k f) dom). Qed.
Lemma lem6388083 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (TRANS (@lem6388078 A K _79516' ltle k f dom) (@lem6388082 A K _79516' ltle k f dom)). Qed.
Lemma lem6388084 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388085 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2154 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388083 A K _79516' ltle k f dom) (@lem6388084 A neut)). Qed.
Lemma lem6388087 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388088 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6388087 A K f x). Qed.
Lemma lem6388089 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388088 A K (term2153 A K _79516' ltle k f dom) neut). Qed.
Lemma lem6388091 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388085 A K _79516' ltle k f dom neut) (@lem6388089 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388092 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (ltle j).
Proof. exact (eq_refl (ltle j)). Qed.
Lemma lem6388093 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term892 A K j _79516' ltle k f dom neut) = (term2156 A K j _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388092 K ltle j) (@lem6388091 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388095 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388096 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6388095 K (K -> Prop) f x). Qed.
Lemma lem6388097 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6388096 K ltle j). Qed.
Lemma lem6388098 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2155 A K _79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (eq_refl (term2155 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388099 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2156 A K j _79516' ltle k f dom neut) = (term2157 A K j _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388097 K ltle j) (@lem6388098 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388101 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388102 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6388101 K Prop f x). Qed.
Lemma lem6388103 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2157 A K j _79516' ltle k f dom neut) = (term2158 A K j _79516' ltle k f dom neut).
Proof. exact (@lem6388102 K (@I (K -> K -> Prop) ltle j) (term2155 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388104 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2156 A K j _79516' ltle k f dom neut) = (term2158 A K j _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388099 A K j _79516' ltle k f dom neut) (@lem6388103 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388105 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term892 A K j _79516' ltle k f dom neut) = (term2158 A K j _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388093 A K j _79516' ltle k f dom neut) (@lem6388104 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388106 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2159 A K j _79516' ltle k f dom neut) = (term2160 A K j _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388045) (@lem6388105 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388107 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388108 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1175 A K j _79516' ltle k f dom neut) = (term2161 A K j _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388107) (@lem6388106 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388109 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1177 A K _79516' ltle k f j dom neut) = (term2162 A K _79516' ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6388108 A K j _79516' ltle k f dom neut) (@lem6388044 A K k f j dom neut)). Qed.
Lemma lem6388110 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388111 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1180 A K _79516' ltle k f j dom neut) = (term2163 A K _79516' ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6388110) (@lem6388109 A K _79516' ltle k f j dom neut)). Qed.
Lemma lem6388112 {A K : Type'} (j : K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1182 A K j _79516' ltle k f dom neut) = (term2164 A K j _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388111 A K _79516' ltle k f j dom neut) (@lem6387964 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388113 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1183 A K _79516' ltle k f dom neut) = (term2165 A K _79516' ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6388112 A K j _79516' ltle k f dom neut)). Qed.
Lemma lem6388114 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6388115 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1184 A K _79516' ltle k f dom neut) = (term2166 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388114 K) (@lem6388113 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388116 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388117 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388131 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388130 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6388132 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) : (_79516' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle).
Proof. exact (@lem6388131 A K _79516' ltle). Qed.
Lemma lem6388133 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388134 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k).
Proof. exact (MK_COMB (@lem6388132 A K _79516' ltle) (@lem6388133 K k)). Qed.
Lemma lem6388136 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388137 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388136 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6388138 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (@lem6388137 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle) k). Qed.
Lemma lem6388139 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (TRANS (@lem6388134 A K _79516' ltle k) (@lem6388138 A K _79516' ltle k)). Qed.
Lemma lem6388140 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388141 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2150 A K _79516' ltle k f).
Proof. exact (MK_COMB (@lem6388139 A K _79516' ltle k) (@lem6388140 A K f)). Qed.
Lemma lem6388143 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388144 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388143 (K -> A) (type671 A K) f x). Qed.
Lemma lem6388145 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (@lem6388144 A K (term2149 A K _79516' ltle k) f). Qed.
Lemma lem6388146 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (TRANS (@lem6388141 A K _79516' ltle k f) (@lem6388145 A K _79516' ltle k f)). Qed.
Lemma lem6388147 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388148 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2152 A K _79516' ltle k f dom).
Proof. exact (MK_COMB (@lem6388146 A K _79516' ltle k f) (@lem6388147 A dom)). Qed.
Lemma lem6388150 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388151 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388150 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6388152 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (@lem6388151 A K (term2151 A K _79516' ltle k f) dom). Qed.
Lemma lem6388153 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (TRANS (@lem6388148 A K _79516' ltle k f dom) (@lem6388152 A K _79516' ltle k f dom)). Qed.
Lemma lem6388154 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388155 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2154 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388153 A K _79516' ltle k f dom) (@lem6388154 A neut)). Qed.
Lemma lem6388157 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388158 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6388157 A K f x). Qed.
Lemma lem6388159 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388158 A K (term2153 A K _79516' ltle k f dom) neut). Qed.
Lemma lem6388161 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388155 A K _79516' ltle k f dom neut) (@lem6388159 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388162 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term883 A K _79516' ltle k f dom neut) = (term2167 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388117 A K f) (@lem6388161 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388164 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388165 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388164 K A f x). Qed.
Lemma lem6388166 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2167 A K _79516' ltle k f dom neut) = (term2168 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388165 A K f (term2155 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388167 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term883 A K _79516' ltle k f dom neut) = (term2168 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388162 A K _79516' ltle k f dom neut) (@lem6388166 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388176 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388177 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388176 A (type672 A) f x). Qed.
Lemma lem6388178 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388177 A (@INSERT A) neut). Qed.
Lemma lem6388179 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388180 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388178 A neut) (@lem6388179 A)). Qed.
Lemma lem6388182 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388183 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388182 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388184 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388183 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388186 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388180 A neut) (@lem6388184 A neut)). Qed.
Lemma lem6388187 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388188 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388187 A dom) (@lem6388186 A neut)). Qed.
Lemma lem6388190 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388191 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388190 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388192 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388191 A (@DIFF A) dom). Qed.
Lemma lem6388193 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388194 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388192 A dom) (@lem6388193 A neut)). Qed.
Lemma lem6388196 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388197 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388196 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388198 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388197 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388199 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388194 A dom neut) (@lem6388198 A dom neut)). Qed.
Lemma lem6388200 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388188 A dom neut) (@lem6388199 A dom neut)). Qed.
Lemma lem6388201 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term885 A K _79516' ltle k f dom neut) = (term2169 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388116 A) (@lem6388167 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388202 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term888 A K _79516' ltle k f dom neut) = (term2170 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388201 A K _79516' ltle k f dom neut) (@lem6388200 A dom neut)). Qed.
Lemma lem6388204 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388205 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388204 A (type686 A) f x). Qed.
Lemma lem6388206 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2169 A K _79516' ltle k f dom neut) = (term2171 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388205 A (@IN A) (term2168 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388207 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388208 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2170 A K _79516' ltle k f dom neut) = (term2172 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388206 A K _79516' ltle k f dom neut) (@lem6388207 A dom neut)). Qed.
Lemma lem6388210 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388211 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388210 (A -> Prop) Prop f x). Qed.
Lemma lem6388212 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2172 A K _79516' ltle k f dom neut) = (term2173 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388211 A (term2171 A K _79516' ltle k f dom neut) (term2125 A dom neut)). Qed.
Lemma lem6388213 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2170 A K _79516' ltle k f dom neut) = (term2173 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388208 A K _79516' ltle k f dom neut) (@lem6388212 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388214 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term888 A K _79516' ltle k f dom neut) = (term2173 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388202 A K _79516' ltle k f dom neut) (@lem6388213 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388215 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388216 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516' ltle k f dom neut) = (term2174 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388215) (@lem6388214 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388217 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1185 A K _79516' ltle k f dom neut) = (term2175 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388216 A K _79516' ltle k f dom neut) (@lem6388115 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388218 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6388231 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388232 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388231 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6388233 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) : (_79516' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle).
Proof. exact (@lem6388232 A K _79516' ltle). Qed.
Lemma lem6388234 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388235 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k).
Proof. exact (MK_COMB (@lem6388233 A K _79516' ltle) (@lem6388234 K k)). Qed.
Lemma lem6388237 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388238 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388237 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6388239 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (@lem6388238 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516' ltle) k). Qed.
Lemma lem6388240 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516' ltle k) = (term2149 A K _79516' ltle k).
Proof. exact (TRANS (@lem6388235 A K _79516' ltle k) (@lem6388239 A K _79516' ltle k)). Qed.
Lemma lem6388241 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388242 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2150 A K _79516' ltle k f).
Proof. exact (MK_COMB (@lem6388240 A K _79516' ltle k) (@lem6388241 A K f)). Qed.
Lemma lem6388244 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388245 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388244 (K -> A) (type671 A K) f x). Qed.
Lemma lem6388246 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (@lem6388245 A K (term2149 A K _79516' ltle k) f). Qed.
Lemma lem6388247 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516' ltle k f) = (term2151 A K _79516' ltle k f).
Proof. exact (TRANS (@lem6388242 A K _79516' ltle k f) (@lem6388246 A K _79516' ltle k f)). Qed.
Lemma lem6388248 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388249 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2152 A K _79516' ltle k f dom).
Proof. exact (MK_COMB (@lem6388247 A K _79516' ltle k f) (@lem6388248 A dom)). Qed.
Lemma lem6388251 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388252 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388251 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6388253 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (@lem6388252 A K (term2151 A K _79516' ltle k f) dom). Qed.
Lemma lem6388254 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516' ltle k f dom) = (term2153 A K _79516' ltle k f dom).
Proof. exact (TRANS (@lem6388249 A K _79516' ltle k f dom) (@lem6388253 A K _79516' ltle k f dom)). Qed.
Lemma lem6388255 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388256 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2154 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388254 A K _79516' ltle k f dom) (@lem6388255 A neut)). Qed.
Lemma lem6388258 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388259 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6388258 A K f x). Qed.
Lemma lem6388260 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388259 A K (term2153 A K _79516' ltle k f dom) neut). Qed.
Lemma lem6388262 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516' ltle k f dom neut) = (term2155 A K _79516' ltle k f dom neut).
Proof. exact (TRANS (@lem6388256 A K _79516' ltle k f dom neut) (@lem6388260 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388263 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388264 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term877 A K _79516' ltle k f dom neut) = (term2176 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388218 K) (@lem6388262 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388265 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term879 A K _79516' ltle f dom neut k) = (term2177 A K _79516' ltle f dom neut k).
Proof. exact (MK_COMB (@lem6388264 A K _79516' ltle k f dom neut) (@lem6388263 K k)). Qed.
Lemma lem6388267 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388268 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388267 K (type686 K) f x). Qed.
Lemma lem6388269 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2176 A K _79516' ltle k f dom neut) = (term2178 A K _79516' ltle k f dom neut).
Proof. exact (@lem6388268 K (@IN K) (term2155 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388270 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388271 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2177 A K _79516' ltle f dom neut k) = (term2179 A K _79516' ltle f dom neut k).
Proof. exact (MK_COMB (@lem6388269 A K _79516' ltle k f dom neut) (@lem6388270 K k)). Qed.
Lemma lem6388273 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388274 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388273 (K -> Prop) Prop f x). Qed.
Lemma lem6388275 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2179 A K _79516' ltle f dom neut k) = (term2180 A K _79516' ltle f dom neut k).
Proof. exact (@lem6388274 K (term2178 A K _79516' ltle k f dom neut) k). Qed.
Lemma lem6388276 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2177 A K _79516' ltle f dom neut k) = (term2180 A K _79516' ltle f dom neut k).
Proof. exact (TRANS (@lem6388271 A K _79516' ltle f dom neut k) (@lem6388275 A K _79516' ltle f dom neut k)). Qed.
Lemma lem6388277 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term879 A K _79516' ltle f dom neut k) = (term2180 A K _79516' ltle f dom neut k).
Proof. exact (TRANS (@lem6388265 A K _79516' ltle f dom neut k) (@lem6388276 A K _79516' ltle f dom neut k)). Qed.
Lemma lem6388278 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388279 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516' ltle f dom neut k) = (term2181 A K _79516' ltle f dom neut k).
Proof. exact (MK_COMB (@lem6388278) (@lem6388277 A K _79516' ltle f dom neut k)). Qed.
Lemma lem6388280 {A K : Type'} (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516' ltle k f dom neut) = (term2182 A K _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388279 A K _79516' ltle f dom neut k) (@lem6388217 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388281 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388282 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6388297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388298 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388297 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6388299 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) : (j'' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle).
Proof. exact (@lem6388298 A K j'' ltle). Qed.
Lemma lem6388300 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388301 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k).
Proof. exact (MK_COMB (@lem6388299 A K j'' ltle) (@lem6388300 K k)). Qed.
Lemma lem6388303 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388304 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388303 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6388305 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (@lem6388304 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle) k). Qed.
Lemma lem6388306 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (TRANS (@lem6388301 A K j'' ltle k) (@lem6388305 A K j'' ltle k)). Qed.
Lemma lem6388307 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388308 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2184 A K j'' ltle k f).
Proof. exact (MK_COMB (@lem6388306 A K j'' ltle k) (@lem6388307 A K f)). Qed.
Lemma lem6388310 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388311 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388310 (K -> A) (type668 A K) f x). Qed.
Lemma lem6388312 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (@lem6388311 A K (term2183 A K j'' ltle k) f). Qed.
Lemma lem6388313 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (TRANS (@lem6388308 A K j'' ltle k f) (@lem6388312 A K j'' ltle k f)). Qed.
Lemma lem6388314 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388315 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2186 A K j'' ltle k f dom).
Proof. exact (MK_COMB (@lem6388313 A K j'' ltle k f) (@lem6388314 A dom)). Qed.
Lemma lem6388317 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388318 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388317 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6388319 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (@lem6388318 A K (term2185 A K j'' ltle k f) dom). Qed.
Lemma lem6388320 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (TRANS (@lem6388315 A K j'' ltle k f dom) (@lem6388319 A K j'' ltle k f dom)). Qed.
Lemma lem6388321 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388322 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2188 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388320 A K j'' ltle k f dom) (@lem6388321 A neut)). Qed.
Lemma lem6388324 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388325 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6388324 A (K -> K) f x). Qed.
Lemma lem6388326 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (@lem6388325 A K (term2187 A K j'' ltle k f dom) neut). Qed.
Lemma lem6388327 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (TRANS (@lem6388322 A K j'' ltle k f dom neut) (@lem6388326 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388328 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388329 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2190 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388327 A K j'' ltle k f dom neut) (@lem6388328 K x)). Qed.
Lemma lem6388331 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388332 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388331 K K f x). Qed.
Lemma lem6388333 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388332 K (term2189 A K j'' ltle k f dom neut) x). Qed.
Lemma lem6388335 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388329 A K j'' ltle k f dom neut x) (@lem6388333 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388336 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388337 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2192 A K j'' ltle k f dom neut x) = (term2193 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388282 K) (@lem6388335 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388338 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((j'' ltle k f dom neut x) = x) = ((term2191 A K j'' ltle k f dom neut x) = x).
Proof. exact (MK_COMB (@lem6388337 A K j'' ltle k f dom neut x) (@lem6388336 K x)). Qed.
Lemma lem6388339 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2194 A K j'' ltle k f dom neut x) = (term2195 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388281) (@lem6388338 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388340 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388341 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388356 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388357 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388356 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6388358 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) : (j'' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle).
Proof. exact (@lem6388357 A K j'' ltle). Qed.
Lemma lem6388359 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388360 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k).
Proof. exact (MK_COMB (@lem6388358 A K j'' ltle) (@lem6388359 K k)). Qed.
Lemma lem6388362 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388363 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388362 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6388364 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (@lem6388363 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle) k). Qed.
Lemma lem6388365 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (TRANS (@lem6388360 A K j'' ltle k) (@lem6388364 A K j'' ltle k)). Qed.
Lemma lem6388366 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388367 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2184 A K j'' ltle k f).
Proof. exact (MK_COMB (@lem6388365 A K j'' ltle k) (@lem6388366 A K f)). Qed.
Lemma lem6388369 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388370 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388369 (K -> A) (type668 A K) f x). Qed.
Lemma lem6388371 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (@lem6388370 A K (term2183 A K j'' ltle k) f). Qed.
Lemma lem6388372 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (TRANS (@lem6388367 A K j'' ltle k f) (@lem6388371 A K j'' ltle k f)). Qed.
Lemma lem6388373 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388374 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2186 A K j'' ltle k f dom).
Proof. exact (MK_COMB (@lem6388372 A K j'' ltle k f) (@lem6388373 A dom)). Qed.
Lemma lem6388376 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388377 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388376 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6388378 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (@lem6388377 A K (term2185 A K j'' ltle k f) dom). Qed.
Lemma lem6388379 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (TRANS (@lem6388374 A K j'' ltle k f dom) (@lem6388378 A K j'' ltle k f dom)). Qed.
Lemma lem6388380 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388381 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2188 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388379 A K j'' ltle k f dom) (@lem6388380 A neut)). Qed.
Lemma lem6388383 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388384 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6388383 A (K -> K) f x). Qed.
Lemma lem6388385 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (@lem6388384 A K (term2187 A K j'' ltle k f dom) neut). Qed.
Lemma lem6388386 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (TRANS (@lem6388381 A K j'' ltle k f dom neut) (@lem6388385 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388387 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388388 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2190 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388386 A K j'' ltle k f dom neut) (@lem6388387 K x)). Qed.
Lemma lem6388390 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388391 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388390 K K f x). Qed.
Lemma lem6388392 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388391 K (term2189 A K j'' ltle k f dom neut) x). Qed.
Lemma lem6388394 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388388 A K j'' ltle k f dom neut x) (@lem6388392 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388395 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2196 A K j'' ltle k f dom neut x) = (term2197 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388341 A K f) (@lem6388394 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388398 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388397 K A f x). Qed.
Lemma lem6388399 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2197 A K j'' ltle k f dom neut x) = (term2198 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388398 A K f (term2191 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388400 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2196 A K j'' ltle k f dom neut x) = (term2198 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388395 A K j'' ltle k f dom neut x) (@lem6388399 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388409 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388410 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388409 A (type672 A) f x). Qed.
Lemma lem6388411 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388410 A (@INSERT A) neut). Qed.
Lemma lem6388412 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388413 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388411 A neut) (@lem6388412 A)). Qed.
Lemma lem6388415 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388416 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388415 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388417 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388416 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388419 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388413 A neut) (@lem6388417 A neut)). Qed.
Lemma lem6388420 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388421 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388420 A dom) (@lem6388419 A neut)). Qed.
Lemma lem6388423 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388424 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388423 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388425 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388424 A (@DIFF A) dom). Qed.
Lemma lem6388426 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388427 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388425 A dom) (@lem6388426 A neut)). Qed.
Lemma lem6388429 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388430 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388429 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388431 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388430 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388432 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388427 A dom neut) (@lem6388431 A dom neut)). Qed.
Lemma lem6388433 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388421 A dom neut) (@lem6388432 A dom neut)). Qed.
Lemma lem6388434 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2199 A K j'' ltle k f dom neut x) = (term2200 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388340 A) (@lem6388400 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388435 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2201 A K j'' ltle k f x dom neut) = (term2202 A K j'' ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6388434 A K j'' ltle k f dom neut x) (@lem6388433 A dom neut)). Qed.
Lemma lem6388437 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388438 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388437 A (type686 A) f x). Qed.
Lemma lem6388439 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2200 A K j'' ltle k f dom neut x) = (term2203 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388438 A (@IN A) (term2198 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388440 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388441 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2202 A K j'' ltle k f x dom neut) = (term2204 A K j'' ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6388439 A K j'' ltle k f dom neut x) (@lem6388440 A dom neut)). Qed.
Lemma lem6388443 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388444 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388443 (A -> Prop) Prop f x). Qed.
Lemma lem6388445 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2204 A K j'' ltle k f x dom neut) = (term2205 A K j'' ltle k f x dom neut).
Proof. exact (@lem6388444 A (term2203 A K j'' ltle k f dom neut x) (term2125 A dom neut)). Qed.
Lemma lem6388446 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2202 A K j'' ltle k f x dom neut) = (term2205 A K j'' ltle k f x dom neut).
Proof. exact (TRANS (@lem6388441 A K j'' ltle k f x dom neut) (@lem6388445 A K j'' ltle k f x dom neut)). Qed.
Lemma lem6388447 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2201 A K j'' ltle k f x dom neut) = (term2205 A K j'' ltle k f x dom neut).
Proof. exact (TRANS (@lem6388435 A K j'' ltle k f x dom neut) (@lem6388446 A K j'' ltle k f x dom neut)). Qed.
Lemma lem6388448 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6388463 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388464 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388463 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6388465 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) : (j'' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle).
Proof. exact (@lem6388464 A K j'' ltle). Qed.
Lemma lem6388466 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388467 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k).
Proof. exact (MK_COMB (@lem6388465 A K j'' ltle) (@lem6388466 K k)). Qed.
Lemma lem6388469 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388470 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388469 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6388471 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (@lem6388470 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle) k). Qed.
Lemma lem6388472 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (TRANS (@lem6388467 A K j'' ltle k) (@lem6388471 A K j'' ltle k)). Qed.
Lemma lem6388473 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388474 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2184 A K j'' ltle k f).
Proof. exact (MK_COMB (@lem6388472 A K j'' ltle k) (@lem6388473 A K f)). Qed.
Lemma lem6388476 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388477 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388476 (K -> A) (type668 A K) f x). Qed.
Lemma lem6388478 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (@lem6388477 A K (term2183 A K j'' ltle k) f). Qed.
Lemma lem6388479 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (TRANS (@lem6388474 A K j'' ltle k f) (@lem6388478 A K j'' ltle k f)). Qed.
Lemma lem6388480 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388481 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2186 A K j'' ltle k f dom).
Proof. exact (MK_COMB (@lem6388479 A K j'' ltle k f) (@lem6388480 A dom)). Qed.
Lemma lem6388483 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388484 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388483 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6388485 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (@lem6388484 A K (term2185 A K j'' ltle k f) dom). Qed.
Lemma lem6388486 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (TRANS (@lem6388481 A K j'' ltle k f dom) (@lem6388485 A K j'' ltle k f dom)). Qed.
Lemma lem6388487 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388488 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2188 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388486 A K j'' ltle k f dom) (@lem6388487 A neut)). Qed.
Lemma lem6388490 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388491 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6388490 A (K -> K) f x). Qed.
Lemma lem6388492 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (@lem6388491 A K (term2187 A K j'' ltle k f dom) neut). Qed.
Lemma lem6388493 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (TRANS (@lem6388488 A K j'' ltle k f dom neut) (@lem6388492 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388494 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388495 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2190 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388493 A K j'' ltle k f dom neut) (@lem6388494 K x)). Qed.
Lemma lem6388497 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388498 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388497 K K f x). Qed.
Lemma lem6388499 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388498 K (term2189 A K j'' ltle k f dom neut) x). Qed.
Lemma lem6388501 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388495 A K j'' ltle k f dom neut x) (@lem6388499 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388502 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388503 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2206 A K j'' ltle k f dom neut x) = (term2207 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388448 K) (@lem6388501 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388504 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2208 A K j'' ltle f dom neut x k) = (term2209 A K j'' ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6388503 A K j'' ltle k f dom neut x) (@lem6388502 K k)). Qed.
Lemma lem6388506 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388507 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388506 K (type686 K) f x). Qed.
Lemma lem6388508 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2207 A K j'' ltle k f dom neut x) = (term2210 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388507 K (@IN K) (term2191 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388509 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388510 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2209 A K j'' ltle f dom neut x k) = (term2211 A K j'' ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6388508 A K j'' ltle k f dom neut x) (@lem6388509 K k)). Qed.
Lemma lem6388512 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388513 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388512 (K -> Prop) Prop f x). Qed.
Lemma lem6388514 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2211 A K j'' ltle f dom neut x k) = (term2212 A K j'' ltle f dom neut x k).
Proof. exact (@lem6388513 K (term2210 A K j'' ltle k f dom neut x) k). Qed.
Lemma lem6388515 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2209 A K j'' ltle f dom neut x k) = (term2212 A K j'' ltle f dom neut x k).
Proof. exact (TRANS (@lem6388510 A K j'' ltle f dom neut x k) (@lem6388514 A K j'' ltle f dom neut x k)). Qed.
Lemma lem6388516 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2208 A K j'' ltle f dom neut x k) = (term2212 A K j'' ltle f dom neut x k).
Proof. exact (TRANS (@lem6388504 A K j'' ltle f dom neut x k) (@lem6388515 A K j'' ltle f dom neut x k)). Qed.
Lemma lem6388517 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388518 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2213 A K j'' ltle f dom neut x k) = (term2214 A K j'' ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6388517) (@lem6388516 A K j'' ltle f dom neut x k)). Qed.
Lemma lem6388519 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2215 A K j'' ltle k f x dom neut) = (term2216 A K j'' ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6388518 A K j'' ltle f dom neut x k) (@lem6388447 A K j'' ltle k f x dom neut)). Qed.
Lemma lem6388520 {K : Type'} (ltle : type1402 K) : ltle = ltle.
Proof. exact (eq_refl ltle). Qed.
Lemma lem6388535 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388536 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388535 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6388537 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) : (j'' ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle).
Proof. exact (@lem6388536 A K j'' ltle). Qed.
Lemma lem6388538 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388539 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k).
Proof. exact (MK_COMB (@lem6388537 A K j'' ltle) (@lem6388538 K k)). Qed.
Lemma lem6388541 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388542 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388541 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6388543 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (@lem6388542 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j'' ltle) k). Qed.
Lemma lem6388544 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j'' ltle k) = (term2183 A K j'' ltle k).
Proof. exact (TRANS (@lem6388539 A K j'' ltle k) (@lem6388543 A K j'' ltle k)). Qed.
Lemma lem6388545 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388546 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2184 A K j'' ltle k f).
Proof. exact (MK_COMB (@lem6388544 A K j'' ltle k) (@lem6388545 A K f)). Qed.
Lemma lem6388548 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388549 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388548 (K -> A) (type668 A K) f x). Qed.
Lemma lem6388550 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (@lem6388549 A K (term2183 A K j'' ltle k) f). Qed.
Lemma lem6388551 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j'' ltle k f) = (term2185 A K j'' ltle k f).
Proof. exact (TRANS (@lem6388546 A K j'' ltle k f) (@lem6388550 A K j'' ltle k f)). Qed.
Lemma lem6388552 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388553 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2186 A K j'' ltle k f dom).
Proof. exact (MK_COMB (@lem6388551 A K j'' ltle k f) (@lem6388552 A dom)). Qed.
Lemma lem6388555 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388556 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6388555 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6388557 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (@lem6388556 A K (term2185 A K j'' ltle k f) dom). Qed.
Lemma lem6388558 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j'' ltle k f dom) = (term2187 A K j'' ltle k f dom).
Proof. exact (TRANS (@lem6388553 A K j'' ltle k f dom) (@lem6388557 A K j'' ltle k f dom)). Qed.
Lemma lem6388559 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388560 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2188 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388558 A K j'' ltle k f dom) (@lem6388559 A neut)). Qed.
Lemma lem6388562 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388563 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6388562 A (K -> K) f x). Qed.
Lemma lem6388564 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (@lem6388563 A K (term2187 A K j'' ltle k f dom) neut). Qed.
Lemma lem6388565 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j'' ltle k f dom neut) = (term2189 A K j'' ltle k f dom neut).
Proof. exact (TRANS (@lem6388560 A K j'' ltle k f dom neut) (@lem6388564 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388566 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388567 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2190 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388565 A K j'' ltle k f dom neut) (@lem6388566 K x)). Qed.
Lemma lem6388569 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388570 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388569 K K f x). Qed.
Lemma lem6388571 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388570 K (term2189 A K j'' ltle k f dom neut) x). Qed.
Lemma lem6388573 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j'' ltle k f dom neut x) = (term2191 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388567 A K j'' ltle k f dom neut x) (@lem6388571 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388574 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388575 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2217 A K j'' ltle k f dom neut x) = (term2218 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388520 K ltle) (@lem6388573 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388576 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2219 A K j'' ltle k f dom neut x) = (term2220 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388575 A K j'' ltle k f dom neut x) (@lem6388574 K x)). Qed.
Lemma lem6388578 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388579 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6388578 K (K -> Prop) f x). Qed.
Lemma lem6388580 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2218 A K j'' ltle k f dom neut x) = (term2221 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388579 K ltle (term2191 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388581 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6388582 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2220 A K j'' ltle k f dom neut x) = (term2222 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388580 A K j'' ltle k f dom neut x) (@lem6388581 K x)). Qed.
Lemma lem6388584 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388585 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6388584 K Prop f x). Qed.
Lemma lem6388586 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2222 A K j'' ltle k f dom neut x) = (term2223 A K j'' ltle k f dom neut x).
Proof. exact (@lem6388585 K (term2221 A K j'' ltle k f dom neut x) x). Qed.
Lemma lem6388587 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2220 A K j'' ltle k f dom neut x) = (term2223 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388582 A K j'' ltle k f dom neut x) (@lem6388586 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388588 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2219 A K j'' ltle k f dom neut x) = (term2223 A K j'' ltle k f dom neut x).
Proof. exact (TRANS (@lem6388576 A K j'' ltle k f dom neut x) (@lem6388587 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388590 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2224 A K j'' ltle k f dom neut x) = (term2225 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388589) (@lem6388588 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388591 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2226 A K j'' ltle k f x dom neut) = (term2227 A K j'' ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6388590 A K j'' ltle k f dom neut x) (@lem6388519 A K j'' ltle k f x dom neut)). Qed.
Lemma lem6388592 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388593 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2228 A K j'' ltle k f x dom neut) = (term2229 A K j'' ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6388592) (@lem6388591 A K j'' ltle k f x dom neut)). Qed.
Lemma lem6388594 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2230 A K j'' ltle k f dom neut x) = (term2231 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388593 A K j'' ltle k f x dom neut) (@lem6388339 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388595 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388596 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388601 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388603 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388601 K A f x). Qed.
Lemma lem6388612 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388613 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388612 A (type672 A) f x). Qed.
Lemma lem6388614 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388613 A (@INSERT A) neut). Qed.
Lemma lem6388615 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388616 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388614 A neut) (@lem6388615 A)). Qed.
Lemma lem6388618 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388619 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388618 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388620 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388619 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388622 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388616 A neut) (@lem6388620 A neut)). Qed.
Lemma lem6388623 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388624 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388623 A dom) (@lem6388622 A neut)). Qed.
Lemma lem6388626 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388627 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388626 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388628 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388627 A (@DIFF A) dom). Qed.
Lemma lem6388629 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388630 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388628 A dom) (@lem6388629 A neut)). Qed.
Lemma lem6388632 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388633 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388632 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388634 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388633 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388635 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388630 A dom neut) (@lem6388634 A dom neut)). Qed.
Lemma lem6388636 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388624 A dom neut) (@lem6388635 A dom neut)). Qed.
Lemma lem6388637 {A K : Type'} (f : K -> A) (x : K) : (term2126 A K f x) = (term2127 A K f x).
Proof. exact (MK_COMB (@lem6388596 A) (@lem6388603 A K f x)). Qed.
Lemma lem6388638 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2128 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388637 A K f x) (@lem6388636 A dom neut)). Qed.
Lemma lem6388640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388641 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388640 A (type686 A) f x). Qed.
Lemma lem6388642 {A K : Type'} (f : K -> A) (x : K) : (term2127 A K f x) = (term2129 A K f x).
Proof. exact (@lem6388641 A (@IN A) (@I (K -> A) f x)). Qed.
Lemma lem6388643 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388644 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2130 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388642 A K f x) (@lem6388643 A dom neut)). Qed.
Lemma lem6388646 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388647 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388646 (A -> Prop) Prop f x). Qed.
Lemma lem6388648 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (@lem6388647 A (term2129 A K f x) (term2125 A dom neut)). Qed.
Lemma lem6388649 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6388644 A K f x dom neut) (@lem6388648 A K f x dom neut)). Qed.
Lemma lem6388650 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6388638 A K f x dom neut) (@lem6388649 A K f x dom neut)). Qed.
Lemma lem6388651 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1391 A K f x dom neut) = (term2132 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388595) (@lem6388650 A K f x dom neut)). Qed.
Lemma lem6388652 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388653 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term2232 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388652) (@lem6388651 A K f x dom neut)). Qed.
Lemma lem6388654 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2233 A K j'' ltle k f dom neut x) = (term2234 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388653 A K f x dom neut) (@lem6388594 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388655 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388662 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388663 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388662 K (type686 K) f x). Qed.
Lemma lem6388664 {K : Type'} (x : K) : (@IN K x) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x).
Proof. exact (@lem6388663 K (@IN K) x). Qed.
Lemma lem6388665 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388666 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x k).
Proof. exact (MK_COMB (@lem6388664 K x) (@lem6388665 K k)). Qed.
Lemma lem6388668 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388669 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388668 (K -> Prop) Prop f x). Qed.
Lemma lem6388670 {K : Type'} (x : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x k) = (term2133 K x k).
Proof. exact (@lem6388669 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x) k). Qed.
Lemma lem6388672 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (term2133 K x k).
Proof. exact (TRANS (@lem6388666 K x k) (@lem6388670 K x k)). Qed.
Lemma lem6388673 {K : Type'} (x : K) (k : K -> Prop) : (term1405 K x k) = (term2134 K x k).
Proof. exact (MK_COMB (@lem6388655) (@lem6388672 K x k)). Qed.
Lemma lem6388674 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388675 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term2135 K x k).
Proof. exact (MK_COMB (@lem6388674) (@lem6388673 K x k)). Qed.
Lemma lem6388676 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2235 A K j'' ltle k f dom neut x) = (term2236 A K j'' ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6388675 K x k) (@lem6388654 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388677 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2237 A K j'' ltle k f dom neut) = (term2238 A K j'' ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6388676 A K j'' ltle k f dom neut x)). Qed.
Lemma lem6388678 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6388679 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2239 A K j'' ltle k f dom neut) = (term2240 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388678 K) (@lem6388677 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388680 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388681 {A K : Type'} (j'' : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2241 A K j'' ltle k f dom neut) = (term2242 A K j'' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388680) (@lem6388679 A K j'' ltle k f dom neut)). Qed.
Lemma lem6388682 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2243 A K j'' _79516' ltle k f dom neut) = (term2244 A K j'' _79516' ltle k f dom neut).
Proof. exact (MK_COMB (@lem6388681 A K j'' ltle k f dom neut) (@lem6388280 A K _79516' ltle k f dom neut)). Qed.
Lemma lem6388683 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2245 A K j'' _79516' ltle k f dom) = (term2246 A K j'' _79516' ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6388682 A K j'' _79516' ltle k f dom neut)). Qed.
Lemma lem6388684 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6388685 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2247 A K j'' _79516' ltle k f dom) = (term2248 A K j'' _79516' ltle k f dom).
Proof. exact (MK_COMB (@lem6388684 A) (@lem6388683 A K j'' _79516' ltle k f dom)). Qed.
Lemma lem6388686 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2249 A K j'' _79516' ltle k f) = (term2250 A K j'' _79516' ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6388685 A K j'' _79516' ltle k f dom)). Qed.
Lemma lem6388687 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6388688 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2251 A K j'' _79516' ltle k f) = (term2252 A K j'' _79516' ltle k f).
Proof. exact (MK_COMB (@lem6388687 A) (@lem6388686 A K j'' _79516' ltle k f)). Qed.
Lemma lem6388689 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2253 A K j'' _79516' ltle k) = (term2254 A K j'' _79516' ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6388688 A K j'' _79516' ltle k f)). Qed.
Lemma lem6388690 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6388691 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2255 A K j'' _79516' ltle k) = (term2256 A K j'' _79516' ltle k).
Proof. exact (MK_COMB (@lem6388690 A K) (@lem6388689 A K j'' _79516' ltle k)). Qed.
Lemma lem6388692 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) : (term2257 A K j'' _79516' ltle) = (term2258 A K j'' _79516' ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6388691 A K j'' _79516' ltle k)). Qed.
Lemma lem6388693 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6388694 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (ltle : type1402 K) : (term1579 A K j'' _79516' ltle) = (term2259 A K j'' _79516' ltle).
Proof. exact (MK_COMB (@lem6388693 K) (@lem6388692 A K j'' _79516' ltle)). Qed.
Lemma lem6388695 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) : (term1581 A K j'' _79516') = (term2260 A K j'' _79516').
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6388694 A K j'' _79516' ltle)). Qed.
Lemma lem6388696 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6388697 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) : (term1583 A K j'' _79516') = (term2261 A K j'' _79516').
Proof. exact (MK_COMB (@lem6388696 K) (@lem6388695 A K j'' _79516')). Qed.
Lemma lem6388698 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388699 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) : (term1628 A K j'' _79516') = (term2262 A K j'' _79516').
Proof. exact (MK_COMB (@lem6388698) (@lem6388697 A K j'' _79516')). Qed.
Lemma lem6388700 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1832 A K j'' _79516' _79517' x' k f i dom neut) = (term2263 A K j'' _79516' _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6388699 A K j'' _79516') (@lem6387916 A K _79517' x' k f i dom neut)). Qed.
Lemma lem6388701 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388702 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388713 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388714 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388713 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6388715 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (_79517' k) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k).
Proof. exact (@lem6388714 A K _79517' k). Qed.
Lemma lem6388716 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388717 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f).
Proof. exact (MK_COMB (@lem6388715 A K _79517' k) (@lem6388716 A K f)). Qed.
Lemma lem6388719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388720 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388719 (K -> A) (type671 A K) f x). Qed.
Lemma lem6388721 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f) = (term2141 A K _79517' k f).
Proof. exact (@lem6388720 A K (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k) f). Qed.
Lemma lem6388722 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (term2141 A K _79517' k f).
Proof. exact (TRANS (@lem6388717 A K _79517' k f) (@lem6388721 A K _79517' k f)). Qed.
Lemma lem6388723 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388724 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2142 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6388722 A K _79517' k f) (@lem6388723 A dom)). Qed.
Lemma lem6388726 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388727 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388726 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6388728 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2142 A K _79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (@lem6388727 A K (term2141 A K _79517' k f) dom). Qed.
Lemma lem6388729 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (TRANS (@lem6388724 A K _79517' k f dom) (@lem6388728 A K _79517' k f dom)). Qed.
Lemma lem6388730 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388731 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2144 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388729 A K _79517' k f dom) (@lem6388730 A neut)). Qed.
Lemma lem6388733 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388734 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6388733 A K f x). Qed.
Lemma lem6388735 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2144 A K _79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (@lem6388734 A K (term2143 A K _79517' k f dom) neut). Qed.
Lemma lem6388737 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6388731 A K _79517' k f dom neut) (@lem6388735 A K _79517' k f dom neut)). Qed.
Lemma lem6388738 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term990 A K _79517' k f dom neut) = (term2264 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388702 A K f) (@lem6388737 A K _79517' k f dom neut)). Qed.
Lemma lem6388740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388741 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388740 K A f x). Qed.
Lemma lem6388742 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2264 A K _79517' k f dom neut) = (term2265 A K _79517' k f dom neut).
Proof. exact (@lem6388741 A K f (term2145 A K _79517' k f dom neut)). Qed.
Lemma lem6388743 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term990 A K _79517' k f dom neut) = (term2265 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6388738 A K _79517' k f dom neut) (@lem6388742 A K _79517' k f dom neut)). Qed.
Lemma lem6388752 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388753 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388752 A (type672 A) f x). Qed.
Lemma lem6388754 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388753 A (@INSERT A) neut). Qed.
Lemma lem6388755 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388756 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388754 A neut) (@lem6388755 A)). Qed.
Lemma lem6388758 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388759 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388758 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388760 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388759 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388762 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388756 A neut) (@lem6388760 A neut)). Qed.
Lemma lem6388763 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388764 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388763 A dom) (@lem6388762 A neut)). Qed.
Lemma lem6388766 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388767 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388766 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388768 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388767 A (@DIFF A) dom). Qed.
Lemma lem6388769 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388770 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388768 A dom) (@lem6388769 A neut)). Qed.
Lemma lem6388772 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388773 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388772 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388774 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388773 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388775 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388770 A dom neut) (@lem6388774 A dom neut)). Qed.
Lemma lem6388776 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388764 A dom neut) (@lem6388775 A dom neut)). Qed.
Lemma lem6388777 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term992 A K _79517' k f dom neut) = (term2266 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388701 A) (@lem6388743 A K _79517' k f dom neut)). Qed.
Lemma lem6388778 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term994 A K _79517' k f dom neut) = (term2267 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388777 A K _79517' k f dom neut) (@lem6388776 A dom neut)). Qed.
Lemma lem6388780 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388781 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388780 A (type686 A) f x). Qed.
Lemma lem6388782 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2266 A K _79517' k f dom neut) = (term2268 A K _79517' k f dom neut).
Proof. exact (@lem6388781 A (@IN A) (term2265 A K _79517' k f dom neut)). Qed.
Lemma lem6388783 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388784 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2267 A K _79517' k f dom neut) = (term2269 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388782 A K _79517' k f dom neut) (@lem6388783 A dom neut)). Qed.
Lemma lem6388786 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388787 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388786 (A -> Prop) Prop f x). Qed.
Lemma lem6388788 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2269 A K _79517' k f dom neut) = (term2270 A K _79517' k f dom neut).
Proof. exact (@lem6388787 A (term2268 A K _79517' k f dom neut) (term2125 A dom neut)). Qed.
Lemma lem6388789 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2267 A K _79517' k f dom neut) = (term2270 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6388784 A K _79517' k f dom neut) (@lem6388788 A K _79517' k f dom neut)). Qed.
Lemma lem6388790 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term994 A K _79517' k f dom neut) = (term2270 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6388778 A K _79517' k f dom neut) (@lem6388789 A K _79517' k f dom neut)). Qed.
Lemma lem6388791 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6388802 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388803 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388802 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6388804 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (_79517' k) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k).
Proof. exact (@lem6388803 A K _79517' k). Qed.
Lemma lem6388805 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388806 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f).
Proof. exact (MK_COMB (@lem6388804 A K _79517' k) (@lem6388805 A K f)). Qed.
Lemma lem6388808 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388809 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388808 (K -> A) (type671 A K) f x). Qed.
Lemma lem6388810 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k f) = (term2141 A K _79517' k f).
Proof. exact (@lem6388809 A K (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517' k) f). Qed.
Lemma lem6388811 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517' k f) = (term2141 A K _79517' k f).
Proof. exact (TRANS (@lem6388806 A K _79517' k f) (@lem6388810 A K _79517' k f)). Qed.
Lemma lem6388812 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6388813 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2142 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6388811 A K _79517' k f) (@lem6388812 A dom)). Qed.
Lemma lem6388815 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388816 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6388815 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6388817 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2142 A K _79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (@lem6388816 A K (term2141 A K _79517' k f) dom). Qed.
Lemma lem6388818 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517' k f dom) = (term2143 A K _79517' k f dom).
Proof. exact (TRANS (@lem6388813 A K _79517' k f dom) (@lem6388817 A K _79517' k f dom)). Qed.
Lemma lem6388819 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6388820 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2144 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388818 A K _79517' k f dom) (@lem6388819 A neut)). Qed.
Lemma lem6388822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388823 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6388822 A K f x). Qed.
Lemma lem6388824 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2144 A K _79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (@lem6388823 A K (term2143 A K _79517' k f dom) neut). Qed.
Lemma lem6388826 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517' k f dom neut) = (term2145 A K _79517' k f dom neut).
Proof. exact (TRANS (@lem6388820 A K _79517' k f dom neut) (@lem6388824 A K _79517' k f dom neut)). Qed.
Lemma lem6388827 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388828 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term984 A K _79517' k f dom neut) = (term2271 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388791 K) (@lem6388826 A K _79517' k f dom neut)). Qed.
Lemma lem6388829 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term986 A K _79517' f dom neut k) = (term2272 A K _79517' f dom neut k).
Proof. exact (MK_COMB (@lem6388828 A K _79517' k f dom neut) (@lem6388827 K k)). Qed.
Lemma lem6388831 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388832 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388831 K (type686 K) f x). Qed.
Lemma lem6388833 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2271 A K _79517' k f dom neut) = (term2273 A K _79517' k f dom neut).
Proof. exact (@lem6388832 K (@IN K) (term2145 A K _79517' k f dom neut)). Qed.
Lemma lem6388834 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388835 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2272 A K _79517' f dom neut k) = (term2274 A K _79517' f dom neut k).
Proof. exact (MK_COMB (@lem6388833 A K _79517' k f dom neut) (@lem6388834 K k)). Qed.
Lemma lem6388837 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388838 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388837 (K -> Prop) Prop f x). Qed.
Lemma lem6388839 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2274 A K _79517' f dom neut k) = (term2275 A K _79517' f dom neut k).
Proof. exact (@lem6388838 K (term2273 A K _79517' k f dom neut) k). Qed.
Lemma lem6388840 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2272 A K _79517' f dom neut k) = (term2275 A K _79517' f dom neut k).
Proof. exact (TRANS (@lem6388835 A K _79517' f dom neut k) (@lem6388839 A K _79517' f dom neut k)). Qed.
Lemma lem6388841 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term986 A K _79517' f dom neut k) = (term2275 A K _79517' f dom neut k).
Proof. exact (TRANS (@lem6388829 A K _79517' f dom neut k) (@lem6388840 A K _79517' f dom neut k)). Qed.
Lemma lem6388842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388843 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term988 A K _79517' f dom neut k) = (term2276 A K _79517' f dom neut k).
Proof. exact (MK_COMB (@lem6388842) (@lem6388841 A K _79517' f dom neut k)). Qed.
Lemma lem6388844 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517' k f dom neut) = (term2277 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388843 A K _79517' f dom neut k) (@lem6388790 A K _79517' k f dom neut)). Qed.
Lemma lem6388845 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388846 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388851 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388853 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388851 K A f x). Qed.
Lemma lem6388862 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388863 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388862 A (type672 A) f x). Qed.
Lemma lem6388864 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388863 A (@INSERT A) neut). Qed.
Lemma lem6388865 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388866 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388864 A neut) (@lem6388865 A)). Qed.
Lemma lem6388868 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388869 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388868 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388870 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388869 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388872 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388866 A neut) (@lem6388870 A neut)). Qed.
Lemma lem6388873 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388874 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388873 A dom) (@lem6388872 A neut)). Qed.
Lemma lem6388876 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388877 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388876 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388878 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388877 A (@DIFF A) dom). Qed.
Lemma lem6388879 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6388880 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388878 A dom) (@lem6388879 A neut)). Qed.
Lemma lem6388882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388883 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388882 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388884 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6388883 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6388885 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388880 A dom neut) (@lem6388884 A dom neut)). Qed.
Lemma lem6388886 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388874 A dom neut) (@lem6388885 A dom neut)). Qed.
Lemma lem6388887 {A K : Type'} (f : K -> A) (x : K) : (term2126 A K f x) = (term2127 A K f x).
Proof. exact (MK_COMB (@lem6388846 A) (@lem6388853 A K f x)). Qed.
Lemma lem6388888 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2128 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388887 A K f x) (@lem6388886 A dom neut)). Qed.
Lemma lem6388890 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388891 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6388890 A (type686 A) f x). Qed.
Lemma lem6388892 {A K : Type'} (f : K -> A) (x : K) : (term2127 A K f x) = (term2129 A K f x).
Proof. exact (@lem6388891 A (@IN A) (@I (K -> A) f x)). Qed.
Lemma lem6388893 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6388894 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2130 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388892 A K f x) (@lem6388893 A dom neut)). Qed.
Lemma lem6388896 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388897 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6388896 (A -> Prop) Prop f x). Qed.
Lemma lem6388898 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (@lem6388897 A (term2129 A K f x) (term2125 A dom neut)). Qed.
Lemma lem6388899 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6388894 A K f x dom neut) (@lem6388898 A K f x dom neut)). Qed.
Lemma lem6388900 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6388888 A K f x dom neut) (@lem6388899 A K f x dom neut)). Qed.
Lemma lem6388901 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1391 A K f x dom neut) = (term2132 A K f x dom neut).
Proof. exact (MK_COMB (@lem6388845) (@lem6388900 A K f x dom neut)). Qed.
Lemma lem6388902 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388909 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388910 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6388909 K (type686 K) f x). Qed.
Lemma lem6388911 {K : Type'} (x : K) : (@IN K x) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x).
Proof. exact (@lem6388910 K (@IN K) x). Qed.
Lemma lem6388912 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6388913 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x k).
Proof. exact (MK_COMB (@lem6388911 K x) (@lem6388912 K k)). Qed.
Lemma lem6388915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388916 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6388915 (K -> Prop) Prop f x). Qed.
Lemma lem6388917 {K : Type'} (x : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x k) = (term2133 K x k).
Proof. exact (@lem6388916 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x) k). Qed.
Lemma lem6388919 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (term2133 K x k).
Proof. exact (TRANS (@lem6388913 K x k) (@lem6388917 K x k)). Qed.
Lemma lem6388920 {K : Type'} (x : K) (k : K -> Prop) : (term1405 K x k) = (term2134 K x k).
Proof. exact (MK_COMB (@lem6388902) (@lem6388919 K x k)). Qed.
Lemma lem6388921 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388922 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term2135 K x k).
Proof. exact (MK_COMB (@lem6388921) (@lem6388920 K x k)). Qed.
Lemma lem6388923 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f x dom neut) = (term2136 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6388922 K x k) (@lem6388901 A K f x dom neut)). Qed.
Lemma lem6388924 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1306 A K k f dom neut) = (term2278 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6388923 A K k f x dom neut)). Qed.
Lemma lem6388925 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6388926 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1315 A K k f dom neut) = (term2279 A K k f dom neut).
Proof. exact (MK_COMB (@lem6388925 K) (@lem6388924 A K k f dom neut)). Qed.
Lemma lem6388927 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6388928 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1317 A K k f dom neut) = (term2280 A K k f dom neut).
Proof. exact (MK_COMB (@lem6388927) (@lem6388926 A K k f dom neut)). Qed.
Lemma lem6388929 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1318 A K _79517' k f dom neut) = (term2281 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6388928 A K k f dom neut) (@lem6388844 A K _79517' k f dom neut)). Qed.
Lemma lem6388930 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1319 A K _79517' k f dom) = (term2282 A K _79517' k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6388929 A K _79517' k f dom neut)). Qed.
Lemma lem6388931 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6388932 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1320 A K _79517' k f dom) = (term2283 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6388931 A) (@lem6388930 A K _79517' k f dom)). Qed.
Lemma lem6388933 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term1321 A K _79517' k f) = (term2284 A K _79517' k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6388932 A K _79517' k f dom)). Qed.
Lemma lem6388934 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6388935 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term1322 A K _79517' k f) = (term2285 A K _79517' k f).
Proof. exact (MK_COMB (@lem6388934 A) (@lem6388933 A K _79517' k f)). Qed.
Lemma lem6388936 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term1323 A K _79517' k) = (term2286 A K _79517' k).
Proof. exact (fun_ext (fun f : K -> A => @lem6388935 A K _79517' k f)). Qed.
Lemma lem6388937 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6388938 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term1324 A K _79517' k) = (term2287 A K _79517' k).
Proof. exact (MK_COMB (@lem6388937 A K) (@lem6388936 A K _79517' k)). Qed.
Lemma lem6388939 {A K : Type'} (_79517' : type850 A K) : (term1325 A K _79517') = (term2288 A K _79517').
Proof. exact (fun_ext (fun k : K -> Prop => @lem6388938 A K _79517' k)). Qed.
Lemma lem6388940 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6388941 {A K : Type'} (_79517' : type850 A K) : (term1326 A K _79517') = (term2289 A K _79517').
Proof. exact (MK_COMB (@lem6388940 K) (@lem6388939 A K _79517')). Qed.
Lemma lem6388942 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6388943 {A K : Type'} (_79517' : type850 A K) : (term1360 A K _79517') = (term2290 A K _79517').
Proof. exact (MK_COMB (@lem6388942) (@lem6388941 A K _79517')). Qed.
Lemma lem6388944 {A K : Type'} (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1873 A K j'' _79516' _79517' x' k f i dom neut) = (term2291 A K j'' _79516' _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6388943 A K _79517') (@lem6388700 A K j'' _79516' _79517' x' k f i dom neut)). Qed.
Lemma lem6388945 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6388946 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6388951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388952 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388951 K K f x). Qed.
Lemma lem6388954 {K : Type'} (j' : K -> K) (i : K) : (j' i) = (@I (K -> K) j' i).
Proof. exact (@lem6388952 K j' i). Qed.
Lemma lem6388955 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6388956 {K : Type'} (j' : K -> K) (i : K) : (term2292 K j' i) = (term2293 K j' i).
Proof. exact (MK_COMB (@lem6388946 K) (@lem6388954 K j' i)). Qed.
Lemma lem6388957 {K : Type'} (j' : K -> K) (i : K) : ((j' i) = i) = ((@I (K -> K) j' i) = i).
Proof. exact (MK_COMB (@lem6388956 K j' i) (@lem6388955 K i)). Qed.
Lemma lem6388958 {K : Type'} (j' : K -> K) (i : K) : (term2294 K j' i) = (term2295 K j' i).
Proof. exact (MK_COMB (@lem6388945) (@lem6388957 K j' i)). Qed.
Lemma lem6388959 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6388960 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6388965 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388966 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6388965 K K f x). Qed.
Lemma lem6388968 {K : Type'} (j' : K -> K) (i : K) : (j' i) = (@I (K -> K) j' i).
Proof. exact (@lem6388966 K j' i). Qed.
Lemma lem6388969 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) : (term2296 A K f j' i) = (term2297 A K f j' i).
Proof. exact (MK_COMB (@lem6388960 A K f) (@lem6388968 K j' i)). Qed.
Lemma lem6388971 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388972 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6388971 K A f x). Qed.
Lemma lem6388973 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) : (term2297 A K f j' i) = (term2298 A K f j' i).
Proof. exact (@lem6388972 A K f (@I (K -> K) j' i)). Qed.
Lemma lem6388974 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) : (term2296 A K f j' i) = (term2298 A K f j' i).
Proof. exact (TRANS (@lem6388969 A K f j' i) (@lem6388973 A K f j' i)). Qed.
Lemma lem6388983 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388984 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388983 A (type672 A) f x). Qed.
Lemma lem6388985 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6388984 A (@INSERT A) neut). Qed.
Lemma lem6388986 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6388987 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6388985 A neut) (@lem6388986 A)). Qed.
Lemma lem6388989 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388990 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388989 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6388991 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6388990 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6388993 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6388987 A neut) (@lem6388991 A neut)). Qed.
Lemma lem6388994 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6388995 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6388994 A dom) (@lem6388993 A neut)). Qed.
Lemma lem6388997 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6388998 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6388997 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6388999 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6388998 A (@DIFF A) dom). Qed.
Lemma lem6389000 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389001 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6388999 A dom) (@lem6389000 A neut)). Qed.
Lemma lem6389003 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389004 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389003 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389005 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389004 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389006 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389001 A dom neut) (@lem6389005 A dom neut)). Qed.
Lemma lem6389007 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6388995 A dom neut) (@lem6389006 A dom neut)). Qed.
Lemma lem6389008 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) : (term2299 A K f j' i) = (term2300 A K f j' i).
Proof. exact (MK_COMB (@lem6388959 A) (@lem6388974 A K f j' i)). Qed.
Lemma lem6389009 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2301 A K f j' i dom neut) = (term2302 A K f j' i dom neut).
Proof. exact (MK_COMB (@lem6389008 A K f j' i) (@lem6389007 A dom neut)). Qed.
Lemma lem6389011 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389012 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389011 A (type686 A) f x). Qed.
Lemma lem6389013 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) : (term2300 A K f j' i) = (term2303 A K f j' i).
Proof. exact (@lem6389012 A (@IN A) (term2298 A K f j' i)). Qed.
Lemma lem6389014 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389015 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2302 A K f j' i dom neut) = (term2304 A K f j' i dom neut).
Proof. exact (MK_COMB (@lem6389013 A K f j' i) (@lem6389014 A dom neut)). Qed.
Lemma lem6389017 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389018 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389017 (A -> Prop) Prop f x). Qed.
Lemma lem6389019 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2304 A K f j' i dom neut) = (term2305 A K f j' i dom neut).
Proof. exact (@lem6389018 A (term2303 A K f j' i) (term2125 A dom neut)). Qed.
Lemma lem6389020 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2302 A K f j' i dom neut) = (term2305 A K f j' i dom neut).
Proof. exact (TRANS (@lem6389015 A K f j' i dom neut) (@lem6389019 A K f j' i dom neut)). Qed.
Lemma lem6389021 {A K : Type'} (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2301 A K f j' i dom neut) = (term2305 A K f j' i dom neut).
Proof. exact (TRANS (@lem6389009 A K f j' i dom neut) (@lem6389020 A K f j' i dom neut)). Qed.
Lemma lem6389022 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6389027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389028 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6389027 K K f x). Qed.
Lemma lem6389030 {K : Type'} (j' : K -> K) (i : K) : (j' i) = (@I (K -> K) j' i).
Proof. exact (@lem6389028 K j' i). Qed.
Lemma lem6389031 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389032 {K : Type'} (j' : K -> K) (i : K) : (term2306 K j' i) = (term2307 K j' i).
Proof. exact (MK_COMB (@lem6389022 K) (@lem6389030 K j' i)). Qed.
Lemma lem6389033 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2308 K j' i k) = (term2309 K j' i k).
Proof. exact (MK_COMB (@lem6389032 K j' i) (@lem6389031 K k)). Qed.
Lemma lem6389035 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389036 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389035 K (type686 K) f x). Qed.
Lemma lem6389037 {K : Type'} (j' : K -> K) (i : K) : (term2307 K j' i) = (term2310 K j' i).
Proof. exact (@lem6389036 K (@IN K) (@I (K -> K) j' i)). Qed.
Lemma lem6389038 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389039 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2309 K j' i k) = (term2311 K j' i k).
Proof. exact (MK_COMB (@lem6389037 K j' i) (@lem6389038 K k)). Qed.
Lemma lem6389041 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389042 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389041 (K -> Prop) Prop f x). Qed.
Lemma lem6389043 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2311 K j' i k) = (term2312 K j' i k).
Proof. exact (@lem6389042 K (term2310 K j' i) k). Qed.
Lemma lem6389044 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2309 K j' i k) = (term2312 K j' i k).
Proof. exact (TRANS (@lem6389039 K j' i k) (@lem6389043 K j' i k)). Qed.
Lemma lem6389045 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2308 K j' i k) = (term2312 K j' i k).
Proof. exact (TRANS (@lem6389033 K j' i k) (@lem6389044 K j' i k)). Qed.
Lemma lem6389046 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389047 {K : Type'} (j' : K -> K) (i : K) (k : K -> Prop) : (term2313 K j' i k) = (term2314 K j' i k).
Proof. exact (MK_COMB (@lem6389046) (@lem6389045 K j' i k)). Qed.
Lemma lem6389048 {A K : Type'} (k : K -> Prop) (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2315 A K k f j' i dom neut) = (term2316 A K k f j' i dom neut).
Proof. exact (MK_COMB (@lem6389047 K j' i k) (@lem6389021 A K f j' i dom neut)). Qed.
Lemma lem6389049 {K : Type'} (ltle : type1402 K) : ltle = ltle.
Proof. exact (eq_refl ltle). Qed.
Lemma lem6389054 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389055 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6389054 K K f x). Qed.
Lemma lem6389057 {K : Type'} (j' : K -> K) (i : K) : (j' i) = (@I (K -> K) j' i).
Proof. exact (@lem6389055 K j' i). Qed.
Lemma lem6389058 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6389059 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2317 K ltle j' i) = (term2318 K ltle j' i).
Proof. exact (MK_COMB (@lem6389049 K ltle) (@lem6389057 K j' i)). Qed.
Lemma lem6389060 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2319 K ltle j' i) = (term2320 K ltle j' i).
Proof. exact (MK_COMB (@lem6389059 K ltle j' i) (@lem6389058 K i)). Qed.
Lemma lem6389062 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389063 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6389062 K (K -> Prop) f x). Qed.
Lemma lem6389064 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2318 K ltle j' i) = (term2321 K ltle j' i).
Proof. exact (@lem6389063 K ltle (@I (K -> K) j' i)). Qed.
Lemma lem6389065 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6389066 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2320 K ltle j' i) = (term2322 K ltle j' i).
Proof. exact (MK_COMB (@lem6389064 K ltle j' i) (@lem6389065 K i)). Qed.
Lemma lem6389068 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389069 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6389068 K Prop f x). Qed.
Lemma lem6389070 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2322 K ltle j' i) = (term2323 K ltle j' i).
Proof. exact (@lem6389069 K (term2321 K ltle j' i) i). Qed.
Lemma lem6389071 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2320 K ltle j' i) = (term2323 K ltle j' i).
Proof. exact (TRANS (@lem6389066 K ltle j' i) (@lem6389070 K ltle j' i)). Qed.
Lemma lem6389072 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2319 K ltle j' i) = (term2323 K ltle j' i).
Proof. exact (TRANS (@lem6389060 K ltle j' i) (@lem6389071 K ltle j' i)). Qed.
Lemma lem6389073 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389074 {K : Type'} (ltle : type1402 K) (j' : K -> K) (i : K) : (term2324 K ltle j' i) = (term2325 K ltle j' i).
Proof. exact (MK_COMB (@lem6389073) (@lem6389072 K ltle j' i)). Qed.
Lemma lem6389075 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2326 A K ltle k f j' i dom neut) = (term2327 A K ltle k f j' i dom neut).
Proof. exact (MK_COMB (@lem6389074 K ltle j' i) (@lem6389048 A K k f j' i dom neut)). Qed.
Lemma lem6389076 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389077 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j' : K -> K) (i : K) (dom : A -> Prop) (neut : A) : (term2328 A K ltle k f j' i dom neut) = (term2329 A K ltle k f j' i dom neut).
Proof. exact (MK_COMB (@lem6389076) (@lem6389075 A K ltle k f j' i dom neut)). Qed.
Lemma lem6389078 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) (i : K) : (term2330 A K ltle k f dom neut j' i) = (term2331 A K ltle k f dom neut j' i).
Proof. exact (MK_COMB (@lem6389077 A K ltle k f j' i dom neut) (@lem6388958 K j' i)). Qed.
Lemma lem6389079 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389080 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389085 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389086 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389085 K A f x). Qed.
Lemma lem6389088 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6389086 A K f i). Qed.
Lemma lem6389097 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389098 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389097 A (type672 A) f x). Qed.
Lemma lem6389099 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389098 A (@INSERT A) neut). Qed.
Lemma lem6389100 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389101 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389099 A neut) (@lem6389100 A)). Qed.
Lemma lem6389103 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389104 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389103 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389105 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389104 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389107 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389101 A neut) (@lem6389105 A neut)). Qed.
Lemma lem6389108 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389109 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389108 A dom) (@lem6389107 A neut)). Qed.
Lemma lem6389111 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389112 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389111 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389113 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389112 A (@DIFF A) dom). Qed.
Lemma lem6389114 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389115 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389113 A dom) (@lem6389114 A neut)). Qed.
Lemma lem6389117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389118 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389117 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389119 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389118 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389120 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389115 A dom neut) (@lem6389119 A dom neut)). Qed.
Lemma lem6389121 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389109 A dom neut) (@lem6389120 A dom neut)). Qed.
Lemma lem6389122 {A K : Type'} (f : K -> A) (i : K) : (term2126 A K f i) = (term2127 A K f i).
Proof. exact (MK_COMB (@lem6389080 A) (@lem6389088 A K f i)). Qed.
Lemma lem6389123 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2128 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389122 A K f i) (@lem6389121 A dom neut)). Qed.
Lemma lem6389125 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389126 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389125 A (type686 A) f x). Qed.
Lemma lem6389127 {A K : Type'} (f : K -> A) (i : K) : (term2127 A K f i) = (term2129 A K f i).
Proof. exact (@lem6389126 A (@IN A) (@I (K -> A) f i)). Qed.
Lemma lem6389128 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389129 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2130 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389127 A K f i) (@lem6389128 A dom neut)). Qed.
Lemma lem6389131 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389132 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389131 (A -> Prop) Prop f x). Qed.
Lemma lem6389133 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2130 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (@lem6389132 A (term2129 A K f i) (term2125 A dom neut)). Qed.
Lemma lem6389134 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6389129 A K f i dom neut) (@lem6389133 A K f i dom neut)). Qed.
Lemma lem6389135 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6389123 A K f i dom neut) (@lem6389134 A K f i dom neut)). Qed.
Lemma lem6389136 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1391 A K f i dom neut) = (term2132 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389079) (@lem6389135 A K f i dom neut)). Qed.
Lemma lem6389137 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389138 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1167 A K f i dom neut) = (term2232 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389137) (@lem6389136 A K f i dom neut)). Qed.
Lemma lem6389139 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) (i : K) : (term2332 A K ltle k f dom neut j' i) = (term2333 A K ltle k f dom neut j' i).
Proof. exact (MK_COMB (@lem6389138 A K f i dom neut) (@lem6389078 A K ltle k f dom neut j' i)). Qed.
Lemma lem6389140 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389147 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389148 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389147 K (type686 K) f x). Qed.
Lemma lem6389149 {K : Type'} (i : K) : (@IN K i) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i).
Proof. exact (@lem6389148 K (@IN K) i). Qed.
Lemma lem6389150 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389151 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i k).
Proof. exact (MK_COMB (@lem6389149 K i) (@lem6389150 K k)). Qed.
Lemma lem6389153 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389154 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389153 (K -> Prop) Prop f x). Qed.
Lemma lem6389155 {K : Type'} (i : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) i k) = (term2133 K i k).
Proof. exact (@lem6389154 K (@I (K -> (K -> Prop) -> Prop) (@IN K) i) k). Qed.
Lemma lem6389157 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (term2133 K i k).
Proof. exact (TRANS (@lem6389151 K i k) (@lem6389155 K i k)). Qed.
Lemma lem6389158 {K : Type'} (i : K) (k : K -> Prop) : (term1405 K i k) = (term2134 K i k).
Proof. exact (MK_COMB (@lem6389140) (@lem6389157 K i k)). Qed.
Lemma lem6389159 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389160 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term2135 K i k).
Proof. exact (MK_COMB (@lem6389159) (@lem6389158 K i k)). Qed.
Lemma lem6389161 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) (i : K) : (term1433 A K ltle k f dom neut j' i) = (term2334 A K ltle k f dom neut j' i).
Proof. exact (MK_COMB (@lem6389160 K i k) (@lem6389139 A K ltle k f dom neut j' i)). Qed.
Lemma lem6389162 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) : (term1435 A K ltle k f dom neut j') = (term2335 A K ltle k f dom neut j').
Proof. exact (fun_ext (fun i : K => @lem6389161 A K ltle k f dom neut j' i)). Qed.
Lemma lem6389163 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6389164 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) : (term1437 A K ltle k f dom neut j') = (term2336 A K ltle k f dom neut j').
Proof. exact (MK_COMB (@lem6389163 K) (@lem6389162 A K ltle k f dom neut j')). Qed.
Lemma lem6389165 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389166 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j' : K -> K) : (term1892 A K ltle k f dom neut j') = (term2337 A K ltle k f dom neut j').
Proof. exact (MK_COMB (@lem6389165) (@lem6389164 A K ltle k f dom neut j')). Qed.
Lemma lem6389167 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1942 A K ltle j' j'' _79516' _79517' x' k f i dom neut) = (term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6389166 A K ltle k f dom neut j') (@lem6388944 A K j'' _79516' _79517' x' k f i dom neut)). Qed.
Lemma lem6389168 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389169 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389174 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389175 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389174 K A f x). Qed.
Lemma lem6389177 {A K : Type'} (f : K -> A) (i : K) : (f i) = (@I (K -> A) f i).
Proof. exact (@lem6389175 A K f i). Qed.
Lemma lem6389186 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389187 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389186 A (type672 A) f x). Qed.
Lemma lem6389188 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389187 A (@INSERT A) neut). Qed.
Lemma lem6389189 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389190 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389188 A neut) (@lem6389189 A)). Qed.
Lemma lem6389192 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389193 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389192 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389194 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389193 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389196 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389190 A neut) (@lem6389194 A neut)). Qed.
Lemma lem6389197 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389198 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389197 A dom) (@lem6389196 A neut)). Qed.
Lemma lem6389200 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389201 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389200 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389202 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389201 A (@DIFF A) dom). Qed.
Lemma lem6389203 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389204 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389202 A dom) (@lem6389203 A neut)). Qed.
Lemma lem6389206 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389207 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389206 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389208 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389207 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389209 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389204 A dom neut) (@lem6389208 A dom neut)). Qed.
Lemma lem6389210 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389198 A dom neut) (@lem6389209 A dom neut)). Qed.
Lemma lem6389211 {A K : Type'} (f : K -> A) (i : K) : (term2126 A K f i) = (term2127 A K f i).
Proof. exact (MK_COMB (@lem6389169 A) (@lem6389177 A K f i)). Qed.
Lemma lem6389212 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2128 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389211 A K f i) (@lem6389210 A dom neut)). Qed.
Lemma lem6389214 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389215 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389214 A (type686 A) f x). Qed.
Lemma lem6389216 {A K : Type'} (f : K -> A) (i : K) : (term2127 A K f i) = (term2129 A K f i).
Proof. exact (@lem6389215 A (@IN A) (@I (K -> A) f i)). Qed.
Lemma lem6389217 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389218 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2130 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389216 A K f i) (@lem6389217 A dom neut)). Qed.
Lemma lem6389220 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389221 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389220 (A -> Prop) Prop f x). Qed.
Lemma lem6389222 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2130 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (@lem6389221 A (term2129 A K f i) (term2125 A dom neut)). Qed.
Lemma lem6389223 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6389218 A K f i dom neut) (@lem6389222 A K f i dom neut)). Qed.
Lemma lem6389224 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term681 A K f i dom neut) = (term2131 A K f i dom neut).
Proof. exact (TRANS (@lem6389212 A K f i dom neut) (@lem6389223 A K f i dom neut)). Qed.
Lemma lem6389225 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1391 A K f i dom neut) = (term2132 A K f i dom neut).
Proof. exact (MK_COMB (@lem6389168) (@lem6389224 A K f i dom neut)). Qed.
Lemma lem6389226 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389233 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389234 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389233 K (type686 K) f x). Qed.
Lemma lem6389235 {K : Type'} (i : K) : (@IN K i) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i).
Proof. exact (@lem6389234 K (@IN K) i). Qed.
Lemma lem6389236 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389237 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i k).
Proof. exact (MK_COMB (@lem6389235 K i) (@lem6389236 K k)). Qed.
Lemma lem6389239 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389240 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389239 (K -> Prop) Prop f x). Qed.
Lemma lem6389241 {K : Type'} (i : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) i k) = (term2133 K i k).
Proof. exact (@lem6389240 K (@I (K -> (K -> Prop) -> Prop) (@IN K) i) k). Qed.
Lemma lem6389243 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = (term2133 K i k).
Proof. exact (TRANS (@lem6389237 K i k) (@lem6389241 K i k)). Qed.
Lemma lem6389244 {K : Type'} (i : K) (k : K -> Prop) : (term1405 K i k) = (term2134 K i k).
Proof. exact (MK_COMB (@lem6389226) (@lem6389243 K i k)). Qed.
Lemma lem6389245 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389246 {K : Type'} (i : K) (k : K -> Prop) : (term1171 K i k) = (term2135 K i k).
Proof. exact (MK_COMB (@lem6389245) (@lem6389244 K i k)). Qed.
Lemma lem6389247 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f i dom neut) = (term2136 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6389246 K i k) (@lem6389225 A K f i dom neut)). Qed.
Lemma lem6389248 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389253 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389255 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389253 K A f x). Qed.
Lemma lem6389264 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389265 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389264 A (type672 A) f x). Qed.
Lemma lem6389266 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389265 A (@INSERT A) neut). Qed.
Lemma lem6389267 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389268 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389266 A neut) (@lem6389267 A)). Qed.
Lemma lem6389270 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389271 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389270 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389272 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389271 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389274 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389268 A neut) (@lem6389272 A neut)). Qed.
Lemma lem6389275 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389276 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389275 A dom) (@lem6389274 A neut)). Qed.
Lemma lem6389278 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389279 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389278 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389280 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389279 A (@DIFF A) dom). Qed.
Lemma lem6389281 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389282 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389280 A dom) (@lem6389281 A neut)). Qed.
Lemma lem6389284 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389285 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389284 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389286 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389285 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389287 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389282 A dom neut) (@lem6389286 A dom neut)). Qed.
Lemma lem6389288 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389276 A dom neut) (@lem6389287 A dom neut)). Qed.
Lemma lem6389289 {A K : Type'} (f : K -> A) (x : K) : (term2126 A K f x) = (term2127 A K f x).
Proof. exact (MK_COMB (@lem6389248 A) (@lem6389255 A K f x)). Qed.
Lemma lem6389290 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2128 A K f x dom neut).
Proof. exact (MK_COMB (@lem6389289 A K f x) (@lem6389288 A dom neut)). Qed.
Lemma lem6389292 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389293 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389292 A (type686 A) f x). Qed.
Lemma lem6389294 {A K : Type'} (f : K -> A) (x : K) : (term2127 A K f x) = (term2129 A K f x).
Proof. exact (@lem6389293 A (@IN A) (@I (K -> A) f x)). Qed.
Lemma lem6389295 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389296 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2130 A K f x dom neut).
Proof. exact (MK_COMB (@lem6389294 A K f x) (@lem6389295 A dom neut)). Qed.
Lemma lem6389298 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389299 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389298 (A -> Prop) Prop f x). Qed.
Lemma lem6389300 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (@lem6389299 A (term2129 A K f x) (term2125 A dom neut)). Qed.
Lemma lem6389301 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6389296 A K f x dom neut) (@lem6389300 A K f x dom neut)). Qed.
Lemma lem6389302 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6389290 A K f x dom neut) (@lem6389301 A K f x dom neut)). Qed.
Lemma lem6389309 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389310 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389309 K (type686 K) f x). Qed.
Lemma lem6389311 {K : Type'} (x : K) : (@IN K x) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x).
Proof. exact (@lem6389310 K (@IN K) x). Qed.
Lemma lem6389312 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389313 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x k).
Proof. exact (MK_COMB (@lem6389311 K x) (@lem6389312 K k)). Qed.
Lemma lem6389315 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389316 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389315 (K -> Prop) Prop f x). Qed.
Lemma lem6389317 {K : Type'} (x : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x k) = (term2133 K x k).
Proof. exact (@lem6389316 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x) k). Qed.
Lemma lem6389319 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (term2133 K x k).
Proof. exact (TRANS (@lem6389313 K x k) (@lem6389317 K x k)). Qed.
Lemma lem6389320 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389321 {K : Type'} (x : K) (k : K -> Prop) : (term673 K x k) = (term2137 K x k).
Proof. exact (MK_COMB (@lem6389320) (@lem6389319 K x k)). Qed.
Lemma lem6389322 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term706 A K k f x dom neut) = (term2138 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6389321 K x k) (@lem6389302 A K f x dom neut)). Qed.
Lemma lem6389323 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389324 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term785 A K k f x dom neut) = (term2139 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6389323) (@lem6389322 A K k f x dom neut)). Qed.
Lemma lem6389325 {A K : Type'} (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1597 A K x k f i dom neut) = (term2140 A K x k f i dom neut).
Proof. exact (MK_COMB (@lem6389324 A K k f x dom neut) (@lem6389247 A K k f i dom neut)). Qed.
Lemma lem6389326 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6389339 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389340 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389339 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6389341 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (_79516 ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle).
Proof. exact (@lem6389340 A K _79516 ltle). Qed.
Lemma lem6389342 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389343 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k).
Proof. exact (MK_COMB (@lem6389341 A K _79516 ltle) (@lem6389342 K k)). Qed.
Lemma lem6389345 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389346 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389345 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6389347 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (@lem6389346 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle) k). Qed.
Lemma lem6389348 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (TRANS (@lem6389343 A K _79516 ltle k) (@lem6389347 A K _79516 ltle k)). Qed.
Lemma lem6389349 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389350 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2150 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6389348 A K _79516 ltle k) (@lem6389349 A K f)). Qed.
Lemma lem6389352 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389353 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389352 (K -> A) (type671 A K) f x). Qed.
Lemma lem6389354 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (@lem6389353 A K (term2149 A K _79516 ltle k) f). Qed.
Lemma lem6389355 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6389350 A K _79516 ltle k f) (@lem6389354 A K _79516 ltle k f)). Qed.
Lemma lem6389356 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389357 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2152 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6389355 A K _79516 ltle k f) (@lem6389356 A dom)). Qed.
Lemma lem6389359 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389360 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389359 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6389361 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (@lem6389360 A K (term2151 A K _79516 ltle k f) dom). Qed.
Lemma lem6389362 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6389357 A K _79516 ltle k f dom) (@lem6389361 A K _79516 ltle k f dom)). Qed.
Lemma lem6389363 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389364 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2154 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389362 A K _79516 ltle k f dom) (@lem6389363 A neut)). Qed.
Lemma lem6389366 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389367 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6389366 A K f x). Qed.
Lemma lem6389368 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389367 A K (term2153 A K _79516 ltle k f dom) neut). Qed.
Lemma lem6389370 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389364 A K _79516 ltle k f dom neut) (@lem6389368 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389371 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6389372 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term865 A K _79516 ltle k f dom neut) = (term2339 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389326 K) (@lem6389370 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389373 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : ((_79516 ltle k f dom neut) = i) = ((term2155 A K _79516 ltle k f dom neut) = i).
Proof. exact (MK_COMB (@lem6389372 A K _79516 ltle k f dom neut) (@lem6389371 K i)). Qed.
Lemma lem6389374 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389375 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1206 A K _79516 ltle k f dom neut i) = (term2340 A K _79516 ltle k f dom neut i).
Proof. exact (MK_COMB (@lem6389374) (@lem6389373 A K _79516 ltle k f dom neut i)). Qed.
Lemma lem6389376 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1612 A K _79516 ltle x k f i dom neut) = (term2341 A K _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6389375 A K _79516 ltle k f dom neut i) (@lem6389325 A K x k f i dom neut)). Qed.
Lemma lem6389391 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389392 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389391 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6389393 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (_79516 ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle).
Proof. exact (@lem6389392 A K _79516 ltle). Qed.
Lemma lem6389394 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389395 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k).
Proof. exact (MK_COMB (@lem6389393 A K _79516 ltle) (@lem6389394 K k)). Qed.
Lemma lem6389397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389398 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389397 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6389399 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (@lem6389398 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle) k). Qed.
Lemma lem6389400 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (TRANS (@lem6389395 A K _79516 ltle k) (@lem6389399 A K _79516 ltle k)). Qed.
Lemma lem6389401 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389402 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2150 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6389400 A K _79516 ltle k) (@lem6389401 A K f)). Qed.
Lemma lem6389404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389405 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389404 (K -> A) (type671 A K) f x). Qed.
Lemma lem6389406 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (@lem6389405 A K (term2149 A K _79516 ltle k) f). Qed.
Lemma lem6389407 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6389402 A K _79516 ltle k f) (@lem6389406 A K _79516 ltle k f)). Qed.
Lemma lem6389408 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389409 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2152 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6389407 A K _79516 ltle k f) (@lem6389408 A dom)). Qed.
Lemma lem6389411 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389412 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389411 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6389413 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (@lem6389412 A K (term2151 A K _79516 ltle k f) dom). Qed.
Lemma lem6389414 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6389409 A K _79516 ltle k f dom) (@lem6389413 A K _79516 ltle k f dom)). Qed.
Lemma lem6389415 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389416 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2154 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389414 A K _79516 ltle k f dom) (@lem6389415 A neut)). Qed.
Lemma lem6389418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389419 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6389418 A K f x). Qed.
Lemma lem6389420 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389419 A K (term2153 A K _79516 ltle k f dom) neut). Qed.
Lemma lem6389422 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389416 A K _79516 ltle k f dom neut) (@lem6389420 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389423 {K : Type'} (j : K) : (@eq K j) = (@eq K j).
Proof. exact (eq_refl (@eq K j)). Qed.
Lemma lem6389424 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j = (_79516 ltle k f dom neut)) = (j = (term2155 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6389423 K j) (@lem6389422 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389425 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389426 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389431 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389432 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389431 K A f x). Qed.
Lemma lem6389434 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6389432 A K f j). Qed.
Lemma lem6389443 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389444 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389443 A (type672 A) f x). Qed.
Lemma lem6389445 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389444 A (@INSERT A) neut). Qed.
Lemma lem6389446 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389447 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389445 A neut) (@lem6389446 A)). Qed.
Lemma lem6389449 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389450 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389449 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389451 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389450 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389453 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389447 A neut) (@lem6389451 A neut)). Qed.
Lemma lem6389454 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389455 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389454 A dom) (@lem6389453 A neut)). Qed.
Lemma lem6389457 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389458 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389457 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389459 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389458 A (@DIFF A) dom). Qed.
Lemma lem6389460 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389461 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389459 A dom) (@lem6389460 A neut)). Qed.
Lemma lem6389463 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389464 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389463 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389465 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389464 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389466 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389461 A dom neut) (@lem6389465 A dom neut)). Qed.
Lemma lem6389467 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389455 A dom neut) (@lem6389466 A dom neut)). Qed.
Lemma lem6389468 {A K : Type'} (f : K -> A) (j : K) : (term2126 A K f j) = (term2127 A K f j).
Proof. exact (MK_COMB (@lem6389426 A) (@lem6389434 A K f j)). Qed.
Lemma lem6389469 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2128 A K f j dom neut).
Proof. exact (MK_COMB (@lem6389468 A K f j) (@lem6389467 A dom neut)). Qed.
Lemma lem6389471 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389472 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389471 A (type686 A) f x). Qed.
Lemma lem6389473 {A K : Type'} (f : K -> A) (j : K) : (term2127 A K f j) = (term2129 A K f j).
Proof. exact (@lem6389472 A (@IN A) (@I (K -> A) f j)). Qed.
Lemma lem6389474 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389475 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2130 A K f j dom neut).
Proof. exact (MK_COMB (@lem6389473 A K f j) (@lem6389474 A dom neut)). Qed.
Lemma lem6389477 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389478 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389477 (A -> Prop) Prop f x). Qed.
Lemma lem6389479 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2130 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (@lem6389478 A (term2129 A K f j) (term2125 A dom neut)). Qed.
Lemma lem6389480 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6389475 A K f j dom neut) (@lem6389479 A K f j dom neut)). Qed.
Lemma lem6389481 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6389469 A K f j dom neut) (@lem6389480 A K f j dom neut)). Qed.
Lemma lem6389482 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1391 A K f j dom neut) = (term2132 A K f j dom neut).
Proof. exact (MK_COMB (@lem6389425) (@lem6389481 A K f j dom neut)). Qed.
Lemma lem6389483 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389490 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389491 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389490 K (type686 K) f x). Qed.
Lemma lem6389492 {K : Type'} (j : K) : (@IN K j) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j).
Proof. exact (@lem6389491 K (@IN K) j). Qed.
Lemma lem6389493 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389494 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j k).
Proof. exact (MK_COMB (@lem6389492 K j) (@lem6389493 K k)). Qed.
Lemma lem6389496 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389497 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389496 (K -> Prop) Prop f x). Qed.
Lemma lem6389498 {K : Type'} (j : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) j k) = (term2133 K j k).
Proof. exact (@lem6389497 K (@I (K -> (K -> Prop) -> Prop) (@IN K) j) k). Qed.
Lemma lem6389500 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (term2133 K j k).
Proof. exact (TRANS (@lem6389494 K j k) (@lem6389498 K j k)). Qed.
Lemma lem6389501 {K : Type'} (j : K) (k : K -> Prop) : (term1405 K j k) = (term2134 K j k).
Proof. exact (MK_COMB (@lem6389483) (@lem6389500 K j k)). Qed.
Lemma lem6389502 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389503 {K : Type'} (j : K) (k : K -> Prop) : (term1171 K j k) = (term2135 K j k).
Proof. exact (MK_COMB (@lem6389502) (@lem6389501 K j k)). Qed.
Lemma lem6389504 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f j dom neut) = (term2136 A K k f j dom neut).
Proof. exact (MK_COMB (@lem6389503 K j k) (@lem6389482 A K f j dom neut)). Qed.
Lemma lem6389505 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389520 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389521 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389520 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6389522 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (_79516 ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle).
Proof. exact (@lem6389521 A K _79516 ltle). Qed.
Lemma lem6389523 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389524 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k).
Proof. exact (MK_COMB (@lem6389522 A K _79516 ltle) (@lem6389523 K k)). Qed.
Lemma lem6389526 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389527 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389526 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6389528 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (@lem6389527 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle) k). Qed.
Lemma lem6389529 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (TRANS (@lem6389524 A K _79516 ltle k) (@lem6389528 A K _79516 ltle k)). Qed.
Lemma lem6389530 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389531 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2150 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6389529 A K _79516 ltle k) (@lem6389530 A K f)). Qed.
Lemma lem6389533 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389534 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389533 (K -> A) (type671 A K) f x). Qed.
Lemma lem6389535 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (@lem6389534 A K (term2149 A K _79516 ltle k) f). Qed.
Lemma lem6389536 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6389531 A K _79516 ltle k f) (@lem6389535 A K _79516 ltle k f)). Qed.
Lemma lem6389537 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389538 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2152 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6389536 A K _79516 ltle k f) (@lem6389537 A dom)). Qed.
Lemma lem6389540 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389541 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389540 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6389542 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (@lem6389541 A K (term2151 A K _79516 ltle k f) dom). Qed.
Lemma lem6389543 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6389538 A K _79516 ltle k f dom) (@lem6389542 A K _79516 ltle k f dom)). Qed.
Lemma lem6389544 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389545 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2154 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389543 A K _79516 ltle k f dom) (@lem6389544 A neut)). Qed.
Lemma lem6389547 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389548 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6389547 A K f x). Qed.
Lemma lem6389549 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389548 A K (term2153 A K _79516 ltle k f dom) neut). Qed.
Lemma lem6389551 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389545 A K _79516 ltle k f dom neut) (@lem6389549 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389552 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (ltle j).
Proof. exact (eq_refl (ltle j)). Qed.
Lemma lem6389553 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term892 A K j _79516 ltle k f dom neut) = (term2156 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389552 K ltle j) (@lem6389551 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389555 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389556 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6389555 K (K -> Prop) f x). Qed.
Lemma lem6389557 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6389556 K ltle j). Qed.
Lemma lem6389558 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2155 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2155 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389559 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2156 A K j _79516 ltle k f dom neut) = (term2157 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389557 K ltle j) (@lem6389558 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389561 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389562 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6389561 K Prop f x). Qed.
Lemma lem6389563 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2157 A K j _79516 ltle k f dom neut) = (term2158 A K j _79516 ltle k f dom neut).
Proof. exact (@lem6389562 K (@I (K -> K -> Prop) ltle j) (term2155 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389564 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2156 A K j _79516 ltle k f dom neut) = (term2158 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389559 A K j _79516 ltle k f dom neut) (@lem6389563 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389565 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term892 A K j _79516 ltle k f dom neut) = (term2158 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389553 A K j _79516 ltle k f dom neut) (@lem6389564 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389566 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2159 A K j _79516 ltle k f dom neut) = (term2160 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389505) (@lem6389565 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389567 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389568 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1175 A K j _79516 ltle k f dom neut) = (term2161 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389567) (@lem6389566 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389569 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1177 A K _79516 ltle k f j dom neut) = (term2162 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6389568 A K j _79516 ltle k f dom neut) (@lem6389504 A K k f j dom neut)). Qed.
Lemma lem6389570 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6389571 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1180 A K _79516 ltle k f j dom neut) = (term2163 A K _79516 ltle k f j dom neut).
Proof. exact (MK_COMB (@lem6389570) (@lem6389569 A K _79516 ltle k f j dom neut)). Qed.
Lemma lem6389572 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1182 A K j _79516 ltle k f dom neut) = (term2164 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389571 A K _79516 ltle k f j dom neut) (@lem6389424 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389573 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1183 A K _79516 ltle k f dom neut) = (term2165 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6389572 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6389574 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6389575 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1184 A K _79516 ltle k f dom neut) = (term2166 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389574 K) (@lem6389573 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389576 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389577 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389590 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389591 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389590 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6389592 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (_79516 ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle).
Proof. exact (@lem6389591 A K _79516 ltle). Qed.
Lemma lem6389593 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389594 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k).
Proof. exact (MK_COMB (@lem6389592 A K _79516 ltle) (@lem6389593 K k)). Qed.
Lemma lem6389596 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389597 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389596 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6389598 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (@lem6389597 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle) k). Qed.
Lemma lem6389599 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (TRANS (@lem6389594 A K _79516 ltle k) (@lem6389598 A K _79516 ltle k)). Qed.
Lemma lem6389600 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389601 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2150 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6389599 A K _79516 ltle k) (@lem6389600 A K f)). Qed.
Lemma lem6389603 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389604 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389603 (K -> A) (type671 A K) f x). Qed.
Lemma lem6389605 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (@lem6389604 A K (term2149 A K _79516 ltle k) f). Qed.
Lemma lem6389606 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6389601 A K _79516 ltle k f) (@lem6389605 A K _79516 ltle k f)). Qed.
Lemma lem6389607 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389608 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2152 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6389606 A K _79516 ltle k f) (@lem6389607 A dom)). Qed.
Lemma lem6389610 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389611 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389610 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6389612 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (@lem6389611 A K (term2151 A K _79516 ltle k f) dom). Qed.
Lemma lem6389613 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6389608 A K _79516 ltle k f dom) (@lem6389612 A K _79516 ltle k f dom)). Qed.
Lemma lem6389614 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389615 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2154 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389613 A K _79516 ltle k f dom) (@lem6389614 A neut)). Qed.
Lemma lem6389617 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389618 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6389617 A K f x). Qed.
Lemma lem6389619 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389618 A K (term2153 A K _79516 ltle k f dom) neut). Qed.
Lemma lem6389621 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389615 A K _79516 ltle k f dom neut) (@lem6389619 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389622 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term883 A K _79516 ltle k f dom neut) = (term2167 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389577 A K f) (@lem6389621 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389624 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389625 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389624 K A f x). Qed.
Lemma lem6389626 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2167 A K _79516 ltle k f dom neut) = (term2168 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389625 A K f (term2155 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389627 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term883 A K _79516 ltle k f dom neut) = (term2168 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389622 A K _79516 ltle k f dom neut) (@lem6389626 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389636 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389637 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389636 A (type672 A) f x). Qed.
Lemma lem6389638 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389637 A (@INSERT A) neut). Qed.
Lemma lem6389639 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389640 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389638 A neut) (@lem6389639 A)). Qed.
Lemma lem6389642 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389643 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389642 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389644 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389643 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389646 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389640 A neut) (@lem6389644 A neut)). Qed.
Lemma lem6389647 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389648 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389647 A dom) (@lem6389646 A neut)). Qed.
Lemma lem6389650 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389651 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389650 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389652 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389651 A (@DIFF A) dom). Qed.
Lemma lem6389653 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389654 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389652 A dom) (@lem6389653 A neut)). Qed.
Lemma lem6389656 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389657 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389656 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389658 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389657 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389659 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389654 A dom neut) (@lem6389658 A dom neut)). Qed.
Lemma lem6389660 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389648 A dom neut) (@lem6389659 A dom neut)). Qed.
Lemma lem6389661 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term885 A K _79516 ltle k f dom neut) = (term2169 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389576 A) (@lem6389627 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389662 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term888 A K _79516 ltle k f dom neut) = (term2170 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389661 A K _79516 ltle k f dom neut) (@lem6389660 A dom neut)). Qed.
Lemma lem6389664 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389665 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389664 A (type686 A) f x). Qed.
Lemma lem6389666 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2169 A K _79516 ltle k f dom neut) = (term2171 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389665 A (@IN A) (term2168 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389667 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389668 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2170 A K _79516 ltle k f dom neut) = (term2172 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389666 A K _79516 ltle k f dom neut) (@lem6389667 A dom neut)). Qed.
Lemma lem6389670 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389671 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389670 (A -> Prop) Prop f x). Qed.
Lemma lem6389672 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2172 A K _79516 ltle k f dom neut) = (term2173 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389671 A (term2171 A K _79516 ltle k f dom neut) (term2125 A dom neut)). Qed.
Lemma lem6389673 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2170 A K _79516 ltle k f dom neut) = (term2173 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389668 A K _79516 ltle k f dom neut) (@lem6389672 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389674 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term888 A K _79516 ltle k f dom neut) = (term2173 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389662 A K _79516 ltle k f dom neut) (@lem6389673 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389675 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389676 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term890 A K _79516 ltle k f dom neut) = (term2174 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389675) (@lem6389674 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389677 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1185 A K _79516 ltle k f dom neut) = (term2175 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389676 A K _79516 ltle k f dom neut) (@lem6389575 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389678 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6389691 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389692 {A K : Type'} (f : type758 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389691 (type1402 K) (type850 A K) f x). Qed.
Lemma lem6389693 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) : (_79516 ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle).
Proof. exact (@lem6389692 A K _79516 ltle). Qed.
Lemma lem6389694 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389695 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k).
Proof. exact (MK_COMB (@lem6389693 A K _79516 ltle) (@lem6389694 K k)). Qed.
Lemma lem6389697 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389698 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389697 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6389699 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (@lem6389698 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79516 ltle) k). Qed.
Lemma lem6389700 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (_79516 ltle k) = (term2149 A K _79516 ltle k).
Proof. exact (TRANS (@lem6389695 A K _79516 ltle k) (@lem6389699 A K _79516 ltle k)). Qed.
Lemma lem6389701 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389702 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2150 A K _79516 ltle k f).
Proof. exact (MK_COMB (@lem6389700 A K _79516 ltle k) (@lem6389701 A K f)). Qed.
Lemma lem6389704 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389705 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389704 (K -> A) (type671 A K) f x). Qed.
Lemma lem6389706 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2150 A K _79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (@lem6389705 A K (term2149 A K _79516 ltle k) f). Qed.
Lemma lem6389707 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (_79516 ltle k f) = (term2151 A K _79516 ltle k f).
Proof. exact (TRANS (@lem6389702 A K _79516 ltle k f) (@lem6389706 A K _79516 ltle k f)). Qed.
Lemma lem6389708 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389709 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2152 A K _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6389707 A K _79516 ltle k f) (@lem6389708 A dom)). Qed.
Lemma lem6389711 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389712 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6389711 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6389713 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2152 A K _79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (@lem6389712 A K (term2151 A K _79516 ltle k f) dom). Qed.
Lemma lem6389714 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79516 ltle k f dom) = (term2153 A K _79516 ltle k f dom).
Proof. exact (TRANS (@lem6389709 A K _79516 ltle k f dom) (@lem6389713 A K _79516 ltle k f dom)). Qed.
Lemma lem6389715 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389716 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2154 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389714 A K _79516 ltle k f dom) (@lem6389715 A neut)). Qed.
Lemma lem6389718 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389719 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6389718 A K f x). Qed.
Lemma lem6389720 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2154 A K _79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389719 A K (term2153 A K _79516 ltle k f dom) neut). Qed.
Lemma lem6389722 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79516 ltle k f dom neut) = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6389716 A K _79516 ltle k f dom neut) (@lem6389720 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389723 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389724 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term877 A K _79516 ltle k f dom neut) = (term2176 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389678 K) (@lem6389722 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389725 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term879 A K _79516 ltle f dom neut k) = (term2177 A K _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6389724 A K _79516 ltle k f dom neut) (@lem6389723 K k)). Qed.
Lemma lem6389727 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389728 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389727 K (type686 K) f x). Qed.
Lemma lem6389729 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2176 A K _79516 ltle k f dom neut) = (term2178 A K _79516 ltle k f dom neut).
Proof. exact (@lem6389728 K (@IN K) (term2155 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389730 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389731 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2177 A K _79516 ltle f dom neut k) = (term2179 A K _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6389729 A K _79516 ltle k f dom neut) (@lem6389730 K k)). Qed.
Lemma lem6389733 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389734 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389733 (K -> Prop) Prop f x). Qed.
Lemma lem6389735 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2179 A K _79516 ltle f dom neut k) = (term2180 A K _79516 ltle f dom neut k).
Proof. exact (@lem6389734 K (term2178 A K _79516 ltle k f dom neut) k). Qed.
Lemma lem6389736 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2177 A K _79516 ltle f dom neut k) = (term2180 A K _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6389731 A K _79516 ltle f dom neut k) (@lem6389735 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6389737 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term879 A K _79516 ltle f dom neut k) = (term2180 A K _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6389725 A K _79516 ltle f dom neut k) (@lem6389736 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6389738 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389739 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term881 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6389738) (@lem6389737 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6389740 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1186 A K _79516 ltle k f dom neut) = (term2182 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389739 A K _79516 ltle f dom neut k) (@lem6389677 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6389741 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6389742 {K : Type'} : (@eq K) = (@eq K).
Proof. exact (eq_refl (@eq K)). Qed.
Lemma lem6389757 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389758 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389757 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6389759 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle).
Proof. exact (@lem6389758 A K j ltle). Qed.
Lemma lem6389760 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389761 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k).
Proof. exact (MK_COMB (@lem6389759 A K j ltle) (@lem6389760 K k)). Qed.
Lemma lem6389763 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389764 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389763 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6389765 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k) = (term2183 A K j ltle k).
Proof. exact (@lem6389764 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle) k). Qed.
Lemma lem6389766 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (term2183 A K j ltle k).
Proof. exact (TRANS (@lem6389761 A K j ltle k) (@lem6389765 A K j ltle k)). Qed.
Lemma lem6389767 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389768 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2184 A K j ltle k f).
Proof. exact (MK_COMB (@lem6389766 A K j ltle k) (@lem6389767 A K f)). Qed.
Lemma lem6389770 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389771 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389770 (K -> A) (type668 A K) f x). Qed.
Lemma lem6389772 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (@lem6389771 A K (term2183 A K j ltle k) f). Qed.
Lemma lem6389773 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (TRANS (@lem6389768 A K j ltle k f) (@lem6389772 A K j ltle k f)). Qed.
Lemma lem6389774 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389775 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2186 A K j ltle k f dom).
Proof. exact (MK_COMB (@lem6389773 A K j ltle k f) (@lem6389774 A dom)). Qed.
Lemma lem6389777 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389778 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389777 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6389779 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (@lem6389778 A K (term2185 A K j ltle k f) dom). Qed.
Lemma lem6389780 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (TRANS (@lem6389775 A K j ltle k f dom) (@lem6389779 A K j ltle k f dom)). Qed.
Lemma lem6389781 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389782 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2188 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389780 A K j ltle k f dom) (@lem6389781 A neut)). Qed.
Lemma lem6389784 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389785 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6389784 A (K -> K) f x). Qed.
Lemma lem6389786 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (@lem6389785 A K (term2187 A K j ltle k f dom) neut). Qed.
Lemma lem6389787 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (TRANS (@lem6389782 A K j ltle k f dom neut) (@lem6389786 A K j ltle k f dom neut)). Qed.
Lemma lem6389788 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6389789 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2190 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389787 A K j ltle k f dom neut) (@lem6389788 K x)). Qed.
Lemma lem6389791 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389792 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6389791 K K f x). Qed.
Lemma lem6389793 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (@lem6389792 K (term2189 A K j ltle k f dom neut) x). Qed.
Lemma lem6389795 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6389789 A K j ltle k f dom neut x) (@lem6389793 A K j ltle k f dom neut x)). Qed.
Lemma lem6389796 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6389797 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2192 A K j ltle k f dom neut x) = (term2193 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389742 K) (@lem6389795 A K j ltle k f dom neut x)). Qed.
Lemma lem6389798 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : ((j ltle k f dom neut x) = x) = ((term2191 A K j ltle k f dom neut x) = x).
Proof. exact (MK_COMB (@lem6389797 A K j ltle k f dom neut x) (@lem6389796 K x)). Qed.
Lemma lem6389799 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2194 A K j ltle k f dom neut x) = (term2195 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389741) (@lem6389798 A K j ltle k f dom neut x)). Qed.
Lemma lem6389800 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6389801 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389816 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389817 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389816 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6389818 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle).
Proof. exact (@lem6389817 A K j ltle). Qed.
Lemma lem6389819 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389820 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k).
Proof. exact (MK_COMB (@lem6389818 A K j ltle) (@lem6389819 K k)). Qed.
Lemma lem6389822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389823 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389822 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6389824 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k) = (term2183 A K j ltle k).
Proof. exact (@lem6389823 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle) k). Qed.
Lemma lem6389825 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (term2183 A K j ltle k).
Proof. exact (TRANS (@lem6389820 A K j ltle k) (@lem6389824 A K j ltle k)). Qed.
Lemma lem6389826 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389827 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2184 A K j ltle k f).
Proof. exact (MK_COMB (@lem6389825 A K j ltle k) (@lem6389826 A K f)). Qed.
Lemma lem6389829 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389830 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389829 (K -> A) (type668 A K) f x). Qed.
Lemma lem6389831 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (@lem6389830 A K (term2183 A K j ltle k) f). Qed.
Lemma lem6389832 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (TRANS (@lem6389827 A K j ltle k f) (@lem6389831 A K j ltle k f)). Qed.
Lemma lem6389833 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389834 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2186 A K j ltle k f dom).
Proof. exact (MK_COMB (@lem6389832 A K j ltle k f) (@lem6389833 A dom)). Qed.
Lemma lem6389836 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389837 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389836 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6389838 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (@lem6389837 A K (term2185 A K j ltle k f) dom). Qed.
Lemma lem6389839 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (TRANS (@lem6389834 A K j ltle k f dom) (@lem6389838 A K j ltle k f dom)). Qed.
Lemma lem6389840 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389841 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2188 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389839 A K j ltle k f dom) (@lem6389840 A neut)). Qed.
Lemma lem6389843 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389844 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6389843 A (K -> K) f x). Qed.
Lemma lem6389845 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (@lem6389844 A K (term2187 A K j ltle k f dom) neut). Qed.
Lemma lem6389846 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (TRANS (@lem6389841 A K j ltle k f dom neut) (@lem6389845 A K j ltle k f dom neut)). Qed.
Lemma lem6389847 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6389848 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2190 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389846 A K j ltle k f dom neut) (@lem6389847 K x)). Qed.
Lemma lem6389850 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389851 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6389850 K K f x). Qed.
Lemma lem6389852 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (@lem6389851 K (term2189 A K j ltle k f dom neut) x). Qed.
Lemma lem6389854 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6389848 A K j ltle k f dom neut x) (@lem6389852 A K j ltle k f dom neut x)). Qed.
Lemma lem6389855 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2196 A K j ltle k f dom neut x) = (term2197 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389801 A K f) (@lem6389854 A K j ltle k f dom neut x)). Qed.
Lemma lem6389857 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389858 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6389857 K A f x). Qed.
Lemma lem6389859 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2197 A K j ltle k f dom neut x) = (term2198 A K j ltle k f dom neut x).
Proof. exact (@lem6389858 A K f (term2191 A K j ltle k f dom neut x)). Qed.
Lemma lem6389860 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2196 A K j ltle k f dom neut x) = (term2198 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6389855 A K j ltle k f dom neut x) (@lem6389859 A K j ltle k f dom neut x)). Qed.
Lemma lem6389869 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389870 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389869 A (type672 A) f x). Qed.
Lemma lem6389871 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6389870 A (@INSERT A) neut). Qed.
Lemma lem6389872 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6389873 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6389871 A neut) (@lem6389872 A)). Qed.
Lemma lem6389875 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389876 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389875 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389877 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6389876 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6389879 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6389873 A neut) (@lem6389877 A neut)). Qed.
Lemma lem6389880 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6389881 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6389880 A dom) (@lem6389879 A neut)). Qed.
Lemma lem6389883 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389884 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389883 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6389885 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6389884 A (@DIFF A) dom). Qed.
Lemma lem6389886 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6389887 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6389885 A dom) (@lem6389886 A neut)). Qed.
Lemma lem6389889 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389890 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6389889 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6389891 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6389890 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6389892 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389887 A dom neut) (@lem6389891 A dom neut)). Qed.
Lemma lem6389893 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6389881 A dom neut) (@lem6389892 A dom neut)). Qed.
Lemma lem6389894 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2199 A K j ltle k f dom neut x) = (term2200 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389800 A) (@lem6389860 A K j ltle k f dom neut x)). Qed.
Lemma lem6389895 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2201 A K j ltle k f x dom neut) = (term2202 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6389894 A K j ltle k f dom neut x) (@lem6389893 A dom neut)). Qed.
Lemma lem6389897 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389898 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6389897 A (type686 A) f x). Qed.
Lemma lem6389899 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2200 A K j ltle k f dom neut x) = (term2203 A K j ltle k f dom neut x).
Proof. exact (@lem6389898 A (@IN A) (term2198 A K j ltle k f dom neut x)). Qed.
Lemma lem6389900 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6389901 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2202 A K j ltle k f x dom neut) = (term2204 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6389899 A K j ltle k f dom neut x) (@lem6389900 A dom neut)). Qed.
Lemma lem6389903 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389904 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6389903 (A -> Prop) Prop f x). Qed.
Lemma lem6389905 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2204 A K j ltle k f x dom neut) = (term2205 A K j ltle k f x dom neut).
Proof. exact (@lem6389904 A (term2203 A K j ltle k f dom neut x) (term2125 A dom neut)). Qed.
Lemma lem6389906 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2202 A K j ltle k f x dom neut) = (term2205 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6389901 A K j ltle k f x dom neut) (@lem6389905 A K j ltle k f x dom neut)). Qed.
Lemma lem6389907 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2201 A K j ltle k f x dom neut) = (term2205 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6389895 A K j ltle k f x dom neut) (@lem6389906 A K j ltle k f x dom neut)). Qed.
Lemma lem6389908 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6389923 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389924 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389923 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6389925 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle).
Proof. exact (@lem6389924 A K j ltle). Qed.
Lemma lem6389926 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389927 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k).
Proof. exact (MK_COMB (@lem6389925 A K j ltle) (@lem6389926 K k)). Qed.
Lemma lem6389929 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389930 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389929 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6389931 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k) = (term2183 A K j ltle k).
Proof. exact (@lem6389930 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle) k). Qed.
Lemma lem6389932 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (term2183 A K j ltle k).
Proof. exact (TRANS (@lem6389927 A K j ltle k) (@lem6389931 A K j ltle k)). Qed.
Lemma lem6389933 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6389934 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2184 A K j ltle k f).
Proof. exact (MK_COMB (@lem6389932 A K j ltle k) (@lem6389933 A K f)). Qed.
Lemma lem6389936 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389937 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389936 (K -> A) (type668 A K) f x). Qed.
Lemma lem6389938 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (@lem6389937 A K (term2183 A K j ltle k) f). Qed.
Lemma lem6389939 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (TRANS (@lem6389934 A K j ltle k f) (@lem6389938 A K j ltle k f)). Qed.
Lemma lem6389940 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6389941 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2186 A K j ltle k f dom).
Proof. exact (MK_COMB (@lem6389939 A K j ltle k f) (@lem6389940 A dom)). Qed.
Lemma lem6389943 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389944 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389943 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6389945 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (@lem6389944 A K (term2185 A K j ltle k f) dom). Qed.
Lemma lem6389946 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (TRANS (@lem6389941 A K j ltle k f dom) (@lem6389945 A K j ltle k f dom)). Qed.
Lemma lem6389947 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6389948 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2188 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6389946 A K j ltle k f dom) (@lem6389947 A neut)). Qed.
Lemma lem6389950 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389951 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6389950 A (K -> K) f x). Qed.
Lemma lem6389952 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (@lem6389951 A K (term2187 A K j ltle k f dom) neut). Qed.
Lemma lem6389953 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (TRANS (@lem6389948 A K j ltle k f dom neut) (@lem6389952 A K j ltle k f dom neut)). Qed.
Lemma lem6389954 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6389955 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2190 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389953 A K j ltle k f dom neut) (@lem6389954 K x)). Qed.
Lemma lem6389957 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389958 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6389957 K K f x). Qed.
Lemma lem6389959 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (@lem6389958 K (term2189 A K j ltle k f dom neut) x). Qed.
Lemma lem6389961 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6389955 A K j ltle k f dom neut x) (@lem6389959 A K j ltle k f dom neut x)). Qed.
Lemma lem6389962 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389963 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2206 A K j ltle k f dom neut x) = (term2207 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389908 K) (@lem6389961 A K j ltle k f dom neut x)). Qed.
Lemma lem6389964 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2208 A K j ltle f dom neut x k) = (term2209 A K j ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6389963 A K j ltle k f dom neut x) (@lem6389962 K k)). Qed.
Lemma lem6389966 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389967 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6389966 K (type686 K) f x). Qed.
Lemma lem6389968 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2207 A K j ltle k f dom neut x) = (term2210 A K j ltle k f dom neut x).
Proof. exact (@lem6389967 K (@IN K) (term2191 A K j ltle k f dom neut x)). Qed.
Lemma lem6389969 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389970 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2209 A K j ltle f dom neut x k) = (term2211 A K j ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6389968 A K j ltle k f dom neut x) (@lem6389969 K k)). Qed.
Lemma lem6389972 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389973 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6389972 (K -> Prop) Prop f x). Qed.
Lemma lem6389974 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2211 A K j ltle f dom neut x k) = (term2212 A K j ltle f dom neut x k).
Proof. exact (@lem6389973 K (term2210 A K j ltle k f dom neut x) k). Qed.
Lemma lem6389975 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2209 A K j ltle f dom neut x k) = (term2212 A K j ltle f dom neut x k).
Proof. exact (TRANS (@lem6389970 A K j ltle f dom neut x k) (@lem6389974 A K j ltle f dom neut x k)). Qed.
Lemma lem6389976 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2208 A K j ltle f dom neut x k) = (term2212 A K j ltle f dom neut x k).
Proof. exact (TRANS (@lem6389964 A K j ltle f dom neut x k) (@lem6389975 A K j ltle f dom neut x k)). Qed.
Lemma lem6389977 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6389978 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) (k : K -> Prop) : (term2213 A K j ltle f dom neut x k) = (term2214 A K j ltle f dom neut x k).
Proof. exact (MK_COMB (@lem6389977) (@lem6389976 A K j ltle f dom neut x k)). Qed.
Lemma lem6389979 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2215 A K j ltle k f x dom neut) = (term2216 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6389978 A K j ltle f dom neut x k) (@lem6389907 A K j ltle k f x dom neut)). Qed.
Lemma lem6389980 {K : Type'} (ltle : type1402 K) : ltle = ltle.
Proof. exact (eq_refl ltle). Qed.
Lemma lem6389995 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6389996 {A K : Type'} (f : type757 A K) (x : type1402 K) : (f x) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6389995 (type1402 K) (type848 A K) f x). Qed.
Lemma lem6389997 {A K : Type'} (j : type757 A K) (ltle : type1402 K) : (j ltle) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle).
Proof. exact (@lem6389996 A K j ltle). Qed.
Lemma lem6389998 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6389999 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k).
Proof. exact (MK_COMB (@lem6389997 A K j ltle) (@lem6389998 K k)). Qed.
Lemma lem6390001 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390002 {A K : Type'} (f : type848 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6390001 (K -> Prop) (type780 A K) f x). Qed.
Lemma lem6390003 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle k) = (term2183 A K j ltle k).
Proof. exact (@lem6390002 A K (@I ((K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K -> K) j ltle) k). Qed.
Lemma lem6390004 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) : (j ltle k) = (term2183 A K j ltle k).
Proof. exact (TRANS (@lem6389999 A K j ltle k) (@lem6390003 A K j ltle k)). Qed.
Lemma lem6390005 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6390006 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2184 A K j ltle k f).
Proof. exact (MK_COMB (@lem6390004 A K j ltle k) (@lem6390005 A K f)). Qed.
Lemma lem6390008 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390009 {A K : Type'} (f : type780 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6390008 (K -> A) (type668 A K) f x). Qed.
Lemma lem6390010 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2184 A K j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (@lem6390009 A K (term2183 A K j ltle k) f). Qed.
Lemma lem6390011 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (j ltle k f) = (term2185 A K j ltle k f).
Proof. exact (TRANS (@lem6390006 A K j ltle k f) (@lem6390010 A K j ltle k f)). Qed.
Lemma lem6390012 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6390013 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2186 A K j ltle k f dom).
Proof. exact (MK_COMB (@lem6390011 A K j ltle k f) (@lem6390012 A dom)). Qed.
Lemma lem6390015 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390016 {A K : Type'} (f : type668 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K -> K) f x).
Proof. exact (@lem6390015 (A -> Prop) (type1411 A K) f x). Qed.
Lemma lem6390017 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2186 A K j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (@lem6390016 A K (term2185 A K j ltle k f) dom). Qed.
Lemma lem6390018 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (j ltle k f dom) = (term2187 A K j ltle k f dom).
Proof. exact (TRANS (@lem6390013 A K j ltle k f dom) (@lem6390017 A K j ltle k f dom)). Qed.
Lemma lem6390019 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6390020 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2188 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390018 A K j ltle k f dom) (@lem6390019 A neut)). Qed.
Lemma lem6390022 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390023 {A K : Type'} (f : type1411 A K) (x : A) : (f x) = (@I (A -> K -> K) f x).
Proof. exact (@lem6390022 A (K -> K) f x). Qed.
Lemma lem6390024 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2188 A K j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (@lem6390023 A K (term2187 A K j ltle k f dom) neut). Qed.
Lemma lem6390025 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (j ltle k f dom neut) = (term2189 A K j ltle k f dom neut).
Proof. exact (TRANS (@lem6390020 A K j ltle k f dom neut) (@lem6390024 A K j ltle k f dom neut)). Qed.
Lemma lem6390026 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6390027 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2190 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390025 A K j ltle k f dom neut) (@lem6390026 K x)). Qed.
Lemma lem6390029 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390030 {K : Type'} (f : K -> K) (x : K) : (f x) = (@I (K -> K) f x).
Proof. exact (@lem6390029 K K f x). Qed.
Lemma lem6390031 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2190 A K j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (@lem6390030 K (term2189 A K j ltle k f dom neut) x). Qed.
Lemma lem6390033 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (j ltle k f dom neut x) = (term2191 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390027 A K j ltle k f dom neut x) (@lem6390031 A K j ltle k f dom neut x)). Qed.
Lemma lem6390034 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6390035 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2217 A K j ltle k f dom neut x) = (term2218 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6389980 K ltle) (@lem6390033 A K j ltle k f dom neut x)). Qed.
Lemma lem6390036 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2219 A K j ltle k f dom neut x) = (term2220 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390035 A K j ltle k f dom neut x) (@lem6390034 K x)). Qed.
Lemma lem6390038 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390039 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6390038 K (K -> Prop) f x). Qed.
Lemma lem6390040 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2218 A K j ltle k f dom neut x) = (term2221 A K j ltle k f dom neut x).
Proof. exact (@lem6390039 K ltle (term2191 A K j ltle k f dom neut x)). Qed.
Lemma lem6390041 {K : Type'} (x : K) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6390042 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2220 A K j ltle k f dom neut x) = (term2222 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390040 A K j ltle k f dom neut x) (@lem6390041 K x)). Qed.
Lemma lem6390044 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390045 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6390044 K Prop f x). Qed.
Lemma lem6390046 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2222 A K j ltle k f dom neut x) = (term2223 A K j ltle k f dom neut x).
Proof. exact (@lem6390045 K (term2221 A K j ltle k f dom neut x) x). Qed.
Lemma lem6390047 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2220 A K j ltle k f dom neut x) = (term2223 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390042 A K j ltle k f dom neut x) (@lem6390046 A K j ltle k f dom neut x)). Qed.
Lemma lem6390048 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2219 A K j ltle k f dom neut x) = (term2223 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390036 A K j ltle k f dom neut x) (@lem6390047 A K j ltle k f dom neut x)). Qed.
Lemma lem6390049 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390050 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2224 A K j ltle k f dom neut x) = (term2225 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390049) (@lem6390048 A K j ltle k f dom neut x)). Qed.
Lemma lem6390051 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2226 A K j ltle k f x dom neut) = (term2227 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390050 A K j ltle k f dom neut x) (@lem6389979 A K j ltle k f x dom neut)). Qed.
Lemma lem6390052 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390053 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2228 A K j ltle k f x dom neut) = (term2229 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390052) (@lem6390051 A K j ltle k f x dom neut)). Qed.
Lemma lem6390054 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2230 A K j ltle k f dom neut x) = (term2231 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390053 A K j ltle k f x dom neut) (@lem6389799 A K j ltle k f dom neut x)). Qed.
Lemma lem6390055 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390056 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6390061 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390063 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6390061 K A f x). Qed.
Lemma lem6390072 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390073 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390072 A (type672 A) f x). Qed.
Lemma lem6390074 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6390073 A (@INSERT A) neut). Qed.
Lemma lem6390075 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6390076 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6390074 A neut) (@lem6390075 A)). Qed.
Lemma lem6390078 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390079 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390078 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390080 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6390079 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6390082 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6390076 A neut) (@lem6390080 A neut)). Qed.
Lemma lem6390083 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6390084 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6390083 A dom) (@lem6390082 A neut)). Qed.
Lemma lem6390086 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390087 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390086 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6390088 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6390087 A (@DIFF A) dom). Qed.
Lemma lem6390089 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6390090 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6390088 A dom) (@lem6390089 A neut)). Qed.
Lemma lem6390092 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390093 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390092 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390094 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6390093 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6390095 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390090 A dom neut) (@lem6390094 A dom neut)). Qed.
Lemma lem6390096 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390084 A dom neut) (@lem6390095 A dom neut)). Qed.
Lemma lem6390097 {A K : Type'} (f : K -> A) (x : K) : (term2126 A K f x) = (term2127 A K f x).
Proof. exact (MK_COMB (@lem6390056 A) (@lem6390063 A K f x)). Qed.
Lemma lem6390098 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2128 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390097 A K f x) (@lem6390096 A dom neut)). Qed.
Lemma lem6390100 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390101 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6390100 A (type686 A) f x). Qed.
Lemma lem6390102 {A K : Type'} (f : K -> A) (x : K) : (term2127 A K f x) = (term2129 A K f x).
Proof. exact (@lem6390101 A (@IN A) (@I (K -> A) f x)). Qed.
Lemma lem6390103 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6390104 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2130 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390102 A K f x) (@lem6390103 A dom neut)). Qed.
Lemma lem6390106 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390107 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6390106 (A -> Prop) Prop f x). Qed.
Lemma lem6390108 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (@lem6390107 A (term2129 A K f x) (term2125 A dom neut)). Qed.
Lemma lem6390109 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6390104 A K f x dom neut) (@lem6390108 A K f x dom neut)). Qed.
Lemma lem6390110 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6390098 A K f x dom neut) (@lem6390109 A K f x dom neut)). Qed.
Lemma lem6390111 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1391 A K f x dom neut) = (term2132 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390055) (@lem6390110 A K f x dom neut)). Qed.
Lemma lem6390112 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390113 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1167 A K f x dom neut) = (term2232 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390112) (@lem6390111 A K f x dom neut)). Qed.
Lemma lem6390114 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2233 A K j ltle k f dom neut x) = (term2234 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390113 A K f x dom neut) (@lem6390054 A K j ltle k f dom neut x)). Qed.
Lemma lem6390115 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390122 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390123 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6390122 K (type686 K) f x). Qed.
Lemma lem6390124 {K : Type'} (x : K) : (@IN K x) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x).
Proof. exact (@lem6390123 K (@IN K) x). Qed.
Lemma lem6390125 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390126 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x k).
Proof. exact (MK_COMB (@lem6390124 K x) (@lem6390125 K k)). Qed.
Lemma lem6390128 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390129 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6390128 (K -> Prop) Prop f x). Qed.
Lemma lem6390130 {K : Type'} (x : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x k) = (term2133 K x k).
Proof. exact (@lem6390129 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x) k). Qed.
Lemma lem6390132 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (term2133 K x k).
Proof. exact (TRANS (@lem6390126 K x k) (@lem6390130 K x k)). Qed.
Lemma lem6390133 {K : Type'} (x : K) (k : K -> Prop) : (term1405 K x k) = (term2134 K x k).
Proof. exact (MK_COMB (@lem6390115) (@lem6390132 K x k)). Qed.
Lemma lem6390134 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390135 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term2135 K x k).
Proof. exact (MK_COMB (@lem6390134) (@lem6390133 K x k)). Qed.
Lemma lem6390136 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2235 A K j ltle k f dom neut x) = (term2236 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390135 K x k) (@lem6390114 A K j ltle k f dom neut x)). Qed.
Lemma lem6390137 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2237 A K j ltle k f dom neut) = (term2238 A K j ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390136 A K j ltle k f dom neut x)). Qed.
Lemma lem6390138 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390139 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2239 A K j ltle k f dom neut) = (term2240 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390138 K) (@lem6390137 A K j ltle k f dom neut)). Qed.
Lemma lem6390140 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390141 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2241 A K j ltle k f dom neut) = (term2242 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390140) (@lem6390139 A K j ltle k f dom neut)). Qed.
Lemma lem6390142 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2243 A K j _79516 ltle k f dom neut) = (term2244 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390141 A K j ltle k f dom neut) (@lem6389740 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390143 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2245 A K j _79516 ltle k f dom) = (term2246 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6390142 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390144 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6390145 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2247 A K j _79516 ltle k f dom) = (term2248 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6390144 A) (@lem6390143 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390146 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2249 A K j _79516 ltle k f) = (term2250 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6390145 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390147 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6390148 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2251 A K j _79516 ltle k f) = (term2252 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6390147 A) (@lem6390146 A K j _79516 ltle k f)). Qed.
Lemma lem6390149 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2253 A K j _79516 ltle k) = (term2254 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6390148 A K j _79516 ltle k f)). Qed.
Lemma lem6390150 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6390151 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2255 A K j _79516 ltle k) = (term2256 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6390150 A K) (@lem6390149 A K j _79516 ltle k)). Qed.
Lemma lem6390152 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2257 A K j _79516 ltle) = (term2258 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6390151 A K j _79516 ltle k)). Qed.
Lemma lem6390153 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6390154 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term1579 A K j _79516 ltle) = (term2259 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6390153 K) (@lem6390152 A K j _79516 ltle)). Qed.
Lemma lem6390155 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1581 A K j _79516) = (term2260 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6390154 A K j _79516 ltle)). Qed.
Lemma lem6390156 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6390157 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1583 A K j _79516) = (term2261 A K j _79516).
Proof. exact (MK_COMB (@lem6390156 K) (@lem6390155 A K j _79516)). Qed.
Lemma lem6390158 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390159 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term1628 A K j _79516) = (term2262 A K j _79516).
Proof. exact (MK_COMB (@lem6390158) (@lem6390157 A K j _79516)). Qed.
Lemma lem6390160 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1642 A K j _79516 ltle x k f i dom neut) = (term2342 A K j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6390159 A K j _79516) (@lem6389376 A K _79516 ltle x k f i dom neut)). Qed.
Lemma lem6390161 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6390162 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6390173 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390174 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390173 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6390175 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (_79517 k) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k).
Proof. exact (@lem6390174 A K _79517 k). Qed.
Lemma lem6390176 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6390177 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517 k f) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k f).
Proof. exact (MK_COMB (@lem6390175 A K _79517 k) (@lem6390176 A K f)). Qed.
Lemma lem6390179 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390180 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390179 (K -> A) (type671 A K) f x). Qed.
Lemma lem6390181 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k f) = (term2141 A K _79517 k f).
Proof. exact (@lem6390180 A K (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k) f). Qed.
Lemma lem6390182 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517 k f) = (term2141 A K _79517 k f).
Proof. exact (TRANS (@lem6390177 A K _79517 k f) (@lem6390181 A K _79517 k f)). Qed.
Lemma lem6390183 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6390184 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517 k f dom) = (term2142 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6390182 A K _79517 k f) (@lem6390183 A dom)). Qed.
Lemma lem6390186 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390187 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390186 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6390188 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2142 A K _79517 k f dom) = (term2143 A K _79517 k f dom).
Proof. exact (@lem6390187 A K (term2141 A K _79517 k f) dom). Qed.
Lemma lem6390189 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517 k f dom) = (term2143 A K _79517 k f dom).
Proof. exact (TRANS (@lem6390184 A K _79517 k f dom) (@lem6390188 A K _79517 k f dom)). Qed.
Lemma lem6390190 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6390191 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (term2144 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390189 A K _79517 k f dom) (@lem6390190 A neut)). Qed.
Lemma lem6390193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390194 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6390193 A K f x). Qed.
Lemma lem6390195 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2144 A K _79517 k f dom neut) = (term2145 A K _79517 k f dom neut).
Proof. exact (@lem6390194 A K (term2143 A K _79517 k f dom) neut). Qed.
Lemma lem6390197 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (term2145 A K _79517 k f dom neut).
Proof. exact (TRANS (@lem6390191 A K _79517 k f dom neut) (@lem6390195 A K _79517 k f dom neut)). Qed.
Lemma lem6390198 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term990 A K _79517 k f dom neut) = (term2264 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390162 A K f) (@lem6390197 A K _79517 k f dom neut)). Qed.
Lemma lem6390200 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390201 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6390200 K A f x). Qed.
Lemma lem6390202 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2264 A K _79517 k f dom neut) = (term2265 A K _79517 k f dom neut).
Proof. exact (@lem6390201 A K f (term2145 A K _79517 k f dom neut)). Qed.
Lemma lem6390203 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term990 A K _79517 k f dom neut) = (term2265 A K _79517 k f dom neut).
Proof. exact (TRANS (@lem6390198 A K _79517 k f dom neut) (@lem6390202 A K _79517 k f dom neut)). Qed.
Lemma lem6390212 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390213 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390212 A (type672 A) f x). Qed.
Lemma lem6390214 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6390213 A (@INSERT A) neut). Qed.
Lemma lem6390215 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6390216 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6390214 A neut) (@lem6390215 A)). Qed.
Lemma lem6390218 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390219 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390218 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390220 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6390219 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6390222 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6390216 A neut) (@lem6390220 A neut)). Qed.
Lemma lem6390223 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6390224 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6390223 A dom) (@lem6390222 A neut)). Qed.
Lemma lem6390226 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390227 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390226 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6390228 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6390227 A (@DIFF A) dom). Qed.
Lemma lem6390229 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6390230 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6390228 A dom) (@lem6390229 A neut)). Qed.
Lemma lem6390232 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390233 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390232 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390234 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6390233 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6390235 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390230 A dom neut) (@lem6390234 A dom neut)). Qed.
Lemma lem6390236 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390224 A dom neut) (@lem6390235 A dom neut)). Qed.
Lemma lem6390237 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term992 A K _79517 k f dom neut) = (term2266 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390161 A) (@lem6390203 A K _79517 k f dom neut)). Qed.
Lemma lem6390238 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term994 A K _79517 k f dom neut) = (term2267 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390237 A K _79517 k f dom neut) (@lem6390236 A dom neut)). Qed.
Lemma lem6390240 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390241 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6390240 A (type686 A) f x). Qed.
Lemma lem6390242 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2266 A K _79517 k f dom neut) = (term2268 A K _79517 k f dom neut).
Proof. exact (@lem6390241 A (@IN A) (term2265 A K _79517 k f dom neut)). Qed.
Lemma lem6390243 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6390244 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2267 A K _79517 k f dom neut) = (term2269 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390242 A K _79517 k f dom neut) (@lem6390243 A dom neut)). Qed.
Lemma lem6390246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390247 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6390246 (A -> Prop) Prop f x). Qed.
Lemma lem6390248 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2269 A K _79517 k f dom neut) = (term2270 A K _79517 k f dom neut).
Proof. exact (@lem6390247 A (term2268 A K _79517 k f dom neut) (term2125 A dom neut)). Qed.
Lemma lem6390249 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2267 A K _79517 k f dom neut) = (term2270 A K _79517 k f dom neut).
Proof. exact (TRANS (@lem6390244 A K _79517 k f dom neut) (@lem6390248 A K _79517 k f dom neut)). Qed.
Lemma lem6390250 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term994 A K _79517 k f dom neut) = (term2270 A K _79517 k f dom neut).
Proof. exact (TRANS (@lem6390238 A K _79517 k f dom neut) (@lem6390249 A K _79517 k f dom neut)). Qed.
Lemma lem6390251 {K : Type'} : (@IN K) = (@IN K).
Proof. exact (eq_refl (@IN K)). Qed.
Lemma lem6390262 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390263 {A K : Type'} (f : type850 A K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390262 (K -> Prop) (type782 A K) f x). Qed.
Lemma lem6390264 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (_79517 k) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k).
Proof. exact (@lem6390263 A K _79517 k). Qed.
Lemma lem6390265 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6390266 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517 k f) = (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k f).
Proof. exact (MK_COMB (@lem6390264 A K _79517 k) (@lem6390265 A K f)). Qed.
Lemma lem6390268 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390269 {A K : Type'} (f : type782 A K) (x : K -> A) : (f x) = (@I ((K -> A) -> (A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390268 (K -> A) (type671 A K) f x). Qed.
Lemma lem6390270 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k f) = (term2141 A K _79517 k f).
Proof. exact (@lem6390269 A K (@I ((K -> Prop) -> (K -> A) -> (A -> Prop) -> A -> K) _79517 k) f). Qed.
Lemma lem6390271 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (_79517 k f) = (term2141 A K _79517 k f).
Proof. exact (TRANS (@lem6390266 A K _79517 k f) (@lem6390270 A K _79517 k f)). Qed.
Lemma lem6390272 {A : Type'} (dom : A -> Prop) : dom = dom.
Proof. exact (eq_refl dom). Qed.
Lemma lem6390273 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517 k f dom) = (term2142 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6390271 A K _79517 k f) (@lem6390272 A dom)). Qed.
Lemma lem6390275 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390276 {A K : Type'} (f : type671 A K) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> K) f x).
Proof. exact (@lem6390275 (A -> Prop) (A -> K) f x). Qed.
Lemma lem6390277 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2142 A K _79517 k f dom) = (term2143 A K _79517 k f dom).
Proof. exact (@lem6390276 A K (term2141 A K _79517 k f) dom). Qed.
Lemma lem6390278 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (_79517 k f dom) = (term2143 A K _79517 k f dom).
Proof. exact (TRANS (@lem6390273 A K _79517 k f dom) (@lem6390277 A K _79517 k f dom)). Qed.
Lemma lem6390279 {A : Type'} (neut : A) : neut = neut.
Proof. exact (eq_refl neut). Qed.
Lemma lem6390280 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (term2144 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390278 A K _79517 k f dom) (@lem6390279 A neut)). Qed.
Lemma lem6390282 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390283 {A K : Type'} (f : A -> K) (x : A) : (f x) = (@I (A -> K) f x).
Proof. exact (@lem6390282 A K f x). Qed.
Lemma lem6390284 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2144 A K _79517 k f dom neut) = (term2145 A K _79517 k f dom neut).
Proof. exact (@lem6390283 A K (term2143 A K _79517 k f dom) neut). Qed.
Lemma lem6390286 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (_79517 k f dom neut) = (term2145 A K _79517 k f dom neut).
Proof. exact (TRANS (@lem6390280 A K _79517 k f dom neut) (@lem6390284 A K _79517 k f dom neut)). Qed.
Lemma lem6390287 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390288 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term984 A K _79517 k f dom neut) = (term2271 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390251 K) (@lem6390286 A K _79517 k f dom neut)). Qed.
Lemma lem6390289 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term986 A K _79517 f dom neut k) = (term2272 A K _79517 f dom neut k).
Proof. exact (MK_COMB (@lem6390288 A K _79517 k f dom neut) (@lem6390287 K k)). Qed.
Lemma lem6390291 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390292 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6390291 K (type686 K) f x). Qed.
Lemma lem6390293 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2271 A K _79517 k f dom neut) = (term2273 A K _79517 k f dom neut).
Proof. exact (@lem6390292 K (@IN K) (term2145 A K _79517 k f dom neut)). Qed.
Lemma lem6390294 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390295 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2272 A K _79517 f dom neut k) = (term2274 A K _79517 f dom neut k).
Proof. exact (MK_COMB (@lem6390293 A K _79517 k f dom neut) (@lem6390294 K k)). Qed.
Lemma lem6390297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390298 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6390297 (K -> Prop) Prop f x). Qed.
Lemma lem6390299 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2274 A K _79517 f dom neut k) = (term2275 A K _79517 f dom neut k).
Proof. exact (@lem6390298 K (term2273 A K _79517 k f dom neut) k). Qed.
Lemma lem6390300 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2272 A K _79517 f dom neut k) = (term2275 A K _79517 f dom neut k).
Proof. exact (TRANS (@lem6390295 A K _79517 f dom neut k) (@lem6390299 A K _79517 f dom neut k)). Qed.
Lemma lem6390301 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term986 A K _79517 f dom neut k) = (term2275 A K _79517 f dom neut k).
Proof. exact (TRANS (@lem6390289 A K _79517 f dom neut k) (@lem6390300 A K _79517 f dom neut k)). Qed.
Lemma lem6390302 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390303 {A K : Type'} (_79517 : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term988 A K _79517 f dom neut k) = (term2276 A K _79517 f dom neut k).
Proof. exact (MK_COMB (@lem6390302) (@lem6390301 A K _79517 f dom neut k)). Qed.
Lemma lem6390304 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term995 A K _79517 k f dom neut) = (term2277 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390303 A K _79517 f dom neut k) (@lem6390250 A K _79517 k f dom neut)). Qed.
Lemma lem6390305 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390306 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6390311 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390313 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6390311 K A f x). Qed.
Lemma lem6390322 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390323 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390322 A (type672 A) f x). Qed.
Lemma lem6390324 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6390323 A (@INSERT A) neut). Qed.
Lemma lem6390325 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6390326 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6390324 A neut) (@lem6390325 A)). Qed.
Lemma lem6390328 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390329 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390328 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390330 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6390329 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6390332 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6390326 A neut) (@lem6390330 A neut)). Qed.
Lemma lem6390333 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6390334 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6390333 A dom) (@lem6390332 A neut)). Qed.
Lemma lem6390336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390337 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390336 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6390338 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6390337 A (@DIFF A) dom). Qed.
Lemma lem6390339 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6390340 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6390338 A dom) (@lem6390339 A neut)). Qed.
Lemma lem6390342 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390343 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390342 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390344 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6390343 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6390345 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390340 A dom neut) (@lem6390344 A dom neut)). Qed.
Lemma lem6390346 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390334 A dom neut) (@lem6390345 A dom neut)). Qed.
Lemma lem6390347 {A K : Type'} (f : K -> A) (x : K) : (term2126 A K f x) = (term2127 A K f x).
Proof. exact (MK_COMB (@lem6390306 A) (@lem6390313 A K f x)). Qed.
Lemma lem6390348 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2128 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390347 A K f x) (@lem6390346 A dom neut)). Qed.
Lemma lem6390350 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390351 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6390350 A (type686 A) f x). Qed.
Lemma lem6390352 {A K : Type'} (f : K -> A) (x : K) : (term2127 A K f x) = (term2129 A K f x).
Proof. exact (@lem6390351 A (@IN A) (@I (K -> A) f x)). Qed.
Lemma lem6390353 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6390354 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2130 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390352 A K f x) (@lem6390353 A dom neut)). Qed.
Lemma lem6390356 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390357 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6390356 (A -> Prop) Prop f x). Qed.
Lemma lem6390358 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2130 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (@lem6390357 A (term2129 A K f x) (term2125 A dom neut)). Qed.
Lemma lem6390359 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2128 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6390354 A K f x dom neut) (@lem6390358 A K f x dom neut)). Qed.
Lemma lem6390360 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term681 A K f x dom neut) = (term2131 A K f x dom neut).
Proof. exact (TRANS (@lem6390348 A K f x dom neut) (@lem6390359 A K f x dom neut)). Qed.
Lemma lem6390361 {A K : Type'} (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1391 A K f x dom neut) = (term2132 A K f x dom neut).
Proof. exact (MK_COMB (@lem6390305) (@lem6390360 A K f x dom neut)). Qed.
Lemma lem6390362 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390369 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390370 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6390369 K (type686 K) f x). Qed.
Lemma lem6390371 {K : Type'} (x : K) : (@IN K x) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x).
Proof. exact (@lem6390370 K (@IN K) x). Qed.
Lemma lem6390372 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390373 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) x k).
Proof. exact (MK_COMB (@lem6390371 K x) (@lem6390372 K k)). Qed.
Lemma lem6390375 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390376 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6390375 (K -> Prop) Prop f x). Qed.
Lemma lem6390377 {K : Type'} (x : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) x k) = (term2133 K x k).
Proof. exact (@lem6390376 K (@I (K -> (K -> Prop) -> Prop) (@IN K) x) k). Qed.
Lemma lem6390379 {K : Type'} (x : K) (k : K -> Prop) : (@IN K x k) = (term2133 K x k).
Proof. exact (TRANS (@lem6390373 K x k) (@lem6390377 K x k)). Qed.
Lemma lem6390380 {K : Type'} (x : K) (k : K -> Prop) : (term1405 K x k) = (term2134 K x k).
Proof. exact (MK_COMB (@lem6390362) (@lem6390379 K x k)). Qed.
Lemma lem6390381 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390382 {K : Type'} (x : K) (k : K -> Prop) : (term1171 K x k) = (term2135 K x k).
Proof. exact (MK_COMB (@lem6390381) (@lem6390380 K x k)). Qed.
Lemma lem6390383 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f x dom neut) = (term2136 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6390382 K x k) (@lem6390361 A K f x dom neut)). Qed.
Lemma lem6390384 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1306 A K k f dom neut) = (term2278 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390383 A K k f x dom neut)). Qed.
Lemma lem6390385 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390386 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1315 A K k f dom neut) = (term2279 A K k f dom neut).
Proof. exact (MK_COMB (@lem6390385 K) (@lem6390384 A K k f dom neut)). Qed.
Lemma lem6390387 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390388 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1317 A K k f dom neut) = (term2280 A K k f dom neut).
Proof. exact (MK_COMB (@lem6390387) (@lem6390386 A K k f dom neut)). Qed.
Lemma lem6390389 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1318 A K _79517 k f dom neut) = (term2281 A K _79517 k f dom neut).
Proof. exact (MK_COMB (@lem6390388 A K k f dom neut) (@lem6390304 A K _79517 k f dom neut)). Qed.
Lemma lem6390390 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1319 A K _79517 k f dom) = (term2282 A K _79517 k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6390389 A K _79517 k f dom neut)). Qed.
Lemma lem6390391 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6390392 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term1320 A K _79517 k f dom) = (term2283 A K _79517 k f dom).
Proof. exact (MK_COMB (@lem6390391 A) (@lem6390390 A K _79517 k f dom)). Qed.
Lemma lem6390393 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1321 A K _79517 k f) = (term2284 A K _79517 k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6390392 A K _79517 k f dom)). Qed.
Lemma lem6390394 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6390395 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) (f : K -> A) : (term1322 A K _79517 k f) = (term2285 A K _79517 k f).
Proof. exact (MK_COMB (@lem6390394 A) (@lem6390393 A K _79517 k f)). Qed.
Lemma lem6390396 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1323 A K _79517 k) = (term2286 A K _79517 k).
Proof. exact (fun_ext (fun f : K -> A => @lem6390395 A K _79517 k f)). Qed.
Lemma lem6390397 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6390398 {A K : Type'} (_79517 : type850 A K) (k : K -> Prop) : (term1324 A K _79517 k) = (term2287 A K _79517 k).
Proof. exact (MK_COMB (@lem6390397 A K) (@lem6390396 A K _79517 k)). Qed.
Lemma lem6390399 {A K : Type'} (_79517 : type850 A K) : (term1325 A K _79517) = (term2288 A K _79517).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6390398 A K _79517 k)). Qed.
Lemma lem6390400 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6390401 {A K : Type'} (_79517 : type850 A K) : (term1326 A K _79517) = (term2289 A K _79517).
Proof. exact (MK_COMB (@lem6390400 K) (@lem6390399 A K _79517)). Qed.
Lemma lem6390402 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390403 {A K : Type'} (_79517 : type850 A K) : (term1360 A K _79517) = (term2290 A K _79517).
Proof. exact (MK_COMB (@lem6390402) (@lem6390401 A K _79517)). Qed.
Lemma lem6390404 {A K : Type'} (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1701 A K _79517 j _79516 ltle x k f i dom neut) = (term2343 A K _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6390403 A K _79517) (@lem6390160 A K j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6390409 {K : Type'} (j : K) (i' : K) : (j = i') = (j = i').
Proof. exact (eq_refl (j = i')). Qed.
Lemma lem6390410 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390411 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6390416 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390417 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6390416 K A f x). Qed.
Lemma lem6390419 {A K : Type'} (f : K -> A) (j : K) : (f j) = (@I (K -> A) f j).
Proof. exact (@lem6390417 A K f j). Qed.
Lemma lem6390428 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390429 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390428 A (type672 A) f x). Qed.
Lemma lem6390430 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6390429 A (@INSERT A) neut). Qed.
Lemma lem6390431 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6390432 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6390430 A neut) (@lem6390431 A)). Qed.
Lemma lem6390434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390435 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390434 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390436 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6390435 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6390438 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6390432 A neut) (@lem6390436 A neut)). Qed.
Lemma lem6390439 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6390440 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6390439 A dom) (@lem6390438 A neut)). Qed.
Lemma lem6390442 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390443 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390442 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6390444 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6390443 A (@DIFF A) dom). Qed.
Lemma lem6390445 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6390446 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6390444 A dom) (@lem6390445 A neut)). Qed.
Lemma lem6390448 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390449 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390448 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390450 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6390449 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6390451 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390446 A dom neut) (@lem6390450 A dom neut)). Qed.
Lemma lem6390452 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390440 A dom neut) (@lem6390451 A dom neut)). Qed.
Lemma lem6390453 {A K : Type'} (f : K -> A) (j : K) : (term2126 A K f j) = (term2127 A K f j).
Proof. exact (MK_COMB (@lem6390411 A) (@lem6390419 A K f j)). Qed.
Lemma lem6390454 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2128 A K f j dom neut).
Proof. exact (MK_COMB (@lem6390453 A K f j) (@lem6390452 A dom neut)). Qed.
Lemma lem6390456 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390457 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6390456 A (type686 A) f x). Qed.
Lemma lem6390458 {A K : Type'} (f : K -> A) (j : K) : (term2127 A K f j) = (term2129 A K f j).
Proof. exact (@lem6390457 A (@IN A) (@I (K -> A) f j)). Qed.
Lemma lem6390459 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6390460 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2130 A K f j dom neut).
Proof. exact (MK_COMB (@lem6390458 A K f j) (@lem6390459 A dom neut)). Qed.
Lemma lem6390462 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390463 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6390462 (A -> Prop) Prop f x). Qed.
Lemma lem6390464 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2130 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (@lem6390463 A (term2129 A K f j) (term2125 A dom neut)). Qed.
Lemma lem6390465 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term2128 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6390460 A K f j dom neut) (@lem6390464 A K f j dom neut)). Qed.
Lemma lem6390466 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term681 A K f j dom neut) = (term2131 A K f j dom neut).
Proof. exact (TRANS (@lem6390454 A K f j dom neut) (@lem6390465 A K f j dom neut)). Qed.
Lemma lem6390467 {A K : Type'} (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1391 A K f j dom neut) = (term2132 A K f j dom neut).
Proof. exact (MK_COMB (@lem6390410) (@lem6390466 A K f j dom neut)). Qed.
Lemma lem6390468 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390475 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390476 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6390475 K (type686 K) f x). Qed.
Lemma lem6390477 {K : Type'} (j : K) : (@IN K j) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j).
Proof. exact (@lem6390476 K (@IN K) j). Qed.
Lemma lem6390478 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390479 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) j k).
Proof. exact (MK_COMB (@lem6390477 K j) (@lem6390478 K k)). Qed.
Lemma lem6390481 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390482 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6390481 (K -> Prop) Prop f x). Qed.
Lemma lem6390483 {K : Type'} (j : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) j k) = (term2133 K j k).
Proof. exact (@lem6390482 K (@I (K -> (K -> Prop) -> Prop) (@IN K) j) k). Qed.
Lemma lem6390485 {K : Type'} (j : K) (k : K -> Prop) : (@IN K j k) = (term2133 K j k).
Proof. exact (TRANS (@lem6390479 K j k) (@lem6390483 K j k)). Qed.
Lemma lem6390486 {K : Type'} (j : K) (k : K -> Prop) : (term1405 K j k) = (term2134 K j k).
Proof. exact (MK_COMB (@lem6390468) (@lem6390485 K j k)). Qed.
Lemma lem6390487 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390488 {K : Type'} (j : K) (k : K -> Prop) : (term1171 K j k) = (term2135 K j k).
Proof. exact (MK_COMB (@lem6390487) (@lem6390486 K j k)). Qed.
Lemma lem6390489 {A K : Type'} (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1125 A K k f j dom neut) = (term2136 A K k f j dom neut).
Proof. exact (MK_COMB (@lem6390488 K j k) (@lem6390467 A K f j dom neut)). Qed.
Lemma lem6390490 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6390497 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390498 {K : Type'} (f : type1402 K) (x : K) : (f x) = (@I (K -> K -> Prop) f x).
Proof. exact (@lem6390497 K (K -> Prop) f x). Qed.
Lemma lem6390499 {K : Type'} (ltle : type1402 K) (j : K) : (ltle j) = (@I (K -> K -> Prop) ltle j).
Proof. exact (@lem6390498 K ltle j). Qed.
Lemma lem6390500 {K : Type'} (i' : K) : i' = i'.
Proof. exact (eq_refl i'). Qed.
Lemma lem6390501 {K : Type'} (ltle : type1402 K) (j : K) (i' : K) : (ltle j i') = (@I (K -> K -> Prop) ltle j i').
Proof. exact (MK_COMB (@lem6390499 K ltle j) (@lem6390500 K i')). Qed.
Lemma lem6390503 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390504 {K : Type'} (f : K -> Prop) (x : K) : (f x) = (@I (K -> Prop) f x).
Proof. exact (@lem6390503 K Prop f x). Qed.
Lemma lem6390505 {K : Type'} (ltle : type1402 K) (j : K) (i' : K) : (@I (K -> K -> Prop) ltle j i') = (term2344 K ltle j i').
Proof. exact (@lem6390504 K (@I (K -> K -> Prop) ltle j) i'). Qed.
Lemma lem6390507 {K : Type'} (ltle : type1402 K) (j : K) (i' : K) : (ltle j i') = (term2344 K ltle j i').
Proof. exact (TRANS (@lem6390501 K ltle j i') (@lem6390505 K ltle j i')). Qed.
Lemma lem6390508 {K : Type'} (ltle : type1402 K) (j : K) (i' : K) : (term2345 K ltle j i') = (term2346 K ltle j i').
Proof. exact (MK_COMB (@lem6390490) (@lem6390507 K ltle j i')). Qed.
Lemma lem6390509 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390510 {K : Type'} (ltle : type1402 K) (j : K) (i' : K) : (term1126 K ltle j i') = (term2347 K ltle j i').
Proof. exact (MK_COMB (@lem6390509) (@lem6390508 K ltle j i')). Qed.
Lemma lem6390511 {A K : Type'} (ltle : type1402 K) (i' : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1128 A K ltle i' k f j dom neut) = (term2348 A K ltle i' k f j dom neut).
Proof. exact (MK_COMB (@lem6390510 K ltle j i') (@lem6390489 A K k f j dom neut)). Qed.
Lemma lem6390512 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390513 {A K : Type'} (ltle : type1402 K) (i' : K) (k : K -> Prop) (f : K -> A) (j : K) (dom : A -> Prop) (neut : A) : (term1131 A K ltle i' k f j dom neut) = (term2349 A K ltle i' k f j dom neut).
Proof. exact (MK_COMB (@lem6390512) (@lem6390511 A K ltle i' k f j dom neut)). Qed.
Lemma lem6390514 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i' : K) : (term1133 A K ltle k f dom neut j i') = (term2350 A K ltle k f dom neut j i').
Proof. exact (MK_COMB (@lem6390513 A K ltle i' k f j dom neut) (@lem6390409 K j i')). Qed.
Lemma lem6390515 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1135 A K ltle k f dom neut i') = (term2351 A K ltle k f dom neut i').
Proof. exact (fun_ext (fun j : K => @lem6390514 A K ltle k f dom neut j i')). Qed.
Lemma lem6390516 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390517 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1136 A K ltle k f dom neut i') = (term2352 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6390516 K) (@lem6390515 A K ltle k f dom neut i')). Qed.
Lemma lem6390518 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem6390523 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390524 {A K : Type'} (f : K -> A) (x : K) : (f x) = (@I (K -> A) f x).
Proof. exact (@lem6390523 K A f x). Qed.
Lemma lem6390526 {A K : Type'} (f : K -> A) (i' : K) : (f i') = (@I (K -> A) f i').
Proof. exact (@lem6390524 A K f i'). Qed.
Lemma lem6390535 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390536 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390535 A (type672 A) f x). Qed.
Lemma lem6390537 {A : Type'} (neut : A) : (@INSERT A neut) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut).
Proof. exact (@lem6390536 A (@INSERT A) neut). Qed.
Lemma lem6390538 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem6390539 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)).
Proof. exact (MK_COMB (@lem6390537 A neut) (@lem6390538 A)). Qed.
Lemma lem6390541 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390542 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390541 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390543 {A : Type'} (neut : A) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (@lem6390542 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) neut) (@EMPTY A)). Qed.
Lemma lem6390545 {A : Type'} (neut : A) : (@INSERT A neut (@EMPTY A)) = (term2122 A neut).
Proof. exact (TRANS (@lem6390539 A neut) (@lem6390543 A neut)). Qed.
Lemma lem6390546 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@DIFF A dom).
Proof. exact (eq_refl (@DIFF A dom)). Qed.
Lemma lem6390547 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2123 A dom neut).
Proof. exact (MK_COMB (@lem6390546 A dom) (@lem6390545 A neut)). Qed.
Lemma lem6390549 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390550 {A : Type'} (f : type636 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390549 (A -> Prop) (type672 A) f x). Qed.
Lemma lem6390551 {A : Type'} (dom : A -> Prop) : (@DIFF A dom) = (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom).
Proof. exact (@lem6390550 A (@DIFF A) dom). Qed.
Lemma lem6390552 {A : Type'} (neut : A) : (term2122 A neut) = (term2122 A neut).
Proof. exact (eq_refl (term2122 A neut)). Qed.
Lemma lem6390553 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2124 A dom neut).
Proof. exact (MK_COMB (@lem6390551 A dom) (@lem6390552 A neut)). Qed.
Lemma lem6390555 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390556 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem6390555 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem6390557 {A : Type'} (dom : A -> Prop) (neut : A) : (term2124 A dom neut) = (term2125 A dom neut).
Proof. exact (@lem6390556 A (@I ((A -> Prop) -> (A -> Prop) -> A -> Prop) (@DIFF A) dom) (term2122 A neut)). Qed.
Lemma lem6390558 {A : Type'} (dom : A -> Prop) (neut : A) : (term2123 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390553 A dom neut) (@lem6390557 A dom neut)). Qed.
Lemma lem6390559 {A : Type'} (dom : A -> Prop) (neut : A) : (term886 A dom neut) = (term2125 A dom neut).
Proof. exact (TRANS (@lem6390547 A dom neut) (@lem6390558 A dom neut)). Qed.
Lemma lem6390560 {A K : Type'} (f : K -> A) (i' : K) : (term2126 A K f i') = (term2127 A K f i').
Proof. exact (MK_COMB (@lem6390518 A) (@lem6390526 A K f i')). Qed.
Lemma lem6390561 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term681 A K f i' dom neut) = (term2128 A K f i' dom neut).
Proof. exact (MK_COMB (@lem6390560 A K f i') (@lem6390559 A dom neut)). Qed.
Lemma lem6390563 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390564 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem6390563 A (type686 A) f x). Qed.
Lemma lem6390565 {A K : Type'} (f : K -> A) (i' : K) : (term2127 A K f i') = (term2129 A K f i').
Proof. exact (@lem6390564 A (@IN A) (@I (K -> A) f i')). Qed.
Lemma lem6390566 {A : Type'} (dom : A -> Prop) (neut : A) : (term2125 A dom neut) = (term2125 A dom neut).
Proof. exact (eq_refl (term2125 A dom neut)). Qed.
Lemma lem6390567 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i' dom neut) = (term2130 A K f i' dom neut).
Proof. exact (MK_COMB (@lem6390565 A K f i') (@lem6390566 A dom neut)). Qed.
Lemma lem6390569 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390570 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem6390569 (A -> Prop) Prop f x). Qed.
Lemma lem6390571 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2130 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6390570 A (term2129 A K f i') (term2125 A dom neut)). Qed.
Lemma lem6390572 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2128 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (TRANS (@lem6390567 A K f i' dom neut) (@lem6390571 A K f i' dom neut)). Qed.
Lemma lem6390573 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term681 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (TRANS (@lem6390561 A K f i' dom neut) (@lem6390572 A K f i' dom neut)). Qed.
Lemma lem6390574 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390575 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term1101 A K f i' dom neut) = (term2353 A K f i' dom neut).
Proof. exact (MK_COMB (@lem6390574) (@lem6390573 A K f i' dom neut)). Qed.
Lemma lem6390576 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1137 A K ltle k f dom neut i') = (term2354 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6390575 A K f i' dom neut) (@lem6390517 A K ltle k f dom neut i')). Qed.
Lemma lem6390583 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390584 {K : Type'} (f : type1364 K) (x : K) : (f x) = (@I (K -> (K -> Prop) -> Prop) f x).
Proof. exact (@lem6390583 K (type686 K) f x). Qed.
Lemma lem6390585 {K : Type'} (i' : K) : (@IN K i') = (@I (K -> (K -> Prop) -> Prop) (@IN K) i').
Proof. exact (@lem6390584 K (@IN K) i'). Qed.
Lemma lem6390586 {K : Type'} (k : K -> Prop) : k = k.
Proof. exact (eq_refl k). Qed.
Lemma lem6390587 {K : Type'} (i' : K) (k : K -> Prop) : (@IN K i' k) = (@I (K -> (K -> Prop) -> Prop) (@IN K) i' k).
Proof. exact (MK_COMB (@lem6390585 K i') (@lem6390586 K k)). Qed.
Lemma lem6390589 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6390590 {K : Type'} (f : type686 K) (x : K -> Prop) : (f x) = (@I ((K -> Prop) -> Prop) f x).
Proof. exact (@lem6390589 (K -> Prop) Prop f x). Qed.
Lemma lem6390591 {K : Type'} (i' : K) (k : K -> Prop) : (@I (K -> (K -> Prop) -> Prop) (@IN K) i' k) = (term2133 K i' k).
Proof. exact (@lem6390590 K (@I (K -> (K -> Prop) -> Prop) (@IN K) i') k). Qed.
Lemma lem6390593 {K : Type'} (i' : K) (k : K -> Prop) : (@IN K i' k) = (term2133 K i' k).
Proof. exact (TRANS (@lem6390587 K i' k) (@lem6390591 K i' k)). Qed.
Lemma lem6390594 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390595 {K : Type'} (i' : K) (k : K -> Prop) : (term673 K i' k) = (term2137 K i' k).
Proof. exact (MK_COMB (@lem6390594) (@lem6390593 K i' k)). Qed.
Lemma lem6390596 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1138 A K ltle k f dom neut i') = (term2355 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6390595 K i' k) (@lem6390576 A K ltle k f dom neut i')). Qed.
Lemma lem6390597 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390598 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term1721 A K ltle k f dom neut i') = (term2356 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6390597) (@lem6390596 A K ltle k f dom neut i')). Qed.
Lemma lem6390599 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1773 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2357 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6390598 A K ltle k f dom neut i') (@lem6390404 A K _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6390600 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390601 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2030 A K i' _79517 j _79516 ltle x k f i dom neut) = (term2358 A K i' _79517 j _79516 ltle x k f i dom neut).
Proof. exact (MK_COMB (@lem6390600) (@lem6390599 A K i' _79517 j _79516 ltle x k f i dom neut)). Qed.
Lemma lem6390602 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut) = (term2359 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut).
Proof. exact (MK_COMB (@lem6390601 A K i' _79517 j _79516 ltle x k f i dom neut) (@lem6389167 A K ltle j' j'' _79516' _79517' x' k f i dom neut)). Qed.
Lemma lem6390603 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut) : term2359 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut.
Proof. exact (EQ_MP (@lem6390602 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut) (@lem6387715 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390604 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2357 A K i' _79517 j _79516 ltle x k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6390605 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6390606 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2343 A K _79517 j _79516 ltle x k f i dom neut.
Proof. exact (proj2 (@lem6390604 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390607 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2355 A K ltle k f dom neut i'.
Proof. exact (proj1 (@lem6390604 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390608 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2342 A K j _79516 ltle x k f i dom neut.
Proof. exact (proj2 (@lem6390606 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390610 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2341 A K _79516 ltle x k f i dom neut.
Proof. exact (proj2 (@lem6390608 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390611 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2261 A K j _79516.
Proof. exact (proj1 (@lem6390608 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390612 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2140 A K x k f i dom neut.
Proof. exact (proj2 (@lem6390610 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390614 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2136 A K k f i dom neut.
Proof. exact (proj2 (@lem6390612 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390618 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2354 A K ltle k f dom neut i'.
Proof. exact (proj2 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390620 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2352 A K ltle k f dom neut i'.
Proof. exact (proj2 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6390624 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2291 A K j'' _79516' _79517' x' k f i dom neut.
Proof. exact (proj2 (@lem6390605 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390626 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2263 A K j'' _79516' _79517' x' k f i dom neut.
Proof. exact (proj2 (@lem6390624 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390627 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2289 A K _79517'.
Proof. exact (proj1 (@lem6390624 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390628 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2148 A K _79517' x' k f i dom neut.
Proof. exact (proj2 (@lem6390626 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390630 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2140 A K x' k f i dom neut.
Proof. exact (proj2 (@lem6390628 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390632 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2136 A K k f i dom neut.
Proof. exact (proj2 (@lem6390630 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390633 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2138 A K k f x' dom neut.
Proof. exact (proj1 (@lem6390630 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6390715 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2360 A P Q) = (term2361 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem6390716 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2360 K P Q) = (term2361 K P Q).
Proof. exact (@lem6390715 K P Q). Qed.
Lemma lem6390717 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2362 A K _79516 ltle k f dom neut) = (term2363 A K _79516 ltle k f dom neut).
Proof. exact (@lem6390716 K (term2173 A K _79516 ltle k f dom neut) (term2165 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390718 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2364 A K _79516 ltle k f dom neut j) = (term2164 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2364 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390719 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2365 A K _79516 ltle k f dom neut) = (term2165 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6390718 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390720 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390721 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2366 A K _79516 ltle k f dom neut) = (term2166 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390720 K) (@lem6390719 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390722 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2174 A K _79516 ltle k f dom neut) = (term2174 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2174 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390723 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2362 A K _79516 ltle k f dom neut) = (term2175 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390722 A K _79516 ltle k f dom neut) (@lem6390721 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390724 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6390725 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2367 A K _79516 ltle k f dom neut) = (term2368 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390724) (@lem6390723 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390726 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2364 A K _79516 ltle k f dom neut j) = (term2164 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2364 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390727 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2174 A K _79516 ltle k f dom neut) = (term2174 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2174 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390728 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2369 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390727 A K _79516 ltle k f dom neut) (@lem6390726 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390729 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2371 A K _79516 ltle k f dom neut) = (term2372 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6390728 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390730 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390731 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2363 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390730 K) (@lem6390729 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390732 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2362 A K _79516 ltle k f dom neut) = (term2363 A K _79516 ltle k f dom neut)) = ((term2175 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6390725 A K _79516 ltle k f dom neut) (@lem6390731 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390733 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2175 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6390732 A K _79516 ltle k f dom neut) (@lem6390717 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390734 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390735 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2182 A K _79516 ltle k f dom neut) = (term2374 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390734 A K _79516 ltle f dom neut k) (@lem6390733 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390737 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2360 A P Q) = (term2361 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem6390738 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2360 K P Q) = (term2361 K P Q).
Proof. exact (@lem6390737 K P Q). Qed.
Lemma lem6390739 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2375 A K _79516 ltle k f dom neut) = (term2376 A K _79516 ltle k f dom neut).
Proof. exact (@lem6390738 K (term2180 A K _79516 ltle f dom neut k) (term2372 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390740 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2377 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2377 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390741 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2378 A K _79516 ltle k f dom neut) = (term2372 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6390740 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390742 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390743 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2379 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390742 K) (@lem6390741 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390744 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390745 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2375 A K _79516 ltle k f dom neut) = (term2374 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390744 A K _79516 ltle f dom neut k) (@lem6390743 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390746 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6390747 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2380 A K _79516 ltle k f dom neut) = (term2381 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390746) (@lem6390745 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390748 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2377 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2377 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390749 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390750 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2382 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390749 A K _79516 ltle f dom neut k) (@lem6390748 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390751 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2384 A K _79516 ltle k f dom neut) = (term2385 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6390750 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390752 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390753 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2376 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390752 K) (@lem6390751 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390754 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2375 A K _79516 ltle k f dom neut) = (term2376 A K _79516 ltle k f dom neut)) = ((term2374 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6390747 A K _79516 ltle k f dom neut) (@lem6390753 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390755 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2374 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6390754 A K _79516 ltle k f dom neut) (@lem6390739 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390756 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2182 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390735 A K _79516 ltle k f dom neut) (@lem6390755 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390757 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2242 A K j ltle k f dom neut) = (term2242 A K j ltle k f dom neut).
Proof. exact (eq_refl (term2242 A K j ltle k f dom neut)). Qed.
Lemma lem6390758 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2244 A K j _79516 ltle k f dom neut) = (term2387 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390757 A K j ltle k f dom neut) (@lem6390756 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390760 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1303 A P Q) = (term1302 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem6390761 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1303 K P Q) = (term1302 K P Q).
Proof. exact (@lem6390760 K P Q). Qed.
Lemma lem6390762 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2388 A K j _79516 ltle k f dom neut) = (term2389 A K j _79516 ltle k f dom neut).
Proof. exact (@lem6390761 K (term2238 A K j ltle k f dom neut) (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390763 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2390 A K j ltle k f dom neut x) = (term2236 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2390 A K j ltle k f dom neut x)). Qed.
Lemma lem6390764 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2391 A K j ltle k f dom neut) = (term2238 A K j ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390763 A K j ltle k f dom neut x)). Qed.
Lemma lem6390765 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390766 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2392 A K j ltle k f dom neut) = (term2240 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390765 K) (@lem6390764 A K j ltle k f dom neut)). Qed.
Lemma lem6390767 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390768 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2393 A K j ltle k f dom neut) = (term2242 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390767) (@lem6390766 A K j ltle k f dom neut)). Qed.
Lemma lem6390769 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2386 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390770 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2388 A K j _79516 ltle k f dom neut) = (term2387 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390768 A K j ltle k f dom neut) (@lem6390769 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390771 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6390772 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2394 A K j _79516 ltle k f dom neut) = (term2395 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390771) (@lem6390770 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390773 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2390 A K j ltle k f dom neut x) = (term2236 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2390 A K j ltle k f dom neut x)). Qed.
Lemma lem6390774 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390775 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2396 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390774) (@lem6390773 A K j ltle k f dom neut x)). Qed.
Lemma lem6390776 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2386 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390777 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2398 A K j x _79516 ltle k f dom neut) = (term2399 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390775 A K j ltle k f dom neut x) (@lem6390776 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390778 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2400 A K j _79516 ltle k f dom neut) = (term2401 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390777 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390779 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390780 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2389 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390779 K) (@lem6390778 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390781 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2388 A K j _79516 ltle k f dom neut) = (term2389 A K j _79516 ltle k f dom neut)) = ((term2387 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6390772 A K j _79516 ltle k f dom neut) (@lem6390780 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390782 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2387 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6390781 A K j _79516 ltle k f dom neut) (@lem6390762 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390784 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2403 A P Q) = (term2404 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem6390785 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2403 K P Q) = (term2404 K P Q).
Proof. exact (@lem6390784 K P Q). Qed.
Lemma lem6390786 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2405 A K j x _79516 ltle k f dom neut) = (term2406 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem6390785 K (term2236 A K j ltle k f dom neut x) (term2385 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390787 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2407 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2407 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390788 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2408 A K _79516 ltle k f dom neut) = (term2385 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6390787 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390789 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390790 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2409 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390789 K) (@lem6390788 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390791 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2397 A K j ltle k f dom neut x)). Qed.
Lemma lem6390792 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2405 A K j x _79516 ltle k f dom neut) = (term2399 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390791 A K j ltle k f dom neut x) (@lem6390790 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390793 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6390794 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2410 A K j x _79516 ltle k f dom neut) = (term2411 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390793) (@lem6390792 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390795 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2407 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2407 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6390796 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2397 A K j ltle k f dom neut x)). Qed.
Lemma lem6390797 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2412 A K j x _79516 ltle k f dom neut j') = (term2413 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390796 A K j ltle k f dom neut x) (@lem6390795 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390798 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2414 A K j x _79516 ltle k f dom neut) = (term2415 A K j x _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j' : K => @lem6390797 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390799 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390800 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2406 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390799 K) (@lem6390798 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390801 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2405 A K j x _79516 ltle k f dom neut) = (term2406 A K j x _79516 ltle k f dom neut)) = ((term2399 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6390794 A K j x _79516 ltle k f dom neut) (@lem6390800 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390802 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2399 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6390801 A K j x _79516 ltle k f dom neut) (@lem6390786 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390803 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2401 A K j _79516 ltle k f dom neut) = (term2417 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390802 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390804 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390805 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2402 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390804 K) (@lem6390803 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390806 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2387 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390782 A K j _79516 ltle k f dom neut) (@lem6390805 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390807 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2244 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390758 A K j _79516 ltle k f dom neut) (@lem6390806 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390808 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2246 A K j _79516 ltle k f dom) = (term2419 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6390807 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390809 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6390810 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2248 A K j _79516 ltle k f dom) = (term2420 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6390809 A) (@lem6390808 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390811 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2250 A K j _79516 ltle k f) = (term2421 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6390810 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390812 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6390813 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2252 A K j _79516 ltle k f) = (term2422 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6390812 A) (@lem6390811 A K j _79516 ltle k f)). Qed.
Lemma lem6390814 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2254 A K j _79516 ltle k) = (term2423 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6390813 A K j _79516 ltle k f)). Qed.
Lemma lem6390815 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6390816 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2256 A K j _79516 ltle k) = (term2424 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6390815 A K) (@lem6390814 A K j _79516 ltle k)). Qed.
Lemma lem6390817 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2258 A K j _79516 ltle) = (term2425 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6390816 A K j _79516 ltle k)). Qed.
Lemma lem6390818 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6390819 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2259 A K j _79516 ltle) = (term2426 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6390818 K) (@lem6390817 A K j _79516 ltle)). Qed.
Lemma lem6390820 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2260 A K j _79516) = (term2427 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6390819 A K j _79516 ltle)). Qed.
Lemma lem6390821 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6390822 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2261 A K j _79516) = (term2428 A K j _79516).
Proof. exact (MK_COMB (@lem6390821 K) (@lem6390820 A K j _79516)). Qed.
Lemma lem6390849 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2383 A K j _79516 ltle k f dom neut) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2383 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390867 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2234 A K j ltle k f dom neut x) = (term2429 A K j ltle k f dom neut x).
Proof. exact (@lem19490 (term2227 A K j ltle k f x dom neut) (term2132 A K f x dom neut) (term2195 A K j ltle k f dom neut x)). Qed.
Lemma lem6390868 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2430 A K j ltle k f dom neut x) = (term2430 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2430 A K j ltle k f dom neut x)). Qed.
Lemma lem6390869 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2431 A K j ltle k f x dom neut) = (term2432 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2223 A K j ltle k f dom neut x) (term2132 A K f x dom neut) (term2216 A K j ltle k f x dom neut)). Qed.
Lemma lem6390876 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2433 A K j ltle k f x dom neut) = (term2434 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2212 A K j ltle f dom neut x k) (term2132 A K f x dom neut) (term2205 A K j ltle k f x dom neut)). Qed.
Lemma lem6390879 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2435 A K j ltle k f dom neut x) = (term2435 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2435 A K j ltle k f dom neut x)). Qed.
Lemma lem6390880 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2432 A K j ltle k f x dom neut) = (term2436 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390879 A K j ltle k f dom neut x) (@lem6390876 A K j ltle k f x dom neut)). Qed.
Lemma lem6390881 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2431 A K j ltle k f x dom neut) = (term2436 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6390869 A K j ltle k f x dom neut) (@lem6390880 A K j ltle k f x dom neut)). Qed.
Lemma lem6390882 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390883 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2437 A K j ltle k f x dom neut) = (term2438 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390882) (@lem6390881 A K j ltle k f x dom neut)). Qed.
Lemma lem6390884 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2429 A K j ltle k f dom neut x) = (term2439 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390883 A K j ltle k f x dom neut) (@lem6390868 A K j ltle k f dom neut x)). Qed.
Lemma lem6390886 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2234 A K j ltle k f dom neut x) = (term2439 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390867 A K j ltle k f dom neut x) (@lem6390884 A K j ltle k f dom neut x)). Qed.
Lemma lem6390889 {K : Type'} (x : K) (k : K -> Prop) : (term2135 K x k) = (term2135 K x k).
Proof. exact (eq_refl (term2135 K x k)). Qed.
Lemma lem6390890 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2236 A K j ltle k f dom neut x) = (term2440 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390889 K x k) (@lem6390886 A K j ltle k f dom neut x)). Qed.
Lemma lem6390891 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2440 A K j ltle k f dom neut x) = (term2441 A K j ltle k f dom neut x).
Proof. exact (@lem19490 (term2436 A K j ltle k f x dom neut) (term2134 K x k) (term2430 A K j ltle k f dom neut x)). Qed.
Lemma lem6390892 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2442 A K j ltle k f dom neut x) = (term2442 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2442 A K j ltle k f dom neut x)). Qed.
Lemma lem6390893 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2443 A K j ltle k f x dom neut) = (term2444 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2445 A K j ltle k f dom neut x) (term2134 K x k) (term2434 A K j ltle k f x dom neut)). Qed.
Lemma lem6390900 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2446 A K j ltle k f x dom neut) = (term2447 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2448 A K j ltle f dom neut x k) (term2134 K x k) (term2449 A K j ltle k f x dom neut)). Qed.
Lemma lem6390903 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2450 A K j ltle k f dom neut x) = (term2450 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2450 A K j ltle k f dom neut x)). Qed.
Lemma lem6390904 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2444 A K j ltle k f x dom neut) = (term2451 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390903 A K j ltle k f dom neut x) (@lem6390900 A K j ltle k f x dom neut)). Qed.
Lemma lem6390905 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2443 A K j ltle k f x dom neut) = (term2451 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6390893 A K j ltle k f x dom neut) (@lem6390904 A K j ltle k f x dom neut)). Qed.
Lemma lem6390906 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390907 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2452 A K j ltle k f x dom neut) = (term2453 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6390906) (@lem6390905 A K j ltle k f x dom neut)). Qed.
Lemma lem6390908 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2441 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390907 A K j ltle k f x dom neut) (@lem6390892 A K j ltle k f dom neut x)). Qed.
Lemma lem6390909 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2440 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390891 A K j ltle k f dom neut x) (@lem6390908 A K j ltle k f dom neut x)). Qed.
Lemma lem6390910 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2236 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6390890 A K j ltle k f dom neut x) (@lem6390909 A K j ltle k f dom neut x)). Qed.
Lemma lem6390911 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6390912 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2455 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6390911) (@lem6390910 A K j ltle k f dom neut x)). Qed.
Lemma lem6390913 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2413 A K j x j' _79516 ltle k f dom neut) = (term2456 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390912 A K j ltle k f dom neut x) (@lem6390849 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390914 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2456 A K j x j' _79516 ltle k f dom neut) = (term2457 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19490 (term2180 A K _79516 ltle f dom neut k) (term2454 A K j ltle k f dom neut x) (term2370 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390915 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2458 A K j x j' _79516 ltle k f dom neut) = (term2459 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19490 (term2173 A K _79516 ltle k f dom neut) (term2454 A K j ltle k f dom neut x) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390916 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2460 A K j x j' _79516 ltle k f dom neut) = (term2461 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390917 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2462 A K j x j' _79516 ltle k f dom neut) = (term2462 A K j x j' _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2462 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390918 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2463 A K j x j' _79516 ltle k f dom neut) = (term2464 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390925 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2466 A K j x j' _79516 ltle k f dom neut) = (term2467 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390928 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2470 A K j x j' _79516 ltle k f dom neut) = (term2470 A K j x j' _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2470 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390929 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2464 A K j x j' _79516 ltle k f dom neut) = (term2471 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390928 A K j x j' _79516 ltle k f dom neut) (@lem6390925 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390930 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2463 A K j x j' _79516 ltle k f dom neut) = (term2471 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390918 A K j x j' _79516 ltle k f dom neut) (@lem6390929 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390931 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390932 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2472 A K j x j' _79516 ltle k f dom neut) = (term2473 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390931) (@lem6390930 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390933 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2461 A K j x j' _79516 ltle k f dom neut) = (term2474 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390932 A K j x j' _79516 ltle k f dom neut) (@lem6390917 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390934 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2460 A K j x j' _79516 ltle k f dom neut) = (term2474 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390916 A K j x j' _79516 ltle k f dom neut) (@lem6390933 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390935 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2475 A K j x _79516 ltle k f dom neut) = (term2476 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390936 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2477 A K j x _79516 ltle k f dom neut) = (term2477 A K j x _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2477 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390937 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2478 A K j x _79516 ltle k f dom neut) = (term2479 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390944 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2480 A K j x _79516 ltle k f dom neut) = (term2481 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6390947 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2482 A K j x _79516 ltle k f dom neut) = (term2482 A K j x _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2482 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390948 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2479 A K j x _79516 ltle k f dom neut) = (term2483 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390947 A K j x _79516 ltle k f dom neut) (@lem6390944 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390949 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2478 A K j x _79516 ltle k f dom neut) = (term2483 A K j x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390937 A K j x _79516 ltle k f dom neut) (@lem6390948 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390951 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2484 A K j x _79516 ltle k f dom neut) = (term2485 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390950) (@lem6390949 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390952 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2476 A K j x _79516 ltle k f dom neut) = (term2486 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390951 A K j x _79516 ltle k f dom neut) (@lem6390936 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390953 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2475 A K j x _79516 ltle k f dom neut) = (term2486 A K j x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390935 A K j x _79516 ltle k f dom neut) (@lem6390952 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390954 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390955 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2487 A K j x _79516 ltle k f dom neut) = (term2488 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390954) (@lem6390953 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390956 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2459 A K j x j' _79516 ltle k f dom neut) = (term2489 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390955 A K j x _79516 ltle k f dom neut) (@lem6390934 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390957 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2458 A K j x j' _79516 ltle k f dom neut) = (term2489 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390915 A K j x j' _79516 ltle k f dom neut) (@lem6390956 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390958 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2490 A K j x _79516 ltle f dom neut k) = (term2491 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390959 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2492 A K j x _79516 ltle f dom neut k) = (term2492 A K j x _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2492 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390960 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2493 A K j x _79516 ltle f dom neut k) = (term2494 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390967 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2495 A K j x _79516 ltle f dom neut k) = (term2496 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6390970 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2497 A K j x _79516 ltle f dom neut k) = (term2497 A K j x _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2497 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390971 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2494 A K j x _79516 ltle f dom neut k) = (term2498 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6390970 A K j x _79516 ltle f dom neut k) (@lem6390967 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390972 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2493 A K j x _79516 ltle f dom neut k) = (term2498 A K j x _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6390960 A K j x _79516 ltle f dom neut k) (@lem6390971 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390973 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390974 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2499 A K j x _79516 ltle f dom neut k) = (term2500 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6390973) (@lem6390972 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390975 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2491 A K j x _79516 ltle f dom neut k) = (term2501 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6390974 A K j x _79516 ltle f dom neut k) (@lem6390959 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390976 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2490 A K j x _79516 ltle f dom neut k) = (term2501 A K j x _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6390958 A K j x _79516 ltle f dom neut k) (@lem6390975 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390977 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6390978 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2502 A K j x _79516 ltle f dom neut k) = (term2503 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6390977) (@lem6390976 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6390979 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2457 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390978 A K j x _79516 ltle f dom neut k) (@lem6390957 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390980 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2456 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390914 A K j x j' _79516 ltle k f dom neut) (@lem6390979 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390981 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2413 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6390913 A K j x j' _79516 ltle k f dom neut) (@lem6390980 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390982 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2415 A K j x _79516 ltle k f dom neut) = (term2505 A K j x _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j' : K => @lem6390981 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6390983 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390984 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2416 A K j x _79516 ltle k f dom neut) = (term2506 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390983 K) (@lem6390982 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390985 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2417 A K j _79516 ltle k f dom neut) = (term2507 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6390984 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6390986 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6390987 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2418 A K j _79516 ltle k f dom neut) = (term2508 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6390986 K) (@lem6390985 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390988 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2419 A K j _79516 ltle k f dom) = (term2509 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6390987 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6390989 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6390990 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2420 A K j _79516 ltle k f dom) = (term2510 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6390989 A) (@lem6390988 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390991 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2421 A K j _79516 ltle k f) = (term2511 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6390990 A K j _79516 ltle k f dom)). Qed.
Lemma lem6390992 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6390993 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2422 A K j _79516 ltle k f) = (term2512 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6390992 A) (@lem6390991 A K j _79516 ltle k f)). Qed.
Lemma lem6390994 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2423 A K j _79516 ltle k) = (term2513 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6390993 A K j _79516 ltle k f)). Qed.
Lemma lem6390995 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6390996 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2424 A K j _79516 ltle k) = (term2514 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6390995 A K) (@lem6390994 A K j _79516 ltle k)). Qed.
Lemma lem6390997 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2425 A K j _79516 ltle) = (term2515 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6390996 A K j _79516 ltle k)). Qed.
Lemma lem6390998 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6390999 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2426 A K j _79516 ltle) = (term2516 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6390998 K) (@lem6390997 A K j _79516 ltle)). Qed.
Lemma lem6391000 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2427 A K j _79516) = (term2517 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6390999 A K j _79516 ltle)). Qed.
Lemma lem6391001 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6391002 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2428 A K j _79516) = (term2518 A K j _79516).
Proof. exact (MK_COMB (@lem6391001 K) (@lem6391000 A K j _79516)). Qed.
Lemma lem6391003 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2261 A K j _79516) = (term2518 A K j _79516).
Proof. exact (TRANS (@lem6390822 A K j _79516) (@lem6391002 A K j _79516)). Qed.
Lemma lem6391004 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2518 A K j _79516.
Proof. exact (EQ_MP (@lem6391003 A K j _79516) (@lem6390611 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6391044 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i' : K) : (term2350 A K ltle k f dom neut j i') = (term2350 A K ltle k f dom neut j i').
Proof. exact (eq_refl (term2350 A K ltle k f dom neut j i')). Qed.
Lemma lem6391045 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2351 A K ltle k f dom neut i') = (term2351 A K ltle k f dom neut i').
Proof. exact (fun_ext (fun j : K => @lem6391044 A K ltle k f dom neut j i')). Qed.
Lemma lem6391046 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391048 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2352 A K ltle k f dom neut i') = (term2352 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6391046 K) (@lem6391045 A K ltle k f dom neut i')). Qed.
Lemma lem6391049 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2352 A K ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6391048 A K ltle k f dom neut i') (@lem6390620 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6391053 {K : Type'} (i : K) (k : K -> Prop) (h1 : term2134 K i k) : term2134 K i k.
Proof. exact (h1). Qed.
Lemma lem6391131 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2360 A P Q) = (term2361 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem6391132 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2360 K P Q) = (term2361 K P Q).
Proof. exact (@lem6391131 K P Q). Qed.
Lemma lem6391133 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2362 A K _79516 ltle k f dom neut) = (term2363 A K _79516 ltle k f dom neut).
Proof. exact (@lem6391132 K (term2173 A K _79516 ltle k f dom neut) (term2165 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391134 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2364 A K _79516 ltle k f dom neut j) = (term2164 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2364 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391135 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2365 A K _79516 ltle k f dom neut) = (term2165 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6391134 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391136 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391137 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2366 A K _79516 ltle k f dom neut) = (term2166 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391136 K) (@lem6391135 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391138 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2174 A K _79516 ltle k f dom neut) = (term2174 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2174 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391139 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2362 A K _79516 ltle k f dom neut) = (term2175 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391138 A K _79516 ltle k f dom neut) (@lem6391137 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391140 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6391141 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2367 A K _79516 ltle k f dom neut) = (term2368 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391140) (@lem6391139 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391142 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2364 A K _79516 ltle k f dom neut j) = (term2164 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2364 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391143 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2174 A K _79516 ltle k f dom neut) = (term2174 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2174 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391144 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2369 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391143 A K _79516 ltle k f dom neut) (@lem6391142 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391145 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2371 A K _79516 ltle k f dom neut) = (term2372 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6391144 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391146 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391147 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2363 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391146 K) (@lem6391145 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391148 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2362 A K _79516 ltle k f dom neut) = (term2363 A K _79516 ltle k f dom neut)) = ((term2175 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6391141 A K _79516 ltle k f dom neut) (@lem6391147 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391149 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2175 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6391148 A K _79516 ltle k f dom neut) (@lem6391133 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391150 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391151 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2182 A K _79516 ltle k f dom neut) = (term2374 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391150 A K _79516 ltle f dom neut k) (@lem6391149 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391153 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2360 A P Q) = (term2361 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem6391154 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2360 K P Q) = (term2361 K P Q).
Proof. exact (@lem6391153 K P Q). Qed.
Lemma lem6391155 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2375 A K _79516 ltle k f dom neut) = (term2376 A K _79516 ltle k f dom neut).
Proof. exact (@lem6391154 K (term2180 A K _79516 ltle f dom neut k) (term2372 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391156 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2377 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2377 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391157 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2378 A K _79516 ltle k f dom neut) = (term2372 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6391156 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391158 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391159 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2379 A K _79516 ltle k f dom neut) = (term2373 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391158 K) (@lem6391157 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391160 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391161 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2375 A K _79516 ltle k f dom neut) = (term2374 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391160 A K _79516 ltle f dom neut k) (@lem6391159 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391162 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6391163 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2380 A K _79516 ltle k f dom neut) = (term2381 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391162) (@lem6391161 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391164 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2377 A K _79516 ltle k f dom neut j) = (term2370 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2377 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391165 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2181 A K _79516 ltle f dom neut k) = (term2181 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2181 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391166 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2382 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391165 A K _79516 ltle f dom neut k) (@lem6391164 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391167 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2384 A K _79516 ltle k f dom neut) = (term2385 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6391166 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391168 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391169 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2376 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391168 K) (@lem6391167 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391170 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2375 A K _79516 ltle k f dom neut) = (term2376 A K _79516 ltle k f dom neut)) = ((term2374 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6391163 A K _79516 ltle k f dom neut) (@lem6391169 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391171 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2374 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6391170 A K _79516 ltle k f dom neut) (@lem6391155 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391172 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2182 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391151 A K _79516 ltle k f dom neut) (@lem6391171 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391173 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2242 A K j ltle k f dom neut) = (term2242 A K j ltle k f dom neut).
Proof. exact (eq_refl (term2242 A K j ltle k f dom neut)). Qed.
Lemma lem6391174 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2244 A K j _79516 ltle k f dom neut) = (term2387 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391173 A K j ltle k f dom neut) (@lem6391172 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391176 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1303 A P Q) = (term1302 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem6391177 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1303 K P Q) = (term1302 K P Q).
Proof. exact (@lem6391176 K P Q). Qed.
Lemma lem6391178 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2388 A K j _79516 ltle k f dom neut) = (term2389 A K j _79516 ltle k f dom neut).
Proof. exact (@lem6391177 K (term2238 A K j ltle k f dom neut) (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391179 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2390 A K j ltle k f dom neut x) = (term2236 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2390 A K j ltle k f dom neut x)). Qed.
Lemma lem6391180 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2391 A K j ltle k f dom neut) = (term2238 A K j ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391179 A K j ltle k f dom neut x)). Qed.
Lemma lem6391181 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391182 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2392 A K j ltle k f dom neut) = (term2240 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391181 K) (@lem6391180 A K j ltle k f dom neut)). Qed.
Lemma lem6391183 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391184 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2393 A K j ltle k f dom neut) = (term2242 A K j ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391183) (@lem6391182 A K j ltle k f dom neut)). Qed.
Lemma lem6391185 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2386 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391186 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2388 A K j _79516 ltle k f dom neut) = (term2387 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391184 A K j ltle k f dom neut) (@lem6391185 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391187 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6391188 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2394 A K j _79516 ltle k f dom neut) = (term2395 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391187) (@lem6391186 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391189 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2390 A K j ltle k f dom neut x) = (term2236 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2390 A K j ltle k f dom neut x)). Qed.
Lemma lem6391190 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391191 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2396 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6391190) (@lem6391189 A K j ltle k f dom neut x)). Qed.
Lemma lem6391192 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2386 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2386 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391193 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2398 A K j x _79516 ltle k f dom neut) = (term2399 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391191 A K j ltle k f dom neut x) (@lem6391192 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391194 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2400 A K j _79516 ltle k f dom neut) = (term2401 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391193 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391195 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391196 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2389 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391195 K) (@lem6391194 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391197 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2388 A K j _79516 ltle k f dom neut) = (term2389 A K j _79516 ltle k f dom neut)) = ((term2387 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6391188 A K j _79516 ltle k f dom neut) (@lem6391196 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391198 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2387 A K j _79516 ltle k f dom neut) = (term2402 A K j _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6391197 A K j _79516 ltle k f dom neut) (@lem6391178 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391200 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2403 A P Q) = (term2404 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem6391201 {K : Type'} (P : Prop) (Q : K -> Prop) : (term2403 K P Q) = (term2404 K P Q).
Proof. exact (@lem6391200 K P Q). Qed.
Lemma lem6391202 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2405 A K j x _79516 ltle k f dom neut) = (term2406 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem6391201 K (term2236 A K j ltle k f dom neut x) (term2385 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391203 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2407 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2407 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391204 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2408 A K _79516 ltle k f dom neut) = (term2385 A K _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j : K => @lem6391203 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391205 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391206 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2409 A K _79516 ltle k f dom neut) = (term2386 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391205 K) (@lem6391204 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391207 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2397 A K j ltle k f dom neut x)). Qed.
Lemma lem6391208 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2405 A K j x _79516 ltle k f dom neut) = (term2399 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391207 A K j ltle k f dom neut x) (@lem6391206 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391209 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6391210 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2410 A K j x _79516 ltle k f dom neut) = (term2411 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391209) (@lem6391208 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391211 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2407 A K _79516 ltle k f dom neut j) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2407 A K _79516 ltle k f dom neut j)). Qed.
Lemma lem6391212 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2397 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2397 A K j ltle k f dom neut x)). Qed.
Lemma lem6391213 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2412 A K j x _79516 ltle k f dom neut j') = (term2413 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391212 A K j ltle k f dom neut x) (@lem6391211 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391214 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2414 A K j x _79516 ltle k f dom neut) = (term2415 A K j x _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j' : K => @lem6391213 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391215 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391216 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2406 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391215 K) (@lem6391214 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391217 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2405 A K j x _79516 ltle k f dom neut) = (term2406 A K j x _79516 ltle k f dom neut)) = ((term2399 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6391210 A K j x _79516 ltle k f dom neut) (@lem6391216 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391218 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2399 A K j x _79516 ltle k f dom neut) = (term2416 A K j x _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6391217 A K j x _79516 ltle k f dom neut) (@lem6391202 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391219 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2401 A K j _79516 ltle k f dom neut) = (term2417 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391218 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391220 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391221 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2402 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391220 K) (@lem6391219 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391222 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2387 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391198 A K j _79516 ltle k f dom neut) (@lem6391221 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391223 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2244 A K j _79516 ltle k f dom neut) = (term2418 A K j _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391174 A K j _79516 ltle k f dom neut) (@lem6391222 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391224 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2246 A K j _79516 ltle k f dom) = (term2419 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6391223 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391225 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6391226 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2248 A K j _79516 ltle k f dom) = (term2420 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6391225 A) (@lem6391224 A K j _79516 ltle k f dom)). Qed.
Lemma lem6391227 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2250 A K j _79516 ltle k f) = (term2421 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6391226 A K j _79516 ltle k f dom)). Qed.
Lemma lem6391228 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6391229 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2252 A K j _79516 ltle k f) = (term2422 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6391228 A) (@lem6391227 A K j _79516 ltle k f)). Qed.
Lemma lem6391230 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2254 A K j _79516 ltle k) = (term2423 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6391229 A K j _79516 ltle k f)). Qed.
Lemma lem6391231 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6391232 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2256 A K j _79516 ltle k) = (term2424 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6391231 A K) (@lem6391230 A K j _79516 ltle k)). Qed.
Lemma lem6391233 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2258 A K j _79516 ltle) = (term2425 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6391232 A K j _79516 ltle k)). Qed.
Lemma lem6391234 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6391235 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2259 A K j _79516 ltle) = (term2426 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6391234 K) (@lem6391233 A K j _79516 ltle)). Qed.
Lemma lem6391236 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2260 A K j _79516) = (term2427 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6391235 A K j _79516 ltle)). Qed.
Lemma lem6391237 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6391238 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2261 A K j _79516) = (term2428 A K j _79516).
Proof. exact (MK_COMB (@lem6391237 K) (@lem6391236 A K j _79516)). Qed.
Lemma lem6391265 {A K : Type'} (j : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2383 A K j _79516 ltle k f dom neut) = (term2383 A K j _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2383 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391283 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2234 A K j ltle k f dom neut x) = (term2429 A K j ltle k f dom neut x).
Proof. exact (@lem19490 (term2227 A K j ltle k f x dom neut) (term2132 A K f x dom neut) (term2195 A K j ltle k f dom neut x)). Qed.
Lemma lem6391284 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2430 A K j ltle k f dom neut x) = (term2430 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2430 A K j ltle k f dom neut x)). Qed.
Lemma lem6391285 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2431 A K j ltle k f x dom neut) = (term2432 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2223 A K j ltle k f dom neut x) (term2132 A K f x dom neut) (term2216 A K j ltle k f x dom neut)). Qed.
Lemma lem6391292 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2433 A K j ltle k f x dom neut) = (term2434 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2212 A K j ltle f dom neut x k) (term2132 A K f x dom neut) (term2205 A K j ltle k f x dom neut)). Qed.
Lemma lem6391295 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2435 A K j ltle k f dom neut x) = (term2435 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2435 A K j ltle k f dom neut x)). Qed.
Lemma lem6391296 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2432 A K j ltle k f x dom neut) = (term2436 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6391295 A K j ltle k f dom neut x) (@lem6391292 A K j ltle k f x dom neut)). Qed.
Lemma lem6391297 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2431 A K j ltle k f x dom neut) = (term2436 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6391285 A K j ltle k f x dom neut) (@lem6391296 A K j ltle k f x dom neut)). Qed.
Lemma lem6391298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391299 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2437 A K j ltle k f x dom neut) = (term2438 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6391298) (@lem6391297 A K j ltle k f x dom neut)). Qed.
Lemma lem6391300 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2429 A K j ltle k f dom neut x) = (term2439 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6391299 A K j ltle k f x dom neut) (@lem6391284 A K j ltle k f dom neut x)). Qed.
Lemma lem6391302 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2234 A K j ltle k f dom neut x) = (term2439 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6391283 A K j ltle k f dom neut x) (@lem6391300 A K j ltle k f dom neut x)). Qed.
Lemma lem6391305 {K : Type'} (x : K) (k : K -> Prop) : (term2135 K x k) = (term2135 K x k).
Proof. exact (eq_refl (term2135 K x k)). Qed.
Lemma lem6391306 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2236 A K j ltle k f dom neut x) = (term2440 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6391305 K x k) (@lem6391302 A K j ltle k f dom neut x)). Qed.
Lemma lem6391307 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2440 A K j ltle k f dom neut x) = (term2441 A K j ltle k f dom neut x).
Proof. exact (@lem19490 (term2436 A K j ltle k f x dom neut) (term2134 K x k) (term2430 A K j ltle k f dom neut x)). Qed.
Lemma lem6391308 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2442 A K j ltle k f dom neut x) = (term2442 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2442 A K j ltle k f dom neut x)). Qed.
Lemma lem6391309 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2443 A K j ltle k f x dom neut) = (term2444 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2445 A K j ltle k f dom neut x) (term2134 K x k) (term2434 A K j ltle k f x dom neut)). Qed.
Lemma lem6391316 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2446 A K j ltle k f x dom neut) = (term2447 A K j ltle k f x dom neut).
Proof. exact (@lem19490 (term2448 A K j ltle f dom neut x k) (term2134 K x k) (term2449 A K j ltle k f x dom neut)). Qed.
Lemma lem6391319 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2450 A K j ltle k f dom neut x) = (term2450 A K j ltle k f dom neut x).
Proof. exact (eq_refl (term2450 A K j ltle k f dom neut x)). Qed.
Lemma lem6391320 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2444 A K j ltle k f x dom neut) = (term2451 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6391319 A K j ltle k f dom neut x) (@lem6391316 A K j ltle k f x dom neut)). Qed.
Lemma lem6391321 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2443 A K j ltle k f x dom neut) = (term2451 A K j ltle k f x dom neut).
Proof. exact (TRANS (@lem6391309 A K j ltle k f x dom neut) (@lem6391320 A K j ltle k f x dom neut)). Qed.
Lemma lem6391322 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391323 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2452 A K j ltle k f x dom neut) = (term2453 A K j ltle k f x dom neut).
Proof. exact (MK_COMB (@lem6391322) (@lem6391321 A K j ltle k f x dom neut)). Qed.
Lemma lem6391324 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2441 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6391323 A K j ltle k f x dom neut) (@lem6391308 A K j ltle k f dom neut x)). Qed.
Lemma lem6391325 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2440 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6391307 A K j ltle k f dom neut x) (@lem6391324 A K j ltle k f dom neut x)). Qed.
Lemma lem6391326 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2236 A K j ltle k f dom neut x) = (term2454 A K j ltle k f dom neut x).
Proof. exact (TRANS (@lem6391306 A K j ltle k f dom neut x) (@lem6391325 A K j ltle k f dom neut x)). Qed.
Lemma lem6391327 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391328 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (x : K) : (term2397 A K j ltle k f dom neut x) = (term2455 A K j ltle k f dom neut x).
Proof. exact (MK_COMB (@lem6391327) (@lem6391326 A K j ltle k f dom neut x)). Qed.
Lemma lem6391329 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2413 A K j x j' _79516 ltle k f dom neut) = (term2456 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391328 A K j ltle k f dom neut x) (@lem6391265 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391330 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2456 A K j x j' _79516 ltle k f dom neut) = (term2457 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19490 (term2180 A K _79516 ltle f dom neut k) (term2454 A K j ltle k f dom neut x) (term2370 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391331 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2458 A K j x j' _79516 ltle k f dom neut) = (term2459 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19490 (term2173 A K _79516 ltle k f dom neut) (term2454 A K j ltle k f dom neut x) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391332 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2460 A K j x j' _79516 ltle k f dom neut) = (term2461 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391333 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2462 A K j x j' _79516 ltle k f dom neut) = (term2462 A K j x j' _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2462 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391334 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2463 A K j x j' _79516 ltle k f dom neut) = (term2464 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391341 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2466 A K j x j' _79516 ltle k f dom neut) = (term2467 A K j x j' _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2164 A K j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391344 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2470 A K j x j' _79516 ltle k f dom neut) = (term2470 A K j x j' _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2470 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391345 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2464 A K j x j' _79516 ltle k f dom neut) = (term2471 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391344 A K j x j' _79516 ltle k f dom neut) (@lem6391341 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391346 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2463 A K j x j' _79516 ltle k f dom neut) = (term2471 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391334 A K j x j' _79516 ltle k f dom neut) (@lem6391345 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391347 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391348 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2472 A K j x j' _79516 ltle k f dom neut) = (term2473 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391347) (@lem6391346 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391349 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2461 A K j x j' _79516 ltle k f dom neut) = (term2474 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391348 A K j x j' _79516 ltle k f dom neut) (@lem6391333 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391350 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2460 A K j x j' _79516 ltle k f dom neut) = (term2474 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391332 A K j x j' _79516 ltle k f dom neut) (@lem6391349 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391351 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2475 A K j x _79516 ltle k f dom neut) = (term2476 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391352 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2477 A K j x _79516 ltle k f dom neut) = (term2477 A K j x _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2477 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391353 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2478 A K j x _79516 ltle k f dom neut) = (term2479 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391360 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2480 A K j x _79516 ltle k f dom neut) = (term2481 A K j x _79516 ltle k f dom neut).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6391363 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2482 A K j x _79516 ltle k f dom neut) = (term2482 A K j x _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2482 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391364 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2479 A K j x _79516 ltle k f dom neut) = (term2483 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391363 A K j x _79516 ltle k f dom neut) (@lem6391360 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391365 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2478 A K j x _79516 ltle k f dom neut) = (term2483 A K j x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391353 A K j x _79516 ltle k f dom neut) (@lem6391364 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391366 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391367 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2484 A K j x _79516 ltle k f dom neut) = (term2485 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391366) (@lem6391365 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391368 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2476 A K j x _79516 ltle k f dom neut) = (term2486 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391367 A K j x _79516 ltle k f dom neut) (@lem6391352 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391369 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2475 A K j x _79516 ltle k f dom neut) = (term2486 A K j x _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391351 A K j x _79516 ltle k f dom neut) (@lem6391368 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391370 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391371 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2487 A K j x _79516 ltle k f dom neut) = (term2488 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391370) (@lem6391369 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391372 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2459 A K j x j' _79516 ltle k f dom neut) = (term2489 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391371 A K j x _79516 ltle k f dom neut) (@lem6391350 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391373 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2458 A K j x j' _79516 ltle k f dom neut) = (term2489 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391331 A K j x j' _79516 ltle k f dom neut) (@lem6391372 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391374 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2490 A K j x _79516 ltle f dom neut k) = (term2491 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2451 A K j ltle k f x dom neut) (term2442 A K j ltle k f dom neut x) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391375 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2492 A K j x _79516 ltle f dom neut k) = (term2492 A K j x _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2492 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391376 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2493 A K j x _79516 ltle f dom neut k) = (term2494 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2465 A K j ltle k f dom neut x) (term2447 A K j ltle k f x dom neut) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391383 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2495 A K j x _79516 ltle f dom neut k) = (term2496 A K j x _79516 ltle f dom neut k).
Proof. exact (@lem19699 (term2468 A K j ltle f dom neut x k) (term2469 A K j ltle k f x dom neut) (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6391386 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2497 A K j x _79516 ltle f dom neut k) = (term2497 A K j x _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2497 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391387 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2494 A K j x _79516 ltle f dom neut k) = (term2498 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6391386 A K j x _79516 ltle f dom neut k) (@lem6391383 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391388 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2493 A K j x _79516 ltle f dom neut k) = (term2498 A K j x _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6391376 A K j x _79516 ltle f dom neut k) (@lem6391387 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391389 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391390 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2499 A K j x _79516 ltle f dom neut k) = (term2500 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6391389) (@lem6391388 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391391 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2491 A K j x _79516 ltle f dom neut k) = (term2501 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6391390 A K j x _79516 ltle f dom neut k) (@lem6391375 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391392 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2490 A K j x _79516 ltle f dom neut k) = (term2501 A K j x _79516 ltle f dom neut k).
Proof. exact (TRANS (@lem6391374 A K j x _79516 ltle f dom neut k) (@lem6391391 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391393 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6391394 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2502 A K j x _79516 ltle f dom neut k) = (term2503 A K j x _79516 ltle f dom neut k).
Proof. exact (MK_COMB (@lem6391393) (@lem6391392 A K j x _79516 ltle f dom neut k)). Qed.
Lemma lem6391395 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2457 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391394 A K j x _79516 ltle f dom neut k) (@lem6391373 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391396 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2456 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391330 A K j x j' _79516 ltle k f dom neut) (@lem6391395 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391397 {A K : Type'} (j : type757 A K) (x : K) (j' : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2413 A K j x j' _79516 ltle k f dom neut) = (term2504 A K j x j' _79516 ltle k f dom neut).
Proof. exact (TRANS (@lem6391329 A K j x j' _79516 ltle k f dom neut) (@lem6391396 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391398 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2415 A K j x _79516 ltle k f dom neut) = (term2505 A K j x _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun j' : K => @lem6391397 A K j x j' _79516 ltle k f dom neut)). Qed.
Lemma lem6391399 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391400 {A K : Type'} (j : type757 A K) (x : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2416 A K j x _79516 ltle k f dom neut) = (term2506 A K j x _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391399 K) (@lem6391398 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391401 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2417 A K j _79516 ltle k f dom neut) = (term2507 A K j _79516 ltle k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391400 A K j x _79516 ltle k f dom neut)). Qed.
Lemma lem6391402 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391403 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2418 A K j _79516 ltle k f dom neut) = (term2508 A K j _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6391402 K) (@lem6391401 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391404 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2419 A K j _79516 ltle k f dom) = (term2509 A K j _79516 ltle k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6391403 A K j _79516 ltle k f dom neut)). Qed.
Lemma lem6391405 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6391406 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2420 A K j _79516 ltle k f dom) = (term2510 A K j _79516 ltle k f dom).
Proof. exact (MK_COMB (@lem6391405 A) (@lem6391404 A K j _79516 ltle k f dom)). Qed.
Lemma lem6391407 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2421 A K j _79516 ltle k f) = (term2511 A K j _79516 ltle k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6391406 A K j _79516 ltle k f dom)). Qed.
Lemma lem6391408 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6391409 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term2422 A K j _79516 ltle k f) = (term2512 A K j _79516 ltle k f).
Proof. exact (MK_COMB (@lem6391408 A) (@lem6391407 A K j _79516 ltle k f)). Qed.
Lemma lem6391410 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2423 A K j _79516 ltle k) = (term2513 A K j _79516 ltle k).
Proof. exact (fun_ext (fun f : K -> A => @lem6391409 A K j _79516 ltle k f)). Qed.
Lemma lem6391411 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6391412 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) : (term2424 A K j _79516 ltle k) = (term2514 A K j _79516 ltle k).
Proof. exact (MK_COMB (@lem6391411 A K) (@lem6391410 A K j _79516 ltle k)). Qed.
Lemma lem6391413 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2425 A K j _79516 ltle) = (term2515 A K j _79516 ltle).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6391412 A K j _79516 ltle k)). Qed.
Lemma lem6391414 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6391415 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) : (term2426 A K j _79516 ltle) = (term2516 A K j _79516 ltle).
Proof. exact (MK_COMB (@lem6391414 K) (@lem6391413 A K j _79516 ltle)). Qed.
Lemma lem6391416 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2427 A K j _79516) = (term2517 A K j _79516).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6391415 A K j _79516 ltle)). Qed.
Lemma lem6391417 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6391418 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2428 A K j _79516) = (term2518 A K j _79516).
Proof. exact (MK_COMB (@lem6391417 K) (@lem6391416 A K j _79516)). Qed.
Lemma lem6391419 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) : (term2261 A K j _79516) = (term2518 A K j _79516).
Proof. exact (TRANS (@lem6391238 A K j _79516) (@lem6391418 A K j _79516)). Qed.
Lemma lem6391420 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2518 A K j _79516.
Proof. exact (EQ_MP (@lem6391419 A K j _79516) (@lem6390611 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6391460 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (j : K) (i' : K) : (term2350 A K ltle k f dom neut j i') = (term2350 A K ltle k f dom neut j i').
Proof. exact (eq_refl (term2350 A K ltle k f dom neut j i')). Qed.
Lemma lem6391461 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2351 A K ltle k f dom neut i') = (term2351 A K ltle k f dom neut i').
Proof. exact (fun_ext (fun j : K => @lem6391460 A K ltle k f dom neut j i')). Qed.
Lemma lem6391462 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391464 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2352 A K ltle k f dom neut i') = (term2352 A K ltle k f dom neut i').
Proof. exact (MK_COMB (@lem6391462 K) (@lem6391461 A K ltle k f dom neut i')). Qed.
Lemma lem6391465 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2352 A K ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6391464 A K ltle k f dom neut i') (@lem6390620 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6391469 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) : term2132 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6391538 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1303 A P Q) = (term1302 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem6391539 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1303 K P Q) = (term1302 K P Q).
Proof. exact (@lem6391538 K P Q). Qed.
Lemma lem6391540 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2519 A K _79517' k f dom neut) = (term2520 A K _79517' k f dom neut).
Proof. exact (@lem6391539 K (term2278 A K k f dom neut) (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6391541 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2521 A K k f dom neut x) = (term2136 A K k f x dom neut).
Proof. exact (eq_refl (term2521 A K k f dom neut x)). Qed.
Lemma lem6391542 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2522 A K k f dom neut) = (term2278 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391541 A K k f x dom neut)). Qed.
Lemma lem6391543 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391544 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2523 A K k f dom neut) = (term2279 A K k f dom neut).
Proof. exact (MK_COMB (@lem6391543 K) (@lem6391542 A K k f dom neut)). Qed.
Lemma lem6391545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391546 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2524 A K k f dom neut) = (term2280 A K k f dom neut).
Proof. exact (MK_COMB (@lem6391545) (@lem6391544 A K k f dom neut)). Qed.
Lemma lem6391547 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2277 A K _79517' k f dom neut) = (term2277 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6391548 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2519 A K _79517' k f dom neut) = (term2281 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391546 A K k f dom neut) (@lem6391547 A K _79517' k f dom neut)). Qed.
Lemma lem6391549 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6391550 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2525 A K _79517' k f dom neut) = (term2526 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391549) (@lem6391548 A K _79517' k f dom neut)). Qed.
Lemma lem6391551 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2521 A K k f dom neut x) = (term2136 A K k f x dom neut).
Proof. exact (eq_refl (term2521 A K k f dom neut x)). Qed.
Lemma lem6391552 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391553 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2527 A K k f dom neut x) = (term2528 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6391552) (@lem6391551 A K k f x dom neut)). Qed.
Lemma lem6391554 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2277 A K _79517' k f dom neut) = (term2277 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6391555 {A K : Type'} (x : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2529 A K x _79517' k f dom neut) = (term2530 A K x _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391553 A K k f x dom neut) (@lem6391554 A K _79517' k f dom neut)). Qed.
Lemma lem6391556 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2531 A K _79517' k f dom neut) = (term2532 A K _79517' k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391555 A K x _79517' k f dom neut)). Qed.
Lemma lem6391557 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391558 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2520 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391557 K) (@lem6391556 A K _79517' k f dom neut)). Qed.
Lemma lem6391559 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2519 A K _79517' k f dom neut) = (term2520 A K _79517' k f dom neut)) = ((term2281 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut)).
Proof. exact (MK_COMB (@lem6391550 A K _79517' k f dom neut) (@lem6391558 A K _79517' k f dom neut)). Qed.
Lemma lem6391560 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2281 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut).
Proof. exact (EQ_MP (@lem6391559 A K _79517' k f dom neut) (@lem6391540 A K _79517' k f dom neut)). Qed.
Lemma lem6391561 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2282 A K _79517' k f dom) = (term2534 A K _79517' k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6391560 A K _79517' k f dom neut)). Qed.
Lemma lem6391562 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6391563 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2283 A K _79517' k f dom) = (term2535 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6391562 A) (@lem6391561 A K _79517' k f dom)). Qed.
Lemma lem6391564 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2284 A K _79517' k f) = (term2536 A K _79517' k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6391563 A K _79517' k f dom)). Qed.
Lemma lem6391565 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6391566 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2285 A K _79517' k f) = (term2537 A K _79517' k f).
Proof. exact (MK_COMB (@lem6391565 A) (@lem6391564 A K _79517' k f)). Qed.
Lemma lem6391567 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2286 A K _79517' k) = (term2538 A K _79517' k).
Proof. exact (fun_ext (fun f : K -> A => @lem6391566 A K _79517' k f)). Qed.
Lemma lem6391568 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6391569 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2287 A K _79517' k) = (term2539 A K _79517' k).
Proof. exact (MK_COMB (@lem6391568 A K) (@lem6391567 A K _79517' k)). Qed.
Lemma lem6391570 {A K : Type'} (_79517' : type850 A K) : (term2288 A K _79517') = (term2540 A K _79517').
Proof. exact (fun_ext (fun k : K -> Prop => @lem6391569 A K _79517' k)). Qed.
Lemma lem6391571 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6391572 {A K : Type'} (_79517' : type850 A K) : (term2289 A K _79517') = (term2541 A K _79517').
Proof. exact (MK_COMB (@lem6391571 K) (@lem6391570 A K _79517')). Qed.
Lemma lem6391595 {A K : Type'} (x : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2530 A K x _79517' k f dom neut) = (term2542 A K x _79517' k f dom neut).
Proof. exact (@lem19490 (term2275 A K _79517' f dom neut k) (term2136 A K k f x dom neut) (term2270 A K _79517' k f dom neut)). Qed.
Lemma lem6391596 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2532 A K _79517' k f dom neut) = (term2543 A K _79517' k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391595 A K x _79517' k f dom neut)). Qed.
Lemma lem6391597 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391598 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2533 A K _79517' k f dom neut) = (term2544 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391597 K) (@lem6391596 A K _79517' k f dom neut)). Qed.
Lemma lem6391599 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2534 A K _79517' k f dom) = (term2545 A K _79517' k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6391598 A K _79517' k f dom neut)). Qed.
Lemma lem6391600 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6391601 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2535 A K _79517' k f dom) = (term2546 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6391600 A) (@lem6391599 A K _79517' k f dom)). Qed.
Lemma lem6391602 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2536 A K _79517' k f) = (term2547 A K _79517' k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6391601 A K _79517' k f dom)). Qed.
Lemma lem6391603 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6391604 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2537 A K _79517' k f) = (term2548 A K _79517' k f).
Proof. exact (MK_COMB (@lem6391603 A) (@lem6391602 A K _79517' k f)). Qed.
Lemma lem6391605 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2538 A K _79517' k) = (term2549 A K _79517' k).
Proof. exact (fun_ext (fun f : K -> A => @lem6391604 A K _79517' k f)). Qed.
Lemma lem6391606 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6391607 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2539 A K _79517' k) = (term2550 A K _79517' k).
Proof. exact (MK_COMB (@lem6391606 A K) (@lem6391605 A K _79517' k)). Qed.
Lemma lem6391608 {A K : Type'} (_79517' : type850 A K) : (term2540 A K _79517') = (term2551 A K _79517').
Proof. exact (fun_ext (fun k : K -> Prop => @lem6391607 A K _79517' k)). Qed.
Lemma lem6391609 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6391610 {A K : Type'} (_79517' : type850 A K) : (term2541 A K _79517') = (term2552 A K _79517').
Proof. exact (MK_COMB (@lem6391609 K) (@lem6391608 A K _79517')). Qed.
Lemma lem6391611 {A K : Type'} (_79517' : type850 A K) : (term2289 A K _79517') = (term2552 A K _79517').
Proof. exact (TRANS (@lem6391572 A K _79517') (@lem6391610 A K _79517')). Qed.
Lemma lem6391612 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2552 A K _79517'.
Proof. exact (EQ_MP (@lem6391611 A K _79517') (@lem6390627 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6391919 {K : Type'} (i : K) (k : K -> Prop) (h1 : term2134 K i k) : term2134 K i k.
Proof. exact (h1). Qed.
Lemma lem6391988 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1303 A P Q) = (term1302 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem6391989 {K : Type'} (P : K -> Prop) (Q : Prop) : (term1303 K P Q) = (term1302 K P Q).
Proof. exact (@lem6391988 K P Q). Qed.
Lemma lem6391990 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2519 A K _79517' k f dom neut) = (term2520 A K _79517' k f dom neut).
Proof. exact (@lem6391989 K (term2278 A K k f dom neut) (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6391991 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2521 A K k f dom neut x) = (term2136 A K k f x dom neut).
Proof. exact (eq_refl (term2521 A K k f dom neut x)). Qed.
Lemma lem6391992 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2522 A K k f dom neut) = (term2278 A K k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6391991 A K k f x dom neut)). Qed.
Lemma lem6391993 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6391994 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2523 A K k f dom neut) = (term2279 A K k f dom neut).
Proof. exact (MK_COMB (@lem6391993 K) (@lem6391992 A K k f dom neut)). Qed.
Lemma lem6391995 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6391996 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2524 A K k f dom neut) = (term2280 A K k f dom neut).
Proof. exact (MK_COMB (@lem6391995) (@lem6391994 A K k f dom neut)). Qed.
Lemma lem6391997 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2277 A K _79517' k f dom neut) = (term2277 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6391998 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2519 A K _79517' k f dom neut) = (term2281 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391996 A K k f dom neut) (@lem6391997 A K _79517' k f dom neut)). Qed.
Lemma lem6391999 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6392000 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2525 A K _79517' k f dom neut) = (term2526 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6391999) (@lem6391998 A K _79517' k f dom neut)). Qed.
Lemma lem6392001 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2521 A K k f dom neut x) = (term2136 A K k f x dom neut).
Proof. exact (eq_refl (term2521 A K k f dom neut x)). Qed.
Lemma lem6392002 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6392003 {A K : Type'} (k : K -> Prop) (f : K -> A) (x : K) (dom : A -> Prop) (neut : A) : (term2527 A K k f dom neut x) = (term2528 A K k f x dom neut).
Proof. exact (MK_COMB (@lem6392002) (@lem6392001 A K k f x dom neut)). Qed.
Lemma lem6392004 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2277 A K _79517' k f dom neut) = (term2277 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2277 A K _79517' k f dom neut)). Qed.
Lemma lem6392005 {A K : Type'} (x : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2529 A K x _79517' k f dom neut) = (term2530 A K x _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6392003 A K k f x dom neut) (@lem6392004 A K _79517' k f dom neut)). Qed.
Lemma lem6392006 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2531 A K _79517' k f dom neut) = (term2532 A K _79517' k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6392005 A K x _79517' k f dom neut)). Qed.
Lemma lem6392007 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6392008 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2520 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6392007 K) (@lem6392006 A K _79517' k f dom neut)). Qed.
Lemma lem6392009 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2519 A K _79517' k f dom neut) = (term2520 A K _79517' k f dom neut)) = ((term2281 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut)).
Proof. exact (MK_COMB (@lem6392000 A K _79517' k f dom neut) (@lem6392008 A K _79517' k f dom neut)). Qed.
Lemma lem6392010 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2281 A K _79517' k f dom neut) = (term2533 A K _79517' k f dom neut).
Proof. exact (EQ_MP (@lem6392009 A K _79517' k f dom neut) (@lem6391990 A K _79517' k f dom neut)). Qed.
Lemma lem6392011 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2282 A K _79517' k f dom) = (term2534 A K _79517' k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6392010 A K _79517' k f dom neut)). Qed.
Lemma lem6392012 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6392013 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2283 A K _79517' k f dom) = (term2535 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6392012 A) (@lem6392011 A K _79517' k f dom)). Qed.
Lemma lem6392014 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2284 A K _79517' k f) = (term2536 A K _79517' k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6392013 A K _79517' k f dom)). Qed.
Lemma lem6392015 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6392016 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2285 A K _79517' k f) = (term2537 A K _79517' k f).
Proof. exact (MK_COMB (@lem6392015 A) (@lem6392014 A K _79517' k f)). Qed.
Lemma lem6392017 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2286 A K _79517' k) = (term2538 A K _79517' k).
Proof. exact (fun_ext (fun f : K -> A => @lem6392016 A K _79517' k f)). Qed.
Lemma lem6392018 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6392019 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2287 A K _79517' k) = (term2539 A K _79517' k).
Proof. exact (MK_COMB (@lem6392018 A K) (@lem6392017 A K _79517' k)). Qed.
Lemma lem6392020 {A K : Type'} (_79517' : type850 A K) : (term2288 A K _79517') = (term2540 A K _79517').
Proof. exact (fun_ext (fun k : K -> Prop => @lem6392019 A K _79517' k)). Qed.
Lemma lem6392021 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6392022 {A K : Type'} (_79517' : type850 A K) : (term2289 A K _79517') = (term2541 A K _79517').
Proof. exact (MK_COMB (@lem6392021 K) (@lem6392020 A K _79517')). Qed.
Lemma lem6392045 {A K : Type'} (x : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2530 A K x _79517' k f dom neut) = (term2542 A K x _79517' k f dom neut).
Proof. exact (@lem19490 (term2275 A K _79517' f dom neut k) (term2136 A K k f x dom neut) (term2270 A K _79517' k f dom neut)). Qed.
Lemma lem6392046 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2532 A K _79517' k f dom neut) = (term2543 A K _79517' k f dom neut).
Proof. exact (fun_ext (fun x : K => @lem6392045 A K x _79517' k f dom neut)). Qed.
Lemma lem6392047 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6392048 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2533 A K _79517' k f dom neut) = (term2544 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6392047 K) (@lem6392046 A K _79517' k f dom neut)). Qed.
Lemma lem6392049 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2534 A K _79517' k f dom) = (term2545 A K _79517' k f dom).
Proof. exact (fun_ext (fun neut : A => @lem6392048 A K _79517' k f dom neut)). Qed.
Lemma lem6392050 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6392051 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) : (term2535 A K _79517' k f dom) = (term2546 A K _79517' k f dom).
Proof. exact (MK_COMB (@lem6392050 A) (@lem6392049 A K _79517' k f dom)). Qed.
Lemma lem6392052 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2536 A K _79517' k f) = (term2547 A K _79517' k f).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6392051 A K _79517' k f dom)). Qed.
Lemma lem6392053 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6392054 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) : (term2537 A K _79517' k f) = (term2548 A K _79517' k f).
Proof. exact (MK_COMB (@lem6392053 A) (@lem6392052 A K _79517' k f)). Qed.
Lemma lem6392055 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2538 A K _79517' k) = (term2549 A K _79517' k).
Proof. exact (fun_ext (fun f : K -> A => @lem6392054 A K _79517' k f)). Qed.
Lemma lem6392056 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6392057 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) : (term2539 A K _79517' k) = (term2550 A K _79517' k).
Proof. exact (MK_COMB (@lem6392056 A K) (@lem6392055 A K _79517' k)). Qed.
Lemma lem6392058 {A K : Type'} (_79517' : type850 A K) : (term2540 A K _79517') = (term2551 A K _79517').
Proof. exact (fun_ext (fun k : K -> Prop => @lem6392057 A K _79517' k)). Qed.
Lemma lem6392059 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6392060 {A K : Type'} (_79517' : type850 A K) : (term2541 A K _79517') = (term2552 A K _79517').
Proof. exact (MK_COMB (@lem6392059 K) (@lem6392058 A K _79517')). Qed.
Lemma lem6392061 {A K : Type'} (_79517' : type850 A K) : (term2289 A K _79517') = (term2552 A K _79517').
Proof. exact (TRANS (@lem6392022 A K _79517') (@lem6392060 A K _79517')). Qed.
Lemma lem6392062 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2552 A K _79517'.
Proof. exact (EQ_MP (@lem6392061 A K _79517') (@lem6390627 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392369 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) : term2132 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6392385 {A K : Type'} (_79523 : type1402 K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2553 A K j _79516 _79523.
Proof. exact (@lem6391004 A K i' _79517 j _79516 ltle x k f i dom neut h1 _79523). Qed.
Lemma lem6392386 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) : (term2553 A K j _79516 _79523) = (term2516 A K j _79516 _79523).
Proof. exact (eq_refl (term2553 A K j _79516 _79523)). Qed.
Lemma lem6392387 {A K : Type'} (_79523 : type1402 K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2516 A K j _79516 _79523.
Proof. exact (EQ_MP (@lem6392386 A K j _79516 _79523) (@lem6392385 A K _79523 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392388 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2554 A K j _79516 _79523 _79524.
Proof. exact (@lem6392387 A K _79523 i' _79517 j _79516 ltle x k f i dom neut h1 _79524). Qed.
Lemma lem6392389 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) : (term2554 A K j _79516 _79523 _79524) = (term2514 A K j _79516 _79523 _79524).
Proof. exact (eq_refl (term2554 A K j _79516 _79523 _79524)). Qed.
Lemma lem6392390 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2514 A K j _79516 _79523 _79524.
Proof. exact (EQ_MP (@lem6392389 A K j _79516 _79523 _79524) (@lem6392388 A K _79523 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392391 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2555 A K j _79516 _79523 _79524 _79525.
Proof. exact (@lem6392390 A K _79523 _79524 i' _79517 j _79516 ltle x k f i dom neut h1 _79525). Qed.
Lemma lem6392392 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) : (term2555 A K j _79516 _79523 _79524 _79525) = (term2512 A K j _79516 _79523 _79524 _79525).
Proof. exact (eq_refl (term2555 A K j _79516 _79523 _79524 _79525)). Qed.
Lemma lem6392393 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2512 A K j _79516 _79523 _79524 _79525.
Proof. exact (EQ_MP (@lem6392392 A K j _79516 _79523 _79524 _79525) (@lem6392391 A K _79523 _79524 _79525 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392394 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2556 A K j _79516 _79523 _79524 _79525 _79526.
Proof. exact (@lem6392393 A K _79523 _79524 _79525 i' _79517 j _79516 ltle x k f i dom neut h1 _79526). Qed.
Lemma lem6392395 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) : (term2556 A K j _79516 _79523 _79524 _79525 _79526) = (term2510 A K j _79516 _79523 _79524 _79525 _79526).
Proof. exact (eq_refl (term2556 A K j _79516 _79523 _79524 _79525 _79526)). Qed.
Lemma lem6392396 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2510 A K j _79516 _79523 _79524 _79525 _79526.
Proof. exact (EQ_MP (@lem6392395 A K j _79516 _79523 _79524 _79525 _79526) (@lem6392394 A K _79523 _79524 _79525 _79526 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392397 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2557 A K j _79516 _79523 _79524 _79525 _79526 _79527.
Proof. exact (@lem6392396 A K _79523 _79524 _79525 _79526 i' _79517 j _79516 ltle x k f i dom neut h1 _79527). Qed.
Lemma lem6392398 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) : (term2557 A K j _79516 _79523 _79524 _79525 _79526 _79527) = (term2508 A K j _79516 _79523 _79524 _79525 _79526 _79527).
Proof. exact (eq_refl (term2557 A K j _79516 _79523 _79524 _79525 _79526 _79527)). Qed.
Lemma lem6392399 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2508 A K j _79516 _79523 _79524 _79525 _79526 _79527.
Proof. exact (EQ_MP (@lem6392398 A K j _79516 _79523 _79524 _79525 _79526 _79527) (@lem6392397 A K _79523 _79524 _79525 _79526 _79527 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392400 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2558 A K j _79516 _79523 _79524 _79525 _79526 _79527 _79528.
Proof. exact (@lem6392399 A K _79523 _79524 _79525 _79526 _79527 i' _79517 j _79516 ltle x k f i dom neut h1 _79528). Qed.
Lemma lem6392401 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) : (term2558 A K j _79516 _79523 _79524 _79525 _79526 _79527 _79528) = (term2506 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527).
Proof. exact (eq_refl (term2558 A K j _79516 _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6392402 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2506 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527.
Proof. exact (EQ_MP (@lem6392401 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527) (@lem6392400 A K _79523 _79524 _79525 _79526 _79527 _79528 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392403 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79529 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2559 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527 _79529.
Proof. exact (@lem6392402 A K _79528 _79523 _79524 _79525 _79526 _79527 i' _79517 j _79516 ltle x k f i dom neut h1 _79529). Qed.
Lemma lem6392404 {A K : Type'} (j : type757 A K) (_79528 : K) (_79529 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) : (term2559 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527 _79529) = (term2504 A K j _79528 _79529 _79516 _79523 _79524 _79525 _79526 _79527).
Proof. exact (eq_refl (term2559 A K j _79528 _79516 _79523 _79524 _79525 _79526 _79527 _79529)). Qed.
Lemma lem6392405 {A K : Type'} (_79528 : K) (_79529 : K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2504 A K j _79528 _79529 _79516 _79523 _79524 _79525 _79526 _79527.
Proof. exact (EQ_MP (@lem6392404 A K j _79528 _79529 _79516 _79523 _79524 _79525 _79526 _79527) (@lem6392403 A K _79528 _79523 _79524 _79525 _79526 _79527 _79529 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392406 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2560 A K ltle k f dom neut i' _79530.
Proof. exact (@lem6391049 A K i' _79517 j _79516 ltle x k f i dom neut h1 _79530). Qed.
Lemma lem6392407 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (i' : K) : (term2560 A K ltle k f dom neut i' _79530) = (term2350 A K ltle k f dom neut _79530 i').
Proof. exact (eq_refl (term2560 A K ltle k f dom neut i' _79530)). Qed.
Lemma lem6392408 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2350 A K ltle k f dom neut _79530 i'.
Proof. exact (EQ_MP (@lem6392407 A K ltle k f dom neut _79530 i') (@lem6392406 A K _79530 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392424 {A K : Type'} (_79536 : type1402 K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2553 A K j _79516 _79536.
Proof. exact (@lem6391420 A K i' _79517 j _79516 ltle x k f i dom neut h1 _79536). Qed.
Lemma lem6392425 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) : (term2553 A K j _79516 _79536) = (term2516 A K j _79516 _79536).
Proof. exact (eq_refl (term2553 A K j _79516 _79536)). Qed.
Lemma lem6392426 {A K : Type'} (_79536 : type1402 K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2516 A K j _79516 _79536.
Proof. exact (EQ_MP (@lem6392425 A K j _79516 _79536) (@lem6392424 A K _79536 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392427 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2554 A K j _79516 _79536 _79537.
Proof. exact (@lem6392426 A K _79536 i' _79517 j _79516 ltle x k f i dom neut h1 _79537). Qed.
Lemma lem6392428 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) : (term2554 A K j _79516 _79536 _79537) = (term2514 A K j _79516 _79536 _79537).
Proof. exact (eq_refl (term2554 A K j _79516 _79536 _79537)). Qed.
Lemma lem6392429 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2514 A K j _79516 _79536 _79537.
Proof. exact (EQ_MP (@lem6392428 A K j _79516 _79536 _79537) (@lem6392427 A K _79536 _79537 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392430 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2555 A K j _79516 _79536 _79537 _79538.
Proof. exact (@lem6392429 A K _79536 _79537 i' _79517 j _79516 ltle x k f i dom neut h1 _79538). Qed.
Lemma lem6392431 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) : (term2555 A K j _79516 _79536 _79537 _79538) = (term2512 A K j _79516 _79536 _79537 _79538).
Proof. exact (eq_refl (term2555 A K j _79516 _79536 _79537 _79538)). Qed.
Lemma lem6392432 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2512 A K j _79516 _79536 _79537 _79538.
Proof. exact (EQ_MP (@lem6392431 A K j _79516 _79536 _79537 _79538) (@lem6392430 A K _79536 _79537 _79538 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392433 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2556 A K j _79516 _79536 _79537 _79538 _79539.
Proof. exact (@lem6392432 A K _79536 _79537 _79538 i' _79517 j _79516 ltle x k f i dom neut h1 _79539). Qed.
Lemma lem6392434 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) : (term2556 A K j _79516 _79536 _79537 _79538 _79539) = (term2510 A K j _79516 _79536 _79537 _79538 _79539).
Proof. exact (eq_refl (term2556 A K j _79516 _79536 _79537 _79538 _79539)). Qed.
Lemma lem6392435 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2510 A K j _79516 _79536 _79537 _79538 _79539.
Proof. exact (EQ_MP (@lem6392434 A K j _79516 _79536 _79537 _79538 _79539) (@lem6392433 A K _79536 _79537 _79538 _79539 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392436 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2557 A K j _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (@lem6392435 A K _79536 _79537 _79538 _79539 i' _79517 j _79516 ltle x k f i dom neut h1 _79540). Qed.
Lemma lem6392437 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2557 A K j _79516 _79536 _79537 _79538 _79539 _79540) = (term2508 A K j _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2557 A K j _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6392438 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2508 A K j _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6392437 A K j _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392436 A K _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392439 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2558 A K j _79516 _79536 _79537 _79538 _79539 _79540 _79541.
Proof. exact (@lem6392438 A K _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1 _79541). Qed.
Lemma lem6392440 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2558 A K j _79516 _79536 _79537 _79538 _79539 _79540 _79541) = (term2506 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2558 A K j _79516 _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6392441 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2506 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6392440 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392439 A K _79536 _79537 _79538 _79539 _79540 _79541 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392442 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79542 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2559 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540 _79542.
Proof. exact (@lem6392441 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1 _79542). Qed.
Lemma lem6392443 {A K : Type'} (j : type757 A K) (_79541 : K) (_79542 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2559 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540 _79542) = (term2504 A K j _79541 _79542 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2559 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540 _79542)). Qed.
Lemma lem6392444 {A K : Type'} (_79541 : K) (_79542 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2504 A K j _79541 _79542 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6392443 A K j _79541 _79542 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392442 A K _79541 _79536 _79537 _79538 _79539 _79540 _79542 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392445 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2560 A K ltle k f dom neut i' _79543.
Proof. exact (@lem6391465 A K i' _79517 j _79516 ltle x k f i dom neut h1 _79543). Qed.
Lemma lem6392446 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (i' : K) : (term2560 A K ltle k f dom neut i' _79543) = (term2350 A K ltle k f dom neut _79543 i').
Proof. exact (eq_refl (term2560 A K ltle k f dom neut i' _79543)). Qed.
Lemma lem6392447 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2350 A K ltle k f dom neut _79543 i'.
Proof. exact (EQ_MP (@lem6392446 A K ltle k f dom neut _79543 i') (@lem6392445 A K _79543 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392451 {A K : Type'} (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2561 A K _79517' _79545.
Proof. exact (@lem6391612 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79545). Qed.
Lemma lem6392452 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) : (term2561 A K _79517' _79545) = (term2550 A K _79517' _79545).
Proof. exact (eq_refl (term2561 A K _79517' _79545)). Qed.
Lemma lem6392453 {A K : Type'} (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2550 A K _79517' _79545.
Proof. exact (EQ_MP (@lem6392452 A K _79517' _79545) (@lem6392451 A K _79545 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392454 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2562 A K _79517' _79545 _79546.
Proof. exact (@lem6392453 A K _79545 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79546). Qed.
Lemma lem6392455 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) : (term2562 A K _79517' _79545 _79546) = (term2548 A K _79517' _79545 _79546).
Proof. exact (eq_refl (term2562 A K _79517' _79545 _79546)). Qed.
Lemma lem6392456 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2548 A K _79517' _79545 _79546.
Proof. exact (EQ_MP (@lem6392455 A K _79517' _79545 _79546) (@lem6392454 A K _79545 _79546 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392457 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2563 A K _79517' _79545 _79546 _79547.
Proof. exact (@lem6392456 A K _79545 _79546 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79547). Qed.
Lemma lem6392458 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) : (term2563 A K _79517' _79545 _79546 _79547) = (term2546 A K _79517' _79545 _79546 _79547).
Proof. exact (eq_refl (term2563 A K _79517' _79545 _79546 _79547)). Qed.
Lemma lem6392459 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2546 A K _79517' _79545 _79546 _79547.
Proof. exact (EQ_MP (@lem6392458 A K _79517' _79545 _79546 _79547) (@lem6392457 A K _79545 _79546 _79547 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392460 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2564 A K _79517' _79545 _79546 _79547 _79548.
Proof. exact (@lem6392459 A K _79545 _79546 _79547 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79548). Qed.
Lemma lem6392461 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) : (term2564 A K _79517' _79545 _79546 _79547 _79548) = (term2544 A K _79517' _79545 _79546 _79547 _79548).
Proof. exact (eq_refl (term2564 A K _79517' _79545 _79546 _79547 _79548)). Qed.
Lemma lem6392462 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2544 A K _79517' _79545 _79546 _79547 _79548.
Proof. exact (EQ_MP (@lem6392461 A K _79517' _79545 _79546 _79547 _79548) (@lem6392460 A K _79545 _79546 _79547 _79548 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392463 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2565 A K _79517' _79545 _79546 _79547 _79548 _79549.
Proof. exact (@lem6392462 A K _79545 _79546 _79547 _79548 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79549). Qed.
Lemma lem6392464 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) : (term2565 A K _79517' _79545 _79546 _79547 _79548 _79549) = (term2542 A K _79549 _79517' _79545 _79546 _79547 _79548).
Proof. exact (eq_refl (term2565 A K _79517' _79545 _79546 _79547 _79548 _79549)). Qed.
Lemma lem6392465 {A K : Type'} (_79549 : K) (_79545 : K -> Prop) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2542 A K _79549 _79517' _79545 _79546 _79547 _79548.
Proof. exact (EQ_MP (@lem6392464 A K _79549 _79517' _79545 _79546 _79547 _79548) (@lem6392463 A K _79545 _79546 _79547 _79548 _79549 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392490 {A K : Type'} (_79558 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2561 A K _79517' _79558.
Proof. exact (@lem6392062 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79558). Qed.
Lemma lem6392491 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) : (term2561 A K _79517' _79558) = (term2550 A K _79517' _79558).
Proof. exact (eq_refl (term2561 A K _79517' _79558)). Qed.
Lemma lem6392492 {A K : Type'} (_79558 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2550 A K _79517' _79558.
Proof. exact (EQ_MP (@lem6392491 A K _79517' _79558) (@lem6392490 A K _79558 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392493 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2562 A K _79517' _79558 _79559.
Proof. exact (@lem6392492 A K _79558 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79559). Qed.
Lemma lem6392494 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) : (term2562 A K _79517' _79558 _79559) = (term2548 A K _79517' _79558 _79559).
Proof. exact (eq_refl (term2562 A K _79517' _79558 _79559)). Qed.
Lemma lem6392495 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2548 A K _79517' _79558 _79559.
Proof. exact (EQ_MP (@lem6392494 A K _79517' _79558 _79559) (@lem6392493 A K _79558 _79559 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392496 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2563 A K _79517' _79558 _79559 _79560.
Proof. exact (@lem6392495 A K _79558 _79559 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79560). Qed.
Lemma lem6392497 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) : (term2563 A K _79517' _79558 _79559 _79560) = (term2546 A K _79517' _79558 _79559 _79560).
Proof. exact (eq_refl (term2563 A K _79517' _79558 _79559 _79560)). Qed.
Lemma lem6392498 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2546 A K _79517' _79558 _79559 _79560.
Proof. exact (EQ_MP (@lem6392497 A K _79517' _79558 _79559 _79560) (@lem6392496 A K _79558 _79559 _79560 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392499 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2564 A K _79517' _79558 _79559 _79560 _79561.
Proof. exact (@lem6392498 A K _79558 _79559 _79560 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79561). Qed.
Lemma lem6392500 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2564 A K _79517' _79558 _79559 _79560 _79561) = (term2544 A K _79517' _79558 _79559 _79560 _79561).
Proof. exact (eq_refl (term2564 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6392501 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2544 A K _79517' _79558 _79559 _79560 _79561.
Proof. exact (EQ_MP (@lem6392500 A K _79517' _79558 _79559 _79560 _79561) (@lem6392499 A K _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392502 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2565 A K _79517' _79558 _79559 _79560 _79561 _79562.
Proof. exact (@lem6392501 A K _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1 _79562). Qed.
Lemma lem6392503 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2565 A K _79517' _79558 _79559 _79560 _79561 _79562) = (term2542 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (eq_refl (term2565 A K _79517' _79558 _79559 _79560 _79561 _79562)). Qed.
Lemma lem6392504 {A K : Type'} (_79562 : K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2542 A K _79562 _79517' _79558 _79559 _79560 _79561.
Proof. exact (EQ_MP (@lem6392503 A K _79562 _79517' _79558 _79559 _79560 _79561) (@lem6392502 A K _79558 _79559 _79560 _79561 _79562 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392527 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2501 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj1 (@lem6392405 A K _79528 (@el K) _79523 _79524 _79525 _79526 _79527 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392542 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2492 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj2 (@lem6392527 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392543 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2498 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj1 (@lem6392527 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392544 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2496 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj2 (@lem6392543 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392545 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2566 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj1 (@lem6392543 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392546 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2567 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj2 (@lem6392544 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392547 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2568 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (proj1 (@lem6392544 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392550 {A K : Type'} (_79541 : K) (_79542 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2489 A K j _79541 _79542 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj2 (@lem6392444 A K _79541 _79542 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392553 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2486 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj1 (@lem6392550 A K _79541 (@el K) _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392560 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2477 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj2 (@lem6392553 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392561 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2483 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj1 (@lem6392553 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392562 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2481 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj2 (@lem6392561 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392563 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2569 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj1 (@lem6392561 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392564 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2570 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj2 (@lem6392562 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392565 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2571 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (proj1 (@lem6392562 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392597 {A K : Type'} (_79549 : K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2572 A K _79549 _79517' _79546 _79547 _79548 _79545.
Proof. exact (proj1 (@lem6392465 A K _79549 _79545 _79546 _79547 _79548 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392626 {A K : Type'} (_79562 : K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2573 A K _79562 _79517' _79558 _79559 _79560 _79561.
Proof. exact (proj2 (@lem6392504 A K _79562 _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6392635 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2155 A K _79516 ltle k f dom neut) = i.
Proof. exact (proj1 (@lem6390610 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392647 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (i' : K) : (term2350 A K ltle k f dom neut _79530 i') = (term2574 A K ltle k f dom neut _79530 i').
Proof. exact (@lem6377859 (term2346 K ltle _79530 i') (term2136 A K k f _79530 dom neut) (_79530 = i')). Qed.
Lemma lem6392654 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (i' : K) : (term2575 A K k f dom neut _79530 i') = (term2576 A K k f dom neut _79530 i').
Proof. exact (@lem6377859 (term2134 K _79530 k) (term2132 A K f _79530 dom neut) (_79530 = i')). Qed.
Lemma lem6392655 {K : Type'} (ltle : type1402 K) (_79530 : K) (i' : K) : (term2347 K ltle _79530 i') = (term2347 K ltle _79530 i').
Proof. exact (eq_refl (term2347 K ltle _79530 i')). Qed.
Lemma lem6392658 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (i' : K) : (term2574 A K ltle k f dom neut _79530 i') = (term2577 A K ltle k f dom neut _79530 i').
Proof. exact (MK_COMB (@lem6392655 K ltle _79530 i') (@lem6392654 A K k f dom neut _79530 i')). Qed.
Lemma lem6392660 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (i' : K) : (term2350 A K ltle k f dom neut _79530 i') = (term2577 A K ltle k f dom neut _79530 i').
Proof. exact (TRANS (@lem6392647 A K ltle k f dom neut _79530 i') (@lem6392658 A K ltle k f dom neut _79530 i')). Qed.
Lemma lem6392663 {K : Type'} (i : K) (k : K -> Prop) (h1 : term2134 K i k) : term2134 K i k.
Proof. exact (h1). Qed.
Lemma lem6392875 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2492 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2578 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2134 K _79528 _79524) (term2430 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392882 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2579 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2580 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2132 A K _79525 _79528 _79526 _79527) (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392883 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2135 K _79528 _79524) = (term2135 K _79528 _79524).
Proof. exact (eq_refl (term2135 K _79528 _79524)). Qed.
Lemma lem6392886 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2578 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6392883 K _79528 _79524) (@lem6392882 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392888 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2492 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6392875 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392886 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392893 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2566 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2582 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2134 K _79528 _79524) (term2445 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392900 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2583 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2584 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2132 A K _79525 _79528 _79526 _79527) (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392901 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2135 K _79528 _79524) = (term2135 K _79528 _79524).
Proof. exact (eq_refl (term2135 K _79528 _79524)). Qed.
Lemma lem6392904 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2582 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6392901 K _79528 _79524) (@lem6392900 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392906 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2566 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6392893 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392904 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392911 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2568 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2586 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2134 K _79528 _79524) (term2448 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392918 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2587 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2588 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2132 A K _79525 _79528 _79526 _79527) (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392919 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2135 K _79528 _79524) = (term2135 K _79528 _79524).
Proof. exact (eq_refl (term2135 K _79528 _79524)). Qed.
Lemma lem6392922 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2586 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6392919 K _79528 _79524) (@lem6392918 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392924 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2568 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6392911 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392922 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392929 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2567 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2590 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2134 K _79528 _79524) (term2449 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392936 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2591 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2592 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6377859 (term2132 A K _79525 _79528 _79526 _79527) (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392937 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2135 K _79528 _79524) = (term2135 K _79528 _79524).
Proof. exact (eq_refl (term2135 K _79528 _79524)). Qed.
Lemma lem6392940 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2590 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6392937 K _79528 _79524) (@lem6392936 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392942 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2567 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6392929 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392940 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6392969 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2155 A K _79516 ltle k f dom neut) = i.
Proof. exact (proj1 (@lem6390610 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6392981 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (i' : K) : (term2350 A K ltle k f dom neut _79543 i') = (term2574 A K ltle k f dom neut _79543 i').
Proof. exact (@lem6377859 (term2346 K ltle _79543 i') (term2136 A K k f _79543 dom neut) (_79543 = i')). Qed.
Lemma lem6392988 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (i' : K) : (term2575 A K k f dom neut _79543 i') = (term2576 A K k f dom neut _79543 i').
Proof. exact (@lem6377859 (term2134 K _79543 k) (term2132 A K f _79543 dom neut) (_79543 = i')). Qed.
Lemma lem6392989 {K : Type'} (ltle : type1402 K) (_79543 : K) (i' : K) : (term2347 K ltle _79543 i') = (term2347 K ltle _79543 i').
Proof. exact (eq_refl (term2347 K ltle _79543 i')). Qed.
Lemma lem6392992 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (i' : K) : (term2574 A K ltle k f dom neut _79543 i') = (term2577 A K ltle k f dom neut _79543 i').
Proof. exact (MK_COMB (@lem6392989 K ltle _79543 i') (@lem6392988 A K k f dom neut _79543 i')). Qed.
Lemma lem6392994 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (i' : K) : (term2350 A K ltle k f dom neut _79543 i') = (term2577 A K ltle k f dom neut _79543 i').
Proof. exact (TRANS (@lem6392981 A K ltle k f dom neut _79543 i') (@lem6392992 A K ltle k f dom neut _79543 i')). Qed.
Lemma lem6392997 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) : term2132 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6393137 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2477 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2594 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2134 K _79541 _79537) (term2430 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393144 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2595 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2596 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2132 A K _79538 _79541 _79539 _79540) (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393145 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2135 K _79541 _79537) = (term2135 K _79541 _79537).
Proof. exact (eq_refl (term2135 K _79541 _79537)). Qed.
Lemma lem6393148 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2594 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6393145 K _79541 _79537) (@lem6393144 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393150 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2477 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6393137 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6393148 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393155 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2569 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2598 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2134 K _79541 _79537) (term2445 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393162 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2599 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2600 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2132 A K _79538 _79541 _79539 _79540) (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393163 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2135 K _79541 _79537) = (term2135 K _79541 _79537).
Proof. exact (eq_refl (term2135 K _79541 _79537)). Qed.
Lemma lem6393166 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2598 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6393163 K _79541 _79537) (@lem6393162 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393168 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2569 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6393155 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6393166 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393173 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2571 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2602 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2134 K _79541 _79537) (term2448 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393180 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2603 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2604 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2132 A K _79538 _79541 _79539 _79540) (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393181 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2135 K _79541 _79537) = (term2135 K _79541 _79537).
Proof. exact (eq_refl (term2135 K _79541 _79537)). Qed.
Lemma lem6393184 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2602 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6393181 K _79541 _79537) (@lem6393180 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393186 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2571 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6393173 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6393184 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393191 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2570 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2606 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2134 K _79541 _79537) (term2449 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393198 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2607 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2608 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6377859 (term2132 A K _79538 _79541 _79539 _79540) (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393199 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2135 K _79541 _79537) = (term2135 K _79541 _79537).
Proof. exact (eq_refl (term2135 K _79541 _79537)). Qed.
Lemma lem6393202 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2606 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6393199 K _79541 _79537) (@lem6393198 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393204 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2570 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6393191 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6393202 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6393303 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2145 A K _79517' k f dom neut) = i.
Proof. exact (proj1 (@lem6390628 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6393309 {K : Type'} (i : K) (k : K -> Prop) (h1 : term2134 K i k) : term2134 K i k.
Proof. exact (h1). Qed.
Lemma lem6393600 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2572 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2610 A K _79549 _79517' _79546 _79547 _79548 _79545).
Proof. exact (@lem6377859 (term2134 K _79549 _79545) (term2132 A K _79546 _79549 _79547 _79548) (term2275 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6393655 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2145 A K _79517' k f dom neut) = i.
Proof. exact (proj1 (@lem6390628 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6393661 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) : term2132 A K f i dom neut.
Proof. exact (h1). Qed.
Lemma lem6393964 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2573 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2611 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (@lem6377859 (term2134 K _79562 _79558) (term2132 A K _79559 _79562 _79560 _79561) (term2270 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6394006 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : i = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (SYM (@lem6392635 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394090 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2577 A K ltle k f dom neut _79530 i'.
Proof. exact (EQ_MP (@lem6392660 A K ltle k f dom neut _79530 i') (@lem6392408 A K _79530 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394091 {K : Type'} (k : K -> Prop) : (term2612 K k) = (term2612 K k).
Proof. exact (eq_refl (term2612 K k)). Qed.
Lemma lem6394092 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2613 K k i) = (term2614 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6394091 K k) (@lem6394006 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394093 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2614 A K _79516 ltle k f dom neut) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2614 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6394094 {K : Type'} (k : K -> Prop) (i : K) : (term2616 K k i) = (term2616 K k i).
Proof. exact (eq_refl (term2616 K k i)). Qed.
Lemma lem6394095 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2614 A K _79516 ltle k f dom neut)) = ((term2613 K k i) = (term2615 A K _79516 ltle f dom neut k)).
Proof. exact (MK_COMB (@lem6394094 K k i) (@lem6394093 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6394096 {K : Type'} (i : K) (k : K -> Prop) : (term2613 K k i) = (term2134 K i k).
Proof. exact (eq_refl (term2613 K k i)). Qed.
Lemma lem6394097 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6394098 {K : Type'} (i : K) (k : K -> Prop) : (term2616 K k i) = (term2617 K i k).
Proof. exact (MK_COMB (@lem6394097) (@lem6394096 K i k)). Qed.
Lemma lem6394099 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2615 A K _79516 ltle f dom neut k) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (eq_refl (term2615 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6394100 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2615 A K _79516 ltle f dom neut k)) = ((term2134 K i k) = (term2615 A K _79516 ltle f dom neut k)).
Proof. exact (MK_COMB (@lem6394098 K i k) (@lem6394099 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6394101 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2614 A K _79516 ltle k f dom neut)) = ((term2134 K i k) = (term2615 A K _79516 ltle f dom neut k)).
Proof. exact (TRANS (@lem6394095 A K i _79516 ltle f dom neut k) (@lem6394100 A K i _79516 ltle f dom neut k)). Qed.
Lemma lem6394102 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2134 K i k) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (EQ_MP (@lem6394101 A K i _79516 ltle f dom neut k) (@lem6394092 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394103 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6394102 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6392663 K i k h1)). Qed.
Lemma lem6394229 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6392888 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392542 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394243 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6392906 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392545 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394257 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6392924 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392547 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394271 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6392942 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6392546 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394300 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : i = (term2155 A K _79516 ltle k f dom neut).
Proof. exact (SYM (@lem6392969 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394384 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2577 A K ltle k f dom neut _79543 i'.
Proof. exact (EQ_MP (@lem6392994 A K ltle k f dom neut _79543 i') (@lem6392447 A K _79543 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394385 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term2618 A K f dom neut) = (term2618 A K f dom neut).
Proof. exact (eq_refl (term2618 A K f dom neut)). Qed.
Lemma lem6394386 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2619 A K f dom neut i) = (term2620 A K _79516 ltle k f dom neut).
Proof. exact (MK_COMB (@lem6394385 A K f dom neut) (@lem6394300 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394387 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2620 A K _79516 ltle k f dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2620 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6394388 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2622 A K f dom neut i) = (term2622 A K f dom neut i).
Proof. exact (eq_refl (term2622 A K f dom neut i)). Qed.
Lemma lem6394389 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2620 A K _79516 ltle k f dom neut)) = ((term2619 A K f dom neut i) = (term2621 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6394388 A K f dom neut i) (@lem6394387 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6394390 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2619 A K f dom neut i) = (term2132 A K f i dom neut).
Proof. exact (eq_refl (term2619 A K f dom neut i)). Qed.
Lemma lem6394391 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6394392 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2622 A K f dom neut i) = (term2623 A K f i dom neut).
Proof. exact (MK_COMB (@lem6394391) (@lem6394390 A K f i dom neut)). Qed.
Lemma lem6394393 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2621 A K _79516 ltle k f dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (eq_refl (term2621 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6394394 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2621 A K _79516 ltle k f dom neut)) = ((term2132 A K f i dom neut) = (term2621 A K _79516 ltle k f dom neut)).
Proof. exact (MK_COMB (@lem6394392 A K f i dom neut) (@lem6394393 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6394395 {A K : Type'} (i : K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2620 A K _79516 ltle k f dom neut)) = ((term2132 A K f i dom neut) = (term2621 A K _79516 ltle k f dom neut)).
Proof. exact (TRANS (@lem6394389 A K i _79516 ltle k f dom neut) (@lem6394394 A K i _79516 ltle k f dom neut)). Qed.
Lemma lem6394396 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2132 A K f i dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (EQ_MP (@lem6394395 A K i _79516 ltle k f dom neut) (@lem6394386 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394397 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6394396 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6392997 A K f i dom neut h1)). Qed.
Lemma lem6394467 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6393150 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392560 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394481 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6393168 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392563 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394495 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6393186 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392565 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394509 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6393204 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6392564 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6394594 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : i = (term2145 A K _79517' k f dom neut).
Proof. exact (SYM (@lem6393303 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394637 {K : Type'} (k : K -> Prop) : (term2612 K k) = (term2612 K k).
Proof. exact (eq_refl (term2612 K k)). Qed.
Lemma lem6394638 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2613 K k i) = (term2624 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6394637 K k) (@lem6394594 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394639 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2624 A K _79517' k f dom neut) = (term2625 A K _79517' f dom neut k).
Proof. exact (eq_refl (term2624 A K _79517' k f dom neut)). Qed.
Lemma lem6394640 {K : Type'} (k : K -> Prop) (i : K) : (term2616 K k i) = (term2616 K k i).
Proof. exact (eq_refl (term2616 K k i)). Qed.
Lemma lem6394641 {A K : Type'} (i : K) (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2624 A K _79517' k f dom neut)) = ((term2613 K k i) = (term2625 A K _79517' f dom neut k)).
Proof. exact (MK_COMB (@lem6394640 K k i) (@lem6394639 A K _79517' f dom neut k)). Qed.
Lemma lem6394642 {K : Type'} (i : K) (k : K -> Prop) : (term2613 K k i) = (term2134 K i k).
Proof. exact (eq_refl (term2613 K k i)). Qed.
Lemma lem6394643 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6394644 {K : Type'} (i : K) (k : K -> Prop) : (term2616 K k i) = (term2617 K i k).
Proof. exact (MK_COMB (@lem6394643) (@lem6394642 K i k)). Qed.
Lemma lem6394645 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2625 A K _79517' f dom neut k) = (term2625 A K _79517' f dom neut k).
Proof. exact (eq_refl (term2625 A K _79517' f dom neut k)). Qed.
Lemma lem6394646 {A K : Type'} (i : K) (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2625 A K _79517' f dom neut k)) = ((term2134 K i k) = (term2625 A K _79517' f dom neut k)).
Proof. exact (MK_COMB (@lem6394644 K i k) (@lem6394645 A K _79517' f dom neut k)). Qed.
Lemma lem6394647 {A K : Type'} (i : K) (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : ((term2613 K k i) = (term2624 A K _79517' k f dom neut)) = ((term2134 K i k) = (term2625 A K _79517' f dom neut k)).
Proof. exact (TRANS (@lem6394641 A K i _79517' f dom neut k) (@lem6394646 A K i _79517' f dom neut k)). Qed.
Lemma lem6394648 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2134 K i k) = (term2625 A K _79517' f dom neut k).
Proof. exact (EQ_MP (@lem6394647 A K i _79517' f dom neut k) (@lem6394638 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394649 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2625 A K _79517' f dom neut k.
Proof. exact (EQ_MP (@lem6394648 A K ltle j' j'' _79516' _79517' x' k f i dom neut h2) (@lem6393309 K i k h1)). Qed.
Lemma lem6394831 {A K : Type'} (_79549 : K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2610 A K _79549 _79517' _79546 _79547 _79548 _79545.
Proof. exact (EQ_MP (@lem6393600 A K _79549 _79517' _79546 _79547 _79548 _79545) (@lem6392597 A K _79549 _79546 _79547 _79548 _79545 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394902 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : i = (term2145 A K _79517' k f dom neut).
Proof. exact (SYM (@lem6393655 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394945 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) : (term2618 A K f dom neut) = (term2618 A K f dom neut).
Proof. exact (eq_refl (term2618 A K f dom neut)). Qed.
Lemma lem6394946 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2619 A K f dom neut i) = (term2626 A K _79517' k f dom neut).
Proof. exact (MK_COMB (@lem6394945 A K f dom neut) (@lem6394902 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394947 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2626 A K _79517' k f dom neut) = (term2627 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2626 A K _79517' k f dom neut)). Qed.
Lemma lem6394948 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term2622 A K f dom neut i) = (term2622 A K f dom neut i).
Proof. exact (eq_refl (term2622 A K f dom neut i)). Qed.
Lemma lem6394949 {A K : Type'} (i : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2626 A K _79517' k f dom neut)) = ((term2619 A K f dom neut i) = (term2627 A K _79517' k f dom neut)).
Proof. exact (MK_COMB (@lem6394948 A K f dom neut i) (@lem6394947 A K _79517' k f dom neut)). Qed.
Lemma lem6394950 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2619 A K f dom neut i) = (term2132 A K f i dom neut).
Proof. exact (eq_refl (term2619 A K f dom neut i)). Qed.
Lemma lem6394951 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6394952 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2622 A K f dom neut i) = (term2623 A K f i dom neut).
Proof. exact (MK_COMB (@lem6394951) (@lem6394950 A K f i dom neut)). Qed.
Lemma lem6394953 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2627 A K _79517' k f dom neut) = (term2627 A K _79517' k f dom neut).
Proof. exact (eq_refl (term2627 A K _79517' k f dom neut)). Qed.
Lemma lem6394954 {A K : Type'} (i : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2627 A K _79517' k f dom neut)) = ((term2132 A K f i dom neut) = (term2627 A K _79517' k f dom neut)).
Proof. exact (MK_COMB (@lem6394952 A K f i dom neut) (@lem6394953 A K _79517' k f dom neut)). Qed.
Lemma lem6394955 {A K : Type'} (i : K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term2619 A K f dom neut i) = (term2626 A K _79517' k f dom neut)) = ((term2132 A K f i dom neut) = (term2627 A K _79517' k f dom neut)).
Proof. exact (TRANS (@lem6394949 A K i _79517' k f dom neut) (@lem6394954 A K i _79517' k f dom neut)). Qed.
Lemma lem6394956 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2132 A K f i dom neut) = (term2627 A K _79517' k f dom neut).
Proof. exact (EQ_MP (@lem6394955 A K i _79517' k f dom neut) (@lem6394946 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6394957 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2627 A K _79517' k f dom neut.
Proof. exact (EQ_MP (@lem6394956 A K ltle j' j'' _79516' _79517' x' k f i dom neut h2) (@lem6393661 A K f i dom neut h1)). Qed.
Lemma lem6395153 {A K : Type'} (_79562 : K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2611 A K _79562 _79517' _79558 _79559 _79560 _79561.
Proof. exact (EQ_MP (@lem6393964 A K _79562 _79517' _79558 _79559 _79560 _79561) (@lem6392626 A K _79562 _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6395586 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395587 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6395586 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395589 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395590 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6395589 (term2133 K i' k)). Qed.
Lemma lem6395591 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6395590 K i' k) (@lem6395587 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395593 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395594 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6395593 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395596 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395597 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6395596 (term2131 A K f i' dom neut)). Qed.
Lemma lem6395598 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6395597 A K f i' dom neut) (@lem6395594 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395600 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395601 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6395600 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395603 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395604 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6395603 (term2133 K i' k)). Qed.
Lemma lem6395605 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6395604 K i' k) (@lem6395601 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395607 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395608 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6395607 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395610 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395611 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6395610 (term2131 A K f i' dom neut)). Qed.
Lemma lem6395612 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6395611 A K f i' dom neut) (@lem6395608 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395615 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (h1). Qed.
Lemma lem6395616 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2630 A K _79516 ltle f dom neut k.
Proof. exact (fun h0 : term2180 A K _79516 ltle f dom neut k => @lem6395615 A K _79516 ltle f dom neut k h1). Qed.
Lemma lem6395618 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6395619 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2630 A K _79516 ltle f dom neut k) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (@lem6395618 (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6395620 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6395619 A K _79516 ltle f dom neut k) (@lem6395616 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6395626 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395627 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2632 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395626 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2633 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395641 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395642 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2634 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2635 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395641 (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395656 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6395657 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395656 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6395663 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395664 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2635 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2639 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395663 A K j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6395657 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395675 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2634 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2639 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395642 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395664 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395676 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6395677 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2632 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2640 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395676 A K _79525 _79528 _79526 _79527) (@lem6395675 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395681 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395682 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2640 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2641 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395681 (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2132 A K _79525 _79528 _79526 _79527) (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395696 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395697 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395696 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6395713 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395714 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2641 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395713 A K j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6395697 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395725 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2640 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395682 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395714 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395726 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2632 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395677 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395725 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395727 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395627 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395726 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395728 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6395729 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2645 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2646 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395728) (@lem6395727 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395743 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395744 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395743 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395758 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6395759 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395758 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6395765 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6395766 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395765 A K _79525 _79528 _79526 _79527) (@lem6395759 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395770 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395771 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395770 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6395787 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395766 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395771 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395788 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395744 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395787 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395789 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2638 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395790 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395789 A K j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6395788 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395801 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = ((term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)).
Proof. exact (MK_COMB (@lem6395729 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395790 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395803 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6395804 (x : Prop) : (x = x) = True.
Proof. exact (@lem6395803 Prop x). Qed.
Lemma lem6395805 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)) = True.
Proof. exact (@lem6395804 (term2644 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395806 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : ((term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = True.
Proof. exact (TRANS (@lem6395801 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395805 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395807 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : True = ((term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)).
Proof. exact (SYM (@lem6395806 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395808 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2585 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (EQ_MP (@lem6395807 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem0)). Qed.
Lemma lem6395809 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6395808 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6394243 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395811 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6395812 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2651 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (@lem6395811 (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395814 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6395815 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395814 (term2134 K _79528 _79524) (term2656 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395817 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6395818 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2657 K _79528 _79524) = (term2133 K _79528 _79524).
Proof. exact (@lem6395817 (term2133 K _79528 _79524)). Qed.
Lemma lem6395819 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6395820 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2658 K _79528 _79524) = (term2137 K _79528 _79524).
Proof. exact (MK_COMB (@lem6395819) (@lem6395818 K _79528 _79524)). Qed.
Lemma lem6395822 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6395823 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395822 (term2132 A K _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395825 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6395826 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2661 A K _79525 _79528 _79526 _79527) = (term2131 A K _79525 _79528 _79526 _79527).
Proof. exact (@lem6395825 (term2131 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6395827 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6395828 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2662 A K _79525 _79528 _79526 _79527) = (term2353 A K _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6395827) (@lem6395826 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6395829 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395830 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6395828 A K _79525 _79528 _79526 _79527) (@lem6395829 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395831 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6395823 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395830 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395832 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6395820 K _79528 _79524) (@lem6395831 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395833 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6395815 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395832 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395834 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6395835 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2665 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2666 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6395834) (@lem6395833 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395836 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2223 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395837 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2651 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) = (term2667 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (MK_COMB (@lem6395835 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395836 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395838 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2649 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2667 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (TRANS (@lem6395812 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6395837 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6395840 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2663 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6395612 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6395620 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6395841 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2664 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6395605 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6395840 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6395843 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2667 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528.
Proof. exact (EQ_MP (@lem6395838 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6395809 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395844 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2667 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528.
Proof. exact (@lem6395843 A K _79523 _79524 _79525 _79526 _79527 _79528 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395845 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2667 A K _79516 j ltle k f dom neut i'.
Proof. exact (@lem6395844 A K ltle k f dom neut i' i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395848 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2223 A K j ltle k f dom neut i'.
Proof. exact (@lem6395845 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6395841 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6395849 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2668 A K j ltle k f dom neut i'.
Proof. exact (fun h0 : term2669 A K j ltle k f dom neut i' => @lem6395848 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6395851 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395852 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2668 A K j ltle k f dom neut i') = (term2223 A K j ltle k f dom neut i').
Proof. exact (@lem6395851 (term2223 A K j ltle k f dom neut i')). Qed.
Lemma lem6395853 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2223 A K j ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6395852 A K j ltle k f dom neut i') (@lem6395849 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6395855 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395856 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6395855 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395858 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395859 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6395858 (term2133 K i' k)). Qed.
Lemma lem6395860 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6395859 K i' k) (@lem6395856 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395862 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395863 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6395862 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6395865 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6395866 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6395865 (term2131 A K f i' dom neut)). Qed.
Lemma lem6395867 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6395866 A K f i' dom neut) (@lem6395863 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6395870 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (h1). Qed.
Lemma lem6395871 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2630 A K _79516 ltle f dom neut k.
Proof. exact (fun h0 : term2180 A K _79516 ltle f dom neut k => @lem6395870 A K _79516 ltle f dom neut k h1). Qed.
Lemma lem6395873 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6395874 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2630 A K _79516 ltle f dom neut k) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (@lem6395873 (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6395875 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6395874 A K _79516 ltle f dom neut k) (@lem6395871 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6395881 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395882 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2670 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395881 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2671 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395896 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395897 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2672 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2673 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6395896 (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395911 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6395912 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395911 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6395918 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (eq_refl (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395919 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2673 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2675 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395918 A K j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395912 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395923 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395924 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2675 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2676 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395923 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6395940 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2673 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2676 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395919 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395924 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395941 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2672 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2676 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395897 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395940 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395942 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6395943 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2670 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2677 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395942 A K _79525 _79528 _79526 _79527) (@lem6395941 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395947 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395948 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2677 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2678 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395947 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2679 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395962 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6395963 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2680 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2681 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6395962 (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6395979 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6395980 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2678 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395979 A K _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395963 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395991 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2677 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395948 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395980 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395992 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2670 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395943 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6395991 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395993 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6395882 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6395992 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6395994 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6395995 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2684 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2685 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6395994) (@lem6395993 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396009 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396010 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396009 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396024 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396025 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396024 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6396031 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396032 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396031 A K _79525 _79528 _79526 _79527) (@lem6396025 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396036 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396037 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396036 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396053 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396032 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396037 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396054 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396010 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396053 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396055 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (eq_refl (term2674 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396056 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2687 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396055 A K j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396054 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396060 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396061 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2687 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396060 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) (term2688 A K _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396087 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396056 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396061 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396088 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = ((term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)).
Proof. exact (MK_COMB (@lem6395995 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396087 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396090 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6396091 (x : Prop) : (x = x) = True.
Proof. exact (@lem6396090 Prop x). Qed.
Lemma lem6396092 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)) = True.
Proof. exact (@lem6396091 (term2683 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396093 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : ((term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = True.
Proof. exact (TRANS (@lem6396088 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396092 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396094 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : True = ((term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)).
Proof. exact (SYM (@lem6396093 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396095 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2589 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (EQ_MP (@lem6396094 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem0)). Qed.
Lemma lem6396096 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6396095 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6394257 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396098 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6396099 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2689 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396098 (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396101 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396102 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396101 (term2134 K _79528 _79524) (term2656 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396104 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396105 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2657 K _79528 _79524) = (term2133 K _79528 _79524).
Proof. exact (@lem6396104 (term2133 K _79528 _79524)). Qed.
Lemma lem6396106 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396107 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2658 K _79528 _79524) = (term2137 K _79528 _79524).
Proof. exact (MK_COMB (@lem6396106) (@lem6396105 K _79528 _79524)). Qed.
Lemma lem6396109 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396110 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396109 (term2132 A K _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396112 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396113 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2661 A K _79525 _79528 _79526 _79527) = (term2131 A K _79525 _79528 _79526 _79527).
Proof. exact (@lem6396112 (term2131 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396115 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2662 A K _79525 _79528 _79526 _79527) = (term2353 A K _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396114) (@lem6396113 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396116 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396117 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396115 A K _79525 _79528 _79526 _79527) (@lem6396116 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396118 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6396110 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396117 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396119 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396107 K _79528 _79524) (@lem6396118 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396120 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6396102 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396119 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396121 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6396122 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2665 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2666 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396121) (@lem6396120 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396123 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (eq_refl (term2212 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396124 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2689 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2690 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396122 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396123 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396125 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2686 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2690 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396099 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396124 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396127 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2663 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6395867 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6395875 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6396128 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2664 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6395860 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6396127 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396130 {A K : Type'} (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2690 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524.
Proof. exact (EQ_MP (@lem6396125 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396096 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396131 {A K : Type'} (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2690 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524.
Proof. exact (@lem6396130 A K _79523 _79525 _79526 _79527 _79528 _79524 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396132 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2690 A K _79516 j ltle f dom neut i' k.
Proof. exact (@lem6396131 A K ltle f dom neut i' k i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396135 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2212 A K j ltle f dom neut i' k.
Proof. exact (@lem6396132 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6396128 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396136 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2691 A K j ltle f dom neut i' k.
Proof. exact (fun h0 : term2692 A K j ltle f dom neut i' k => @lem6396135 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6396138 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6396139 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (k : K -> Prop) : (term2691 A K j ltle f dom neut i' k) = (term2212 A K j ltle f dom neut i' k).
Proof. exact (@lem6396138 (term2212 A K j ltle f dom neut i' k)). Qed.
Lemma lem6396140 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2212 A K j ltle f dom neut i' k.
Proof. exact (EQ_MP (@lem6396139 A K j ltle f dom neut i' k) (@lem6396136 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396142 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396143 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6396142 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396145 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6396146 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6396145 (term2133 K i' k)). Qed.
Lemma lem6396147 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6396146 K i' k) (@lem6396143 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396149 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396150 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6396149 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396152 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6396153 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6396152 (term2131 A K f i' dom neut)). Qed.
Lemma lem6396154 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6396153 A K f i' dom neut) (@lem6396150 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396157 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (h1). Qed.
Lemma lem6396158 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2630 A K _79516 ltle f dom neut k.
Proof. exact (fun h0 : term2180 A K _79516 ltle f dom neut k => @lem6396157 A K _79516 ltle f dom neut k h1). Qed.
Lemma lem6396160 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6396161 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2630 A K _79516 ltle f dom neut k) = (term2615 A K _79516 ltle f dom neut k).
Proof. exact (@lem6396160 (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6396162 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : term2615 A K _79516 ltle f dom neut k) : term2615 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6396161 A K _79516 ltle f dom neut k) (@lem6396158 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6396168 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396169 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2693 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396168 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2694 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396183 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396184 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2695 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2696 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396183 (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396200 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396201 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396200 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6396207 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396208 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2696 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2698 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396207 A K j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6396201 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396212 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396213 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2698 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2699 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396212 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2134 K _79528 _79524)). Qed.
Lemma lem6396231 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2696 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2699 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396208 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396213 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396232 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2695 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2699 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396184 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396231 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396233 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396234 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2693 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2700 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396233 A K _79525 _79528 _79526 _79527) (@lem6396232 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396238 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396239 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2700 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2701 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396238 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2702 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396253 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396254 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2703 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2704 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396253 (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396272 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396273 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2701 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396272 A K _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396254 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396284 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2700 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396239 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396273 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396285 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2693 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396234 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396284 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396286 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396169 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396285 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6396288 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2706 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2707 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396287) (@lem6396286 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396304 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396305 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396304 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396319 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396320 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396319 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6396326 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396327 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396326 A K _79525 _79528 _79526 _79527) (@lem6396320 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396331 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396332 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396331 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396348 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2648 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396327 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396332 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396349 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396305 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396348 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396350 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2697 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396351 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2709 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396350 A K j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6396349 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396355 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396356 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2709 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396355 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) (term2688 A K _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396384 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396351 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396356 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396385 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = ((term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)).
Proof. exact (MK_COMB (@lem6396288 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396384 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396387 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6396388 (x : Prop) : (x = x) = True.
Proof. exact (@lem6396387 Prop x). Qed.
Lemma lem6396389 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)) = True.
Proof. exact (@lem6396388 (term2705 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396390 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : ((term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)) = True.
Proof. exact (TRANS (@lem6396385 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396389 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396391 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : True = ((term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)).
Proof. exact (SYM (@lem6396390 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396392 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2581 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (EQ_MP (@lem6396391 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem0)). Qed.
Lemma lem6396393 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6396392 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6394229 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396395 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6396396 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2710 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (@lem6396395 (term2647 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396398 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396399 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396398 (term2134 K _79528 _79524) (term2656 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396401 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396402 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2657 K _79528 _79524) = (term2133 K _79528 _79524).
Proof. exact (@lem6396401 (term2133 K _79528 _79524)). Qed.
Lemma lem6396403 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396404 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2658 K _79528 _79524) = (term2137 K _79528 _79524).
Proof. exact (MK_COMB (@lem6396403) (@lem6396402 K _79528 _79524)). Qed.
Lemma lem6396406 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396407 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396406 (term2132 A K _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396409 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396410 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2661 A K _79525 _79528 _79526 _79527) = (term2131 A K _79525 _79528 _79526 _79527).
Proof. exact (@lem6396409 (term2131 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396411 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396412 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2662 A K _79525 _79528 _79526 _79527) = (term2353 A K _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396411) (@lem6396410 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396413 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2615 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396414 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2660 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396412 A K _79525 _79528 _79526 _79527) (@lem6396413 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396415 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2659 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2663 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6396407 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396414 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396416 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2655 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396404 K _79528 _79524) (@lem6396415 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396417 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2654 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2664 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6396399 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396416 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396418 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6396419 {A K : Type'} (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2665 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2666 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396418) (@lem6396417 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396420 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528) = (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (eq_refl (term2195 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396421 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2710 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) = (term2711 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (MK_COMB (@lem6396419 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396420 A K j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396422 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) : (term2708 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2711 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528).
Proof. exact (TRANS (@lem6396396 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6396421 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528)). Qed.
Lemma lem6396424 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2663 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6396154 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6396162 A K _79516 ltle f dom neut k h1)). Qed.
Lemma lem6396425 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2664 A K i' _79516 ltle f dom neut k.
Proof. exact (conj (@lem6396147 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6396424 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396427 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2711 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528.
Proof. exact (EQ_MP (@lem6396422 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528) (@lem6396393 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396428 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2711 A K _79516 j _79523 _79524 _79525 _79526 _79527 _79528.
Proof. exact (@lem6396427 A K _79523 _79524 _79525 _79526 _79527 _79528 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396429 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2711 A K _79516 j ltle k f dom neut i'.
Proof. exact (@lem6396428 A K ltle k f dom neut i' i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396432 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2195 A K j ltle k f dom neut i'.
Proof. exact (@lem6396429 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6396425 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396433 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2712 A K j ltle k f dom neut i'.
Proof. exact (fun h0 : (term2191 A K j ltle k f dom neut i') = i' => @lem6396432 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6396435 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6396436 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2712 A K j ltle k f dom neut i') = (term2195 A K j ltle k f dom neut i').
Proof. exact (@lem6396435 ((term2191 A K j ltle k f dom neut i') = i')). Qed.
Lemma lem6396437 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2195 A K j ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6396436 A K j ltle k f dom neut i') (@lem6396433 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396453 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396454 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79530 : K) (i' : K) : (term2576 A K k f dom neut _79530 i') = (term2713 A K f dom neut k _79530 i').
Proof. exact (@lem6396453 (term2132 A K f _79530 dom neut) (term2134 K _79530 k) (_79530 = i')). Qed.
Lemma lem6396468 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396469 {K : Type'} (i' : K) (_79530 : K) (k : K -> Prop) : (term2714 K k _79530 i') = (term2715 K i' _79530 k).
Proof. exact (@lem6396468 (_79530 = i') (term2134 K _79530 k)). Qed.
Lemma lem6396477 {A K : Type'} (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2232 A K f _79530 dom neut) = (term2232 A K f _79530 dom neut).
Proof. exact (eq_refl (term2232 A K f _79530 dom neut)). Qed.
Lemma lem6396478 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (_79530 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79530 i') = (term2716 A K f dom neut i' _79530 k).
Proof. exact (MK_COMB (@lem6396477 A K f _79530 dom neut) (@lem6396469 K i' _79530 k)). Qed.
Lemma lem6396482 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396483 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2716 A K f dom neut i' _79530 k) = (term2717 A K i' f dom neut _79530 k).
Proof. exact (@lem6396482 (_79530 = i') (term2132 A K f _79530 dom neut) (term2134 K _79530 k)). Qed.
Lemma lem6396501 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79530 i') = (term2717 A K i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396478 A K f dom neut i' _79530 k) (@lem6396483 A K i' f dom neut _79530 k)). Qed.
Lemma lem6396502 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2576 A K k f dom neut _79530 i') = (term2717 A K i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396454 A K f dom neut k _79530 i') (@lem6396501 A K i' f dom neut _79530 k)). Qed.
Lemma lem6396503 {K : Type'} (ltle : type1402 K) (_79530 : K) (i' : K) : (term2347 K ltle _79530 i') = (term2347 K ltle _79530 i').
Proof. exact (eq_refl (term2347 K ltle _79530 i')). Qed.
Lemma lem6396504 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2577 A K ltle k f dom neut _79530 i') = (term2718 A K ltle i' f dom neut _79530 k).
Proof. exact (MK_COMB (@lem6396503 K ltle _79530 i') (@lem6396502 A K i' f dom neut _79530 k)). Qed.
Lemma lem6396508 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396509 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2718 A K ltle i' f dom neut _79530 k) = (term2719 A K ltle i' f dom neut _79530 k).
Proof. exact (@lem6396508 (_79530 = i') (term2346 K ltle _79530 i') (term2688 A K f dom neut _79530 k)). Qed.
Lemma lem6396537 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2577 A K ltle k f dom neut _79530 i') = (term2719 A K ltle i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396504 A K ltle i' f dom neut _79530 k) (@lem6396509 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396538 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6396539 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2720 A K ltle k f dom neut _79530 i') = (term2721 A K ltle i' f dom neut _79530 k).
Proof. exact (MK_COMB (@lem6396538) (@lem6396537 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396543 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396544 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79530 : K) (i' : K) : (term2722 A K f dom neut ltle k _79530 i') = (term2723 A K ltle f dom neut k _79530 i').
Proof. exact (@lem6396543 (term2346 K ltle _79530 i') (term2132 A K f _79530 dom neut) (term2714 K k _79530 i')). Qed.
Lemma lem6396568 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396569 {K : Type'} (i' : K) (_79530 : K) (k : K -> Prop) : (term2714 K k _79530 i') = (term2715 K i' _79530 k).
Proof. exact (@lem6396568 (_79530 = i') (term2134 K _79530 k)). Qed.
Lemma lem6396577 {A K : Type'} (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2232 A K f _79530 dom neut) = (term2232 A K f _79530 dom neut).
Proof. exact (eq_refl (term2232 A K f _79530 dom neut)). Qed.
Lemma lem6396578 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (_79530 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79530 i') = (term2716 A K f dom neut i' _79530 k).
Proof. exact (MK_COMB (@lem6396577 A K f _79530 dom neut) (@lem6396569 K i' _79530 k)). Qed.
Lemma lem6396582 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396583 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2716 A K f dom neut i' _79530 k) = (term2717 A K i' f dom neut _79530 k).
Proof. exact (@lem6396582 (_79530 = i') (term2132 A K f _79530 dom neut) (term2134 K _79530 k)). Qed.
Lemma lem6396601 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79530 i') = (term2717 A K i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396578 A K f dom neut i' _79530 k) (@lem6396583 A K i' f dom neut _79530 k)). Qed.
Lemma lem6396602 {K : Type'} (ltle : type1402 K) (_79530 : K) (i' : K) : (term2347 K ltle _79530 i') = (term2347 K ltle _79530 i').
Proof. exact (eq_refl (term2347 K ltle _79530 i')). Qed.
Lemma lem6396603 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2723 A K ltle f dom neut k _79530 i') = (term2718 A K ltle i' f dom neut _79530 k).
Proof. exact (MK_COMB (@lem6396602 K ltle _79530 i') (@lem6396601 A K i' f dom neut _79530 k)). Qed.
Lemma lem6396607 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396608 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2718 A K ltle i' f dom neut _79530 k) = (term2719 A K ltle i' f dom neut _79530 k).
Proof. exact (@lem6396607 (_79530 = i') (term2346 K ltle _79530 i') (term2688 A K f dom neut _79530 k)). Qed.
Lemma lem6396636 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2723 A K ltle f dom neut k _79530 i') = (term2719 A K ltle i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396603 A K ltle i' f dom neut _79530 k) (@lem6396608 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396637 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : (term2722 A K f dom neut ltle k _79530 i') = (term2719 A K ltle i' f dom neut _79530 k).
Proof. exact (TRANS (@lem6396544 A K ltle f dom neut k _79530 i') (@lem6396636 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396638 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : ((term2577 A K ltle k f dom neut _79530 i') = (term2722 A K f dom neut ltle k _79530 i')) = ((term2719 A K ltle i' f dom neut _79530 k) = (term2719 A K ltle i' f dom neut _79530 k)).
Proof. exact (MK_COMB (@lem6396539 A K ltle i' f dom neut _79530 k) (@lem6396637 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396640 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6396641 (x : Prop) : (x = x) = True.
Proof. exact (@lem6396640 Prop x). Qed.
Lemma lem6396642 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79530 : K) (k : K -> Prop) : ((term2719 A K ltle i' f dom neut _79530 k) = (term2719 A K ltle i' f dom neut _79530 k)) = True.
Proof. exact (@lem6396641 (term2719 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396643 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : ((term2577 A K ltle k f dom neut _79530 i') = (term2722 A K f dom neut ltle k _79530 i')) = True.
Proof. exact (TRANS (@lem6396638 A K ltle i' f dom neut _79530 k) (@lem6396642 A K ltle i' f dom neut _79530 k)). Qed.
Lemma lem6396644 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : True = ((term2577 A K ltle k f dom neut _79530 i') = (term2722 A K f dom neut ltle k _79530 i')).
Proof. exact (SYM (@lem6396643 A K f dom neut ltle k _79530 i')). Qed.
Lemma lem6396645 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : (term2577 A K ltle k f dom neut _79530 i') = (term2722 A K f dom neut ltle k _79530 i').
Proof. exact (EQ_MP (@lem6396644 A K f dom neut ltle k _79530 i') (@lem0)). Qed.
Lemma lem6396646 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2722 A K f dom neut ltle k _79530 i'.
Proof. exact (EQ_MP (@lem6396645 A K f dom neut ltle k _79530 i') (@lem6394090 A K _79530 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396648 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6396649 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2722 A K f dom neut ltle k _79530 i') = (term2724 A K ltle k i' f _79530 dom neut).
Proof. exact (@lem6396648 (term2725 K ltle k _79530 i') (term2132 A K f _79530 dom neut)). Qed.
Lemma lem6396651 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396652 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : (term2726 K ltle k _79530 i') = (term2727 K ltle k _79530 i').
Proof. exact (@lem6396651 (term2346 K ltle _79530 i') (term2714 K k _79530 i')). Qed.
Lemma lem6396654 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396655 {K : Type'} (ltle : type1402 K) (_79530 : K) (i' : K) : (term2728 K ltle _79530 i') = (term2344 K ltle _79530 i').
Proof. exact (@lem6396654 (term2344 K ltle _79530 i')). Qed.
Lemma lem6396656 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396657 {K : Type'} (ltle : type1402 K) (_79530 : K) (i' : K) : (term2729 K ltle _79530 i') = (term2730 K ltle _79530 i').
Proof. exact (MK_COMB (@lem6396656) (@lem6396655 K ltle _79530 i')). Qed.
Lemma lem6396659 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396660 {K : Type'} (k : K -> Prop) (_79530 : K) (i' : K) : (term2731 K k _79530 i') = (term2732 K k _79530 i').
Proof. exact (@lem6396659 (term2134 K _79530 k) (_79530 = i')). Qed.
Lemma lem6396662 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396663 {K : Type'} (_79530 : K) (k : K -> Prop) : (term2657 K _79530 k) = (term2133 K _79530 k).
Proof. exact (@lem6396662 (term2133 K _79530 k)). Qed.
Lemma lem6396664 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396665 {K : Type'} (_79530 : K) (k : K -> Prop) : (term2658 K _79530 k) = (term2137 K _79530 k).
Proof. exact (MK_COMB (@lem6396664) (@lem6396663 K _79530 k)). Qed.
Lemma lem6396666 {K : Type'} (_79530 : K) (i' : K) : (term675 K _79530 i') = (term675 K _79530 i').
Proof. exact (eq_refl (term675 K _79530 i')). Qed.
Lemma lem6396667 {K : Type'} (k : K -> Prop) (_79530 : K) (i' : K) : (term2732 K k _79530 i') = (term2733 K k _79530 i').
Proof. exact (MK_COMB (@lem6396665 K _79530 k) (@lem6396666 K _79530 i')). Qed.
Lemma lem6396668 {K : Type'} (k : K -> Prop) (_79530 : K) (i' : K) : (term2731 K k _79530 i') = (term2733 K k _79530 i').
Proof. exact (TRANS (@lem6396660 K k _79530 i') (@lem6396667 K k _79530 i')). Qed.
Lemma lem6396669 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : (term2727 K ltle k _79530 i') = (term2734 K ltle k _79530 i').
Proof. exact (MK_COMB (@lem6396657 K ltle _79530 i') (@lem6396668 K k _79530 i')). Qed.
Lemma lem6396670 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : (term2726 K ltle k _79530 i') = (term2734 K ltle k _79530 i').
Proof. exact (TRANS (@lem6396652 K ltle k _79530 i') (@lem6396669 K ltle k _79530 i')). Qed.
Lemma lem6396671 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6396672 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79530 : K) (i' : K) : (term2735 K ltle k _79530 i') = (term2736 K ltle k _79530 i').
Proof. exact (MK_COMB (@lem6396671) (@lem6396670 K ltle k _79530 i')). Qed.
Lemma lem6396673 {A K : Type'} (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2132 A K f _79530 dom neut) = (term2132 A K f _79530 dom neut).
Proof. exact (eq_refl (term2132 A K f _79530 dom neut)). Qed.
Lemma lem6396674 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2724 A K ltle k i' f _79530 dom neut) = (term2737 A K ltle k i' f _79530 dom neut).
Proof. exact (MK_COMB (@lem6396672 K ltle k _79530 i') (@lem6396673 A K f _79530 dom neut)). Qed.
Lemma lem6396675 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79530 : K) (dom : A -> Prop) (neut : A) : (term2722 A K f dom neut ltle k _79530 i') = (term2737 A K ltle k i' f _79530 dom neut).
Proof. exact (TRANS (@lem6396649 A K ltle k i' f _79530 dom neut) (@lem6396674 A K ltle k i' f _79530 dom neut)). Qed.
Lemma lem6396677 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2738 A K j ltle k f dom neut i'.
Proof. exact (conj (@lem6396140 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6396437 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396678 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2739 A K j ltle k f dom neut i'.
Proof. exact (conj (@lem6395853 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6396677 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396680 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2737 A K ltle k i' f _79530 dom neut.
Proof. exact (EQ_MP (@lem6396675 A K ltle k i' f _79530 dom neut) (@lem6396646 A K _79530 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396681 {A K : Type'} (_79530 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2737 A K ltle k i' f _79530 dom neut.
Proof. exact (@lem6396680 A K _79530 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396682 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2740 A K j ltle k f i' dom neut.
Proof. exact (@lem6396681 A K (term2191 A K j ltle k f dom neut i') i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396685 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2741 A K j ltle k f i' dom neut.
Proof. exact (@lem6396682 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6396678 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396686 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2742 A K j ltle k f i' dom neut.
Proof. exact (fun h0 : term2205 A K j ltle k f i' dom neut => @lem6396685 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6396688 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6396689 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2742 A K j ltle k f i' dom neut) = (term2741 A K j ltle k f i' dom neut).
Proof. exact (@lem6396688 (term2205 A K j ltle k f i' dom neut)). Qed.
Lemma lem6396690 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2741 A K j ltle k f i' dom neut.
Proof. exact (EQ_MP (@lem6396689 A K j ltle k f i' dom neut) (@lem6396686 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396696 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396697 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2743 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396696 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2744 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396711 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396712 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2745 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2746 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396711 (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396726 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396727 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2636 A K _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396726 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2134 K _79528 _79524)). Qed.
Lemma lem6396733 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396734 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2746 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2748 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396733 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396727 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396745 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2745 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2748 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396712 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396734 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396746 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396747 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2743 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2749 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396746 A K _79525 _79528 _79526 _79527) (@lem6396745 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396751 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396752 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2749 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2750 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396751 (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2132 A K _79525 _79528 _79526 _79527) (term2637 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396766 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396767 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2642 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2643 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396766 (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396783 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2747 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396784 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2750 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396783 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396767 A K _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396795 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2749 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396752 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396784 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396796 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2743 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396747 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396795 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396797 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396697 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396796 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396798 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6396799 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2752 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2753 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396798) (@lem6396797 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396813 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396814 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2469 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2754 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (@lem6396813 (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524) (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396828 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6396829 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2755 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2756 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396828 (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396835 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2232 A K _79525 _79528 _79526 _79527) = (term2232 A K _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2232 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396836 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2754 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2757 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396835 A K _79525 _79528 _79526 _79527) (@lem6396829 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396840 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396841 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2757 A K j _79523 _79525 _79526 _79527 _79528 _79524) = (term2758 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396840 (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2132 A K _79525 _79528 _79526 _79527) (term2134 K _79528 _79524)). Qed.
Lemma lem6396857 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2754 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2758 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396836 A K j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396841 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396858 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2469 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2758 A K j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396814 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396857 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396859 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2682 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396860 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) = (term2760 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (MK_COMB (@lem6396859 A K _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396858 A K j _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396864 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6396865 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2760 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (@lem6396864 (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) (term2688 A K _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396891 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524).
Proof. exact (TRANS (@lem6396860 A K _79516 j _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396865 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396892 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527)) = ((term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)).
Proof. exact (MK_COMB (@lem6396799 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396891 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396894 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6396895 (x : Prop) : (x = x) = True.
Proof. exact (@lem6396894 Prop x). Qed.
Lemma lem6396896 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79528 : K) (_79524 : K -> Prop) : ((term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) = (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)) = True.
Proof. exact (@lem6396895 (term2751 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396897 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : ((term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527)) = True.
Proof. exact (TRANS (@lem6396892 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524) (@lem6396896 A K j _79516 _79523 _79525 _79526 _79527 _79528 _79524)). Qed.
Lemma lem6396898 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : True = ((term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527)).
Proof. exact (SYM (@lem6396897 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396899 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2593 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (EQ_MP (@lem6396898 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) (@lem0)). Qed.
Lemma lem6396900 {A K : Type'} (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527.
Proof. exact (EQ_MP (@lem6396899 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6394271 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396902 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6396903 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) = (term2761 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (@lem6396902 (term2469 A K j _79523 _79524 _79525 _79528 _79526 _79527) (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396905 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396906 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2762 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2763 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (@lem6396905 (term2134 K _79528 _79524) (term2449 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396908 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396909 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2657 K _79528 _79524) = (term2133 K _79528 _79524).
Proof. exact (@lem6396908 (term2133 K _79528 _79524)). Qed.
Lemma lem6396910 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396911 {K : Type'} (_79528 : K) (_79524 : K -> Prop) : (term2658 K _79528 _79524) = (term2137 K _79528 _79524).
Proof. exact (MK_COMB (@lem6396910) (@lem6396909 K _79528 _79524)). Qed.
Lemma lem6396913 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6396914 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2764 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2765 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (@lem6396913 (term2132 A K _79525 _79528 _79526 _79527) (term2205 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396916 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6396917 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2661 A K _79525 _79528 _79526 _79527) = (term2131 A K _79525 _79528 _79526 _79527).
Proof. exact (@lem6396916 (term2131 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396918 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6396919 {A K : Type'} (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2662 A K _79525 _79528 _79526 _79527) = (term2353 A K _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396918) (@lem6396917 A K _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396920 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2741 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2741 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (eq_refl (term2741 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396921 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2765 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2766 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396919 A K _79525 _79528 _79526 _79527) (@lem6396920 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396922 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2764 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2766 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (TRANS (@lem6396914 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396921 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396923 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2763 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2767 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396911 K _79528 _79524) (@lem6396922 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396924 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2762 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2767 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (TRANS (@lem6396906 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396923 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396925 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6396926 {A K : Type'} (j : type757 A K) (_79523 : type1402 K) (_79524 : K -> Prop) (_79525 : K -> A) (_79528 : K) (_79526 : A -> Prop) (_79527 : A) : (term2768 A K j _79523 _79524 _79525 _79528 _79526 _79527) = (term2769 A K j _79523 _79524 _79525 _79528 _79526 _79527).
Proof. exact (MK_COMB (@lem6396925) (@lem6396924 A K j _79523 _79524 _79525 _79528 _79526 _79527)). Qed.
Lemma lem6396927 {A K : Type'} (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524) = (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (eq_refl (term2180 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396928 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2761 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) = (term2770 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (MK_COMB (@lem6396926 A K j _79523 _79524 _79525 _79528 _79526 _79527) (@lem6396927 A K _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396929 {A K : Type'} (j : type757 A K) (_79528 : K) (_79516 : type758 A K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) : (term2759 A K _79516 j _79523 _79524 _79525 _79528 _79526 _79527) = (term2770 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524).
Proof. exact (TRANS (@lem6396903 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396928 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524)). Qed.
Lemma lem6396931 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2766 A K j ltle k f i' dom neut.
Proof. exact (conj (@lem6395598 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6396690 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396932 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2767 A K j ltle k f i' dom neut.
Proof. exact (conj (@lem6395591 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6396931 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396934 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2770 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (EQ_MP (@lem6396929 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524) (@lem6396900 A K _79523 _79524 _79525 _79528 _79526 _79527 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396935 {A K : Type'} (_79528 : K) (_79523 : type1402 K) (_79525 : K -> A) (_79526 : A -> Prop) (_79527 : A) (_79524 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2770 A K j _79528 _79516 _79523 _79525 _79526 _79527 _79524.
Proof. exact (@lem6396934 A K _79528 _79523 _79525 _79526 _79527 _79524 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396936 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2770 A K j i' _79516 ltle f dom neut k.
Proof. exact (@lem6396935 A K i' ltle f dom neut k i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6396939 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2615 A K _79516 ltle f dom neut k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2180 A K _79516 ltle f dom neut k.
Proof. exact (@lem6396936 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6396932 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396940 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2771 A K _79516 ltle f dom neut k.
Proof. exact (fun h0 : term2615 A K _79516 ltle f dom neut k => @lem6396939 A K i' _79517 j _79516 ltle x k f i dom neut h0 h1). Qed.
Lemma lem6396942 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6396943 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2771 A K _79516 ltle f dom neut k) = (term2180 A K _79516 ltle f dom neut k).
Proof. exact (@lem6396942 (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6396944 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2180 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6396943 A K _79516 ltle f dom neut k) (@lem6396940 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6396947 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6396949 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2615 A K _79516 ltle f dom neut k) = (term2772 A K _79516 ltle f dom neut k).
Proof. exact (@lem6396947 (term2180 A K _79516 ltle f dom neut k)). Qed.
Lemma lem6396952 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2772 A K _79516 ltle f dom neut k.
Proof. exact (EQ_MP (@lem6396949 A K _79516 ltle f dom neut k) (@lem6394103 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6396955 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (@lem6396952 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2 (@lem6396944 A K i' _79517 j _79516 ltle x k f i dom neut h2)). Qed.
Lemma lem6396956 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6396955 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6396958 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6396959 : term774 = False.
Proof. exact (@lem6396958 False). Qed.
Lemma lem6397337 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397338 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6397337 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397340 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397341 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6397340 (term2133 K i' k)). Qed.
Lemma lem6397342 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6397341 K i' k) (@lem6397338 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397344 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397345 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6397344 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397347 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397348 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6397347 (term2131 A K f i' dom neut)). Qed.
Lemma lem6397349 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6397348 A K f i' dom neut) (@lem6397345 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397351 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397352 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6397351 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397354 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397355 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6397354 (term2133 K i' k)). Qed.
Lemma lem6397356 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6397355 K i' k) (@lem6397352 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397358 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397359 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6397358 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397361 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397362 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6397361 (term2131 A K f i' dom neut)). Qed.
Lemma lem6397363 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6397362 A K f i' dom neut) (@lem6397359 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397366 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6397367 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2773 A K _79516 ltle k f dom neut.
Proof. exact (fun h0 : term2173 A K _79516 ltle k f dom neut => @lem6397366 A K _79516 ltle k f dom neut h1). Qed.
Lemma lem6397369 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6397370 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2773 A K _79516 ltle k f dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (@lem6397369 (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6397371 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6397370 A K _79516 ltle k f dom neut) (@lem6397367 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6397377 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397378 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2774 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397377 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2775 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397392 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397393 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2776 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2777 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397392 (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397407 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6397408 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397407 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397414 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397415 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2777 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2780 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397414 A K j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397408 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397426 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2776 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2780 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397393 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397415 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397427 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397428 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2774 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2781 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397427 A K _79538 _79541 _79539 _79540) (@lem6397426 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397432 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397433 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2781 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2782 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397432 (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2132 A K _79538 _79541 _79539 _79540) (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397447 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397448 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397447 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397464 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397465 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2782 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397464 A K j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397448 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397476 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2781 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397433 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397465 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397477 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2774 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397428 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397476 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397478 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397378 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397477 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397479 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6397480 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2786 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2787 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397479) (@lem6397478 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397494 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397495 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397494 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397509 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6397510 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397509 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397516 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397517 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397516 A K _79538 _79541 _79539 _79540) (@lem6397510 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397521 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397522 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397521 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397538 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397517 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397522 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397539 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397495 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397538 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397540 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2638 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397541 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397540 A K j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397539 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397552 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = ((term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)).
Proof. exact (MK_COMB (@lem6397480 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397541 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397554 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6397555 (x : Prop) : (x = x) = True.
Proof. exact (@lem6397554 Prop x). Qed.
Lemma lem6397556 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)) = True.
Proof. exact (@lem6397555 (term2785 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397557 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : ((term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = True.
Proof. exact (TRANS (@lem6397552 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397556 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397558 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : True = ((term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)).
Proof. exact (SYM (@lem6397557 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397559 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2601 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (EQ_MP (@lem6397558 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem0)). Qed.
Lemma lem6397560 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6397559 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6394481 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397562 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6397563 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2791 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (@lem6397562 (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397565 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6397566 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397565 (term2134 K _79541 _79537) (term2794 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397568 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6397569 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2657 K _79541 _79537) = (term2133 K _79541 _79537).
Proof. exact (@lem6397568 (term2133 K _79541 _79537)). Qed.
Lemma lem6397570 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6397571 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2658 K _79541 _79537) = (term2137 K _79541 _79537).
Proof. exact (MK_COMB (@lem6397570) (@lem6397569 K _79541 _79537)). Qed.
Lemma lem6397573 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6397574 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397573 (term2132 A K _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397576 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6397577 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2661 A K _79538 _79541 _79539 _79540) = (term2131 A K _79538 _79541 _79539 _79540).
Proof. exact (@lem6397576 (term2131 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397578 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6397579 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2662 A K _79538 _79541 _79539 _79540) = (term2353 A K _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6397578) (@lem6397577 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397580 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397581 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397579 A K _79538 _79541 _79539 _79540) (@lem6397580 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397582 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6397574 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397581 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397583 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397571 K _79541 _79537) (@lem6397582 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397584 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6397566 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397583 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397585 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6397586 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2799 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2800 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397585) (@lem6397584 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397587 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2223 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397588 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2791 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) = (term2801 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (MK_COMB (@lem6397586 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397587 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397589 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2790 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2801 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (TRANS (@lem6397563 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397588 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397591 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2797 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397363 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6397371 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6397592 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2798 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397356 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6397591 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397594 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2801 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541.
Proof. exact (EQ_MP (@lem6397589 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397560 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397595 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2801 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541.
Proof. exact (@lem6397594 A K _79536 _79537 _79538 _79539 _79540 _79541 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397596 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2801 A K _79516 j ltle k f dom neut i'.
Proof. exact (@lem6397595 A K ltle k f dom neut i' i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397599 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2223 A K j ltle k f dom neut i'.
Proof. exact (@lem6397596 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6397592 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397600 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2668 A K j ltle k f dom neut i'.
Proof. exact (fun h0 : term2669 A K j ltle k f dom neut i' => @lem6397599 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6397602 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397603 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2668 A K j ltle k f dom neut i') = (term2223 A K j ltle k f dom neut i').
Proof. exact (@lem6397602 (term2223 A K j ltle k f dom neut i')). Qed.
Lemma lem6397604 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2223 A K j ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6397603 A K j ltle k f dom neut i') (@lem6397600 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397606 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397607 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6397606 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397609 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397610 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6397609 (term2133 K i' k)). Qed.
Lemma lem6397611 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6397610 K i' k) (@lem6397607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397613 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397614 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6397613 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397616 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397617 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6397616 (term2131 A K f i' dom neut)). Qed.
Lemma lem6397618 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6397617 A K f i' dom neut) (@lem6397614 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397621 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6397622 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2773 A K _79516 ltle k f dom neut.
Proof. exact (fun h0 : term2173 A K _79516 ltle k f dom neut => @lem6397621 A K _79516 ltle k f dom neut h1). Qed.
Lemma lem6397624 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6397625 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2773 A K _79516 ltle k f dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (@lem6397624 (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6397626 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6397625 A K _79516 ltle k f dom neut) (@lem6397622 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6397632 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397633 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2802 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397632 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2803 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397647 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397648 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2804 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2805 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397647 (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397662 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6397663 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397662 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397669 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (eq_refl (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397670 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2805 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2806 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397669 A K j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397663 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397674 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397675 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2806 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2807 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397674 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2134 K _79541 _79537)). Qed.
Lemma lem6397691 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2805 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2807 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397670 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397675 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397692 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2804 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2807 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397648 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397691 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397693 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397694 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2802 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2808 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397693 A K _79538 _79541 _79539 _79540) (@lem6397692 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397698 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397699 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2808 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2809 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397698 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2679 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397713 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397714 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2680 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2681 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397713 (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397730 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397731 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2809 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397730 A K _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397714 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397742 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2808 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397699 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397731 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397743 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2802 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397694 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397742 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397744 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397633 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397743 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397745 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6397746 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2812 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2813 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397745) (@lem6397744 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397760 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397761 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397760 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397775 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6397776 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397775 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397782 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397783 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397782 A K _79538 _79541 _79539 _79540) (@lem6397776 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397787 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397788 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397787 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397804 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397788 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397805 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397761 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397804 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397806 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (eq_refl (term2674 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397807 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2815 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397806 A K j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397805 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397811 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397812 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2815 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397811 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) (term2688 A K _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397838 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397807 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397812 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397839 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = ((term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)).
Proof. exact (MK_COMB (@lem6397746 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397838 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397841 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6397842 (x : Prop) : (x = x) = True.
Proof. exact (@lem6397841 Prop x). Qed.
Lemma lem6397843 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)) = True.
Proof. exact (@lem6397842 (term2811 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397844 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : ((term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = True.
Proof. exact (TRANS (@lem6397839 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397843 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397845 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : True = ((term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)).
Proof. exact (SYM (@lem6397844 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397846 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2605 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (EQ_MP (@lem6397845 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem0)). Qed.
Lemma lem6397847 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6397846 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6394495 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397849 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6397850 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2816 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397849 (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397852 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6397853 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397852 (term2134 K _79541 _79537) (term2794 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397855 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6397856 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2657 K _79541 _79537) = (term2133 K _79541 _79537).
Proof. exact (@lem6397855 (term2133 K _79541 _79537)). Qed.
Lemma lem6397857 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6397858 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2658 K _79541 _79537) = (term2137 K _79541 _79537).
Proof. exact (MK_COMB (@lem6397857) (@lem6397856 K _79541 _79537)). Qed.
Lemma lem6397860 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6397861 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397860 (term2132 A K _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397863 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6397864 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2661 A K _79538 _79541 _79539 _79540) = (term2131 A K _79538 _79541 _79539 _79540).
Proof. exact (@lem6397863 (term2131 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397865 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6397866 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2662 A K _79538 _79541 _79539 _79540) = (term2353 A K _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6397865) (@lem6397864 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397867 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397868 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397866 A K _79538 _79541 _79539 _79540) (@lem6397867 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397869 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6397861 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397868 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397870 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397858 K _79541 _79537) (@lem6397869 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397871 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6397853 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397870 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397872 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6397873 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2799 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2800 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6397872) (@lem6397871 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397874 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (eq_refl (term2212 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397875 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2816 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2817 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397873 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397874 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397876 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2814 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2817 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397850 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397875 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397878 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2797 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397618 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6397626 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6397879 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2798 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397611 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6397878 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397881 {A K : Type'} (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2817 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537.
Proof. exact (EQ_MP (@lem6397876 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397847 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397882 {A K : Type'} (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2817 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537.
Proof. exact (@lem6397881 A K _79536 _79538 _79539 _79540 _79541 _79537 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397883 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2817 A K _79516 j ltle f dom neut i' k.
Proof. exact (@lem6397882 A K ltle f dom neut i' k i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397886 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2212 A K j ltle f dom neut i' k.
Proof. exact (@lem6397883 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6397879 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397887 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2691 A K j ltle f dom neut i' k.
Proof. exact (fun h0 : term2692 A K j ltle f dom neut i' k => @lem6397886 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6397889 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397890 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (k : K -> Prop) : (term2691 A K j ltle f dom neut i' k) = (term2212 A K j ltle f dom neut i' k).
Proof. exact (@lem6397889 (term2212 A K j ltle f dom neut i' k)). Qed.
Lemma lem6397891 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2212 A K j ltle f dom neut i' k.
Proof. exact (EQ_MP (@lem6397890 A K j ltle f dom neut i' k) (@lem6397887 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6397893 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (proj1 (@lem6390607 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397894 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2628 K i' k.
Proof. exact (fun h0 : term2134 K i' k => @lem6397893 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397896 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397897 {K : Type'} (i' : K) (k : K -> Prop) : (term2628 K i' k) = (term2133 K i' k).
Proof. exact (@lem6397896 (term2133 K i' k)). Qed.
Lemma lem6397898 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2133 K i' k.
Proof. exact (EQ_MP (@lem6397897 K i' k) (@lem6397894 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397900 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (proj1 (@lem6390618 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397901 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2629 A K f i' dom neut.
Proof. exact (fun h0 : term2132 A K f i' dom neut => @lem6397900 A K i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6397903 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6397904 {A K : Type'} (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f i' dom neut) = (term2131 A K f i' dom neut).
Proof. exact (@lem6397903 (term2131 A K f i' dom neut)). Qed.
Lemma lem6397905 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2131 A K f i' dom neut.
Proof. exact (EQ_MP (@lem6397904 A K f i' dom neut) (@lem6397901 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6397908 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (h1). Qed.
Lemma lem6397909 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2773 A K _79516 ltle k f dom neut.
Proof. exact (fun h0 : term2173 A K _79516 ltle k f dom neut => @lem6397908 A K _79516 ltle k f dom neut h1). Qed.
Lemma lem6397911 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6397912 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2773 A K _79516 ltle k f dom neut) = (term2621 A K _79516 ltle k f dom neut).
Proof. exact (@lem6397911 (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6397913 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) : term2621 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6397912 A K _79516 ltle k f dom neut) (@lem6397909 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6397919 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397920 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2818 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397919 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2819 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397934 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397935 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2820 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2821 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6397934 (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6397951 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6397952 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397951 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6397958 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6397959 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2821 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2822 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397958 A K j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6397952 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397963 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397964 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2822 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2823 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397963 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2134 K _79541 _79537)). Qed.
Lemma lem6397982 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2821 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2823 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397959 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6397964 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397983 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2820 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2823 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397935 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6397982 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397984 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6397985 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2818 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2824 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6397984 A K _79538 _79541 _79539 _79540) (@lem6397983 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6397989 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6397990 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2824 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2825 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6397989 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2702 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398004 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398005 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2703 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2704 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398004 (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398023 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398024 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2825 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398023 A K _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398005 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398035 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2824 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397990 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398024 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398036 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2818 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397985 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398035 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398037 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6397920 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398036 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398038 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6398039 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2827 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2828 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398038) (@lem6398037 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398055 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398056 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398055 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398070 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6398071 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398070 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398077 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398078 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398077 A K _79538 _79541 _79539 _79540) (@lem6398071 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398082 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398083 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2783 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398082 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398099 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2789 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398078 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398083 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398100 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2784 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398056 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398099 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398101 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2697 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6398102 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2830 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398101 A K j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6398100 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398106 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398107 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2830 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398106 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) (term2688 A K _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398135 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398102 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398107 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398136 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = ((term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)).
Proof. exact (MK_COMB (@lem6398039 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398135 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398138 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6398139 (x : Prop) : (x = x) = True.
Proof. exact (@lem6398138 Prop x). Qed.
Lemma lem6398140 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)) = True.
Proof. exact (@lem6398139 (term2826 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398141 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : ((term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)) = True.
Proof. exact (TRANS (@lem6398136 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398140 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398142 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : True = ((term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)).
Proof. exact (SYM (@lem6398141 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398143 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2597 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (EQ_MP (@lem6398142 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem0)). Qed.
Lemma lem6398144 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6398143 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6394467 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398146 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6398147 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2831 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (@lem6398146 (term2788 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6398149 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398150 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398149 (term2134 K _79541 _79537) (term2794 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398152 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398153 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2657 K _79541 _79537) = (term2133 K _79541 _79537).
Proof. exact (@lem6398152 (term2133 K _79541 _79537)). Qed.
Lemma lem6398154 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398155 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2658 K _79541 _79537) = (term2137 K _79541 _79537).
Proof. exact (MK_COMB (@lem6398154) (@lem6398153 K _79541 _79537)). Qed.
Lemma lem6398157 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398158 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398157 (term2132 A K _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398160 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398161 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2661 A K _79538 _79541 _79539 _79540) = (term2131 A K _79538 _79541 _79539 _79540).
Proof. exact (@lem6398160 (term2131 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398162 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398163 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2662 A K _79538 _79541 _79539 _79540) = (term2353 A K _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6398162) (@lem6398161 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398164 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2621 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398165 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2796 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6398163 A K _79538 _79541 _79539 _79540) (@lem6398164 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398166 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2795 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2797 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6398158 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398165 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398167 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2793 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6398155 K _79541 _79537) (@lem6398166 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398168 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2792 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2798 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6398150 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398167 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398169 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6398170 {A K : Type'} (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2799 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2800 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6398169) (@lem6398168 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398171 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541) = (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (eq_refl (term2195 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6398172 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2831 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) = (term2832 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (MK_COMB (@lem6398170 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398171 A K j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6398173 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) : (term2829 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2832 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541).
Proof. exact (TRANS (@lem6398147 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6398172 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541)). Qed.
Lemma lem6398175 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2797 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397905 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6397913 A K _79516 ltle k f dom neut h1)). Qed.
Lemma lem6398176 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2798 A K i' _79516 ltle k f dom neut.
Proof. exact (conj (@lem6397898 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6398175 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398178 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2832 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541.
Proof. exact (EQ_MP (@lem6398173 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541) (@lem6398144 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398179 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2832 A K _79516 j _79536 _79537 _79538 _79539 _79540 _79541.
Proof. exact (@lem6398178 A K _79536 _79537 _79538 _79539 _79540 _79541 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398180 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2832 A K _79516 j ltle k f dom neut i'.
Proof. exact (@lem6398179 A K ltle k f dom neut i' i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398183 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2195 A K j ltle k f dom neut i'.
Proof. exact (@lem6398180 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6398176 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398184 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2712 A K j ltle k f dom neut i'.
Proof. exact (fun h0 : (term2191 A K j ltle k f dom neut i') = i' => @lem6398183 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6398186 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6398187 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) : (term2712 A K j ltle k f dom neut i') = (term2195 A K j ltle k f dom neut i').
Proof. exact (@lem6398186 ((term2191 A K j ltle k f dom neut i') = i')). Qed.
Lemma lem6398188 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2195 A K j ltle k f dom neut i'.
Proof. exact (EQ_MP (@lem6398187 A K j ltle k f dom neut i') (@lem6398184 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398204 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398205 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79543 : K) (i' : K) : (term2576 A K k f dom neut _79543 i') = (term2713 A K f dom neut k _79543 i').
Proof. exact (@lem6398204 (term2132 A K f _79543 dom neut) (term2134 K _79543 k) (_79543 = i')). Qed.
Lemma lem6398219 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6398220 {K : Type'} (i' : K) (_79543 : K) (k : K -> Prop) : (term2714 K k _79543 i') = (term2715 K i' _79543 k).
Proof. exact (@lem6398219 (_79543 = i') (term2134 K _79543 k)). Qed.
Lemma lem6398228 {A K : Type'} (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2232 A K f _79543 dom neut) = (term2232 A K f _79543 dom neut).
Proof. exact (eq_refl (term2232 A K f _79543 dom neut)). Qed.
Lemma lem6398229 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (_79543 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79543 i') = (term2716 A K f dom neut i' _79543 k).
Proof. exact (MK_COMB (@lem6398228 A K f _79543 dom neut) (@lem6398220 K i' _79543 k)). Qed.
Lemma lem6398233 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398234 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2716 A K f dom neut i' _79543 k) = (term2717 A K i' f dom neut _79543 k).
Proof. exact (@lem6398233 (_79543 = i') (term2132 A K f _79543 dom neut) (term2134 K _79543 k)). Qed.
Lemma lem6398252 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79543 i') = (term2717 A K i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398229 A K f dom neut i' _79543 k) (@lem6398234 A K i' f dom neut _79543 k)). Qed.
Lemma lem6398253 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2576 A K k f dom neut _79543 i') = (term2717 A K i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398205 A K f dom neut k _79543 i') (@lem6398252 A K i' f dom neut _79543 k)). Qed.
Lemma lem6398254 {K : Type'} (ltle : type1402 K) (_79543 : K) (i' : K) : (term2347 K ltle _79543 i') = (term2347 K ltle _79543 i').
Proof. exact (eq_refl (term2347 K ltle _79543 i')). Qed.
Lemma lem6398255 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2577 A K ltle k f dom neut _79543 i') = (term2718 A K ltle i' f dom neut _79543 k).
Proof. exact (MK_COMB (@lem6398254 K ltle _79543 i') (@lem6398253 A K i' f dom neut _79543 k)). Qed.
Lemma lem6398259 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398260 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2718 A K ltle i' f dom neut _79543 k) = (term2719 A K ltle i' f dom neut _79543 k).
Proof. exact (@lem6398259 (_79543 = i') (term2346 K ltle _79543 i') (term2688 A K f dom neut _79543 k)). Qed.
Lemma lem6398288 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2577 A K ltle k f dom neut _79543 i') = (term2719 A K ltle i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398255 A K ltle i' f dom neut _79543 k) (@lem6398260 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398289 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6398290 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2720 A K ltle k f dom neut _79543 i') = (term2721 A K ltle i' f dom neut _79543 k).
Proof. exact (MK_COMB (@lem6398289) (@lem6398288 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398294 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398295 {A K : Type'} (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (_79543 : K) (i' : K) : (term2722 A K f dom neut ltle k _79543 i') = (term2723 A K ltle f dom neut k _79543 i').
Proof. exact (@lem6398294 (term2346 K ltle _79543 i') (term2132 A K f _79543 dom neut) (term2714 K k _79543 i')). Qed.
Lemma lem6398319 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6398320 {K : Type'} (i' : K) (_79543 : K) (k : K -> Prop) : (term2714 K k _79543 i') = (term2715 K i' _79543 k).
Proof. exact (@lem6398319 (_79543 = i') (term2134 K _79543 k)). Qed.
Lemma lem6398328 {A K : Type'} (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2232 A K f _79543 dom neut) = (term2232 A K f _79543 dom neut).
Proof. exact (eq_refl (term2232 A K f _79543 dom neut)). Qed.
Lemma lem6398329 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (i' : K) (_79543 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79543 i') = (term2716 A K f dom neut i' _79543 k).
Proof. exact (MK_COMB (@lem6398328 A K f _79543 dom neut) (@lem6398320 K i' _79543 k)). Qed.
Lemma lem6398333 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398334 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2716 A K f dom neut i' _79543 k) = (term2717 A K i' f dom neut _79543 k).
Proof. exact (@lem6398333 (_79543 = i') (term2132 A K f _79543 dom neut) (term2134 K _79543 k)). Qed.
Lemma lem6398352 {A K : Type'} (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2713 A K f dom neut k _79543 i') = (term2717 A K i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398329 A K f dom neut i' _79543 k) (@lem6398334 A K i' f dom neut _79543 k)). Qed.
Lemma lem6398353 {K : Type'} (ltle : type1402 K) (_79543 : K) (i' : K) : (term2347 K ltle _79543 i') = (term2347 K ltle _79543 i').
Proof. exact (eq_refl (term2347 K ltle _79543 i')). Qed.
Lemma lem6398354 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2723 A K ltle f dom neut k _79543 i') = (term2718 A K ltle i' f dom neut _79543 k).
Proof. exact (MK_COMB (@lem6398353 K ltle _79543 i') (@lem6398352 A K i' f dom neut _79543 k)). Qed.
Lemma lem6398358 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398359 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2718 A K ltle i' f dom neut _79543 k) = (term2719 A K ltle i' f dom neut _79543 k).
Proof. exact (@lem6398358 (_79543 = i') (term2346 K ltle _79543 i') (term2688 A K f dom neut _79543 k)). Qed.
Lemma lem6398387 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2723 A K ltle f dom neut k _79543 i') = (term2719 A K ltle i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398354 A K ltle i' f dom neut _79543 k) (@lem6398359 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398388 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : (term2722 A K f dom neut ltle k _79543 i') = (term2719 A K ltle i' f dom neut _79543 k).
Proof. exact (TRANS (@lem6398295 A K ltle f dom neut k _79543 i') (@lem6398387 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398389 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : ((term2577 A K ltle k f dom neut _79543 i') = (term2722 A K f dom neut ltle k _79543 i')) = ((term2719 A K ltle i' f dom neut _79543 k) = (term2719 A K ltle i' f dom neut _79543 k)).
Proof. exact (MK_COMB (@lem6398290 A K ltle i' f dom neut _79543 k) (@lem6398388 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398391 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6398392 (x : Prop) : (x = x) = True.
Proof. exact (@lem6398391 Prop x). Qed.
Lemma lem6398393 {A K : Type'} (ltle : type1402 K) (i' : K) (f : K -> A) (dom : A -> Prop) (neut : A) (_79543 : K) (k : K -> Prop) : ((term2719 A K ltle i' f dom neut _79543 k) = (term2719 A K ltle i' f dom neut _79543 k)) = True.
Proof. exact (@lem6398392 (term2719 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398394 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : ((term2577 A K ltle k f dom neut _79543 i') = (term2722 A K f dom neut ltle k _79543 i')) = True.
Proof. exact (TRANS (@lem6398389 A K ltle i' f dom neut _79543 k) (@lem6398393 A K ltle i' f dom neut _79543 k)). Qed.
Lemma lem6398395 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : True = ((term2577 A K ltle k f dom neut _79543 i') = (term2722 A K f dom neut ltle k _79543 i')).
Proof. exact (SYM (@lem6398394 A K f dom neut ltle k _79543 i')). Qed.
Lemma lem6398396 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : (term2577 A K ltle k f dom neut _79543 i') = (term2722 A K f dom neut ltle k _79543 i').
Proof. exact (EQ_MP (@lem6398395 A K f dom neut ltle k _79543 i') (@lem0)). Qed.
Lemma lem6398397 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2722 A K f dom neut ltle k _79543 i'.
Proof. exact (EQ_MP (@lem6398396 A K f dom neut ltle k _79543 i') (@lem6394384 A K _79543 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398399 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6398400 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2722 A K f dom neut ltle k _79543 i') = (term2724 A K ltle k i' f _79543 dom neut).
Proof. exact (@lem6398399 (term2725 K ltle k _79543 i') (term2132 A K f _79543 dom neut)). Qed.
Lemma lem6398402 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398403 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : (term2726 K ltle k _79543 i') = (term2727 K ltle k _79543 i').
Proof. exact (@lem6398402 (term2346 K ltle _79543 i') (term2714 K k _79543 i')). Qed.
Lemma lem6398405 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398406 {K : Type'} (ltle : type1402 K) (_79543 : K) (i' : K) : (term2728 K ltle _79543 i') = (term2344 K ltle _79543 i').
Proof. exact (@lem6398405 (term2344 K ltle _79543 i')). Qed.
Lemma lem6398407 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398408 {K : Type'} (ltle : type1402 K) (_79543 : K) (i' : K) : (term2729 K ltle _79543 i') = (term2730 K ltle _79543 i').
Proof. exact (MK_COMB (@lem6398407) (@lem6398406 K ltle _79543 i')). Qed.
Lemma lem6398410 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398411 {K : Type'} (k : K -> Prop) (_79543 : K) (i' : K) : (term2731 K k _79543 i') = (term2732 K k _79543 i').
Proof. exact (@lem6398410 (term2134 K _79543 k) (_79543 = i')). Qed.
Lemma lem6398413 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398414 {K : Type'} (_79543 : K) (k : K -> Prop) : (term2657 K _79543 k) = (term2133 K _79543 k).
Proof. exact (@lem6398413 (term2133 K _79543 k)). Qed.
Lemma lem6398415 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398416 {K : Type'} (_79543 : K) (k : K -> Prop) : (term2658 K _79543 k) = (term2137 K _79543 k).
Proof. exact (MK_COMB (@lem6398415) (@lem6398414 K _79543 k)). Qed.
Lemma lem6398417 {K : Type'} (_79543 : K) (i' : K) : (term675 K _79543 i') = (term675 K _79543 i').
Proof. exact (eq_refl (term675 K _79543 i')). Qed.
Lemma lem6398418 {K : Type'} (k : K -> Prop) (_79543 : K) (i' : K) : (term2732 K k _79543 i') = (term2733 K k _79543 i').
Proof. exact (MK_COMB (@lem6398416 K _79543 k) (@lem6398417 K _79543 i')). Qed.
Lemma lem6398419 {K : Type'} (k : K -> Prop) (_79543 : K) (i' : K) : (term2731 K k _79543 i') = (term2733 K k _79543 i').
Proof. exact (TRANS (@lem6398411 K k _79543 i') (@lem6398418 K k _79543 i')). Qed.
Lemma lem6398420 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : (term2727 K ltle k _79543 i') = (term2734 K ltle k _79543 i').
Proof. exact (MK_COMB (@lem6398408 K ltle _79543 i') (@lem6398419 K k _79543 i')). Qed.
Lemma lem6398421 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : (term2726 K ltle k _79543 i') = (term2734 K ltle k _79543 i').
Proof. exact (TRANS (@lem6398403 K ltle k _79543 i') (@lem6398420 K ltle k _79543 i')). Qed.
Lemma lem6398422 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6398423 {K : Type'} (ltle : type1402 K) (k : K -> Prop) (_79543 : K) (i' : K) : (term2735 K ltle k _79543 i') = (term2736 K ltle k _79543 i').
Proof. exact (MK_COMB (@lem6398422) (@lem6398421 K ltle k _79543 i')). Qed.
Lemma lem6398424 {A K : Type'} (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2132 A K f _79543 dom neut) = (term2132 A K f _79543 dom neut).
Proof. exact (eq_refl (term2132 A K f _79543 dom neut)). Qed.
Lemma lem6398425 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2724 A K ltle k i' f _79543 dom neut) = (term2737 A K ltle k i' f _79543 dom neut).
Proof. exact (MK_COMB (@lem6398423 K ltle k _79543 i') (@lem6398424 A K f _79543 dom neut)). Qed.
Lemma lem6398426 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (i' : K) (f : K -> A) (_79543 : K) (dom : A -> Prop) (neut : A) : (term2722 A K f dom neut ltle k _79543 i') = (term2737 A K ltle k i' f _79543 dom neut).
Proof. exact (TRANS (@lem6398400 A K ltle k i' f _79543 dom neut) (@lem6398425 A K ltle k i' f _79543 dom neut)). Qed.
Lemma lem6398428 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2738 A K j ltle k f dom neut i'.
Proof. exact (conj (@lem6397891 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6398188 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398429 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2739 A K j ltle k f dom neut i'.
Proof. exact (conj (@lem6397604 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6398428 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398431 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2737 A K ltle k i' f _79543 dom neut.
Proof. exact (EQ_MP (@lem6398426 A K ltle k i' f _79543 dom neut) (@lem6398397 A K _79543 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398432 {A K : Type'} (_79543 : K) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2737 A K ltle k i' f _79543 dom neut.
Proof. exact (@lem6398431 A K _79543 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398433 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2740 A K j ltle k f i' dom neut.
Proof. exact (@lem6398432 A K (term2191 A K j ltle k f dom neut i') i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398436 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2741 A K j ltle k f i' dom neut.
Proof. exact (@lem6398433 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6398429 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398437 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2742 A K j ltle k f i' dom neut.
Proof. exact (fun h0 : term2205 A K j ltle k f i' dom neut => @lem6398436 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6398439 (p : Prop) : (term2631 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem6398440 {A K : Type'} (j : type757 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i' : K) (dom : A -> Prop) (neut : A) : (term2742 A K j ltle k f i' dom neut) = (term2741 A K j ltle k f i' dom neut).
Proof. exact (@lem6398439 (term2205 A K j ltle k f i' dom neut)). Qed.
Lemma lem6398441 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2741 A K j ltle k f i' dom neut.
Proof. exact (EQ_MP (@lem6398440 A K j ltle k f i' dom neut) (@lem6398437 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398447 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398448 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2833 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398447 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2834 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398462 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398463 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2835 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2836 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398462 (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398477 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6398478 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2778 A K _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2779 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398477 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398484 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2747 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2747 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2747 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398485 {A K : Type'} (j : type757 A K) (_79516 : type758 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2836 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2837 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398484 A K j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6398478 A K _79516 _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398489 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398490 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2837 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) = (term2838 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398489 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398506 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2836 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2838 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398485 A K j _79516 _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398490 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398507 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2835 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2838 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398463 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398506 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398508 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398509 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2833 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2839 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398508 A K _79538 _79541 _79539 _79540) (@lem6398507 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398513 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398514 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2839 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2840 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398513 (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2756 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398528 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398529 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2757 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2758 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398528 (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398545 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398546 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2840 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398545 A K _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398529 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398557 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2839 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398514 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398546 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398558 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2833 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398509 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398557 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398559 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398448 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398558 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398560 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6398561 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2842 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2843 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398560) (@lem6398559 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398575 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398576 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2469 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2754 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (@lem6398575 (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537) (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398590 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6398591 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2755 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2756 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398590 (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398597 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2232 A K _79538 _79541 _79539 _79540) = (term2232 A K _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2232 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398598 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2754 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2757 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398597 A K _79538 _79541 _79539 _79540) (@lem6398591 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398602 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6398603 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2757 A K j _79536 _79538 _79539 _79540 _79541 _79537) = (term2758 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (@lem6398602 (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2132 A K _79538 _79541 _79539 _79540) (term2134 K _79541 _79537)). Qed.
Lemma lem6398619 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2754 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2758 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398598 A K j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398603 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398620 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2469 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2758 A K j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (TRANS (@lem6398576 A K j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6398619 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398621 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2810 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398622 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537).
Proof. exact (MK_COMB (@lem6398621 A K _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398620 A K j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398633 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540)) = ((term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)).
Proof. exact (MK_COMB (@lem6398561 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398622 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398635 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6398636 (x : Prop) : (x = x) = True.
Proof. exact (@lem6398635 Prop x). Qed.
Lemma lem6398637 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (_79541 : K) (_79537 : K -> Prop) : ((term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) = (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)) = True.
Proof. exact (@lem6398636 (term2841 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398638 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : ((term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540)) = True.
Proof. exact (TRANS (@lem6398633 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537) (@lem6398637 A K _79516 j _79536 _79538 _79539 _79540 _79541 _79537)). Qed.
Lemma lem6398639 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : True = ((term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540)).
Proof. exact (SYM (@lem6398638 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398640 {A K : Type'} (_79516 : type758 A K) (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2609 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (EQ_MP (@lem6398639 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540) (@lem0)). Qed.
Lemma lem6398641 {A K : Type'} (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540.
Proof. exact (EQ_MP (@lem6398640 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6394509 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398643 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6398644 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540) = (term2845 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (@lem6398643 (term2469 A K j _79536 _79537 _79538 _79541 _79539 _79540) (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398646 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398647 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2762 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2763 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (@lem6398646 (term2134 K _79541 _79537) (term2449 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398649 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398650 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2657 K _79541 _79537) = (term2133 K _79541 _79537).
Proof. exact (@lem6398649 (term2133 K _79541 _79537)). Qed.
Lemma lem6398651 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398652 {K : Type'} (_79541 : K) (_79537 : K -> Prop) : (term2658 K _79541 _79537) = (term2137 K _79541 _79537).
Proof. exact (MK_COMB (@lem6398651) (@lem6398650 K _79541 _79537)). Qed.
Lemma lem6398654 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6398655 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2764 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2765 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (@lem6398654 (term2132 A K _79538 _79541 _79539 _79540) (term2205 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398657 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6398658 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2661 A K _79538 _79541 _79539 _79540) = (term2131 A K _79538 _79541 _79539 _79540).
Proof. exact (@lem6398657 (term2131 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398659 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6398660 {A K : Type'} (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2662 A K _79538 _79541 _79539 _79540) = (term2353 A K _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6398659) (@lem6398658 A K _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398661 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2741 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2741 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (eq_refl (term2741 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398662 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2765 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2766 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6398660 A K _79538 _79541 _79539 _79540) (@lem6398661 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398663 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2764 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2766 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (TRANS (@lem6398655 A K j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6398662 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398664 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2763 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2767 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6398652 K _79541 _79537) (@lem6398663 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398665 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2762 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2767 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (TRANS (@lem6398647 A K j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6398664 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398666 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6398667 {A K : Type'} (j : type757 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79541 : K) (_79539 : A -> Prop) (_79540 : A) : (term2768 A K j _79536 _79537 _79538 _79541 _79539 _79540) = (term2769 A K j _79536 _79537 _79538 _79541 _79539 _79540).
Proof. exact (MK_COMB (@lem6398666) (@lem6398665 A K j _79536 _79537 _79538 _79541 _79539 _79540)). Qed.
Lemma lem6398668 {A K : Type'} (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540) = (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (eq_refl (term2173 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398669 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2845 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) = (term2846 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (MK_COMB (@lem6398667 A K j _79536 _79537 _79538 _79541 _79539 _79540) (@lem6398668 A K _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398670 {A K : Type'} (j : type757 A K) (_79541 : K) (_79516 : type758 A K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) : (term2844 A K _79516 j _79536 _79537 _79538 _79541 _79539 _79540) = (term2846 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540).
Proof. exact (TRANS (@lem6398644 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398669 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540)). Qed.
Lemma lem6398672 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2766 A K j ltle k f i' dom neut.
Proof. exact (conj (@lem6397349 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6398441 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398673 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2767 A K j ltle k f i' dom neut.
Proof. exact (conj (@lem6397342 A K i' _79517 j _79516 ltle x k f i dom neut h2) (@lem6398672 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398675 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2846 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (EQ_MP (@lem6398670 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540) (@lem6398641 A K _79536 _79537 _79538 _79541 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398676 {A K : Type'} (_79541 : K) (_79536 : type1402 K) (_79537 : K -> Prop) (_79538 : K -> A) (_79539 : A -> Prop) (_79540 : A) (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2846 A K j _79541 _79516 _79536 _79537 _79538 _79539 _79540.
Proof. exact (@lem6398675 A K _79541 _79536 _79537 _79538 _79539 _79540 i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398677 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2846 A K j i' _79516 ltle k f dom neut.
Proof. exact (@lem6398676 A K i' ltle k f dom neut i' _79517 j _79516 ltle x k f i dom neut h1). Qed.
Lemma lem6398680 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2621 A K _79516 ltle k f dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2173 A K _79516 ltle k f dom neut.
Proof. exact (@lem6398677 A K i' _79517 j _79516 ltle x k f i dom neut h2 (@lem6398673 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398681 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2847 A K _79516 ltle k f dom neut.
Proof. exact (fun h0 : term2621 A K _79516 ltle k f dom neut => @lem6398680 A K i' _79517 j _79516 ltle x k f i dom neut h0 h1). Qed.
Lemma lem6398683 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6398684 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2847 A K _79516 ltle k f dom neut) = (term2173 A K _79516 ltle k f dom neut).
Proof. exact (@lem6398683 (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6398685 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2173 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6398684 A K _79516 ltle k f dom neut) (@lem6398681 A K i' _79517 j _79516 ltle x k f i dom neut h1)). Qed.
Lemma lem6398688 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6398690 {A K : Type'} (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2621 A K _79516 ltle k f dom neut) = (term2848 A K _79516 ltle k f dom neut).
Proof. exact (@lem6398688 (term2173 A K _79516 ltle k f dom neut)). Qed.
Lemma lem6398693 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term2848 A K _79516 ltle k f dom neut.
Proof. exact (EQ_MP (@lem6398690 A K _79516 ltle k f dom neut) (@lem6394397 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6398696 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (@lem6398693 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2 (@lem6398685 A K i' _79517 j _79516 ltle x k f i dom neut h2)). Qed.
Lemma lem6398697 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6398696 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2). Qed.
Lemma lem6398699 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6398700 : term774 = False.
Proof. exact (@lem6398699 False). Qed.
Lemma lem6399078 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2133 K x' k.
Proof. exact (proj1 (@lem6390633 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399079 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2628 K x' k.
Proof. exact (fun h0 : term2134 K x' k => @lem6399078 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399081 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399082 {K : Type'} (x' : K) (k : K -> Prop) : (term2628 K x' k) = (term2133 K x' k).
Proof. exact (@lem6399081 (term2133 K x' k)). Qed.
Lemma lem6399083 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2133 K x' k.
Proof. exact (EQ_MP (@lem6399082 K x' k) (@lem6399079 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399085 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2131 A K f x' dom neut.
Proof. exact (proj2 (@lem6390633 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399086 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2629 A K f x' dom neut.
Proof. exact (fun h0 : term2132 A K f x' dom neut => @lem6399085 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399088 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399089 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f x' dom neut) = (term2131 A K f x' dom neut).
Proof. exact (@lem6399088 (term2131 A K f x' dom neut)). Qed.
Lemma lem6399090 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2131 A K f x' dom neut.
Proof. exact (EQ_MP (@lem6399089 A K f x' dom neut) (@lem6399086 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399096 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6399097 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2849 A K _79549 _79517' _79546 _79547 _79548 _79545).
Proof. exact (@lem6399096 (term2132 A K _79546 _79549 _79547 _79548) (term2134 K _79549 _79545) (term2275 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399111 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6399112 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2850 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2851 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (@lem6399111 (term2275 A K _79517' _79546 _79547 _79548 _79545) (term2134 K _79549 _79545)). Qed.
Lemma lem6399118 {A K : Type'} (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2232 A K _79546 _79549 _79547 _79548) = (term2232 A K _79546 _79549 _79547 _79548).
Proof. exact (eq_refl (term2232 A K _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399119 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2849 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2852 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (MK_COMB (@lem6399118 A K _79546 _79549 _79547 _79548) (@lem6399112 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399123 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6399124 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2852 A K _79517' _79546 _79547 _79548 _79549 _79545) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (@lem6399123 (term2275 A K _79517' _79546 _79547 _79548 _79545) (term2132 A K _79546 _79549 _79547 _79548) (term2134 K _79549 _79545)). Qed.
Lemma lem6399140 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2849 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (TRANS (@lem6399119 A K _79517' _79546 _79547 _79548 _79549 _79545) (@lem6399124 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399141 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (TRANS (@lem6399097 A K _79549 _79517' _79546 _79547 _79548 _79545) (@lem6399140 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399142 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6399143 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2854 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2855 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (MK_COMB (@lem6399142) (@lem6399141 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399157 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6399158 {A K : Type'} (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2136 A K _79545 _79546 _79549 _79547 _79548) = (term2688 A K _79546 _79547 _79548 _79549 _79545).
Proof. exact (@lem6399157 (term2132 A K _79546 _79549 _79547 _79548) (term2134 K _79549 _79545)). Qed.
Lemma lem6399164 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2856 A K _79517' _79546 _79547 _79548 _79545) = (term2856 A K _79517' _79546 _79547 _79548 _79545).
Proof. exact (eq_refl (term2856 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399165 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545).
Proof. exact (MK_COMB (@lem6399164 A K _79517' _79546 _79547 _79548 _79545) (@lem6399158 A K _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399176 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : ((term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548)) = ((term2853 A K _79517' _79546 _79547 _79548 _79549 _79545) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545)).
Proof. exact (MK_COMB (@lem6399143 A K _79517' _79546 _79547 _79548 _79549 _79545) (@lem6399165 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399178 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6399179 (x : Prop) : (x = x) = True.
Proof. exact (@lem6399178 Prop x). Qed.
Lemma lem6399180 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79549 : K) (_79545 : K -> Prop) : ((term2853 A K _79517' _79546 _79547 _79548 _79549 _79545) = (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545)) = True.
Proof. exact (@lem6399179 (term2853 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399181 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : ((term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548)) = True.
Proof. exact (TRANS (@lem6399176 A K _79517' _79546 _79547 _79548 _79549 _79545) (@lem6399180 A K _79517' _79546 _79547 _79548 _79549 _79545)). Qed.
Lemma lem6399182 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : True = ((term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548)).
Proof. exact (SYM (@lem6399181 A K _79517' _79545 _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399183 {A K : Type'} (_79517' : type850 A K) (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2610 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548).
Proof. exact (EQ_MP (@lem6399182 A K _79517' _79545 _79546 _79549 _79547 _79548) (@lem0)). Qed.
Lemma lem6399184 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2857 A K _79517' _79545 _79546 _79549 _79547 _79548.
Proof. exact (EQ_MP (@lem6399183 A K _79517' _79545 _79546 _79549 _79547 _79548) (@lem6394831 A K _79549 _79546 _79547 _79548 _79545 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399186 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6399187 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548) = (term2858 A K _79549 _79517' _79546 _79547 _79548 _79545).
Proof. exact (@lem6399186 (term2136 A K _79545 _79546 _79549 _79547 _79548) (term2275 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399189 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6399190 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2859 A K _79545 _79546 _79549 _79547 _79548) = (term2860 A K _79545 _79546 _79549 _79547 _79548).
Proof. exact (@lem6399189 (term2134 K _79549 _79545) (term2132 A K _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399192 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6399193 {K : Type'} (_79549 : K) (_79545 : K -> Prop) : (term2657 K _79549 _79545) = (term2133 K _79549 _79545).
Proof. exact (@lem6399192 (term2133 K _79549 _79545)). Qed.
Lemma lem6399194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6399195 {K : Type'} (_79549 : K) (_79545 : K -> Prop) : (term2658 K _79549 _79545) = (term2137 K _79549 _79545).
Proof. exact (MK_COMB (@lem6399194) (@lem6399193 K _79549 _79545)). Qed.
Lemma lem6399197 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6399198 {A K : Type'} (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2661 A K _79546 _79549 _79547 _79548) = (term2131 A K _79546 _79549 _79547 _79548).
Proof. exact (@lem6399197 (term2131 A K _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399199 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2860 A K _79545 _79546 _79549 _79547 _79548) = (term2138 A K _79545 _79546 _79549 _79547 _79548).
Proof. exact (MK_COMB (@lem6399195 K _79549 _79545) (@lem6399198 A K _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399200 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2859 A K _79545 _79546 _79549 _79547 _79548) = (term2138 A K _79545 _79546 _79549 _79547 _79548).
Proof. exact (TRANS (@lem6399190 A K _79545 _79546 _79549 _79547 _79548) (@lem6399199 A K _79545 _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399201 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6399202 {A K : Type'} (_79545 : K -> Prop) (_79546 : K -> A) (_79549 : K) (_79547 : A -> Prop) (_79548 : A) : (term2861 A K _79545 _79546 _79549 _79547 _79548) = (term2862 A K _79545 _79546 _79549 _79547 _79548).
Proof. exact (MK_COMB (@lem6399201) (@lem6399200 A K _79545 _79546 _79549 _79547 _79548)). Qed.
Lemma lem6399203 {A K : Type'} (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2275 A K _79517' _79546 _79547 _79548 _79545) = (term2275 A K _79517' _79546 _79547 _79548 _79545).
Proof. exact (eq_refl (term2275 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399204 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2858 A K _79549 _79517' _79546 _79547 _79548 _79545) = (term2863 A K _79549 _79517' _79546 _79547 _79548 _79545).
Proof. exact (MK_COMB (@lem6399202 A K _79545 _79546 _79549 _79547 _79548) (@lem6399203 A K _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399205 {A K : Type'} (_79549 : K) (_79517' : type850 A K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) : (term2857 A K _79517' _79545 _79546 _79549 _79547 _79548) = (term2863 A K _79549 _79517' _79546 _79547 _79548 _79545).
Proof. exact (TRANS (@lem6399187 A K _79549 _79517' _79546 _79547 _79548 _79545) (@lem6399204 A K _79549 _79517' _79546 _79547 _79548 _79545)). Qed.
Lemma lem6399207 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2138 A K k f x' dom neut.
Proof. exact (conj (@lem6399083 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1) (@lem6399090 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399209 {A K : Type'} (_79549 : K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2863 A K _79549 _79517' _79546 _79547 _79548 _79545.
Proof. exact (EQ_MP (@lem6399205 A K _79549 _79517' _79546 _79547 _79548 _79545) (@lem6399184 A K _79545 _79546 _79549 _79547 _79548 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399210 {A K : Type'} (_79549 : K) (_79546 : K -> A) (_79547 : A -> Prop) (_79548 : A) (_79545 : K -> Prop) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2863 A K _79549 _79517' _79546 _79547 _79548 _79545.
Proof. exact (@lem6399209 A K _79549 _79546 _79547 _79548 _79545 ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399211 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2863 A K x' _79517' f dom neut k.
Proof. exact (@lem6399210 A K x' f dom neut k ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399214 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2275 A K _79517' f dom neut k.
Proof. exact (@lem6399211 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 (@lem6399207 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399215 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2864 A K _79517' f dom neut k.
Proof. exact (fun h0 : term2625 A K _79517' f dom neut k => @lem6399214 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399217 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399218 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2864 A K _79517' f dom neut k) = (term2275 A K _79517' f dom neut k).
Proof. exact (@lem6399217 (term2275 A K _79517' f dom neut k)). Qed.
Lemma lem6399219 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2275 A K _79517' f dom neut k.
Proof. exact (EQ_MP (@lem6399218 A K _79517' f dom neut k) (@lem6399215 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399222 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6399224 {A K : Type'} (_79517' : type850 A K) (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) : (term2625 A K _79517' f dom neut k) = (term2865 A K _79517' f dom neut k).
Proof. exact (@lem6399222 (term2275 A K _79517' f dom neut k)). Qed.
Lemma lem6399227 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2865 A K _79517' f dom neut k.
Proof. exact (EQ_MP (@lem6399224 A K _79517' f dom neut k) (@lem6394649 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2)). Qed.
Lemma lem6399230 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (@lem6399227 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2 (@lem6399219 A K ltle j' j'' _79516' _79517' x' k f i dom neut h2)). Qed.
Lemma lem6399231 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6399230 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2). Qed.
Lemma lem6399233 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399234 : term774 = False.
Proof. exact (@lem6399233 False). Qed.
Lemma lem6399612 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2133 K x' k.
Proof. exact (proj1 (@lem6390633 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399613 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2628 K x' k.
Proof. exact (fun h0 : term2134 K x' k => @lem6399612 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399615 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399616 {K : Type'} (x' : K) (k : K -> Prop) : (term2628 K x' k) = (term2133 K x' k).
Proof. exact (@lem6399615 (term2133 K x' k)). Qed.
Lemma lem6399617 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2133 K x' k.
Proof. exact (EQ_MP (@lem6399616 K x' k) (@lem6399613 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399619 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2131 A K f x' dom neut.
Proof. exact (proj2 (@lem6390633 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399620 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2629 A K f x' dom neut.
Proof. exact (fun h0 : term2132 A K f x' dom neut => @lem6399619 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399622 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399623 {A K : Type'} (f : K -> A) (x' : K) (dom : A -> Prop) (neut : A) : (term2629 A K f x' dom neut) = (term2131 A K f x' dom neut).
Proof. exact (@lem6399622 (term2131 A K f x' dom neut)). Qed.
Lemma lem6399624 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2131 A K f x' dom neut.
Proof. exact (EQ_MP (@lem6399623 A K f x' dom neut) (@lem6399620 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399630 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6399631 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2866 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (@lem6399630 (term2132 A K _79559 _79562 _79560 _79561) (term2134 K _79562 _79558) (term2270 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399645 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6399646 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2867 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2868 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (@lem6399645 (term2270 A K _79517' _79558 _79559 _79560 _79561) (term2134 K _79562 _79558)). Qed.
Lemma lem6399652 {A K : Type'} (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2232 A K _79559 _79562 _79560 _79561) = (term2232 A K _79559 _79562 _79560 _79561).
Proof. exact (eq_refl (term2232 A K _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399653 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2866 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2869 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (MK_COMB (@lem6399652 A K _79559 _79562 _79560 _79561) (@lem6399646 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399657 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6399658 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2869 A K _79517' _79559 _79560 _79561 _79562 _79558) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (@lem6399657 (term2270 A K _79517' _79558 _79559 _79560 _79561) (term2132 A K _79559 _79562 _79560 _79561) (term2134 K _79562 _79558)). Qed.
Lemma lem6399674 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2866 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (TRANS (@lem6399653 A K _79517' _79559 _79560 _79561 _79562 _79558) (@lem6399658 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399675 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (TRANS (@lem6399631 A K _79562 _79517' _79558 _79559 _79560 _79561) (@lem6399674 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399676 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6399677 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2871 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2872 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (MK_COMB (@lem6399676) (@lem6399675 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399691 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6399692 {A K : Type'} (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2136 A K _79558 _79559 _79562 _79560 _79561) = (term2688 A K _79559 _79560 _79561 _79562 _79558).
Proof. exact (@lem6399691 (term2132 A K _79559 _79562 _79560 _79561) (term2134 K _79562 _79558)). Qed.
Lemma lem6399698 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2873 A K _79517' _79558 _79559 _79560 _79561) = (term2873 A K _79517' _79558 _79559 _79560 _79561).
Proof. exact (eq_refl (term2873 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399699 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558).
Proof. exact (MK_COMB (@lem6399698 A K _79517' _79558 _79559 _79560 _79561) (@lem6399692 A K _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399710 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : ((term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561)) = ((term2870 A K _79517' _79559 _79560 _79561 _79562 _79558) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558)).
Proof. exact (MK_COMB (@lem6399677 A K _79517' _79559 _79560 _79561 _79562 _79558) (@lem6399699 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399712 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6399713 (x : Prop) : (x = x) = True.
Proof. exact (@lem6399712 Prop x). Qed.
Lemma lem6399714 {A K : Type'} (_79517' : type850 A K) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (_79562 : K) (_79558 : K -> Prop) : ((term2870 A K _79517' _79559 _79560 _79561 _79562 _79558) = (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558)) = True.
Proof. exact (@lem6399713 (term2870 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399715 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : ((term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561)) = True.
Proof. exact (TRANS (@lem6399710 A K _79517' _79559 _79560 _79561 _79562 _79558) (@lem6399714 A K _79517' _79559 _79560 _79561 _79562 _79558)). Qed.
Lemma lem6399716 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : True = ((term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561)).
Proof. exact (SYM (@lem6399715 A K _79517' _79558 _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399717 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2611 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561).
Proof. exact (EQ_MP (@lem6399716 A K _79517' _79558 _79559 _79562 _79560 _79561) (@lem0)). Qed.
Lemma lem6399718 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2874 A K _79517' _79558 _79559 _79562 _79560 _79561.
Proof. exact (EQ_MP (@lem6399717 A K _79517' _79558 _79559 _79562 _79560 _79561) (@lem6395153 A K _79562 _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399720 (b : Prop) (a : Prop) : (a \/ b) = (term2650 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6399721 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561) = (term2875 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (@lem6399720 (term2136 A K _79558 _79559 _79562 _79560 _79561) (term2270 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399723 (a : Prop) (b : Prop) : (term2652 a b) = (term2653 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6399724 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2859 A K _79558 _79559 _79562 _79560 _79561) = (term2860 A K _79558 _79559 _79562 _79560 _79561).
Proof. exact (@lem6399723 (term2134 K _79562 _79558) (term2132 A K _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399726 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6399727 {K : Type'} (_79562 : K) (_79558 : K -> Prop) : (term2657 K _79562 _79558) = (term2133 K _79562 _79558).
Proof. exact (@lem6399726 (term2133 K _79562 _79558)). Qed.
Lemma lem6399728 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6399729 {K : Type'} (_79562 : K) (_79558 : K -> Prop) : (term2658 K _79562 _79558) = (term2137 K _79562 _79558).
Proof. exact (MK_COMB (@lem6399728) (@lem6399727 K _79562 _79558)). Qed.
Lemma lem6399731 (a : Prop) : (term32 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6399732 {A K : Type'} (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2661 A K _79559 _79562 _79560 _79561) = (term2131 A K _79559 _79562 _79560 _79561).
Proof. exact (@lem6399731 (term2131 A K _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399733 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2860 A K _79558 _79559 _79562 _79560 _79561) = (term2138 A K _79558 _79559 _79562 _79560 _79561).
Proof. exact (MK_COMB (@lem6399729 K _79562 _79558) (@lem6399732 A K _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399734 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2859 A K _79558 _79559 _79562 _79560 _79561) = (term2138 A K _79558 _79559 _79562 _79560 _79561).
Proof. exact (TRANS (@lem6399724 A K _79558 _79559 _79562 _79560 _79561) (@lem6399733 A K _79558 _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399735 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6399736 {A K : Type'} (_79558 : K -> Prop) (_79559 : K -> A) (_79562 : K) (_79560 : A -> Prop) (_79561 : A) : (term2861 A K _79558 _79559 _79562 _79560 _79561) = (term2862 A K _79558 _79559 _79562 _79560 _79561).
Proof. exact (MK_COMB (@lem6399735) (@lem6399734 A K _79558 _79559 _79562 _79560 _79561)). Qed.
Lemma lem6399737 {A K : Type'} (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2270 A K _79517' _79558 _79559 _79560 _79561) = (term2270 A K _79517' _79558 _79559 _79560 _79561).
Proof. exact (eq_refl (term2270 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399738 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2875 A K _79562 _79517' _79558 _79559 _79560 _79561) = (term2876 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (MK_COMB (@lem6399736 A K _79558 _79559 _79562 _79560 _79561) (@lem6399737 A K _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399739 {A K : Type'} (_79562 : K) (_79517' : type850 A K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) : (term2874 A K _79517' _79558 _79559 _79562 _79560 _79561) = (term2876 A K _79562 _79517' _79558 _79559 _79560 _79561).
Proof. exact (TRANS (@lem6399721 A K _79562 _79517' _79558 _79559 _79560 _79561) (@lem6399738 A K _79562 _79517' _79558 _79559 _79560 _79561)). Qed.
Lemma lem6399741 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2138 A K k f x' dom neut.
Proof. exact (conj (@lem6399617 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1) (@lem6399624 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399743 {A K : Type'} (_79562 : K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2876 A K _79562 _79517' _79558 _79559 _79560 _79561.
Proof. exact (EQ_MP (@lem6399739 A K _79562 _79517' _79558 _79559 _79560 _79561) (@lem6399718 A K _79558 _79559 _79562 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399744 {A K : Type'} (_79562 : K) (_79558 : K -> Prop) (_79559 : K -> A) (_79560 : A -> Prop) (_79561 : A) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2876 A K _79562 _79517' _79558 _79559 _79560 _79561.
Proof. exact (@lem6399743 A K _79562 _79558 _79559 _79560 _79561 ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399745 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2876 A K x' _79517' k f dom neut.
Proof. exact (@lem6399744 A K x' k f dom neut ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399748 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2270 A K _79517' k f dom neut.
Proof. exact (@lem6399745 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 (@lem6399741 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399749 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2877 A K _79517' k f dom neut.
Proof. exact (fun h0 : term2627 A K _79517' k f dom neut => @lem6399748 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1). Qed.
Lemma lem6399751 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399752 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2877 A K _79517' k f dom neut) = (term2270 A K _79517' k f dom neut).
Proof. exact (@lem6399751 (term2270 A K _79517' k f dom neut)). Qed.
Lemma lem6399753 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2270 A K _79517' k f dom neut.
Proof. exact (EQ_MP (@lem6399752 A K _79517' k f dom neut) (@lem6399749 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1)). Qed.
Lemma lem6399756 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6399758 {A K : Type'} (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term2627 A K _79517' k f dom neut) = (term2878 A K _79517' k f dom neut).
Proof. exact (@lem6399756 (term2270 A K _79517' k f dom neut)). Qed.
Lemma lem6399761 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term2878 A K _79517' k f dom neut.
Proof. exact (EQ_MP (@lem6399758 A K _79517' k f dom neut) (@lem6394957 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2)). Qed.
Lemma lem6399764 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (@lem6399761 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2 (@lem6399753 A K ltle j' j'' _79516' _79517' x' k f i dom neut h2)). Qed.
Lemma lem6399765 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : term774.
Proof. exact (fun h0 : ~ False => @lem6399764 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2). Qed.
Lemma lem6399767 (p : Prop) : (term772 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6399768 : term774 = False.
Proof. exact (@lem6399767 False). Qed.
Lemma lem6399770 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399768) (@lem6399765 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2)). Qed.
Lemma lem6399771 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399234) (@lem6399231 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2)). Qed.
Lemma lem6399772 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6398700) (@lem6398697 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6399773 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6396959) (@lem6396956 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2)). Qed.
Lemma lem6399774 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399770 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6393661 A K f i dom neut h1)). Qed.
Lemma lem6399775 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399774 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6393661 A K f i dom neut h1)). Qed.
Lemma lem6399776 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399771 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6393309 K i k h1)). Qed.
Lemma lem6399777 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399776 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6393309 K i k h1)). Qed.
Lemma lem6399778 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399772 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6392997 A K f i dom neut h1)). Qed.
Lemma lem6399779 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399778 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6392997 A K f i dom neut h1)). Qed.
Lemma lem6399780 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399773 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6392663 K i k h1)). Qed.
Lemma lem6399781 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399780 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6392663 K i k h1)). Qed.
Lemma lem6399782 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399775 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6392369 A K f i dom neut h1)). Qed.
Lemma lem6399783 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399782 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6392369 A K f i dom neut h1)). Qed.
Lemma lem6399784 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399777 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6391919 K i k h1)). Qed.
Lemma lem6399785 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399784 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6391919 K i k h1)). Qed.
Lemma lem6399786 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399779 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6391469 A K f i dom neut h1)). Qed.
Lemma lem6399787 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399786 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6391469 A K f i dom neut h1)). Qed.
Lemma lem6399788 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399781 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6391053 K i k h1)). Qed.
Lemma lem6399789 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399788 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6391053 K i k h1)). Qed.
Lemma lem6399790 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399783 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6392369 A K f i dom neut h1)). Qed.
Lemma lem6399791 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399790 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6392369 A K f i dom neut h1)). Qed.
Lemma lem6399792 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399785 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (fun h3 : False => @lem6391919 K i k h1)). Qed.
Lemma lem6399793 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399792 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1 h2) (@lem6391919 K i k h1)). Qed.
Lemma lem6399794 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2132 A K f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term2132 A K f i dom neut => @lem6399787 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6391469 A K f i dom neut h1)). Qed.
Lemma lem6399795 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2132 A K f i dom neut) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399794 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6391469 A K f i dom neut h1)). Qed.
Lemma lem6399796 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : (term2134 K i k) = False.
Proof. exact (prop_ext (fun h3 : term2134 K i k => @lem6399789 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (fun h3 : False => @lem6391053 K i k h1)). Qed.
Lemma lem6399797 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2134 K i k) (h2 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399796 A K i' _79517 j _79516 ltle x k f i dom neut h1 h2) (@lem6391053 K i k h1)). Qed.
Lemma lem6399798 {A K : Type'} (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (or_elim (@lem6390632 A K ltle j' j'' _79516' _79517' x' k f i dom neut h1) (fun h0 : term2134 K i k => @lem6399793 A K ltle j' j'' _79516' _79517' x' k f i dom neut h0 h1) (fun h0 : term2132 A K f i dom neut => @lem6399791 A K ltle j' j'' _79516' _79517' x' k f i dom neut h0 h1)). Qed.
Lemma lem6399799 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (x : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut) : False.
Proof. exact (or_elim (@lem6390614 A K i' _79517 j _79516 ltle x k f i dom neut h1) (fun h0 : term2134 K i k => @lem6399797 A K i' _79517 j _79516 ltle x k f i dom neut h0 h1) (fun h0 : term2132 A K f i dom neut => @lem6399795 A K i' _79517 j _79516 ltle x k f i dom neut h0 h1)). Qed.
Lemma lem6399800 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (x' : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2100 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut) : False.
Proof. exact (or_elim (@lem6390603 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut h1) (fun h0 : term2357 A K i' _79517 j _79516 ltle x k f i dom neut => @lem6399799 A K i' _79517 j _79516 ltle x k f i dom neut h0) (fun h0 : term2338 A K ltle j' j'' _79516' _79517' x' k f i dom neut => @lem6399798 A K ltle j' j'' _79516' _79517' x' k f i dom neut h0)). Qed.
Lemma lem6399801 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (j'' : type757 A K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2103 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387714 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut h1) (fun x' : K => fun h0 : term2102 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut x' => @lem6399800 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' x' k f i dom neut h0)). Qed.
Lemma lem6399802 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79516' : type758 A K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2105 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387713 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut h1) (fun j'' : type757 A K => fun h0 : term2104 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut j'' => @lem6399801 A K i' _79517 j _79516 x ltle j' j'' _79516' _79517' k f i dom neut h0)). Qed.
Lemma lem6399803 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (_79517' : type850 A K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2107 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387712 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut h1) (fun _79516' : type758 A K => fun h0 : term2106 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut _79516' => @lem6399802 A K i' _79517 j _79516 x ltle j' _79516' _79517' k f i dom neut h0)). Qed.
Lemma lem6399804 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (j' : K -> K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2109 A K i' _79517 j _79516 x ltle j' k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387711 A K i' _79517 j _79516 x ltle j' k f i dom neut h1) (fun _79517' : type850 A K => fun h0 : term2108 A K i' _79517 j _79516 x ltle j' k f i dom neut _79517' => @lem6399803 A K i' _79517 j _79516 x ltle j' _79517' k f i dom neut h0)). Qed.
Lemma lem6399805 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (x : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2111 A K i' _79517 j _79516 x ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387710 A K i' _79517 j _79516 x ltle k f i dom neut h1) (fun j' : K -> K => fun h0 : term2110 A K i' _79517 j _79516 x ltle k f i dom neut j' => @lem6399804 A K i' _79517 j _79516 x ltle j' k f i dom neut h0)). Qed.
Lemma lem6399806 {A K : Type'} (i' : K) (_79517 : type850 A K) (j : type757 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2113 A K i' _79517 j _79516 ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387709 A K i' _79517 j _79516 ltle k f i dom neut h1) (fun x : K => fun h0 : term2112 A K i' _79517 j _79516 ltle k f i dom neut x => @lem6399805 A K i' _79517 j _79516 x ltle k f i dom neut h0)). Qed.
Lemma lem6399807 {A K : Type'} (i' : K) (_79517 : type850 A K) (_79516 : type758 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2115 A K i' _79517 _79516 ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387708 A K i' _79517 _79516 ltle k f i dom neut h1) (fun j : type757 A K => fun h0 : term2114 A K i' _79517 _79516 ltle k f i dom neut j => @lem6399806 A K i' _79517 j _79516 ltle k f i dom neut h0)). Qed.
Lemma lem6399808 {A K : Type'} (i' : K) (_79517 : type850 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2117 A K i' _79517 ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387707 A K i' _79517 ltle k f i dom neut h1) (fun _79516 : type758 A K => fun h0 : term2116 A K i' _79517 ltle k f i dom neut _79516 => @lem6399807 A K i' _79517 _79516 ltle k f i dom neut h0)). Qed.
Lemma lem6399809 {A K : Type'} (i' : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term2119 A K i' ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387706 A K i' ltle k f i dom neut h1) (fun _79517 : type850 A K => fun h0 : term2118 A K i' ltle k f i dom neut _79517 => @lem6399808 A K i' _79517 ltle k f i dom neut h0)). Qed.
Lemma lem6399810 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1123 A K ltle k f i dom neut) : False.
Proof. exact (ex_elim (@lem6387705 A K ltle k f i dom neut h1) (fun i' : K => fun h0 : term2120 A K ltle k f i dom neut i' => @lem6399809 A K i' ltle k f i dom neut h0)). Qed.
Lemma lem6399811 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1123 A K ltle k f i dom neut) : (term1123 A K ltle k f i dom neut) = False.
Proof. exact (prop_ext (fun h2 : term1123 A K ltle k f i dom neut => @lem6399810 A K ltle k f i dom neut h1) (fun h2 : False => @lem6384145 A K ltle k f i dom neut h1)). Qed.
Lemma lem6399812 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (h1 : term1123 A K ltle k f i dom neut) : False.
Proof. exact (EQ_MP (@lem6399811 A K ltle k f i dom neut h1) (@lem6384145 A K ltle k f i dom neut h1)). Qed.
Lemma lem6399813 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1122 A K ltle k f i dom neut.
Proof. exact (fun h0 : term1123 A K ltle k f i dom neut => @lem6399812 A K ltle k f i dom neut h0). Qed.
Lemma lem6399814 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1097 A K ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6384144 A K ltle k f i dom neut) (@lem6399813 A K ltle k f i dom neut)). Qed.
Lemma lem6399819 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1111 A K k f i dom neut.
Proof. exact (fun ltle : type1402 K => @lem6399814 A K ltle k f i dom neut). Qed.
Lemma lem6399824 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1113 A K f i dom neut.
Proof. exact (fun k : K -> Prop => @lem6399819 A K k f i dom neut). Qed.
Lemma lem6399829 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : term1115 A K i dom neut.
Proof. exact (fun f : K -> A => @lem6399824 A K f i dom neut). Qed.
Lemma lem6399834 {A K : Type'} (dom : A -> Prop) (neut : A) : term1117 A K dom neut.
Proof. exact (fun i : K => @lem6399829 A K i dom neut). Qed.
Lemma lem6399839 {A K : Type'} (neut : A) : term1119 A K neut.
Proof. exact (fun dom : A -> Prop => @lem6399834 A K dom neut). Qed.
Lemma lem6399844 {A K : Type'} : term1121 A K.
Proof. exact (fun neut : A => @lem6399839 A K neut). Qed.
Lemma lem6399845 {A K : Type'} : term1069 A K.
Proof. exact (EQ_MP (@lem6384140 A K) (@lem6399844 A K)). Qed.
Lemma lem6399846 {A K : Type'} (neut : A) : term2879 A K neut.
Proof. exact (@lem6399845 A K neut). Qed.
Lemma lem6399847 {A K : Type'} (neut : A) : (term2879 A K neut) = (term1065 A K neut).
Proof. exact (eq_refl (term2879 A K neut)). Qed.
Lemma lem6399848 {A K : Type'} (neut : A) : term1065 A K neut.
Proof. exact (EQ_MP (@lem6399847 A K neut) (@lem6399846 A K neut)). Qed.
Lemma lem6399849 {A K : Type'} (neut : A) (dom : A -> Prop) : term2880 A K neut dom.
Proof. exact (@lem6399848 A K neut dom). Qed.
Lemma lem6399850 {A K : Type'} (dom : A -> Prop) (neut : A) : (term2880 A K neut dom) = (term1061 A K dom neut).
Proof. exact (eq_refl (term2880 A K neut dom)). Qed.
Lemma lem6399851 {A K : Type'} (dom : A -> Prop) (neut : A) : term1061 A K dom neut.
Proof. exact (EQ_MP (@lem6399850 A K dom neut) (@lem6399849 A K neut dom)). Qed.
Lemma lem6399852 {A K : Type'} (dom : A -> Prop) (neut : A) (i : K) : term2881 A K dom neut i.
Proof. exact (@lem6399851 A K dom neut i). Qed.
Lemma lem6399853 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : (term2881 A K dom neut i) = (term1057 A K i dom neut).
Proof. exact (eq_refl (term2881 A K dom neut i)). Qed.
Lemma lem6399854 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) : term1057 A K i dom neut.
Proof. exact (EQ_MP (@lem6399853 A K i dom neut) (@lem6399852 A K dom neut i)). Qed.
Lemma lem6399855 {A K : Type'} (i : K) (dom : A -> Prop) (neut : A) (f : K -> A) : term2882 A K i dom neut f.
Proof. exact (@lem6399854 A K i dom neut f). Qed.
Lemma lem6399856 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2882 A K i dom neut f) = (term1053 A K f i dom neut).
Proof. exact (eq_refl (term2882 A K i dom neut f)). Qed.
Lemma lem6399857 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1053 A K f i dom neut.
Proof. exact (EQ_MP (@lem6399856 A K f i dom neut) (@lem6399855 A K i dom neut f)). Qed.
Lemma lem6399858 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term2883 A K f i dom neut k.
Proof. exact (@lem6399857 A K f i dom neut k). Qed.
Lemma lem6399859 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2883 A K f i dom neut k) = (term1049 A K k f i dom neut).
Proof. exact (eq_refl (term2883 A K f i dom neut k)). Qed.
Lemma lem6399860 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1049 A K k f i dom neut.
Proof. exact (EQ_MP (@lem6399859 A K k f i dom neut) (@lem6399858 A K f i dom neut k)). Qed.
Lemma lem6399861 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term2884 A K k f i dom neut ltle.
Proof. exact (@lem6399860 A K k f i dom neut ltle). Qed.
Lemma lem6399862 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term2884 A K k f i dom neut ltle) = (term1022 A K ltle k f i dom neut).
Proof. exact (eq_refl (term2884 A K k f i dom neut ltle)). Qed.
Lemma lem6399863 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term1022 A K ltle k f i dom neut.
Proof. exact (EQ_MP (@lem6399862 A K ltle k f i dom neut) (@lem6399861 A K k f i dom neut ltle)). Qed.
Lemma lem6399865 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : term848 A K ltle k f i dom neut.
Proof. exact (@lem6382778 A K ltle k f i dom neut (@lem6399863 A K ltle k f i dom neut)). Qed.
Lemma lem6399866 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : term826 A K k f i dom neut.
Proof. exact (@lem6399865 A K ltle k f i dom neut (@lem6380802 A K i ltle k f dom neut h1)). Qed.
Lemma lem6399867 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term827 A K k f i dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : False.
Proof. exact (@lem6399866 A K i ltle k f dom neut h2 (@lem6382444 A K k f i dom neut h1)). Qed.
Lemma lem6399868 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term827 A K k f i dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : (term827 A K k f i dom neut) = False.
Proof. exact (prop_ext (fun h3 : term827 A K k f i dom neut => @lem6399867 A K i ltle k f dom neut h1 h2) (fun h3 : False => @lem6382444 A K k f i dom neut h1)). Qed.
Lemma lem6399869 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term827 A K k f i dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : False.
Proof. exact (EQ_MP (@lem6399868 A K i ltle k f dom neut h1 h2) (@lem6382444 A K k f i dom neut h1)). Qed.
Lemma lem6399870 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : term826 A K k f i dom neut.
Proof. exact (fun h0 : term827 A K k f i dom neut => @lem6399869 A K i ltle k f dom neut h0 h1). Qed.
Lemma lem6399871 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : term825 A K k f i dom neut.
Proof. exact (EQ_MP (@lem6382443 A K k f i dom neut) (@lem6399870 A K i ltle k f dom neut h1)). Qed.
Lemma lem6399872 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : i = (term424 A K ltle k f dom neut)) : term824 A K k f i dom neut.
Proof. exact (EQ_MP (@lem6382439 A K k f i dom neut) (@lem6399871 A K i ltle k f dom neut h1)). Qed.
Lemma lem6399873 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term706 A K k f i dom neut.
Proof. exact (@lem6399872 A K i ltle k f dom neut h2 (@lem6382393 A K k f dom neut h1)). Qed.
Lemma lem6399874 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term808 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6382377 A K i k f dom neut) (@lem6399873 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399875 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term805 A K k i f dom neut.
Proof. exact (EQ_MP (@lem6382345 A K k i f dom neut) (@lem6399874 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399876 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term804 A K k i f dom neut.
Proof. exact (EQ_MP (@lem6382324 A K k i f dom neut) (@lem6399875 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399877 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term633 A K k i f dom neut.
Proof. exact (conj (@lem6382165 A K i k f dom neut) (@lem6399876 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399878 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term632 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6381032 A K i k f dom neut) (@lem6399877 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399879 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term630 A K i k f dom neut.
Proof. exact (EQ_MP (@lem6380983 A K i k f dom neut h1) (@lem6399878 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399881 {A K : Type'} (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term574 A K k f dom neut) (h2 : i = (term424 A K ltle k f dom neut)) : term2885 A K i k f dom neut.
Proof. exact (@lem6380918 A K i k f dom neut (@lem6399879 A K i ltle k f dom neut h1 h2)). Qed.
Lemma lem6399882 {A K : Type'} (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term2886 A K itty k i f dom neut) = (term2886 A K g k i f dom neut).
Proof. exact (@lem6380894 A K i k f dom neut itty g h1 (@lem6399881 A K i ltle k f dom neut h2 h3)). Qed.
Lemma lem6399883 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term618 A K op itty k i f dom neut) = (term618 A K op g k i f dom neut).
Proof. exact (MK_COMB (@lem6380874 A K op f i) (@lem6399882 A K itty g i ltle k f dom neut h1 h2 h3)). Qed.
Lemma lem6399884 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term612 A K op itty k f dom neut i) = (term618 A K op g k i f dom neut).
Proof. exact (EQ_MP (@lem6380873 A K itty op g k i f dom neut) (@lem6399883 A K op itty g i ltle k f dom neut h1 h2 h3)). Qed.
Lemma lem6399885 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i).
Proof. exact (EQ_MP (@lem6380857 A K itty op g k f dom neut i) (@lem6399884 A K op itty g i ltle k f dom neut h1 h2 h3)). Qed.
Lemma lem6399886 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term574 A K k f dom neut) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (prop_ext (fun h4 : term574 A K k f dom neut => @lem6399885 A K op itty g i ltle k f dom neut h1 h2 h3) (fun h4 : (term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i) => @lem6380843 A K k f dom neut h2)). Qed.
Lemma lem6399887 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i).
Proof. exact (EQ_MP (@lem6399886 A K op itty g i ltle k f dom neut h1 h2 h3) (@lem6380843 A K k f dom neut h2)). Qed.
Lemma lem6399888 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term557 A K k f dom neut itty g) = ((term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i)).
Proof. exact (prop_ext (fun h4 : term557 A K k f dom neut itty g => @lem6399887 A K op itty g i ltle k f dom neut h1 h2 h3) (fun h4 : (term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i) => @lem6380829 A K k f dom neut itty g h1)). Qed.
Lemma lem6399889 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term612 A K op itty k f dom neut i) = (term612 A K op g k f dom neut i).
Proof. exact (EQ_MP (@lem6399888 A K op itty g i ltle k f dom neut h1 h2 h3) (@lem6380829 A K k f dom neut itty g h1)). Qed.
Lemma lem6399890 {A K : Type'} (op : type1400 A) (itty : type862 A K) (g : type862 A K) (i : K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) (h3 : i = (term424 A K ltle k f dom neut)) : (term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380815 A K itty op g i ltle k f dom neut h3) (@lem6399889 A K op itty g i ltle k f dom neut h1 h2 h3)). Qed.
Lemma lem6399891 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (itty : type862 A K) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) : (term573 A K op itty ltle k f dom neut) = (term573 A K op g ltle k f dom neut).
Proof. exact (ex_elim (@lem6380800 A K ltle k f dom neut) (fun i : K => fun h0 : term604 A K ltle k f dom neut i => @lem6399890 A K op itty g i ltle k f dom neut h1 h2 h0)). Qed.
Lemma lem6399892 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (itty : type862 A K) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) : (term573 A K op itty ltle k f dom neut) = (term591 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380753 A K itty op g ltle k f dom neut) (@lem6399891 A K op ltle itty g k f dom neut h1 h2)). Qed.
Lemma lem6399893 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : neut = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380632 A K op g ltle k f dom neut h1) (@lem6380775 A K op g ltle k f dom neut)). Qed.
Lemma lem6399894 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : (term594 A K k f dom neut) = (neut = (term493 A K op g ltle k f dom neut)).
Proof. exact (prop_ext (fun h2 : term594 A K k f dom neut => @lem6399893 A K op g ltle k f dom neut h1) (fun h2 : neut = (term493 A K op g ltle k f dom neut) => @lem6380617 A K k f dom neut h1)). Qed.
Lemma lem6399895 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term594 A K k f dom neut) : neut = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6399894 A K op g ltle k f dom neut h1) (@lem6380617 A K k f dom neut h1)). Qed.
Lemma lem6399896 {A K : Type'} (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term578 A K op g ltle k f dom neut.
Proof. exact (fun h0 : term594 A K k f dom neut => @lem6399895 A K op g ltle k f dom neut h0). Qed.
Lemma lem6399897 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (itty : type862 A K) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) : (term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380616 A K itty op g ltle k f dom neut h2) (@lem6399892 A K op ltle itty g k f dom neut h1 h2)). Qed.
Lemma lem6399898 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (itty : type862 A K) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) : (term574 A K k f dom neut) = ((term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (prop_ext (fun h3 : term574 A K k f dom neut => @lem6399897 A K op ltle itty g k f dom neut h1 h2) (fun h3 : (term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut) => @lem6380601 A K k f dom neut h2)). Qed.
Lemma lem6399899 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (itty : type862 A K) (g : type862 A K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : term557 A K k f dom neut itty g) (h2 : term574 A K k f dom neut) : (term573 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6399898 A K op ltle itty g k f dom neut h1 h2) (@lem6380601 A K k f dom neut h2)). Qed.
Lemma lem6399900 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term582 A K itty op g ltle k f dom neut.
Proof. exact (fun h0 : term574 A K k f dom neut => @lem6399899 A K op ltle itty g k f dom neut h1 h0). Qed.
Lemma lem6399901 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : term585 A K itty op g ltle k f dom neut.
Proof. exact (conj (@lem6399900 A K op ltle k f dom neut itty g h1) (@lem6399896 A K op g ltle k f dom neut)). Qed.
Lemma lem6399902 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : (term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6380600 A K itty op g ltle k f dom neut) (@lem6399901 A K op ltle k f dom neut itty g h1)). Qed.
Lemma lem6399903 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : (term557 A K k f dom neut itty g) = ((term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut)).
Proof. exact (prop_ext (fun h2 : term557 A K k f dom neut itty g => @lem6399902 A K op ltle k f dom neut itty g h1) (fun h2 : (term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut) => @lem6380582 A K k f dom neut itty g h1)). Qed.
Lemma lem6399904 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (itty : type862 A K) (g : type862 A K) (h1 : term557 A K k f dom neut itty g) : (term493 A K op itty ltle k f dom neut) = (term493 A K op g ltle k f dom neut).
Proof. exact (EQ_MP (@lem6399903 A K op ltle k f dom neut itty g h1) (@lem6380582 A K k f dom neut itty g h1)). Qed.
Lemma lem6399905 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term559 A K itty op g ltle k f dom neut.
Proof. exact (fun h0 : term557 A K k f dom neut itty g => @lem6399904 A K op ltle k f dom neut itty g h0). Qed.
Lemma lem6399910 {A K : Type'} (itty : type862 A K) (op : type1400 A) (g : type862 A K) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term561 A K itty op g ltle f dom neut.
Proof. exact (fun k : K -> Prop => @lem6399905 A K itty op g ltle k f dom neut). Qed.
Lemma lem6399915 {A K : Type'} (itty : type862 A K) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term563 A K itty op ltle f dom neut.
Proof. exact (fun g : type862 A K => @lem6399910 A K itty op g ltle f dom neut). Qed.
Lemma lem6399920 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term565 A K op ltle f dom neut.
Proof. exact (fun itty : type862 A K => @lem6399915 A K itty op ltle f dom neut). Qed.
Lemma lem6399921 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term510 A K op ltle f dom neut.
Proof. exact (EQ_MP (@lem6380581 A K op ltle f dom neut) (@lem6399920 A K op ltle f dom neut)). Qed.
Lemma lem6399922 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) : term482 A K op ltle f dom neut.
Proof. exact (@lem6380292 A K op ltle f dom neut (@lem6399921 A K op ltle f dom neut)). Qed.
Lemma lem6399927 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term485 A K op ltle dom neut.
Proof. exact (fun f : K -> A => @lem6399922 A K op ltle f dom neut). Qed.
Lemma lem6399928 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term462 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6380247 A K op ltle dom neut) (@lem6399927 A K op ltle dom neut)). Qed.
Lemma lem6399929 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term440 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6380216 A K op ltle dom neut) (@lem6399928 A K op ltle dom neut)). Qed.
Lemma lem6399930 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term381 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6380182 A K op ltle dom neut) (@lem6399929 A K op ltle dom neut)). Qed.
Lemma lem6399931 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term360 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6380004 A K op ltle dom neut) (@lem6399930 A K op ltle dom neut)). Qed.
Lemma lem6399936 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term363 A K op dom neut.
Proof. exact (fun ltle : type1402 K => @lem6399931 A K op ltle dom neut). Qed.
Lemma lem6399941 {A K : Type'} (dom : A -> Prop) (neut : A) : term365 A K dom neut.
Proof. exact (fun op : type1400 A => @lem6399936 A K op dom neut). Qed.
Lemma lem6399946 {A K : Type'} (dom : A -> Prop) : term367 A K dom.
Proof. exact (fun neut : A => @lem6399941 A K dom neut). Qed.
Lemma lem6399951 {A K : Type'} : term369 A K.
Proof. exact (fun dom : A -> Prop => @lem6399946 A K dom). Qed.
Lemma lem6399952 {A K : Type'} : term338 A K.
Proof. exact (EQ_MP (@lem6379987 A K) (@lem6399951 A K)). Qed.
Lemma lem6399953 {A K : Type'} : term309 A K.
Proof. exact (EQ_MP (@lem6379935 A K) (@lem6399952 A K)). Qed.
Lemma lem6399954 {A K : Type'} : term282 A K.
Proof. exact (EQ_MP (@lem6379890 A K) (@lem6399953 A K)). Qed.
Lemma lem6399955 {A K : Type'} : term271 A K.
Proof. exact (EQ_MP (@lem6379852 A K) (@lem6399954 A K)). Qed.
Lemma lem6399956 {A K : Type'} : term2887 A K.
Proof. exact (fun _80078 : type1670 => @lem6399955 A K). Qed.
Lemma lem6399957 {A B : Type'} (P : type1413 A B) : term2888 A B P.
Proof. exact (@lem13546 A B P). Qed.
Lemma lem6399958 {A B : Type'} (P : type1413 A B) : (term2888 A B P) = ((term242 A B P) = (term243 A B P)).
Proof. exact (eq_refl (term2888 A B P)). Qed.
Lemma lem6399961 {A B : Type'} (P : type1413 A B) : (term242 A B P) = (term243 A B P).
Proof. exact (EQ_MP (@lem6399958 A B P) (@lem6399957 A B P)). Qed.
Lemma lem6399962 {A K : Type'} (P : type1251 A K) : (term2889 A K P) = (term2890 A K P).
Proof. exact (@lem6399961 type1670 (type665 A K) P). Qed.
Lemma lem6399963 {A K : Type'} : (term2891 A K) = (term2892 A K).
Proof. exact (@lem6399962 A K (term2893 A K)). Qed.
Lemma lem6399964 {A K : Type'} (_80078 : type1670) : (term2894 A K _80078) = (term270 A K).
Proof. exact (eq_refl (term2894 A K _80078)). Qed.
Lemma lem6399965 {A K : Type'} (itty : type665 A K) : itty = itty.
Proof. exact (eq_refl itty). Qed.
Lemma lem6399966 {A K : Type'} (_80078 : type1670) (itty : type665 A K) : (term2895 A K _80078 itty) = (term2896 A K itty).
Proof. exact (MK_COMB (@lem6399964 A K _80078) (@lem6399965 A K itty)). Qed.
Lemma lem6399967 {A K : Type'} (itty : type665 A K) : (term2896 A K itty) = (term268 A K itty).
Proof. exact (eq_refl (term2896 A K itty)). Qed.
Lemma lem6399968 {A K : Type'} (_80078 : type1670) (itty : type665 A K) : (term2895 A K _80078 itty) = (term268 A K itty).
Proof. exact (TRANS (@lem6399966 A K _80078 itty) (@lem6399967 A K itty)). Qed.
Lemma lem6399969 {A K : Type'} (_80078 : type1670) : (term2897 A K _80078) = (term270 A K).
Proof. exact (fun_ext (fun itty : type665 A K => @lem6399968 A K _80078 itty)). Qed.
Lemma lem6399970 {A K : Type'} : (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6399971 {A K : Type'} (_80078 : type1670) : (term2898 A K _80078) = (term271 A K).
Proof. exact (MK_COMB (@lem6399970 A K) (@lem6399969 A K _80078)). Qed.
Lemma lem6399972 {A K : Type'} : (term2899 A K) = (term2900 A K).
Proof. exact (fun_ext (fun _80078 : type1670 => @lem6399971 A K _80078)). Qed.
Lemma lem6399973 : (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) = (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))))). Qed.
Lemma lem6399974 {A K : Type'} : (term2891 A K) = (term2887 A K).
Proof. exact (MK_COMB (@lem6399973) (@lem6399972 A K)). Qed.
Lemma lem6399975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6399976 {A K : Type'} : (term2901 A K) = (term2902 A K).
Proof. exact (MK_COMB (@lem6399975) (@lem6399974 A K)). Qed.
Lemma lem6399977 {A K : Type'} (_80078 : type1670) : (term2894 A K _80078) = (term270 A K).
Proof. exact (eq_refl (term2894 A K _80078)). Qed.
Lemma lem6399978 {A K : Type'} (itty : type1255 A K) (_80078 : type1670) : (itty _80078) = (itty _80078).
Proof. exact (eq_refl (itty _80078)). Qed.
Lemma lem6399979 {A K : Type'} (itty : type1255 A K) (_80078 : type1670) : (term2903 A K itty _80078) = (term2904 A K itty _80078).
Proof. exact (MK_COMB (@lem6399977 A K _80078) (@lem6399978 A K itty _80078)). Qed.
Lemma lem6399980 {A K : Type'} (itty : type1255 A K) (_80078 : type1670) : (term2904 A K itty _80078) = (term2905 A K itty _80078).
Proof. exact (eq_refl (term2904 A K itty _80078)). Qed.
Lemma lem6399981 {A K : Type'} (itty : type1255 A K) (_80078 : type1670) : (term2903 A K itty _80078) = (term2905 A K itty _80078).
Proof. exact (TRANS (@lem6399979 A K itty _80078) (@lem6399980 A K itty _80078)). Qed.
Lemma lem6399982 {A K : Type'} (itty : type1255 A K) : (term2906 A K itty) = (term2907 A K itty).
Proof. exact (fun_ext (fun _80078 : type1670 => @lem6399981 A K itty _80078)). Qed.
Lemma lem6399983 : (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) = (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))))). Qed.
Lemma lem6399984 {A K : Type'} (itty : type1255 A K) : (term2908 A K itty) = (term2909 A K itty).
Proof. exact (MK_COMB (@lem6399983) (@lem6399982 A K itty)). Qed.
Lemma lem6399985 {A K : Type'} : (term2910 A K) = (term2911 A K).
Proof. exact (fun_ext (fun itty : type1255 A K => @lem6399984 A K itty)). Qed.
Lemma lem6399986 {A K : Type'} : (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)).
Proof. exact (eq_refl (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A))). Qed.
Lemma lem6399987 {A K : Type'} : (term2892 A K) = (term2912 A K).
Proof. exact (MK_COMB (@lem6399986 A K) (@lem6399985 A K)). Qed.
Lemma lem6399988 {A K : Type'} : ((term2891 A K) = (term2892 A K)) = ((term2887 A K) = (term2912 A K)).
Proof. exact (MK_COMB (@lem6399976 A K) (@lem6399987 A K)). Qed.
Lemma lem6399989 {A K : Type'} : (term2887 A K) = (term2912 A K).
Proof. exact (EQ_MP (@lem6399988 A K) (@lem6399963 A K)). Qed.
Lemma lem6399990 {A K : Type'} : term2912 A K.
Proof. exact (EQ_MP (@lem6399989 A K) (@lem6399956 A K)). Qed.
Lemma lem6399992 {A : Type'} : (@ex A) = (term2913 A).
Proof. exact (@lem9261 A (@lem9306 A)). Qed.
Lemma lem6399993 {A K : Type'} : (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (A -> Prop) -> A -> (A -> A -> A) -> (K -> K -> Prop) -> (K -> Prop) -> (K -> A) -> A)) = (term2914 A K).
Proof. exact (@lem6399992 (type1255 A K)). Qed.
Lemma lem6399994 {A K : Type'} : (term2911 A K) = (term2911 A K).
Proof. exact (eq_refl (term2911 A K)). Qed.
Lemma lem6399995 {A K : Type'} : (term2912 A K) = (term2915 A K).
Proof. exact (MK_COMB (@lem6399993 A K) (@lem6399994 A K)). Qed.
Lemma lem6399996 {A K : Type'} : (term2915 A K) = (term2916 A K).
Proof. exact (eq_refl (term2915 A K)). Qed.
Lemma lem6399997 {A K : Type'} : (term2912 A K) = (term2916 A K).
Proof. exact (TRANS (@lem6399995 A K) (@lem6399996 A K)). Qed.
Lemma lem6399998 {A K : Type'} : term2916 A K.
Proof. exact (EQ_MP (@lem6399997 A K) (@lem6399990 A K)). Qed.
