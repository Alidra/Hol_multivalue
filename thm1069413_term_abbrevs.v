Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term6 (a0 : Type') := ((@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)) = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0))) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term11 (a0 : Type') := ((fun y0 : a0 => @CONSTR a0 (S (NUMERAL 0)) y0 (fun y1 : nat => @BOTTOM a0)) = (fun y0 : a0 => @CONSTR a0 (S (NUMERAL 0)) y0 (fun y1 : nat => @BOTTOM a0))) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term10 (a0 : Type') (x0 : type1432 a0) := (x0 = (fun y0 : a0 => @CONSTR a0 (S (NUMERAL 0)) y0 (fun y1 : nat => @BOTTOM a0))) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term0 (a0 : Type') := fun y0 : a0 => @CONSTR a0 (S (NUMERAL 0)) y0 (fun y1 : nat => @BOTTOM a0).
Definition term7 (a0 : Type') := (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term3 (a0 : Type') (x0 : recspace a0) := (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) x0.
Definition term9 (a0 : Type') (x0 : type1432 a0) := ((fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = (x0 y3))) -> y1 y2) -> y1 y0) = (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = (x0 y3))) -> y1 y2) -> y1 y0)) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term8 (a0 : Type') (x0 : type1338 a0) (x1 : type1432 a0) := (x0 = (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = (x1 y3))) -> y1 y2) -> y1 y0)) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0)).
Definition term5 (a0 : Type') (x0 : type1432 a0) := fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = (x0 y3))) -> y1 y2) -> y1 y0.
Definition term1 (a0 : Type') (x0 : recspace a0) (x1 : type1432 a0) := fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = x0) \/ (exists y3 : a0, y2 = (x1 y3))) -> y1 y2) -> y1 y0.
Definition term2 (a0 : Type') := @CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0).
Definition term4 (a0 : Type') (x0 : recspace a0) := (x0 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y0 : a0 => True)) (fun y0 : nat => @BOTTOM a0))) -> (fun y0 : recspace a0 => forall y1 : type1338 a0, (forall y2 : recspace a0, ((y2 = (@CONSTR a0 (NUMERAL 0) (@ε a0 (fun y3 : a0 => True)) (fun y3 : nat => @BOTTOM a0))) \/ (exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR a0 (S (NUMERAL 0)) y4 (fun y5 : nat => @BOTTOM a0)) y3))) -> y1 y2) -> y1 y0) x0.
