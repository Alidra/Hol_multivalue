Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import SUPERADMISSIBLE_MATCH_GUARDED_PATTERN_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import GEQ_DEF_spec.
Require Import admissible_spec.
Require Import superadmissible_spec.
Require Import tailadmissible_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16457_spec.
Require Import thm16458_spec.
Require Import thm16471_spec.
Require Import thm16473_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1821_spec.
Require Import thm1832_spec.
Require Import thm18392_spec.
Require Import thm18393_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18897_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18940_spec.
Require Import thm18941_spec.
Require Import thm18946_spec.
Require Import thm18947_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm19732_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21741_spec.
Require Import thm4211_spec.
Require Import thm51_spec.
Require Import thm7_spec.
Lemma lem8321060 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8321061 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8321062 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8321061 t1) (@lem8321060 t1)). Qed.
Lemma lem8321063 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8321062 t1 t2). Qed.
Lemma lem8321064 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8321065 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8321064 t1 t2) (@lem8321063 t1 t2)). Qed.
Lemma lem8321066 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8321065 t1 t2 t3). Qed.
Lemma lem8321067 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8321068 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8321067 t1 t2 t3) (@lem8321066 t1 t2 t3)). Qed.
Lemma lem8321069 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8321068 t1 t2 t3)). Qed.
Lemma lem8321070 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term7 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (@lem8093231 _143449 _143452 _143456 _143457 _143462 p). Qed.
Lemma lem8321071 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : (term7 _143449 _143452 _143456 _143457 _143462 p) = (term8 _143449 _143452 _143456 _143457 _143462 p).
Proof. exact (eq_refl (term7 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8321072 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term8 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (EQ_MP (@lem8321071 _143449 _143452 _143456 _143457 _143462 p) (@lem8321070 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8321073 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term9 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (@lem8321072 _143449 _143452 _143456 _143457 _143462 p lt2). Qed.
Lemma lem8321074 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : (term9 _143449 _143452 _143456 _143457 _143462 p lt2) = (term10 _143449 _143452 _143456 _143457 _143462 p lt2).
Proof. exact (eq_refl (term9 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8321075 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term10 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (EQ_MP (@lem8321074 _143449 _143452 _143456 _143457 _143462 p lt2) (@lem8321073 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8321076 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term11 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (@lem8321075 _143449 _143452 _143456 _143457 _143462 p lt2 s). Qed.
Lemma lem8321077 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : (term11 _143449 _143452 _143456 _143457 _143462 p lt2 s) = (term12 _143449 _143452 _143456 _143457 _143462 p lt2 s).
Proof. exact (eq_refl (term11 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8321078 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term12 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (EQ_MP (@lem8321077 _143449 _143452 _143456 _143457 _143462 p lt2 s) (@lem8321076 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8321079 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : term13 _143449 _143452 _143456 _143457 _143462 p lt2 s t.
Proof. exact (@lem8321078 _143449 _143452 _143456 _143457 _143462 p lt2 s t). Qed.
Lemma lem8321080 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (term13 _143449 _143452 _143456 _143457 _143462 p lt2 s t) = ((@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term14 _143449 _143452 _143456 _143457 _143462 p lt2 s t)).
Proof. exact (eq_refl (term13 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8321082 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8321083 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8321084 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8321083 t1) (@lem8321082 t1)). Qed.
Lemma lem8321085 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8321084 t1 t2). Qed.
Lemma lem8321086 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8321087 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8321086 t1 t2) (@lem8321085 t1 t2)). Qed.
Lemma lem8321088 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8321087 t1 t2 t3). Qed.
Lemma lem8321089 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8321090 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8321089 t1 t2 t3) (@lem8321088 t1 t2 t3)). Qed.
Lemma lem8321091 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8321090 t1 t2 t3)). Qed.
Lemma lem8321092 {A B P : Type'} (lt2 : type1402 A) : term15 A B P lt2.
Proof. exact (@lem8094644 A B P lt2). Qed.
Lemma lem8321093 {A B P : Type'} (lt2 : type1402 A) : (term15 A B P lt2) = (term16 A B P lt2).
Proof. exact (eq_refl (term15 A B P lt2)). Qed.
Lemma lem8321094 {A B P : Type'} (lt2 : type1402 A) : term16 A B P lt2.
Proof. exact (EQ_MP (@lem8321093 A B P lt2) (@lem8321092 A B P lt2)). Qed.
Lemma lem8321095 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term17 A B P lt2 s.
Proof. exact (@lem8321094 A B P lt2 s). Qed.
Lemma lem8321096 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term17 A B P lt2 s) = (term18 A B P lt2 s).
Proof. exact (eq_refl (term17 A B P lt2 s)). Qed.
Lemma lem8321097 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term18 A B P lt2 s.
Proof. exact (EQ_MP (@lem8321096 A B P lt2 s) (@lem8321095 A B P lt2 s)). Qed.
Lemma lem8321098 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : term19 A B P lt2 s p.
Proof. exact (@lem8321097 A B P lt2 s p). Qed.
Lemma lem8321099 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term19 A B P lt2 s p) = (term20 A B P lt2 s p).
Proof. exact (eq_refl (term19 A B P lt2 s p)). Qed.
Lemma lem8321100 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : term20 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8321099 A B P lt2 s p) (@lem8321098 A B P lt2 s p)). Qed.
Lemma lem8321101 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : term21 A B P lt2 s p t.
Proof. exact (@lem8321100 A B P lt2 s p t). Qed.
Lemma lem8321102 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (term21 A B P lt2 s p t) = ((@tailadmissible A B P lt2 p s t) = (term22 A B P lt2 s p t)).
Proof. exact (eq_refl (term21 A B P lt2 s p t)). Qed.
Lemma lem8321104 {A : Type'} (a : A) : term23 A a.
Proof. exact (@lem44156 A a). Qed.
Lemma lem8321105 {A : Type'} (a : A) : (term23 A a) = (term24 A a).
Proof. exact (eq_refl (term23 A a)). Qed.
Lemma lem8321106 {A : Type'} (a : A) : term24 A a.
Proof. exact (EQ_MP (@lem8321105 A a) (@lem8321104 A a)). Qed.
Lemma lem8321107 {A : Type'} (a : A) (b : A) : term25 A a b.
Proof. exact (@lem8321106 A a b). Qed.
Lemma lem8321108 {A : Type'} (a : A) (b : A) : (term25 A a b) = ((@GEQ A a b) = (a = b)).
Proof. exact (eq_refl (term25 A a b)). Qed.
Lemma lem8321110 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : term26 _143606 _143608 _143614 lt2.
Proof. exact (@lem8096071 _143606 _143608 _143614 lt2). Qed.
Lemma lem8321111 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : (term26 _143606 _143608 _143614 lt2) = (term27 _143606 _143608 _143614 lt2).
Proof. exact (eq_refl (term26 _143606 _143608 _143614 lt2)). Qed.
Lemma lem8321112 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : term27 _143606 _143608 _143614 lt2.
Proof. exact (EQ_MP (@lem8321111 _143606 _143608 _143614 lt2) (@lem8321110 _143606 _143608 _143614 lt2)). Qed.
Lemma lem8321113 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : term28 _143606 _143608 _143614 lt2 p.
Proof. exact (@lem8321112 _143606 _143608 _143614 lt2 p). Qed.
Lemma lem8321114 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : (term28 _143606 _143608 _143614 lt2 p) = (term29 _143606 _143608 _143614 lt2 p).
Proof. exact (eq_refl (term28 _143606 _143608 _143614 lt2 p)). Qed.
Lemma lem8321115 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : term29 _143606 _143608 _143614 lt2 p.
Proof. exact (EQ_MP (@lem8321114 _143606 _143608 _143614 lt2 p) (@lem8321113 _143606 _143608 _143614 lt2 p)). Qed.
Lemma lem8321116 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : term30 _143606 _143608 _143614 lt2 p s.
Proof. exact (@lem8321115 _143606 _143608 _143614 lt2 p s). Qed.
Lemma lem8321117 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : (term30 _143606 _143608 _143614 lt2 p s) = (term31 _143606 _143608 _143614 lt2 p s).
Proof. exact (eq_refl (term30 _143606 _143608 _143614 lt2 p s)). Qed.
Lemma lem8321118 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : term31 _143606 _143608 _143614 lt2 p s.
Proof. exact (EQ_MP (@lem8321117 _143606 _143608 _143614 lt2 p s) (@lem8321116 _143606 _143608 _143614 lt2 p s)). Qed.
Lemma lem8321119 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : term32 _143606 _143608 _143614 lt2 p s t.
Proof. exact (@lem8321118 _143606 _143608 _143614 lt2 p s t). Qed.
Lemma lem8321120 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (term32 _143606 _143608 _143614 lt2 p s t) = ((@superadmissible _143606 _143608 _143614 lt2 p s t) = (term33 _143606 _143608 _143614 lt2 p s t)).
Proof. exact (eq_refl (term32 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8321122 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term34 A B D P Q p q pat e arg lt2 s) : term34 A B D P Q p q pat e arg lt2 s.
Proof. exact (h1). Qed.
Lemma lem8321123 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term35 A B D P Q p q pat e arg lt2 s.
Proof. exact (h1). Qed.
Lemma lem8321124 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term36 A B D P Q p pat e q arg.
Proof. exact (h1). Qed.
Lemma lem8321126 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (@superadmissible _143606 _143608 _143614 lt2 p s t) = (term33 _143606 _143608 _143614 lt2 p s t).
Proof. exact (EQ_MP (@lem8321120 _143606 _143608 _143614 lt2 p s t) (@lem8321119 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8321127 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (t : type558 A B P) : (@superadmissible A B P lt2 p s t) = (term33 A B P lt2 p s t).
Proof. exact (@lem8321126 A B P lt2 p s t). Qed.
Lemma lem8321128 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term37 A B D P Q lt2 p s e pat q arg) = (term38 A B D P Q lt2 p s e pat q arg).
Proof. exact (@lem8321127 A B P lt2 p s (term39 A B D P Q e pat q arg)). Qed.
Lemma lem8321253 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term38 A B D P Q lt2 p s e pat q arg) = (term37 A B D P Q lt2 p s e pat q arg).
Proof. exact (SYM (@lem8321128 A B D P Q lt2 p s e pat q arg)). Qed.
Lemma lem8321254 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term40 A B P lt2 s p) : term40 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8321374 {_4656 _4660 : Type'} : (@_MATCH _4656 _4660) = (term41 _4656 _4660).
Proof. exact (@_MATCH_def _4656 _4660). Qed.
Lemma lem8321375 {B D : Type'} : (@_MATCH D B) = (term42 B D).
Proof. exact (@lem8321374 D B). Qed.
Lemma lem8321376 {D P : Type'} (e : P -> D) (x : P) : (e x) = (e x).
Proof. exact (eq_refl (e x)). Qed.
Lemma lem8321377 {B D P : Type'} (e : P -> D) (x : P) : (term43 B D P e x) = (term44 B D P e x).
Proof. exact (MK_COMB (@lem8321375 B D) (@lem8321376 D P e x)). Qed.
Lemma lem8321379 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321380 {B D : Type'} (f : type1450 B D) (y : D) : (term46 B D f y) = (f y).
Proof. exact (@lem8321379 D (type743 B D) f y). Qed.
Lemma lem8321381 {B D P : Type'} (e : P -> D) (x : P) : (term47 B D P e x) = (term44 B D P e x).
Proof. exact (@lem8321380 B D (term42 B D) (e x)). Qed.
Lemma lem8321382 {B D : Type'} (e : D) : (term48 B D e) = (term49 B D e).
Proof. exact (eq_refl (term48 B D e)). Qed.
Lemma lem8321383 {B D : Type'} : (term50 B D) = (term42 B D).
Proof. exact (fun_ext (fun e : D => @lem8321382 B D e)). Qed.
Lemma lem8321384 {D P : Type'} (e : P -> D) (x : P) : (e x) = (e x).
Proof. exact (eq_refl (e x)). Qed.
Lemma lem8321385 {B D P : Type'} (e : P -> D) (x : P) : (term47 B D P e x) = (term44 B D P e x).
Proof. exact (MK_COMB (@lem8321383 B D) (@lem8321384 D P e x)). Qed.
Lemma lem8321386 {B D : Type'} : (@eq ((D -> B -> Prop) -> B)) = (@eq ((D -> B -> Prop) -> B)).
Proof. exact (eq_refl (@eq ((D -> B -> Prop) -> B))). Qed.
Lemma lem8321387 {B D P : Type'} (e : P -> D) (x : P) : (term51 B D P e x) = (term52 B D P e x).
Proof. exact (MK_COMB (@lem8321386 B D) (@lem8321385 B D P e x)). Qed.
Lemma lem8321388 {B D P : Type'} (e : P -> D) (x : P) : (term44 B D P e x) = (term53 B D P e x).
Proof. exact (eq_refl (term44 B D P e x)). Qed.
Lemma lem8321389 {B D P : Type'} (e : P -> D) (x : P) : ((term47 B D P e x) = (term44 B D P e x)) = ((term44 B D P e x) = (term53 B D P e x)).
Proof. exact (MK_COMB (@lem8321387 B D P e x) (@lem8321388 B D P e x)). Qed.
Lemma lem8321390 {B D P : Type'} (e : P -> D) (x : P) : (term44 B D P e x) = (term53 B D P e x).
Proof. exact (EQ_MP (@lem8321389 B D P e x) (@lem8321381 B D P e x)). Qed.
Lemma lem8321391 {B D P : Type'} (e : P -> D) (x : P) : (term43 B D P e x) = (term53 B D P e x).
Proof. exact (TRANS (@lem8321377 B D P e x) (@lem8321390 B D P e x)). Qed.
Lemma lem8321397 : _GUARDED_PATTERN = term54.
Proof. exact (@_GUARDED_PATTERN_def). Qed.
Lemma lem8321403 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8321108 A a b) (@lem8321107 A a b)). Qed.
Lemma lem8321404 {D : Type'} (a : D) (b : D) : (@GEQ D a b) = (a = b).
Proof. exact (@lem8321403 D a b). Qed.
Lemma lem8321405 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term55 D Q pat t u) = ((pat t) = u).
Proof. exact (@lem8321404 D (pat t) u). Qed.
Lemma lem8321408 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term56 D Q pat t u) = (term57 D Q pat t u).
Proof. exact (MK_COMB (@lem8321397) (@lem8321405 D Q pat t u)). Qed.
Lemma lem8321410 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321411 (f : type1542) (y : Prop) : (term58 f y) = (f y).
Proof. exact (@lem8321410 Prop type1543 f y). Qed.
Lemma lem8321412 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term59 D Q pat t u) = (term57 D Q pat t u).
Proof. exact (@lem8321411 term54 ((pat t) = u)). Qed.
Lemma lem8321413 (p : Prop) : (term60 p) = (term61 p).
Proof. exact (eq_refl (term60 p)). Qed.
Lemma lem8321414 : term62 = term54.
Proof. exact (fun_ext (fun p : Prop => @lem8321413 p)). Qed.
Lemma lem8321415 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : ((pat t) = u) = ((pat t) = u).
Proof. exact (eq_refl ((pat t) = u)). Qed.
Lemma lem8321416 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term59 D Q pat t u) = (term57 D Q pat t u).
Proof. exact (MK_COMB (@lem8321414) (@lem8321415 D Q pat t u)). Qed.
Lemma lem8321417 : (@eq (Prop -> Prop -> Prop)) = (@eq (Prop -> Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop -> Prop))). Qed.
Lemma lem8321418 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term63 D Q pat t u) = (term64 D Q pat t u).
Proof. exact (MK_COMB (@lem8321417) (@lem8321416 D Q pat t u)). Qed.
Lemma lem8321419 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term57 D Q pat t u) = (term65 D Q pat t u).
Proof. exact (eq_refl (term57 D Q pat t u)). Qed.
Lemma lem8321420 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : ((term59 D Q pat t u) = (term57 D Q pat t u)) = ((term57 D Q pat t u) = (term65 D Q pat t u)).
Proof. exact (MK_COMB (@lem8321418 D Q pat t u) (@lem8321419 D Q pat t u)). Qed.
Lemma lem8321421 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term57 D Q pat t u) = (term65 D Q pat t u).
Proof. exact (EQ_MP (@lem8321420 D Q pat t u) (@lem8321412 D Q pat t u)). Qed.
Lemma lem8321428 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term56 D Q pat t u) = (term65 D Q pat t u).
Proof. exact (TRANS (@lem8321408 D Q pat t u) (@lem8321421 D Q pat t u)). Qed.
Lemma lem8321429 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (q x t) = (q x t).
Proof. exact (eq_refl (q x t)). Qed.
Lemma lem8321430 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term66 D P Q pat u q x t) = (term67 D P Q pat u q x t).
Proof. exact (MK_COMB (@lem8321428 D Q pat t u) (@lem8321429 P Q q x t)). Qed.
Lemma lem8321432 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321433 (f : type1543) (y : Prop) : (term68 f y) = (f y).
Proof. exact (@lem8321432 Prop (Prop -> Prop) f y). Qed.
Lemma lem8321434 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term69 D P Q pat u q x t) = (term67 D P Q pat u q x t).
Proof. exact (@lem8321433 (term65 D Q pat t u) (q x t)). Qed.
Lemma lem8321435 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) (g : Prop) : (term70 D Q pat t u g) = (term71 D Q pat t u g).
Proof. exact (eq_refl (term70 D Q pat t u g)). Qed.
Lemma lem8321436 {D Q : Type'} (pat : Q -> D) (t : Q) (u : D) : (term72 D Q pat t u) = (term65 D Q pat t u).
Proof. exact (fun_ext (fun g : Prop => @lem8321435 D Q pat t u g)). Qed.
Lemma lem8321437 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (q x t) = (q x t).
Proof. exact (eq_refl (q x t)). Qed.
Lemma lem8321438 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term69 D P Q pat u q x t) = (term67 D P Q pat u q x t).
Proof. exact (MK_COMB (@lem8321436 D Q pat t u) (@lem8321437 P Q q x t)). Qed.
Lemma lem8321439 : (@eq (Prop -> Prop)) = (@eq (Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop))). Qed.
Lemma lem8321440 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term73 D P Q pat u q x t) = (term74 D P Q pat u q x t).
Proof. exact (MK_COMB (@lem8321439) (@lem8321438 D P Q pat u q x t)). Qed.
Lemma lem8321441 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term67 D P Q pat u q x t) = (term75 D P Q pat u q x t).
Proof. exact (eq_refl (term67 D P Q pat u q x t)). Qed.
Lemma lem8321442 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : ((term69 D P Q pat u q x t) = (term67 D P Q pat u q x t)) = ((term67 D P Q pat u q x t) = (term75 D P Q pat u q x t)).
Proof. exact (MK_COMB (@lem8321440 D P Q pat u q x t) (@lem8321441 D P Q pat u q x t)). Qed.
Lemma lem8321443 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term67 D P Q pat u q x t) = (term75 D P Q pat u q x t).
Proof. exact (EQ_MP (@lem8321442 D P Q pat u q x t) (@lem8321434 D P Q pat u q x t)). Qed.
Lemma lem8321450 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term66 D P Q pat u q x t) = (term75 D P Q pat u q x t).
Proof. exact (TRANS (@lem8321430 D P Q pat u q x t) (@lem8321443 D P Q pat u q x t)). Qed.
Lemma lem8321452 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8321108 A a b) (@lem8321107 A a b)). Qed.
Lemma lem8321453 {B : Type'} (a : B) (b : B) : (@GEQ B a b) = (a = b).
Proof. exact (@lem8321452 B a b). Qed.
Lemma lem8321454 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term76 A B P Q f arg x t v) = ((term77 A B P Q f arg x t) = v).
Proof. exact (@lem8321453 B (term77 A B P Q f arg x t) v). Qed.
Lemma lem8321457 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term78 A B D P Q pat u q f arg x t v) = (term79 A B D P Q pat u q f arg x t v).
Proof. exact (MK_COMB (@lem8321450 D P Q pat u q x t) (@lem8321454 A B P Q f arg x t v)). Qed.
Lemma lem8321459 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321460 (f : Prop -> Prop) (y : Prop) : (term80 f y) = (f y).
Proof. exact (@lem8321459 Prop Prop f y). Qed.
Lemma lem8321461 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term81 A B D P Q pat u q f arg x t v) = (term79 A B D P Q pat u q f arg x t v).
Proof. exact (@lem8321460 (term75 D P Q pat u q x t) ((term77 A B P Q f arg x t) = v)). Qed.
Lemma lem8321462 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) (r : Prop) : (term82 D P Q pat u q x t r) = (term83 D P Q pat u q x t r).
Proof. exact (eq_refl (term82 D P Q pat u q x t r)). Qed.
Lemma lem8321463 {D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (x : P) (t : Q) : (term84 D P Q pat u q x t) = (term75 D P Q pat u q x t).
Proof. exact (fun_ext (fun r : Prop => @lem8321462 D P Q pat u q x t r)). Qed.
Lemma lem8321464 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term77 A B P Q f arg x t) = v) = ((term77 A B P Q f arg x t) = v).
Proof. exact (eq_refl ((term77 A B P Q f arg x t) = v)). Qed.
Lemma lem8321465 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term81 A B D P Q pat u q f arg x t v) = (term79 A B D P Q pat u q f arg x t v).
Proof. exact (MK_COMB (@lem8321463 D P Q pat u q x t) (@lem8321464 A B P Q f arg x t v)). Qed.
Lemma lem8321466 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8321467 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term85 A B D P Q pat u q f arg x t v) = (term86 A B D P Q pat u q f arg x t v).
Proof. exact (MK_COMB (@lem8321466) (@lem8321465 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321468 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term79 A B D P Q pat u q f arg x t v) = (term87 A B D P Q pat u q f arg x t v).
Proof. exact (eq_refl (term79 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321469 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term81 A B D P Q pat u q f arg x t v) = (term79 A B D P Q pat u q f arg x t v)) = ((term79 A B D P Q pat u q f arg x t v) = (term87 A B D P Q pat u q f arg x t v)).
Proof. exact (MK_COMB (@lem8321467 A B D P Q pat u q f arg x t v) (@lem8321468 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321470 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term79 A B D P Q pat u q f arg x t v) = (term87 A B D P Q pat u q f arg x t v).
Proof. exact (EQ_MP (@lem8321469 A B D P Q pat u q f arg x t v) (@lem8321461 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321479 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term78 A B D P Q pat u q f arg x t v) = (term87 A B D P Q pat u q f arg x t v).
Proof. exact (TRANS (@lem8321457 A B D P Q pat u q f arg x t v) (@lem8321470 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321480 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term88 A B D P Q pat u q f arg x v) = (term89 A B D P Q pat u q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8321479 A B D P Q pat u q f arg x t v)). Qed.
Lemma lem8321481 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8321482 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term90 A B D P Q pat u q f arg x v) = (term91 A B D P Q pat u q f arg x v).
Proof. exact (MK_COMB (@lem8321481 Q) (@lem8321480 A B D P Q pat u q f arg x v)). Qed.
Lemma lem8321487 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term92 A B D P Q pat u q f arg x) = (term93 A B D P Q pat u q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8321482 A B D P Q pat u q f arg x v)). Qed.
Lemma lem8321488 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term94 A B D P Q pat q f arg x) = (term95 A B D P Q pat q f arg x).
Proof. exact (fun_ext (fun u : D => @lem8321487 A B D P Q pat u q f arg x)). Qed.
Lemma lem8321489 {A B D P Q : Type'} (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term96 A B D P Q e pat q f arg x) = (term97 A B D P Q e pat q f arg x).
Proof. exact (MK_COMB (@lem8321391 B D P e x) (@lem8321488 A B D P Q pat q f arg x)). Qed.
Lemma lem8321491 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321492 {B D : Type'} (f : type743 B D) (y : type1470 B D) : (term98 B D f y) = (f y).
Proof. exact (@lem8321491 (type1470 B D) B f y). Qed.
Lemma lem8321493 {A B D P Q : Type'} (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term99 A B D P Q e pat q f arg x) = (term97 A B D P Q e pat q f arg x).
Proof. exact (@lem8321492 B D (term53 B D P e x) (term95 A B D P Q pat q f arg x)). Qed.
Lemma lem8321494 {B D P : Type'} (r : type1470 B D) (e : P -> D) (x : P) : (term100 B D P e x r) = (term101 B D P r e x).
Proof. exact (eq_refl (term100 B D P e x r)). Qed.
Lemma lem8321495 {B D P : Type'} (e : P -> D) (x : P) : (term102 B D P e x) = (term53 B D P e x).
Proof. exact (fun_ext (fun r : type1470 B D => @lem8321494 B D P r e x)). Qed.
Lemma lem8321496 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term95 A B D P Q pat q f arg x) = (term95 A B D P Q pat q f arg x).
Proof. exact (eq_refl (term95 A B D P Q pat q f arg x)). Qed.
Lemma lem8321497 {A B D P Q : Type'} (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term99 A B D P Q e pat q f arg x) = (term97 A B D P Q e pat q f arg x).
Proof. exact (MK_COMB (@lem8321495 B D P e x) (@lem8321496 A B D P Q pat q f arg x)). Qed.
Lemma lem8321498 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8321499 {A B D P Q : Type'} (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term103 A B D P Q e pat q f arg x) = (term104 A B D P Q e pat q f arg x).
Proof. exact (MK_COMB (@lem8321498 B) (@lem8321497 A B D P Q e pat q f arg x)). Qed.
Lemma lem8321500 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term97 A B D P Q e pat q f arg x) = (term105 A B D P Q pat q f arg e x).
Proof. exact (eq_refl (term97 A B D P Q e pat q f arg x)). Qed.
Lemma lem8321501 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : ((term99 A B D P Q e pat q f arg x) = (term97 A B D P Q e pat q f arg x)) = ((term97 A B D P Q e pat q f arg x) = (term105 A B D P Q pat q f arg e x)).
Proof. exact (MK_COMB (@lem8321499 A B D P Q e pat q f arg x) (@lem8321500 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321502 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term97 A B D P Q e pat q f arg x) = (term105 A B D P Q pat q f arg e x).
Proof. exact (EQ_MP (@lem8321501 A B D P Q pat q f arg e x) (@lem8321493 A B D P Q e pat q f arg x)). Qed.
Lemma lem8321504 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321505 {B D : Type'} (f : type1470 B D) (y : D) : (term106 B D f y) = (f y).
Proof. exact (@lem8321504 D (B -> Prop) f y). Qed.
Lemma lem8321506 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x).
Proof. exact (@lem8321505 B D (term95 A B D P Q pat q f arg x) (e x)). Qed.
Lemma lem8321507 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term109 A B D P Q pat q f arg x u) = (term93 A B D P Q pat u q f arg x).
Proof. exact (eq_refl (term109 A B D P Q pat q f arg x u)). Qed.
Lemma lem8321508 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term110 A B D P Q pat q f arg x) = (term95 A B D P Q pat q f arg x).
Proof. exact (fun_ext (fun u : D => @lem8321507 A B D P Q pat u q f arg x)). Qed.
Lemma lem8321509 {D P : Type'} (e : P -> D) (x : P) : (e x) = (e x).
Proof. exact (eq_refl (e x)). Qed.
Lemma lem8321510 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x).
Proof. exact (MK_COMB (@lem8321508 A B D P Q pat q f arg x) (@lem8321509 D P e x)). Qed.
Lemma lem8321511 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem8321512 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term111 A B D P Q pat q f arg e x) = (term112 A B D P Q pat q f arg e x).
Proof. exact (MK_COMB (@lem8321511 B) (@lem8321510 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321513 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term108 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321514 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : ((term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x)) = ((term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x)).
Proof. exact (MK_COMB (@lem8321512 A B D P Q pat q f arg e x) (@lem8321513 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321515 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (EQ_MP (@lem8321514 A B D P Q pat e q f arg x) (@lem8321506 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321528 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem8321529 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term114 A B D P Q pat q f arg e x) = (term115 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8321528 B) (@lem8321515 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321530 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8321531 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term116 A B D P Q pat q f arg e x) = (term117 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8321530 B) (@lem8321529 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321533 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321534 {B D : Type'} (f : type1470 B D) (y : D) : (term106 B D f y) = (f y).
Proof. exact (@lem8321533 D (B -> Prop) f y). Qed.
Lemma lem8321535 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x).
Proof. exact (@lem8321534 B D (term95 A B D P Q pat q f arg x) (e x)). Qed.
Lemma lem8321536 {A B D P Q : Type'} (pat : Q -> D) (u : D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term109 A B D P Q pat q f arg x u) = (term93 A B D P Q pat u q f arg x).
Proof. exact (eq_refl (term109 A B D P Q pat q f arg x u)). Qed.
Lemma lem8321537 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term110 A B D P Q pat q f arg x) = (term95 A B D P Q pat q f arg x).
Proof. exact (fun_ext (fun u : D => @lem8321536 A B D P Q pat u q f arg x)). Qed.
Lemma lem8321538 {D P : Type'} (e : P -> D) (x : P) : (e x) = (e x).
Proof. exact (eq_refl (e x)). Qed.
Lemma lem8321539 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x).
Proof. exact (MK_COMB (@lem8321537 A B D P Q pat q f arg x) (@lem8321538 D P e x)). Qed.
Lemma lem8321540 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem8321541 {A B D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (x : P) : (term111 A B D P Q pat q f arg e x) = (term112 A B D P Q pat q f arg e x).
Proof. exact (MK_COMB (@lem8321540 B) (@lem8321539 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321542 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term108 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321543 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : ((term107 A B D P Q pat q f arg e x) = (term108 A B D P Q pat q f arg e x)) = ((term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x)).
Proof. exact (MK_COMB (@lem8321541 A B D P Q pat q f arg e x) (@lem8321542 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321544 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term108 A B D P Q pat q f arg e x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (EQ_MP (@lem8321543 A B D P Q pat e q f arg x) (@lem8321535 A B D P Q pat q f arg e x)). Qed.
Lemma lem8321557 {B : Type'} : (@ε B) = (@ε B).
Proof. exact (eq_refl (@ε B)). Qed.
Lemma lem8321558 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term118 A B D P Q pat q f arg e x) = (term119 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8321557 B) (@lem8321544 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321559 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term120 A B D P Q pat q f arg e x) = (term121 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8321531 A B D P Q pat e q f arg x) (@lem8321558 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321560 {B : Type'} : (term122 B) = (term122 B).
Proof. exact (eq_refl (term122 B)). Qed.
Lemma lem8321561 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term105 A B D P Q pat q f arg e x) = (term123 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8321559 A B D P Q pat e q f arg x) (@lem8321560 B)). Qed.
Lemma lem8321562 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term97 A B D P Q e pat q f arg x) = (term123 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8321502 A B D P Q pat q f arg e x) (@lem8321561 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321563 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term96 A B D P Q e pat q f arg x) = (term123 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8321489 A B D P Q e pat q f arg x) (@lem8321562 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321564 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term124 A B D P Q e pat q f arg) = (term125 A B D P Q pat e q f arg).
Proof. exact (fun_ext (fun x : P => @lem8321563 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321565 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term39 A B D P Q e pat q arg) = (term126 A B D P Q pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8321564 A B D P Q pat e q f arg)). Qed.
Lemma lem8321566 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) : (@tailadmissible A B P lt2 p s) = (@tailadmissible A B P lt2 p s).
Proof. exact (eq_refl (@tailadmissible A B P lt2 p s)). Qed.
Lemma lem8321567 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term127 A B D P Q lt2 p s e pat q arg) = (term128 A B D P Q lt2 p s pat e q arg).
Proof. exact (MK_COMB (@lem8321566 A B P lt2 p s) (@lem8321565 A B D P Q pat e q arg)). Qed.
Lemma lem8321568 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term128 A B D P Q lt2 p s pat e q arg) = (term127 A B D P Q lt2 p s e pat q arg).
Proof. exact (SYM (@lem8321567 A B D P Q lt2 p s pat e q arg)). Qed.
Lemma lem8321570 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term22 A B P lt2 s p t).
Proof. exact (EQ_MP (@lem8321102 A B P lt2 s p t) (@lem8321101 A B P lt2 s p t)). Qed.
Lemma lem8321571 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term22 A B P lt2 s p t).
Proof. exact (@lem8321570 A B P lt2 s p t). Qed.
Lemma lem8321572 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term128 A B D P Q lt2 p s pat e q arg) = (term129 A B D P Q lt2 s p pat e q arg).
Proof. exact (@lem8321571 A B P lt2 s p (term126 A B D P Q pat e q arg)). Qed.
Lemma lem8321650 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321651 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term130 A B P f y) = (f y).
Proof. exact (@lem8321650 (A -> B) (P -> B) f y). Qed.
Lemma lem8321652 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (f : A -> B) : (term131 A B D P Q pat e q arg f) = (term132 A B D P Q pat e q arg f).
Proof. exact (@lem8321651 A B P (term126 A B D P Q pat e q arg) f). Qed.
Lemma lem8321653 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term132 A B D P Q pat e q arg f) = (term125 A B D P Q pat e q f arg).
Proof. exact (eq_refl (term132 A B D P Q pat e q arg f)). Qed.
Lemma lem8321654 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term133 A B D P Q pat e q arg) = (term126 A B D P Q pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8321653 A B D P Q pat e q f arg)). Qed.
Lemma lem8321655 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8321656 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (f : A -> B) : (term131 A B D P Q pat e q arg f) = (term132 A B D P Q pat e q arg f).
Proof. exact (MK_COMB (@lem8321654 A B D P Q pat e q arg) (@lem8321655 A B f)). Qed.
Lemma lem8321657 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8321658 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (f : A -> B) : (term134 A B D P Q pat e q arg f) = (term135 A B D P Q pat e q arg f).
Proof. exact (MK_COMB (@lem8321657 B P) (@lem8321656 A B D P Q pat e q arg f)). Qed.
Lemma lem8321659 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term132 A B D P Q pat e q arg f) = (term125 A B D P Q pat e q f arg).
Proof. exact (eq_refl (term132 A B D P Q pat e q arg f)). Qed.
Lemma lem8321660 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : ((term131 A B D P Q pat e q arg f) = (term132 A B D P Q pat e q arg f)) = ((term132 A B D P Q pat e q arg f) = (term125 A B D P Q pat e q f arg)).
Proof. exact (MK_COMB (@lem8321658 A B D P Q pat e q arg f) (@lem8321659 A B D P Q pat e q f arg)). Qed.
Lemma lem8321661 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term132 A B D P Q pat e q arg f) = (term125 A B D P Q pat e q f arg).
Proof. exact (EQ_MP (@lem8321660 A B D P Q pat e q f arg) (@lem8321652 A B D P Q pat e q arg f)). Qed.
Lemma lem8321686 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8321687 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term136 A B D P Q pat e q arg f a) = (term137 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8321661 A B D P Q pat e q f arg) (@lem8321686 P a)). Qed.
Lemma lem8321689 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8321690 {B P : Type'} (f : P -> B) (y : P) : (term138 B P f y) = (f y).
Proof. exact (@lem8321689 P B f y). Qed.
Lemma lem8321691 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term139 A B D P Q pat e q f arg a) = (term137 A B D P Q pat e q f arg a).
Proof. exact (@lem8321690 B P (term125 A B D P Q pat e q f arg) a). Qed.
Lemma lem8321692 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term137 A B D P Q pat e q f arg x) = (term123 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term137 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321693 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term140 A B D P Q pat e q f arg) = (term125 A B D P Q pat e q f arg).
Proof. exact (fun_ext (fun x : P => @lem8321692 A B D P Q pat e q f arg x)). Qed.
Lemma lem8321694 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8321695 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term139 A B D P Q pat e q f arg a) = (term137 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8321693 A B D P Q pat e q f arg) (@lem8321694 P a)). Qed.
Lemma lem8321696 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8321697 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term141 A B D P Q pat e q f arg a) = (term142 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8321696 B) (@lem8321695 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321698 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term137 A B D P Q pat e q f arg a) = (term123 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term137 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321699 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term139 A B D P Q pat e q f arg a) = (term137 A B D P Q pat e q f arg a)) = ((term137 A B D P Q pat e q f arg a) = (term123 A B D P Q pat e q f arg a)).
Proof. exact (MK_COMB (@lem8321697 A B D P Q pat e q f arg a) (@lem8321698 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321700 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term137 A B D P Q pat e q f arg a) = (term123 A B D P Q pat e q f arg a).
Proof. exact (EQ_MP (@lem8321699 A B D P Q pat e q f arg a) (@lem8321691 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321725 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term136 A B D P Q pat e q arg f a) = (term123 A B D P Q pat e q f arg a).
Proof. exact (TRANS (@lem8321687 A B D P Q pat e q f arg a) (@lem8321700 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321726 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8321727 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term143 A B D P Q pat e q arg f a) = (term144 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8321726 B) (@lem8321725 A B D P Q pat e q f arg a)). Qed.
Lemma lem8321728 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term145 A B P P' G H f a) = (term145 A B P P' G H f a).
Proof. exact (eq_refl (term145 A B P P' G H f a)). Qed.
Lemma lem8321729 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : ((term136 A B D P Q pat e q arg f a) = (term145 A B P P' G H f a)) = ((term123 A B D P Q pat e q f arg a) = (term145 A B P P' G H f a)).
Proof. exact (MK_COMB (@lem8321727 A B D P Q pat e q f arg a) (@lem8321728 A B P P' G H f a)). Qed.
Lemma lem8321732 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8321733 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term147 A B D P Q p pat e q arg P' G H f a) = (term148 A B D P Q p pat e q arg P' G H f a).
Proof. exact (MK_COMB (@lem8321732 A B P p f a) (@lem8321729 A B D P Q pat e q arg P' G H f a)). Qed.
Lemma lem8321736 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term149 A B D P Q p pat e q arg P' G H f) = (term150 A B D P Q p pat e q arg P' G H f).
Proof. exact (fun_ext (fun a : P => @lem8321733 A B D P Q p pat e q arg P' G H f a)). Qed.
Lemma lem8321737 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8321738 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term151 A B D P Q p pat e q arg P' G H f) = (term152 A B D P Q p pat e q arg P' G H f).
Proof. exact (MK_COMB (@lem8321737 P) (@lem8321736 A B D P Q p pat e q arg P' G H f)). Qed.
Lemma lem8321743 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term153 A B D P Q p pat e q arg P' G H) = (term154 A B D P Q p pat e q arg P' G H).
Proof. exact (fun_ext (fun f : A -> B => @lem8321738 A B D P Q p pat e q arg P' G H f)). Qed.
Lemma lem8321744 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8321745 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term155 A B D P Q p pat e q arg P' G H) = (term156 A B D P Q p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8321744 A B) (@lem8321743 A B D P Q p pat e q arg P' G H)). Qed.
Lemma lem8321750 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term157 A B P lt2 s P' G H) = (term157 A B P lt2 s P' G H).
Proof. exact (eq_refl (term157 A B P lt2 s P' G H)). Qed.
Lemma lem8321751 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term158 A B D P Q lt2 s p pat e q arg P' G H) = (term159 A B D P Q lt2 s p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8321750 A B P lt2 s P' G H) (@lem8321745 A B D P Q p pat e q arg P' G H)). Qed.
Lemma lem8321754 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term160 A B P P' G lt2 s) = (term160 A B P P' G lt2 s).
Proof. exact (eq_refl (term160 A B P P' G lt2 s)). Qed.
Lemma lem8321755 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term161 A B D P Q lt2 s p pat e q arg P' G H) = (term162 A B D P Q lt2 s p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8321754 A B P P' G lt2 s) (@lem8321751 A B D P Q lt2 s p pat e q arg P' G H)). Qed.
Lemma lem8321758 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) : (term163 A B D P Q lt2 s p pat e q arg P' G) = (term164 A B D P Q lt2 s p pat e q arg P' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8321755 A B D P Q lt2 s p pat e q arg P' G H)). Qed.
Lemma lem8321759 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8321760 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) : (term165 A B D P Q lt2 s p pat e q arg P' G) = (term166 A B D P Q lt2 s p pat e q arg P' G).
Proof. exact (MK_COMB (@lem8321759 A B P) (@lem8321758 A B D P Q lt2 s p pat e q arg P' G)). Qed.
Lemma lem8321765 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) : (term167 A B D P Q lt2 s p pat e q arg P') = (term168 A B D P Q lt2 s p pat e q arg P').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8321760 A B D P Q lt2 s p pat e q arg P' G)). Qed.
Lemma lem8321766 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8321767 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) : (term169 A B D P Q lt2 s p pat e q arg P') = (term170 A B D P Q lt2 s p pat e q arg P').
Proof. exact (MK_COMB (@lem8321766 A B P) (@lem8321765 A B D P Q lt2 s p pat e q arg P')). Qed.
Lemma lem8321772 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term171 A B D P Q lt2 s p pat e q arg) = (term172 A B D P Q lt2 s p pat e q arg).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8321767 A B D P Q lt2 s p pat e q arg P')). Qed.
Lemma lem8321773 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8321774 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term129 A B D P Q lt2 s p pat e q arg) = (term173 A B D P Q lt2 s p pat e q arg).
Proof. exact (MK_COMB (@lem8321773 A B P) (@lem8321772 A B D P Q lt2 s p pat e q arg)). Qed.
Lemma lem8321779 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term128 A B D P Q lt2 p s pat e q arg) = (term173 A B D P Q lt2 s p pat e q arg).
Proof. exact (TRANS (@lem8321572 A B D P Q lt2 s p pat e q arg) (@lem8321774 A B D P Q lt2 s p pat e q arg)). Qed.
Lemma lem8321780 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term173 A B D P Q lt2 s p pat e q arg) = (term128 A B D P Q lt2 p s pat e q arg).
Proof. exact (SYM (@lem8321779 A B D P Q lt2 s p pat e q arg)). Qed.
Lemma lem8321781 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term174 A B D P Q p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8321782 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term175 A B D P Q p arg pat e q f.
Proof. exact (@lem8321781 A B D P Q p arg pat e q h1 f). Qed.
Lemma lem8321783 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term175 A B D P Q p arg pat e q f) = (term176 A B D P Q p f arg pat e q).
Proof. exact (eq_refl (term175 A B D P Q p arg pat e q f)). Qed.
Lemma lem8321784 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term176 A B D P Q p f arg pat e q.
Proof. exact (EQ_MP (@lem8321783 A B D P Q p f arg pat e q) (@lem8321782 A B D P Q f p arg pat e q h1)). Qed.
Lemma lem8321785 {A B D P Q : Type'} (f : A -> B) (x : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term177 A B D P Q p f arg pat e q x.
Proof. exact (@lem8321784 A B D P Q f p arg pat e q h1 x). Qed.
Lemma lem8321786 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term177 A B D P Q p f arg pat e q x) = (term178 A B D P Q p f arg pat e q x).
Proof. exact (eq_refl (term177 A B D P Q p f arg pat e q x)). Qed.
Lemma lem8321787 {A B D P Q : Type'} (f : A -> B) (x : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term178 A B D P Q p f arg pat e q x.
Proof. exact (EQ_MP (@lem8321786 A B D P Q p f arg pat e q x) (@lem8321785 A B D P Q f x p arg pat e q h1)). Qed.
Lemma lem8321788 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) (h1 : p f x) : p f x.
Proof. exact (h1). Qed.
Lemma lem8321789 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f x) : (term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x).
Proof. exact (@lem8321787 A B D P Q f x p arg pat e q h1 (@lem8321788 A B P p f x h2)). Qed.
Lemma lem8321990 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term180 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem8321991 (p : Prop) (q : Prop) (p' : Prop) : term181 p q p'.
Proof. exact (fun q' : Prop => @lem8321990 p q p' q'). Qed.
Lemma lem8321992 (p : Prop) (q : Prop) : term182 p q.
Proof. exact (fun p' : Prop => @lem8321991 p q p'). Qed.
Lemma lem8321993 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : term183 A B D P Q p pat e q arg P' G H f a.
Proof. exact (@lem8321992 (p f a) ((term123 A B D P Q pat e q f arg a) = (term145 A B P P' G H f a))). Qed.
Lemma lem8321994 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) : term184 A B D P Q p pat e q arg P' G H f a p'.
Proof. exact (@lem8321993 A B D P Q p pat e q arg P' G H f a p'). Qed.
Lemma lem8321995 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) : (term184 A B D P Q p pat e q arg P' G H f a p') = (term185 A B D P Q p pat e q arg P' G H f a p').
Proof. exact (eq_refl (term184 A B D P Q p pat e q arg P' G H f a p')). Qed.
Lemma lem8321996 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) : term185 A B D P Q p pat e q arg P' G H f a p'.
Proof. exact (EQ_MP (@lem8321995 A B D P Q p pat e q arg P' G H f a p') (@lem8321994 A B D P Q p pat e q arg P' G H f a p')). Qed.
Lemma lem8321997 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : term186 A B D P Q p pat e q arg P' G H f a p' q'.
Proof. exact (@lem8321996 A B D P Q p pat e q arg P' G H f a p' q'). Qed.
Lemma lem8321998 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : (term186 A B D P Q p pat e q arg P' G H f a p' q') = (term187 A B D P Q p pat e q arg P' G H f a p' q').
Proof. exact (eq_refl (term186 A B D P Q p pat e q arg P' G H f a p' q')). Qed.
Lemma lem8321999 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : term187 A B D P Q p pat e q arg P' G H f a p' q'.
Proof. exact (EQ_MP (@lem8321998 A B D P Q p pat e q arg P' G H f a p' q') (@lem8321997 A B D P Q p pat e q arg P' G H f a p' q')). Qed.
Lemma lem8322000 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (p f a).
Proof. exact (eq_refl (p f a)). Qed.
Lemma lem8322001 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (q' : Prop) : term188 A B D P Q pat e q arg P' G H p f a q'.
Proof. exact (@lem8321999 A B D P Q p pat e q arg P' G H f a (p f a) q'). Qed.
Lemma lem8322002 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (q' : Prop) : term189 A B D P Q pat e q arg P' G H p f a q'.
Proof. exact (@lem8322001 A B D P Q pat e q arg P' G H p f a q' (@lem8322000 A B P p f a)). Qed.
Lemma lem8322003 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8322004 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = ((p f a) = True).
Proof. exact (@lem7 (p f a)). Qed.
Lemma lem8322009 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term190 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem8322010 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term191 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem8322009 _2963 g t e g' t' e'). Qed.
Lemma lem8322011 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term192 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem8322010 _2963 g t e g' t'). Qed.
Lemma lem8322012 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term193 _2963 g t e.
Proof. exact (fun g' : Prop => @lem8322011 _2963 g t e g'). Qed.
Lemma lem8322013 {B : Type'} (g : Prop) (t : B) (e : B) : term193 B g t e.
Proof. exact (@lem8322012 B g t e). Qed.
Lemma lem8322014 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : term194 A B D P Q pat e q f arg a.
Proof. exact (@lem8322013 B (term115 A B D P Q pat e q f arg a) (term119 A B D P Q pat e q f arg a) (term122 B)). Qed.
Lemma lem8322015 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) : term195 A B D P Q pat e q f arg a g'.
Proof. exact (@lem8322014 A B D P Q pat e q f arg a g'). Qed.
Lemma lem8322016 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) : (term195 A B D P Q pat e q f arg a g') = (term196 A B D P Q pat e q f arg a g').
Proof. exact (eq_refl (term195 A B D P Q pat e q f arg a g')). Qed.
Lemma lem8322017 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) : term196 A B D P Q pat e q f arg a g'.
Proof. exact (EQ_MP (@lem8322016 A B D P Q pat e q f arg a g') (@lem8322015 A B D P Q pat e q f arg a g')). Qed.
Lemma lem8322018 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) : term197 A B D P Q pat e q f arg a g' t'.
Proof. exact (@lem8322017 A B D P Q pat e q f arg a g' t'). Qed.
Lemma lem8322019 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) : (term197 A B D P Q pat e q f arg a g' t') = (term198 A B D P Q pat e q f arg a g' t').
Proof. exact (eq_refl (term197 A B D P Q pat e q f arg a g' t')). Qed.
Lemma lem8322020 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) : term198 A B D P Q pat e q f arg a g' t'.
Proof. exact (EQ_MP (@lem8322019 A B D P Q pat e q f arg a g' t') (@lem8322018 A B D P Q pat e q f arg a g' t')). Qed.
Lemma lem8322021 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) (e' : B) : term199 A B D P Q pat e q f arg a g' t' e'.
Proof. exact (@lem8322020 A B D P Q pat e q f arg a g' t' e'). Qed.
Lemma lem8322022 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) (e' : B) : (term199 A B D P Q pat e q f arg a g' t' e') = (term200 A B D P Q pat e q f arg a g' t' e').
Proof. exact (eq_refl (term199 A B D P Q pat e q f arg a g' t' e')). Qed.
Lemma lem8322023 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (g' : Prop) (t' : B) (e' : B) : term200 A B D P Q pat e q f arg a g' t' e'.
Proof. exact (EQ_MP (@lem8322022 A B D P Q pat e q f arg a g' t' e') (@lem8322021 A B D P Q pat e q f arg a g' t' e')). Qed.
Lemma lem8322025 {A B D P Q : Type'} (f : A -> B) (x : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term178 A B D P Q p f arg pat e q x.
Proof. exact (fun h0 : p f x => @lem8321789 A B D P Q arg pat e q p f x h1 h0). Qed.
Lemma lem8322026 {A B D P Q : Type'} (f : A -> B) (x : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term178 A B D P Q p f arg pat e q x.
Proof. exact (@lem8322025 A B D P Q f x p arg pat e q h1). Qed.
Lemma lem8322027 {A B D P Q : Type'} (f : A -> B) (a : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term178 A B D P Q p f arg pat e q a.
Proof. exact (@lem8322026 A B D P Q f a p arg pat e q h1). Qed.
Lemma lem8322029 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8322004 A B P p f a) (@lem8322003 A B P p f a h1)). Qed.
Lemma lem8322030 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : True = (p f a).
Proof. exact (SYM (@lem8322029 A B P p f a h1)). Qed.
Lemma lem8322031 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : p f a.
Proof. exact (EQ_MP (@lem8322030 A B P p f a h1) (@lem0)). Qed.
Lemma lem8322032 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : (term115 A B D P Q pat e q f arg a) = (term179 D P Q pat e q a).
Proof. exact (@lem8322027 A B D P Q f a p arg pat e q h1 (@lem8322031 A B P p f a h2)). Qed.
Lemma lem8322041 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t' : B) (e' : B) : term201 A B D P Q f arg pat e q a t' e'.
Proof. exact (@lem8322023 A B D P Q pat e q f arg a (term179 D P Q pat e q a) t' e'). Qed.
Lemma lem8322042 {A B D P Q : Type'} (t' : B) (e' : B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : term202 A B D P Q f arg pat e q a t' e'.
Proof. exact (@lem8322041 A B D P Q f arg pat e q a t' e' (@lem8322032 A B D P Q arg pat e q p f a h1 h2)). Qed.
Lemma lem8322058 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term119 A B D P Q pat e q f arg a) = (term119 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term119 A B D P Q pat e q f arg a)). Qed.
Lemma lem8322059 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : term203 A B D P Q pat e q f arg a.
Proof. exact (fun h0 : term179 D P Q pat e q a => @lem8322058 A B D P Q pat e q f arg a). Qed.
Lemma lem8322060 {A B D P Q : Type'} (e' : B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : term204 A B D P Q pat e q f arg a e'.
Proof. exact (@lem8322042 A B D P Q (term119 A B D P Q pat e q f arg a) e' arg pat e q p f a h1 h2). Qed.
Lemma lem8322061 {A B D P Q : Type'} (e' : B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : term205 A B D P Q pat e q f arg a e'.
Proof. exact (@lem8322060 A B D P Q e' arg pat e q p f a h1 h2 (@lem8322059 A B D P Q pat e q f arg a)). Qed.
Lemma lem8322065 {B : Type'} : (term122 B) = (term122 B).
Proof. exact (eq_refl (term122 B)). Qed.
Lemma lem8322066 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term206 B D P Q pat e q a.
Proof. exact (fun h0 : term207 D P Q pat e q a => @lem8322065 B). Qed.
Lemma lem8322067 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : term208 A B D P Q pat e q f arg a.
Proof. exact (@lem8322061 A B D P Q (term122 B) arg pat e q p f a h1 h2). Qed.
Lemma lem8322068 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : (term123 A B D P Q pat e q f arg a) = (term209 A B D P Q pat e q f arg a).
Proof. exact (@lem8322067 A B D P Q arg pat e q p f a h1 h2 (@lem8322066 B D P Q pat e q a)). Qed.
Lemma lem8322142 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8322143 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : (term144 A B D P Q pat e q f arg a) = (term210 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8322142 B) (@lem8322068 A B D P Q arg pat e q p f a h1 h2)). Qed.
Lemma lem8322250 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term145 A B P P' G H f a) = (term145 A B P P' G H f a).
Proof. exact (eq_refl (term145 A B P P' G H f a)). Qed.
Lemma lem8322251 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term174 A B D P Q p arg pat e q) (h2 : p f a) : ((term123 A B D P Q pat e q f arg a) = (term145 A B P P' G H f a)) = ((term209 A B D P Q pat e q f arg a) = (term145 A B P P' G H f a)).
Proof. exact (MK_COMB (@lem8322143 A B D P Q arg pat e q p f a h1 h2) (@lem8322250 A B P P' G H f a)). Qed.
Lemma lem8322360 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : term211 A B D P Q p pat e q arg P' G H f a.
Proof. exact (fun h0 : p f a => @lem8322251 A B D P Q P' G H arg pat e q p f a h1 h0). Qed.
Lemma lem8322361 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : term212 A B D P Q p pat e q arg P' G H f a.
Proof. exact (@lem8322002 A B D P Q pat e q arg P' G H p f a ((term209 A B D P Q pat e q f arg a) = (term145 A B P P' G H f a))). Qed.
Lemma lem8322362 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term148 A B D P Q p pat e q arg P' G H f a) = (term213 A B D P Q p pat e q arg P' G H f a).
Proof. exact (@lem8322361 A B D P Q p pat e q arg P' G H f a (@lem8322360 A B D P Q P' G H f a p arg pat e q h1)). Qed.
Lemma lem8322602 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term150 A B D P Q p pat e q arg P' G H f) = (term214 A B D P Q p pat e q arg P' G H f).
Proof. exact (fun_ext (fun a : P => @lem8322362 A B D P Q P' G H f a p arg pat e q h1)). Qed.
Lemma lem8322842 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8322843 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term152 A B D P Q p pat e q arg P' G H f) = (term215 A B D P Q p pat e q arg P' G H f).
Proof. exact (MK_COMB (@lem8322842 P) (@lem8322602 A B D P Q P' G H f p arg pat e q h1)). Qed.
Lemma lem8323087 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term154 A B D P Q p pat e q arg P' G H) = (term216 A B D P Q p pat e q arg P' G H).
Proof. exact (fun_ext (fun f : A -> B => @lem8322843 A B D P Q P' G H f p arg pat e q h1)). Qed.
Lemma lem8323331 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8323332 {A B D P Q : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term156 A B D P Q p pat e q arg P' G H) = (term217 A B D P Q p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8323331 A B) (@lem8323087 A B D P Q P' G H p arg pat e q h1)). Qed.
Lemma lem8323580 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term157 A B P lt2 s P' G H) = (term157 A B P lt2 s P' G H).
Proof. exact (eq_refl (term157 A B P lt2 s P' G H)). Qed.
Lemma lem8323581 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term159 A B D P Q lt2 s p pat e q arg P' G H) = (term218 A B D P Q lt2 s p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8323580 A B P lt2 s P' G H) (@lem8323332 A B D P Q P' G H p arg pat e q h1)). Qed.
Lemma lem8323956 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term160 A B P P' G lt2 s) = (term160 A B P P' G lt2 s).
Proof. exact (eq_refl (term160 A B P P' G lt2 s)). Qed.
Lemma lem8323957 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term162 A B D P Q lt2 s p pat e q arg P' G H) = (term219 A B D P Q lt2 s p pat e q arg P' G H).
Proof. exact (MK_COMB (@lem8323956 A B P P' G lt2 s) (@lem8323581 A B D P Q lt2 s P' G H p arg pat e q h1)). Qed.
Lemma lem8324377 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term164 A B D P Q lt2 s p pat e q arg P' G) = (term220 A B D P Q lt2 s p pat e q arg P' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8323957 A B D P Q lt2 s P' G H p arg pat e q h1)). Qed.
Lemma lem8324797 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8324798 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term166 A B D P Q lt2 s p pat e q arg P' G) = (term221 A B D P Q lt2 s p pat e q arg P' G).
Proof. exact (MK_COMB (@lem8324797 A B P) (@lem8324377 A B D P Q lt2 s P' G p arg pat e q h1)). Qed.
Lemma lem8325222 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term168 A B D P Q lt2 s p pat e q arg P') = (term222 A B D P Q lt2 s p pat e q arg P').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8324798 A B D P Q lt2 s P' G p arg pat e q h1)). Qed.
Lemma lem8325646 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8325647 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term170 A B D P Q lt2 s p pat e q arg P') = (term223 A B D P Q lt2 s p pat e q arg P').
Proof. exact (MK_COMB (@lem8325646 A B P) (@lem8325222 A B D P Q lt2 s P' p arg pat e q h1)). Qed.
Lemma lem8326075 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term172 A B D P Q lt2 s p pat e q arg) = (term224 A B D P Q lt2 s p pat e q arg).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8325647 A B D P Q lt2 s P' p arg pat e q h1)). Qed.
Lemma lem8326503 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8326504 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term173 A B D P Q lt2 s p pat e q arg) = (term225 A B D P Q lt2 s p pat e q arg).
Proof. exact (MK_COMB (@lem8326503 A B P) (@lem8326075 A B D P Q lt2 s p arg pat e q h1)). Qed.
Lemma lem8326936 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term174 A B D P Q p arg pat e q) : (term225 A B D P Q lt2 s p pat e q arg) = (term173 A B D P Q lt2 s p pat e q arg).
Proof. exact (SYM (@lem8326504 A B D P Q lt2 s p arg pat e q h1)). Qed.
Lemma lem8326938 (p : Prop) : p = (term226 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8326939 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term174 A B D P Q p arg pat e q) = (term227 A B D P Q p arg pat e q).
Proof. exact (@lem8326938 (term174 A B D P Q p arg pat e q)). Qed.
Lemma lem8326940 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term227 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (SYM (@lem8326939 A B D P Q p arg pat e q)). Qed.
Lemma lem8326941 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term228 A B D P Q p arg pat e q) : term228 A B D P Q p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8326944 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term229 A B D P Q lt2 s p arg pat e q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8326945 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term229 A B D P Q lt2 s p arg pat e q => @lem8326944 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8326946 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term230 A B D P Q lt2 s p arg pat e q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8326947 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term229 A B D P Q lt2 s p arg pat e q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8326948 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term229 A B D P Q lt2 s p arg pat e q) (h2 : term230 A B D P Q lt2 s p arg pat e q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8326946 A B D P Q lt2 s p arg pat e q h2 (@lem8326947 A B D P Q lt2 s p arg pat e q h1)). Qed.
Lemma lem8326949 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term229 A B D P Q lt2 s p arg pat e q) : term231 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term230 A B D P Q lt2 s p arg pat e q => @lem8326948 A B D P Q lt2 s p arg pat e q h1 h0). Qed.
Lemma lem8326950 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term230 A B D P Q lt2 s p arg pat e q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8326951 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term229 A B D P Q lt2 s p arg pat e q) (h2 : term230 A B D P Q lt2 s p arg pat e q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8326949 A B D P Q lt2 s p arg pat e q h1 (@lem8326950 A B D P Q lt2 s p arg pat e q h2)). Qed.
Lemma lem8326952 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term230 A B D P Q lt2 s p arg pat e q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term229 A B D P Q lt2 s p arg pat e q => @lem8326951 A B D P Q lt2 s p arg pat e q h0 h1). Qed.
Lemma lem8326953 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term232 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term230 A B D P Q lt2 s p arg pat e q => @lem8326952 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8326956 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8326953 A B D P Q lt2 s p arg pat e q (@lem8326945 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8326957 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term230 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8326956 A B D P Q lt2 s p arg pat e q). Qed.
Lemma lem8327043 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8327044 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term227 A B D P Q p arg pat e q) = (term233 A B D P Q p arg pat e q).
Proof. exact (@lem8327043 (term228 A B D P Q p arg pat e q)). Qed.
Lemma lem8327046 (t : Prop) : (term234 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8327047 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term233 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (@lem8327046 (term174 A B D P Q p arg pat e q)). Qed.
Lemma lem8327052 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term227 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (TRANS (@lem8327044 A B D P Q p arg pat e q) (@lem8327047 A B D P Q p arg pat e q)). Qed.
Lemma lem8327161 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term235 A B P lt2 s p) = (term235 A B P lt2 s p).
Proof. exact (eq_refl (term235 A B P lt2 s p)). Qed.
Lemma lem8327162 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term236 A B D P Q lt2 s p arg pat e q) = (term237 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327161 A B P lt2 s p) (@lem8327052 A B D P Q p arg pat e q)). Qed.
Lemma lem8327165 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (eq_refl (term238 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327166 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term239 A B D P Q lt2 s p arg pat e q) = (term240 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327165 A B D P Q p q pat e arg lt2 s) (@lem8327162 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8327169 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (eq_refl (term241 A B D P Q p pat e q arg)). Qed.
Lemma lem8327170 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term229 A B D P Q lt2 s p arg pat e q) = (term242 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327169 A B D P Q p pat e q arg) (@lem8327166 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8327173 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term243 A B D P Q s p arg pat e q) = (term244 A B D P Q s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8327170 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8327174 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8327175 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term245 A B D P Q s p arg pat e q) = (term246 A B D P Q s p arg pat e q).
Proof. exact (MK_COMB (@lem8327174 A) (@lem8327173 A B D P Q s p arg pat e q)). Qed.
Lemma lem8327180 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term247 A B D P Q p arg pat e q) = (term248 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8327175 A B D P Q s p arg pat e q)). Qed.
Lemma lem8327181 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8327182 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term249 A B D P Q p arg pat e q) = (term250 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8327181 A P) (@lem8327180 A B D P Q p arg pat e q)). Qed.
Lemma lem8327187 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term251 A B D P Q arg pat e q) = (term252 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8327182 A B D P Q p arg pat e q)). Qed.
Lemma lem8327188 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327189 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term253 A B D P Q arg pat e q) = (term254 A B D P Q arg pat e q).
Proof. exact (MK_COMB (@lem8327188 A B P) (@lem8327187 A B D P Q arg pat e q)). Qed.
Lemma lem8327194 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term255 A B D P Q pat e q) = (term256 A B D P Q pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8327189 A B D P Q arg pat e q)). Qed.
Lemma lem8327195 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8327196 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term257 A B D P Q pat e q) = (term258 A B D P Q pat e q).
Proof. exact (MK_COMB (@lem8327195 A P Q) (@lem8327194 A B D P Q pat e q)). Qed.
Lemma lem8327201 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term259 A B D P Q e q) = (term260 A B D P Q e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8327196 A B D P Q pat e q)). Qed.
Lemma lem8327202 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8327203 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term261 A B D P Q e q) = (term262 A B D P Q e q).
Proof. exact (MK_COMB (@lem8327202 D Q) (@lem8327201 A B D P Q e q)). Qed.
Lemma lem8327208 {A B D P Q : Type'} (q : type1413 P Q) : (term263 A B D P Q q) = (term264 A B D P Q q).
Proof. exact (fun_ext (fun e : P -> D => @lem8327203 A B D P Q e q)). Qed.
Lemma lem8327209 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8327210 {A B D P Q : Type'} (q : type1413 P Q) : (term265 A B D P Q q) = (term266 A B D P Q q).
Proof. exact (MK_COMB (@lem8327209 D P) (@lem8327208 A B D P Q q)). Qed.
Lemma lem8327215 {A B D P Q : Type'} : (term267 A B D P Q) = (term268 A B D P Q).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8327210 A B D P Q q)). Qed.
Lemma lem8327216 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8327223 {A B D P Q : Type'} : (term269 A B D P Q) = (term270 A B D P Q).
Proof. exact (MK_COMB (@lem8327216 P Q) (@lem8327215 A B D P Q)). Qed.
Lemma lem8327224 {A B P : Type'} (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : _112645 = (term271 A B P).
Proof. exact (h1). Qed.
Lemma lem8327242 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term272 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term272 D P Q pat e q x t)). Qed.
Lemma lem8327243 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term273 D P Q pat e q x) = (term273 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8327242 D P Q pat e q x t)). Qed.
Lemma lem8327244 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327245 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8327244 Q) (@lem8327243 D P Q pat e q x)). Qed.
Lemma lem8327276 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term274 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327277 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term275 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8327276 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327278 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327279 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term276 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8327278 Q) (@lem8327277 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327280 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term113 A B D P Q pat e q f arg x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8327279 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327281 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem8327282 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term115 A B D P Q pat e q f arg x) = (term115 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327281 B) (@lem8327280 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327283 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8327284 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term277 A B D P Q pat e q f arg x) = (term277 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327283) (@lem8327282 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327285 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)) = ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)).
Proof. exact (MK_COMB (@lem8327284 A B D P Q pat e q f arg x) (@lem8327245 D P Q pat e q x)). Qed.
Lemma lem8327292 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (term146 A B P p f x) = (term146 A B P p f x).
Proof. exact (eq_refl (term146 A B P p f x)). Qed.
Lemma lem8327293 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term178 A B D P Q p f arg pat e q x) = (term178 A B D P Q p f arg pat e q x).
Proof. exact (MK_COMB (@lem8327292 A B P p f x) (@lem8327285 A B D P Q f arg pat e q x)). Qed.
Lemma lem8327294 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term278 A B D P Q p f arg pat e q) = (term278 A B D P Q p f arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8327293 A B D P Q p f arg pat e q x)). Qed.
Lemma lem8327295 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327296 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term176 A B D P Q p f arg pat e q) = (term176 A B D P Q p f arg pat e q).
Proof. exact (MK_COMB (@lem8327295 P) (@lem8327294 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327297 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term279 A B D P Q p arg pat e q) = (term279 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8327296 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327298 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327299 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term174 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8327298 A B) (@lem8327297 A B D P Q p arg pat e q)). Qed.
Lemma lem8327300 {A B P : Type'} (p : type560 A B P) : p = p.
Proof. exact (eq_refl p). Qed.
Lemma lem8327301 {A P : Type'} (s : P -> A) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8327303 {A B P : Type'} (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term271 A B P) = _112645.
Proof. exact (SYM (@lem8327224 A B P _112645 h1)). Qed.
Lemma lem8327304 {A B P : Type'} (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term271 A B P) = _112645.
Proof. exact (@lem8327303 A B P _112645 h1). Qed.
Lemma lem8327307 {A B P : Type'} (lt2 : type1402 A) : (@admissible A B A Prop P lt2) = (@admissible A B A Prop P lt2).
Proof. exact (eq_refl (@admissible A B A Prop P lt2)). Qed.
Lemma lem8327308 {A B P : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term280 A B P lt2) = (@admissible A B A Prop P lt2 _112645).
Proof. exact (MK_COMB (@lem8327307 A B P lt2) (@lem8327304 A B P _112645 h1)). Qed.
Lemma lem8327309 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term281 A B P lt2 s) = (@admissible A B A Prop P lt2 _112645 s).
Proof. exact (MK_COMB (@lem8327308 A B P lt2 _112645 h1) (@lem8327301 A P s)). Qed.
Lemma lem8327310 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term40 A B P lt2 s p) = (@admissible A B A Prop P lt2 _112645 s p).
Proof. exact (MK_COMB (@lem8327309 A B P lt2 s _112645 h1) (@lem8327300 A B P p)). Qed.
Lemma lem8327311 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327312 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term235 A B P lt2 s p) = (term282 A B P lt2 _112645 s p).
Proof. exact (MK_COMB (@lem8327311) (@lem8327310 A B P lt2 s p _112645 h1)). Qed.
Lemma lem8327313 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term237 A B D P Q lt2 s p arg pat e q) = (term283 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327312 A B P lt2 s p _112645 h1) (@lem8327299 A B D P Q p arg pat e q)). Qed.
Lemma lem8327332 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term284 A P Q arg t lt2 y s a) = (term284 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term284 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327333 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term285 A P Q arg t lt2 s a) = (term285 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8327332 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327334 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8327335 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term286 A P Q arg t lt2 s a) = (term286 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327334 A) (@lem8327333 A P Q arg t lt2 s a)). Qed.
Lemma lem8327362 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term287 A B D P Q p f q pat t e a) = (term287 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term287 A B D P Q p f q pat t e a)). Qed.
Lemma lem8327363 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term288 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327362 A B D P Q p f q pat t e a) (@lem8327335 A P Q arg t lt2 s a)). Qed.
Lemma lem8327364 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term289 A B D P Q p f q pat e arg lt2 s a) = (term289 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8327363 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8327365 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327366 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term290 A B D P Q p f q pat e arg lt2 s a) = (term290 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8327365 Q) (@lem8327364 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327367 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term291 A B D P Q p f q pat e arg lt2 s) = (term291 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8327366 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327368 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327369 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term292 A B D P Q p f q pat e arg lt2 s) = (term292 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327368 P) (@lem8327367 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327370 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term293 A B D P Q p q pat e arg lt2 s) = (term293 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8327369 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327371 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327372 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term35 A B D P Q p q pat e arg lt2 s) = (term35 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327371 A B) (@lem8327370 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327373 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327374 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327373) (@lem8327372 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327375 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term240 A B D P Q lt2 s p arg pat e q) = (term294 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327374 A B D P Q p q pat e arg lt2 s) (@lem8327313 A B D P Q lt2 s p arg pat e q _112645 h1)). Qed.
Lemma lem8327436 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term295 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term295 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327437 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term296 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8327436 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327438 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327439 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term297 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8327438 Q) (@lem8327437 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327440 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term298 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8327439 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327441 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327442 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term299 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8327441 Q) (@lem8327440 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327443 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term300 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8327442 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327444 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327445 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term301 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8327444 P) (@lem8327443 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327446 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term302 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8327445 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327447 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327448 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term36 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327447 A B) (@lem8327446 A B D P Q p pat e q arg)). Qed.
Lemma lem8327449 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327450 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327449) (@lem8327448 A B D P Q p pat e q arg)). Qed.
Lemma lem8327451 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term242 A B D P Q lt2 s p arg pat e q) = (term303 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327450 A B D P Q p pat e q arg) (@lem8327375 A B D P Q lt2 s p arg pat e q _112645 h1)). Qed.
Lemma lem8327452 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term244 A B D P Q s p arg pat e q) = (term304 A B D P Q _112645 s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8327451 A B D P Q lt2 s p arg pat e q _112645 h1)). Qed.
Lemma lem8327453 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8327454 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term246 A B D P Q s p arg pat e q) = (term305 A B D P Q _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327453 A) (@lem8327452 A B D P Q s p arg pat e q _112645 h1)). Qed.
Lemma lem8327455 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term248 A B D P Q p arg pat e q) = (term306 A B D P Q _112645 p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8327454 A B D P Q s p arg pat e q _112645 h1)). Qed.
Lemma lem8327456 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8327457 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term250 A B D P Q p arg pat e q) = (term307 A B D P Q _112645 p arg pat e q).
Proof. exact (MK_COMB (@lem8327456 A P) (@lem8327455 A B D P Q p arg pat e q _112645 h1)). Qed.
Lemma lem8327458 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term252 A B D P Q arg pat e q) = (term308 A B D P Q _112645 arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8327457 A B D P Q p arg pat e q _112645 h1)). Qed.
Lemma lem8327459 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327460 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term254 A B D P Q arg pat e q) = (term309 A B D P Q _112645 arg pat e q).
Proof. exact (MK_COMB (@lem8327459 A B P) (@lem8327458 A B D P Q arg pat e q _112645 h1)). Qed.
Lemma lem8327461 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term256 A B D P Q pat e q) = (term310 A B D P Q _112645 pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8327460 A B D P Q arg pat e q _112645 h1)). Qed.
Lemma lem8327462 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8327463 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term258 A B D P Q pat e q) = (term311 A B D P Q _112645 pat e q).
Proof. exact (MK_COMB (@lem8327462 A P Q) (@lem8327461 A B D P Q pat e q _112645 h1)). Qed.
Lemma lem8327464 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term260 A B D P Q e q) = (term312 A B D P Q _112645 e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8327463 A B D P Q pat e q _112645 h1)). Qed.
Lemma lem8327465 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8327466 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term262 A B D P Q e q) = (term313 A B D P Q _112645 e q).
Proof. exact (MK_COMB (@lem8327465 D Q) (@lem8327464 A B D P Q e q _112645 h1)). Qed.
Lemma lem8327467 {A B D P Q : Type'} (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term264 A B D P Q q) = (term314 A B D P Q _112645 q).
Proof. exact (fun_ext (fun e : P -> D => @lem8327466 A B D P Q e q _112645 h1)). Qed.
Lemma lem8327468 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8327469 {A B D P Q : Type'} (q : type1413 P Q) (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term266 A B D P Q q) = (term315 A B D P Q _112645 q).
Proof. exact (MK_COMB (@lem8327468 D P) (@lem8327467 A B D P Q q _112645 h1)). Qed.
Lemma lem8327470 {A B D P Q : Type'} (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term268 A B D P Q) = (term316 A B D P Q _112645).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8327469 A B D P Q q _112645 h1)). Qed.
Lemma lem8327471 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8327472 {A B D P Q : Type'} (_112645 : type560 A B P) (h1 : _112645 = (term271 A B P)) : (term270 A B D P Q) = (term317 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327471 P Q) (@lem8327470 A B D P Q _112645 h1)). Qed.
Lemma lem8327473 {A B D P Q : Type'} (_112645 : type560 A B P) : term318 A B D P Q _112645.
Proof. exact (fun h0 : _112645 = (term271 A B P) => @lem8327472 A B D P Q _112645 h0). Qed.
Lemma lem8327474 {A B D P Q : Type'} : term319 A B D P Q.
Proof. exact (fun _112645 : type560 A B P => @lem8327473 A B D P Q _112645). Qed.
Lemma lem8327476 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term320 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem8327477 {A B P : Type'} (P' : Prop) (c : type560 A B P) (Q : type117 A B P) : term321 A B P P' c Q.
Proof. exact (@lem8327476 (type560 A B P) P' c Q). Qed.
Lemma lem8327478 {A B D P Q : Type'} : term322 A B D P Q.
Proof. exact (@lem8327477 A B P (term270 A B D P Q) (term271 A B P) (term323 A B D P Q)). Qed.
Lemma lem8327479 {A B D P Q : Type'} (_112645 : type560 A B P) : (term324 A B D P Q _112645) = (term317 A B D P Q _112645).
Proof. exact (eq_refl (term324 A B D P Q _112645)). Qed.
Lemma lem8327480 {A B D P Q : Type'} : (term325 A B D P Q) = (term325 A B D P Q).
Proof. exact (eq_refl (term325 A B D P Q)). Qed.
Lemma lem8327481 {A B D P Q : Type'} (_112645 : type560 A B P) : ((term270 A B D P Q) = (term324 A B D P Q _112645)) = ((term270 A B D P Q) = (term317 A B D P Q _112645)).
Proof. exact (MK_COMB (@lem8327480 A B D P Q) (@lem8327479 A B D P Q _112645)). Qed.
Lemma lem8327482 {A B P : Type'} (_112645 : type560 A B P) : (term326 A B P _112645) = (term326 A B P _112645).
Proof. exact (eq_refl (term326 A B P _112645)). Qed.
Lemma lem8327483 {A B D P Q : Type'} (_112645 : type560 A B P) : (term327 A B D P Q _112645) = (term318 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327482 A B P _112645) (@lem8327481 A B D P Q _112645)). Qed.
Lemma lem8327484 {A B D P Q : Type'} : (term328 A B D P Q) = (term329 A B D P Q).
Proof. exact (fun_ext (fun _112645 : type560 A B P => @lem8327483 A B D P Q _112645)). Qed.
Lemma lem8327485 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327486 {A B D P Q : Type'} : (term330 A B D P Q) = (term319 A B D P Q).
Proof. exact (MK_COMB (@lem8327485 A B P) (@lem8327484 A B D P Q)). Qed.
Lemma lem8327487 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327488 {A B D P Q : Type'} : (term331 A B D P Q) = (term332 A B D P Q).
Proof. exact (MK_COMB (@lem8327487) (@lem8327486 A B D P Q)). Qed.
Lemma lem8327489 {A B D P Q : Type'} (_112645 : type560 A B P) : (term324 A B D P Q _112645) = (term317 A B D P Q _112645).
Proof. exact (eq_refl (term324 A B D P Q _112645)). Qed.
Lemma lem8327490 {A B P : Type'} (_112645 : type560 A B P) : (term326 A B P _112645) = (term326 A B P _112645).
Proof. exact (eq_refl (term326 A B P _112645)). Qed.
Lemma lem8327491 {A B D P Q : Type'} (_112645 : type560 A B P) : (term333 A B D P Q _112645) = (term334 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327490 A B P _112645) (@lem8327489 A B D P Q _112645)). Qed.
Lemma lem8327492 {A B D P Q : Type'} : (term335 A B D P Q) = (term336 A B D P Q).
Proof. exact (fun_ext (fun _112645 : type560 A B P => @lem8327491 A B D P Q _112645)). Qed.
Lemma lem8327493 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327494 {A B D P Q : Type'} : (term337 A B D P Q) = (term338 A B D P Q).
Proof. exact (MK_COMB (@lem8327493 A B P) (@lem8327492 A B D P Q)). Qed.
Lemma lem8327495 {A B D P Q : Type'} : (term325 A B D P Q) = (term325 A B D P Q).
Proof. exact (eq_refl (term325 A B D P Q)). Qed.
Lemma lem8327496 {A B D P Q : Type'} : ((term270 A B D P Q) = (term337 A B D P Q)) = ((term270 A B D P Q) = (term338 A B D P Q)).
Proof. exact (MK_COMB (@lem8327495 A B D P Q) (@lem8327494 A B D P Q)). Qed.
Lemma lem8327497 {A B D P Q : Type'} : (term322 A B D P Q) = (term339 A B D P Q).
Proof. exact (MK_COMB (@lem8327488 A B D P Q) (@lem8327496 A B D P Q)). Qed.
Lemma lem8327498 {A B D P Q : Type'} : term339 A B D P Q.
Proof. exact (EQ_MP (@lem8327497 A B D P Q) (@lem8327478 A B D P Q)). Qed.
Lemma lem8327499 {A B D P Q : Type'} : (term270 A B D P Q) = (term338 A B D P Q).
Proof. exact (@lem8327498 A B D P Q (@lem8327474 A B D P Q)). Qed.
Lemma lem8327501 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term340 _3571 _3575 t)) = (term341 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem8327502 {A B P : Type'} (s : type560 A B P) (t : type560 A B P) : (s = (term342 A B P t)) = (term343 A B P s t).
Proof. exact (@lem8327501 (P -> Prop) (A -> B) s t). Qed.
Lemma lem8327503 {A B P : Type'} (_112645 : type560 A B P) : (_112645 = (term344 A B P)) = (term345 A B P _112645).
Proof. exact (@lem8327502 A B P _112645 (term271 A B P)). Qed.
Lemma lem8327504 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (eq_refl (term346 A B P f)). Qed.
Lemma lem8327505 {A B P : Type'} : (term344 A B P) = (term271 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8327504 A B P f)). Qed.
Lemma lem8327506 {A B P : Type'} (_112645 : type560 A B P) : (@eq ((A -> B) -> P -> Prop) _112645) = (@eq ((A -> B) -> P -> Prop) _112645).
Proof. exact (eq_refl (@eq ((A -> B) -> P -> Prop) _112645)). Qed.
Lemma lem8327507 {A B P : Type'} (_112645 : type560 A B P) : (_112645 = (term344 A B P)) = (_112645 = (term271 A B P)).
Proof. exact (MK_COMB (@lem8327506 A B P _112645) (@lem8327505 A B P)). Qed.
Lemma lem8327508 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8327509 {A B P : Type'} (_112645 : type560 A B P) : (term348 A B P _112645) = (term349 A B P _112645).
Proof. exact (MK_COMB (@lem8327508) (@lem8327507 A B P _112645)). Qed.
Lemma lem8327510 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (eq_refl (term346 A B P f)). Qed.
Lemma lem8327511 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) : (term350 A B P _112645 f) = (term350 A B P _112645 f).
Proof. exact (eq_refl (term350 A B P _112645 f)). Qed.
Lemma lem8327512 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) : ((_112645 f) = (term346 A B P f)) = ((_112645 f) = (term347 P)).
Proof. exact (MK_COMB (@lem8327511 A B P _112645 f) (@lem8327510 A B P f)). Qed.
Lemma lem8327513 {A B P : Type'} (_112645 : type560 A B P) : (term351 A B P _112645) = (term352 A B P _112645).
Proof. exact (fun_ext (fun f : A -> B => @lem8327512 A B P _112645 f)). Qed.
Lemma lem8327514 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327515 {A B P : Type'} (_112645 : type560 A B P) : (term345 A B P _112645) = (term353 A B P _112645).
Proof. exact (MK_COMB (@lem8327514 A B) (@lem8327513 A B P _112645)). Qed.
Lemma lem8327516 {A B P : Type'} (_112645 : type560 A B P) : ((_112645 = (term344 A B P)) = (term345 A B P _112645)) = ((_112645 = (term271 A B P)) = (term353 A B P _112645)).
Proof. exact (MK_COMB (@lem8327509 A B P _112645) (@lem8327515 A B P _112645)). Qed.
Lemma lem8327517 {A B P : Type'} (_112645 : type560 A B P) : (_112645 = (term271 A B P)) = (term353 A B P _112645).
Proof. exact (EQ_MP (@lem8327516 A B P _112645) (@lem8327503 A B P _112645)). Qed.
Lemma lem8327518 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) : ((_112645 f) = (term347 P)) = ((_112645 f) = (term347 P)).
Proof. exact (eq_refl ((_112645 f) = (term347 P))). Qed.
Lemma lem8327519 {A B P : Type'} (_112645 : type560 A B P) : (term352 A B P _112645) = (term352 A B P _112645).
Proof. exact (fun_ext (fun f : A -> B => @lem8327518 A B P _112645 f)). Qed.
Lemma lem8327520 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327521 {A B P : Type'} (_112645 : type560 A B P) : (term353 A B P _112645) = (term353 A B P _112645).
Proof. exact (MK_COMB (@lem8327520 A B) (@lem8327519 A B P _112645)). Qed.
Lemma lem8327522 {A B P : Type'} (_112645 : type560 A B P) : (_112645 = (term271 A B P)) = (term353 A B P _112645).
Proof. exact (TRANS (@lem8327517 A B P _112645) (@lem8327521 A B P _112645)). Qed.
Lemma lem8327523 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327524 {A B P : Type'} (_112645 : type560 A B P) : (term326 A B P _112645) = (term354 A B P _112645).
Proof. exact (MK_COMB (@lem8327523) (@lem8327522 A B P _112645)). Qed.
Lemma lem8327525 {A B D P Q : Type'} (_112645 : type560 A B P) : (term317 A B D P Q _112645) = (term317 A B D P Q _112645).
Proof. exact (eq_refl (term317 A B D P Q _112645)). Qed.
Lemma lem8327526 {A B D P Q : Type'} (_112645 : type560 A B P) : (term334 A B D P Q _112645) = (term355 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327524 A B P _112645) (@lem8327525 A B D P Q _112645)). Qed.
Lemma lem8327527 {A B D P Q : Type'} : (term336 A B D P Q) = (term356 A B D P Q).
Proof. exact (fun_ext (fun _112645 : type560 A B P => @lem8327526 A B D P Q _112645)). Qed.
Lemma lem8327528 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327529 {A B D P Q : Type'} : (term338 A B D P Q) = (term357 A B D P Q).
Proof. exact (MK_COMB (@lem8327528 A B P) (@lem8327527 A B D P Q)). Qed.
Lemma lem8327530 {A B D P Q : Type'} : (term325 A B D P Q) = (term325 A B D P Q).
Proof. exact (eq_refl (term325 A B D P Q)). Qed.
Lemma lem8327531 {A B D P Q : Type'} : ((term270 A B D P Q) = (term338 A B D P Q)) = ((term270 A B D P Q) = (term357 A B D P Q)).
Proof. exact (MK_COMB (@lem8327530 A B D P Q) (@lem8327529 A B D P Q)). Qed.
Lemma lem8327532 {A B D P Q : Type'} : (term270 A B D P Q) = (term357 A B D P Q).
Proof. exact (EQ_MP (@lem8327531 A B D P Q) (@lem8327499 A B D P Q)). Qed.
Lemma lem8327533 {P : Type'} (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : _112646 = (term347 P).
Proof. exact (h1). Qed.
Lemma lem8327551 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term272 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term272 D P Q pat e q x t)). Qed.
Lemma lem8327552 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term273 D P Q pat e q x) = (term273 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8327551 D P Q pat e q x t)). Qed.
Lemma lem8327553 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327554 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8327553 Q) (@lem8327552 D P Q pat e q x)). Qed.
Lemma lem8327585 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term274 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327586 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term275 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8327585 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327587 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327588 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term276 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8327587 Q) (@lem8327586 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327589 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term113 A B D P Q pat e q f arg x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8327588 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327590 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem8327591 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term115 A B D P Q pat e q f arg x) = (term115 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327590 B) (@lem8327589 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327592 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8327593 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term277 A B D P Q pat e q f arg x) = (term277 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327592) (@lem8327591 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327594 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)) = ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)).
Proof. exact (MK_COMB (@lem8327593 A B D P Q pat e q f arg x) (@lem8327554 D P Q pat e q x)). Qed.
Lemma lem8327601 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (term146 A B P p f x) = (term146 A B P p f x).
Proof. exact (eq_refl (term146 A B P p f x)). Qed.
Lemma lem8327602 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term178 A B D P Q p f arg pat e q x) = (term178 A B D P Q p f arg pat e q x).
Proof. exact (MK_COMB (@lem8327601 A B P p f x) (@lem8327594 A B D P Q f arg pat e q x)). Qed.
Lemma lem8327603 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term278 A B D P Q p f arg pat e q) = (term278 A B D P Q p f arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8327602 A B D P Q p f arg pat e q x)). Qed.
Lemma lem8327604 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327605 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term176 A B D P Q p f arg pat e q) = (term176 A B D P Q p f arg pat e q).
Proof. exact (MK_COMB (@lem8327604 P) (@lem8327603 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327606 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term279 A B D P Q p arg pat e q) = (term279 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8327605 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327607 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327608 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term174 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8327607 A B) (@lem8327606 A B D P Q p arg pat e q)). Qed.
Lemma lem8327619 {A B P : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) : (term282 A B P lt2 _112645 s p) = (term282 A B P lt2 _112645 s p).
Proof. exact (eq_refl (term282 A B P lt2 _112645 s p)). Qed.
Lemma lem8327620 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term283 A B D P Q lt2 _112645 s p arg pat e q) = (term283 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327619 A B P lt2 _112645 s p) (@lem8327608 A B D P Q p arg pat e q)). Qed.
Lemma lem8327639 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term284 A P Q arg t lt2 y s a) = (term284 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term284 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327640 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term285 A P Q arg t lt2 s a) = (term285 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8327639 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327641 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8327642 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term286 A P Q arg t lt2 s a) = (term286 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327641 A) (@lem8327640 A P Q arg t lt2 s a)). Qed.
Lemma lem8327669 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term287 A B D P Q p f q pat t e a) = (term287 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term287 A B D P Q p f q pat t e a)). Qed.
Lemma lem8327670 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term288 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327669 A B D P Q p f q pat t e a) (@lem8327642 A P Q arg t lt2 s a)). Qed.
Lemma lem8327671 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term289 A B D P Q p f q pat e arg lt2 s a) = (term289 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8327670 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8327672 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327673 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term290 A B D P Q p f q pat e arg lt2 s a) = (term290 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8327672 Q) (@lem8327671 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327674 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term291 A B D P Q p f q pat e arg lt2 s) = (term291 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8327673 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327675 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327676 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term292 A B D P Q p f q pat e arg lt2 s) = (term292 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327675 P) (@lem8327674 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327677 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term293 A B D P Q p q pat e arg lt2 s) = (term293 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8327676 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327678 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327679 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term35 A B D P Q p q pat e arg lt2 s) = (term35 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327678 A B) (@lem8327677 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327680 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327681 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327680) (@lem8327679 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327682 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term294 A B D P Q lt2 _112645 s p arg pat e q) = (term294 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327681 A B D P Q p q pat e arg lt2 s) (@lem8327620 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327743 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term295 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term295 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327744 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term296 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8327743 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327745 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327746 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term297 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8327745 Q) (@lem8327744 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327747 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term298 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8327746 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327748 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327749 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term299 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8327748 Q) (@lem8327747 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327750 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term300 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8327749 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327751 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327752 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term301 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8327751 P) (@lem8327750 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327753 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term302 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8327752 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327754 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327755 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term36 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327754 A B) (@lem8327753 A B D P Q p pat e q arg)). Qed.
Lemma lem8327756 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327757 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327756) (@lem8327755 A B D P Q p pat e q arg)). Qed.
Lemma lem8327758 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term303 A B D P Q lt2 _112645 s p arg pat e q) = (term303 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327757 A B D P Q p pat e q arg) (@lem8327682 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327759 {A B D P Q : Type'} (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term304 A B D P Q _112645 s p arg pat e q) = (term304 A B D P Q _112645 s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8327758 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327760 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8327761 {A B D P Q : Type'} (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term305 A B D P Q _112645 s p arg pat e q) = (term305 A B D P Q _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327760 A) (@lem8327759 A B D P Q _112645 s p arg pat e q)). Qed.
Lemma lem8327762 {A B D P Q : Type'} (_112645 : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term306 A B D P Q _112645 p arg pat e q) = (term306 A B D P Q _112645 p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8327761 A B D P Q _112645 s p arg pat e q)). Qed.
Lemma lem8327763 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8327764 {A B D P Q : Type'} (_112645 : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term307 A B D P Q _112645 p arg pat e q) = (term307 A B D P Q _112645 p arg pat e q).
Proof. exact (MK_COMB (@lem8327763 A P) (@lem8327762 A B D P Q _112645 p arg pat e q)). Qed.
Lemma lem8327765 {A B D P Q : Type'} (_112645 : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term308 A B D P Q _112645 arg pat e q) = (term308 A B D P Q _112645 arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8327764 A B D P Q _112645 p arg pat e q)). Qed.
Lemma lem8327766 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327767 {A B D P Q : Type'} (_112645 : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term309 A B D P Q _112645 arg pat e q) = (term309 A B D P Q _112645 arg pat e q).
Proof. exact (MK_COMB (@lem8327766 A B P) (@lem8327765 A B D P Q _112645 arg pat e q)). Qed.
Lemma lem8327768 {A B D P Q : Type'} (_112645 : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term310 A B D P Q _112645 pat e q) = (term310 A B D P Q _112645 pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8327767 A B D P Q _112645 arg pat e q)). Qed.
Lemma lem8327769 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8327770 {A B D P Q : Type'} (_112645 : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term311 A B D P Q _112645 pat e q) = (term311 A B D P Q _112645 pat e q).
Proof. exact (MK_COMB (@lem8327769 A P Q) (@lem8327768 A B D P Q _112645 pat e q)). Qed.
Lemma lem8327771 {A B D P Q : Type'} (_112645 : type560 A B P) (e : P -> D) (q : type1413 P Q) : (term312 A B D P Q _112645 e q) = (term312 A B D P Q _112645 e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8327770 A B D P Q _112645 pat e q)). Qed.
Lemma lem8327772 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8327773 {A B D P Q : Type'} (_112645 : type560 A B P) (e : P -> D) (q : type1413 P Q) : (term313 A B D P Q _112645 e q) = (term313 A B D P Q _112645 e q).
Proof. exact (MK_COMB (@lem8327772 D Q) (@lem8327771 A B D P Q _112645 e q)). Qed.
Lemma lem8327774 {A B D P Q : Type'} (_112645 : type560 A B P) (q : type1413 P Q) : (term314 A B D P Q _112645 q) = (term314 A B D P Q _112645 q).
Proof. exact (fun_ext (fun e : P -> D => @lem8327773 A B D P Q _112645 e q)). Qed.
Lemma lem8327775 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8327776 {A B D P Q : Type'} (_112645 : type560 A B P) (q : type1413 P Q) : (term315 A B D P Q _112645 q) = (term315 A B D P Q _112645 q).
Proof. exact (MK_COMB (@lem8327775 D P) (@lem8327774 A B D P Q _112645 q)). Qed.
Lemma lem8327777 {A B D P Q : Type'} (_112645 : type560 A B P) : (term316 A B D P Q _112645) = (term316 A B D P Q _112645).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8327776 A B D P Q _112645 q)). Qed.
Lemma lem8327778 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8327779 {A B D P Q : Type'} (_112645 : type560 A B P) : (term317 A B D P Q _112645) = (term317 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327778 P Q) (@lem8327777 A B D P Q _112645)). Qed.
Lemma lem8327781 {P : Type'} (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term347 P) = _112646.
Proof. exact (SYM (@lem8327533 P _112646 h1)). Qed.
Lemma lem8327782 {P : Type'} (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term347 P) = _112646.
Proof. exact (@lem8327781 P _112646 h1). Qed.
Lemma lem8327787 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) : (term350 A B P _112645 f) = (term350 A B P _112645 f).
Proof. exact (eq_refl (term350 A B P _112645 f)). Qed.
Lemma lem8327788 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : ((_112645 f) = (term347 P)) = ((_112645 f) = _112646).
Proof. exact (MK_COMB (@lem8327787 A B P _112645 f) (@lem8327782 P _112646 h1)). Qed.
Lemma lem8327789 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term352 A B P _112645) = (term358 A B P _112645 _112646).
Proof. exact (fun_ext (fun f : A -> B => @lem8327788 A B P _112645 f _112646 h1)). Qed.
Lemma lem8327790 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327791 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term353 A B P _112645) = (term359 A B P _112645 _112646).
Proof. exact (MK_COMB (@lem8327790 A B) (@lem8327789 A B P _112645 _112646 h1)). Qed.
Lemma lem8327792 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327793 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term354 A B P _112645) = (term360 A B P _112645 _112646).
Proof. exact (MK_COMB (@lem8327792) (@lem8327791 A B P _112645 _112646 h1)). Qed.
Lemma lem8327794 {A B D P Q : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term355 A B D P Q _112645) = (term361 A B D P Q _112646 _112645).
Proof. exact (MK_COMB (@lem8327793 A B P _112645 _112646 h1) (@lem8327779 A B D P Q _112645)). Qed.
Lemma lem8327795 {A B D P Q : Type'} (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term356 A B D P Q) = (term362 A B D P Q _112646).
Proof. exact (fun_ext (fun _112645 : type560 A B P => @lem8327794 A B D P Q _112645 _112646 h1)). Qed.
Lemma lem8327796 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327797 {A B D P Q : Type'} (_112646 : P -> Prop) (h1 : _112646 = (term347 P)) : (term357 A B D P Q) = (term363 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8327796 A B P) (@lem8327795 A B D P Q _112646 h1)). Qed.
Lemma lem8327798 {A B D P Q : Type'} (_112646 : P -> Prop) : term364 A B D P Q _112646.
Proof. exact (fun h0 : _112646 = (term347 P) => @lem8327797 A B D P Q _112646 h0). Qed.
Lemma lem8327799 {A B D P Q : Type'} : term365 A B D P Q.
Proof. exact (fun _112646 : P -> Prop => @lem8327798 A B D P Q _112646). Qed.
Lemma lem8327801 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term320 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem8327802 {P : Type'} (P' : Prop) (c : P -> Prop) (Q : type686 P) : term366 P P' c Q.
Proof. exact (@lem8327801 (P -> Prop) P' c Q). Qed.
Lemma lem8327803 {A B D P Q : Type'} : term367 A B D P Q.
Proof. exact (@lem8327802 P (term357 A B D P Q) (term347 P) (term368 A B D P Q)). Qed.
Lemma lem8327804 {A B D P Q : Type'} (_112646 : P -> Prop) : (term369 A B D P Q _112646) = (term363 A B D P Q _112646).
Proof. exact (eq_refl (term369 A B D P Q _112646)). Qed.
Lemma lem8327805 {A B D P Q : Type'} : (term370 A B D P Q) = (term370 A B D P Q).
Proof. exact (eq_refl (term370 A B D P Q)). Qed.
Lemma lem8327806 {A B D P Q : Type'} (_112646 : P -> Prop) : ((term357 A B D P Q) = (term369 A B D P Q _112646)) = ((term357 A B D P Q) = (term363 A B D P Q _112646)).
Proof. exact (MK_COMB (@lem8327805 A B D P Q) (@lem8327804 A B D P Q _112646)). Qed.
Lemma lem8327807 {P : Type'} (_112646 : P -> Prop) : (term371 P _112646) = (term371 P _112646).
Proof. exact (eq_refl (term371 P _112646)). Qed.
Lemma lem8327808 {A B D P Q : Type'} (_112646 : P -> Prop) : (term372 A B D P Q _112646) = (term364 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8327807 P _112646) (@lem8327806 A B D P Q _112646)). Qed.
Lemma lem8327809 {A B D P Q : Type'} : (term373 A B D P Q) = (term374 A B D P Q).
Proof. exact (fun_ext (fun _112646 : P -> Prop => @lem8327808 A B D P Q _112646)). Qed.
Lemma lem8327810 {P : Type'} : (@all (P -> Prop)) = (@all (P -> Prop)).
Proof. exact (eq_refl (@all (P -> Prop))). Qed.
Lemma lem8327811 {A B D P Q : Type'} : (term375 A B D P Q) = (term365 A B D P Q).
Proof. exact (MK_COMB (@lem8327810 P) (@lem8327809 A B D P Q)). Qed.
Lemma lem8327812 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327813 {A B D P Q : Type'} : (term376 A B D P Q) = (term377 A B D P Q).
Proof. exact (MK_COMB (@lem8327812) (@lem8327811 A B D P Q)). Qed.
Lemma lem8327814 {A B D P Q : Type'} (_112646 : P -> Prop) : (term369 A B D P Q _112646) = (term363 A B D P Q _112646).
Proof. exact (eq_refl (term369 A B D P Q _112646)). Qed.
Lemma lem8327815 {P : Type'} (_112646 : P -> Prop) : (term371 P _112646) = (term371 P _112646).
Proof. exact (eq_refl (term371 P _112646)). Qed.
Lemma lem8327816 {A B D P Q : Type'} (_112646 : P -> Prop) : (term378 A B D P Q _112646) = (term379 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8327815 P _112646) (@lem8327814 A B D P Q _112646)). Qed.
Lemma lem8327817 {A B D P Q : Type'} : (term380 A B D P Q) = (term381 A B D P Q).
Proof. exact (fun_ext (fun _112646 : P -> Prop => @lem8327816 A B D P Q _112646)). Qed.
Lemma lem8327818 {P : Type'} : (@all (P -> Prop)) = (@all (P -> Prop)).
Proof. exact (eq_refl (@all (P -> Prop))). Qed.
Lemma lem8327819 {A B D P Q : Type'} : (term382 A B D P Q) = (term383 A B D P Q).
Proof. exact (MK_COMB (@lem8327818 P) (@lem8327817 A B D P Q)). Qed.
Lemma lem8327820 {A B D P Q : Type'} : (term370 A B D P Q) = (term370 A B D P Q).
Proof. exact (eq_refl (term370 A B D P Q)). Qed.
Lemma lem8327821 {A B D P Q : Type'} : ((term357 A B D P Q) = (term382 A B D P Q)) = ((term357 A B D P Q) = (term383 A B D P Q)).
Proof. exact (MK_COMB (@lem8327820 A B D P Q) (@lem8327819 A B D P Q)). Qed.
Lemma lem8327822 {A B D P Q : Type'} : (term367 A B D P Q) = (term384 A B D P Q).
Proof. exact (MK_COMB (@lem8327813 A B D P Q) (@lem8327821 A B D P Q)). Qed.
Lemma lem8327823 {A B D P Q : Type'} : term384 A B D P Q.
Proof. exact (EQ_MP (@lem8327822 A B D P Q) (@lem8327803 A B D P Q)). Qed.
Lemma lem8327824 {A B D P Q : Type'} : (term357 A B D P Q) = (term383 A B D P Q).
Proof. exact (@lem8327823 A B D P Q (@lem8327799 A B D P Q)). Qed.
Lemma lem8327826 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term340 _3571 _3575 t)) = (term341 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem8327827 {P : Type'} (s : P -> Prop) (t : P -> Prop) : (s = (term385 P t)) = (term386 P s t).
Proof. exact (@lem8327826 Prop P s t). Qed.
Lemma lem8327828 {P : Type'} (_112646 : P -> Prop) : (_112646 = (term387 P)) = (term388 P _112646).
Proof. exact (@lem8327827 P _112646 (term347 P)). Qed.
Lemma lem8327829 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8327830 {P : Type'} : (term387 P) = (term347 P).
Proof. exact (fun_ext (fun a : P => @lem8327829 P a)). Qed.
Lemma lem8327831 {P : Type'} (_112646 : P -> Prop) : (@eq (P -> Prop) _112646) = (@eq (P -> Prop) _112646).
Proof. exact (eq_refl (@eq (P -> Prop) _112646)). Qed.
Lemma lem8327832 {P : Type'} (_112646 : P -> Prop) : (_112646 = (term387 P)) = (_112646 = (term347 P)).
Proof. exact (MK_COMB (@lem8327831 P _112646) (@lem8327830 P)). Qed.
Lemma lem8327833 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8327834 {P : Type'} (_112646 : P -> Prop) : (term390 P _112646) = (term391 P _112646).
Proof. exact (MK_COMB (@lem8327833) (@lem8327832 P _112646)). Qed.
Lemma lem8327835 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8327836 {P : Type'} (_112646 : P -> Prop) (a : P) : (term392 P _112646 a) = (term392 P _112646 a).
Proof. exact (eq_refl (term392 P _112646 a)). Qed.
Lemma lem8327837 {P : Type'} (_112646 : P -> Prop) (a : P) : ((_112646 a) = (term389 P a)) = ((_112646 a) = True).
Proof. exact (MK_COMB (@lem8327836 P _112646 a) (@lem8327835 P a)). Qed.
Lemma lem8327838 {P : Type'} (_112646 : P -> Prop) : (term393 P _112646) = (term394 P _112646).
Proof. exact (fun_ext (fun a : P => @lem8327837 P _112646 a)). Qed.
Lemma lem8327839 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327840 {P : Type'} (_112646 : P -> Prop) : (term388 P _112646) = (term395 P _112646).
Proof. exact (MK_COMB (@lem8327839 P) (@lem8327838 P _112646)). Qed.
Lemma lem8327841 {P : Type'} (_112646 : P -> Prop) : ((_112646 = (term387 P)) = (term388 P _112646)) = ((_112646 = (term347 P)) = (term395 P _112646)).
Proof. exact (MK_COMB (@lem8327834 P _112646) (@lem8327840 P _112646)). Qed.
Lemma lem8327842 {P : Type'} (_112646 : P -> Prop) : (_112646 = (term347 P)) = (term395 P _112646).
Proof. exact (EQ_MP (@lem8327841 P _112646) (@lem8327828 P _112646)). Qed.
Lemma lem8327843 {P : Type'} (_112646 : P -> Prop) (a : P) : ((_112646 a) = True) = ((_112646 a) = True).
Proof. exact (eq_refl ((_112646 a) = True)). Qed.
Lemma lem8327844 {P : Type'} (_112646 : P -> Prop) : (term394 P _112646) = (term394 P _112646).
Proof. exact (fun_ext (fun a : P => @lem8327843 P _112646 a)). Qed.
Lemma lem8327845 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327846 {P : Type'} (_112646 : P -> Prop) : (term395 P _112646) = (term395 P _112646).
Proof. exact (MK_COMB (@lem8327845 P) (@lem8327844 P _112646)). Qed.
Lemma lem8327847 {P : Type'} (_112646 : P -> Prop) : (_112646 = (term347 P)) = (term395 P _112646).
Proof. exact (TRANS (@lem8327842 P _112646) (@lem8327846 P _112646)). Qed.
Lemma lem8327848 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327849 {P : Type'} (_112646 : P -> Prop) : (term371 P _112646) = (term396 P _112646).
Proof. exact (MK_COMB (@lem8327848) (@lem8327847 P _112646)). Qed.
Lemma lem8327850 {A B D P Q : Type'} (_112646 : P -> Prop) : (term363 A B D P Q _112646) = (term363 A B D P Q _112646).
Proof. exact (eq_refl (term363 A B D P Q _112646)). Qed.
Lemma lem8327851 {A B D P Q : Type'} (_112646 : P -> Prop) : (term379 A B D P Q _112646) = (term397 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8327849 P _112646) (@lem8327850 A B D P Q _112646)). Qed.
Lemma lem8327852 {A B D P Q : Type'} : (term381 A B D P Q) = (term398 A B D P Q).
Proof. exact (fun_ext (fun _112646 : P -> Prop => @lem8327851 A B D P Q _112646)). Qed.
Lemma lem8327853 {P : Type'} : (@all (P -> Prop)) = (@all (P -> Prop)).
Proof. exact (eq_refl (@all (P -> Prop))). Qed.
Lemma lem8327854 {A B D P Q : Type'} : (term383 A B D P Q) = (term399 A B D P Q).
Proof. exact (MK_COMB (@lem8327853 P) (@lem8327852 A B D P Q)). Qed.
Lemma lem8327855 {A B D P Q : Type'} : (term370 A B D P Q) = (term370 A B D P Q).
Proof. exact (eq_refl (term370 A B D P Q)). Qed.
Lemma lem8327856 {A B D P Q : Type'} : ((term357 A B D P Q) = (term383 A B D P Q)) = ((term357 A B D P Q) = (term399 A B D P Q)).
Proof. exact (MK_COMB (@lem8327855 A B D P Q) (@lem8327854 A B D P Q)). Qed.
Lemma lem8327859 {A B D P Q : Type'} : (term357 A B D P Q) = (term399 A B D P Q).
Proof. exact (EQ_MP (@lem8327856 A B D P Q) (@lem8327824 A B D P Q)). Qed.
Lemma lem8327860 {A B D P Q : Type'} : (term270 A B D P Q) = (term399 A B D P Q).
Proof. exact (TRANS (@lem8327532 A B D P Q) (@lem8327859 A B D P Q)). Qed.
Lemma lem8327861 {A B D P Q : Type'} : (term269 A B D P Q) = (term399 A B D P Q).
Proof. exact (TRANS (@lem8327223 A B D P Q) (@lem8327860 A B D P Q)). Qed.
Lemma lem8327866 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term272 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term272 D P Q pat e q x t)). Qed.
Lemma lem8327867 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term273 D P Q pat e q x) = (term273 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8327866 D P Q pat e q x t)). Qed.
Lemma lem8327868 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327869 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8327868 Q) (@lem8327867 D P Q pat e q x)). Qed.
Lemma lem8327878 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term274 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327879 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term275 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8327878 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8327880 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8327881 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term276 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8327880 Q) (@lem8327879 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327882 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term113 A B D P Q pat e q f arg x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8327881 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8327883 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem8327884 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term115 A B D P Q pat e q f arg x) = (term115 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327883 B) (@lem8327882 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327885 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8327886 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term277 A B D P Q pat e q f arg x) = (term277 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8327885) (@lem8327884 A B D P Q pat e q f arg x)). Qed.
Lemma lem8327887 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)) = ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)).
Proof. exact (MK_COMB (@lem8327886 A B D P Q pat e q f arg x) (@lem8327869 D P Q pat e q x)). Qed.
Lemma lem8327890 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (term146 A B P p f x) = (term146 A B P p f x).
Proof. exact (eq_refl (term146 A B P p f x)). Qed.
Lemma lem8327891 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term178 A B D P Q p f arg pat e q x) = (term178 A B D P Q p f arg pat e q x).
Proof. exact (MK_COMB (@lem8327890 A B P p f x) (@lem8327887 A B D P Q f arg pat e q x)). Qed.
Lemma lem8327892 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term278 A B D P Q p f arg pat e q) = (term278 A B D P Q p f arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8327891 A B D P Q p f arg pat e q x)). Qed.
Lemma lem8327893 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327894 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term176 A B D P Q p f arg pat e q) = (term176 A B D P Q p f arg pat e q).
Proof. exact (MK_COMB (@lem8327893 P) (@lem8327892 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327895 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term279 A B D P Q p arg pat e q) = (term279 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8327894 A B D P Q p f arg pat e q)). Qed.
Lemma lem8327896 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327897 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term174 A B D P Q p arg pat e q) = (term174 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8327896 A B) (@lem8327895 A B D P Q p arg pat e q)). Qed.
Lemma lem8327900 {A B P : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) : (term282 A B P lt2 _112645 s p) = (term282 A B P lt2 _112645 s p).
Proof. exact (eq_refl (term282 A B P lt2 _112645 s p)). Qed.
Lemma lem8327901 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term283 A B D P Q lt2 _112645 s p arg pat e q) = (term283 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327900 A B P lt2 _112645 s p) (@lem8327897 A B D P Q p arg pat e q)). Qed.
Lemma lem8327906 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term284 A P Q arg t lt2 y s a) = (term284 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term284 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327907 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term285 A P Q arg t lt2 s a) = (term285 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8327906 A P Q arg t lt2 y s a)). Qed.
Lemma lem8327908 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8327909 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term286 A P Q arg t lt2 s a) = (term286 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327908 A) (@lem8327907 A P Q arg t lt2 s a)). Qed.
Lemma lem8327920 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term287 A B D P Q p f q pat t e a) = (term287 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term287 A B D P Q p f q pat t e a)). Qed.
Lemma lem8327921 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term288 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8327920 A B D P Q p f q pat t e a) (@lem8327909 A P Q arg t lt2 s a)). Qed.
Lemma lem8327922 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term289 A B D P Q p f q pat e arg lt2 s a) = (term289 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8327921 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8327923 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327924 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term290 A B D P Q p f q pat e arg lt2 s a) = (term290 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8327923 Q) (@lem8327922 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327925 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term291 A B D P Q p f q pat e arg lt2 s) = (term291 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8327924 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8327926 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327927 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term292 A B D P Q p f q pat e arg lt2 s) = (term292 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327926 P) (@lem8327925 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327928 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term293 A B D P Q p q pat e arg lt2 s) = (term293 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8327927 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8327929 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327930 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term35 A B D P Q p q pat e arg lt2 s) = (term35 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327929 A B) (@lem8327928 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327932 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8327931) (@lem8327930 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8327933 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term294 A B D P Q lt2 _112645 s p arg pat e q) = (term294 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327932 A B D P Q p q pat e arg lt2 s) (@lem8327901 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327954 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term295 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term295 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327955 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term296 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8327954 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8327956 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327957 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term297 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8327956 Q) (@lem8327955 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327958 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term298 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8327957 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8327959 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8327960 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term299 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8327959 Q) (@lem8327958 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327961 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term300 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8327960 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8327962 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8327963 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term301 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8327962 P) (@lem8327961 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327964 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term302 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8327963 A B D P Q p f pat e q arg)). Qed.
Lemma lem8327965 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327966 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term36 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327965 A B) (@lem8327964 A B D P Q p pat e q arg)). Qed.
Lemma lem8327967 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327968 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8327967) (@lem8327966 A B D P Q p pat e q arg)). Qed.
Lemma lem8327969 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term303 A B D P Q lt2 _112645 s p arg pat e q) = (term303 A B D P Q lt2 _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327968 A B D P Q p pat e q arg) (@lem8327933 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327970 {A B D P Q : Type'} (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term304 A B D P Q _112645 s p arg pat e q) = (term304 A B D P Q _112645 s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8327969 A B D P Q lt2 _112645 s p arg pat e q)). Qed.
Lemma lem8327971 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8327972 {A B D P Q : Type'} (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term305 A B D P Q _112645 s p arg pat e q) = (term305 A B D P Q _112645 s p arg pat e q).
Proof. exact (MK_COMB (@lem8327971 A) (@lem8327970 A B D P Q _112645 s p arg pat e q)). Qed.
Lemma lem8327973 {A B D P Q : Type'} (_112645 : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term306 A B D P Q _112645 p arg pat e q) = (term306 A B D P Q _112645 p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8327972 A B D P Q _112645 s p arg pat e q)). Qed.
Lemma lem8327974 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8327975 {A B D P Q : Type'} (_112645 : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term307 A B D P Q _112645 p arg pat e q) = (term307 A B D P Q _112645 p arg pat e q).
Proof. exact (MK_COMB (@lem8327974 A P) (@lem8327973 A B D P Q _112645 p arg pat e q)). Qed.
Lemma lem8327976 {A B D P Q : Type'} (_112645 : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term308 A B D P Q _112645 arg pat e q) = (term308 A B D P Q _112645 arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8327975 A B D P Q _112645 p arg pat e q)). Qed.
Lemma lem8327977 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8327978 {A B D P Q : Type'} (_112645 : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term309 A B D P Q _112645 arg pat e q) = (term309 A B D P Q _112645 arg pat e q).
Proof. exact (MK_COMB (@lem8327977 A B P) (@lem8327976 A B D P Q _112645 arg pat e q)). Qed.
Lemma lem8327979 {A B D P Q : Type'} (_112645 : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term310 A B D P Q _112645 pat e q) = (term310 A B D P Q _112645 pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8327978 A B D P Q _112645 arg pat e q)). Qed.
Lemma lem8327980 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8327981 {A B D P Q : Type'} (_112645 : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term311 A B D P Q _112645 pat e q) = (term311 A B D P Q _112645 pat e q).
Proof. exact (MK_COMB (@lem8327980 A P Q) (@lem8327979 A B D P Q _112645 pat e q)). Qed.
Lemma lem8327982 {A B D P Q : Type'} (_112645 : type560 A B P) (e : P -> D) (q : type1413 P Q) : (term312 A B D P Q _112645 e q) = (term312 A B D P Q _112645 e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8327981 A B D P Q _112645 pat e q)). Qed.
Lemma lem8327983 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8327984 {A B D P Q : Type'} (_112645 : type560 A B P) (e : P -> D) (q : type1413 P Q) : (term313 A B D P Q _112645 e q) = (term313 A B D P Q _112645 e q).
Proof. exact (MK_COMB (@lem8327983 D Q) (@lem8327982 A B D P Q _112645 e q)). Qed.
Lemma lem8327985 {A B D P Q : Type'} (_112645 : type560 A B P) (q : type1413 P Q) : (term314 A B D P Q _112645 q) = (term314 A B D P Q _112645 q).
Proof. exact (fun_ext (fun e : P -> D => @lem8327984 A B D P Q _112645 e q)). Qed.
Lemma lem8327986 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8327987 {A B D P Q : Type'} (_112645 : type560 A B P) (q : type1413 P Q) : (term315 A B D P Q _112645 q) = (term315 A B D P Q _112645 q).
Proof. exact (MK_COMB (@lem8327986 D P) (@lem8327985 A B D P Q _112645 q)). Qed.
Lemma lem8327988 {A B D P Q : Type'} (_112645 : type560 A B P) : (term316 A B D P Q _112645) = (term316 A B D P Q _112645).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8327987 A B D P Q _112645 q)). Qed.
Lemma lem8327989 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8327990 {A B D P Q : Type'} (_112645 : type560 A B P) : (term317 A B D P Q _112645) = (term317 A B D P Q _112645).
Proof. exact (MK_COMB (@lem8327989 P Q) (@lem8327988 A B D P Q _112645)). Qed.
Lemma lem8327991 {A B P : Type'} (_112645 : type560 A B P) (f : A -> B) (_112646 : P -> Prop) : ((_112645 f) = _112646) = ((_112645 f) = _112646).
Proof. exact (eq_refl ((_112645 f) = _112646)). Qed.
Lemma lem8327992 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) : (term358 A B P _112645 _112646) = (term358 A B P _112645 _112646).
Proof. exact (fun_ext (fun f : A -> B => @lem8327991 A B P _112645 f _112646)). Qed.
Lemma lem8327993 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8327994 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) : (term359 A B P _112645 _112646) = (term359 A B P _112645 _112646).
Proof. exact (MK_COMB (@lem8327993 A B) (@lem8327992 A B P _112645 _112646)). Qed.
Lemma lem8327995 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8327996 {A B P : Type'} (_112645 : type560 A B P) (_112646 : P -> Prop) : (term360 A B P _112645 _112646) = (term360 A B P _112645 _112646).
Proof. exact (MK_COMB (@lem8327995) (@lem8327994 A B P _112645 _112646)). Qed.
Lemma lem8327997 {A B D P Q : Type'} (_112646 : P -> Prop) (_112645 : type560 A B P) : (term361 A B D P Q _112646 _112645) = (term361 A B D P Q _112646 _112645).
Proof. exact (MK_COMB (@lem8327996 A B P _112645 _112646) (@lem8327990 A B D P Q _112645)). Qed.
Lemma lem8327998 {A B D P Q : Type'} (_112646 : P -> Prop) : (term362 A B D P Q _112646) = (term362 A B D P Q _112646).
Proof. exact (fun_ext (fun _112645 : type560 A B P => @lem8327997 A B D P Q _112646 _112645)). Qed.
Lemma lem8327999 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8328000 {A B D P Q : Type'} (_112646 : P -> Prop) : (term363 A B D P Q _112646) = (term363 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8327999 A B P) (@lem8327998 A B D P Q _112646)). Qed.
Lemma lem8328005 {P : Type'} (_112646 : P -> Prop) (a : P) : ((_112646 a) = True) = ((_112646 a) = True).
Proof. exact (eq_refl ((_112646 a) = True)). Qed.
Lemma lem8328006 {P : Type'} (_112646 : P -> Prop) : (term394 P _112646) = (term394 P _112646).
Proof. exact (fun_ext (fun a : P => @lem8328005 P _112646 a)). Qed.
Lemma lem8328007 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8328008 {P : Type'} (_112646 : P -> Prop) : (term395 P _112646) = (term395 P _112646).
Proof. exact (MK_COMB (@lem8328007 P) (@lem8328006 P _112646)). Qed.
Lemma lem8328009 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8328010 {P : Type'} (_112646 : P -> Prop) : (term396 P _112646) = (term396 P _112646).
Proof. exact (MK_COMB (@lem8328009) (@lem8328008 P _112646)). Qed.
Lemma lem8328011 {A B D P Q : Type'} (_112646 : P -> Prop) : (term397 A B D P Q _112646) = (term397 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8328010 P _112646) (@lem8328000 A B D P Q _112646)). Qed.
Lemma lem8328012 {A B D P Q : Type'} : (term398 A B D P Q) = (term398 A B D P Q).
Proof. exact (fun_ext (fun _112646 : P -> Prop => @lem8328011 A B D P Q _112646)). Qed.
Lemma lem8328013 {P : Type'} : (@all (P -> Prop)) = (@all (P -> Prop)).
Proof. exact (eq_refl (@all (P -> Prop))). Qed.
Lemma lem8328014 {A B D P Q : Type'} : (term399 A B D P Q) = (term399 A B D P Q).
Proof. exact (MK_COMB (@lem8328013 P) (@lem8328012 A B D P Q)). Qed.
Lemma lem8328015 {A B D P Q : Type'} : (term269 A B D P Q) = (term399 A B D P Q).
Proof. exact (TRANS (@lem8327861 A B D P Q) (@lem8328014 A B D P Q)). Qed.
Lemma lem8328031 (t : Prop) : (t = True) = t.
Proof. exact (proj1 (@lem21741 t)). Qed.
Lemma lem8328032 {P : Type'} (_112646 : P -> Prop) (a : P) : ((_112646 a) = True) = (_112646 a).
Proof. exact (@lem8328031 (_112646 a)). Qed.
Lemma lem8328033 {P : Type'} (_112646 : P -> Prop) : (term394 P _112646) = (term385 P _112646).
Proof. exact (fun_ext (fun a : P => @lem8328032 P _112646 a)). Qed.
Lemma lem8328034 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8328035 {P : Type'} (_112646 : P -> Prop) : (term395 P _112646) = (term400 P _112646).
Proof. exact (MK_COMB (@lem8328034 P) (@lem8328033 P _112646)). Qed.
Lemma lem8328042 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8328043 {P : Type'} (_112646 : P -> Prop) : (term396 P _112646) = (term401 P _112646).
Proof. exact (MK_COMB (@lem8328042) (@lem8328035 P _112646)). Qed.
Lemma lem8328204 {A B D P Q : Type'} (_112646 : P -> Prop) : (term363 A B D P Q _112646) = (term363 A B D P Q _112646).
Proof. exact (eq_refl (term363 A B D P Q _112646)). Qed.
Lemma lem8328205 {A B D P Q : Type'} (_112646 : P -> Prop) : (term397 A B D P Q _112646) = (term402 A B D P Q _112646).
Proof. exact (MK_COMB (@lem8328043 P _112646) (@lem8328204 A B D P Q _112646)). Qed.
Lemma lem8328208 {A B D P Q : Type'} : (term398 A B D P Q) = (term403 A B D P Q).
Proof. exact (fun_ext (fun _112646 : P -> Prop => @lem8328205 A B D P Q _112646)). Qed.
Lemma lem8328209 {P : Type'} : (@all (P -> Prop)) = (@all (P -> Prop)).
Proof. exact (eq_refl (@all (P -> Prop))). Qed.
Lemma lem8328210 {A B D P Q : Type'} : (term399 A B D P Q) = (term404 A B D P Q).
Proof. exact (MK_COMB (@lem8328209 P) (@lem8328208 A B D P Q)). Qed.
Lemma lem8328217 {A B D P Q : Type'} : (term269 A B D P Q) = (term404 A B D P Q).
Proof. exact (TRANS (@lem8328015 A B D P Q) (@lem8328210 A B D P Q)). Qed.
Lemma lem8328218 {A B D P Q : Type'} : (term404 A B D P Q) = (term269 A B D P Q).
Proof. exact (SYM (@lem8328217 A B D P Q)). Qed.
Lemma lem8328221 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term36 A B D P Q p pat e q arg.
Proof. exact (h1). Qed.
Lemma lem8328226 (p : Prop) : p = (term226 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8328227 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)) = (term405 A B D P Q f arg pat e q x).
Proof. exact (@lem8328226 ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x))). Qed.
Lemma lem8328228 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term405 A B D P Q f arg pat e q x) = ((term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x)).
Proof. exact (SYM (@lem8328227 A B D P Q f arg pat e q x)). Qed.
Lemma lem8328229 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term406 A B D P Q f arg pat e q x) : term406 A B D P Q f arg pat e q x.
Proof. exact (h1). Qed.
Lemma lem8328265 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term407 D P Q pat e q a u) = (term408 D P Q pat e q a u).
Proof. exact (@lem17045 ((pat u) = (e a)) (q a u)). Qed.
Lemma lem8328267 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term409 P Q q a t) = (term409 P Q q a t).
Proof. exact (eq_refl (term409 P Q q a t)). Qed.
Lemma lem8328268 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term410 D P Q t pat e q a u) = (term411 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8328267 P Q q a t) (@lem8328265 D P Q pat e q a u)). Qed.
Lemma lem8328269 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term412 D P Q t pat e q a u) = (term410 D P Q t pat e q a u).
Proof. exact (@lem17045 (q a t) (term272 D P Q pat e q a u)). Qed.
Lemma lem8328270 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term412 D P Q t pat e q a u) = (term411 D P Q t pat e q a u).
Proof. exact (TRANS (@lem8328269 D P Q t pat e q a u) (@lem8328268 D P Q t pat e q a u)). Qed.
Lemma lem8328272 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term413 D P Q pat t e a) = (term413 D P Q pat t e a).
Proof. exact (eq_refl (term413 D P Q pat t e a)). Qed.
Lemma lem8328273 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term414 D P Q t pat e q a u) = (term415 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8328272 D P Q pat t e a) (@lem8328270 D P Q t pat e q a u)). Qed.
Lemma lem8328274 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term416 D P Q t pat e q a u) = (term414 D P Q t pat e q a u).
Proof. exact (@lem17045 ((pat t) = (e a)) (term417 D P Q t pat e q a u)). Qed.
Lemma lem8328275 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term416 D P Q t pat e q a u) = (term415 D P Q t pat e q a u).
Proof. exact (TRANS (@lem8328274 D P Q t pat e q a u) (@lem8328273 D P Q t pat e q a u)). Qed.
Lemma lem8328277 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term418 A B P p f a).
Proof. exact (eq_refl (term418 A B P p f a)). Qed.
Lemma lem8328278 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term419 A B D P Q p f t pat e q a u) = (term420 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8328277 A B P p f a) (@lem8328275 D P Q t pat e q a u)). Qed.
Lemma lem8328279 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term421 A B D P Q p f t pat e q a u) = (term419 A B D P Q p f t pat e q a u).
Proof. exact (@lem17045 (p f a) (term422 D P Q t pat e q a u)). Qed.
Lemma lem8328280 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term421 A B D P Q p f t pat e q a u) = (term420 A B D P Q p f t pat e q a u).
Proof. exact (TRANS (@lem8328279 A B D P Q p f t pat e q a u) (@lem8328278 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8328281 {A P Q : Type'} (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : ((arg a t) = (arg a u)) = ((arg a t) = (arg a u)).
Proof. exact (eq_refl ((arg a t) = (arg a u))). Qed.
Lemma lem8328282 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328283 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term423 A B D P Q p f t pat e q a u) = (term424 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8328282) (@lem8328280 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8328284 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term425 A B D P Q p f pat e q t arg a u) = (term426 A B D P Q p f pat e q t arg a u).
Proof. exact (MK_COMB (@lem8328283 A B D P Q p f t pat e q a u) (@lem8328281 A P Q t arg a u)). Qed.
Lemma lem8328285 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term425 A B D P Q p f pat e q t arg a u).
Proof. exact (@lem17265 (term427 A B D P Q p f t pat e q a u) ((arg a t) = (arg a u))). Qed.
Lemma lem8328286 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term426 A B D P Q p f pat e q t arg a u).
Proof. exact (TRANS (@lem8328285 A B D P Q p f pat e q t arg a u) (@lem8328284 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8328287 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term428 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8328286 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8328288 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8328289 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term429 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8328288 Q) (@lem8328287 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8328290 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term430 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8328289 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8328291 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8328292 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term431 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8328291 Q) (@lem8328290 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8328293 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term432 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8328292 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8328294 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8328295 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term433 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8328294 P) (@lem8328293 A B D P Q p f pat e q arg)). Qed.
Lemma lem8328296 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term434 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8328295 A B D P Q p f pat e q arg)). Qed.
Lemma lem8328297 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8328362 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term435 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8328297 A B) (@lem8328296 A B D P Q p pat e q arg)). Qed.
Lemma lem8328363 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term435 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8328362 A B D P Q p pat e q arg) (@lem8328221 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8328521 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) (h1 : p f x) : p f x.
Proof. exact (h1). Qed.
Lemma lem8328532 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term436 A B P Q q f arg x t v) = (term437 A B P Q q f arg x t v).
Proof. exact (@lem17045 (q x t) ((term77 A B P Q f arg x t) = v)). Qed.
Lemma lem8328537 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term413 D P Q pat t e x) = (term413 D P Q pat t e x).
Proof. exact (eq_refl (term413 D P Q pat t e x)). Qed.
Lemma lem8328538 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term438 A B D P Q pat e q f arg x t v) = (term439 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8328537 D P Q pat t e x) (@lem8328532 A B P Q q f arg x t v)). Qed.
Lemma lem8328539 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term440 A B D P Q pat e q f arg x t v) = (term438 A B D P Q pat e q f arg x t v).
Proof. exact (@lem17045 ((pat t) = (e x)) (term441 A B P Q q f arg x t v)). Qed.
Lemma lem8328540 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term440 A B D P Q pat e q f arg x t v) = (term439 A B D P Q pat e q f arg x t v).
Proof. exact (TRANS (@lem8328539 A B D P Q pat e q f arg x t v) (@lem8328538 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328543 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term274 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328544 {Q : Type'} (P : Q -> Prop) : (term442 Q P) = (term443 Q P).
Proof. exact (@lem18394 Q P). Qed.
Lemma lem8328545 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term444 A B D P Q pat e q f arg x v) = (term445 A B D P Q pat e q f arg x v).
Proof. exact (@lem8328544 Q (term275 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328546 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term446 A B D P Q pat e q f arg x v t) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8328547 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8328548 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term447 A B D P Q pat e q f arg x v t) = (term440 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8328547) (@lem8328546 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328549 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term447 A B D P Q pat e q f arg x v t) = (term439 A B D P Q pat e q f arg x t v).
Proof. exact (TRANS (@lem8328548 A B D P Q pat e q f arg x t v) (@lem8328540 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328550 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term448 A B D P Q pat e q f arg x v) = (term449 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8328549 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328551 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8328552 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term445 A B D P Q pat e q f arg x v) = (term450 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328551 Q) (@lem8328550 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328553 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term444 A B D P Q pat e q f arg x v) = (term450 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8328545 A B D P Q pat e q f arg x v) (@lem8328552 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328554 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term275 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8328543 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8328555 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8328556 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term276 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328555 Q) (@lem8328554 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328557 {B : Type'} (v' : B) (v : B) : (term451 B v' v) = (term451 B v' v).
Proof. exact (eq_refl (term451 B v' v)). Qed.
Lemma lem8328558 {B : Type'} (v' : B) (v : B) : (v' = v) = (v' = v).
Proof. exact (eq_refl (v' = v)). Qed.
Lemma lem8328559 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term452 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term452 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328560 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term452 A B D P Q pat e q f arg x v') = (term276 A B D P Q pat e q f arg x v').
Proof. exact (eq_refl (term452 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328561 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term276 A B D P Q pat e q f arg x v') = (term276 A B D P Q pat e q f arg x v').
Proof. exact (@lem8328556 A B D P Q pat e q f arg x v'). Qed.
Lemma lem8328562 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term444 A B D P Q pat e q f arg x v') = (term450 A B D P Q pat e q f arg x v').
Proof. exact (@lem8328553 A B D P Q pat e q f arg x v'). Qed.
Lemma lem8328563 {B : Type'} (P : B -> Prop) : (@ex1 B P) = (term453 B P).
Proof. exact (@lem18897 B P). Qed.
Lemma lem8328564 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term115 A B D P Q pat e q f arg x) = (term454 A B D P Q pat e q f arg x).
Proof. exact (@lem8328563 B (term113 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328565 {B : Type'} (P : B -> Prop) : (term455 B P) = (term456 B P).
Proof. exact (@lem18393 B P). Qed.
Lemma lem8328566 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term457 A B D P Q pat e q f arg x) = (term458 A B D P Q pat e q f arg x).
Proof. exact (@lem8328565 B (term113 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328567 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8328568 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term459 A B D P Q pat e q f arg x v') = (term444 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8328567) (@lem8328560 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328569 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term459 A B D P Q pat e q f arg x v') = (term450 A B D P Q pat e q f arg x v').
Proof. exact (TRANS (@lem8328568 A B D P Q pat e q f arg x v') (@lem8328562 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328570 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328571 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term460 A B D P Q pat e q f arg x v') = (term461 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8328570) (@lem8328569 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328572 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term462 A B D P Q pat e q f arg x v' v) = (term463 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8328571 A B D P Q pat e q f arg x v') (@lem8328558 B v' v)). Qed.
Lemma lem8328573 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8328574 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term459 A B D P Q pat e q f arg x v) = (term444 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328573) (@lem8328559 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328575 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term459 A B D P Q pat e q f arg x v) = (term450 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8328574 A B D P Q pat e q f arg x v) (@lem8328553 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328576 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328577 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term460 A B D P Q pat e q f arg x v) = (term461 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328576) (@lem8328575 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328578 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term464 A B D P Q pat e q f arg x v' v) = (term465 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8328577 A B D P Q pat e q f arg x v) (@lem8328572 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328579 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term466 A B D P Q pat e q f arg x v) = (term467 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8328578 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328580 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328581 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term468 A B D P Q pat e q f arg x v) = (term469 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328580 B) (@lem8328579 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328582 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term470 A B D P Q pat e q f arg x) = (term471 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8328581 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328583 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328584 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term472 A B D P Q pat e q f arg x) = (term473 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328583 B) (@lem8328582 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328585 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term452 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8328559 A B D P Q pat e q f arg x v) (@lem8328556 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328586 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term474 A B D P Q pat e q f arg x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8328585 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328587 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8328588 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term475 A B D P Q pat e q f arg x) = (term476 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328587 B) (@lem8328586 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328590 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term477 A B D P Q pat e q f arg x) = (term478 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328589) (@lem8328588 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328591 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term454 A B D P Q pat e q f arg x) = (term479 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328590 A B D P Q pat e q f arg x) (@lem8328584 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328592 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term452 A B D P Q pat e q f arg x v') = (term276 A B D P Q pat e q f arg x v').
Proof. exact (TRANS (@lem8328560 A B D P Q pat e q f arg x v') (@lem8328561 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328593 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328594 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term480 A B D P Q pat e q f arg x v') = (term481 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8328593) (@lem8328592 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8328595 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term482 A B D P Q pat e q f arg x v' v) = (term483 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8328594 A B D P Q pat e q f arg x v') (@lem8328557 B v' v)). Qed.
Lemma lem8328596 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term452 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8328559 A B D P Q pat e q f arg x v) (@lem8328556 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328597 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328598 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term480 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328597) (@lem8328596 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328599 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term484 A B D P Q pat e q f arg x v' v) = (term485 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8328598 A B D P Q pat e q f arg x v) (@lem8328595 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328600 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term486 A B D P Q pat e q f arg x v) = (term487 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8328599 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328601 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8328602 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term488 A B D P Q pat e q f arg x v) = (term489 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328601 B) (@lem8328600 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328603 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term490 A B D P Q pat e q f arg x) = (term491 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8328602 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328604 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8328605 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term492 A B D P Q pat e q f arg x) = (term493 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328604 B) (@lem8328603 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328606 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8328607 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term459 A B D P Q pat e q f arg x v) = (term444 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328606) (@lem8328559 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328608 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term459 A B D P Q pat e q f arg x v) = (term450 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8328607 A B D P Q pat e q f arg x v) (@lem8328553 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328609 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term494 A B D P Q pat e q f arg x) = (term495 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8328608 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328610 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328611 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term496 A B D P Q pat e q f arg x) = (term497 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328610 B) (@lem8328609 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328612 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328613 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term498 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328612) (@lem8328611 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328614 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term458 A B D P Q pat e q f arg x) = (term500 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328613 A B D P Q pat e q f arg x) (@lem8328605 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328615 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term457 A B D P Q pat e q f arg x) = (term500 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8328566 A B D P Q pat e q f arg x) (@lem8328614 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328616 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term115 A B D P Q pat e q f arg x) = (term479 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8328564 A B D P Q pat e q f arg x) (@lem8328591 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328625 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term407 D P Q pat e q x t) = (term408 D P Q pat e q x t).
Proof. exact (@lem17045 ((pat t) = (e x)) (q x t)). Qed.
Lemma lem8328628 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term272 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term272 D P Q pat e q x t)). Qed.
Lemma lem8328629 {Q : Type'} (P : Q -> Prop) : (term442 Q P) = (term443 Q P).
Proof. exact (@lem18394 Q P). Qed.
Lemma lem8328630 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term207 D P Q pat e q x) = (term501 D P Q pat e q x).
Proof. exact (@lem8328629 Q (term273 D P Q pat e q x)). Qed.
Lemma lem8328631 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term502 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term502 D P Q pat e q x t)). Qed.
Lemma lem8328632 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8328633 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term503 D P Q pat e q x t) = (term407 D P Q pat e q x t).
Proof. exact (MK_COMB (@lem8328632) (@lem8328631 D P Q pat e q x t)). Qed.
Lemma lem8328634 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term503 D P Q pat e q x t) = (term408 D P Q pat e q x t).
Proof. exact (TRANS (@lem8328633 D P Q pat e q x t) (@lem8328625 D P Q pat e q x t)). Qed.
Lemma lem8328635 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term504 D P Q pat e q x) = (term505 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8328634 D P Q pat e q x t)). Qed.
Lemma lem8328636 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8328637 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term501 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8328636 Q) (@lem8328635 D P Q pat e q x)). Qed.
Lemma lem8328638 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term207 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (TRANS (@lem8328630 D P Q pat e q x) (@lem8328637 D P Q pat e q x)). Qed.
Lemma lem8328639 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term273 D P Q pat e q x) = (term273 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8328628 D P Q pat e q x t)). Qed.
Lemma lem8328640 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8328641 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8328640 Q) (@lem8328639 D P Q pat e q x)). Qed.
Lemma lem8328642 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328643 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term507 A B D P Q pat e q f arg x) = (term508 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328642) (@lem8328615 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328644 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term509 A B D P Q f arg pat e q x) = (term510 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328643 A B D P Q pat e q f arg x) (@lem8328641 D P Q pat e q x)). Qed.
Lemma lem8328645 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328646 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term511 A B D P Q pat e q f arg x) = (term512 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328645) (@lem8328616 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328647 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term513 A B D P Q f arg pat e q x) = (term514 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328646 A B D P Q pat e q f arg x) (@lem8328638 D P Q pat e q x)). Qed.
Lemma lem8328648 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328649 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term515 A B D P Q f arg pat e q x) = (term516 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328648) (@lem8328647 A B D P Q f arg pat e q x)). Qed.
Lemma lem8328650 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term517 A B D P Q f arg pat e q x) = (term518 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328649 A B D P Q f arg pat e q x) (@lem8328644 A B D P Q f arg pat e q x)). Qed.
Lemma lem8328651 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term406 A B D P Q f arg pat e q x) = (term517 A B D P Q f arg pat e q x).
Proof. exact (@lem17646 (term115 A B D P Q pat e q f arg x) (term179 D P Q pat e q x)). Qed.
Lemma lem8328652 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term406 A B D P Q f arg pat e q x) = (term518 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8328651 A B D P Q f arg pat e q x) (@lem8328650 A B D P Q f arg pat e q x)). Qed.
Lemma lem8328710 {A : Type'} (P : Prop) (Q : A -> Prop) : (term519 A P Q) = (term520 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem8328711 {B : Type'} (P : Prop) (Q : B -> Prop) : (term519 B P Q) = (term520 B P Q).
Proof. exact (@lem8328710 B P Q). Qed.
Lemma lem8328712 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term521 A B D P Q pat e q f arg x v) = (term522 A B D P Q pat e q f arg x v).
Proof. exact (@lem8328711 B (term450 A B D P Q pat e q f arg x v) (term523 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328713 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term524 A B D P Q pat e q f arg x v v') = (term463 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term524 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8328714 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term461 A B D P Q pat e q f arg x v) = (term461 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term461 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328715 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term525 A B D P Q pat e q f arg x v v') = (term465 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8328714 A B D P Q pat e q f arg x v) (@lem8328713 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328716 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term526 A B D P Q pat e q f arg x v) = (term467 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8328715 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328717 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328718 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term521 A B D P Q pat e q f arg x v) = (term469 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328717 B) (@lem8328716 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328719 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8328720 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term527 A B D P Q pat e q f arg x v) = (term528 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328719) (@lem8328718 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328721 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term524 A B D P Q pat e q f arg x v v') = (term463 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term524 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8328722 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term529 A B D P Q pat e q f arg x v) = (term523 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8328721 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8328723 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328724 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term530 A B D P Q pat e q f arg x v) = (term531 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328723 B) (@lem8328722 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328725 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term461 A B D P Q pat e q f arg x v) = (term461 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term461 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328726 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term522 A B D P Q pat e q f arg x v) = (term532 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8328725 A B D P Q pat e q f arg x v) (@lem8328724 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328727 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term521 A B D P Q pat e q f arg x v) = (term522 A B D P Q pat e q f arg x v)) = ((term469 A B D P Q pat e q f arg x v) = (term532 A B D P Q pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8328720 A B D P Q pat e q f arg x v) (@lem8328726 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328728 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term469 A B D P Q pat e q f arg x v) = (term532 A B D P Q pat e q f arg x v).
Proof. exact (EQ_MP (@lem8328727 A B D P Q pat e q f arg x v) (@lem8328712 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328873 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term471 A B D P Q pat e q f arg x) = (term533 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8328728 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8328874 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8328875 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term473 A B D P Q pat e q f arg x) = (term534 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328874 B) (@lem8328873 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328924 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term478 A B D P Q pat e q f arg x) = (term478 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term478 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328925 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term479 A B D P Q pat e q f arg x) = (term535 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328924 A B D P Q pat e q f arg x) (@lem8328875 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328926 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8328927 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term512 A B D P Q pat e q f arg x) = (term536 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8328926) (@lem8328925 A B D P Q pat e q f arg x)). Qed.
Lemma lem8328976 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8328977 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term514 A B D P Q f arg pat e q x) = (term537 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328927 A B D P Q pat e q f arg x) (@lem8328976 D P Q pat e q x)). Qed.
Lemma lem8328978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8328979 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term516 A B D P Q f arg pat e q x) = (term538 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328978) (@lem8328977 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329037 {A : Type'} (P : Prop) (Q : A -> Prop) : (term539 A P Q) = (term540 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8329038 {B : Type'} (P : Prop) (Q : B -> Prop) : (term539 B P Q) = (term540 B P Q).
Proof. exact (@lem8329037 B P Q). Qed.
Lemma lem8329039 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term541 A B D P Q pat e q f arg x v) = (term542 A B D P Q pat e q f arg x v).
Proof. exact (@lem8329038 B (term276 A B D P Q pat e q f arg x v) (term543 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329040 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term544 A B D P Q pat e q f arg x v v') = (term483 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term544 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8329041 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term481 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term481 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329042 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term545 A B D P Q pat e q f arg x v v') = (term485 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329041 A B D P Q pat e q f arg x v) (@lem8329040 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329043 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term546 A B D P Q pat e q f arg x v) = (term487 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329042 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329044 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329045 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term541 A B D P Q pat e q f arg x v) = (term489 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329044 B) (@lem8329043 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329046 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329047 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term547 A B D P Q pat e q f arg x v) = (term548 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329046) (@lem8329045 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329048 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term544 A B D P Q pat e q f arg x v v') = (term483 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term544 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8329049 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term549 A B D P Q pat e q f arg x v) = (term543 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329048 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329050 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329051 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term550 A B D P Q pat e q f arg x v) = (term551 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329050 B) (@lem8329049 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329052 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term481 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term481 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329053 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term542 A B D P Q pat e q f arg x v) = (term552 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329052 A B D P Q pat e q f arg x v) (@lem8329051 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329054 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term541 A B D P Q pat e q f arg x v) = (term542 A B D P Q pat e q f arg x v)) = ((term489 A B D P Q pat e q f arg x v) = (term552 A B D P Q pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8329047 A B D P Q pat e q f arg x v) (@lem8329053 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329055 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term489 A B D P Q pat e q f arg x v) = (term552 A B D P Q pat e q f arg x v).
Proof. exact (EQ_MP (@lem8329054 A B D P Q pat e q f arg x v) (@lem8329039 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329200 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term491 A B D P Q pat e q f arg x) = (term553 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329055 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329201 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329202 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term493 A B D P Q pat e q f arg x) = (term554 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329201 B) (@lem8329200 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329251 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329252 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term500 A B D P Q pat e q f arg x) = (term555 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329251 A B D P Q pat e q f arg x) (@lem8329202 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329253 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329254 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term508 A B D P Q pat e q f arg x) = (term556 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329253) (@lem8329252 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329303 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329304 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term510 A B D P Q f arg pat e q x) = (term557 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329254 A B D P Q pat e q f arg x) (@lem8329303 D P Q pat e q x)). Qed.
Lemma lem8329305 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term518 A B D P Q f arg pat e q x) = (term558 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8328979 A B D P Q f arg pat e q x) (@lem8329304 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329307 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329308 {B : Type'} (P : B -> Prop) (Q : Prop) : (term559 B P Q) = (term560 B P Q).
Proof. exact (@lem8329307 B P Q). Qed.
Lemma lem8329309 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term561 A B D P Q pat e q f arg x) = (term562 A B D P Q pat e q f arg x).
Proof. exact (@lem8329308 B (term113 A B D P Q pat e q f arg x) (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329310 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term452 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term452 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329311 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term474 A B D P Q pat e q f arg x) = (term113 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329310 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329312 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329313 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term475 A B D P Q pat e q f arg x) = (term476 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329312 B) (@lem8329311 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329314 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329315 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term477 A B D P Q pat e q f arg x) = (term478 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329314) (@lem8329313 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329316 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term534 A B D P Q pat e q f arg x) = (term534 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329317 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term561 A B D P Q pat e q f arg x) = (term535 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329315 A B D P Q pat e q f arg x) (@lem8329316 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329318 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329319 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term563 A B D P Q pat e q f arg x) = (term564 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329318) (@lem8329317 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329320 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term452 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term452 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329321 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329322 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term480 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329321) (@lem8329320 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329323 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term534 A B D P Q pat e q f arg x) = (term534 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329324 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term565 A B D P Q v pat e q f arg x) = (term566 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329322 A B D P Q pat e q f arg x v) (@lem8329323 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329325 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term567 A B D P Q pat e q f arg x) = (term568 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329324 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329326 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329327 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term562 A B D P Q pat e q f arg x) = (term569 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329326 B) (@lem8329325 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329328 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : ((term561 A B D P Q pat e q f arg x) = (term562 A B D P Q pat e q f arg x)) = ((term535 A B D P Q pat e q f arg x) = (term569 A B D P Q pat e q f arg x)).
Proof. exact (MK_COMB (@lem8329319 A B D P Q pat e q f arg x) (@lem8329327 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329329 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term535 A B D P Q pat e q f arg x) = (term569 A B D P Q pat e q f arg x).
Proof. exact (EQ_MP (@lem8329328 A B D P Q pat e q f arg x) (@lem8329309 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329331 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329332 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329331 Q P Q'). Qed.
Lemma lem8329333 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term570 A B D P Q v pat e q f arg x) = (term571 A B D P Q v pat e q f arg x).
Proof. exact (@lem8329332 Q (term275 A B D P Q pat e q f arg x v) (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329334 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term446 A B D P Q pat e q f arg x v t) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329335 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term572 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329334 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329336 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329337 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term573 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329336 Q) (@lem8329335 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329338 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329339 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term574 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329338) (@lem8329337 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329340 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term534 A B D P Q pat e q f arg x) = (term534 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329341 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term570 A B D P Q v pat e q f arg x) = (term566 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329339 A B D P Q pat e q f arg x v) (@lem8329340 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329343 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term575 A B D P Q v pat e q f arg x) = (term576 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329342) (@lem8329341 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329344 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term446 A B D P Q pat e q f arg x v t) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329345 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329346 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term577 A B D P Q pat e q f arg x v t) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8329345) (@lem8329344 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329347 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term534 A B D P Q pat e q f arg x) = (term534 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term534 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329348 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term579 A B D P Q v t pat e q f arg x) = (term580 A B D P Q t v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329346 A B D P Q pat e q f arg x t v) (@lem8329347 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329349 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term581 A B D P Q v pat e q f arg x) = (term582 A B D P Q v pat e q f arg x).
Proof. exact (fun_ext (fun t : Q => @lem8329348 A B D P Q t v pat e q f arg x)). Qed.
Lemma lem8329350 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329351 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term571 A B D P Q v pat e q f arg x) = (term583 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329350 Q) (@lem8329349 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329352 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : ((term570 A B D P Q v pat e q f arg x) = (term571 A B D P Q v pat e q f arg x)) = ((term566 A B D P Q v pat e q f arg x) = (term583 A B D P Q v pat e q f arg x)).
Proof. exact (MK_COMB (@lem8329343 A B D P Q v pat e q f arg x) (@lem8329351 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329353 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term566 A B D P Q v pat e q f arg x) = (term583 A B D P Q v pat e q f arg x).
Proof. exact (EQ_MP (@lem8329352 A B D P Q v pat e q f arg x) (@lem8329333 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329354 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term568 A B D P Q pat e q f arg x) = (term584 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329353 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329355 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329356 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term569 A B D P Q pat e q f arg x) = (term585 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329355 B) (@lem8329354 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329357 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term535 A B D P Q pat e q f arg x) = (term585 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8329329 A B D P Q pat e q f arg x) (@lem8329356 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329358 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329359 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term536 A B D P Q pat e q f arg x) = (term586 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329358) (@lem8329357 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329360 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8329361 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term537 A B D P Q f arg pat e q x) = (term587 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329359 A B D P Q pat e q f arg x) (@lem8329360 D P Q pat e q x)). Qed.
Lemma lem8329363 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329364 {B : Type'} (P : B -> Prop) (Q : Prop) : (term559 B P Q) = (term560 B P Q).
Proof. exact (@lem8329363 B P Q). Qed.
Lemma lem8329365 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term588 A B D P Q f arg pat e q x) = (term589 A B D P Q f arg pat e q x).
Proof. exact (@lem8329364 B (term584 A B D P Q pat e q f arg x) (term506 D P Q pat e q x)). Qed.
Lemma lem8329366 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term590 A B D P Q pat e q f arg x v) = (term583 A B D P Q v pat e q f arg x).
Proof. exact (eq_refl (term590 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329367 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term591 A B D P Q pat e q f arg x) = (term584 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329366 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329368 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329369 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term592 A B D P Q pat e q f arg x) = (term585 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329368 B) (@lem8329367 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329370 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329371 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term593 A B D P Q pat e q f arg x) = (term586 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329370) (@lem8329369 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329372 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8329373 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term588 A B D P Q f arg pat e q x) = (term587 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329371 A B D P Q pat e q f arg x) (@lem8329372 D P Q pat e q x)). Qed.
Lemma lem8329374 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329375 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term594 A B D P Q f arg pat e q x) = (term595 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329374) (@lem8329373 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329376 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term590 A B D P Q pat e q f arg x v) = (term583 A B D P Q v pat e q f arg x).
Proof. exact (eq_refl (term590 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329377 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329378 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term596 A B D P Q pat e q f arg x v) = (term597 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329377) (@lem8329376 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329379 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8329380 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term598 A B D P Q f arg v pat e q x) = (term599 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329378 A B D P Q v pat e q f arg x) (@lem8329379 D P Q pat e q x)). Qed.
Lemma lem8329381 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term600 A B D P Q f arg pat e q x) = (term601 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329380 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329382 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329383 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term589 A B D P Q f arg pat e q x) = (term602 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329382 B) (@lem8329381 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329384 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term588 A B D P Q f arg pat e q x) = (term589 A B D P Q f arg pat e q x)) = ((term587 A B D P Q f arg pat e q x) = (term602 A B D P Q f arg pat e q x)).
Proof. exact (MK_COMB (@lem8329375 A B D P Q f arg pat e q x) (@lem8329383 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329385 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term587 A B D P Q f arg pat e q x) = (term602 A B D P Q f arg pat e q x).
Proof. exact (EQ_MP (@lem8329384 A B D P Q f arg pat e q x) (@lem8329365 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329387 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329388 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329387 Q P Q'). Qed.
Lemma lem8329389 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term603 A B D P Q v f arg pat e q x) = (term604 A B D P Q v f arg pat e q x).
Proof. exact (@lem8329388 Q (term582 A B D P Q v pat e q f arg x) (term506 D P Q pat e q x)). Qed.
Lemma lem8329390 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term605 A B D P Q v pat e q f arg x t) = (term580 A B D P Q t v pat e q f arg x).
Proof. exact (eq_refl (term605 A B D P Q v pat e q f arg x t)). Qed.
Lemma lem8329391 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term606 A B D P Q v pat e q f arg x) = (term582 A B D P Q v pat e q f arg x).
Proof. exact (fun_ext (fun t : Q => @lem8329390 A B D P Q t v pat e q f arg x)). Qed.
Lemma lem8329392 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329393 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term607 A B D P Q v pat e q f arg x) = (term583 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329392 Q) (@lem8329391 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329394 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329395 {A B D P Q : Type'} (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term608 A B D P Q v pat e q f arg x) = (term597 A B D P Q v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329394) (@lem8329393 A B D P Q v pat e q f arg x)). Qed.
Lemma lem8329396 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8329397 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term603 A B D P Q v f arg pat e q x) = (term599 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329395 A B D P Q v pat e q f arg x) (@lem8329396 D P Q pat e q x)). Qed.
Lemma lem8329398 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329399 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term609 A B D P Q v f arg pat e q x) = (term610 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329398) (@lem8329397 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329400 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term605 A B D P Q v pat e q f arg x t) = (term580 A B D P Q t v pat e q f arg x).
Proof. exact (eq_refl (term605 A B D P Q v pat e q f arg x t)). Qed.
Lemma lem8329401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329402 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term611 A B D P Q v pat e q f arg x t) = (term612 A B D P Q t v pat e q f arg x).
Proof. exact (MK_COMB (@lem8329401) (@lem8329400 A B D P Q t v pat e q f arg x)). Qed.
Lemma lem8329403 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (eq_refl (term506 D P Q pat e q x)). Qed.
Lemma lem8329404 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term613 A B D P Q v f arg t pat e q x) = (term614 A B D P Q t v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329402 A B D P Q t v pat e q f arg x) (@lem8329403 D P Q pat e q x)). Qed.
Lemma lem8329405 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term615 A B D P Q v f arg pat e q x) = (term616 A B D P Q v f arg pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329404 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329406 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329407 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term604 A B D P Q v f arg pat e q x) = (term617 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329406 Q) (@lem8329405 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329408 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term603 A B D P Q v f arg pat e q x) = (term604 A B D P Q v f arg pat e q x)) = ((term599 A B D P Q v f arg pat e q x) = (term617 A B D P Q v f arg pat e q x)).
Proof. exact (MK_COMB (@lem8329399 A B D P Q v f arg pat e q x) (@lem8329407 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329409 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term599 A B D P Q v f arg pat e q x) = (term617 A B D P Q v f arg pat e q x).
Proof. exact (EQ_MP (@lem8329408 A B D P Q v f arg pat e q x) (@lem8329389 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329410 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term601 A B D P Q f arg pat e q x) = (term618 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329409 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329411 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329412 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term602 A B D P Q f arg pat e q x) = (term619 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329411 B) (@lem8329410 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329413 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term587 A B D P Q f arg pat e q x) = (term619 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329385 A B D P Q f arg pat e q x) (@lem8329412 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329414 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term537 A B D P Q f arg pat e q x) = (term619 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329361 A B D P Q f arg pat e q x) (@lem8329413 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329415 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8329416 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term538 A B D P Q f arg pat e q x) = (term620 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329415) (@lem8329414 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329418 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329419 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329418 Q P Q'). Qed.
Lemma lem8329420 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term621 A B D P Q pat e q f arg x v' v) = (term622 A B D P Q pat e q f arg x v' v).
Proof. exact (@lem8329419 Q (term275 A B D P Q pat e q f arg x v') (term451 B v' v)). Qed.
Lemma lem8329421 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term446 A B D P Q pat e q f arg x v' t) = (term274 A B D P Q pat e q f arg x t v').
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v' t)). Qed.
Lemma lem8329422 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term572 A B D P Q pat e q f arg x v') = (term275 A B D P Q pat e q f arg x v').
Proof. exact (fun_ext (fun t : Q => @lem8329421 A B D P Q pat e q f arg x t v')). Qed.
Lemma lem8329423 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329424 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term573 A B D P Q pat e q f arg x v') = (term276 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8329423 Q) (@lem8329422 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8329425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329426 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term574 A B D P Q pat e q f arg x v') = (term481 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8329425) (@lem8329424 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8329427 {B : Type'} (v' : B) (v : B) : (term451 B v' v) = (term451 B v' v).
Proof. exact (eq_refl (term451 B v' v)). Qed.
Lemma lem8329428 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term621 A B D P Q pat e q f arg x v' v) = (term483 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329426 A B D P Q pat e q f arg x v') (@lem8329427 B v' v)). Qed.
Lemma lem8329429 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329430 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term623 A B D P Q pat e q f arg x v' v) = (term624 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329429) (@lem8329428 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329431 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term446 A B D P Q pat e q f arg x v' t) = (term274 A B D P Q pat e q f arg x t v').
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v' t)). Qed.
Lemma lem8329432 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329433 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term577 A B D P Q pat e q f arg x v' t) = (term578 A B D P Q pat e q f arg x t v').
Proof. exact (MK_COMB (@lem8329432) (@lem8329431 A B D P Q pat e q f arg x t v')). Qed.
Lemma lem8329434 {B : Type'} (v' : B) (v : B) : (term451 B v' v) = (term451 B v' v).
Proof. exact (eq_refl (term451 B v' v)). Qed.
Lemma lem8329435 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) (v : B) : (term625 A B D P Q pat e q f arg x t v' v) = (term626 A B D P Q pat e q f arg x t v' v).
Proof. exact (MK_COMB (@lem8329433 A B D P Q pat e q f arg x t v') (@lem8329434 B v' v)). Qed.
Lemma lem8329436 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term627 A B D P Q pat e q f arg x v' v) = (term628 A B D P Q pat e q f arg x v' v).
Proof. exact (fun_ext (fun t : Q => @lem8329435 A B D P Q pat e q f arg x t v' v)). Qed.
Lemma lem8329437 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329438 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term622 A B D P Q pat e q f arg x v' v) = (term629 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329437 Q) (@lem8329436 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329439 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : ((term621 A B D P Q pat e q f arg x v' v) = (term622 A B D P Q pat e q f arg x v' v)) = ((term483 A B D P Q pat e q f arg x v' v) = (term629 A B D P Q pat e q f arg x v' v)).
Proof. exact (MK_COMB (@lem8329430 A B D P Q pat e q f arg x v' v) (@lem8329438 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329440 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term483 A B D P Q pat e q f arg x v' v) = (term629 A B D P Q pat e q f arg x v' v).
Proof. exact (EQ_MP (@lem8329439 A B D P Q pat e q f arg x v' v) (@lem8329420 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329441 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term543 A B D P Q pat e q f arg x v) = (term630 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329440 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329442 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329443 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term551 A B D P Q pat e q f arg x v) = (term631 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329442 B) (@lem8329441 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329444 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term481 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term481 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329445 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term552 A B D P Q pat e q f arg x v) = (term632 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329444 A B D P Q pat e q f arg x v) (@lem8329443 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329447 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329448 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329447 Q P Q'). Qed.
Lemma lem8329449 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term633 A B D P Q pat e q f arg x v) = (term634 A B D P Q pat e q f arg x v).
Proof. exact (@lem8329448 Q (term275 A B D P Q pat e q f arg x v) (term631 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329450 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term446 A B D P Q pat e q f arg x v t) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329451 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term572 A B D P Q pat e q f arg x v) = (term275 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329450 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329452 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329453 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term573 A B D P Q pat e q f arg x v) = (term276 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329452 Q) (@lem8329451 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329455 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term574 A B D P Q pat e q f arg x v) = (term481 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329454) (@lem8329453 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329456 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term631 A B D P Q pat e q f arg x v) = (term631 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term631 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329457 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term633 A B D P Q pat e q f arg x v) = (term632 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329455 A B D P Q pat e q f arg x v) (@lem8329456 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329458 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329459 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term635 A B D P Q pat e q f arg x v) = (term636 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329458) (@lem8329457 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329460 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term446 A B D P Q pat e q f arg x v t) = (term274 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329461 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329462 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term577 A B D P Q pat e q f arg x v t) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8329461) (@lem8329460 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329463 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term631 A B D P Q pat e q f arg x v) = (term631 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term631 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329464 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term637 A B D P Q t pat e q f arg x v) = (term638 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329462 A B D P Q pat e q f arg x t v) (@lem8329463 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329465 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term639 A B D P Q pat e q f arg x v) = (term640 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329464 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329466 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329467 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term634 A B D P Q pat e q f arg x v) = (term641 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329466 Q) (@lem8329465 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329468 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term633 A B D P Q pat e q f arg x v) = (term634 A B D P Q pat e q f arg x v)) = ((term632 A B D P Q pat e q f arg x v) = (term641 A B D P Q pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8329459 A B D P Q pat e q f arg x v) (@lem8329467 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329469 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term632 A B D P Q pat e q f arg x v) = (term641 A B D P Q pat e q f arg x v).
Proof. exact (EQ_MP (@lem8329468 A B D P Q pat e q f arg x v) (@lem8329449 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329471 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8329472 {B : Type'} (P : Prop) (Q : B -> Prop) : (term540 B P Q) = (term539 B P Q).
Proof. exact (@lem8329471 B P Q). Qed.
Lemma lem8329473 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term642 A B D P Q t pat e q f arg x v) = (term643 A B D P Q t pat e q f arg x v).
Proof. exact (@lem8329472 B (term274 A B D P Q pat e q f arg x t v) (term630 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329474 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term644 A B D P Q pat e q f arg x v v') = (term629 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term644 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8329475 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term645 A B D P Q pat e q f arg x v) = (term630 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329474 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329476 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329477 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term646 A B D P Q pat e q f arg x v) = (term631 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329476 B) (@lem8329475 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329478 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term578 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329479 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term642 A B D P Q t pat e q f arg x v) = (term638 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329478 A B D P Q pat e q f arg x t v) (@lem8329477 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329480 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329481 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term647 A B D P Q t pat e q f arg x v) = (term648 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329480) (@lem8329479 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329482 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term644 A B D P Q pat e q f arg x v v') = (term629 A B D P Q pat e q f arg x v' v).
Proof. exact (eq_refl (term644 A B D P Q pat e q f arg x v v')). Qed.
Lemma lem8329483 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term578 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329484 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term649 A B D P Q t pat e q f arg x v v') = (term650 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329483 A B D P Q pat e q f arg x t v) (@lem8329482 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329485 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term651 A B D P Q t pat e q f arg x v) = (term652 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329484 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329486 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329487 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term643 A B D P Q t pat e q f arg x v) = (term653 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329486 B) (@lem8329485 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329488 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term642 A B D P Q t pat e q f arg x v) = (term643 A B D P Q t pat e q f arg x v)) = ((term638 A B D P Q t pat e q f arg x v) = (term653 A B D P Q t pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8329481 A B D P Q t pat e q f arg x v) (@lem8329487 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329489 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term638 A B D P Q t pat e q f arg x v) = (term653 A B D P Q t pat e q f arg x v).
Proof. exact (EQ_MP (@lem8329488 A B D P Q t pat e q f arg x v) (@lem8329473 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329491 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8329492 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8329491 Q P Q'). Qed.
Lemma lem8329493 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term654 A B D P Q t pat e q f arg x v' v) = (term655 A B D P Q t pat e q f arg x v' v).
Proof. exact (@lem8329492 Q (term274 A B D P Q pat e q f arg x t v) (term628 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329494 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) (v : B) : (term656 A B D P Q pat e q f arg x v' v t) = (term626 A B D P Q pat e q f arg x t v' v).
Proof. exact (eq_refl (term656 A B D P Q pat e q f arg x v' v t)). Qed.
Lemma lem8329495 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term657 A B D P Q pat e q f arg x v' v) = (term628 A B D P Q pat e q f arg x v' v).
Proof. exact (fun_ext (fun t : Q => @lem8329494 A B D P Q pat e q f arg x t v' v)). Qed.
Lemma lem8329496 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329497 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term658 A B D P Q pat e q f arg x v' v) = (term629 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329496 Q) (@lem8329495 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329498 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term578 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329499 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term654 A B D P Q t pat e q f arg x v' v) = (term650 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329498 A B D P Q pat e q f arg x t v) (@lem8329497 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8329500 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329501 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term659 A B D P Q t pat e q f arg x v' v) = (term660 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329500) (@lem8329499 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329502 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term656 A B D P Q pat e q f arg x v' v t') = (term626 A B D P Q pat e q f arg x t' v' v).
Proof. exact (eq_refl (term656 A B D P Q pat e q f arg x v' v t')). Qed.
Lemma lem8329503 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term578 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term578 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8329504 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term661 A B D P Q t pat e q f arg x v' v t') = (term662 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8329503 A B D P Q pat e q f arg x t v) (@lem8329502 A B D P Q pat e q f arg x t' v' v)). Qed.
Lemma lem8329505 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term663 A B D P Q t pat e q f arg x v' v) = (term664 A B D P Q t pat e q f arg x v' v).
Proof. exact (fun_ext (fun t' : Q => @lem8329504 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329506 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329507 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term655 A B D P Q t pat e q f arg x v' v) = (term665 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329506 Q) (@lem8329505 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329508 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : ((term654 A B D P Q t pat e q f arg x v' v) = (term655 A B D P Q t pat e q f arg x v' v)) = ((term650 A B D P Q t pat e q f arg x v' v) = (term665 A B D P Q t pat e q f arg x v' v)).
Proof. exact (MK_COMB (@lem8329501 A B D P Q t pat e q f arg x v' v) (@lem8329507 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329509 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term650 A B D P Q t pat e q f arg x v' v) = (term665 A B D P Q t pat e q f arg x v' v).
Proof. exact (EQ_MP (@lem8329508 A B D P Q t pat e q f arg x v' v) (@lem8329493 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329510 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term652 A B D P Q t pat e q f arg x v) = (term666 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329509 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329511 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329512 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term653 A B D P Q t pat e q f arg x v) = (term667 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329511 B) (@lem8329510 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329513 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term638 A B D P Q t pat e q f arg x v) = (term667 A B D P Q t pat e q f arg x v).
Proof. exact (TRANS (@lem8329489 A B D P Q t pat e q f arg x v) (@lem8329512 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329514 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term640 A B D P Q pat e q f arg x v) = (term668 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329513 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329515 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329516 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term641 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329515 Q) (@lem8329514 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329517 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term632 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8329469 A B D P Q pat e q f arg x v) (@lem8329516 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329518 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term552 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8329445 A B D P Q pat e q f arg x v) (@lem8329517 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329519 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term553 A B D P Q pat e q f arg x) = (term670 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329518 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329520 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329521 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term554 A B D P Q pat e q f arg x) = (term671 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329520 B) (@lem8329519 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329522 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329523 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term555 A B D P Q pat e q f arg x) = (term672 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329522 A B D P Q pat e q f arg x) (@lem8329521 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329525 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329526 {B : Type'} (P : Prop) (Q : B -> Prop) : (term673 B P Q) = (term674 B P Q).
Proof. exact (@lem8329525 B P Q). Qed.
Lemma lem8329527 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term675 A B D P Q pat e q f arg x) = (term676 A B D P Q pat e q f arg x).
Proof. exact (@lem8329526 B (term497 A B D P Q pat e q f arg x) (term670 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329528 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term677 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term677 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329529 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term678 A B D P Q pat e q f arg x) = (term670 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329528 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329530 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329531 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term679 A B D P Q pat e q f arg x) = (term671 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329530 B) (@lem8329529 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329532 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329533 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term675 A B D P Q pat e q f arg x) = (term672 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329532 A B D P Q pat e q f arg x) (@lem8329531 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329534 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329535 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term680 A B D P Q pat e q f arg x) = (term681 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329534) (@lem8329533 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329536 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term677 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term677 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329537 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329538 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term682 A B D P Q pat e q f arg x v) = (term683 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329537 A B D P Q pat e q f arg x) (@lem8329536 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329539 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term684 A B D P Q pat e q f arg x) = (term685 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329538 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329540 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329541 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term676 A B D P Q pat e q f arg x) = (term686 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329540 B) (@lem8329539 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329542 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : ((term675 A B D P Q pat e q f arg x) = (term676 A B D P Q pat e q f arg x)) = ((term672 A B D P Q pat e q f arg x) = (term686 A B D P Q pat e q f arg x)).
Proof. exact (MK_COMB (@lem8329535 A B D P Q pat e q f arg x) (@lem8329541 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329543 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term672 A B D P Q pat e q f arg x) = (term686 A B D P Q pat e q f arg x).
Proof. exact (EQ_MP (@lem8329542 A B D P Q pat e q f arg x) (@lem8329527 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329545 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329546 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8329545 Q P Q'). Qed.
Lemma lem8329547 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term687 A B D P Q pat e q f arg x v) = (term688 A B D P Q pat e q f arg x v).
Proof. exact (@lem8329546 Q (term497 A B D P Q pat e q f arg x) (term668 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329548 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term689 A B D P Q pat e q f arg x v t) = (term667 A B D P Q t pat e q f arg x v).
Proof. exact (eq_refl (term689 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329549 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term690 A B D P Q pat e q f arg x v) = (term668 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329548 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329550 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329551 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term691 A B D P Q pat e q f arg x v) = (term669 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329550 Q) (@lem8329549 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329552 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329553 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term687 A B D P Q pat e q f arg x v) = (term683 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329552 A B D P Q pat e q f arg x) (@lem8329551 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329554 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329555 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term692 A B D P Q pat e q f arg x v) = (term693 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329554) (@lem8329553 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329556 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term689 A B D P Q pat e q f arg x v t) = (term667 A B D P Q t pat e q f arg x v).
Proof. exact (eq_refl (term689 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329557 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329558 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term694 A B D P Q pat e q f arg x v t) = (term695 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329557 A B D P Q pat e q f arg x) (@lem8329556 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329559 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term696 A B D P Q pat e q f arg x v) = (term697 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329558 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329560 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329561 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term688 A B D P Q pat e q f arg x v) = (term698 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329560 Q) (@lem8329559 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329562 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term687 A B D P Q pat e q f arg x v) = (term688 A B D P Q pat e q f arg x v)) = ((term683 A B D P Q pat e q f arg x v) = (term698 A B D P Q pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8329555 A B D P Q pat e q f arg x v) (@lem8329561 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329563 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term683 A B D P Q pat e q f arg x v) = (term698 A B D P Q pat e q f arg x v).
Proof. exact (EQ_MP (@lem8329562 A B D P Q pat e q f arg x v) (@lem8329547 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329565 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329566 {B : Type'} (P : Prop) (Q : B -> Prop) : (term673 B P Q) = (term674 B P Q).
Proof. exact (@lem8329565 B P Q). Qed.
Lemma lem8329567 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term699 A B D P Q t pat e q f arg x v) = (term700 A B D P Q t pat e q f arg x v).
Proof. exact (@lem8329566 B (term497 A B D P Q pat e q f arg x) (term666 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329568 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term701 A B D P Q t pat e q f arg x v v') = (term665 A B D P Q t pat e q f arg x v' v).
Proof. exact (eq_refl (term701 A B D P Q t pat e q f arg x v v')). Qed.
Lemma lem8329569 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term702 A B D P Q t pat e q f arg x v) = (term666 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329568 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329570 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329571 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term703 A B D P Q t pat e q f arg x v) = (term667 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329570 B) (@lem8329569 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329572 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329573 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term699 A B D P Q t pat e q f arg x v) = (term695 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329572 A B D P Q pat e q f arg x) (@lem8329571 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329574 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329575 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term704 A B D P Q t pat e q f arg x v) = (term705 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329574) (@lem8329573 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329576 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term701 A B D P Q t pat e q f arg x v v') = (term665 A B D P Q t pat e q f arg x v' v).
Proof. exact (eq_refl (term701 A B D P Q t pat e q f arg x v v')). Qed.
Lemma lem8329577 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329578 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term706 A B D P Q t pat e q f arg x v v') = (term707 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329577 A B D P Q pat e q f arg x) (@lem8329576 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329579 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term708 A B D P Q t pat e q f arg x v) = (term709 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329578 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329580 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329581 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term700 A B D P Q t pat e q f arg x v) = (term710 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329580 B) (@lem8329579 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329582 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : ((term699 A B D P Q t pat e q f arg x v) = (term700 A B D P Q t pat e q f arg x v)) = ((term695 A B D P Q t pat e q f arg x v) = (term710 A B D P Q t pat e q f arg x v)).
Proof. exact (MK_COMB (@lem8329575 A B D P Q t pat e q f arg x v) (@lem8329581 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329583 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term695 A B D P Q t pat e q f arg x v) = (term710 A B D P Q t pat e q f arg x v).
Proof. exact (EQ_MP (@lem8329582 A B D P Q t pat e q f arg x v) (@lem8329567 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329585 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329586 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8329585 Q P Q'). Qed.
Lemma lem8329587 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term711 A B D P Q t pat e q f arg x v' v) = (term712 A B D P Q t pat e q f arg x v' v).
Proof. exact (@lem8329586 Q (term497 A B D P Q pat e q f arg x) (term664 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329588 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term713 A B D P Q t pat e q f arg x v' v t') = (term662 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term713 A B D P Q t pat e q f arg x v' v t')). Qed.
Lemma lem8329589 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term714 A B D P Q t pat e q f arg x v' v) = (term664 A B D P Q t pat e q f arg x v' v).
Proof. exact (fun_ext (fun t' : Q => @lem8329588 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329590 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329591 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term715 A B D P Q t pat e q f arg x v' v) = (term665 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329590 Q) (@lem8329589 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329592 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329593 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term711 A B D P Q t pat e q f arg x v' v) = (term707 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329592 A B D P Q pat e q f arg x) (@lem8329591 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329594 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329595 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term716 A B D P Q t pat e q f arg x v' v) = (term717 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329594) (@lem8329593 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329596 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term713 A B D P Q t pat e q f arg x v' v t') = (term662 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term713 A B D P Q t pat e q f arg x v' v t')). Qed.
Lemma lem8329597 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term499 A B D P Q pat e q f arg x).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329598 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term718 A B D P Q t pat e q f arg x v' v t') = (term719 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8329597 A B D P Q pat e q f arg x) (@lem8329596 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329599 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term720 A B D P Q t pat e q f arg x v' v) = (term721 A B D P Q t pat e q f arg x v' v).
Proof. exact (fun_ext (fun t' : Q => @lem8329598 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329600 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329601 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term712 A B D P Q t pat e q f arg x v' v) = (term722 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329600 Q) (@lem8329599 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329602 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : ((term711 A B D P Q t pat e q f arg x v' v) = (term712 A B D P Q t pat e q f arg x v' v)) = ((term707 A B D P Q t pat e q f arg x v' v) = (term722 A B D P Q t pat e q f arg x v' v)).
Proof. exact (MK_COMB (@lem8329595 A B D P Q t pat e q f arg x v' v) (@lem8329601 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329603 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term707 A B D P Q t pat e q f arg x v' v) = (term722 A B D P Q t pat e q f arg x v' v).
Proof. exact (EQ_MP (@lem8329602 A B D P Q t pat e q f arg x v' v) (@lem8329587 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329604 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term709 A B D P Q t pat e q f arg x v) = (term723 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329603 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329605 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329606 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term710 A B D P Q t pat e q f arg x v) = (term724 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329605 B) (@lem8329604 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329607 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term695 A B D P Q t pat e q f arg x v) = (term724 A B D P Q t pat e q f arg x v).
Proof. exact (TRANS (@lem8329583 A B D P Q t pat e q f arg x v) (@lem8329606 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329608 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term697 A B D P Q pat e q f arg x v) = (term725 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329607 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329609 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329610 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term698 A B D P Q pat e q f arg x v) = (term726 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329609 Q) (@lem8329608 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329611 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term683 A B D P Q pat e q f arg x v) = (term726 A B D P Q pat e q f arg x v).
Proof. exact (TRANS (@lem8329563 A B D P Q pat e q f arg x v) (@lem8329610 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329612 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term685 A B D P Q pat e q f arg x) = (term727 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329611 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329613 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329614 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term686 A B D P Q pat e q f arg x) = (term728 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329613 B) (@lem8329612 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329615 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term672 A B D P Q pat e q f arg x) = (term728 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8329543 A B D P Q pat e q f arg x) (@lem8329614 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329616 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term555 A B D P Q pat e q f arg x) = (term728 A B D P Q pat e q f arg x).
Proof. exact (TRANS (@lem8329523 A B D P Q pat e q f arg x) (@lem8329615 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329617 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329618 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term556 A B D P Q pat e q f arg x) = (term729 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329617) (@lem8329616 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329619 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329620 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term557 A B D P Q f arg pat e q x) = (term730 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329618 A B D P Q pat e q f arg x) (@lem8329619 D P Q pat e q x)). Qed.
Lemma lem8329622 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329623 {B : Type'} (P : B -> Prop) (Q : Prop) : (term559 B P Q) = (term560 B P Q).
Proof. exact (@lem8329622 B P Q). Qed.
Lemma lem8329624 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term731 A B D P Q f arg pat e q x) = (term732 A B D P Q f arg pat e q x).
Proof. exact (@lem8329623 B (term727 A B D P Q pat e q f arg x) (term179 D P Q pat e q x)). Qed.
Lemma lem8329625 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term733 A B D P Q pat e q f arg x v) = (term726 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term733 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329626 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term734 A B D P Q pat e q f arg x) = (term727 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8329625 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329627 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329628 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term735 A B D P Q pat e q f arg x) = (term728 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329627 B) (@lem8329626 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329629 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329630 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term736 A B D P Q pat e q f arg x) = (term729 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8329629) (@lem8329628 A B D P Q pat e q f arg x)). Qed.
Lemma lem8329631 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329632 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term731 A B D P Q f arg pat e q x) = (term730 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329630 A B D P Q pat e q f arg x) (@lem8329631 D P Q pat e q x)). Qed.
Lemma lem8329633 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329634 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term737 A B D P Q f arg pat e q x) = (term738 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329633) (@lem8329632 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329635 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term733 A B D P Q pat e q f arg x v) = (term726 A B D P Q pat e q f arg x v).
Proof. exact (eq_refl (term733 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329636 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329637 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term739 A B D P Q pat e q f arg x v) = (term740 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329636) (@lem8329635 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329638 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329639 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term741 A B D P Q f arg v pat e q x) = (term742 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329637 A B D P Q pat e q f arg x v) (@lem8329638 D P Q pat e q x)). Qed.
Lemma lem8329640 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term743 A B D P Q f arg pat e q x) = (term744 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329639 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329641 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329642 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term732 A B D P Q f arg pat e q x) = (term745 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329641 B) (@lem8329640 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329643 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term731 A B D P Q f arg pat e q x) = (term732 A B D P Q f arg pat e q x)) = ((term730 A B D P Q f arg pat e q x) = (term745 A B D P Q f arg pat e q x)).
Proof. exact (MK_COMB (@lem8329634 A B D P Q f arg pat e q x) (@lem8329642 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329644 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term730 A B D P Q f arg pat e q x) = (term745 A B D P Q f arg pat e q x).
Proof. exact (EQ_MP (@lem8329643 A B D P Q f arg pat e q x) (@lem8329624 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329646 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329647 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329646 Q P Q'). Qed.
Lemma lem8329648 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term746 A B D P Q f arg v pat e q x) = (term747 A B D P Q f arg v pat e q x).
Proof. exact (@lem8329647 Q (term725 A B D P Q pat e q f arg x v) (term179 D P Q pat e q x)). Qed.
Lemma lem8329649 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term748 A B D P Q pat e q f arg x v t) = (term724 A B D P Q t pat e q f arg x v).
Proof. exact (eq_refl (term748 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329650 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term749 A B D P Q pat e q f arg x v) = (term725 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8329649 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329651 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329652 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term750 A B D P Q pat e q f arg x v) = (term726 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329651 Q) (@lem8329650 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329653 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329654 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term751 A B D P Q pat e q f arg x v) = (term740 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329653) (@lem8329652 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8329655 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329656 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term746 A B D P Q f arg v pat e q x) = (term742 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329654 A B D P Q pat e q f arg x v) (@lem8329655 D P Q pat e q x)). Qed.
Lemma lem8329657 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329658 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term752 A B D P Q f arg v pat e q x) = (term753 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329657) (@lem8329656 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329659 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term748 A B D P Q pat e q f arg x v t) = (term724 A B D P Q t pat e q f arg x v).
Proof. exact (eq_refl (term748 A B D P Q pat e q f arg x v t)). Qed.
Lemma lem8329660 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329661 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term754 A B D P Q pat e q f arg x v t) = (term755 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329660) (@lem8329659 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329662 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329663 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term756 A B D P Q f arg v t pat e q x) = (term757 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329661 A B D P Q t pat e q f arg x v) (@lem8329662 D P Q pat e q x)). Qed.
Lemma lem8329664 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term758 A B D P Q f arg v pat e q x) = (term759 A B D P Q f arg v pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329663 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329665 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329666 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term747 A B D P Q f arg v pat e q x) = (term760 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329665 Q) (@lem8329664 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329667 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term746 A B D P Q f arg v pat e q x) = (term747 A B D P Q f arg v pat e q x)) = ((term742 A B D P Q f arg v pat e q x) = (term760 A B D P Q f arg v pat e q x)).
Proof. exact (MK_COMB (@lem8329658 A B D P Q f arg v pat e q x) (@lem8329666 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329668 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term742 A B D P Q f arg v pat e q x) = (term760 A B D P Q f arg v pat e q x).
Proof. exact (EQ_MP (@lem8329667 A B D P Q f arg v pat e q x) (@lem8329648 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329670 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329671 {B : Type'} (P : B -> Prop) (Q : Prop) : (term559 B P Q) = (term560 B P Q).
Proof. exact (@lem8329670 B P Q). Qed.
Lemma lem8329672 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term761 A B D P Q t f arg v pat e q x) = (term762 A B D P Q t f arg v pat e q x).
Proof. exact (@lem8329671 B (term723 A B D P Q t pat e q f arg x v) (term179 D P Q pat e q x)). Qed.
Lemma lem8329673 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term763 A B D P Q t pat e q f arg x v v') = (term722 A B D P Q t pat e q f arg x v' v).
Proof. exact (eq_refl (term763 A B D P Q t pat e q f arg x v v')). Qed.
Lemma lem8329674 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term764 A B D P Q t pat e q f arg x v) = (term723 A B D P Q t pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8329673 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329675 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329676 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term765 A B D P Q t pat e q f arg x v) = (term724 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329675 B) (@lem8329674 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329677 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329678 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term766 A B D P Q t pat e q f arg x v) = (term755 A B D P Q t pat e q f arg x v).
Proof. exact (MK_COMB (@lem8329677) (@lem8329676 A B D P Q t pat e q f arg x v)). Qed.
Lemma lem8329679 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329680 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term761 A B D P Q t f arg v pat e q x) = (term757 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329678 A B D P Q t pat e q f arg x v) (@lem8329679 D P Q pat e q x)). Qed.
Lemma lem8329681 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329682 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term767 A B D P Q t f arg v pat e q x) = (term768 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329681) (@lem8329680 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329683 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term763 A B D P Q t pat e q f arg x v v') = (term722 A B D P Q t pat e q f arg x v' v).
Proof. exact (eq_refl (term763 A B D P Q t pat e q f arg x v v')). Qed.
Lemma lem8329684 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329685 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term769 A B D P Q t pat e q f arg x v v') = (term770 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329684) (@lem8329683 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329686 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329687 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term771 A B D P Q t f arg v v' pat e q x) = (term772 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329685 A B D P Q t pat e q f arg x v' v) (@lem8329686 D P Q pat e q x)). Qed.
Lemma lem8329688 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term773 A B D P Q t f arg v pat e q x) = (term774 A B D P Q t f arg v pat e q x).
Proof. exact (fun_ext (fun v' : B => @lem8329687 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329689 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329690 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term762 A B D P Q t f arg v pat e q x) = (term775 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329689 B) (@lem8329688 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329691 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term761 A B D P Q t f arg v pat e q x) = (term762 A B D P Q t f arg v pat e q x)) = ((term757 A B D P Q t f arg v pat e q x) = (term775 A B D P Q t f arg v pat e q x)).
Proof. exact (MK_COMB (@lem8329682 A B D P Q t f arg v pat e q x) (@lem8329690 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329692 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term757 A B D P Q t f arg v pat e q x) = (term775 A B D P Q t f arg v pat e q x).
Proof. exact (EQ_MP (@lem8329691 A B D P Q t f arg v pat e q x) (@lem8329672 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329694 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8329695 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8329694 Q P Q'). Qed.
Lemma lem8329696 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term776 A B D P Q t f arg v' v pat e q x) = (term777 A B D P Q t f arg v' v pat e q x).
Proof. exact (@lem8329695 Q (term721 A B D P Q t pat e q f arg x v' v) (term179 D P Q pat e q x)). Qed.
Lemma lem8329697 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term778 A B D P Q t pat e q f arg x v' v t') = (term719 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term778 A B D P Q t pat e q f arg x v' v t')). Qed.
Lemma lem8329698 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term779 A B D P Q t pat e q f arg x v' v) = (term721 A B D P Q t pat e q f arg x v' v).
Proof. exact (fun_ext (fun t' : Q => @lem8329697 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329699 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329700 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term780 A B D P Q t pat e q f arg x v' v) = (term722 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329699 Q) (@lem8329698 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329701 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329702 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term781 A B D P Q t pat e q f arg x v' v) = (term770 A B D P Q t pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8329701) (@lem8329700 A B D P Q t pat e q f arg x v' v)). Qed.
Lemma lem8329703 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329704 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term776 A B D P Q t f arg v' v pat e q x) = (term772 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329702 A B D P Q t pat e q f arg x v' v) (@lem8329703 D P Q pat e q x)). Qed.
Lemma lem8329705 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329706 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term782 A B D P Q t f arg v' v pat e q x) = (term783 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329705) (@lem8329704 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329707 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term778 A B D P Q t pat e q f arg x v' v t') = (term719 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term778 A B D P Q t pat e q f arg x v' v t')). Qed.
Lemma lem8329708 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8329709 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term784 A B D P Q t pat e q f arg x v' v t') = (term785 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8329708) (@lem8329707 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329710 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term179 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (eq_refl (term179 D P Q pat e q x)). Qed.
Lemma lem8329711 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term786 A B D P Q t f arg v' v t' pat e q x) = (term787 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329709 A B D P Q t pat e q f arg x t' v' v) (@lem8329710 D P Q pat e q x)). Qed.
Lemma lem8329712 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term788 A B D P Q t f arg v' v pat e q x) = (term789 A B D P Q t f arg v' v pat e q x).
Proof. exact (fun_ext (fun t' : Q => @lem8329711 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329713 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329714 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term777 A B D P Q t f arg v' v pat e q x) = (term790 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329713 Q) (@lem8329712 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329715 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term776 A B D P Q t f arg v' v pat e q x) = (term777 A B D P Q t f arg v' v pat e q x)) = ((term772 A B D P Q t f arg v' v pat e q x) = (term790 A B D P Q t f arg v' v pat e q x)).
Proof. exact (MK_COMB (@lem8329706 A B D P Q t f arg v' v pat e q x) (@lem8329714 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329716 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term772 A B D P Q t f arg v' v pat e q x) = (term790 A B D P Q t f arg v' v pat e q x).
Proof. exact (EQ_MP (@lem8329715 A B D P Q t f arg v' v pat e q x) (@lem8329696 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329718 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8329719 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8329718 Q P Q'). Qed.
Lemma lem8329720 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term791 A B D P Q t f arg t' v' v pat e q x) = (term792 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (@lem8329719 Q (term719 A B D P Q t pat e q f arg x t' v' v) (term273 D P Q pat e q x)). Qed.
Lemma lem8329721 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term502 D P Q pat e q x t) = (term272 D P Q pat e q x t).
Proof. exact (eq_refl (term502 D P Q pat e q x t)). Qed.
Lemma lem8329722 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term793 D P Q pat e q x) = (term273 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329721 D P Q pat e q x t)). Qed.
Lemma lem8329723 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329724 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term794 D P Q pat e q x) = (term179 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8329723 Q) (@lem8329722 D P Q pat e q x)). Qed.
Lemma lem8329725 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term785 A B D P Q t pat e q f arg x t' v' v) = (term785 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term785 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329726 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term791 A B D P Q t f arg t' v' v pat e q x) = (term787 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329725 A B D P Q t pat e q f arg x t' v' v) (@lem8329724 D P Q pat e q x)). Qed.
Lemma lem8329727 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329728 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term795 A B D P Q t f arg t' v' v pat e q x) = (term796 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329727) (@lem8329726 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329729 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term502 D P Q pat e q x t'') = (term272 D P Q pat e q x t'').
Proof. exact (eq_refl (term502 D P Q pat e q x t'')). Qed.
Lemma lem8329730 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term785 A B D P Q t pat e q f arg x t' v' v) = (term785 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (eq_refl (term785 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8329731 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term797 A B D P Q t f arg t' v' v pat e q x t'') = (term798 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (MK_COMB (@lem8329730 A B D P Q t pat e q f arg x t' v' v) (@lem8329729 D P Q pat e q x t'')). Qed.
Lemma lem8329732 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term799 A B D P Q t f arg t' v' v pat e q x) = (term800 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (fun_ext (fun t'' : Q => @lem8329731 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329733 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329734 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term792 A B D P Q t f arg t' v' v pat e q x) = (term801 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329733 Q) (@lem8329732 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329735 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term791 A B D P Q t f arg t' v' v pat e q x) = (term792 A B D P Q t f arg t' v' v pat e q x)) = ((term787 A B D P Q t f arg t' v' v pat e q x) = (term801 A B D P Q t f arg t' v' v pat e q x)).
Proof. exact (MK_COMB (@lem8329728 A B D P Q t f arg t' v' v pat e q x) (@lem8329734 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329736 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term787 A B D P Q t f arg t' v' v pat e q x) = (term801 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (EQ_MP (@lem8329735 A B D P Q t f arg t' v' v pat e q x) (@lem8329720 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329737 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term789 A B D P Q t f arg v' v pat e q x) = (term802 A B D P Q t f arg v' v pat e q x).
Proof. exact (fun_ext (fun t' : Q => @lem8329736 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329738 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329739 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term790 A B D P Q t f arg v' v pat e q x) = (term803 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329738 Q) (@lem8329737 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329740 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term772 A B D P Q t f arg v' v pat e q x) = (term803 A B D P Q t f arg v' v pat e q x).
Proof. exact (TRANS (@lem8329716 A B D P Q t f arg v' v pat e q x) (@lem8329739 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329741 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term774 A B D P Q t f arg v pat e q x) = (term804 A B D P Q t f arg v pat e q x).
Proof. exact (fun_ext (fun v' : B => @lem8329740 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329742 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329743 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term775 A B D P Q t f arg v pat e q x) = (term805 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329742 B) (@lem8329741 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329744 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term757 A B D P Q t f arg v pat e q x) = (term805 A B D P Q t f arg v pat e q x).
Proof. exact (TRANS (@lem8329692 A B D P Q t f arg v pat e q x) (@lem8329743 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329745 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term759 A B D P Q f arg v pat e q x) = (term806 A B D P Q f arg v pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329744 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329746 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329747 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term760 A B D P Q f arg v pat e q x) = (term807 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329746 Q) (@lem8329745 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329748 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term742 A B D P Q f arg v pat e q x) = (term807 A B D P Q f arg v pat e q x).
Proof. exact (TRANS (@lem8329668 A B D P Q f arg v pat e q x) (@lem8329747 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329749 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term744 A B D P Q f arg pat e q x) = (term808 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329748 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329750 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329751 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term745 A B D P Q f arg pat e q x) = (term809 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329750 B) (@lem8329749 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329752 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term730 A B D P Q f arg pat e q x) = (term809 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329644 A B D P Q f arg pat e q x) (@lem8329751 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329753 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term557 A B D P Q f arg pat e q x) = (term809 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329620 A B D P Q f arg pat e q x) (@lem8329752 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329754 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term558 A B D P Q f arg pat e q x) = (term810 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329416 A B D P Q f arg pat e q x) (@lem8329753 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329756 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8329757 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term811 B P Q) = (term812 B P Q).
Proof. exact (@lem8329756 B P Q). Qed.
Lemma lem8329758 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term813 A B D P Q f arg pat e q x) = (term814 A B D P Q f arg pat e q x).
Proof. exact (@lem8329757 B (term618 A B D P Q f arg pat e q x) (term808 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329759 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term815 A B D P Q f arg pat e q x v) = (term617 A B D P Q v f arg pat e q x).
Proof. exact (eq_refl (term815 A B D P Q f arg pat e q x v)). Qed.
Lemma lem8329760 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term816 A B D P Q f arg pat e q x) = (term618 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329759 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329761 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329762 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term817 A B D P Q f arg pat e q x) = (term619 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329761 B) (@lem8329760 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329763 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8329764 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term818 A B D P Q f arg pat e q x) = (term620 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329763) (@lem8329762 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329765 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term819 A B D P Q f arg pat e q x v) = (term807 A B D P Q f arg v pat e q x).
Proof. exact (eq_refl (term819 A B D P Q f arg pat e q x v)). Qed.
Lemma lem8329766 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term820 A B D P Q f arg pat e q x) = (term808 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329765 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329767 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329768 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term821 A B D P Q f arg pat e q x) = (term809 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329767 B) (@lem8329766 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329769 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term813 A B D P Q f arg pat e q x) = (term810 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329764 A B D P Q f arg pat e q x) (@lem8329768 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329770 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329771 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term822 A B D P Q f arg pat e q x) = (term823 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329770) (@lem8329769 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329772 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term815 A B D P Q f arg pat e q x v) = (term617 A B D P Q v f arg pat e q x).
Proof. exact (eq_refl (term815 A B D P Q f arg pat e q x v)). Qed.
Lemma lem8329773 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8329774 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term824 A B D P Q f arg pat e q x v) = (term825 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329773) (@lem8329772 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329775 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term819 A B D P Q f arg pat e q x v) = (term807 A B D P Q f arg v pat e q x).
Proof. exact (eq_refl (term819 A B D P Q f arg pat e q x v)). Qed.
Lemma lem8329776 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term826 A B D P Q f arg pat e q x v) = (term827 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329774 A B D P Q v f arg pat e q x) (@lem8329775 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329777 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term828 A B D P Q f arg pat e q x) = (term829 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329776 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329778 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329779 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term814 A B D P Q f arg pat e q x) = (term830 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329778 B) (@lem8329777 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329780 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term813 A B D P Q f arg pat e q x) = (term814 A B D P Q f arg pat e q x)) = ((term810 A B D P Q f arg pat e q x) = (term830 A B D P Q f arg pat e q x)).
Proof. exact (MK_COMB (@lem8329771 A B D P Q f arg pat e q x) (@lem8329779 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329781 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term810 A B D P Q f arg pat e q x) = (term830 A B D P Q f arg pat e q x).
Proof. exact (EQ_MP (@lem8329780 A B D P Q f arg pat e q x) (@lem8329758 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329783 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8329784 {Q : Type'} (P : Q -> Prop) (Q' : Q -> Prop) : (term811 Q P Q') = (term812 Q P Q').
Proof. exact (@lem8329783 Q P Q'). Qed.
Lemma lem8329785 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term831 A B D P Q f arg v pat e q x) = (term832 A B D P Q f arg v pat e q x).
Proof. exact (@lem8329784 Q (term616 A B D P Q v f arg pat e q x) (term806 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329786 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term833 A B D P Q v f arg pat e q x t) = (term614 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term833 A B D P Q v f arg pat e q x t)). Qed.
Lemma lem8329787 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term834 A B D P Q v f arg pat e q x) = (term616 A B D P Q v f arg pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329786 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329788 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329789 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term835 A B D P Q v f arg pat e q x) = (term617 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329788 Q) (@lem8329787 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329790 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8329791 {A B D P Q : Type'} (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term836 A B D P Q v f arg pat e q x) = (term825 A B D P Q v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329790) (@lem8329789 A B D P Q v f arg pat e q x)). Qed.
Lemma lem8329792 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term837 A B D P Q f arg v pat e q x t) = (term805 A B D P Q t f arg v pat e q x).
Proof. exact (eq_refl (term837 A B D P Q f arg v pat e q x t)). Qed.
Lemma lem8329793 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term838 A B D P Q f arg v pat e q x) = (term806 A B D P Q f arg v pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329792 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329794 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329795 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term839 A B D P Q f arg v pat e q x) = (term807 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329794 Q) (@lem8329793 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329796 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term831 A B D P Q f arg v pat e q x) = (term827 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329791 A B D P Q v f arg pat e q x) (@lem8329795 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329797 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329798 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term840 A B D P Q f arg v pat e q x) = (term841 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329797) (@lem8329796 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329799 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term833 A B D P Q v f arg pat e q x t) = (term614 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term833 A B D P Q v f arg pat e q x t)). Qed.
Lemma lem8329800 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8329801 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term842 A B D P Q v f arg pat e q x t) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (MK_COMB (@lem8329800) (@lem8329799 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329802 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term837 A B D P Q f arg v pat e q x t) = (term805 A B D P Q t f arg v pat e q x).
Proof. exact (eq_refl (term837 A B D P Q f arg v pat e q x t)). Qed.
Lemma lem8329803 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term844 A B D P Q f arg v pat e q x t) = (term845 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329801 A B D P Q t v f arg pat e q x) (@lem8329802 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329804 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term846 A B D P Q f arg v pat e q x) = (term847 A B D P Q f arg v pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329803 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329805 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329806 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term832 A B D P Q f arg v pat e q x) = (term848 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329805 Q) (@lem8329804 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329807 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term831 A B D P Q f arg v pat e q x) = (term832 A B D P Q f arg v pat e q x)) = ((term827 A B D P Q f arg v pat e q x) = (term848 A B D P Q f arg v pat e q x)).
Proof. exact (MK_COMB (@lem8329798 A B D P Q f arg v pat e q x) (@lem8329806 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329808 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term827 A B D P Q f arg v pat e q x) = (term848 A B D P Q f arg v pat e q x).
Proof. exact (EQ_MP (@lem8329807 A B D P Q f arg v pat e q x) (@lem8329785 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329810 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329811 {B : Type'} (P : Prop) (Q : B -> Prop) : (term673 B P Q) = (term674 B P Q).
Proof. exact (@lem8329810 B P Q). Qed.
Lemma lem8329812 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term849 A B D P Q t f arg v pat e q x) = (term850 A B D P Q t f arg v pat e q x).
Proof. exact (@lem8329811 B (term614 A B D P Q t v f arg pat e q x) (term804 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329813 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term851 A B D P Q t f arg v pat e q x v') = (term803 A B D P Q t f arg v' v pat e q x).
Proof. exact (eq_refl (term851 A B D P Q t f arg v pat e q x v')). Qed.
Lemma lem8329814 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term852 A B D P Q t f arg v pat e q x) = (term804 A B D P Q t f arg v pat e q x).
Proof. exact (fun_ext (fun v' : B => @lem8329813 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329815 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329816 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term853 A B D P Q t f arg v pat e q x) = (term805 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329815 B) (@lem8329814 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329817 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329818 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term849 A B D P Q t f arg v pat e q x) = (term845 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329817 A B D P Q t v f arg pat e q x) (@lem8329816 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329819 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329820 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term854 A B D P Q t f arg v pat e q x) = (term855 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329819) (@lem8329818 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329821 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term851 A B D P Q t f arg v pat e q x v') = (term803 A B D P Q t f arg v' v pat e q x).
Proof. exact (eq_refl (term851 A B D P Q t f arg v pat e q x v')). Qed.
Lemma lem8329822 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329823 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term856 A B D P Q t f arg v pat e q x v') = (term857 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329822 A B D P Q t v f arg pat e q x) (@lem8329821 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329824 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term858 A B D P Q t f arg v pat e q x) = (term859 A B D P Q t f arg v pat e q x).
Proof. exact (fun_ext (fun v' : B => @lem8329823 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329825 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329826 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term850 A B D P Q t f arg v pat e q x) = (term860 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329825 B) (@lem8329824 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329827 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term849 A B D P Q t f arg v pat e q x) = (term850 A B D P Q t f arg v pat e q x)) = ((term845 A B D P Q t f arg v pat e q x) = (term860 A B D P Q t f arg v pat e q x)).
Proof. exact (MK_COMB (@lem8329820 A B D P Q t f arg v pat e q x) (@lem8329826 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329828 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term845 A B D P Q t f arg v pat e q x) = (term860 A B D P Q t f arg v pat e q x).
Proof. exact (EQ_MP (@lem8329827 A B D P Q t f arg v pat e q x) (@lem8329812 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329830 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329831 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8329830 Q P Q'). Qed.
Lemma lem8329832 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term861 A B D P Q t f arg v' v pat e q x) = (term862 A B D P Q t f arg v' v pat e q x).
Proof. exact (@lem8329831 Q (term614 A B D P Q t v f arg pat e q x) (term802 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329833 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term863 A B D P Q t f arg v' v pat e q x t') = (term801 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (eq_refl (term863 A B D P Q t f arg v' v pat e q x t')). Qed.
Lemma lem8329834 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term864 A B D P Q t f arg v' v pat e q x) = (term802 A B D P Q t f arg v' v pat e q x).
Proof. exact (fun_ext (fun t' : Q => @lem8329833 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329835 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329836 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term865 A B D P Q t f arg v' v pat e q x) = (term803 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329835 Q) (@lem8329834 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329837 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329838 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term861 A B D P Q t f arg v' v pat e q x) = (term857 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329837 A B D P Q t v f arg pat e q x) (@lem8329836 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329839 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329840 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term866 A B D P Q t f arg v' v pat e q x) = (term867 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329839) (@lem8329838 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329841 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term863 A B D P Q t f arg v' v pat e q x t') = (term801 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (eq_refl (term863 A B D P Q t f arg v' v pat e q x t')). Qed.
Lemma lem8329842 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329843 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term868 A B D P Q t f arg v' v pat e q x t') = (term869 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329842 A B D P Q t v f arg pat e q x) (@lem8329841 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329844 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term870 A B D P Q t f arg v' v pat e q x) = (term871 A B D P Q t f arg v' v pat e q x).
Proof. exact (fun_ext (fun t' : Q => @lem8329843 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329845 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329846 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term862 A B D P Q t f arg v' v pat e q x) = (term872 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329845 Q) (@lem8329844 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329847 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term861 A B D P Q t f arg v' v pat e q x) = (term862 A B D P Q t f arg v' v pat e q x)) = ((term857 A B D P Q t f arg v' v pat e q x) = (term872 A B D P Q t f arg v' v pat e q x)).
Proof. exact (MK_COMB (@lem8329840 A B D P Q t f arg v' v pat e q x) (@lem8329846 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329848 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term857 A B D P Q t f arg v' v pat e q x) = (term872 A B D P Q t f arg v' v pat e q x).
Proof. exact (EQ_MP (@lem8329847 A B D P Q t f arg v' v pat e q x) (@lem8329832 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329850 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8329851 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8329850 Q P Q'). Qed.
Lemma lem8329852 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term873 A B D P Q t f arg t' v' v pat e q x) = (term874 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (@lem8329851 Q (term614 A B D P Q t v f arg pat e q x) (term800 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329853 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term875 A B D P Q t f arg t' v' v pat e q x t'') = (term798 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (eq_refl (term875 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329854 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term876 A B D P Q t f arg t' v' v pat e q x) = (term800 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (fun_ext (fun t'' : Q => @lem8329853 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329855 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329856 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term877 A B D P Q t f arg t' v' v pat e q x) = (term801 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329855 Q) (@lem8329854 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329857 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329858 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term873 A B D P Q t f arg t' v' v pat e q x) = (term869 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329857 A B D P Q t v f arg pat e q x) (@lem8329856 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329859 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8329860 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term878 A B D P Q t f arg t' v' v pat e q x) = (term879 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329859) (@lem8329858 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329861 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term875 A B D P Q t f arg t' v' v pat e q x t'') = (term798 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (eq_refl (term875 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329862 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term843 A B D P Q t v f arg pat e q x).
Proof. exact (eq_refl (term843 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8329863 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term880 A B D P Q t f arg t' v' v pat e q x t'') = (term881 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (MK_COMB (@lem8329862 A B D P Q t v f arg pat e q x) (@lem8329861 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329864 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term882 A B D P Q t f arg t' v' v pat e q x) = (term883 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (fun_ext (fun t'' : Q => @lem8329863 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8329865 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329866 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term874 A B D P Q t f arg t' v' v pat e q x) = (term884 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (MK_COMB (@lem8329865 Q) (@lem8329864 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329867 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : ((term873 A B D P Q t f arg t' v' v pat e q x) = (term874 A B D P Q t f arg t' v' v pat e q x)) = ((term869 A B D P Q t f arg t' v' v pat e q x) = (term884 A B D P Q t f arg t' v' v pat e q x)).
Proof. exact (MK_COMB (@lem8329860 A B D P Q t f arg t' v' v pat e q x) (@lem8329866 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329868 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term869 A B D P Q t f arg t' v' v pat e q x) = (term884 A B D P Q t f arg t' v' v pat e q x).
Proof. exact (EQ_MP (@lem8329867 A B D P Q t f arg t' v' v pat e q x) (@lem8329852 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329869 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term871 A B D P Q t f arg v' v pat e q x) = (term885 A B D P Q t f arg v' v pat e q x).
Proof. exact (fun_ext (fun t' : Q => @lem8329868 A B D P Q t f arg t' v' v pat e q x)). Qed.
Lemma lem8329870 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329871 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term872 A B D P Q t f arg v' v pat e q x) = (term886 A B D P Q t f arg v' v pat e q x).
Proof. exact (MK_COMB (@lem8329870 Q) (@lem8329869 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329872 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term857 A B D P Q t f arg v' v pat e q x) = (term886 A B D P Q t f arg v' v pat e q x).
Proof. exact (TRANS (@lem8329848 A B D P Q t f arg v' v pat e q x) (@lem8329871 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329873 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term859 A B D P Q t f arg v pat e q x) = (term887 A B D P Q t f arg v pat e q x).
Proof. exact (fun_ext (fun v' : B => @lem8329872 A B D P Q t f arg v' v pat e q x)). Qed.
Lemma lem8329874 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329875 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term860 A B D P Q t f arg v pat e q x) = (term888 A B D P Q t f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329874 B) (@lem8329873 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329876 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term845 A B D P Q t f arg v pat e q x) = (term888 A B D P Q t f arg v pat e q x).
Proof. exact (TRANS (@lem8329828 A B D P Q t f arg v pat e q x) (@lem8329875 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329877 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term847 A B D P Q f arg v pat e q x) = (term889 A B D P Q f arg v pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8329876 A B D P Q t f arg v pat e q x)). Qed.
Lemma lem8329878 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8329879 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term848 A B D P Q f arg v pat e q x) = (term890 A B D P Q f arg v pat e q x).
Proof. exact (MK_COMB (@lem8329878 Q) (@lem8329877 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329880 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term827 A B D P Q f arg v pat e q x) = (term890 A B D P Q f arg v pat e q x).
Proof. exact (TRANS (@lem8329808 A B D P Q f arg v pat e q x) (@lem8329879 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329881 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term829 A B D P Q f arg pat e q x) = (term891 A B D P Q f arg pat e q x).
Proof. exact (fun_ext (fun v : B => @lem8329880 A B D P Q f arg v pat e q x)). Qed.
Lemma lem8329882 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem8329883 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term830 A B D P Q f arg pat e q x) = (term892 A B D P Q f arg pat e q x).
Proof. exact (MK_COMB (@lem8329882 B) (@lem8329881 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329884 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term810 A B D P Q f arg pat e q x) = (term892 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329781 A B D P Q f arg pat e q x) (@lem8329883 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329885 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term558 A B D P Q f arg pat e q x) = (term892 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329754 A B D P Q f arg pat e q x) (@lem8329884 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329886 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term518 A B D P Q f arg pat e q x) = (term892 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8329305 A B D P Q f arg pat e q x) (@lem8329885 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329887 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term406 A B D P Q f arg pat e q x) = (term892 A B D P Q f arg pat e q x).
Proof. exact (TRANS (@lem8328652 A B D P Q f arg pat e q x) (@lem8329886 A B D P Q f arg pat e q x)). Qed.
Lemma lem8329888 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term406 A B D P Q f arg pat e q x) : term892 A B D P Q f arg pat e q x.
Proof. exact (EQ_MP (@lem8329887 A B D P Q f arg pat e q x) (@lem8328229 A B D P Q f arg pat e q x h1)). Qed.
Lemma lem8329889 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term890 A B D P Q f arg v pat e q x) : term890 A B D P Q f arg v pat e q x.
Proof. exact (h1). Qed.
Lemma lem8329890 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term888 A B D P Q t f arg v pat e q x) : term888 A B D P Q t f arg v pat e q x.
Proof. exact (h1). Qed.
Lemma lem8329891 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term886 A B D P Q t f arg v' v pat e q x) : term886 A B D P Q t f arg v' v pat e q x.
Proof. exact (h1). Qed.
Lemma lem8329892 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term884 A B D P Q t f arg t' v' v pat e q x) : term884 A B D P Q t f arg t' v' v pat e q x.
Proof. exact (h1). Qed.
Lemma lem8329893 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term881 A B D P Q t f arg t' v' v pat e q x t'') : term881 A B D P Q t f arg t' v' v pat e q x t''.
Proof. exact (h1). Qed.
Lemma lem8329934 {A P Q : Type'} (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : ((arg a t) = (arg a u)) = ((arg a t) = (arg a u)).
Proof. exact (eq_refl ((arg a t) = (arg a u))). Qed.
Lemma lem8329979 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term415 D P Q t pat e q a u) = (term415 D P Q t pat e q a u).
Proof. exact (eq_refl (term415 D P Q t pat e q a u)). Qed.
Lemma lem8329980 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8329987 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8329988 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8329987 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8329989 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8329988 A B P p f). Qed.
Lemma lem8329990 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8329991 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8329989 A B P p f) (@lem8329990 P a)). Qed.
Lemma lem8329993 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8329994 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8329993 P Prop f x). Qed.
Lemma lem8329995 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8329994 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8329997 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8329991 A B P p f a) (@lem8329995 A B P p f a)). Qed.
Lemma lem8329998 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term894 A B P p f a) = (term895 A B P p f a).
Proof. exact (MK_COMB (@lem8329980) (@lem8329997 A B P p f a)). Qed.
Lemma lem8329999 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330000 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term896 A B P p f a).
Proof. exact (MK_COMB (@lem8329999) (@lem8329998 A B P p f a)). Qed.
Lemma lem8330001 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term420 A B D P Q p f t pat e q a u) = (term897 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8330000 A B P p f a) (@lem8329979 D P Q t pat e q a u)). Qed.
Lemma lem8330002 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330003 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term424 A B D P Q p f t pat e q a u) = (term898 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8330002) (@lem8330001 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8330004 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term426 A B D P Q p f pat e q t arg a u) = (term899 A B D P Q p f pat e q t arg a u).
Proof. exact (MK_COMB (@lem8330003 A B D P Q p f t pat e q a u) (@lem8329934 A P Q t arg a u)). Qed.
Lemma lem8330005 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term428 A B D P Q p f pat e q t arg a) = (term900 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8330004 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8330006 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330007 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term429 A B D P Q p f pat e q t arg a) = (term901 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8330006 Q) (@lem8330005 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8330008 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term430 A B D P Q p f pat e q arg a) = (term902 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8330007 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8330009 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330010 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term431 A B D P Q p f pat e q arg a) = (term903 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8330009 Q) (@lem8330008 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8330011 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term432 A B D P Q p f pat e q arg) = (term904 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8330010 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8330012 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8330013 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term433 A B D P Q p f pat e q arg) = (term905 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8330012 P) (@lem8330011 A B D P Q p f pat e q arg)). Qed.
Lemma lem8330014 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term434 A B D P Q p pat e q arg) = (term906 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8330013 A B D P Q p f pat e q arg)). Qed.
Lemma lem8330015 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8330016 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term435 A B D P Q p pat e q arg) = (term907 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8330015 A B) (@lem8330014 A B D P Q p pat e q arg)). Qed.
Lemma lem8330017 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term907 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8330016 A B D P Q p pat e q arg) (@lem8328363 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8330143 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330144 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8330143 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8330145 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8330144 A B P p f). Qed.
Lemma lem8330146 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8330147 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (p f x) = (@I ((A -> B) -> P -> Prop) p f x).
Proof. exact (MK_COMB (@lem8330145 A B P p f) (@lem8330146 P x)). Qed.
Lemma lem8330149 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330150 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8330149 P Prop f x). Qed.
Lemma lem8330151 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (@I ((A -> B) -> P -> Prop) p f x) = (term893 A B P p f x).
Proof. exact (@lem8330150 P (@I ((A -> B) -> P -> Prop) p f) x). Qed.
Lemma lem8330153 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (p f x) = (term893 A B P p f x).
Proof. exact (TRANS (@lem8330147 A B P p f x) (@lem8330151 A B P p f x)). Qed.
Lemma lem8330171 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term272 D P Q pat e q x t'') = (term272 D P Q pat e q x t'').
Proof. exact (eq_refl (term272 D P Q pat e q x t'')). Qed.
Lemma lem8330178 {B : Type'} (v' : B) (v : B) : (term451 B v' v) = (term451 B v' v).
Proof. exact (eq_refl (term451 B v' v)). Qed.
Lemma lem8330179 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330188 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330189 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330188 A B f x). Qed.
Lemma lem8330191 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) : (term77 A B P Q f arg x t') = (term908 A B P Q f arg x t').
Proof. exact (@lem8330189 A B f (arg x t')). Qed.
Lemma lem8330192 {B : Type'} (v' : B) : v' = v'.
Proof. exact (eq_refl v'). Qed.
Lemma lem8330193 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) : (term909 A B P Q f arg x t') = (term910 A B P Q f arg x t').
Proof. exact (MK_COMB (@lem8330179 B) (@lem8330191 A B P Q f arg x t')). Qed.
Lemma lem8330194 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) : ((term77 A B P Q f arg x t') = v') = ((term908 A B P Q f arg x t') = v').
Proof. exact (MK_COMB (@lem8330193 A B P Q f arg x t') (@lem8330192 B v')). Qed.
Lemma lem8330201 {P Q : Type'} (q : type1413 P Q) (x : P) (t' : Q) : (term911 P Q q x t') = (term911 P Q q x t').
Proof. exact (eq_refl (term911 P Q q x t')). Qed.
Lemma lem8330202 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) : (term441 A B P Q q f arg x t' v') = (term912 A B P Q q f arg x t' v').
Proof. exact (MK_COMB (@lem8330201 P Q q x t') (@lem8330194 A B P Q f arg x t' v')). Qed.
Lemma lem8330213 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (x : P) : (term913 D P Q pat t' e x) = (term913 D P Q pat t' e x).
Proof. exact (eq_refl (term913 D P Q pat t' e x)). Qed.
Lemma lem8330214 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) : (term274 A B D P Q pat e q f arg x t' v') = (term914 A B D P Q pat e q f arg x t' v').
Proof. exact (MK_COMB (@lem8330213 D P Q pat t' e x) (@lem8330202 A B P Q q f arg x t' v')). Qed.
Lemma lem8330215 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8330216 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) : (term578 A B D P Q pat e q f arg x t' v') = (term915 A B D P Q pat e q f arg x t' v').
Proof. exact (MK_COMB (@lem8330215) (@lem8330214 A B D P Q pat e q f arg x t' v')). Qed.
Lemma lem8330217 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term626 A B D P Q pat e q f arg x t' v' v) = (term916 A B D P Q pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8330216 A B D P Q pat e q f arg x t' v') (@lem8330178 B v' v)). Qed.
Lemma lem8330218 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330227 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330228 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330227 A B f x). Qed.
Lemma lem8330230 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term77 A B P Q f arg x t) = (term908 A B P Q f arg x t).
Proof. exact (@lem8330228 A B f (arg x t)). Qed.
Lemma lem8330231 {B : Type'} (v : B) : v = v.
Proof. exact (eq_refl v). Qed.
Lemma lem8330232 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term909 A B P Q f arg x t) = (term910 A B P Q f arg x t).
Proof. exact (MK_COMB (@lem8330218 B) (@lem8330230 A B P Q f arg x t)). Qed.
Lemma lem8330233 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term77 A B P Q f arg x t) = v) = ((term908 A B P Q f arg x t) = v).
Proof. exact (MK_COMB (@lem8330232 A B P Q f arg x t) (@lem8330231 B v)). Qed.
Lemma lem8330240 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term911 P Q q x t) = (term911 P Q q x t).
Proof. exact (eq_refl (term911 P Q q x t)). Qed.
Lemma lem8330241 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term441 A B P Q q f arg x t v) = (term912 A B P Q q f arg x t v).
Proof. exact (MK_COMB (@lem8330240 P Q q x t) (@lem8330233 A B P Q f arg x t v)). Qed.
Lemma lem8330252 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term913 D P Q pat t e x) = (term913 D P Q pat t e x).
Proof. exact (eq_refl (term913 D P Q pat t e x)). Qed.
Lemma lem8330253 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term914 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330252 D P Q pat t e x) (@lem8330241 A B P Q q f arg x t v)). Qed.
Lemma lem8330254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8330255 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term915 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330254) (@lem8330253 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330256 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term662 A B D P Q t pat e q f arg x t' v' v) = (term917 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8330255 A B D P Q pat e q f arg x t v) (@lem8330217 A B D P Q pat e q f arg x t' v' v)). Qed.
Lemma lem8330257 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8330258 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330267 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330268 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330267 A B f x). Qed.
Lemma lem8330270 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term77 A B P Q f arg x t) = (term908 A B P Q f arg x t).
Proof. exact (@lem8330268 A B f (arg x t)). Qed.
Lemma lem8330271 {B : Type'} (v : B) : v = v.
Proof. exact (eq_refl v). Qed.
Lemma lem8330272 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term909 A B P Q f arg x t) = (term910 A B P Q f arg x t).
Proof. exact (MK_COMB (@lem8330258 B) (@lem8330270 A B P Q f arg x t)). Qed.
Lemma lem8330273 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term77 A B P Q f arg x t) = v) = ((term908 A B P Q f arg x t) = v).
Proof. exact (MK_COMB (@lem8330272 A B P Q f arg x t) (@lem8330271 B v)). Qed.
Lemma lem8330274 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term918 A B P Q f arg x t v) = (term919 A B P Q f arg x t v).
Proof. exact (MK_COMB (@lem8330257) (@lem8330273 A B P Q f arg x t v)). Qed.
Lemma lem8330283 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term409 P Q q x t) = (term409 P Q q x t).
Proof. exact (eq_refl (term409 P Q q x t)). Qed.
Lemma lem8330284 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term437 A B P Q q f arg x t v) = (term920 A B P Q q f arg x t v).
Proof. exact (MK_COMB (@lem8330283 P Q q x t) (@lem8330274 A B P Q f arg x t v)). Qed.
Lemma lem8330297 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term413 D P Q pat t e x) = (term413 D P Q pat t e x).
Proof. exact (eq_refl (term413 D P Q pat t e x)). Qed.
Lemma lem8330298 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term439 A B D P Q pat e q f arg x t v) = (term921 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330297 D P Q pat t e x) (@lem8330284 A B P Q q f arg x t v)). Qed.
Lemma lem8330299 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term449 A B D P Q pat e q f arg x v) = (term922 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8330298 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330300 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330301 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term450 A B D P Q pat e q f arg x v) = (term923 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330300 Q) (@lem8330299 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330302 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term495 A B D P Q pat e q f arg x) = (term924 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8330301 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330303 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8330304 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term497 A B D P Q pat e q f arg x) = (term925 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8330303 B) (@lem8330302 A B D P Q pat e q f arg x)). Qed.
Lemma lem8330305 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330306 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term499 A B D P Q pat e q f arg x) = (term926 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8330305) (@lem8330304 A B D P Q pat e q f arg x)). Qed.
Lemma lem8330307 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term719 A B D P Q t pat e q f arg x t' v' v) = (term927 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8330306 A B D P Q pat e q f arg x) (@lem8330256 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8330308 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8330309 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) : (term785 A B D P Q t pat e q f arg x t' v' v) = (term928 A B D P Q t pat e q f arg x t' v' v).
Proof. exact (MK_COMB (@lem8330308) (@lem8330307 A B D P Q t pat e q f arg x t' v' v)). Qed.
Lemma lem8330310 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term798 A B D P Q t f arg t' v' v pat e q x t'') = (term929 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (MK_COMB (@lem8330309 A B D P Q t pat e q f arg x t' v' v) (@lem8330171 D P Q pat e q x t'')). Qed.
Lemma lem8330331 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term408 D P Q pat e q x t) = (term408 D P Q pat e q x t).
Proof. exact (eq_refl (term408 D P Q pat e q x t)). Qed.
Lemma lem8330332 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term505 D P Q pat e q x) = (term505 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8330331 D P Q pat e q x t)). Qed.
Lemma lem8330333 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330334 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8330333 Q) (@lem8330332 D P Q pat e q x)). Qed.
Lemma lem8330339 {B : Type'} (v' : B) (v : B) : (v' = v) = (v' = v).
Proof. exact (eq_refl (v' = v)). Qed.
Lemma lem8330340 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8330341 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330350 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330351 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330350 A B f x). Qed.
Lemma lem8330353 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term77 A B P Q f arg x t) = (term908 A B P Q f arg x t).
Proof. exact (@lem8330351 A B f (arg x t)). Qed.
Lemma lem8330354 {B : Type'} (v' : B) : v' = v'.
Proof. exact (eq_refl v'). Qed.
Lemma lem8330355 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term909 A B P Q f arg x t) = (term910 A B P Q f arg x t).
Proof. exact (MK_COMB (@lem8330341 B) (@lem8330353 A B P Q f arg x t)). Qed.
Lemma lem8330356 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : ((term77 A B P Q f arg x t) = v') = ((term908 A B P Q f arg x t) = v').
Proof. exact (MK_COMB (@lem8330355 A B P Q f arg x t) (@lem8330354 B v')). Qed.
Lemma lem8330357 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term918 A B P Q f arg x t v') = (term919 A B P Q f arg x t v').
Proof. exact (MK_COMB (@lem8330340) (@lem8330356 A B P Q f arg x t v')). Qed.
Lemma lem8330366 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term409 P Q q x t) = (term409 P Q q x t).
Proof. exact (eq_refl (term409 P Q q x t)). Qed.
Lemma lem8330367 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term437 A B P Q q f arg x t v') = (term920 A B P Q q f arg x t v').
Proof. exact (MK_COMB (@lem8330366 P Q q x t) (@lem8330357 A B P Q f arg x t v')). Qed.
Lemma lem8330380 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term413 D P Q pat t e x) = (term413 D P Q pat t e x).
Proof. exact (eq_refl (term413 D P Q pat t e x)). Qed.
Lemma lem8330381 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term439 A B D P Q pat e q f arg x t v') = (term921 A B D P Q pat e q f arg x t v').
Proof. exact (MK_COMB (@lem8330380 D P Q pat t e x) (@lem8330367 A B P Q q f arg x t v')). Qed.
Lemma lem8330382 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term449 A B D P Q pat e q f arg x v') = (term922 A B D P Q pat e q f arg x v').
Proof. exact (fun_ext (fun t : Q => @lem8330381 A B D P Q pat e q f arg x t v')). Qed.
Lemma lem8330383 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330384 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term450 A B D P Q pat e q f arg x v') = (term923 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8330383 Q) (@lem8330382 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8330385 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330386 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) : (term461 A B D P Q pat e q f arg x v') = (term930 A B D P Q pat e q f arg x v').
Proof. exact (MK_COMB (@lem8330385) (@lem8330384 A B D P Q pat e q f arg x v')). Qed.
Lemma lem8330387 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v' : B) (v : B) : (term463 A B D P Q pat e q f arg x v' v) = (term931 A B D P Q pat e q f arg x v' v).
Proof. exact (MK_COMB (@lem8330386 A B D P Q pat e q f arg x v') (@lem8330339 B v' v)). Qed.
Lemma lem8330388 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term523 A B D P Q pat e q f arg x v) = (term932 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun v' : B => @lem8330387 A B D P Q pat e q f arg x v' v)). Qed.
Lemma lem8330389 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8330390 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term531 A B D P Q pat e q f arg x v) = (term933 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330389 B) (@lem8330388 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330391 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8330392 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330401 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330402 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330401 A B f x). Qed.
Lemma lem8330404 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term77 A B P Q f arg x t) = (term908 A B P Q f arg x t).
Proof. exact (@lem8330402 A B f (arg x t)). Qed.
Lemma lem8330405 {B : Type'} (v : B) : v = v.
Proof. exact (eq_refl v). Qed.
Lemma lem8330406 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term909 A B P Q f arg x t) = (term910 A B P Q f arg x t).
Proof. exact (MK_COMB (@lem8330392 B) (@lem8330404 A B P Q f arg x t)). Qed.
Lemma lem8330407 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term77 A B P Q f arg x t) = v) = ((term908 A B P Q f arg x t) = v).
Proof. exact (MK_COMB (@lem8330406 A B P Q f arg x t) (@lem8330405 B v)). Qed.
Lemma lem8330408 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term918 A B P Q f arg x t v) = (term919 A B P Q f arg x t v).
Proof. exact (MK_COMB (@lem8330391) (@lem8330407 A B P Q f arg x t v)). Qed.
Lemma lem8330417 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term409 P Q q x t) = (term409 P Q q x t).
Proof. exact (eq_refl (term409 P Q q x t)). Qed.
Lemma lem8330418 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term437 A B P Q q f arg x t v) = (term920 A B P Q q f arg x t v).
Proof. exact (MK_COMB (@lem8330417 P Q q x t) (@lem8330408 A B P Q f arg x t v)). Qed.
Lemma lem8330431 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term413 D P Q pat t e x) = (term413 D P Q pat t e x).
Proof. exact (eq_refl (term413 D P Q pat t e x)). Qed.
Lemma lem8330432 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term439 A B D P Q pat e q f arg x t v) = (term921 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330431 D P Q pat t e x) (@lem8330418 A B P Q q f arg x t v)). Qed.
Lemma lem8330433 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term449 A B D P Q pat e q f arg x v) = (term922 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8330432 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330434 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330435 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term450 A B D P Q pat e q f arg x v) = (term923 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330434 Q) (@lem8330433 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330436 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330437 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term461 A B D P Q pat e q f arg x v) = (term930 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330436) (@lem8330435 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330438 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term532 A B D P Q pat e q f arg x v) = (term934 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330437 A B D P Q pat e q f arg x v) (@lem8330390 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330439 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term533 A B D P Q pat e q f arg x) = (term935 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8330438 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330440 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8330441 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term534 A B D P Q pat e q f arg x) = (term936 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8330440 B) (@lem8330439 A B D P Q pat e q f arg x)). Qed.
Lemma lem8330442 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8330451 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8330452 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8330451 A B f x). Qed.
Lemma lem8330454 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term77 A B P Q f arg x t) = (term908 A B P Q f arg x t).
Proof. exact (@lem8330452 A B f (arg x t)). Qed.
Lemma lem8330455 {B : Type'} (v : B) : v = v.
Proof. exact (eq_refl v). Qed.
Lemma lem8330456 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term909 A B P Q f arg x t) = (term910 A B P Q f arg x t).
Proof. exact (MK_COMB (@lem8330442 B) (@lem8330454 A B P Q f arg x t)). Qed.
Lemma lem8330457 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : ((term77 A B P Q f arg x t) = v) = ((term908 A B P Q f arg x t) = v).
Proof. exact (MK_COMB (@lem8330456 A B P Q f arg x t) (@lem8330455 B v)). Qed.
Lemma lem8330464 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term911 P Q q x t) = (term911 P Q q x t).
Proof. exact (eq_refl (term911 P Q q x t)). Qed.
Lemma lem8330465 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term441 A B P Q q f arg x t v) = (term912 A B P Q q f arg x t v).
Proof. exact (MK_COMB (@lem8330464 P Q q x t) (@lem8330457 A B P Q f arg x t v)). Qed.
Lemma lem8330476 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term913 D P Q pat t e x) = (term913 D P Q pat t e x).
Proof. exact (eq_refl (term913 D P Q pat t e x)). Qed.
Lemma lem8330477 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term274 A B D P Q pat e q f arg x t v) = (term914 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330476 D P Q pat t e x) (@lem8330465 A B P Q q f arg x t v)). Qed.
Lemma lem8330478 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8330479 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term578 A B D P Q pat e q f arg x t v) = (term915 A B D P Q pat e q f arg x t v).
Proof. exact (MK_COMB (@lem8330478) (@lem8330477 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330480 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term580 A B D P Q t v pat e q f arg x) = (term937 A B D P Q t v pat e q f arg x).
Proof. exact (MK_COMB (@lem8330479 A B D P Q pat e q f arg x t v) (@lem8330441 A B D P Q pat e q f arg x)). Qed.
Lemma lem8330481 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8330482 {A B D P Q : Type'} (t : Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term612 A B D P Q t v pat e q f arg x) = (term938 A B D P Q t v pat e q f arg x).
Proof. exact (MK_COMB (@lem8330481) (@lem8330480 A B D P Q t v pat e q f arg x)). Qed.
Lemma lem8330483 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term614 A B D P Q t v f arg pat e q x) = (term939 A B D P Q t v f arg pat e q x).
Proof. exact (MK_COMB (@lem8330482 A B D P Q t v pat e q f arg x) (@lem8330334 D P Q pat e q x)). Qed.
Lemma lem8330484 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8330485 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term843 A B D P Q t v f arg pat e q x) = (term940 A B D P Q t v f arg pat e q x).
Proof. exact (MK_COMB (@lem8330484) (@lem8330483 A B D P Q t v f arg pat e q x)). Qed.
Lemma lem8330486 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) : (term881 A B D P Q t f arg t' v' v pat e q x t'') = (term941 A B D P Q t f arg t' v' v pat e q x t'').
Proof. exact (MK_COMB (@lem8330485 A B D P Q t v f arg pat e q x) (@lem8330310 A B D P Q t f arg t' v' v pat e q x t'')). Qed.
Lemma lem8330487 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term881 A B D P Q t f arg t' v' v pat e q x t'') : term941 A B D P Q t f arg t' v' v pat e q x t''.
Proof. exact (EQ_MP (@lem8330486 A B D P Q t f arg t' v' v pat e q x t'') (@lem8329893 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8330488 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term939 A B D P Q t v f arg pat e q x.
Proof. exact (h1). Qed.
Lemma lem8330489 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term929 A B D P Q t f arg t' v' v pat e q x t''.
Proof. exact (h1). Qed.
Lemma lem8330490 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term506 D P Q pat e q x.
Proof. exact (proj2 (@lem8330488 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8330491 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term937 A B D P Q t v pat e q f arg x.
Proof. exact (proj1 (@lem8330488 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8330493 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term914 A B D P Q pat e q f arg x t v.
Proof. exact (proj1 (@lem8330491 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8330494 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term912 A B P Q q f arg x t v.
Proof. exact (proj2 (@lem8330493 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8330498 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term272 D P Q pat e q x t''.
Proof. exact (proj2 (@lem8330489 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8330499 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term927 A B D P Q t pat e q f arg x t' v' v.
Proof. exact (proj1 (@lem8330489 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8330502 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term925 A B D P Q pat e q f arg x.
Proof. exact (h1). Qed.
Lemma lem8330503 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term917 A B D P Q t pat e q f arg x t' v' v.
Proof. exact (h1). Qed.
Lemma lem8330504 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term916 A B D P Q pat e q f arg x t' v' v.
Proof. exact (proj2 (@lem8330503 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8330505 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term914 A B D P Q pat e q f arg x t v.
Proof. exact (proj1 (@lem8330503 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8330507 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term914 A B D P Q pat e q f arg x t' v'.
Proof. exact (proj1 (@lem8330504 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8330508 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term912 A B P Q q f arg x t' v'.
Proof. exact (proj2 (@lem8330507 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8330512 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term912 A B P Q q f arg x t v.
Proof. exact (proj2 (@lem8330505 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8330659 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t : Q) : (term408 D P Q pat e q x t) = (term408 D P Q pat e q x t).
Proof. exact (eq_refl (term408 D P Q pat e q x t)). Qed.
Lemma lem8330660 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term505 D P Q pat e q x) = (term505 D P Q pat e q x).
Proof. exact (fun_ext (fun t : Q => @lem8330659 D P Q pat e q x t)). Qed.
Lemma lem8330661 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330663 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term506 D P Q pat e q x) = (term506 D P Q pat e q x).
Proof. exact (MK_COMB (@lem8330661 Q) (@lem8330660 D P Q pat e q x)). Qed.
Lemma lem8330664 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term506 D P Q pat e q x.
Proof. exact (EQ_MP (@lem8330663 D P Q pat e q x) (@lem8330490 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8330990 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v : B) : (term921 A B D P Q pat e q f arg x t v) = (term921 A B D P Q pat e q f arg x t v).
Proof. exact (eq_refl (term921 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330991 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term922 A B D P Q pat e q f arg x v) = (term922 A B D P Q pat e q f arg x v).
Proof. exact (fun_ext (fun t : Q => @lem8330990 A B D P Q pat e q f arg x t v)). Qed.
Lemma lem8330992 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8330993 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (v : B) : (term923 A B D P Q pat e q f arg x v) = (term923 A B D P Q pat e q f arg x v).
Proof. exact (MK_COMB (@lem8330992 Q) (@lem8330991 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330994 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term924 A B D P Q pat e q f arg x) = (term924 A B D P Q pat e q f arg x).
Proof. exact (fun_ext (fun v : B => @lem8330993 A B D P Q pat e q f arg x v)). Qed.
Lemma lem8330995 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8330997 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) : (term925 A B D P Q pat e q f arg x) = (term925 A B D P Q pat e q f arg x).
Proof. exact (MK_COMB (@lem8330995 B) (@lem8330994 A B D P Q pat e q f arg x)). Qed.
Lemma lem8330998 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term925 A B D P Q pat e q f arg x.
Proof. exact (EQ_MP (@lem8330997 A B D P Q pat e q f arg x) (@lem8330502 A B D P Q pat e q f arg x h1)). Qed.
Lemma lem8331044 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term899 A B D P Q p f pat e q t arg a u) = (term899 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term899 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8331045 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term900 A B D P Q p f pat e q t arg a) = (term900 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8331044 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8331046 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8331047 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term901 A B D P Q p f pat e q t arg a) = (term901 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8331046 Q) (@lem8331045 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8331048 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term902 A B D P Q p f pat e q arg a) = (term902 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8331047 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8331049 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8331050 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term903 A B D P Q p f pat e q arg a) = (term903 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8331049 Q) (@lem8331048 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8331051 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term904 A B D P Q p f pat e q arg) = (term904 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8331050 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8331052 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8331053 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term905 A B D P Q p f pat e q arg) = (term905 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8331052 P) (@lem8331051 A B D P Q p f pat e q arg)). Qed.
Lemma lem8331054 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term906 A B D P Q p pat e q arg) = (term906 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8331053 A B D P Q p f pat e q arg)). Qed.
Lemma lem8331055 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8331057 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term907 A B D P Q p pat e q arg) = (term907 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8331055 A B) (@lem8331054 A B D P Q p pat e q arg)). Qed.
Lemma lem8331058 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term907 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8331057 A B D P Q p pat e q arg) (@lem8330017 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8331201 {A B D P Q : Type'} (_112657 : Q) (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term942 D P Q pat e q x _112657.
Proof. exact (@lem8330664 A B D P Q t v f arg pat e q x h1 _112657). Qed.
Lemma lem8331202 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (_112657 : Q) : (term942 D P Q pat e q x _112657) = (term408 D P Q pat e q x _112657).
Proof. exact (eq_refl (term942 D P Q pat e q x _112657)). Qed.
Lemma lem8331246 {A B D P Q : Type'} (_112672 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term943 A B D P Q pat e q f arg x _112672.
Proof. exact (@lem8330998 A B D P Q pat e q f arg x h1 _112672). Qed.
Lemma lem8331247 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112672 : B) : (term943 A B D P Q pat e q f arg x _112672) = (term923 A B D P Q pat e q f arg x _112672).
Proof. exact (eq_refl (term943 A B D P Q pat e q f arg x _112672)). Qed.
Lemma lem8331248 {A B D P Q : Type'} (_112672 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term923 A B D P Q pat e q f arg x _112672.
Proof. exact (EQ_MP (@lem8331247 A B D P Q pat e q f arg x _112672) (@lem8331246 A B D P Q _112672 pat e q f arg x h1)). Qed.
Lemma lem8331249 {A B D P Q : Type'} (_112672 : B) (_112673 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term944 A B D P Q pat e q f arg x _112672 _112673.
Proof. exact (@lem8331248 A B D P Q _112672 pat e q f arg x h1 _112673). Qed.
Lemma lem8331250 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term944 A B D P Q pat e q f arg x _112672 _112673) = (term921 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (eq_refl (term944 A B D P Q pat e q f arg x _112672 _112673)). Qed.
Lemma lem8331258 {A B D P Q : Type'} (_112676 : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term945 A B D P Q p pat e q arg _112676.
Proof. exact (@lem8331058 A B D P Q p pat e q arg h1 _112676). Qed.
Lemma lem8331259 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term945 A B D P Q p pat e q arg _112676) = (term905 A B D P Q p _112676 pat e q arg).
Proof. exact (eq_refl (term945 A B D P Q p pat e q arg _112676)). Qed.
Lemma lem8331260 {A B D P Q : Type'} (_112676 : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term905 A B D P Q p _112676 pat e q arg.
Proof. exact (EQ_MP (@lem8331259 A B D P Q p _112676 pat e q arg) (@lem8331258 A B D P Q _112676 p pat e q arg h1)). Qed.
Lemma lem8331261 {A B D P Q : Type'} (_112676 : A -> B) (_112677 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term946 A B D P Q p _112676 pat e q arg _112677.
Proof. exact (@lem8331260 A B D P Q _112676 p pat e q arg h1 _112677). Qed.
Lemma lem8331262 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (_112677 : P) : (term946 A B D P Q p _112676 pat e q arg _112677) = (term903 A B D P Q p _112676 pat e q arg _112677).
Proof. exact (eq_refl (term946 A B D P Q p _112676 pat e q arg _112677)). Qed.
Lemma lem8331263 {A B D P Q : Type'} (_112676 : A -> B) (_112677 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term903 A B D P Q p _112676 pat e q arg _112677.
Proof. exact (EQ_MP (@lem8331262 A B D P Q p _112676 pat e q arg _112677) (@lem8331261 A B D P Q _112676 _112677 p pat e q arg h1)). Qed.
Lemma lem8331264 {A B D P Q : Type'} (_112676 : A -> B) (_112677 : P) (_112678 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term947 A B D P Q p _112676 pat e q arg _112677 _112678.
Proof. exact (@lem8331263 A B D P Q _112676 _112677 p pat e q arg h1 _112678). Qed.
Lemma lem8331265 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) : (term947 A B D P Q p _112676 pat e q arg _112677 _112678) = (term901 A B D P Q p _112676 pat e q _112678 arg _112677).
Proof. exact (eq_refl (term947 A B D P Q p _112676 pat e q arg _112677 _112678)). Qed.
Lemma lem8331266 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term901 A B D P Q p _112676 pat e q _112678 arg _112677.
Proof. exact (EQ_MP (@lem8331265 A B D P Q p _112676 pat e q _112678 arg _112677) (@lem8331264 A B D P Q _112676 _112677 _112678 p pat e q arg h1)). Qed.
Lemma lem8331267 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term948 A B D P Q p _112676 pat e q _112678 arg _112677 _112679.
Proof. exact (@lem8331266 A B D P Q _112676 _112678 _112677 p pat e q arg h1 _112679). Qed.
Lemma lem8331268 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term948 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term899 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (eq_refl (term948 A B D P Q p _112676 pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331269 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term899 A B D P Q p _112676 pat e q _112678 arg _112677 _112679.
Proof. exact (EQ_MP (@lem8331268 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8331267 A B D P Q _112676 _112678 _112677 _112679 p pat e q arg h1)). Qed.
Lemma lem8331461 {A B D P Q : Type'} (_112673 : Q) (_112672 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term921 A B D P Q pat e q f arg x _112673 _112672.
Proof. exact (EQ_MP (@lem8331250 A B D P Q pat e q f arg x _112673 _112672) (@lem8331249 A B D P Q _112672 _112673 pat e q f arg x h1)). Qed.
Lemma lem8331469 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term899 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term949 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8321091 (term895 A B P p _112676 _112677) (term415 D P Q _112678 pat e q _112677 _112679) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8331470 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term950 A D P Q pat e q _112678 arg _112677 _112679) = (term951 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8321091 (term952 D P Q pat _112678 e _112677) (term411 D P Q _112678 pat e q _112677 _112679) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8331471 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term953 A D P Q pat e q _112678 arg _112677 _112679) = (term954 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8321091 (term955 P Q q _112677 _112678) (term408 D P Q pat e q _112677 _112679) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8331478 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term956 A D P Q pat e q _112678 arg _112677 _112679) = (term957 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8321091 (term952 D P Q pat _112679 e _112677) (term955 P Q q _112677 _112679) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8331479 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term409 P Q q _112677 _112678) = (term409 P Q q _112677 _112678).
Proof. exact (eq_refl (term409 P Q q _112677 _112678)). Qed.
Lemma lem8331482 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term954 A D P Q pat e q _112678 arg _112677 _112679) = (term958 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (MK_COMB (@lem8331479 P Q q _112677 _112678) (@lem8331478 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331483 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term953 A D P Q pat e q _112678 arg _112677 _112679) = (term958 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (TRANS (@lem8331471 A D P Q pat e q _112678 arg _112677 _112679) (@lem8331482 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331484 {D P Q : Type'} (pat : Q -> D) (_112678 : Q) (e : P -> D) (_112677 : P) : (term413 D P Q pat _112678 e _112677) = (term413 D P Q pat _112678 e _112677).
Proof. exact (eq_refl (term413 D P Q pat _112678 e _112677)). Qed.
Lemma lem8331487 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term951 A D P Q pat e q _112678 arg _112677 _112679) = (term959 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (MK_COMB (@lem8331484 D P Q pat _112678 e _112677) (@lem8331483 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331488 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term950 A D P Q pat e q _112678 arg _112677 _112679) = (term959 A D P Q pat e q _112678 arg _112677 _112679).
Proof. exact (TRANS (@lem8331470 A D P Q pat e q _112678 arg _112677 _112679) (@lem8331487 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331489 {A B P : Type'} (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term896 A B P p _112676 _112677) = (term896 A B P p _112676 _112677).
Proof. exact (eq_refl (term896 A B P p _112676 _112677)). Qed.
Lemma lem8331492 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term949 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (MK_COMB (@lem8331489 A B P p _112676 _112677) (@lem8331488 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331494 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term899 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (TRANS (@lem8331469 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8331492 A B D P Q p _112676 pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8331527 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term451 B v' v.
Proof. exact (proj2 (@lem8330504 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331539 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term908 A B P Q f arg x t) = v.
Proof. exact (proj2 (@lem8330512 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331652 {A B D P Q : Type'} (_112657 : Q) (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term408 D P Q pat e q x _112657.
Proof. exact (EQ_MP (@lem8331202 D P Q pat e q x _112657) (@lem8331201 A B D P Q _112657 t v f arg pat e q x h1)). Qed.
Lemma lem8331695 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : v = (term908 A B P Q f arg x t).
Proof. exact (SYM (@lem8331539 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331822 {B : Type'} (v' : B) : (term961 B v') = (term961 B v').
Proof. exact (eq_refl (term961 B v')). Qed.
Lemma lem8331823 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term962 B v' v) = (term963 A B P Q v' f arg x t).
Proof. exact (MK_COMB (@lem8331822 B v') (@lem8331695 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331824 {A B P Q : Type'} (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term963 A B P Q v' f arg x t) = (term964 A B P Q v' f arg x t).
Proof. exact (eq_refl (term963 A B P Q v' f arg x t)). Qed.
Lemma lem8331825 {B : Type'} (v' : B) (v : B) : (term965 B v' v) = (term965 B v' v).
Proof. exact (eq_refl (term965 B v' v)). Qed.
Lemma lem8331826 {A B P Q : Type'} (v : B) (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term962 B v' v) = (term963 A B P Q v' f arg x t)) = ((term962 B v' v) = (term964 A B P Q v' f arg x t)).
Proof. exact (MK_COMB (@lem8331825 B v' v) (@lem8331824 A B P Q v' f arg x t)). Qed.
Lemma lem8331827 {B : Type'} (v' : B) (v : B) : (term962 B v' v) = (term451 B v' v).
Proof. exact (eq_refl (term962 B v' v)). Qed.
Lemma lem8331828 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8331829 {B : Type'} (v' : B) (v : B) : (term965 B v' v) = (term966 B v' v).
Proof. exact (MK_COMB (@lem8331828) (@lem8331827 B v' v)). Qed.
Lemma lem8331830 {A B P Q : Type'} (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term964 A B P Q v' f arg x t) = (term964 A B P Q v' f arg x t).
Proof. exact (eq_refl (term964 A B P Q v' f arg x t)). Qed.
Lemma lem8331831 {A B P Q : Type'} (v : B) (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term962 B v' v) = (term964 A B P Q v' f arg x t)) = ((term451 B v' v) = (term964 A B P Q v' f arg x t)).
Proof. exact (MK_COMB (@lem8331829 B v' v) (@lem8331830 A B P Q v' f arg x t)). Qed.
Lemma lem8331832 {A B P Q : Type'} (v : B) (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term962 B v' v) = (term963 A B P Q v' f arg x t)) = ((term451 B v' v) = (term964 A B P Q v' f arg x t)).
Proof. exact (TRANS (@lem8331826 A B P Q v v' f arg x t) (@lem8331831 A B P Q v v' f arg x t)). Qed.
Lemma lem8331833 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term451 B v' v) = (term964 A B P Q v' f arg x t).
Proof. exact (EQ_MP (@lem8331832 A B P Q v v' f arg x t) (@lem8331823 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331834 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term964 A B P Q v' f arg x t.
Proof. exact (EQ_MP (@lem8331833 A B D P Q t pat e q f arg x t' v' v h1) (@lem8331527 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331876 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term908 A B P Q f arg x t') = v'.
Proof. exact (proj2 (@lem8330508 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331905 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : v' = (term908 A B P Q f arg x t').
Proof. exact (SYM (@lem8331876 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8331961 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679.
Proof. exact (EQ_MP (@lem8331494 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8331269 A B D P Q _112676 _112678 _112677 _112679 p pat e q arg h1)). Qed.
Lemma lem8332032 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term967 A B P Q f arg x t) = (term967 A B P Q f arg x t).
Proof. exact (eq_refl (term967 A B P Q f arg x t)). Qed.
Lemma lem8332033 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term968 A B P Q f arg x t v') = (term969 A B P Q t f arg x t').
Proof. exact (MK_COMB (@lem8332032 A B P Q f arg x t) (@lem8331905 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332034 {A B P Q : Type'} (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term969 A B P Q t f arg x t') = (term970 A B P Q t' f arg x t).
Proof. exact (eq_refl (term969 A B P Q t f arg x t')). Qed.
Lemma lem8332035 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) (v' : B) : (term971 A B P Q f arg x t v') = (term971 A B P Q f arg x t v').
Proof. exact (eq_refl (term971 A B P Q f arg x t v')). Qed.
Lemma lem8332036 {A B P Q : Type'} (v' : B) (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term968 A B P Q f arg x t v') = (term969 A B P Q t f arg x t')) = ((term968 A B P Q f arg x t v') = (term970 A B P Q t' f arg x t)).
Proof. exact (MK_COMB (@lem8332035 A B P Q f arg x t v') (@lem8332034 A B P Q t' f arg x t)). Qed.
Lemma lem8332037 {A B P Q : Type'} (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term968 A B P Q f arg x t v') = (term964 A B P Q v' f arg x t).
Proof. exact (eq_refl (term968 A B P Q f arg x t v')). Qed.
Lemma lem8332038 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8332039 {A B P Q : Type'} (v' : B) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term971 A B P Q f arg x t v') = (term972 A B P Q v' f arg x t).
Proof. exact (MK_COMB (@lem8332038) (@lem8332037 A B P Q v' f arg x t)). Qed.
Lemma lem8332040 {A B P Q : Type'} (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term970 A B P Q t' f arg x t) = (term970 A B P Q t' f arg x t).
Proof. exact (eq_refl (term970 A B P Q t' f arg x t)). Qed.
Lemma lem8332041 {A B P Q : Type'} (v' : B) (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term968 A B P Q f arg x t v') = (term970 A B P Q t' f arg x t)) = ((term964 A B P Q v' f arg x t) = (term970 A B P Q t' f arg x t)).
Proof. exact (MK_COMB (@lem8332039 A B P Q v' f arg x t) (@lem8332040 A B P Q t' f arg x t)). Qed.
Lemma lem8332042 {A B P Q : Type'} (v' : B) (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : ((term968 A B P Q f arg x t v') = (term969 A B P Q t f arg x t')) = ((term964 A B P Q v' f arg x t) = (term970 A B P Q t' f arg x t)).
Proof. exact (TRANS (@lem8332036 A B P Q v' t' f arg x t) (@lem8332041 A B P Q v' t' f arg x t)). Qed.
Lemma lem8332043 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (term964 A B P Q v' f arg x t) = (term970 A B P Q t' f arg x t).
Proof. exact (EQ_MP (@lem8332042 A B P Q v' t' f arg x t) (@lem8332033 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332044 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term970 A B P Q t' f arg x t.
Proof. exact (EQ_MP (@lem8332043 A B D P Q t pat e q f arg x t' v' v h1) (@lem8331834 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332305 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : (pat t) = (e x).
Proof. exact (proj1 (@lem8330493 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332306 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term973 D P Q pat t e x.
Proof. exact (fun h0 : term952 D P Q pat t e x => @lem8332305 A B D P Q t v f arg pat e q x h1). Qed.
Lemma lem8332308 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332309 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term973 D P Q pat t e x) = ((pat t) = (e x)).
Proof. exact (@lem8332308 ((pat t) = (e x))). Qed.
Lemma lem8332310 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : (pat t) = (e x).
Proof. exact (EQ_MP (@lem8332309 D P Q pat t e x) (@lem8332306 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332312 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : q x t.
Proof. exact (proj1 (@lem8330494 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332313 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term975 P Q q x t.
Proof. exact (fun h0 : term955 P Q q x t => @lem8332312 A B D P Q t v f arg pat e q x h1). Qed.
Lemma lem8332315 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332316 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term975 P Q q x t) = (q x t).
Proof. exact (@lem8332315 (q x t)). Qed.
Lemma lem8332317 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : q x t.
Proof. exact (EQ_MP (@lem8332316 P Q q x t) (@lem8332313 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332319 (a : Prop) (b : Prop) : (term976 a b) = (term977 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8332320 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (_112657 : Q) : (term408 D P Q pat e q x _112657) = (term407 D P Q pat e q x _112657).
Proof. exact (@lem8332319 ((pat _112657) = (e x)) (q x _112657)). Qed.
Lemma lem8332322 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8332323 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (_112657 : Q) : (term407 D P Q pat e q x _112657) = (term978 D P Q pat e q x _112657).
Proof. exact (@lem8332322 (term272 D P Q pat e q x _112657)). Qed.
Lemma lem8332324 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (_112657 : Q) : (term408 D P Q pat e q x _112657) = (term978 D P Q pat e q x _112657).
Proof. exact (TRANS (@lem8332320 D P Q pat e q x _112657) (@lem8332323 D P Q pat e q x _112657)). Qed.
Lemma lem8332326 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term272 D P Q pat e q x t.
Proof. exact (conj (@lem8332310 A B D P Q t v f arg pat e q x h1) (@lem8332317 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332328 {A B D P Q : Type'} (_112657 : Q) (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term978 D P Q pat e q x _112657.
Proof. exact (EQ_MP (@lem8332324 D P Q pat e q x _112657) (@lem8331652 A B D P Q _112657 t v f arg pat e q x h1)). Qed.
Lemma lem8332329 {A B D P Q : Type'} (_112657 : Q) (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term978 D P Q pat e q x _112657.
Proof. exact (@lem8332328 A B D P Q _112657 t v f arg pat e q x h1). Qed.
Lemma lem8332330 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term978 D P Q pat e q x t.
Proof. exact (@lem8332329 A B D P Q t t v f arg pat e q x h1). Qed.
Lemma lem8332333 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : False.
Proof. exact (@lem8332330 A B D P Q t v f arg pat e q x h1 (@lem8332326 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8332334 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : term979.
Proof. exact (fun h0 : ~ False => @lem8332333 A B D P Q t v f arg pat e q x h1). Qed.
Lemma lem8332336 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332337 : term979 = False.
Proof. exact (@lem8332336 False). Qed.
Lemma lem8332543 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : (pat t'') = (e x).
Proof. exact (proj1 (@lem8330498 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8332544 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term973 D P Q pat t'' e x.
Proof. exact (fun h0 : term952 D P Q pat t'' e x => @lem8332543 A B D P Q t f arg t' v' v pat e q x t'' h1). Qed.
Lemma lem8332546 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332547 {D P Q : Type'} (pat : Q -> D) (t'' : Q) (e : P -> D) (x : P) : (term973 D P Q pat t'' e x) = ((pat t'') = (e x)).
Proof. exact (@lem8332546 ((pat t'') = (e x))). Qed.
Lemma lem8332548 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : (pat t'') = (e x).
Proof. exact (EQ_MP (@lem8332547 D P Q pat t'' e x) (@lem8332544 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8332550 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : q x t''.
Proof. exact (proj2 (@lem8330498 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8332551 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term975 P Q q x t''.
Proof. exact (fun h0 : term955 P Q q x t'' => @lem8332550 A B D P Q t f arg t' v' v pat e q x t'' h1). Qed.
Lemma lem8332553 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332554 {P Q : Type'} (q : type1413 P Q) (x : P) (t'' : Q) : (term975 P Q q x t'') = (q x t'').
Proof. exact (@lem8332553 (q x t'')). Qed.
Lemma lem8332555 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : q x t''.
Proof. exact (EQ_MP (@lem8332554 P Q q x t'') (@lem8332551 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8332557 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem8332558 {B : Type'} (x : B) : x = x.
Proof. exact (@lem8332557 B x). Qed.
Lemma lem8332559 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t'' : Q) : (term908 A B P Q f arg x t'') = (term908 A B P Q f arg x t'').
Proof. exact (@lem8332558 B (term908 A B P Q f arg x t'')). Qed.
Lemma lem8332560 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t'' : Q) : term980 A B P Q f arg x t''.
Proof. exact (fun h0 : term981 A B P Q f arg x t'' => @lem8332559 A B P Q f arg x t''). Qed.
Lemma lem8332562 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332563 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t'' : Q) : (term980 A B P Q f arg x t'') = ((term908 A B P Q f arg x t'') = (term908 A B P Q f arg x t'')).
Proof. exact (@lem8332562 ((term908 A B P Q f arg x t'') = (term908 A B P Q f arg x t''))). Qed.
Lemma lem8332564 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (x : P) (t'' : Q) : (term908 A B P Q f arg x t'') = (term908 A B P Q f arg x t'').
Proof. exact (EQ_MP (@lem8332563 A B P Q f arg x t'') (@lem8332560 A B P Q f arg x t'')). Qed.
Lemma lem8332566 (a : Prop) (b : Prop) : (term976 a b) = (term977 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8332567 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term920 A B P Q q f arg x _112673 _112672) = (term982 A B P Q q f arg x _112673 _112672).
Proof. exact (@lem8332566 (q x _112673) ((term908 A B P Q f arg x _112673) = _112672)). Qed.
Lemma lem8332568 {D P Q : Type'} (pat : Q -> D) (_112673 : Q) (e : P -> D) (x : P) : (term413 D P Q pat _112673 e x) = (term413 D P Q pat _112673 e x).
Proof. exact (eq_refl (term413 D P Q pat _112673 e x)). Qed.
Lemma lem8332569 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term921 A B D P Q pat e q f arg x _112673 _112672) = (term983 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (MK_COMB (@lem8332568 D P Q pat _112673 e x) (@lem8332567 A B P Q q f arg x _112673 _112672)). Qed.
Lemma lem8332571 (a : Prop) (b : Prop) : (term976 a b) = (term977 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8332572 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term983 A B D P Q pat e q f arg x _112673 _112672) = (term984 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (@lem8332571 ((pat _112673) = (e x)) (term912 A B P Q q f arg x _112673 _112672)). Qed.
Lemma lem8332573 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term921 A B D P Q pat e q f arg x _112673 _112672) = (term984 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (TRANS (@lem8332569 A B D P Q pat e q f arg x _112673 _112672) (@lem8332572 A B D P Q pat e q f arg x _112673 _112672)). Qed.
Lemma lem8332575 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8332576 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term984 A B D P Q pat e q f arg x _112673 _112672) = (term985 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (@lem8332575 (term914 A B D P Q pat e q f arg x _112673 _112672)). Qed.
Lemma lem8332577 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (_112673 : Q) (_112672 : B) : (term921 A B D P Q pat e q f arg x _112673 _112672) = (term985 A B D P Q pat e q f arg x _112673 _112672).
Proof. exact (TRANS (@lem8332573 A B D P Q pat e q f arg x _112673 _112672) (@lem8332576 A B D P Q pat e q f arg x _112673 _112672)). Qed.
Lemma lem8332579 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term986 A B P Q q f arg x t''.
Proof. exact (conj (@lem8332555 A B D P Q t f arg t' v' v pat e q x t'' h1) (@lem8332564 A B P Q f arg x t'')). Qed.
Lemma lem8332580 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term987 A B D P Q pat e q f arg x t''.
Proof. exact (conj (@lem8332548 A B D P Q t f arg t' v' v pat e q x t'' h1) (@lem8332579 A B D P Q t f arg t' v' v pat e q x t'' h1)). Qed.
Lemma lem8332582 {A B D P Q : Type'} (_112673 : Q) (_112672 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term985 A B D P Q pat e q f arg x _112673 _112672.
Proof. exact (EQ_MP (@lem8332577 A B D P Q pat e q f arg x _112673 _112672) (@lem8331461 A B D P Q _112673 _112672 pat e q f arg x h1)). Qed.
Lemma lem8332583 {A B D P Q : Type'} (_112673 : Q) (_112672 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term985 A B D P Q pat e q f arg x _112673 _112672.
Proof. exact (@lem8332582 A B D P Q _112673 _112672 pat e q f arg x h1). Qed.
Lemma lem8332584 {A B D P Q : Type'} (t'' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (h1 : term925 A B D P Q pat e q f arg x) : term988 A B D P Q pat e q f arg x t''.
Proof. exact (@lem8332583 A B D P Q t'' (term908 A B P Q f arg x t'') pat e q f arg x h1). Qed.
Lemma lem8332587 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term925 A B D P Q pat e q f arg x) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') : False.
Proof. exact (@lem8332584 A B D P Q t'' pat e q f arg x h1 (@lem8332580 A B D P Q t f arg t' v' v pat e q x t'' h2)). Qed.
Lemma lem8332588 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term925 A B D P Q pat e q f arg x) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') : term979.
Proof. exact (fun h0 : ~ False => @lem8332587 A B D P Q t f arg t' v' v pat e q x t'' h1 h2). Qed.
Lemma lem8332590 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332591 : term979 = False.
Proof. exact (@lem8332590 False). Qed.
Lemma lem8332592 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term925 A B D P Q pat e q f arg x) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') : False.
Proof. exact (EQ_MP (@lem8332591) (@lem8332588 A B D P Q t f arg t' v' v pat e q x t'' h1 h2)). Qed.
Lemma lem8332683 {A B : Type'} : (@I (A -> B)) = (@I (A -> B)).
Proof. exact (eq_refl (@I (A -> B))). Qed.
Lemma lem8332684 {A B : Type'} (_112872 : A -> B) (_112874 : A -> B) (h1 : _112872 = _112874) : _112872 = _112874.
Proof. exact (h1). Qed.
Lemma lem8332685 {A : Type'} (_112873 : A) (_112875 : A) (h1 : _112873 = _112875) : _112873 = _112875.
Proof. exact (h1). Qed.
Lemma lem8332686 {A B : Type'} (_112872 : A -> B) (_112874 : A -> B) (h1 : _112872 = _112874) : (@I (A -> B) _112872) = (@I (A -> B) _112874).
Proof. exact (MK_COMB (@lem8332683 A B) (@lem8332684 A B _112872 _112874 h1)). Qed.
Lemma lem8332687 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) (h1 : _112873 = _112875) (h2 : _112872 = _112874) : (@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875).
Proof. exact (MK_COMB (@lem8332686 A B _112872 _112874 h2) (@lem8332685 A _112873 _112875 h1)). Qed.
Lemma lem8332688 {A B : Type'} (_112872 : A -> B) (_112874 : A -> B) (_112873 : A) (_112875 : A) (h1 : _112873 = _112875) : term989 A B _112872 _112873 _112874 _112875.
Proof. exact (fun h0 : _112872 = _112874 => @lem8332687 A B _112873 _112875 _112872 _112874 h1 h0). Qed.
Lemma lem8332690 (a : Prop) (b : Prop) : (a -> b) = (term990 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8332691 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : (term989 A B _112872 _112873 _112874 _112875) = (term991 A B _112872 _112873 _112874 _112875).
Proof. exact (@lem8332690 (_112872 = _112874) ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875))). Qed.
Lemma lem8332692 {A B : Type'} (_112872 : A -> B) (_112874 : A -> B) (_112873 : A) (_112875 : A) (h1 : _112873 = _112875) : term991 A B _112872 _112873 _112874 _112875.
Proof. exact (EQ_MP (@lem8332691 A B _112872 _112873 _112874 _112875) (@lem8332688 A B _112872 _112874 _112873 _112875 h1)). Qed.
Lemma lem8332693 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : term992 A B _112872 _112873 _112874 _112875.
Proof. exact (fun h0 : _112873 = _112875 => @lem8332692 A B _112872 _112874 _112873 _112875 h0). Qed.
Lemma lem8332695 (a : Prop) (b : Prop) : (a -> b) = (term990 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8332696 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : (term992 A B _112872 _112873 _112874 _112875) = (term993 A B _112872 _112873 _112874 _112875).
Proof. exact (@lem8332695 (_112873 = _112875) (term991 A B _112872 _112873 _112874 _112875)). Qed.
Lemma lem8332697 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : term993 A B _112872 _112873 _112874 _112875.
Proof. exact (EQ_MP (@lem8332696 A B _112872 _112873 _112874 _112875) (@lem8332693 A B _112872 _112873 _112874 _112875)). Qed.
Lemma lem8332797 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) (h1 : p f x) : term893 A B P p f x.
Proof. exact (EQ_MP (@lem8330153 A B P p f x) (@lem8328521 A B P p f x h1)). Qed.
Lemma lem8332798 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) (h1 : p f x) : term994 A B P p f x.
Proof. exact (fun h0 : term895 A B P p f x => @lem8332797 A B P p f x h1). Qed.
Lemma lem8332800 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332801 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) : (term994 A B P p f x) = (term893 A B P p f x).
Proof. exact (@lem8332800 (term893 A B P p f x)). Qed.
Lemma lem8332802 {A B P : Type'} (p : type560 A B P) (f : A -> B) (x : P) (h1 : p f x) : term893 A B P p f x.
Proof. exact (EQ_MP (@lem8332801 A B P p f x) (@lem8332798 A B P p f x h1)). Qed.
Lemma lem8332804 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (pat t') = (e x).
Proof. exact (proj1 (@lem8330507 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332805 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term973 D P Q pat t' e x.
Proof. exact (fun h0 : term952 D P Q pat t' e x => @lem8332804 A B D P Q t pat e q f arg x t' v' v h1). Qed.
Lemma lem8332807 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332808 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (x : P) : (term973 D P Q pat t' e x) = ((pat t') = (e x)).
Proof. exact (@lem8332807 ((pat t') = (e x))). Qed.
Lemma lem8332809 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (pat t') = (e x).
Proof. exact (EQ_MP (@lem8332808 D P Q pat t' e x) (@lem8332805 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332811 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : q x t'.
Proof. exact (proj1 (@lem8330508 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332812 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term975 P Q q x t'.
Proof. exact (fun h0 : term955 P Q q x t' => @lem8332811 A B D P Q t pat e q f arg x t' v' v h1). Qed.
Lemma lem8332814 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332815 {P Q : Type'} (q : type1413 P Q) (x : P) (t' : Q) : (term975 P Q q x t') = (q x t').
Proof. exact (@lem8332814 (q x t')). Qed.
Lemma lem8332816 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : q x t'.
Proof. exact (EQ_MP (@lem8332815 P Q q x t') (@lem8332812 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332818 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (pat t) = (e x).
Proof. exact (proj1 (@lem8330505 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332819 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term973 D P Q pat t e x.
Proof. exact (fun h0 : term952 D P Q pat t e x => @lem8332818 A B D P Q t pat e q f arg x t' v' v h1). Qed.
Lemma lem8332821 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332822 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (x : P) : (term973 D P Q pat t e x) = ((pat t) = (e x)).
Proof. exact (@lem8332821 ((pat t) = (e x))). Qed.
Lemma lem8332823 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : (pat t) = (e x).
Proof. exact (EQ_MP (@lem8332822 D P Q pat t e x) (@lem8332819 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332825 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : q x t.
Proof. exact (proj1 (@lem8330512 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332826 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term975 P Q q x t.
Proof. exact (fun h0 : term955 P Q q x t => @lem8332825 A B D P Q t pat e q f arg x t' v' v h1). Qed.
Lemma lem8332828 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8332829 {P Q : Type'} (q : type1413 P Q) (x : P) (t : Q) : (term975 P Q q x t) = (q x t).
Proof. exact (@lem8332828 (q x t)). Qed.
Lemma lem8332830 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : q x t.
Proof. exact (EQ_MP (@lem8332829 P Q q x t) (@lem8332826 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8332836 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332837 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term995 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8332836 (term952 D P Q pat _112678 e _112677) (term895 A B P p _112676 _112677) (term958 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8332853 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332854 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term996 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term997 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8332853 (term955 P Q q _112677 _112678) (term895 A B P p _112676 _112677) (term957 A D P Q pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8332868 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332869 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term998 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term999 A B D P Q pat e p _112676 q _112678 arg _112677 _112679).
Proof. exact (@lem8332868 (term952 D P Q pat _112679 e _112677) (term895 A B P p _112676 _112677) (term1000 A P Q q _112678 arg _112677 _112679)). Qed.
Lemma lem8332885 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332886 {A B P Q : Type'} (q : type1413 P Q) (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1001 A B P Q p _112676 q _112678 arg _112677 _112679) = (term1002 A B P Q q p _112676 _112678 arg _112677 _112679).
Proof. exact (@lem8332885 (term955 P Q q _112677 _112679) (term895 A B P p _112676 _112677) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8332900 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8332901 {A B P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1003 A B P Q p _112676 _112678 arg _112677 _112679) = (term1004 A B P Q _112678 arg _112679 p _112676 _112677).
Proof. exact (@lem8332900 ((arg _112677 _112678) = (arg _112677 _112679)) (term895 A B P p _112676 _112677)). Qed.
Lemma lem8332909 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term409 P Q q _112677 _112679) = (term409 P Q q _112677 _112679).
Proof. exact (eq_refl (term409 P Q q _112677 _112679)). Qed.
Lemma lem8332910 {A B P Q : Type'} (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1002 A B P Q q p _112676 _112678 arg _112677 _112679) = (term1005 A B P Q q _112678 arg _112679 p _112676 _112677).
Proof. exact (MK_COMB (@lem8332909 P Q q _112677 _112679) (@lem8332901 A B P Q _112678 arg _112679 p _112676 _112677)). Qed.
Lemma lem8332914 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332915 {A B P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1005 A B P Q q _112678 arg _112679 p _112676 _112677) = (term1006 A B P Q _112678 arg q _112679 p _112676 _112677).
Proof. exact (@lem8332914 ((arg _112677 _112678) = (arg _112677 _112679)) (term955 P Q q _112677 _112679) (term895 A B P p _112676 _112677)). Qed.
Lemma lem8332933 {A B P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1002 A B P Q q p _112676 _112678 arg _112677 _112679) = (term1006 A B P Q _112678 arg q _112679 p _112676 _112677).
Proof. exact (TRANS (@lem8332910 A B P Q q _112678 arg _112679 p _112676 _112677) (@lem8332915 A B P Q _112678 arg q _112679 p _112676 _112677)). Qed.
Lemma lem8332934 {A B P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1001 A B P Q p _112676 q _112678 arg _112677 _112679) = (term1006 A B P Q _112678 arg q _112679 p _112676 _112677).
Proof. exact (TRANS (@lem8332886 A B P Q q p _112676 _112678 arg _112677 _112679) (@lem8332933 A B P Q _112678 arg q _112679 p _112676 _112677)). Qed.
Lemma lem8332935 {D P Q : Type'} (pat : Q -> D) (_112679 : Q) (e : P -> D) (_112677 : P) : (term413 D P Q pat _112679 e _112677) = (term413 D P Q pat _112679 e _112677).
Proof. exact (eq_refl (term413 D P Q pat _112679 e _112677)). Qed.
Lemma lem8332936 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term999 A B D P Q pat e p _112676 q _112678 arg _112677 _112679) = (term1007 A B D P Q pat e _112678 arg q _112679 p _112676 _112677).
Proof. exact (MK_COMB (@lem8332935 D P Q pat _112679 e _112677) (@lem8332934 A B P Q _112678 arg q _112679 p _112676 _112677)). Qed.
Lemma lem8332940 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332941 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1007 A B D P Q pat e _112678 arg q _112679 p _112676 _112677) = (term1008 A B D P Q _112678 arg pat e q _112679 p _112676 _112677).
Proof. exact (@lem8332940 ((arg _112677 _112678) = (arg _112677 _112679)) (term952 D P Q pat _112679 e _112677) (term1009 A B P Q q _112679 p _112676 _112677)). Qed.
Lemma lem8332957 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332958 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1010 A B D P Q pat e q _112679 p _112676 _112677) = (term1011 A B D P Q q pat _112679 e p _112676 _112677).
Proof. exact (@lem8332957 (term955 P Q q _112677 _112679) (term952 D P Q pat _112679 e _112677) (term895 A B P p _112676 _112677)). Qed.
Lemma lem8332976 {A P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1012 A P Q _112678 arg _112677 _112679) = (term1012 A P Q _112678 arg _112677 _112679).
Proof. exact (eq_refl (term1012 A P Q _112678 arg _112677 _112679)). Qed.
Lemma lem8332977 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1008 A B D P Q _112678 arg pat e q _112679 p _112676 _112677) = (term1013 A B D P Q _112678 arg q pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8332976 A P Q _112678 arg _112677 _112679) (@lem8332958 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8332988 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1007 A B D P Q pat e _112678 arg q _112679 p _112676 _112677) = (term1013 A B D P Q _112678 arg q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332941 A B D P Q _112678 arg pat e q _112679 p _112676 _112677) (@lem8332977 A B D P Q _112678 arg q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8332989 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term999 A B D P Q pat e p _112676 q _112678 arg _112677 _112679) = (term1013 A B D P Q _112678 arg q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332936 A B D P Q pat e _112678 arg q _112679 p _112676 _112677) (@lem8332988 A B D P Q _112678 arg q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8332990 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term998 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1013 A B D P Q _112678 arg q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332869 A B D P Q pat e p _112676 q _112678 arg _112677 _112679) (@lem8332989 A B D P Q _112678 arg q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8332991 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term409 P Q q _112677 _112678) = (term409 P Q q _112677 _112678).
Proof. exact (eq_refl (term409 P Q q _112677 _112678)). Qed.
Lemma lem8332992 {A B D P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term997 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1014 A B D P Q _112678 arg q pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8332991 P Q q _112677 _112678) (@lem8332990 A B D P Q _112678 arg q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8332996 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8332997 {A B D P Q : Type'} (arg : type1475 A P Q) (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1014 A B D P Q _112678 arg q pat _112679 e p _112676 _112677) = (term1015 A B D P Q arg _112678 q pat _112679 e p _112676 _112677).
Proof. exact (@lem8332996 ((arg _112677 _112678) = (arg _112677 _112679)) (term955 P Q q _112677 _112678) (term1011 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333037 {A B D P Q : Type'} (arg : type1475 A P Q) (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term997 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1015 A B D P Q arg _112678 q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332992 A B D P Q _112678 arg q pat _112679 e p _112676 _112677) (@lem8332997 A B D P Q arg _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333038 {A B D P Q : Type'} (arg : type1475 A P Q) (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term996 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1015 A B D P Q arg _112678 q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332854 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8333037 A B D P Q arg _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333039 {D P Q : Type'} (pat : Q -> D) (_112678 : Q) (e : P -> D) (_112677 : P) : (term413 D P Q pat _112678 e _112677) = (term413 D P Q pat _112678 e _112677).
Proof. exact (eq_refl (term413 D P Q pat _112678 e _112677)). Qed.
Lemma lem8333040 {A B D P Q : Type'} (arg : type1475 A P Q) (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term995 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1016 A B D P Q arg _112678 q pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333039 D P Q pat _112678 e _112677) (@lem8333038 A B D P Q arg _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333044 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333045 {A B D P Q : Type'} (arg : type1475 A P Q) (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1016 A B D P Q arg _112678 q pat _112679 e p _112676 _112677) = (term1017 A B D P Q arg _112678 q pat _112679 e p _112676 _112677).
Proof. exact (@lem8333044 ((arg _112677 _112678) = (arg _112677 _112679)) (term952 D P Q pat _112678 e _112677) (term1018 A B D P Q _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333061 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333062 {A B D P Q : Type'} (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1019 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1020 A B D P Q _112678 q pat _112679 e p _112676 _112677).
Proof. exact (@lem8333061 (term955 P Q q _112677 _112678) (term952 D P Q pat _112678 e _112677) (term1011 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333076 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333077 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1021 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1022 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (@lem8333076 (term955 P Q q _112677 _112679) (term952 D P Q pat _112678 e _112677) (term1023 A B D P Q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333107 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term409 P Q q _112677 _112678) = (term409 P Q q _112677 _112678).
Proof. exact (eq_refl (term409 P Q q _112677 _112678)). Qed.
Lemma lem8333108 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1020 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333107 P Q q _112677 _112678) (@lem8333077 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333119 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1019 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333062 A B D P Q _112678 q pat _112679 e p _112676 _112677) (@lem8333108 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333120 {A P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1012 A P Q _112678 arg _112677 _112679) = (term1012 A P Q _112678 arg _112677 _112679).
Proof. exact (eq_refl (term1012 A P Q _112678 arg _112677 _112679)). Qed.
Lemma lem8333121 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1017 A B D P Q arg _112678 q pat _112679 e p _112676 _112677) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333120 A P Q _112678 arg _112677 _112679) (@lem8333119 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333132 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1016 A B D P Q arg _112678 q pat _112679 e p _112676 _112677) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333045 A B D P Q arg _112678 q pat _112679 e p _112676 _112677) (@lem8333121 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333133 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term995 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333040 A B D P Q arg _112678 q pat _112679 e p _112676 _112677) (@lem8333132 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333134 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8332837 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8333133 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333135 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8333136 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1026 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1027 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333135) (@lem8333134 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333152 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333153 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term897 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1028 A B D P Q p _112676 _112678 pat e q _112677 _112679).
Proof. exact (@lem8333152 (term952 D P Q pat _112678 e _112677) (term895 A B P p _112676 _112677) (term411 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333169 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333170 {A B D P Q : Type'} (_112678 : Q) (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1029 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1030 A B D P Q _112678 p _112676 pat e q _112677 _112679).
Proof. exact (@lem8333169 (term955 P Q q _112677 _112678) (term895 A B P p _112676 _112677) (term408 D P Q pat e q _112677 _112679)). Qed.
Lemma lem8333184 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333185 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1031 A B D P Q p _112676 pat e q _112677 _112679) = (term1032 A B D P Q pat e p _112676 q _112677 _112679).
Proof. exact (@lem8333184 (term952 D P Q pat _112679 e _112677) (term895 A B P p _112676 _112677) (term955 P Q q _112677 _112679)). Qed.
Lemma lem8333201 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8333202 {A B P Q : Type'} (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1033 A B P Q p _112676 q _112677 _112679) = (term1009 A B P Q q _112679 p _112676 _112677).
Proof. exact (@lem8333201 (term955 P Q q _112677 _112679) (term895 A B P p _112676 _112677)). Qed.
Lemma lem8333208 {D P Q : Type'} (pat : Q -> D) (_112679 : Q) (e : P -> D) (_112677 : P) : (term413 D P Q pat _112679 e _112677) = (term413 D P Q pat _112679 e _112677).
Proof. exact (eq_refl (term413 D P Q pat _112679 e _112677)). Qed.
Lemma lem8333209 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112679 : Q) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1032 A B D P Q pat e p _112676 q _112677 _112679) = (term1010 A B D P Q pat e q _112679 p _112676 _112677).
Proof. exact (MK_COMB (@lem8333208 D P Q pat _112679 e _112677) (@lem8333202 A B P Q q _112679 p _112676 _112677)). Qed.
Lemma lem8333213 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333214 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1010 A B D P Q pat e q _112679 p _112676 _112677) = (term1011 A B D P Q q pat _112679 e p _112676 _112677).
Proof. exact (@lem8333213 (term955 P Q q _112677 _112679) (term952 D P Q pat _112679 e _112677) (term895 A B P p _112676 _112677)). Qed.
Lemma lem8333232 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1032 A B D P Q pat e p _112676 q _112677 _112679) = (term1011 A B D P Q q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333209 A B D P Q pat e q _112679 p _112676 _112677) (@lem8333214 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333233 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1031 A B D P Q p _112676 pat e q _112677 _112679) = (term1011 A B D P Q q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333185 A B D P Q pat e p _112676 q _112677 _112679) (@lem8333232 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333234 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term409 P Q q _112677 _112678) = (term409 P Q q _112677 _112678).
Proof. exact (eq_refl (term409 P Q q _112677 _112678)). Qed.
Lemma lem8333235 {A B D P Q : Type'} (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1030 A B D P Q _112678 p _112676 pat e q _112677 _112679) = (term1018 A B D P Q _112678 q pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333234 P Q q _112677 _112678) (@lem8333233 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333246 {A B D P Q : Type'} (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1029 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1018 A B D P Q _112678 q pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333170 A B D P Q _112678 p _112676 pat e q _112677 _112679) (@lem8333235 A B D P Q _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333247 {D P Q : Type'} (pat : Q -> D) (_112678 : Q) (e : P -> D) (_112677 : P) : (term413 D P Q pat _112678 e _112677) = (term413 D P Q pat _112678 e _112677).
Proof. exact (eq_refl (term413 D P Q pat _112678 e _112677)). Qed.
Lemma lem8333248 {A B D P Q : Type'} (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1028 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1019 A B D P Q _112678 q pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333247 D P Q pat _112678 e _112677) (@lem8333246 A B D P Q _112678 q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333252 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333253 {A B D P Q : Type'} (_112678 : Q) (q : type1413 P Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1019 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1020 A B D P Q _112678 q pat _112679 e p _112676 _112677).
Proof. exact (@lem8333252 (term955 P Q q _112677 _112678) (term952 D P Q pat _112678 e _112677) (term1011 A B D P Q q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333267 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333268 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1021 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1022 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (@lem8333267 (term955 P Q q _112677 _112679) (term952 D P Q pat _112678 e _112677) (term1023 A B D P Q pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333298 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term409 P Q q _112677 _112678) = (term409 P Q q _112677 _112678).
Proof. exact (eq_refl (term409 P Q q _112677 _112678)). Qed.
Lemma lem8333299 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1020 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333298 P Q q _112677 _112678) (@lem8333268 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333310 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1019 A B D P Q _112678 q pat _112679 e p _112676 _112677) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333253 A B D P Q _112678 q pat _112679 e p _112676 _112677) (@lem8333299 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333311 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1028 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333248 A B D P Q _112678 q pat _112679 e p _112676 _112677) (@lem8333310 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333312 {A B D P Q : Type'} (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term897 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1024 A B D P Q q _112678 pat _112679 e p _112676 _112677).
Proof. exact (TRANS (@lem8333153 A B D P Q p _112676 _112678 pat e q _112677 _112679) (@lem8333311 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333313 {A P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1012 A P Q _112678 arg _112677 _112679) = (term1012 A P Q _112678 arg _112677 _112679).
Proof. exact (eq_refl (term1012 A P Q _112678 arg _112677 _112679)). Qed.
Lemma lem8333314 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677).
Proof. exact (MK_COMB (@lem8333313 A P Q _112678 arg _112677 _112679) (@lem8333312 A B D P Q q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333325 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : ((term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679)) = ((term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)).
Proof. exact (MK_COMB (@lem8333136 A B D P Q arg q _112678 pat _112679 e p _112676 _112677) (@lem8333314 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333327 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8333328 (x : Prop) : (x = x) = True.
Proof. exact (@lem8333327 Prop x). Qed.
Lemma lem8333329 {A B D P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112678 : Q) (pat : Q -> D) (_112679 : Q) (e : P -> D) (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : ((term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677) = (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)) = True.
Proof. exact (@lem8333328 (term1025 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333330 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : ((term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679)) = True.
Proof. exact (TRANS (@lem8333325 A B D P Q arg q _112678 pat _112679 e p _112676 _112677) (@lem8333329 A B D P Q arg q _112678 pat _112679 e p _112676 _112677)). Qed.
Lemma lem8333331 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : True = ((term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679)).
Proof. exact (SYM (@lem8333330 A B D P Q arg p _112676 _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333332 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term960 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679).
Proof. exact (EQ_MP (@lem8333331 A B D P Q arg p _112676 _112678 pat e q _112677 _112679) (@lem0)). Qed.
Lemma lem8333333 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679.
Proof. exact (EQ_MP (@lem8333332 A B D P Q arg p _112676 _112678 pat e q _112677 _112679) (@lem8331961 A B D P Q _112676 _112678 _112677 _112679 p pat e q arg h1)). Qed.
Lemma lem8333335 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8333336 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679) = (term1036 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (@lem8333335 (term897 A B D P Q p _112676 _112678 pat e q _112677 _112679) ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8333338 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8333339 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1039 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1040 A B D P Q p _112676 _112678 pat e q _112677 _112679).
Proof. exact (@lem8333338 (term895 A B P p _112676 _112677) (term415 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333341 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333342 {A B P : Type'} (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1041 A B P p _112676 _112677) = (term893 A B P p _112676 _112677).
Proof. exact (@lem8333341 (term893 A B P p _112676 _112677)). Qed.
Lemma lem8333343 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333344 {A B P : Type'} (p : type560 A B P) (_112676 : A -> B) (_112677 : P) : (term1042 A B P p _112676 _112677) = (term1043 A B P p _112676 _112677).
Proof. exact (MK_COMB (@lem8333343) (@lem8333342 A B P p _112676 _112677)). Qed.
Lemma lem8333346 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8333347 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1044 D P Q _112678 pat e q _112677 _112679) = (term1045 D P Q _112678 pat e q _112677 _112679).
Proof. exact (@lem8333346 (term952 D P Q pat _112678 e _112677) (term411 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333349 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333350 {D P Q : Type'} (pat : Q -> D) (_112678 : Q) (e : P -> D) (_112677 : P) : (term1046 D P Q pat _112678 e _112677) = ((pat _112678) = (e _112677)).
Proof. exact (@lem8333349 ((pat _112678) = (e _112677))). Qed.
Lemma lem8333351 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333352 {D P Q : Type'} (pat : Q -> D) (_112678 : Q) (e : P -> D) (_112677 : P) : (term1047 D P Q pat _112678 e _112677) = (term913 D P Q pat _112678 e _112677).
Proof. exact (MK_COMB (@lem8333351) (@lem8333350 D P Q pat _112678 e _112677)). Qed.
Lemma lem8333354 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8333355 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1048 D P Q _112678 pat e q _112677 _112679) = (term1049 D P Q _112678 pat e q _112677 _112679).
Proof. exact (@lem8333354 (term955 P Q q _112677 _112678) (term408 D P Q pat e q _112677 _112679)). Qed.
Lemma lem8333357 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333358 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term1050 P Q q _112677 _112678) = (q _112677 _112678).
Proof. exact (@lem8333357 (q _112677 _112678)). Qed.
Lemma lem8333359 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333360 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112678 : Q) : (term1051 P Q q _112677 _112678) = (term911 P Q q _112677 _112678).
Proof. exact (MK_COMB (@lem8333359) (@lem8333358 P Q q _112677 _112678)). Qed.
Lemma lem8333362 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8333363 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1052 D P Q pat e q _112677 _112679) = (term1053 D P Q pat e q _112677 _112679).
Proof. exact (@lem8333362 (term952 D P Q pat _112679 e _112677) (term955 P Q q _112677 _112679)). Qed.
Lemma lem8333365 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333366 {D P Q : Type'} (pat : Q -> D) (_112679 : Q) (e : P -> D) (_112677 : P) : (term1046 D P Q pat _112679 e _112677) = ((pat _112679) = (e _112677)).
Proof. exact (@lem8333365 ((pat _112679) = (e _112677))). Qed.
Lemma lem8333367 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333368 {D P Q : Type'} (pat : Q -> D) (_112679 : Q) (e : P -> D) (_112677 : P) : (term1047 D P Q pat _112679 e _112677) = (term913 D P Q pat _112679 e _112677).
Proof. exact (MK_COMB (@lem8333367) (@lem8333366 D P Q pat _112679 e _112677)). Qed.
Lemma lem8333370 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333371 {P Q : Type'} (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1050 P Q q _112677 _112679) = (q _112677 _112679).
Proof. exact (@lem8333370 (q _112677 _112679)). Qed.
Lemma lem8333372 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1053 D P Q pat e q _112677 _112679) = (term272 D P Q pat e q _112677 _112679).
Proof. exact (MK_COMB (@lem8333368 D P Q pat _112679 e _112677) (@lem8333371 P Q q _112677 _112679)). Qed.
Lemma lem8333373 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1052 D P Q pat e q _112677 _112679) = (term272 D P Q pat e q _112677 _112679).
Proof. exact (TRANS (@lem8333363 D P Q pat e q _112677 _112679) (@lem8333372 D P Q pat e q _112677 _112679)). Qed.
Lemma lem8333374 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1049 D P Q _112678 pat e q _112677 _112679) = (term417 D P Q _112678 pat e q _112677 _112679).
Proof. exact (MK_COMB (@lem8333360 P Q q _112677 _112678) (@lem8333373 D P Q pat e q _112677 _112679)). Qed.
Lemma lem8333375 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1048 D P Q _112678 pat e q _112677 _112679) = (term417 D P Q _112678 pat e q _112677 _112679).
Proof. exact (TRANS (@lem8333355 D P Q _112678 pat e q _112677 _112679) (@lem8333374 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333376 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1045 D P Q _112678 pat e q _112677 _112679) = (term422 D P Q _112678 pat e q _112677 _112679).
Proof. exact (MK_COMB (@lem8333352 D P Q pat _112678 e _112677) (@lem8333375 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333377 {D P Q : Type'} (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1044 D P Q _112678 pat e q _112677 _112679) = (term422 D P Q _112678 pat e q _112677 _112679).
Proof. exact (TRANS (@lem8333347 D P Q _112678 pat e q _112677 _112679) (@lem8333376 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333378 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1040 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1054 A B D P Q p _112676 _112678 pat e q _112677 _112679).
Proof. exact (MK_COMB (@lem8333344 A B P p _112676 _112677) (@lem8333377 D P Q _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333379 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1039 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1054 A B D P Q p _112676 _112678 pat e q _112677 _112679).
Proof. exact (TRANS (@lem8333339 A B D P Q p _112676 _112678 pat e q _112677 _112679) (@lem8333378 A B D P Q p _112676 _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333380 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8333381 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (_112678 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112677 : P) (_112679 : Q) : (term1055 A B D P Q p _112676 _112678 pat e q _112677 _112679) = (term1056 A B D P Q p _112676 _112678 pat e q _112677 _112679).
Proof. exact (MK_COMB (@lem8333380) (@lem8333379 A B D P Q p _112676 _112678 pat e q _112677 _112679)). Qed.
Lemma lem8333382 {A P Q : Type'} (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : ((arg _112677 _112678) = (arg _112677 _112679)) = ((arg _112677 _112678) = (arg _112677 _112679)).
Proof. exact (eq_refl ((arg _112677 _112678) = (arg _112677 _112679))). Qed.
Lemma lem8333383 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1036 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) = (term1057 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (MK_COMB (@lem8333381 A B D P Q p _112676 _112678 pat e q _112677 _112679) (@lem8333382 A P Q _112678 arg _112677 _112679)). Qed.
Lemma lem8333384 {A B D P Q : Type'} (p : type560 A B P) (_112676 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112678 : Q) (arg : type1475 A P Q) (_112677 : P) (_112679 : Q) : (term1034 A B D P Q arg p _112676 _112678 pat e q _112677 _112679) = (term1057 A B D P Q p _112676 pat e q _112678 arg _112677 _112679).
Proof. exact (TRANS (@lem8333336 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8333383 A B D P Q p _112676 pat e q _112678 arg _112677 _112679)). Qed.
Lemma lem8333386 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term272 D P Q pat e q x t.
Proof. exact (conj (@lem8332823 A B D P Q t pat e q f arg x t' v' v h1) (@lem8332830 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8333387 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term417 D P Q t' pat e q x t.
Proof. exact (conj (@lem8332816 A B D P Q t pat e q f arg x t' v' v h1) (@lem8333386 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8333388 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term422 D P Q t' pat e q x t.
Proof. exact (conj (@lem8332809 A B D P Q t pat e q f arg x t' v' v h1) (@lem8333387 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8333389 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) (h2 : p f x) : term1054 A B D P Q p f t' pat e q x t.
Proof. exact (conj (@lem8332802 A B P p f x h2) (@lem8333388 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8333391 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term1057 A B D P Q p _112676 pat e q _112678 arg _112677 _112679.
Proof. exact (EQ_MP (@lem8333384 A B D P Q p _112676 pat e q _112678 arg _112677 _112679) (@lem8333333 A B D P Q _112676 _112678 _112677 _112679 p pat e q arg h1)). Qed.
Lemma lem8333392 {A B D P Q : Type'} (_112676 : A -> B) (_112678 : Q) (_112677 : P) (_112679 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term1057 A B D P Q p _112676 pat e q _112678 arg _112677 _112679.
Proof. exact (@lem8333391 A B D P Q _112676 _112678 _112677 _112679 p pat e q arg h1). Qed.
Lemma lem8333393 {A B D P Q : Type'} (f : A -> B) (t' : Q) (x : P) (t : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term1057 A B D P Q p f pat e q t' arg x t.
Proof. exact (@lem8333392 A B D P Q f t' x t p pat e q arg h1). Qed.
Lemma lem8333396 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : (arg x t') = (arg x t).
Proof. exact (@lem8333393 A B D P Q f t' x t p pat e q arg h1 (@lem8333389 A B D P Q t pat e q arg t' v' v p f x h2 h3)). Qed.
Lemma lem8333397 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : term1058 A P Q t' arg x t.
Proof. exact (fun h0 : term1059 A P Q t' arg x t => @lem8333396 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3). Qed.
Lemma lem8333399 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8333400 {A P Q : Type'} (t' : Q) (arg : type1475 A P Q) (x : P) (t : Q) : (term1058 A P Q t' arg x t) = ((arg x t') = (arg x t)).
Proof. exact (@lem8333399 ((arg x t') = (arg x t))). Qed.
Lemma lem8333401 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : (arg x t') = (arg x t).
Proof. exact (EQ_MP (@lem8333400 A P Q t' arg x t) (@lem8333397 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3)). Qed.
Lemma lem8333403 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem21386 (A -> B) x). Qed.
Lemma lem8333404 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem8333403 A B x). Qed.
Lemma lem8333405 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (@lem8333404 A B f). Qed.
Lemma lem8333406 {A B : Type'} (f : A -> B) : term1060 A B f.
Proof. exact (fun h0 : term1061 A B f => @lem8333405 A B f). Qed.
Lemma lem8333408 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8333409 {A B : Type'} (f : A -> B) : (term1060 A B f) = (f = f).
Proof. exact (@lem8333408 (f = f)). Qed.
Lemma lem8333410 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (EQ_MP (@lem8333409 A B f) (@lem8333406 A B f)). Qed.
Lemma lem8333428 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8333429 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term991 A B _112872 _112873 _112874 _112875) = (term1062 A B _112873 _112875 _112872 _112874).
Proof. exact (@lem8333428 ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875)) (term1063 A B _112872 _112874)). Qed.
Lemma lem8333439 {A : Type'} (_112873 : A) (_112875 : A) : (term1064 A _112873 _112875) = (term1064 A _112873 _112875).
Proof. exact (eq_refl (term1064 A _112873 _112875)). Qed.
Lemma lem8333440 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term993 A B _112872 _112873 _112874 _112875) = (term1065 A B _112873 _112875 _112872 _112874).
Proof. exact (MK_COMB (@lem8333439 A _112873 _112875) (@lem8333429 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333444 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8333445 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1065 A B _112873 _112875 _112872 _112874) = (term1066 A B _112873 _112875 _112872 _112874).
Proof. exact (@lem8333444 ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875)) (term451 A _112873 _112875) (term1063 A B _112872 _112874)). Qed.
Lemma lem8333467 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term993 A B _112872 _112873 _112874 _112875) = (term1066 A B _112873 _112875 _112872 _112874).
Proof. exact (TRANS (@lem8333440 A B _112873 _112875 _112872 _112874) (@lem8333445 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333468 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8333469 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1067 A B _112872 _112873 _112874 _112875) = (term1068 A B _112873 _112875 _112872 _112874).
Proof. exact (MK_COMB (@lem8333468) (@lem8333467 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333491 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1066 A B _112873 _112875 _112872 _112874) = (term1066 A B _112873 _112875 _112872 _112874).
Proof. exact (eq_refl (term1066 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333492 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : ((term993 A B _112872 _112873 _112874 _112875) = (term1066 A B _112873 _112875 _112872 _112874)) = ((term1066 A B _112873 _112875 _112872 _112874) = (term1066 A B _112873 _112875 _112872 _112874)).
Proof. exact (MK_COMB (@lem8333469 A B _112873 _112875 _112872 _112874) (@lem8333491 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333494 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8333495 (x : Prop) : (x = x) = True.
Proof. exact (@lem8333494 Prop x). Qed.
Lemma lem8333496 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : ((term1066 A B _112873 _112875 _112872 _112874) = (term1066 A B _112873 _112875 _112872 _112874)) = True.
Proof. exact (@lem8333495 (term1066 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333497 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : ((term993 A B _112872 _112873 _112874 _112875) = (term1066 A B _112873 _112875 _112872 _112874)) = True.
Proof. exact (TRANS (@lem8333492 A B _112873 _112875 _112872 _112874) (@lem8333496 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333498 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : True = ((term993 A B _112872 _112873 _112874 _112875) = (term1066 A B _112873 _112875 _112872 _112874)).
Proof. exact (SYM (@lem8333497 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333499 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term993 A B _112872 _112873 _112874 _112875) = (term1066 A B _112873 _112875 _112872 _112874).
Proof. exact (EQ_MP (@lem8333498 A B _112873 _112875 _112872 _112874) (@lem0)). Qed.
Lemma lem8333500 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : term1066 A B _112873 _112875 _112872 _112874.
Proof. exact (EQ_MP (@lem8333499 A B _112873 _112875 _112872 _112874) (@lem8332697 A B _112872 _112873 _112874 _112875)). Qed.
Lemma lem8333502 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8333503 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : (term1066 A B _112873 _112875 _112872 _112874) = (term1069 A B _112872 _112873 _112874 _112875).
Proof. exact (@lem8333502 (term1070 A B _112873 _112875 _112872 _112874) ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875))). Qed.
Lemma lem8333505 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8333506 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1071 A B _112873 _112875 _112872 _112874) = (term1072 A B _112873 _112875 _112872 _112874).
Proof. exact (@lem8333505 (term451 A _112873 _112875) (term1063 A B _112872 _112874)). Qed.
Lemma lem8333508 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333509 {A : Type'} (_112873 : A) (_112875 : A) : (term1073 A _112873 _112875) = (_112873 = _112875).
Proof. exact (@lem8333508 (_112873 = _112875)). Qed.
Lemma lem8333510 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333511 {A : Type'} (_112873 : A) (_112875 : A) : (term1074 A _112873 _112875) = (term1075 A _112873 _112875).
Proof. exact (MK_COMB (@lem8333510) (@lem8333509 A _112873 _112875)). Qed.
Lemma lem8333513 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8333514 {A B : Type'} (_112872 : A -> B) (_112874 : A -> B) : (term1076 A B _112872 _112874) = (_112872 = _112874).
Proof. exact (@lem8333513 (_112872 = _112874)). Qed.
Lemma lem8333515 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1072 A B _112873 _112875 _112872 _112874) = (term1077 A B _112873 _112875 _112872 _112874).
Proof. exact (MK_COMB (@lem8333511 A _112873 _112875) (@lem8333514 A B _112872 _112874)). Qed.
Lemma lem8333516 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1071 A B _112873 _112875 _112872 _112874) = (term1077 A B _112873 _112875 _112872 _112874).
Proof. exact (TRANS (@lem8333506 A B _112873 _112875 _112872 _112874) (@lem8333515 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333517 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8333518 {A B : Type'} (_112873 : A) (_112875 : A) (_112872 : A -> B) (_112874 : A -> B) : (term1078 A B _112873 _112875 _112872 _112874) = (term1079 A B _112873 _112875 _112872 _112874).
Proof. exact (MK_COMB (@lem8333517) (@lem8333516 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333519 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875)) = ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875)).
Proof. exact (eq_refl ((@I (A -> B) _112872 _112873) = (@I (A -> B) _112874 _112875))). Qed.
Lemma lem8333520 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : (term1069 A B _112872 _112873 _112874 _112875) = (term1080 A B _112872 _112873 _112874 _112875).
Proof. exact (MK_COMB (@lem8333518 A B _112873 _112875 _112872 _112874) (@lem8333519 A B _112872 _112873 _112874 _112875)). Qed.
Lemma lem8333521 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : (term1066 A B _112873 _112875 _112872 _112874) = (term1080 A B _112872 _112873 _112874 _112875).
Proof. exact (TRANS (@lem8333503 A B _112872 _112873 _112874 _112875) (@lem8333520 A B _112872 _112873 _112874 _112875)). Qed.
Lemma lem8333523 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : term1081 A B P Q t' arg x t f.
Proof. exact (conj (@lem8333401 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3) (@lem8333410 A B f)). Qed.
Lemma lem8333525 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : term1080 A B _112872 _112873 _112874 _112875.
Proof. exact (EQ_MP (@lem8333521 A B _112872 _112873 _112874 _112875) (@lem8333500 A B _112873 _112875 _112872 _112874)). Qed.
Lemma lem8333526 {A B : Type'} (_112872 : A -> B) (_112873 : A) (_112874 : A -> B) (_112875 : A) : term1080 A B _112872 _112873 _112874 _112875.
Proof. exact (@lem8333525 A B _112872 _112873 _112874 _112875). Qed.
Lemma lem8333527 {A B P Q : Type'} (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : term1082 A B P Q t' f arg x t.
Proof. exact (@lem8333526 A B f (arg x t') f (arg x t)). Qed.
Lemma lem8333530 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : (term908 A B P Q f arg x t') = (term908 A B P Q f arg x t).
Proof. exact (@lem8333527 A B P Q t' f arg x t (@lem8333523 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3)). Qed.
Lemma lem8333531 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : term1083 A B P Q t' f arg x t.
Proof. exact (fun h0 : term970 A B P Q t' f arg x t => @lem8333530 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3). Qed.
Lemma lem8333533 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8333534 {A B P Q : Type'} (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term1083 A B P Q t' f arg x t) = ((term908 A B P Q f arg x t') = (term908 A B P Q f arg x t)).
Proof. exact (@lem8333533 ((term908 A B P Q f arg x t') = (term908 A B P Q f arg x t))). Qed.
Lemma lem8333535 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : (term908 A B P Q f arg x t') = (term908 A B P Q f arg x t).
Proof. exact (EQ_MP (@lem8333534 A B P Q t' f arg x t) (@lem8333531 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3)). Qed.
Lemma lem8333538 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8333540 {A B P Q : Type'} (t' : Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t : Q) : (term970 A B P Q t' f arg x t) = (term1084 A B P Q t' f arg x t).
Proof. exact (@lem8333538 ((term908 A B P Q f arg x t') = (term908 A B P Q f arg x t))). Qed.
Lemma lem8333543 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (x : P) (t' : Q) (v' : B) (v : B) (h1 : term917 A B D P Q t pat e q f arg x t' v' v) : term1084 A B P Q t' f arg x t.
Proof. exact (EQ_MP (@lem8333540 A B P Q t' f arg x t) (@lem8332044 A B D P Q t pat e q f arg x t' v' v h1)). Qed.
Lemma lem8333546 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : False.
Proof. exact (@lem8333543 A B D P Q t pat e q f arg x t' v' v h2 (@lem8333535 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3)). Qed.
Lemma lem8333547 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : term979.
Proof. exact (fun h0 : ~ False => @lem8333546 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3). Qed.
Lemma lem8333549 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8333550 : term979 = False.
Proof. exact (@lem8333549 False). Qed.
Lemma lem8333553 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term917 A B D P Q t pat e q f arg x t' v' v) (h3 : p f x) : False.
Proof. exact (EQ_MP (@lem8333550) (@lem8333547 A B D P Q t pat e q arg t' v' v p f x h1 h2 h3)). Qed.
Lemma lem8333554 {A B D P Q : Type'} (t : Q) (v : B) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (h1 : term939 A B D P Q t v f arg pat e q x) : False.
Proof. exact (EQ_MP (@lem8332337) (@lem8332334 A B D P Q t v f arg pat e q x h1)). Qed.
Lemma lem8333555 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term925 A B D P Q pat e q f arg x) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') : (term925 A B D P Q pat e q f arg x) = False.
Proof. exact (prop_ext (fun h3 : term925 A B D P Q pat e q f arg x => @lem8332592 A B D P Q t f arg t' v' v pat e q x t'' h1 h2) (fun h3 : False => @lem8330998 A B D P Q pat e q f arg x h1)). Qed.
Lemma lem8333556 {A B D P Q : Type'} (t : Q) (f : A -> B) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) (t'' : Q) (h1 : term925 A B D P Q pat e q f arg x) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') : False.
Proof. exact (EQ_MP (@lem8333555 A B D P Q t f arg t' v' v pat e q x t'' h1 h2) (@lem8330998 A B D P Q pat e q f arg x h1)). Qed.
Lemma lem8333557 {A B D P Q : Type'} (t : Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t'' : Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term929 A B D P Q t f arg t' v' v pat e q x t'') (h3 : p f x) : False.
Proof. exact (or_elim (@lem8330499 A B D P Q t f arg t' v' v pat e q x t'' h2) (fun h0 : term925 A B D P Q pat e q f arg x => @lem8333556 A B D P Q t f arg t' v' v pat e q x t'' h0 h2) (fun h0 : term917 A B D P Q t pat e q f arg x t' v' v => @lem8333553 A B D P Q t pat e q arg t' v' v p f x h1 h0 h3)). Qed.
Lemma lem8333558 {A B D P Q : Type'} (t : Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t'' : Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term881 A B D P Q t f arg t' v' v pat e q x t'') (h3 : p f x) : False.
Proof. exact (or_elim (@lem8330487 A B D P Q t f arg t' v' v pat e q x t'' h2) (fun h0 : term939 A B D P Q t v f arg pat e q x => @lem8333554 A B D P Q t v f arg pat e q x h0) (fun h0 : term929 A B D P Q t f arg t' v' v pat e q x t'' => @lem8333557 A B D P Q t arg t' v' v pat e q t'' p f x h1 h0 h3)). Qed.
Lemma lem8333559 {A B D P Q : Type'} (t : Q) (arg : type1475 A P Q) (t' : Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term884 A B D P Q t f arg t' v' v pat e q x) (h3 : p f x) : False.
Proof. exact (ex_elim (@lem8329892 A B D P Q t f arg t' v' v pat e q x h2) (fun t'' : Q => fun h0 : term883 A B D P Q t f arg t' v' v pat e q x t'' => @lem8333558 A B D P Q t arg t' v' v pat e q t'' p f x h1 h0 h3)). Qed.
Lemma lem8333560 {A B D P Q : Type'} (t : Q) (arg : type1475 A P Q) (v' : B) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term886 A B D P Q t f arg v' v pat e q x) (h3 : p f x) : False.
Proof. exact (ex_elim (@lem8329891 A B D P Q t f arg v' v pat e q x h2) (fun t' : Q => fun h0 : term885 A B D P Q t f arg v' v pat e q x t' => @lem8333559 A B D P Q t arg t' v' v pat e q p f x h1 h0 h3)). Qed.
Lemma lem8333561 {A B D P Q : Type'} (t : Q) (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term888 A B D P Q t f arg v pat e q x) (h3 : p f x) : False.
Proof. exact (ex_elim (@lem8329890 A B D P Q t f arg v pat e q x h2) (fun v' : B => fun h0 : term887 A B D P Q t f arg v pat e q x v' => @lem8333560 A B D P Q t arg v' v pat e q p f x h1 h0 h3)). Qed.
Lemma lem8333562 {A B D P Q : Type'} (arg : type1475 A P Q) (v : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term890 A B D P Q f arg v pat e q x) (h3 : p f x) : False.
Proof. exact (ex_elim (@lem8329889 A B D P Q f arg v pat e q x h2) (fun t : Q => fun h0 : term889 A B D P Q f arg v pat e q x t => @lem8333561 A B D P Q t arg v pat e q p f x h1 h0 h3)). Qed.
Lemma lem8333563 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term406 A B D P Q f arg pat e q x) (h3 : p f x) : False.
Proof. exact (ex_elim (@lem8329888 A B D P Q f arg pat e q x h2) (fun v : B => fun h0 : term891 A B D P Q f arg pat e q x v => @lem8333562 A B D P Q arg v pat e q p f x h1 h0 h3)). Qed.
Lemma lem8333564 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term406 A B D P Q f arg pat e q x) (h3 : p f x) : (p f x) = False.
Proof. exact (prop_ext (fun h4 : p f x => @lem8333563 A B D P Q arg pat e q p f x h1 h2 h3) (fun h4 : False => @lem8328521 A B P p f x h3)). Qed.
Lemma lem8333565 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term406 A B D P Q f arg pat e q x) (h3 : p f x) : False.
Proof. exact (EQ_MP (@lem8333564 A B D P Q arg pat e q p f x h1 h2 h3) (@lem8328521 A B P p f x h3)). Qed.
Lemma lem8333566 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term406 A B D P Q f arg pat e q x) (h3 : p f x) : (term406 A B D P Q f arg pat e q x) = False.
Proof. exact (prop_ext (fun h4 : term406 A B D P Q f arg pat e q x => @lem8333565 A B D P Q arg pat e q p f x h1 h2 h3) (fun h4 : False => @lem8328229 A B D P Q f arg pat e q x h2)). Qed.
Lemma lem8333567 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term406 A B D P Q f arg pat e q x) (h3 : p f x) : False.
Proof. exact (EQ_MP (@lem8333566 A B D P Q arg pat e q p f x h1 h2 h3) (@lem8328229 A B D P Q f arg pat e q x h2)). Qed.
Lemma lem8333568 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : p f x) : term405 A B D P Q f arg pat e q x.
Proof. exact (fun h0 : term406 A B D P Q f arg pat e q x => @lem8333567 A B D P Q arg pat e q p f x h1 h0 h2). Qed.
Lemma lem8333569 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (p : type560 A B P) (f : A -> B) (x : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : p f x) : (term115 A B D P Q pat e q f arg x) = (term179 D P Q pat e q x).
Proof. exact (EQ_MP (@lem8328228 A B D P Q f arg pat e q x) (@lem8333568 A B D P Q pat e q arg p f x h1 h2)). Qed.
Lemma lem8333570 {A B D P Q : Type'} (f : A -> B) (x : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term178 A B D P Q p f arg pat e q x.
Proof. exact (fun h0 : p f x => @lem8333569 A B D P Q pat e q arg p f x h1 h0). Qed.
Lemma lem8333575 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term176 A B D P Q p f arg pat e q.
Proof. exact (fun x : P => @lem8333570 A B D P Q f x p pat e q arg h1). Qed.
Lemma lem8333580 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term174 A B D P Q p arg pat e q.
Proof. exact (fun f : A -> B => @lem8333575 A B D P Q f p pat e q arg h1). Qed.
Lemma lem8333581 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term283 A B D P Q lt2 _112645 s p arg pat e q.
Proof. exact (fun h0 : @admissible A B A Prop P lt2 _112645 s p => @lem8333580 A B D P Q p pat e q arg h1). Qed.
Lemma lem8333582 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term294 A B D P Q lt2 _112645 s p arg pat e q.
Proof. exact (fun h0 : term35 A B D P Q p q pat e arg lt2 s => @lem8333581 A B D P Q lt2 _112645 s p pat e q arg h1). Qed.
Lemma lem8333583 {A B D P Q : Type'} (lt2 : type1402 A) (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term303 A B D P Q lt2 _112645 s p arg pat e q.
Proof. exact (fun h0 : term36 A B D P Q p pat e q arg => @lem8333582 A B D P Q lt2 _112645 s p pat e q arg h0). Qed.
Lemma lem8333588 {A B D P Q : Type'} (_112645 : type560 A B P) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term305 A B D P Q _112645 s p arg pat e q.
Proof. exact (fun lt2 : type1402 A => @lem8333583 A B D P Q lt2 _112645 s p arg pat e q). Qed.
Lemma lem8333593 {A B D P Q : Type'} (_112645 : type560 A B P) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term307 A B D P Q _112645 p arg pat e q.
Proof. exact (fun s : P -> A => @lem8333588 A B D P Q _112645 s p arg pat e q). Qed.
Lemma lem8333598 {A B D P Q : Type'} (_112645 : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term309 A B D P Q _112645 arg pat e q.
Proof. exact (fun p : type560 A B P => @lem8333593 A B D P Q _112645 p arg pat e q). Qed.
Lemma lem8333603 {A B D P Q : Type'} (_112645 : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term311 A B D P Q _112645 pat e q.
Proof. exact (fun arg : type1475 A P Q => @lem8333598 A B D P Q _112645 arg pat e q). Qed.
Lemma lem8333608 {A B D P Q : Type'} (_112645 : type560 A B P) (e : P -> D) (q : type1413 P Q) : term313 A B D P Q _112645 e q.
Proof. exact (fun pat : Q -> D => @lem8333603 A B D P Q _112645 pat e q). Qed.
Lemma lem8333613 {A B D P Q : Type'} (_112645 : type560 A B P) (q : type1413 P Q) : term315 A B D P Q _112645 q.
Proof. exact (fun e : P -> D => @lem8333608 A B D P Q _112645 e q). Qed.
Lemma lem8333618 {A B D P Q : Type'} (_112645 : type560 A B P) : term317 A B D P Q _112645.
Proof. exact (fun q : type1413 P Q => @lem8333613 A B D P Q _112645 q). Qed.
Lemma lem8333619 {A B D P Q : Type'} (_112646 : P -> Prop) (_112645 : type560 A B P) : term361 A B D P Q _112646 _112645.
Proof. exact (fun h0 : term359 A B P _112645 _112646 => @lem8333618 A B D P Q _112645). Qed.
Lemma lem8333624 {A B D P Q : Type'} (_112646 : P -> Prop) : term363 A B D P Q _112646.
Proof. exact (fun _112645 : type560 A B P => @lem8333619 A B D P Q _112646 _112645). Qed.
Lemma lem8333625 {A B D P Q : Type'} (_112646 : P -> Prop) : term402 A B D P Q _112646.
Proof. exact (fun h0 : term400 P _112646 => @lem8333624 A B D P Q _112646). Qed.
Lemma lem8333630 {A B D P Q : Type'} : term404 A B D P Q.
Proof. exact (fun _112646 : P -> Prop => @lem8333625 A B D P Q _112646). Qed.
Lemma lem8333631 {A B D P Q : Type'} : term269 A B D P Q.
Proof. exact (EQ_MP (@lem8328218 A B D P Q) (@lem8333630 A B D P Q)). Qed.
Lemma lem8333632 {A B D P Q : Type'} (q : type1413 P Q) : term1085 A B D P Q q.
Proof. exact (@lem8333631 A B D P Q q). Qed.
Lemma lem8333633 {A B D P Q : Type'} (q : type1413 P Q) : (term1085 A B D P Q q) = (term265 A B D P Q q).
Proof. exact (eq_refl (term1085 A B D P Q q)). Qed.
Lemma lem8333634 {A B D P Q : Type'} (q : type1413 P Q) : term265 A B D P Q q.
Proof. exact (EQ_MP (@lem8333633 A B D P Q q) (@lem8333632 A B D P Q q)). Qed.
Lemma lem8333635 {A B D P Q : Type'} (q : type1413 P Q) (e : P -> D) : term1086 A B D P Q q e.
Proof. exact (@lem8333634 A B D P Q q e). Qed.
Lemma lem8333636 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1086 A B D P Q q e) = (term261 A B D P Q e q).
Proof. exact (eq_refl (term1086 A B D P Q q e)). Qed.
Lemma lem8333637 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : term261 A B D P Q e q.
Proof. exact (EQ_MP (@lem8333636 A B D P Q e q) (@lem8333635 A B D P Q q e)). Qed.
Lemma lem8333638 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) (pat : Q -> D) : term1087 A B D P Q e q pat.
Proof. exact (@lem8333637 A B D P Q e q pat). Qed.
Lemma lem8333639 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1087 A B D P Q e q pat) = (term257 A B D P Q pat e q).
Proof. exact (eq_refl (term1087 A B D P Q e q pat)). Qed.
Lemma lem8333640 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term257 A B D P Q pat e q.
Proof. exact (EQ_MP (@lem8333639 A B D P Q pat e q) (@lem8333638 A B D P Q e q pat)). Qed.
Lemma lem8333641 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : term1088 A B D P Q pat e q arg.
Proof. exact (@lem8333640 A B D P Q pat e q arg). Qed.
Lemma lem8333642 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1088 A B D P Q pat e q arg) = (term253 A B D P Q arg pat e q).
Proof. exact (eq_refl (term1088 A B D P Q pat e q arg)). Qed.
Lemma lem8333643 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term253 A B D P Q arg pat e q.
Proof. exact (EQ_MP (@lem8333642 A B D P Q arg pat e q) (@lem8333641 A B D P Q pat e q arg)). Qed.
Lemma lem8333644 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) : term1089 A B D P Q arg pat e q p.
Proof. exact (@lem8333643 A B D P Q arg pat e q p). Qed.
Lemma lem8333645 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1089 A B D P Q arg pat e q p) = (term249 A B D P Q p arg pat e q).
Proof. exact (eq_refl (term1089 A B D P Q arg pat e q p)). Qed.
Lemma lem8333646 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term249 A B D P Q p arg pat e q.
Proof. exact (EQ_MP (@lem8333645 A B D P Q p arg pat e q) (@lem8333644 A B D P Q arg pat e q p)). Qed.
Lemma lem8333647 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (s : P -> A) : term1090 A B D P Q p arg pat e q s.
Proof. exact (@lem8333646 A B D P Q p arg pat e q s). Qed.
Lemma lem8333648 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1090 A B D P Q p arg pat e q s) = (term245 A B D P Q s p arg pat e q).
Proof. exact (eq_refl (term1090 A B D P Q p arg pat e q s)). Qed.
Lemma lem8333649 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term245 A B D P Q s p arg pat e q.
Proof. exact (EQ_MP (@lem8333648 A B D P Q s p arg pat e q) (@lem8333647 A B D P Q p arg pat e q s)). Qed.
Lemma lem8333650 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) : term1091 A B D P Q s p arg pat e q lt2.
Proof. exact (@lem8333649 A B D P Q s p arg pat e q lt2). Qed.
Lemma lem8333651 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1091 A B D P Q s p arg pat e q lt2) = (term229 A B D P Q lt2 s p arg pat e q).
Proof. exact (eq_refl (term1091 A B D P Q s p arg pat e q lt2)). Qed.
Lemma lem8333652 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8333651 A B D P Q lt2 s p arg pat e q) (@lem8333650 A B D P Q s p arg pat e q lt2)). Qed.
Lemma lem8333654 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term229 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8326957 A B D P Q lt2 s p arg pat e q (@lem8333652 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8333655 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term239 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8333654 A B D P Q lt2 s p arg pat e q (@lem8321124 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8333656 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term236 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8333655 A B D P Q lt2 s p pat e q arg h1 (@lem8321123 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8333657 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term227 A B D P Q p arg pat e q.
Proof. exact (@lem8333656 A B D P Q p q pat e arg lt2 s h1 h2 (@lem8321254 A B P lt2 s p h3)). Qed.
Lemma lem8333658 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term228 A B D P Q p arg pat e q) (h4 : term40 A B P lt2 s p) : False.
Proof. exact (@lem8333657 A B D P Q q pat e arg lt2 s p h1 h2 h4 (@lem8326941 A B D P Q p arg pat e q h3)). Qed.
Lemma lem8333659 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term228 A B D P Q p arg pat e q) (h4 : term40 A B P lt2 s p) : (term228 A B D P Q p arg pat e q) = False.
Proof. exact (prop_ext (fun h5 : term228 A B D P Q p arg pat e q => @lem8333658 A B D P Q arg pat e q lt2 s p h1 h2 h3 h4) (fun h5 : False => @lem8326941 A B D P Q p arg pat e q h3)). Qed.
Lemma lem8333660 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term228 A B D P Q p arg pat e q) (h4 : term40 A B P lt2 s p) : False.
Proof. exact (EQ_MP (@lem8333659 A B D P Q arg pat e q lt2 s p h1 h2 h3 h4) (@lem8326941 A B D P Q p arg pat e q h3)). Qed.
Lemma lem8333661 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term227 A B D P Q p arg pat e q.
Proof. exact (fun h0 : term228 A B D P Q p arg pat e q => @lem8333660 A B D P Q arg pat e q lt2 s p h1 h2 h0 h3). Qed.
Lemma lem8333662 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term174 A B D P Q p arg pat e q.
Proof. exact (EQ_MP (@lem8326940 A B D P Q p arg pat e q) (@lem8333661 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8333696 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term36 A B D P Q p pat e q arg.
Proof. exact (h1). Qed.
Lemma lem8333724 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term35 A B D P Q p q pat e arg lt2 s.
Proof. exact (h1). Qed.
Lemma lem8333726 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term14 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8321080 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8321079 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8333727 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (t : type560 A B P) : (@admissible A B A Prop P lt2 p s t) = (term1092 A B P p lt2 s t).
Proof. exact (@lem8333726 A B A Prop P p lt2 s t). Qed.
Lemma lem8333728 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term40 A B P lt2 s p) = (term1093 A B P lt2 s p).
Proof. exact (@lem8333727 A B P (term271 A B P) lt2 s p). Qed.
Lemma lem8333746 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333747 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8333746 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8333748 {A B P : Type'} (f : A -> B) : (term1095 A B P f) = (term346 A B P f).
Proof. exact (@lem8333747 A B P (term271 A B P) f). Qed.
Lemma lem8333749 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (eq_refl (term346 A B P f)). Qed.
Lemma lem8333750 {A B P : Type'} : (term344 A B P) = (term271 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8333749 A B P f)). Qed.
Lemma lem8333751 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8333752 {A B P : Type'} (f : A -> B) : (term1095 A B P f) = (term346 A B P f).
Proof. exact (MK_COMB (@lem8333750 A B P) (@lem8333751 A B f)). Qed.
Lemma lem8333753 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8333754 {A B P : Type'} (f : A -> B) : (term1096 A B P f) = (term1097 A B P f).
Proof. exact (MK_COMB (@lem8333753 P) (@lem8333752 A B P f)). Qed.
Lemma lem8333755 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (eq_refl (term346 A B P f)). Qed.
Lemma lem8333756 {A B P : Type'} (f : A -> B) : ((term1095 A B P f) = (term346 A B P f)) = ((term346 A B P f) = (term347 P)).
Proof. exact (MK_COMB (@lem8333754 A B P f) (@lem8333755 A B P f)). Qed.
Lemma lem8333757 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (EQ_MP (@lem8333756 A B P f) (@lem8333748 A B P f)). Qed.
Lemma lem8333758 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333759 {A B P : Type'} (f : A -> B) (a : P) : (term1098 A B P f a) = (term389 P a).
Proof. exact (MK_COMB (@lem8333757 A B P f) (@lem8333758 P a)). Qed.
Lemma lem8333761 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333762 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8333761 P Prop f y). Qed.
Lemma lem8333763 {P : Type'} (a : P) : (term1100 P a) = (term389 P a).
Proof. exact (@lem8333762 P (term347 P) a). Qed.
Lemma lem8333764 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8333765 {P : Type'} : (term387 P) = (term347 P).
Proof. exact (fun_ext (fun a : P => @lem8333764 P a)). Qed.
Lemma lem8333766 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333767 {P : Type'} (a : P) : (term1100 P a) = (term389 P a).
Proof. exact (MK_COMB (@lem8333765 P) (@lem8333766 P a)). Qed.
Lemma lem8333768 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8333769 {P : Type'} (a : P) : (term1101 P a) = (term1102 P a).
Proof. exact (MK_COMB (@lem8333768) (@lem8333767 P a)). Qed.
Lemma lem8333770 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8333771 {P : Type'} (a : P) : ((term1100 P a) = (term389 P a)) = ((term389 P a) = True).
Proof. exact (MK_COMB (@lem8333769 P a) (@lem8333770 P a)). Qed.
Lemma lem8333772 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (EQ_MP (@lem8333771 P a) (@lem8333763 P a)). Qed.
Lemma lem8333773 {A B P : Type'} (f : A -> B) (a : P) : (term1098 A B P f a) = True.
Proof. exact (TRANS (@lem8333759 A B P f a) (@lem8333772 P a)). Qed.
Lemma lem8333774 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333775 {A B P : Type'} (f : A -> B) (a : P) : (term1103 A B P f a) = (and True).
Proof. exact (MK_COMB (@lem8333774) (@lem8333773 A B P f a)). Qed.
Lemma lem8333779 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333780 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8333779 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8333781 {A B P : Type'} (g : A -> B) : (term1095 A B P g) = (term346 A B P g).
Proof. exact (@lem8333780 A B P (term271 A B P) g). Qed.
Lemma lem8333782 {A B P : Type'} (f : A -> B) : (term346 A B P f) = (term347 P).
Proof. exact (eq_refl (term346 A B P f)). Qed.
Lemma lem8333783 {A B P : Type'} : (term344 A B P) = (term271 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8333782 A B P f)). Qed.
Lemma lem8333784 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8333785 {A B P : Type'} (g : A -> B) : (term1095 A B P g) = (term346 A B P g).
Proof. exact (MK_COMB (@lem8333783 A B P) (@lem8333784 A B g)). Qed.
Lemma lem8333786 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8333787 {A B P : Type'} (g : A -> B) : (term1096 A B P g) = (term1097 A B P g).
Proof. exact (MK_COMB (@lem8333786 P) (@lem8333785 A B P g)). Qed.
Lemma lem8333788 {A B P : Type'} (g : A -> B) : (term346 A B P g) = (term347 P).
Proof. exact (eq_refl (term346 A B P g)). Qed.
Lemma lem8333789 {A B P : Type'} (g : A -> B) : ((term1095 A B P g) = (term346 A B P g)) = ((term346 A B P g) = (term347 P)).
Proof. exact (MK_COMB (@lem8333787 A B P g) (@lem8333788 A B P g)). Qed.
Lemma lem8333790 {A B P : Type'} (g : A -> B) : (term346 A B P g) = (term347 P).
Proof. exact (EQ_MP (@lem8333789 A B P g) (@lem8333781 A B P g)). Qed.
Lemma lem8333791 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333792 {A B P : Type'} (g : A -> B) (a : P) : (term1098 A B P g a) = (term389 P a).
Proof. exact (MK_COMB (@lem8333790 A B P g) (@lem8333791 P a)). Qed.
Lemma lem8333794 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333795 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8333794 P Prop f y). Qed.
Lemma lem8333796 {P : Type'} (a : P) : (term1100 P a) = (term389 P a).
Proof. exact (@lem8333795 P (term347 P) a). Qed.
Lemma lem8333797 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8333798 {P : Type'} : (term387 P) = (term347 P).
Proof. exact (fun_ext (fun a : P => @lem8333797 P a)). Qed.
Lemma lem8333799 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333800 {P : Type'} (a : P) : (term1100 P a) = (term389 P a).
Proof. exact (MK_COMB (@lem8333798 P) (@lem8333799 P a)). Qed.
Lemma lem8333801 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8333802 {P : Type'} (a : P) : (term1101 P a) = (term1102 P a).
Proof. exact (MK_COMB (@lem8333801) (@lem8333800 P a)). Qed.
Lemma lem8333803 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (eq_refl (term389 P a)). Qed.
Lemma lem8333804 {P : Type'} (a : P) : ((term1100 P a) = (term389 P a)) = ((term389 P a) = True).
Proof. exact (MK_COMB (@lem8333802 P a) (@lem8333803 P a)). Qed.
Lemma lem8333805 {P : Type'} (a : P) : (term389 P a) = True.
Proof. exact (EQ_MP (@lem8333804 P a) (@lem8333796 P a)). Qed.
Lemma lem8333806 {A B P : Type'} (g : A -> B) (a : P) : (term1098 A B P g a) = True.
Proof. exact (TRANS (@lem8333792 A B P g a) (@lem8333805 P a)). Qed.
Lemma lem8333807 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333808 {A B P : Type'} (g : A -> B) (a : P) : (term1103 A B P g a) = (and True).
Proof. exact (MK_COMB (@lem8333807) (@lem8333806 A B P g a)). Qed.
Lemma lem8333817 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1104 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (eq_refl (term1104 A B P lt2 s a f g)). Qed.
Lemma lem8333818 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1105 A B P lt2 s a f g) = (term1106 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8333808 A B P g a) (@lem8333817 A B P lt2 s a f g)). Qed.
Lemma lem8333820 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8333821 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1106 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (@lem8333820 (term1104 A B P lt2 s a f g)). Qed.
Lemma lem8333830 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1105 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8333818 A B P lt2 s a f g) (@lem8333821 A B P lt2 s a f g)). Qed.
Lemma lem8333831 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1107 A B P lt2 s a f g) = (term1106 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8333775 A B P f a) (@lem8333830 A B P lt2 s a f g)). Qed.
Lemma lem8333833 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8333834 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1106 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (@lem8333833 (term1104 A B P lt2 s a f g)). Qed.
Lemma lem8333843 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1107 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8333831 A B P lt2 s a f g) (@lem8333834 A B P lt2 s a f g)). Qed.
Lemma lem8333844 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8333845 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1108 A B P lt2 s a f g) = (term1109 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8333844) (@lem8333843 A B P lt2 s a f g)). Qed.
Lemma lem8333848 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8333849 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1110 A B P lt2 s f p g a) = (term1111 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8333845 A B P lt2 s a f g) (@lem8333848 A B P f p g a)). Qed.
Lemma lem8333852 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1112 A B P lt2 s f p g) = (term1113 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8333849 A B P lt2 s f p g a)). Qed.
Lemma lem8333853 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8333854 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1114 A B P lt2 s f p g) = (term1115 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8333853 P) (@lem8333852 A B P lt2 s f p g)). Qed.
Lemma lem8333859 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1116 A B P lt2 s f p) = (term1117 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8333854 A B P lt2 s f p g)). Qed.
Lemma lem8333860 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8333861 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1118 A B P lt2 s f p) = (term1119 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8333860 A B) (@lem8333859 A B P lt2 s f p)). Qed.
Lemma lem8333866 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1120 A B P lt2 s p) = (term1121 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8333861 A B P lt2 s f p)). Qed.
Lemma lem8333867 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8333868 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1093 A B P lt2 s p) = (term1122 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8333867 A B) (@lem8333866 A B P lt2 s p)). Qed.
Lemma lem8333873 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term40 A B P lt2 s p) = (term1122 A B P lt2 s p).
Proof. exact (TRANS (@lem8333728 A B P lt2 s p) (@lem8333868 A B P lt2 s p)). Qed.
Lemma lem8333874 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term40 A B P lt2 s p) : term1122 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8333873 A B P lt2 s p) (@lem8321254 A B P lt2 s p h1)). Qed.
Lemma lem8333892 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term180 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem8333893 (p : Prop) (q : Prop) (p' : Prop) : term181 p q p'.
Proof. exact (fun q' : Prop => @lem8333892 p q p' q'). Qed.
Lemma lem8333894 (p : Prop) (q : Prop) : term182 p q.
Proof. exact (fun p' : Prop => @lem8333893 p q p'). Qed.
Lemma lem8333895 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : term1123 A B D P Q p arg pat e q f lt2 y s a.
Proof. exact (@lem8333894 (term1124 A B D P Q p lt2 y arg pat e q f a) (term1125 A P lt2 y s a)). Qed.
Lemma lem8333896 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) : term1126 A B D P Q p arg pat e q f lt2 y s a p'.
Proof. exact (@lem8333895 A B D P Q p arg pat e q f lt2 y s a p'). Qed.
Lemma lem8333897 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) : (term1126 A B D P Q p arg pat e q f lt2 y s a p') = (term1127 A B D P Q p arg pat e q f lt2 y s a p').
Proof. exact (eq_refl (term1126 A B D P Q p arg pat e q f lt2 y s a p')). Qed.
Lemma lem8333898 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) : term1127 A B D P Q p arg pat e q f lt2 y s a p'.
Proof. exact (EQ_MP (@lem8333897 A B D P Q p arg pat e q f lt2 y s a p') (@lem8333896 A B D P Q p arg pat e q f lt2 y s a p')). Qed.
Lemma lem8333899 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) (q' : Prop) : term1128 A B D P Q p arg pat e q f lt2 y s a p' q'.
Proof. exact (@lem8333898 A B D P Q p arg pat e q f lt2 y s a p' q'). Qed.
Lemma lem8333900 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) (q' : Prop) : (term1128 A B D P Q p arg pat e q f lt2 y s a p' q') = (term1129 A B D P Q p arg pat e q f lt2 y s a p' q').
Proof. exact (eq_refl (term1128 A B D P Q p arg pat e q f lt2 y s a p' q')). Qed.
Lemma lem8333901 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (p' : Prop) (q' : Prop) : term1129 A B D P Q p arg pat e q f lt2 y s a p' q'.
Proof. exact (EQ_MP (@lem8333900 A B D P Q p arg pat e q f lt2 y s a p' q') (@lem8333899 A B D P Q p arg pat e q f lt2 y s a p' q')). Qed.
Lemma lem8333905 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333906 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8333905 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8333907 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (@lem8333906 A B P (term1132 A B D P Q p pat e q) f). Qed.
Lemma lem8333908 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8333909 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1134 A B D P Q p pat e q) = (term1132 A B D P Q p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8333908 A B D P Q p f pat e q)). Qed.
Lemma lem8333910 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8333911 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8333909 A B D P Q p pat e q) (@lem8333910 A B f)). Qed.
Lemma lem8333912 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8333913 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1135 A B D P Q p pat e q f) = (term1136 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8333912 P) (@lem8333911 A B D P Q p pat e q f)). Qed.
Lemma lem8333914 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8333915 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f)) = ((term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q)).
Proof. exact (MK_COMB (@lem8333913 A B D P Q p pat e q f) (@lem8333914 A B D P Q p f pat e q)). Qed.
Lemma lem8333916 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (EQ_MP (@lem8333915 A B D P Q p f pat e q) (@lem8333907 A B D P Q p pat e q f)). Qed.
Lemma lem8333927 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333928 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q f a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8333916 A B D P Q p f pat e q) (@lem8333927 P a)). Qed.
Lemma lem8333930 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333931 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8333930 P Prop f y). Qed.
Lemma lem8333932 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (@lem8333931 P (term1133 A B D P Q p f pat e q) a). Qed.
Lemma lem8333933 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1138 A B D P Q p f pat e q x) = (term1140 A B D P Q p f pat e q x).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q x)). Qed.
Lemma lem8333934 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1141 A B D P Q p f pat e q) = (term1133 A B D P Q p f pat e q).
Proof. exact (fun_ext (fun x : P => @lem8333933 A B D P Q p f pat e q x)). Qed.
Lemma lem8333935 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333936 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8333934 A B D P Q p f pat e q) (@lem8333935 P a)). Qed.
Lemma lem8333937 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8333938 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1142 A B D P Q p f pat e q a) = (term1143 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8333937) (@lem8333936 A B D P Q p f pat e q a)). Qed.
Lemma lem8333939 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q a)). Qed.
Lemma lem8333940 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a)) = ((term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a)).
Proof. exact (MK_COMB (@lem8333938 A B D P Q p f pat e q a) (@lem8333939 A B D P Q p f pat e q a)). Qed.
Lemma lem8333941 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (EQ_MP (@lem8333940 A B D P Q p f pat e q a) (@lem8333932 A B D P Q p f pat e q a)). Qed.
Lemma lem8333952 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q f a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (TRANS (@lem8333928 A B D P Q p f pat e q a) (@lem8333941 A B D P Q p f pat e q a)). Qed.
Lemma lem8333953 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8333954 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1144 A B D P Q p pat e q f a) = (term1145 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8333953) (@lem8333952 A B D P Q p f pat e q a)). Qed.
Lemma lem8333966 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333967 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1146 A B P f y) = (f y).
Proof. exact (@lem8333966 (A -> B) (P -> A) f y). Qed.
Lemma lem8333968 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (@lem8333967 A B P (term1149 A B D P Q arg pat e q) f). Qed.
Lemma lem8333969 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8333970 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1151 A B D P Q arg pat e q) = (term1149 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8333969 A B D P Q f arg pat e q)). Qed.
Lemma lem8333971 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8333972 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8333970 A B D P Q arg pat e q) (@lem8333971 A B f)). Qed.
Lemma lem8333973 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8333974 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1152 A B D P Q arg pat e q f) = (term1153 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8333973 A P) (@lem8333972 A B D P Q arg pat e q f)). Qed.
Lemma lem8333975 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8333976 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f)) = ((term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q)).
Proof. exact (MK_COMB (@lem8333974 A B D P Q arg pat e q f) (@lem8333975 A B D P Q f arg pat e q)). Qed.
Lemma lem8333977 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (EQ_MP (@lem8333976 A B D P Q f arg pat e q) (@lem8333968 A B D P Q arg pat e q f)). Qed.
Lemma lem8333982 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333983 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8333977 A B D P Q f arg pat e q) (@lem8333982 P a)). Qed.
Lemma lem8333985 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8333986 {A P : Type'} (f : P -> A) (y : P) : (term138 A P f y) = (f y).
Proof. exact (@lem8333985 P A f y). Qed.
Lemma lem8333987 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (@lem8333986 A P (term1150 A D P Q arg pat e q) a). Qed.
Lemma lem8333988 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1155 A D P Q arg pat e q x) = (term1157 A D P Q arg pat e q x).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q x)). Qed.
Lemma lem8333989 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1158 A D P Q arg pat e q) = (term1150 A D P Q arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8333988 A D P Q arg pat e q x)). Qed.
Lemma lem8333990 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8333991 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8333989 A D P Q arg pat e q) (@lem8333990 P a)). Qed.
Lemma lem8333992 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8333993 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1159 A D P Q arg pat e q a) = (term1160 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8333992 A) (@lem8333991 A D P Q arg pat e q a)). Qed.
Lemma lem8333994 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q a)). Qed.
Lemma lem8333995 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a)) = ((term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)).
Proof. exact (MK_COMB (@lem8333993 A D P Q arg pat e q a) (@lem8333994 A D P Q arg pat e q a)). Qed.
Lemma lem8333996 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (EQ_MP (@lem8333995 A D P Q arg pat e q a) (@lem8333987 A D P Q arg pat e q a)). Qed.
Lemma lem8334001 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1157 A D P Q arg pat e q a).
Proof. exact (TRANS (@lem8333983 A B D P Q f arg pat e q a) (@lem8333996 A D P Q arg pat e q a)). Qed.
Lemma lem8334002 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8334003 {A B D P Q : Type'} (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1161 A B D P Q lt2 y arg pat e q f a) = (term1162 A D P Q lt2 y arg pat e q a).
Proof. exact (MK_COMB (@lem8334002 A lt2 y) (@lem8334001 A B D P Q f arg pat e q a)). Qed.
Lemma lem8334008 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1124 A B D P Q p lt2 y arg pat e q f a) = (term1163 A B D P Q p f lt2 y arg pat e q a).
Proof. exact (MK_COMB (@lem8333954 A B D P Q p f pat e q a) (@lem8334003 A B D P Q f lt2 y arg pat e q a)). Qed.
Lemma lem8334025 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (q' : Prop) : term1164 A B D P Q s p f lt2 y arg pat e q a q'.
Proof. exact (@lem8333901 A B D P Q p arg pat e q f lt2 y s a (term1163 A B D P Q p f lt2 y arg pat e q a) q'). Qed.
Lemma lem8334026 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (q' : Prop) : term1165 A B D P Q s p f lt2 y arg pat e q a q'.
Proof. exact (@lem8334025 A B D P Q s p f lt2 y arg pat e q a q' (@lem8334008 A B D P Q p f lt2 y arg pat e q a)). Qed.
Lemma lem8334038 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term1125 A P lt2 y s a).
Proof. exact (eq_refl (term1125 A P lt2 y s a)). Qed.
Lemma lem8334039 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : term1166 A B D P Q p f arg pat e q lt2 y s a.
Proof. exact (fun h0 : term1163 A B D P Q p f lt2 y arg pat e q a => @lem8334038 A P lt2 y s a). Qed.
Lemma lem8334040 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : term1167 A B D P Q p f arg pat e q lt2 y s a.
Proof. exact (@lem8334026 A B D P Q s p f lt2 y arg pat e q a (term1125 A P lt2 y s a)). Qed.
Lemma lem8334041 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1168 A B D P Q p arg pat e q f lt2 y s a) = (term1169 A B D P Q p f arg pat e q lt2 y s a).
Proof. exact (@lem8334040 A B D P Q p f arg pat e q lt2 y s a (@lem8334039 A B D P Q p f arg pat e q lt2 y s a)). Qed.
Lemma lem8334105 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1170 A B D P Q p arg pat e q f lt2 s a) = (term1171 A B D P Q p f arg pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8334041 A B D P Q p f arg pat e q lt2 y s a)). Qed.
Lemma lem8334169 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8334170 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1172 A B D P Q p arg pat e q f lt2 s a) = (term1173 A B D P Q p f arg pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8334169 A) (@lem8334105 A B D P Q p f arg pat e q lt2 s a)). Qed.
Lemma lem8334238 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1174 A B D P Q p arg pat e q f lt2 s) = (term1175 A B D P Q p f arg pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8334170 A B D P Q p f arg pat e q lt2 s a)). Qed.
Lemma lem8334306 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8334307 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1176 A B D P Q p arg pat e q f lt2 s) = (term1177 A B D P Q p f arg pat e q lt2 s).
Proof. exact (MK_COMB (@lem8334306 P) (@lem8334238 A B D P Q p f arg pat e q lt2 s)). Qed.
Lemma lem8334379 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1178 A B D P Q p arg pat e q lt2 s) = (term1179 A B D P Q p arg pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8334307 A B D P Q p f arg pat e q lt2 s)). Qed.
Lemma lem8334451 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8334452 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1180 A B D P Q p arg pat e q lt2 s) = (term1181 A B D P Q p arg pat e q lt2 s).
Proof. exact (MK_COMB (@lem8334451 A B) (@lem8334379 A B D P Q p arg pat e q lt2 s)). Qed.
Lemma lem8334528 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8334529 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1182 A B D P Q p arg pat e q lt2 s) = (term1183 A B D P Q p arg pat e q lt2 s).
Proof. exact (MK_COMB (@lem8334528) (@lem8334452 A B D P Q p arg pat e q lt2 s)). Qed.
Lemma lem8334622 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term180 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem8334623 (p : Prop) (q : Prop) (p' : Prop) : term181 p q p'.
Proof. exact (fun q' : Prop => @lem8334622 p q p' q'). Qed.
Lemma lem8334624 (p : Prop) (q : Prop) : term182 p q.
Proof. exact (fun p' : Prop => @lem8334623 p q p'). Qed.
Lemma lem8334625 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) : term1184 A B D P Q lt2 s p arg pat e q f g a.
Proof. exact (@lem8334624 (term1104 A B P lt2 s a f g) (term1185 A B D P Q p arg pat e q f g a)). Qed.
Lemma lem8334626 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) : term1186 A B D P Q lt2 s p arg pat e q f g a p'.
Proof. exact (@lem8334625 A B D P Q lt2 s p arg pat e q f g a p'). Qed.
Lemma lem8334627 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) : (term1186 A B D P Q lt2 s p arg pat e q f g a p') = (term1187 A B D P Q lt2 s p arg pat e q f g a p').
Proof. exact (eq_refl (term1186 A B D P Q lt2 s p arg pat e q f g a p')). Qed.
Lemma lem8334628 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) : term1187 A B D P Q lt2 s p arg pat e q f g a p'.
Proof. exact (EQ_MP (@lem8334627 A B D P Q lt2 s p arg pat e q f g a p') (@lem8334626 A B D P Q lt2 s p arg pat e q f g a p')). Qed.
Lemma lem8334629 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) (q' : Prop) : term1188 A B D P Q lt2 s p arg pat e q f g a p' q'.
Proof. exact (@lem8334628 A B D P Q lt2 s p arg pat e q f g a p' q'). Qed.
Lemma lem8334630 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) (q' : Prop) : (term1188 A B D P Q lt2 s p arg pat e q f g a p' q') = (term1189 A B D P Q lt2 s p arg pat e q f g a p' q').
Proof. exact (eq_refl (term1188 A B D P Q lt2 s p arg pat e q f g a p' q')). Qed.
Lemma lem8334631 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) (p' : Prop) (q' : Prop) : term1189 A B D P Q lt2 s p arg pat e q f g a p' q'.
Proof. exact (EQ_MP (@lem8334630 A B D P Q lt2 s p arg pat e q f g a p' q') (@lem8334629 A B D P Q lt2 s p arg pat e q f g a p' q')). Qed.
Lemma lem8334663 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1104 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (eq_refl (term1104 A B P lt2 s a f g)). Qed.
Lemma lem8334664 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (q' : Prop) : term1190 A B D P Q p arg pat e q lt2 s a f g q'.
Proof. exact (@lem8334631 A B D P Q lt2 s p arg pat e q f g a (term1104 A B P lt2 s a f g) q'). Qed.
Lemma lem8334665 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (q' : Prop) : term1191 A B D P Q p arg pat e q lt2 s a f g q'.
Proof. exact (@lem8334664 A B D P Q p arg pat e q lt2 s a f g q' (@lem8334663 A B P lt2 s a f g)). Qed.
Lemma lem8334682 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334683 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8334682 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8334684 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (@lem8334683 A B P (term1132 A B D P Q p pat e q) f). Qed.
Lemma lem8334685 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8334686 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1134 A B D P Q p pat e q) = (term1132 A B D P Q p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8334685 A B D P Q p f pat e q)). Qed.
Lemma lem8334687 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8334688 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8334686 A B D P Q p pat e q) (@lem8334687 A B f)). Qed.
Lemma lem8334689 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8334690 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1135 A B D P Q p pat e q f) = (term1136 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8334689 P) (@lem8334688 A B D P Q p pat e q f)). Qed.
Lemma lem8334691 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8334692 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f)) = ((term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q)).
Proof. exact (MK_COMB (@lem8334690 A B D P Q p pat e q f) (@lem8334691 A B D P Q p f pat e q)). Qed.
Lemma lem8334693 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (EQ_MP (@lem8334692 A B D P Q p f pat e q) (@lem8334684 A B D P Q p pat e q f)). Qed.
Lemma lem8334704 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334705 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q f a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8334693 A B D P Q p f pat e q) (@lem8334704 P a)). Qed.
Lemma lem8334707 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334708 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8334707 P Prop f y). Qed.
Lemma lem8334709 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (@lem8334708 P (term1133 A B D P Q p f pat e q) a). Qed.
Lemma lem8334710 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1138 A B D P Q p f pat e q x) = (term1140 A B D P Q p f pat e q x).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q x)). Qed.
Lemma lem8334711 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1141 A B D P Q p f pat e q) = (term1133 A B D P Q p f pat e q).
Proof. exact (fun_ext (fun x : P => @lem8334710 A B D P Q p f pat e q x)). Qed.
Lemma lem8334712 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334713 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8334711 A B D P Q p f pat e q) (@lem8334712 P a)). Qed.
Lemma lem8334714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8334715 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1142 A B D P Q p f pat e q a) = (term1143 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8334714) (@lem8334713 A B D P Q p f pat e q a)). Qed.
Lemma lem8334716 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q a)). Qed.
Lemma lem8334717 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a)) = ((term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a)).
Proof. exact (MK_COMB (@lem8334715 A B D P Q p f pat e q a) (@lem8334716 A B D P Q p f pat e q a)). Qed.
Lemma lem8334718 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (EQ_MP (@lem8334717 A B D P Q p f pat e q a) (@lem8334709 A B D P Q p f pat e q a)). Qed.
Lemma lem8334729 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q f a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (TRANS (@lem8334705 A B D P Q p f pat e q a) (@lem8334718 A B D P Q p f pat e q a)). Qed.
Lemma lem8334730 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8334731 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1192 A B D P Q p pat e q f a) = (term1193 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8334730) (@lem8334729 A B D P Q p f pat e q a)). Qed.
Lemma lem8334743 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334744 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8334743 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8334745 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1130 A B D P Q p pat e q g) = (term1131 A B D P Q p pat e q g).
Proof. exact (@lem8334744 A B P (term1132 A B D P Q p pat e q) g). Qed.
Lemma lem8334746 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8334747 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1134 A B D P Q p pat e q) = (term1132 A B D P Q p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8334746 A B D P Q p f pat e q)). Qed.
Lemma lem8334748 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8334749 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1130 A B D P Q p pat e q g) = (term1131 A B D P Q p pat e q g).
Proof. exact (MK_COMB (@lem8334747 A B D P Q p pat e q) (@lem8334748 A B g)). Qed.
Lemma lem8334750 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8334751 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1135 A B D P Q p pat e q g) = (term1136 A B D P Q p pat e q g).
Proof. exact (MK_COMB (@lem8334750 P) (@lem8334749 A B D P Q p pat e q g)). Qed.
Lemma lem8334752 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q g) = (term1133 A B D P Q p g pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q g)). Qed.
Lemma lem8334753 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1130 A B D P Q p pat e q g) = (term1131 A B D P Q p pat e q g)) = ((term1131 A B D P Q p pat e q g) = (term1133 A B D P Q p g pat e q)).
Proof. exact (MK_COMB (@lem8334751 A B D P Q p pat e q g) (@lem8334752 A B D P Q p g pat e q)). Qed.
Lemma lem8334754 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q g) = (term1133 A B D P Q p g pat e q).
Proof. exact (EQ_MP (@lem8334753 A B D P Q p g pat e q) (@lem8334745 A B D P Q p pat e q g)). Qed.
Lemma lem8334765 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334766 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q g a) = (term1138 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8334754 A B D P Q p g pat e q) (@lem8334765 P a)). Qed.
Lemma lem8334768 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334769 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8334768 P Prop f y). Qed.
Lemma lem8334770 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p g pat e q a) = (term1138 A B D P Q p g pat e q a).
Proof. exact (@lem8334769 P (term1133 A B D P Q p g pat e q) a). Qed.
Lemma lem8334771 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1138 A B D P Q p g pat e q x) = (term1140 A B D P Q p g pat e q x).
Proof. exact (eq_refl (term1138 A B D P Q p g pat e q x)). Qed.
Lemma lem8334772 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1141 A B D P Q p g pat e q) = (term1133 A B D P Q p g pat e q).
Proof. exact (fun_ext (fun x : P => @lem8334771 A B D P Q p g pat e q x)). Qed.
Lemma lem8334773 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334774 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p g pat e q a) = (term1138 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8334772 A B D P Q p g pat e q) (@lem8334773 P a)). Qed.
Lemma lem8334775 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8334776 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1142 A B D P Q p g pat e q a) = (term1143 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8334775) (@lem8334774 A B D P Q p g pat e q a)). Qed.
Lemma lem8334777 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (eq_refl (term1138 A B D P Q p g pat e q a)). Qed.
Lemma lem8334778 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1139 A B D P Q p g pat e q a) = (term1138 A B D P Q p g pat e q a)) = ((term1138 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a)).
Proof. exact (MK_COMB (@lem8334776 A B D P Q p g pat e q a) (@lem8334777 A B D P Q p g pat e q a)). Qed.
Lemma lem8334779 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (EQ_MP (@lem8334778 A B D P Q p g pat e q a) (@lem8334770 A B D P Q p g pat e q a)). Qed.
Lemma lem8334790 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q g a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (TRANS (@lem8334766 A B D P Q p g pat e q a) (@lem8334779 A B D P Q p g pat e q a)). Qed.
Lemma lem8334791 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1137 A B D P Q p pat e q f a) = (term1137 A B D P Q p pat e q g a)) = ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a)).
Proof. exact (MK_COMB (@lem8334731 A B D P Q p f pat e q a) (@lem8334790 A B D P Q p g pat e q a)). Qed.
Lemma lem8334814 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8334815 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1194 A B D P Q f p pat e q g a) = (term1195 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8334814) (@lem8334791 A B D P Q f p g pat e q a)). Qed.
Lemma lem8334843 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334844 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1146 A B P f y) = (f y).
Proof. exact (@lem8334843 (A -> B) (P -> A) f y). Qed.
Lemma lem8334845 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (@lem8334844 A B P (term1149 A B D P Q arg pat e q) f). Qed.
Lemma lem8334846 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8334847 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1151 A B D P Q arg pat e q) = (term1149 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8334846 A B D P Q f arg pat e q)). Qed.
Lemma lem8334848 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8334849 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8334847 A B D P Q arg pat e q) (@lem8334848 A B f)). Qed.
Lemma lem8334850 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8334851 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1152 A B D P Q arg pat e q f) = (term1153 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8334850 A P) (@lem8334849 A B D P Q arg pat e q f)). Qed.
Lemma lem8334852 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8334853 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f)) = ((term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q)).
Proof. exact (MK_COMB (@lem8334851 A B D P Q arg pat e q f) (@lem8334852 A B D P Q f arg pat e q)). Qed.
Lemma lem8334854 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (EQ_MP (@lem8334853 A B D P Q f arg pat e q) (@lem8334845 A B D P Q arg pat e q f)). Qed.
Lemma lem8334859 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334860 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334854 A B D P Q f arg pat e q) (@lem8334859 P a)). Qed.
Lemma lem8334862 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334863 {A P : Type'} (f : P -> A) (y : P) : (term138 A P f y) = (f y).
Proof. exact (@lem8334862 P A f y). Qed.
Lemma lem8334864 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (@lem8334863 A P (term1150 A D P Q arg pat e q) a). Qed.
Lemma lem8334865 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1155 A D P Q arg pat e q x) = (term1157 A D P Q arg pat e q x).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q x)). Qed.
Lemma lem8334866 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1158 A D P Q arg pat e q) = (term1150 A D P Q arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8334865 A D P Q arg pat e q x)). Qed.
Lemma lem8334867 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334868 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334866 A D P Q arg pat e q) (@lem8334867 P a)). Qed.
Lemma lem8334869 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8334870 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1159 A D P Q arg pat e q a) = (term1160 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334869 A) (@lem8334868 A D P Q arg pat e q a)). Qed.
Lemma lem8334871 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q a)). Qed.
Lemma lem8334872 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a)) = ((term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)).
Proof. exact (MK_COMB (@lem8334870 A D P Q arg pat e q a) (@lem8334871 A D P Q arg pat e q a)). Qed.
Lemma lem8334873 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (EQ_MP (@lem8334872 A D P Q arg pat e q a) (@lem8334864 A D P Q arg pat e q a)). Qed.
Lemma lem8334878 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1157 A D P Q arg pat e q a).
Proof. exact (TRANS (@lem8334860 A B D P Q f arg pat e q a) (@lem8334873 A D P Q arg pat e q a)). Qed.
Lemma lem8334879 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8334880 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1196 A B D P Q arg pat e q f a) = (term1197 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334879 A) (@lem8334878 A B D P Q f arg pat e q a)). Qed.
Lemma lem8334886 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334887 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1146 A B P f y) = (f y).
Proof. exact (@lem8334886 (A -> B) (P -> A) f y). Qed.
Lemma lem8334888 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1147 A B D P Q arg pat e q g) = (term1148 A B D P Q arg pat e q g).
Proof. exact (@lem8334887 A B P (term1149 A B D P Q arg pat e q) g). Qed.
Lemma lem8334889 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8334890 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1151 A B D P Q arg pat e q) = (term1149 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8334889 A B D P Q f arg pat e q)). Qed.
Lemma lem8334891 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8334892 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1147 A B D P Q arg pat e q g) = (term1148 A B D P Q arg pat e q g).
Proof. exact (MK_COMB (@lem8334890 A B D P Q arg pat e q) (@lem8334891 A B g)). Qed.
Lemma lem8334893 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8334894 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) : (term1152 A B D P Q arg pat e q g) = (term1153 A B D P Q arg pat e q g).
Proof. exact (MK_COMB (@lem8334893 A P) (@lem8334892 A B D P Q arg pat e q g)). Qed.
Lemma lem8334895 {A B D P Q : Type'} (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q g) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q g)). Qed.
Lemma lem8334896 {A B D P Q : Type'} (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1147 A B D P Q arg pat e q g) = (term1148 A B D P Q arg pat e q g)) = ((term1148 A B D P Q arg pat e q g) = (term1150 A D P Q arg pat e q)).
Proof. exact (MK_COMB (@lem8334894 A B D P Q arg pat e q g) (@lem8334895 A B D P Q g arg pat e q)). Qed.
Lemma lem8334897 {A B D P Q : Type'} (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q g) = (term1150 A D P Q arg pat e q).
Proof. exact (EQ_MP (@lem8334896 A B D P Q g arg pat e q) (@lem8334888 A B D P Q arg pat e q g)). Qed.
Lemma lem8334902 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334903 {A B D P Q : Type'} (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q g a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334897 A B D P Q g arg pat e q) (@lem8334902 P a)). Qed.
Lemma lem8334905 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334906 {A P : Type'} (f : P -> A) (y : P) : (term138 A P f y) = (f y).
Proof. exact (@lem8334905 P A f y). Qed.
Lemma lem8334907 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (@lem8334906 A P (term1150 A D P Q arg pat e q) a). Qed.
Lemma lem8334908 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1155 A D P Q arg pat e q x) = (term1157 A D P Q arg pat e q x).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q x)). Qed.
Lemma lem8334909 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1158 A D P Q arg pat e q) = (term1150 A D P Q arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8334908 A D P Q arg pat e q x)). Qed.
Lemma lem8334910 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334911 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334909 A D P Q arg pat e q) (@lem8334910 P a)). Qed.
Lemma lem8334912 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8334913 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1159 A D P Q arg pat e q a) = (term1160 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8334912 A) (@lem8334911 A D P Q arg pat e q a)). Qed.
Lemma lem8334914 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q a)). Qed.
Lemma lem8334915 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a)) = ((term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)).
Proof. exact (MK_COMB (@lem8334913 A D P Q arg pat e q a) (@lem8334914 A D P Q arg pat e q a)). Qed.
Lemma lem8334916 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (EQ_MP (@lem8334915 A D P Q arg pat e q a) (@lem8334907 A D P Q arg pat e q a)). Qed.
Lemma lem8334921 {A B D P Q : Type'} (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q g a) = (term1157 A D P Q arg pat e q a).
Proof. exact (TRANS (@lem8334903 A B D P Q g arg pat e q a) (@lem8334916 A D P Q arg pat e q a)). Qed.
Lemma lem8334922 {A B D P Q : Type'} (f : A -> B) (g : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1154 A B D P Q arg pat e q f a) = (term1154 A B D P Q arg pat e q g a)) = ((term1157 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)).
Proof. exact (MK_COMB (@lem8334880 A B D P Q f arg pat e q a) (@lem8334921 A B D P Q g arg pat e q a)). Qed.
Lemma lem8334924 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8334925 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem8334924 A x). Qed.
Lemma lem8334926 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1157 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)) = True.
Proof. exact (@lem8334925 A (term1157 A D P Q arg pat e q a)). Qed.
Lemma lem8334927 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) (a : P) : ((term1154 A B D P Q arg pat e q f a) = (term1154 A B D P Q arg pat e q g a)) = True.
Proof. exact (TRANS (@lem8334922 A B D P Q f g arg pat e q a) (@lem8334926 A D P Q arg pat e q a)). Qed.
Lemma lem8334928 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8334929 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (g : A -> B) (a : P) : (term1198 A B D P Q f arg pat e q g a) = (and True).
Proof. exact (MK_COMB (@lem8334928) (@lem8334927 A B D P Q f arg pat e q g a)). Qed.
Lemma lem8334933 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334934 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term130 A B P f y) = (f y).
Proof. exact (@lem8334933 (A -> B) (P -> B) f y). Qed.
Lemma lem8334935 {A B P : Type'} (f : A -> B) : (term1199 A B P f) = (term1200 A B P f).
Proof. exact (@lem8334934 A B P (term1201 A B P) f). Qed.
Lemma lem8334936 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P f)). Qed.
Lemma lem8334937 {A B P : Type'} : (term1203 A B P) = (term1201 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8334936 A B P f)). Qed.
Lemma lem8334938 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8334939 {A B P : Type'} (f : A -> B) : (term1199 A B P f) = (term1200 A B P f).
Proof. exact (MK_COMB (@lem8334937 A B P) (@lem8334938 A B f)). Qed.
Lemma lem8334940 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8334941 {A B P : Type'} (f : A -> B) : (term1204 A B P f) = (term1205 A B P f).
Proof. exact (MK_COMB (@lem8334940 B P) (@lem8334939 A B P f)). Qed.
Lemma lem8334942 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P f)). Qed.
Lemma lem8334943 {A B P : Type'} (f : A -> B) : ((term1199 A B P f) = (term1200 A B P f)) = ((term1200 A B P f) = (term1202 B P)).
Proof. exact (MK_COMB (@lem8334941 A B P f) (@lem8334942 A B P f)). Qed.
Lemma lem8334944 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (EQ_MP (@lem8334943 A B P f) (@lem8334935 A B P f)). Qed.
Lemma lem8334945 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334946 {A B P : Type'} (f : A -> B) (a : P) : (term1206 A B P f a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8334944 A B P f) (@lem8334945 P a)). Qed.
Lemma lem8334948 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334949 {B P : Type'} (f : P -> B) (y : P) : (term138 B P f y) = (f y).
Proof. exact (@lem8334948 P B f y). Qed.
Lemma lem8334950 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (@lem8334949 B P (term1202 B P) a). Qed.
Lemma lem8334951 {B P : Type'} (x : P) : (term1207 B P x) = (term122 B).
Proof. exact (eq_refl (term1207 B P x)). Qed.
Lemma lem8334952 {B P : Type'} : (term1209 B P) = (term1202 B P).
Proof. exact (fun_ext (fun x : P => @lem8334951 B P x)). Qed.
Lemma lem8334953 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334954 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8334952 B P) (@lem8334953 P a)). Qed.
Lemma lem8334955 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8334956 {B P : Type'} (a : P) : (term1210 B P a) = (term1211 B P a).
Proof. exact (MK_COMB (@lem8334955 B) (@lem8334954 B P a)). Qed.
Lemma lem8334957 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (eq_refl (term1207 B P a)). Qed.
Lemma lem8334958 {B P : Type'} (a : P) : ((term1208 B P a) = (term1207 B P a)) = ((term1207 B P a) = (term122 B)).
Proof. exact (MK_COMB (@lem8334956 B P a) (@lem8334957 B P a)). Qed.
Lemma lem8334959 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (EQ_MP (@lem8334958 B P a) (@lem8334950 B P a)). Qed.
Lemma lem8334960 {A B P : Type'} (f : A -> B) (a : P) : (term1206 A B P f a) = (term122 B).
Proof. exact (TRANS (@lem8334946 A B P f a) (@lem8334959 B P a)). Qed.
Lemma lem8334961 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8334962 {A B P : Type'} (f : A -> B) (a : P) : (term1212 A B P f a) = (term1213 B).
Proof. exact (MK_COMB (@lem8334961 B) (@lem8334960 A B P f a)). Qed.
Lemma lem8334964 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334965 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term130 A B P f y) = (f y).
Proof. exact (@lem8334964 (A -> B) (P -> B) f y). Qed.
Lemma lem8334966 {A B P : Type'} (g : A -> B) : (term1199 A B P g) = (term1200 A B P g).
Proof. exact (@lem8334965 A B P (term1201 A B P) g). Qed.
Lemma lem8334967 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P f)). Qed.
Lemma lem8334968 {A B P : Type'} : (term1203 A B P) = (term1201 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8334967 A B P f)). Qed.
Lemma lem8334969 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8334970 {A B P : Type'} (g : A -> B) : (term1199 A B P g) = (term1200 A B P g).
Proof. exact (MK_COMB (@lem8334968 A B P) (@lem8334969 A B g)). Qed.
Lemma lem8334971 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8334972 {A B P : Type'} (g : A -> B) : (term1204 A B P g) = (term1205 A B P g).
Proof. exact (MK_COMB (@lem8334971 B P) (@lem8334970 A B P g)). Qed.
Lemma lem8334973 {A B P : Type'} (g : A -> B) : (term1200 A B P g) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P g)). Qed.
Lemma lem8334974 {A B P : Type'} (g : A -> B) : ((term1199 A B P g) = (term1200 A B P g)) = ((term1200 A B P g) = (term1202 B P)).
Proof. exact (MK_COMB (@lem8334972 A B P g) (@lem8334973 A B P g)). Qed.
Lemma lem8334975 {A B P : Type'} (g : A -> B) : (term1200 A B P g) = (term1202 B P).
Proof. exact (EQ_MP (@lem8334974 A B P g) (@lem8334966 A B P g)). Qed.
Lemma lem8334976 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334977 {A B P : Type'} (g : A -> B) (a : P) : (term1206 A B P g a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8334975 A B P g) (@lem8334976 P a)). Qed.
Lemma lem8334979 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8334980 {B P : Type'} (f : P -> B) (y : P) : (term138 B P f y) = (f y).
Proof. exact (@lem8334979 P B f y). Qed.
Lemma lem8334981 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (@lem8334980 B P (term1202 B P) a). Qed.
Lemma lem8334982 {B P : Type'} (x : P) : (term1207 B P x) = (term122 B).
Proof. exact (eq_refl (term1207 B P x)). Qed.
Lemma lem8334983 {B P : Type'} : (term1209 B P) = (term1202 B P).
Proof. exact (fun_ext (fun x : P => @lem8334982 B P x)). Qed.
Lemma lem8334984 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8334985 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8334983 B P) (@lem8334984 P a)). Qed.
Lemma lem8334986 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8334987 {B P : Type'} (a : P) : (term1210 B P a) = (term1211 B P a).
Proof. exact (MK_COMB (@lem8334986 B) (@lem8334985 B P a)). Qed.
Lemma lem8334988 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (eq_refl (term1207 B P a)). Qed.
Lemma lem8334989 {B P : Type'} (a : P) : ((term1208 B P a) = (term1207 B P a)) = ((term1207 B P a) = (term122 B)).
Proof. exact (MK_COMB (@lem8334987 B P a) (@lem8334988 B P a)). Qed.
Lemma lem8334990 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (EQ_MP (@lem8334989 B P a) (@lem8334981 B P a)). Qed.
Lemma lem8334991 {A B P : Type'} (g : A -> B) (a : P) : (term1206 A B P g a) = (term122 B).
Proof. exact (TRANS (@lem8334977 A B P g a) (@lem8334990 B P a)). Qed.
Lemma lem8334992 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : ((term1206 A B P f a) = (term1206 A B P g a)) = ((term122 B) = (term122 B)).
Proof. exact (MK_COMB (@lem8334962 A B P f a) (@lem8334991 A B P g a)). Qed.
Lemma lem8334994 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8334995 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8334994 B x). Qed.
Lemma lem8334996 {B : Type'} : ((term122 B) = (term122 B)) = True.
Proof. exact (@lem8334995 B (term122 B)). Qed.
Lemma lem8334997 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : ((term1206 A B P f a) = (term1206 A B P g a)) = True.
Proof. exact (TRANS (@lem8334992 A B P f g a) (@lem8334996 B)). Qed.
Lemma lem8334998 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) : (term1214 A B D P Q arg pat e q f g a) = (True /\ True).
Proof. exact (MK_COMB (@lem8334929 A B D P Q f arg pat e q g a) (@lem8334997 A B P f g a)). Qed.
Lemma lem8335000 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8335001 : (True /\ True) = True.
Proof. exact (@lem8335000 True). Qed.
Lemma lem8335002 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (g : A -> B) (a : P) : (term1214 A B D P Q arg pat e q f g a) = True.
Proof. exact (TRANS (@lem8334998 A B D P Q arg pat e q f g a) (@lem8335001)). Qed.
Lemma lem8335003 {A B D P Q : Type'} (arg : type1475 A P Q) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1185 A B D P Q p arg pat e q f g a) = (term1215 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8334815 A B D P Q f p g pat e q a) (@lem8335002 A B D P Q arg pat e q f g a)). Qed.
Lemma lem8335005 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8335006 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1215 A B D P Q f p g pat e q a) = ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a)).
Proof. exact (@lem8335005 ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a))). Qed.
Lemma lem8335029 {A B D P Q : Type'} (arg : type1475 A P Q) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1185 A B D P Q p arg pat e q f g a) = ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a)).
Proof. exact (TRANS (@lem8335003 A B D P Q arg f p g pat e q a) (@lem8335006 A B D P Q f p g pat e q a)). Qed.
Lemma lem8335030 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (arg : type1475 A P Q) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1216 A B D P Q lt2 s arg f p g pat e q a.
Proof. exact (fun h0 : term1104 A B P lt2 s a f g => @lem8335029 A B D P Q arg f p g pat e q a). Qed.
Lemma lem8335031 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1217 A B D P Q arg lt2 s f p g pat e q a.
Proof. exact (@lem8334665 A B D P Q p arg pat e q lt2 s a f g ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a))). Qed.
Lemma lem8335032 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1218 A B D P Q lt2 s p arg pat e q f g a) = (term1219 A B D P Q lt2 s f p g pat e q a).
Proof. exact (@lem8335031 A B D P Q arg lt2 s f p g pat e q a (@lem8335030 A B D P Q lt2 s arg f p g pat e q a)). Qed.
Lemma lem8335170 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1220 A B D P Q lt2 s p arg pat e q f g) = (term1221 A B D P Q lt2 s f p g pat e q).
Proof. exact (fun_ext (fun a : P => @lem8335032 A B D P Q arg lt2 s f p g pat e q a)). Qed.
Lemma lem8335308 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8335309 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1222 A B D P Q lt2 s p arg pat e q f g) = (term1223 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8335308 P) (@lem8335170 A B D P Q arg lt2 s f p g pat e q)). Qed.
Lemma lem8335451 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1224 A B D P Q lt2 s p arg pat e q f) = (term1225 A B D P Q lt2 s f p pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8335309 A B D P Q arg lt2 s f p g pat e q)). Qed.
Lemma lem8335593 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8335594 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1226 A B D P Q lt2 s p arg pat e q f) = (term1227 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8335593 A B) (@lem8335451 A B D P Q arg lt2 s f p pat e q)). Qed.
Lemma lem8335740 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1228 A B D P Q lt2 s p arg pat e q) = (term1229 A B D P Q lt2 s p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8335594 A B D P Q arg lt2 s f p pat e q)). Qed.
Lemma lem8335886 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8335887 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1230 A B D P Q lt2 s p arg pat e q) = (term1231 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8335886 A B) (@lem8335740 A B D P Q arg lt2 s p pat e q)). Qed.
Lemma lem8336037 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8336038 {A B D P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1232 A B D P Q lt2 s p arg pat e q) = (term1233 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8336037) (@lem8335887 A B D P Q arg lt2 s p pat e q)). Qed.
Lemma lem8336199 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term180 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem8336200 (p : Prop) (q : Prop) (p' : Prop) : term181 p q p'.
Proof. exact (fun q' : Prop => @lem8336199 p q p' q'). Qed.
Lemma lem8336201 (p : Prop) (q : Prop) : term182 p q.
Proof. exact (fun p' : Prop => @lem8336200 p q p'). Qed.
Lemma lem8336202 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) : term1234 A B D P Q p arg pat e q f a.
Proof. exact (@lem8336201 (p f a) ((term209 A B D P Q pat e q f arg a) = (term1235 A B D P Q p arg pat e q f a))). Qed.
Lemma lem8336203 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) : term1236 A B D P Q p arg pat e q f a p'.
Proof. exact (@lem8336202 A B D P Q p arg pat e q f a p'). Qed.
Lemma lem8336204 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) : (term1236 A B D P Q p arg pat e q f a p') = (term1237 A B D P Q p arg pat e q f a p').
Proof. exact (eq_refl (term1236 A B D P Q p arg pat e q f a p')). Qed.
Lemma lem8336205 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) : term1237 A B D P Q p arg pat e q f a p'.
Proof. exact (EQ_MP (@lem8336204 A B D P Q p arg pat e q f a p') (@lem8336203 A B D P Q p arg pat e q f a p')). Qed.
Lemma lem8336206 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : term1238 A B D P Q p arg pat e q f a p' q'.
Proof. exact (@lem8336205 A B D P Q p arg pat e q f a p' q'). Qed.
Lemma lem8336207 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : (term1238 A B D P Q p arg pat e q f a p' q') = (term1239 A B D P Q p arg pat e q f a p' q').
Proof. exact (eq_refl (term1238 A B D P Q p arg pat e q f a p' q')). Qed.
Lemma lem8336208 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (p' : Prop) (q' : Prop) : term1239 A B D P Q p arg pat e q f a p' q'.
Proof. exact (EQ_MP (@lem8336207 A B D P Q p arg pat e q f a p' q') (@lem8336206 A B D P Q p arg pat e q f a p' q')). Qed.
Lemma lem8336209 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (p f a).
Proof. exact (eq_refl (p f a)). Qed.
Lemma lem8336210 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (q' : Prop) : term1240 A B D P Q arg pat e q p f a q'.
Proof. exact (@lem8336208 A B D P Q p arg pat e q f a (p f a) q'). Qed.
Lemma lem8336211 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (q' : Prop) : term1241 A B D P Q arg pat e q p f a q'.
Proof. exact (@lem8336210 A B D P Q arg pat e q p f a q' (@lem8336209 A B P p f a)). Qed.
Lemma lem8336212 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8336213 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = ((p f a) = True).
Proof. exact (@lem7 (p f a)). Qed.
Lemma lem8336291 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term190 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem8336292 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term191 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem8336291 _2963 g t e g' t' e'). Qed.
Lemma lem8336293 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term192 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem8336292 _2963 g t e g' t'). Qed.
Lemma lem8336294 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term193 _2963 g t e.
Proof. exact (fun g' : Prop => @lem8336293 _2963 g t e g'). Qed.
Lemma lem8336295 {B : Type'} (g : Prop) (t : B) (e : B) : term193 B g t e.
Proof. exact (@lem8336294 B g t e). Qed.
Lemma lem8336296 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) : term1242 A B D P Q p arg pat e q f a.
Proof. exact (@lem8336295 B (term1137 A B D P Q p pat e q f a) (term1243 A B D P Q arg pat e q f a) (term1206 A B P f a)). Qed.
Lemma lem8336297 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) : term1244 A B D P Q p arg pat e q f a g'.
Proof. exact (@lem8336296 A B D P Q p arg pat e q f a g'). Qed.
Lemma lem8336298 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) : (term1244 A B D P Q p arg pat e q f a g') = (term1245 A B D P Q p arg pat e q f a g').
Proof. exact (eq_refl (term1244 A B D P Q p arg pat e q f a g')). Qed.
Lemma lem8336299 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) : term1245 A B D P Q p arg pat e q f a g'.
Proof. exact (EQ_MP (@lem8336298 A B D P Q p arg pat e q f a g') (@lem8336297 A B D P Q p arg pat e q f a g')). Qed.
Lemma lem8336300 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) : term1246 A B D P Q p arg pat e q f a g' t'.
Proof. exact (@lem8336299 A B D P Q p arg pat e q f a g' t'). Qed.
Lemma lem8336301 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) : (term1246 A B D P Q p arg pat e q f a g' t') = (term1247 A B D P Q p arg pat e q f a g' t').
Proof. exact (eq_refl (term1246 A B D P Q p arg pat e q f a g' t')). Qed.
Lemma lem8336302 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) : term1247 A B D P Q p arg pat e q f a g' t'.
Proof. exact (EQ_MP (@lem8336301 A B D P Q p arg pat e q f a g' t') (@lem8336300 A B D P Q p arg pat e q f a g' t')). Qed.
Lemma lem8336303 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) (e' : B) : term1248 A B D P Q p arg pat e q f a g' t' e'.
Proof. exact (@lem8336302 A B D P Q p arg pat e q f a g' t' e'). Qed.
Lemma lem8336304 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) (e' : B) : (term1248 A B D P Q p arg pat e q f a g' t' e') = (term1249 A B D P Q p arg pat e q f a g' t' e').
Proof. exact (eq_refl (term1248 A B D P Q p arg pat e q f a g' t' e')). Qed.
Lemma lem8336305 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) (g' : Prop) (t' : B) (e' : B) : term1249 A B D P Q p arg pat e q f a g' t' e'.
Proof. exact (EQ_MP (@lem8336304 A B D P Q p arg pat e q f a g' t' e') (@lem8336303 A B D P Q p arg pat e q f a g' t' e')). Qed.
Lemma lem8336307 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336308 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term1094 A B P f y) = (f y).
Proof. exact (@lem8336307 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8336309 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (@lem8336308 A B P (term1132 A B D P Q p pat e q) f). Qed.
Lemma lem8336310 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8336311 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1134 A B D P Q p pat e q) = (term1132 A B D P Q p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8336310 A B D P Q p f pat e q)). Qed.
Lemma lem8336312 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8336313 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8336311 A B D P Q p pat e q) (@lem8336312 A B f)). Qed.
Lemma lem8336314 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8336315 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1135 A B D P Q p pat e q f) = (term1136 A B D P Q p pat e q f).
Proof. exact (MK_COMB (@lem8336314 P) (@lem8336313 A B D P Q p pat e q f)). Qed.
Lemma lem8336316 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (eq_refl (term1131 A B D P Q p pat e q f)). Qed.
Lemma lem8336317 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1130 A B D P Q p pat e q f) = (term1131 A B D P Q p pat e q f)) = ((term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q)).
Proof. exact (MK_COMB (@lem8336315 A B D P Q p pat e q f) (@lem8336316 A B D P Q p f pat e q)). Qed.
Lemma lem8336318 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1131 A B D P Q p pat e q f) = (term1133 A B D P Q p f pat e q).
Proof. exact (EQ_MP (@lem8336317 A B D P Q p f pat e q) (@lem8336309 A B D P Q p pat e q f)). Qed.
Lemma lem8336329 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336330 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1137 A B D P Q p pat e q f a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8336318 A B D P Q p f pat e q) (@lem8336329 P a)). Qed.
Lemma lem8336332 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336333 {P : Type'} (f : P -> Prop) (y : P) : (term1099 P f y) = (f y).
Proof. exact (@lem8336332 P Prop f y). Qed.
Lemma lem8336334 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (@lem8336333 P (term1133 A B D P Q p f pat e q) a). Qed.
Lemma lem8336335 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1138 A B D P Q p f pat e q x) = (term1140 A B D P Q p f pat e q x).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q x)). Qed.
Lemma lem8336336 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1141 A B D P Q p f pat e q) = (term1133 A B D P Q p f pat e q).
Proof. exact (fun_ext (fun x : P => @lem8336335 A B D P Q p f pat e q x)). Qed.
Lemma lem8336337 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336338 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8336336 A B D P Q p f pat e q) (@lem8336337 P a)). Qed.
Lemma lem8336339 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8336340 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1142 A B D P Q p f pat e q a) = (term1143 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8336339) (@lem8336338 A B D P Q p f pat e q a)). Qed.
Lemma lem8336341 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term1138 A B D P Q p f pat e q a)). Qed.
Lemma lem8336342 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1139 A B D P Q p f pat e q a) = (term1138 A B D P Q p f pat e q a)) = ((term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a)).
Proof. exact (MK_COMB (@lem8336340 A B D P Q p f pat e q a) (@lem8336341 A B D P Q p f pat e q a)). Qed.
Lemma lem8336343 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1138 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (EQ_MP (@lem8336342 A B D P Q p f pat e q a) (@lem8336334 A B D P Q p f pat e q a)). Qed.
Lemma lem8336347 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8336213 A B P p f a) (@lem8336212 A B P p f a h1)). Qed.
Lemma lem8336348 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8336349 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1250 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8336348) (@lem8336347 A B P p f a h1)). Qed.
Lemma lem8336358 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (eq_refl (term179 D P Q pat e q a)). Qed.
Lemma lem8336359 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1140 A B D P Q p f pat e q a) = (term1251 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8336349 A B P p f a h1) (@lem8336358 D P Q pat e q a)). Qed.
Lemma lem8336361 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8336362 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1251 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (@lem8336361 (term179 D P Q pat e q a)). Qed.
Lemma lem8336371 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1140 A B D P Q p f pat e q a) = (term179 D P Q pat e q a).
Proof. exact (TRANS (@lem8336359 A B D P Q pat e q p f a h1) (@lem8336362 D P Q pat e q a)). Qed.
Lemma lem8336372 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1138 A B D P Q p f pat e q a) = (term179 D P Q pat e q a).
Proof. exact (TRANS (@lem8336343 A B D P Q p f pat e q a) (@lem8336371 A B D P Q pat e q p f a h1)). Qed.
Lemma lem8336373 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1137 A B D P Q p pat e q f a) = (term179 D P Q pat e q a).
Proof. exact (TRANS (@lem8336330 A B D P Q p f pat e q a) (@lem8336372 A B D P Q pat e q p f a h1)). Qed.
Lemma lem8336374 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t' : B) (e' : B) : term1252 A B D P Q p arg f pat e q a t' e'.
Proof. exact (@lem8336305 A B D P Q p arg pat e q f a (term179 D P Q pat e q a) t' e'). Qed.
Lemma lem8336375 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t' : B) (e' : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : term1253 A B D P Q p arg f pat e q a t' e'.
Proof. exact (@lem8336374 A B D P Q p arg f pat e q a t' e' (@lem8336373 A B D P Q pat e q p f a h1)). Qed.
Lemma lem8336380 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336381 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1146 A B P f y) = (f y).
Proof. exact (@lem8336380 (A -> B) (P -> A) f y). Qed.
Lemma lem8336382 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (@lem8336381 A B P (term1149 A B D P Q arg pat e q) f). Qed.
Lemma lem8336383 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8336384 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1151 A B D P Q arg pat e q) = (term1149 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8336383 A B D P Q f arg pat e q)). Qed.
Lemma lem8336385 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8336386 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8336384 A B D P Q arg pat e q) (@lem8336385 A B f)). Qed.
Lemma lem8336387 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8336388 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1152 A B D P Q arg pat e q f) = (term1153 A B D P Q arg pat e q f).
Proof. exact (MK_COMB (@lem8336387 A P) (@lem8336386 A B D P Q arg pat e q f)). Qed.
Lemma lem8336389 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (eq_refl (term1148 A B D P Q arg pat e q f)). Qed.
Lemma lem8336390 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1147 A B D P Q arg pat e q f) = (term1148 A B D P Q arg pat e q f)) = ((term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q)).
Proof. exact (MK_COMB (@lem8336388 A B D P Q arg pat e q f) (@lem8336389 A B D P Q f arg pat e q)). Qed.
Lemma lem8336391 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1148 A B D P Q arg pat e q f) = (term1150 A D P Q arg pat e q).
Proof. exact (EQ_MP (@lem8336390 A B D P Q f arg pat e q) (@lem8336382 A B D P Q arg pat e q f)). Qed.
Lemma lem8336396 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336397 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8336391 A B D P Q f arg pat e q) (@lem8336396 P a)). Qed.
Lemma lem8336399 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336400 {A P : Type'} (f : P -> A) (y : P) : (term138 A P f y) = (f y).
Proof. exact (@lem8336399 P A f y). Qed.
Lemma lem8336401 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (@lem8336400 A P (term1150 A D P Q arg pat e q) a). Qed.
Lemma lem8336402 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (x : P) : (term1155 A D P Q arg pat e q x) = (term1157 A D P Q arg pat e q x).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q x)). Qed.
Lemma lem8336403 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1158 A D P Q arg pat e q) = (term1150 A D P Q arg pat e q).
Proof. exact (fun_ext (fun x : P => @lem8336402 A D P Q arg pat e q x)). Qed.
Lemma lem8336404 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336405 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8336403 A D P Q arg pat e q) (@lem8336404 P a)). Qed.
Lemma lem8336406 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8336407 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1159 A D P Q arg pat e q a) = (term1160 A D P Q arg pat e q a).
Proof. exact (MK_COMB (@lem8336406 A) (@lem8336405 A D P Q arg pat e q a)). Qed.
Lemma lem8336408 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (eq_refl (term1155 A D P Q arg pat e q a)). Qed.
Lemma lem8336409 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1156 A D P Q arg pat e q a) = (term1155 A D P Q arg pat e q a)) = ((term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a)).
Proof. exact (MK_COMB (@lem8336407 A D P Q arg pat e q a) (@lem8336408 A D P Q arg pat e q a)). Qed.
Lemma lem8336410 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1155 A D P Q arg pat e q a) = (term1157 A D P Q arg pat e q a).
Proof. exact (EQ_MP (@lem8336409 A D P Q arg pat e q a) (@lem8336401 A D P Q arg pat e q a)). Qed.
Lemma lem8336415 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1154 A B D P Q arg pat e q f a) = (term1157 A D P Q arg pat e q a).
Proof. exact (TRANS (@lem8336397 A B D P Q f arg pat e q a) (@lem8336410 A D P Q arg pat e q a)). Qed.
Lemma lem8336416 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8336417 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1243 A B D P Q arg pat e q f a) = (term1254 A B D P Q f arg pat e q a).
Proof. exact (MK_COMB (@lem8336416 A B f) (@lem8336415 A B D P Q f arg pat e q a)). Qed.
Lemma lem8336422 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1255 A B D P Q f arg pat e q a.
Proof. exact (fun h0 : term179 D P Q pat e q a => @lem8336417 A B D P Q f arg pat e q a). Qed.
Lemma lem8336423 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (e' : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : term1256 A B D P Q p f arg pat e q a e'.
Proof. exact (@lem8336375 A B D P Q arg pat e q (term1254 A B D P Q f arg pat e q a) e' p f a h1). Qed.
Lemma lem8336424 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (e' : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : term1257 A B D P Q p f arg pat e q a e'.
Proof. exact (@lem8336423 A B D P Q arg pat e q e' p f a h1 (@lem8336422 A B D P Q f arg pat e q a)). Qed.
Lemma lem8336429 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336430 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term130 A B P f y) = (f y).
Proof. exact (@lem8336429 (A -> B) (P -> B) f y). Qed.
Lemma lem8336431 {A B P : Type'} (f : A -> B) : (term1199 A B P f) = (term1200 A B P f).
Proof. exact (@lem8336430 A B P (term1201 A B P) f). Qed.
Lemma lem8336432 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P f)). Qed.
Lemma lem8336433 {A B P : Type'} : (term1203 A B P) = (term1201 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8336432 A B P f)). Qed.
Lemma lem8336434 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8336435 {A B P : Type'} (f : A -> B) : (term1199 A B P f) = (term1200 A B P f).
Proof. exact (MK_COMB (@lem8336433 A B P) (@lem8336434 A B f)). Qed.
Lemma lem8336436 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8336437 {A B P : Type'} (f : A -> B) : (term1204 A B P f) = (term1205 A B P f).
Proof. exact (MK_COMB (@lem8336436 B P) (@lem8336435 A B P f)). Qed.
Lemma lem8336438 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (eq_refl (term1200 A B P f)). Qed.
Lemma lem8336439 {A B P : Type'} (f : A -> B) : ((term1199 A B P f) = (term1200 A B P f)) = ((term1200 A B P f) = (term1202 B P)).
Proof. exact (MK_COMB (@lem8336437 A B P f) (@lem8336438 A B P f)). Qed.
Lemma lem8336440 {A B P : Type'} (f : A -> B) : (term1200 A B P f) = (term1202 B P).
Proof. exact (EQ_MP (@lem8336439 A B P f) (@lem8336431 A B P f)). Qed.
Lemma lem8336441 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336442 {A B P : Type'} (f : A -> B) (a : P) : (term1206 A B P f a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8336440 A B P f) (@lem8336441 P a)). Qed.
Lemma lem8336444 {A B : Type'} (f : A -> B) (y : A) : (term45 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8336445 {B P : Type'} (f : P -> B) (y : P) : (term138 B P f y) = (f y).
Proof. exact (@lem8336444 P B f y). Qed.
Lemma lem8336446 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (@lem8336445 B P (term1202 B P) a). Qed.
Lemma lem8336447 {B P : Type'} (x : P) : (term1207 B P x) = (term122 B).
Proof. exact (eq_refl (term1207 B P x)). Qed.
Lemma lem8336448 {B P : Type'} : (term1209 B P) = (term1202 B P).
Proof. exact (fun_ext (fun x : P => @lem8336447 B P x)). Qed.
Lemma lem8336449 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8336450 {B P : Type'} (a : P) : (term1208 B P a) = (term1207 B P a).
Proof. exact (MK_COMB (@lem8336448 B P) (@lem8336449 P a)). Qed.
Lemma lem8336451 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8336452 {B P : Type'} (a : P) : (term1210 B P a) = (term1211 B P a).
Proof. exact (MK_COMB (@lem8336451 B) (@lem8336450 B P a)). Qed.
Lemma lem8336453 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (eq_refl (term1207 B P a)). Qed.
Lemma lem8336454 {B P : Type'} (a : P) : ((term1208 B P a) = (term1207 B P a)) = ((term1207 B P a) = (term122 B)).
Proof. exact (MK_COMB (@lem8336452 B P a) (@lem8336453 B P a)). Qed.
Lemma lem8336455 {B P : Type'} (a : P) : (term1207 B P a) = (term122 B).
Proof. exact (EQ_MP (@lem8336454 B P a) (@lem8336446 B P a)). Qed.
Lemma lem8336456 {A B P : Type'} (f : A -> B) (a : P) : (term1206 A B P f a) = (term122 B).
Proof. exact (TRANS (@lem8336442 A B P f a) (@lem8336455 B P a)). Qed.
Lemma lem8336457 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (a : P) : term1258 A B D P Q pat e q f a.
Proof. exact (fun h0 : term207 D P Q pat e q a => @lem8336456 A B P f a). Qed.
Lemma lem8336458 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : term1259 A B D P Q p f arg pat e q a.
Proof. exact (@lem8336424 A B D P Q arg pat e q (term122 B) p f a h1). Qed.
Lemma lem8336459 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1235 A B D P Q p arg pat e q f a) = (term1260 A B D P Q f arg pat e q a).
Proof. exact (@lem8336458 A B D P Q arg pat e q p f a h1 (@lem8336457 A B D P Q pat e q f a)). Qed.
Lemma lem8336517 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term210 A B D P Q pat e q f arg a) = (term210 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term210 A B D P Q pat e q f arg a)). Qed.
Lemma lem8336518 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : ((term209 A B D P Q pat e q f arg a) = (term1235 A B D P Q p arg pat e q f a)) = ((term209 A B D P Q pat e q f arg a) = (term1260 A B D P Q f arg pat e q a)).
Proof. exact (MK_COMB (@lem8336517 A B D P Q pat e q f arg a) (@lem8336459 A B D P Q arg pat e q p f a h1)). Qed.
Lemma lem8336651 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1261 A B D P Q p f arg pat e q a.
Proof. exact (fun h0 : p f a => @lem8336518 A B D P Q arg pat e q p f a h0). Qed.
Lemma lem8336652 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1262 A B D P Q p f arg pat e q a.
Proof. exact (@lem8336211 A B D P Q arg pat e q p f a ((term209 A B D P Q pat e q f arg a) = (term1260 A B D P Q f arg pat e q a))). Qed.
Lemma lem8336653 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1263 A B D P Q p arg pat e q f a) = (term1264 A B D P Q p f arg pat e q a).
Proof. exact (@lem8336652 A B D P Q p f arg pat e q a (@lem8336651 A B D P Q p f arg pat e q a)). Qed.
Lemma lem8336941 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1265 A B D P Q p arg pat e q f) = (term1266 A B D P Q p f arg pat e q).
Proof. exact (fun_ext (fun a : P => @lem8336653 A B D P Q p f arg pat e q a)). Qed.
Lemma lem8337229 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8337230 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1267 A B D P Q p arg pat e q f) = (term1268 A B D P Q p f arg pat e q).
Proof. exact (MK_COMB (@lem8337229 P) (@lem8336941 A B D P Q p f arg pat e q)). Qed.
Lemma lem8337522 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1269 A B D P Q p arg pat e q) = (term1270 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8337230 A B D P Q p f arg pat e q)). Qed.
Lemma lem8337814 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8337815 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1271 A B D P Q p arg pat e q) = (term1272 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8337814 A B) (@lem8337522 A B D P Q p arg pat e q)). Qed.
Lemma lem8338111 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1273 A B D P Q lt2 s p arg pat e q) = (term1274 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8336038 A B D P Q arg lt2 s p pat e q) (@lem8337815 A B D P Q p arg pat e q)). Qed.
Lemma lem8338558 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1275 A B D P Q lt2 s p arg pat e q) = (term1276 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8334529 A B D P Q p arg pat e q lt2 s) (@lem8338111 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339082 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1276 A B D P Q lt2 s p arg pat e q) = (term1275 A B D P Q lt2 s p arg pat e q).
Proof. exact (SYM (@lem8338558 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339084 (p : Prop) : p = (term226 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8339085 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1276 A B D P Q lt2 s p arg pat e q) = (term1277 A B D P Q lt2 s p arg pat e q).
Proof. exact (@lem8339084 (term1276 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339086 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1277 A B D P Q lt2 s p arg pat e q) = (term1276 A B D P Q lt2 s p arg pat e q).
Proof. exact (SYM (@lem8339085 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339087 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1278 A B D P Q lt2 s p arg pat e q) : term1278 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339142 {Q : Type'} (P : Q -> Prop) : term1279 Q P.
Proof. exact (@lem19732 Q P). Qed.
Lemma lem8339143 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1280 D P Q pat e q a.
Proof. exact (@lem8339142 Q (term273 D P Q pat e q a)). Qed.
Lemma lem8339144 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1281 D P Q pat e q a) = (term1282 D P Q pat e q a).
Proof. exact (eq_refl (term1281 D P Q pat e q a)). Qed.
Lemma lem8339145 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term502 D P Q pat e q a x) = (term272 D P Q pat e q a x).
Proof. exact (eq_refl (term502 D P Q pat e q a x)). Qed.
Lemma lem8339146 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339147 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term1283 D P Q pat e q a x) = (term1284 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8339146) (@lem8339145 D P Q pat e q a x)). Qed.
Lemma lem8339148 {D P Q : Type'} (x : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1285 D P Q x pat e q a) = (term1286 D P Q x pat e q a).
Proof. exact (MK_COMB (@lem8339147 D P Q pat e q a x) (@lem8339144 D P Q pat e q a)). Qed.
Lemma lem8339149 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1287 D P Q pat e q a) = (term1288 D P Q pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8339148 D P Q x pat e q a)). Qed.
Lemma lem8339150 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8339151 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1280 D P Q pat e q a) = (term1289 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8339150 Q) (@lem8339149 D P Q pat e q a)). Qed.
Lemma lem8339152 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1289 D P Q pat e q a.
Proof. exact (EQ_MP (@lem8339151 D P Q pat e q a) (@lem8339143 D P Q pat e q a)). Qed.
Lemma lem8339153 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1290 D P Q pat e q.
Proof. exact (fun a : P => @lem8339152 D P Q pat e q a). Qed.
Lemma lem8339154 {D P Q : Type'} (pat : Q -> D) (e : P -> D) : term1291 D P Q pat e.
Proof. exact (fun q : type1413 P Q => @lem8339153 D P Q pat e q). Qed.
Lemma lem8339155 {D P Q : Type'} (pat : Q -> D) : term1292 D P Q pat.
Proof. exact (fun e : P -> D => @lem8339154 D P Q pat e). Qed.
Lemma lem8339156 {D P Q : Type'} : term1293 D P Q.
Proof. exact (fun pat : Q -> D => @lem8339155 D P Q pat). Qed.
Lemma lem8339157 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1294 A B D P Q lt2 s p arg pat e q) : term1294 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339158 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1294 A B D P Q lt2 s p arg pat e q) : term1295 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339157 A B D P Q lt2 s p arg pat e q h1 (@lem8339156 D P Q)). Qed.
Lemma lem8339159 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1296 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1294 A B D P Q lt2 s p arg pat e q => @lem8339158 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8339160 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : _112896 = (term1297 D P Q).
Proof. exact (h1). Qed.
Lemma lem8339161 {D Q : Type'} (pat : Q -> D) : pat = pat.
Proof. exact (eq_refl pat). Qed.
Lemma lem8339162 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat) = (term1298 D P Q pat).
Proof. exact (MK_COMB (@lem8339160 D P Q _112896 h1) (@lem8339161 D Q pat)). Qed.
Lemma lem8339163 {D P Q : Type'} (pat : Q -> D) : (term1298 D P Q pat) = (term1299 D P Q pat).
Proof. exact (eq_refl (term1298 D P Q pat)). Qed.
Lemma lem8339164 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1300 D P Q _112896 pat) = (term1300 D P Q _112896 pat).
Proof. exact (eq_refl (term1300 D P Q _112896 pat)). Qed.
Lemma lem8339165 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : ((_112896 pat) = (term1298 D P Q pat)) = ((_112896 pat) = (term1299 D P Q pat)).
Proof. exact (MK_COMB (@lem8339164 D P Q _112896 pat) (@lem8339163 D P Q pat)). Qed.
Lemma lem8339166 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat) = (term1299 D P Q pat).
Proof. exact (EQ_MP (@lem8339165 D P Q _112896 pat) (@lem8339162 D P Q pat _112896 h1)). Qed.
Lemma lem8339167 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8339168 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e) = (term1301 D P Q pat e).
Proof. exact (MK_COMB (@lem8339166 D P Q pat _112896 h1) (@lem8339167 D P e)). Qed.
Lemma lem8339169 {D P Q : Type'} (pat : Q -> D) (e : P -> D) : (term1301 D P Q pat e) = (term1302 D P Q pat e).
Proof. exact (eq_refl (term1301 D P Q pat e)). Qed.
Lemma lem8339170 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1303 D P Q _112896 pat e) = (term1303 D P Q _112896 pat e).
Proof. exact (eq_refl (term1303 D P Q _112896 pat e)). Qed.
Lemma lem8339171 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : ((_112896 pat e) = (term1301 D P Q pat e)) = ((_112896 pat e) = (term1302 D P Q pat e)).
Proof. exact (MK_COMB (@lem8339170 D P Q _112896 pat e) (@lem8339169 D P Q pat e)). Qed.
Lemma lem8339172 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e) = (term1302 D P Q pat e).
Proof. exact (EQ_MP (@lem8339171 D P Q _112896 pat e) (@lem8339168 D P Q pat e _112896 h1)). Qed.
Lemma lem8339173 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8339174 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e q) = (term1304 D P Q pat e q).
Proof. exact (MK_COMB (@lem8339172 D P Q pat e _112896 h1) (@lem8339173 P Q q)). Qed.
Lemma lem8339175 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1304 D P Q pat e q) = (term1305 D P Q pat e q).
Proof. exact (eq_refl (term1304 D P Q pat e q)). Qed.
Lemma lem8339176 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1306 D P Q _112896 pat e q) = (term1306 D P Q _112896 pat e q).
Proof. exact (eq_refl (term1306 D P Q _112896 pat e q)). Qed.
Lemma lem8339177 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((_112896 pat e q) = (term1304 D P Q pat e q)) = ((_112896 pat e q) = (term1305 D P Q pat e q)).
Proof. exact (MK_COMB (@lem8339176 D P Q _112896 pat e q) (@lem8339175 D P Q pat e q)). Qed.
Lemma lem8339178 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e q) = (term1305 D P Q pat e q).
Proof. exact (EQ_MP (@lem8339177 D P Q _112896 pat e q) (@lem8339174 D P Q pat e q _112896 h1)). Qed.
Lemma lem8339179 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8339180 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e q a) = (term1307 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8339178 D P Q pat e q _112896 h1) (@lem8339179 P a)). Qed.
Lemma lem8339181 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1307 D P Q pat e q a) = (term1308 D P Q pat e q a).
Proof. exact (eq_refl (term1307 D P Q pat e q a)). Qed.
Lemma lem8339182 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1309 D P Q _112896 pat e q a) = (term1309 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term1309 D P Q _112896 pat e q a)). Qed.
Lemma lem8339183 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((_112896 pat e q a) = (term1307 D P Q pat e q a)) = ((_112896 pat e q a) = (term1308 D P Q pat e q a)).
Proof. exact (MK_COMB (@lem8339182 D P Q _112896 pat e q a) (@lem8339181 D P Q pat e q a)). Qed.
Lemma lem8339184 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (_112896 pat e q a) = (term1308 D P Q pat e q a).
Proof. exact (EQ_MP (@lem8339183 D P Q _112896 pat e q a) (@lem8339180 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339185 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (SYM (@lem8339184 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339186 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1310 D P Q _112896 pat e q.
Proof. exact (fun a : P => @lem8339185 D P Q pat e q a _112896 h1). Qed.
Lemma lem8339187 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1311 D P Q _112896 pat e.
Proof. exact (fun q : type1413 P Q => @lem8339186 D P Q pat e q _112896 h1). Qed.
Lemma lem8339188 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1312 D P Q _112896 pat.
Proof. exact (fun e : P -> D => @lem8339187 D P Q pat e _112896 h1). Qed.
Lemma lem8339189 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1313 D P Q _112896.
Proof. exact (fun pat : Q -> D => @lem8339188 D P Q pat _112896 h1). Qed.
Lemma lem8339190 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1314 D P Q _112896 pat.
Proof. exact (@lem8339189 D P Q _112896 h1 pat). Qed.
Lemma lem8339191 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1314 D P Q _112896 pat) = (term1312 D P Q _112896 pat).
Proof. exact (eq_refl (term1314 D P Q _112896 pat)). Qed.
Lemma lem8339192 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1312 D P Q _112896 pat.
Proof. exact (EQ_MP (@lem8339191 D P Q _112896 pat) (@lem8339190 D P Q pat _112896 h1)). Qed.
Lemma lem8339193 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1315 D P Q _112896 pat e.
Proof. exact (@lem8339192 D P Q pat _112896 h1 e). Qed.
Lemma lem8339194 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1315 D P Q _112896 pat e) = (term1311 D P Q _112896 pat e).
Proof. exact (eq_refl (term1315 D P Q _112896 pat e)). Qed.
Lemma lem8339195 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1311 D P Q _112896 pat e.
Proof. exact (EQ_MP (@lem8339194 D P Q _112896 pat e) (@lem8339193 D P Q pat e _112896 h1)). Qed.
Lemma lem8339196 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1316 D P Q _112896 pat e q.
Proof. exact (@lem8339195 D P Q pat e _112896 h1 q). Qed.
Lemma lem8339197 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1316 D P Q _112896 pat e q) = (term1310 D P Q _112896 pat e q).
Proof. exact (eq_refl (term1316 D P Q _112896 pat e q)). Qed.
Lemma lem8339198 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1310 D P Q _112896 pat e q.
Proof. exact (EQ_MP (@lem8339197 D P Q _112896 pat e q) (@lem8339196 D P Q pat e q _112896 h1)). Qed.
Lemma lem8339199 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1317 D P Q _112896 pat e q a.
Proof. exact (@lem8339198 D P Q pat e q _112896 h1 a). Qed.
Lemma lem8339200 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1317 D P Q _112896 pat e q a) = ((term1308 D P Q pat e q a) = (_112896 pat e q a)).
Proof. exact (eq_refl (term1317 D P Q _112896 pat e q a)). Qed.
Lemma lem8339203 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (EQ_MP (@lem8339200 D P Q _112896 pat e q a) (@lem8339199 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339204 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (@lem8339203 D P Q pat e q a _112896 h1). Qed.
Lemma lem8339205 {D Q : Type'} (pat : Q -> D) : pat = pat.
Proof. exact (eq_refl pat). Qed.
Lemma lem8339206 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1318 D P Q pat e q a) = (term1319 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339205 D Q pat) (@lem8339204 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339207 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8339208 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1320 D P Q pat e q a) = (term1321 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339207 D) (@lem8339206 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339209 {D P : Type'} (e : P -> D) (a : P) : (e a) = (e a).
Proof. exact (eq_refl (e a)). Qed.
Lemma lem8339210 {D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : ((term1318 D P Q pat e q a) = (e a)) = ((term1319 D P Q _112896 pat e q a) = (e a)).
Proof. exact (MK_COMB (@lem8339208 D P Q pat e q a _112896 h1) (@lem8339209 D P e a)). Qed.
Lemma lem8339211 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8339212 {D P Q : Type'} (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1322 D P Q pat q e a) = (term1323 D P Q _112896 pat q e a).
Proof. exact (MK_COMB (@lem8339211) (@lem8339210 D P Q pat q e a _112896 h1)). Qed.
Lemma lem8339214 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (EQ_MP (@lem8339200 D P Q _112896 pat e q a) (@lem8339199 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339215 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (@lem8339214 D P Q pat e q a _112896 h1). Qed.
Lemma lem8339216 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (q a).
Proof. exact (eq_refl (q a)). Qed.
Lemma lem8339217 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1324 D P Q pat e q a) = (term1325 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339216 P Q q a) (@lem8339215 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339218 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1282 D P Q pat e q a) = (term1326 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339212 D P Q pat q e a _112896 h1) (@lem8339217 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339219 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term1284 D P Q pat e q a x) = (term1284 D P Q pat e q a x).
Proof. exact (eq_refl (term1284 D P Q pat e q a x)). Qed.
Lemma lem8339220 {D P Q : Type'} (x : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1286 D P Q x pat e q a) = (term1327 D P Q x _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339219 D P Q pat e q a x) (@lem8339218 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339221 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1288 D P Q pat e q a) = (term1328 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8339220 D P Q x pat e q a _112896 h1)). Qed.
Lemma lem8339222 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8339223 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1289 D P Q pat e q a) = (term1329 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339222 Q) (@lem8339221 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339224 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1330 D P Q pat e q) = (term1331 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8339223 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339225 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339226 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1290 D P Q pat e q) = (term1332 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8339225 P) (@lem8339224 D P Q pat e q _112896 h1)). Qed.
Lemma lem8339227 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1333 D P Q pat e) = (term1334 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8339226 D P Q pat e q _112896 h1)). Qed.
Lemma lem8339228 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8339229 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1291 D P Q pat e) = (term1335 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8339228 P Q) (@lem8339227 D P Q pat e _112896 h1)). Qed.
Lemma lem8339230 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1336 D P Q pat) = (term1337 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8339229 D P Q pat e _112896 h1)). Qed.
Lemma lem8339231 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8339232 {D P Q : Type'} (pat : Q -> D) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1292 D P Q pat) = (term1338 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8339231 D P) (@lem8339230 D P Q pat _112896 h1)). Qed.
Lemma lem8339233 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1339 D P Q) = (term1340 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8339232 D P Q pat _112896 h1)). Qed.
Lemma lem8339234 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8339235 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1293 D P Q) = (term1341 D P Q _112896).
Proof. exact (MK_COMB (@lem8339234 D Q) (@lem8339233 D P Q _112896 h1)). Qed.
Lemma lem8339236 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339237 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1342 D P Q) = (term1343 D P Q _112896).
Proof. exact (MK_COMB (@lem8339236) (@lem8339235 D P Q _112896 h1)). Qed.
Lemma lem8339239 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (EQ_MP (@lem8339200 D P Q _112896 pat e q a) (@lem8339199 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339240 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (@lem8339239 D P Q pat e q a _112896 h1). Qed.
Lemma lem8339241 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (arg a).
Proof. exact (eq_refl (arg a)). Qed.
Lemma lem8339242 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1157 A D P Q arg pat e q a) = (term1344 A D P Q arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339241 A P Q arg a) (@lem8339240 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339243 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8339244 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1162 A D P Q lt2 y arg pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339243 A lt2 y) (@lem8339242 A D P Q arg pat e q a _112896 h1)). Qed.
Lemma lem8339245 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term1145 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term1145 A B D P Q p f pat e q a)). Qed.
Lemma lem8339246 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1163 A B D P Q p f lt2 y arg pat e q a) = (term1346 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339245 A B D P Q p f pat e q a) (@lem8339244 A D P Q lt2 y arg pat e q a _112896 h1)). Qed.
Lemma lem8339247 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339248 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1347 A B D P Q p f lt2 y arg pat e q a) = (term1348 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339247) (@lem8339246 A B D P Q p f lt2 y arg pat e q a _112896 h1)). Qed.
Lemma lem8339249 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term1125 A P lt2 y s a).
Proof. exact (eq_refl (term1125 A P lt2 y s a)). Qed.
Lemma lem8339250 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1169 A B D P Q p f arg pat e q lt2 y s a) = (term1349 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8339248 A B D P Q p f lt2 y arg pat e q a _112896 h1) (@lem8339249 A P lt2 y s a)). Qed.
Lemma lem8339251 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1171 A B D P Q p f arg pat e q lt2 s a) = (term1350 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8339250 A B D P Q p f arg pat e q lt2 y s a _112896 h1)). Qed.
Lemma lem8339252 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8339253 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1173 A B D P Q p f arg pat e q lt2 s a) = (term1351 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8339252 A) (@lem8339251 A B D P Q p f arg pat e q lt2 s a _112896 h1)). Qed.
Lemma lem8339254 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1175 A B D P Q p f arg pat e q lt2 s) = (term1352 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8339253 A B D P Q p f arg pat e q lt2 s a _112896 h1)). Qed.
Lemma lem8339255 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339256 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1177 A B D P Q p f arg pat e q lt2 s) = (term1353 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8339255 P) (@lem8339254 A B D P Q p f arg pat e q lt2 s _112896 h1)). Qed.
Lemma lem8339257 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1179 A B D P Q p arg pat e q lt2 s) = (term1354 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8339256 A B D P Q p f arg pat e q lt2 s _112896 h1)). Qed.
Lemma lem8339258 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8339259 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1181 A B D P Q p arg pat e q lt2 s) = (term1355 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8339258 A B) (@lem8339257 A B D P Q p arg pat e q lt2 s _112896 h1)). Qed.
Lemma lem8339260 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8339261 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1183 A B D P Q p arg pat e q lt2 s) = (term1356 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8339260) (@lem8339259 A B D P Q p arg pat e q lt2 s _112896 h1)). Qed.
Lemma lem8339263 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (EQ_MP (@lem8339200 D P Q _112896 pat e q a) (@lem8339199 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339264 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1308 D P Q pat e q a) = (_112896 pat e q a).
Proof. exact (@lem8339263 D P Q pat e q a _112896 h1). Qed.
Lemma lem8339265 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (arg a).
Proof. exact (eq_refl (arg a)). Qed.
Lemma lem8339266 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1157 A D P Q arg pat e q a) = (term1344 A D P Q arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339265 A P Q arg a) (@lem8339264 D P Q pat e q a _112896 h1)). Qed.
Lemma lem8339267 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8339268 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1254 A B D P Q f arg pat e q a) = (term1357 A B D P Q f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339267 A B f) (@lem8339266 A D P Q arg pat e q a _112896 h1)). Qed.
Lemma lem8339269 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1358 B D P Q pat e q a) = (term1358 B D P Q pat e q a).
Proof. exact (eq_refl (term1358 B D P Q pat e q a)). Qed.
Lemma lem8339270 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1359 A B D P Q f arg pat e q a) = (term1360 A B D P Q f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339269 B D P Q pat e q a) (@lem8339268 A B D P Q f arg pat e q a _112896 h1)). Qed.
Lemma lem8339271 {B : Type'} : (term122 B) = (term122 B).
Proof. exact (eq_refl (term122 B)). Qed.
Lemma lem8339272 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1260 A B D P Q f arg pat e q a) = (term1361 A B D P Q f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339270 A B D P Q f arg pat e q a _112896 h1) (@lem8339271 B)). Qed.
Lemma lem8339273 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term210 A B D P Q pat e q f arg a) = (term210 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term210 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339274 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : ((term209 A B D P Q pat e q f arg a) = (term1260 A B D P Q f arg pat e q a)) = ((term209 A B D P Q pat e q f arg a) = (term1361 A B D P Q f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8339273 A B D P Q pat e q f arg a) (@lem8339272 A B D P Q f arg pat e q a _112896 h1)). Qed.
Lemma lem8339275 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8339276 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1264 A B D P Q p f arg pat e q a) = (term1362 A B D P Q p f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339275 A B P p f a) (@lem8339274 A B D P Q f arg pat e q a _112896 h1)). Qed.
Lemma lem8339277 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1266 A B D P Q p f arg pat e q) = (term1363 A B D P Q p f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8339276 A B D P Q p f arg pat e q a _112896 h1)). Qed.
Lemma lem8339278 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339279 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1268 A B D P Q p f arg pat e q) = (term1364 A B D P Q p f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339278 P) (@lem8339277 A B D P Q p f arg pat e q _112896 h1)). Qed.
Lemma lem8339280 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1270 A B D P Q p arg pat e q) = (term1365 A B D P Q p arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8339279 A B D P Q p f arg pat e q _112896 h1)). Qed.
Lemma lem8339281 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8339282 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1272 A B D P Q p arg pat e q) = (term1366 A B D P Q p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339281 A B) (@lem8339280 A B D P Q p arg pat e q _112896 h1)). Qed.
Lemma lem8339283 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1233 A B D P Q lt2 s p pat e q) = (term1233 A B D P Q lt2 s p pat e q).
Proof. exact (eq_refl (term1233 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8339284 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1274 A B D P Q lt2 s p arg pat e q) = (term1367 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339283 A B D P Q lt2 s p pat e q) (@lem8339282 A B D P Q p arg pat e q _112896 h1)). Qed.
Lemma lem8339285 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1276 A B D P Q lt2 s p arg pat e q) = (term1368 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339261 A B D P Q p arg pat e q lt2 s _112896 h1) (@lem8339284 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339286 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8339287 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1278 A B D P Q lt2 s p arg pat e q) = (term1369 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339286) (@lem8339285 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339288 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339289 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1370 A B D P Q lt2 s p arg pat e q) = (term1371 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339288) (@lem8339287 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339290 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8339291 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1277 A B D P Q lt2 s p arg pat e q) = (term1372 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339289 A B D P Q lt2 s p arg pat e q _112896 h1) (@lem8339290)). Qed.
Lemma lem8339292 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1373 A B P lt2 s p) = (term1373 A B P lt2 s p).
Proof. exact (eq_refl (term1373 A B P lt2 s p)). Qed.
Lemma lem8339293 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1374 A B D P Q lt2 s p arg pat e q) = (term1375 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339292 A B P lt2 s p) (@lem8339291 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339294 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (eq_refl (term238 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8339295 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1376 A B D P Q lt2 s p arg pat e q) = (term1377 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339294 A B D P Q p q pat e arg lt2 s) (@lem8339293 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339296 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (eq_refl (term241 A B D P Q p pat e q arg)). Qed.
Lemma lem8339297 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1295 A B D P Q lt2 s p arg pat e q) = (term1378 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339296 A B D P Q p pat e q arg) (@lem8339295 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339298 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1294 A B D P Q lt2 s p arg pat e q) = (term1379 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339237 D P Q _112896 h1) (@lem8339297 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339299 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1380 A B D P Q lt2 s p arg pat e q) : term1380 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339300 {A B D P Q : Type'} (_112896 : type885 D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1380 A B D P Q lt2 s p arg pat e q) : term1381 A B D P Q lt2 s p arg pat e q _112896.
Proof. exact (@lem8339299 A B D P Q lt2 s p arg pat e q h1 _112896). Qed.
Lemma lem8339301 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1381 A B D P Q lt2 s p arg pat e q _112896) = (term1379 A B D P Q lt2 s p arg _112896 pat e q).
Proof. exact (eq_refl (term1381 A B D P Q lt2 s p arg pat e q _112896)). Qed.
Lemma lem8339302 {A B D P Q : Type'} (_112896 : type885 D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1380 A B D P Q lt2 s p arg pat e q) : term1379 A B D P Q lt2 s p arg _112896 pat e q.
Proof. exact (EQ_MP (@lem8339301 A B D P Q lt2 s p arg _112896 pat e q) (@lem8339300 A B D P Q _112896 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339303 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : (term1379 A B D P Q lt2 s p arg _112896 pat e q) = (term1294 A B D P Q lt2 s p arg pat e q).
Proof. exact (SYM (@lem8339298 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339304 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : term1380 A B D P Q lt2 s p arg pat e q) (h2 : _112896 = (term1297 D P Q)) : term1294 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8339303 A B D P Q lt2 s p arg pat e q _112896 h2) (@lem8339302 A B D P Q _112896 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339305 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1382 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1380 A B D P Q lt2 s p arg pat e q => @lem8339304 A B D P Q lt2 s p arg pat e q _112896 h0 h1). Qed.
Lemma lem8339306 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1383 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1294 A B D P Q lt2 s p arg pat e q) (term1380 A B D P Q lt2 s p arg pat e q) (term1295 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339307 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1384 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339306 A B D P Q lt2 s p arg pat e q (@lem8339305 A B D P Q lt2 s p arg pat e q _112896 h1)). Qed.
Lemma lem8339308 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (h1 : _112896 = (term1297 D P Q)) : term1385 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339307 A B D P Q lt2 s p arg pat e q _112896 h1 (@lem8339159 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339309 {D P Q : Type'} : (term1297 D P Q) = (term1297 D P Q).
Proof. exact (eq_refl (term1297 D P Q)). Qed.
Lemma lem8339310 {A B D P Q : Type'} (_112896 : type885 D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1386 A B D P Q _112896 lt2 s p arg pat e q.
Proof. exact (fun h0 : _112896 = (term1297 D P Q) => @lem8339308 A B D P Q lt2 s p arg pat e q _112896 h0). Qed.
Lemma lem8339311 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1387 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339310 A B D P Q (term1297 D P Q) lt2 s p arg pat e q). Qed.
Lemma lem8339312 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1385 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339311 A B D P Q lt2 s p arg pat e q (@lem8339309 D P Q)). Qed.
Lemma lem8339313 {B : Type'} (P : B -> Prop) : term1279 B P.
Proof. exact (@lem19732 B P). Qed.
Lemma lem8339314 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : term1388 A B D P Q pat e q f arg a.
Proof. exact (@lem8339313 B (term113 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339315 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1389 A B D P Q pat e q f arg a) = (term1390 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term1389 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339316 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term452 A B D P Q pat e q f arg a x) = (term276 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term452 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8339317 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339318 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1391 A B D P Q pat e q f arg a x) = (term1392 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8339317) (@lem8339316 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8339319 {A B D P Q : Type'} (x : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1393 A B D P Q x pat e q f arg a) = (term1394 A B D P Q x pat e q f arg a).
Proof. exact (MK_COMB (@lem8339318 A B D P Q pat e q f arg a x) (@lem8339315 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339320 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1395 A B D P Q pat e q f arg a) = (term1396 A B D P Q pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8339319 A B D P Q x pat e q f arg a)). Qed.
Lemma lem8339321 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8339322 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1388 A B D P Q pat e q f arg a) = (term1397 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8339321 B) (@lem8339320 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339323 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : term1397 A B D P Q pat e q f arg a.
Proof. exact (EQ_MP (@lem8339322 A B D P Q pat e q f arg a) (@lem8339314 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339324 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : term1398 A B D P Q pat e q f arg.
Proof. exact (fun a : P => @lem8339323 A B D P Q pat e q f arg a). Qed.
Lemma lem8339325 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : term1399 A B D P Q pat e q f.
Proof. exact (fun arg : type1475 A P Q => @lem8339324 A B D P Q pat e q f arg). Qed.
Lemma lem8339326 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1400 A B D P Q pat e q.
Proof. exact (fun f : A -> B => @lem8339325 A B D P Q pat e q f). Qed.
Lemma lem8339327 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) : term1401 A B D P Q pat e.
Proof. exact (fun q : type1413 P Q => @lem8339326 A B D P Q pat e q). Qed.
Lemma lem8339328 {A B D P Q : Type'} (pat : Q -> D) : term1402 A B D P Q pat.
Proof. exact (fun e : P -> D => @lem8339327 A B D P Q pat e). Qed.
Lemma lem8339329 {A B D P Q : Type'} : term1403 A B D P Q.
Proof. exact (fun pat : Q -> D => @lem8339328 A B D P Q pat). Qed.
Lemma lem8339330 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1404 A B D P Q lt2 s p arg pat e q) : term1404 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339331 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1404 A B D P Q lt2 s p arg pat e q) : term1380 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339330 A B D P Q lt2 s p arg pat e q h1 (@lem8339329 A B D P Q)). Qed.
Lemma lem8339332 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1405 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1404 A B D P Q lt2 s p arg pat e q => @lem8339331 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8339333 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : _112897 = (term1406 A B D P Q).
Proof. exact (h1). Qed.
Lemma lem8339334 {D Q : Type'} (pat : Q -> D) : pat = pat.
Proof. exact (eq_refl pat). Qed.
Lemma lem8339335 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat) = (term1407 A B D P Q pat).
Proof. exact (MK_COMB (@lem8339333 A B D P Q _112897 h1) (@lem8339334 D Q pat)). Qed.
Lemma lem8339336 {A B D P Q : Type'} (pat : Q -> D) : (term1407 A B D P Q pat) = (term1408 A B D P Q pat).
Proof. exact (eq_refl (term1407 A B D P Q pat)). Qed.
Lemma lem8339337 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1409 A B D P Q _112897 pat) = (term1409 A B D P Q _112897 pat).
Proof. exact (eq_refl (term1409 A B D P Q _112897 pat)). Qed.
Lemma lem8339338 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : ((_112897 pat) = (term1407 A B D P Q pat)) = ((_112897 pat) = (term1408 A B D P Q pat)).
Proof. exact (MK_COMB (@lem8339337 A B D P Q _112897 pat) (@lem8339336 A B D P Q pat)). Qed.
Lemma lem8339339 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat) = (term1408 A B D P Q pat).
Proof. exact (EQ_MP (@lem8339338 A B D P Q _112897 pat) (@lem8339335 A B D P Q pat _112897 h1)). Qed.
Lemma lem8339340 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8339341 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e) = (term1410 A B D P Q pat e).
Proof. exact (MK_COMB (@lem8339339 A B D P Q pat _112897 h1) (@lem8339340 D P e)). Qed.
Lemma lem8339342 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) : (term1410 A B D P Q pat e) = (term1411 A B D P Q pat e).
Proof. exact (eq_refl (term1410 A B D P Q pat e)). Qed.
Lemma lem8339343 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1412 A B D P Q _112897 pat e) = (term1412 A B D P Q _112897 pat e).
Proof. exact (eq_refl (term1412 A B D P Q _112897 pat e)). Qed.
Lemma lem8339344 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : ((_112897 pat e) = (term1410 A B D P Q pat e)) = ((_112897 pat e) = (term1411 A B D P Q pat e)).
Proof. exact (MK_COMB (@lem8339343 A B D P Q _112897 pat e) (@lem8339342 A B D P Q pat e)). Qed.
Lemma lem8339345 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e) = (term1411 A B D P Q pat e).
Proof. exact (EQ_MP (@lem8339344 A B D P Q _112897 pat e) (@lem8339341 A B D P Q pat e _112897 h1)). Qed.
Lemma lem8339346 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8339347 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q) = (term1413 A B D P Q pat e q).
Proof. exact (MK_COMB (@lem8339345 A B D P Q pat e _112897 h1) (@lem8339346 P Q q)). Qed.
Lemma lem8339348 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1413 A B D P Q pat e q) = (term1414 A B D P Q pat e q).
Proof. exact (eq_refl (term1413 A B D P Q pat e q)). Qed.
Lemma lem8339349 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1415 A B D P Q _112897 pat e q) = (term1415 A B D P Q _112897 pat e q).
Proof. exact (eq_refl (term1415 A B D P Q _112897 pat e q)). Qed.
Lemma lem8339350 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((_112897 pat e q) = (term1413 A B D P Q pat e q)) = ((_112897 pat e q) = (term1414 A B D P Q pat e q)).
Proof. exact (MK_COMB (@lem8339349 A B D P Q _112897 pat e q) (@lem8339348 A B D P Q pat e q)). Qed.
Lemma lem8339351 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q) = (term1414 A B D P Q pat e q).
Proof. exact (EQ_MP (@lem8339350 A B D P Q _112897 pat e q) (@lem8339347 A B D P Q pat e q _112897 h1)). Qed.
Lemma lem8339352 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8339353 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f) = (term1416 A B D P Q pat e q f).
Proof. exact (MK_COMB (@lem8339351 A B D P Q pat e q _112897 h1) (@lem8339352 A B f)). Qed.
Lemma lem8339354 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1416 A B D P Q pat e q f) = (term1417 A B D P Q pat e q f).
Proof. exact (eq_refl (term1416 A B D P Q pat e q f)). Qed.
Lemma lem8339355 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1418 A B D P Q _112897 pat e q f) = (term1418 A B D P Q _112897 pat e q f).
Proof. exact (eq_refl (term1418 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8339356 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : ((_112897 pat e q f) = (term1416 A B D P Q pat e q f)) = ((_112897 pat e q f) = (term1417 A B D P Q pat e q f)).
Proof. exact (MK_COMB (@lem8339355 A B D P Q _112897 pat e q f) (@lem8339354 A B D P Q pat e q f)). Qed.
Lemma lem8339357 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f) = (term1417 A B D P Q pat e q f).
Proof. exact (EQ_MP (@lem8339356 A B D P Q _112897 pat e q f) (@lem8339353 A B D P Q pat e q f _112897 h1)). Qed.
Lemma lem8339358 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8339359 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f arg) = (term1419 A B D P Q pat e q f arg).
Proof. exact (MK_COMB (@lem8339357 A B D P Q pat e q f _112897 h1) (@lem8339358 A P Q arg)). Qed.
Lemma lem8339360 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1419 A B D P Q pat e q f arg) = (term1420 A B D P Q pat e q f arg).
Proof. exact (eq_refl (term1419 A B D P Q pat e q f arg)). Qed.
Lemma lem8339361 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1421 A B D P Q _112897 pat e q f arg) = (term1421 A B D P Q _112897 pat e q f arg).
Proof. exact (eq_refl (term1421 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8339362 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : ((_112897 pat e q f arg) = (term1419 A B D P Q pat e q f arg)) = ((_112897 pat e q f arg) = (term1420 A B D P Q pat e q f arg)).
Proof. exact (MK_COMB (@lem8339361 A B D P Q _112897 pat e q f arg) (@lem8339360 A B D P Q pat e q f arg)). Qed.
Lemma lem8339363 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f arg) = (term1420 A B D P Q pat e q f arg).
Proof. exact (EQ_MP (@lem8339362 A B D P Q _112897 pat e q f arg) (@lem8339359 A B D P Q pat e q f arg _112897 h1)). Qed.
Lemma lem8339364 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8339365 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f arg a) = (term1422 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8339363 A B D P Q pat e q f arg _112897 h1) (@lem8339364 P a)). Qed.
Lemma lem8339366 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1422 A B D P Q pat e q f arg a) = (term119 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term1422 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339367 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1423 A B D P Q _112897 pat e q f arg a) = (term1423 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1423 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8339368 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((_112897 pat e q f arg a) = (term1422 A B D P Q pat e q f arg a)) = ((_112897 pat e q f arg a) = (term119 A B D P Q pat e q f arg a)).
Proof. exact (MK_COMB (@lem8339367 A B D P Q _112897 pat e q f arg a) (@lem8339366 A B D P Q pat e q f arg a)). Qed.
Lemma lem8339369 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (_112897 pat e q f arg a) = (term119 A B D P Q pat e q f arg a).
Proof. exact (EQ_MP (@lem8339368 A B D P Q _112897 pat e q f arg a) (@lem8339365 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339370 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (SYM (@lem8339369 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339371 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1424 A B D P Q _112897 pat e q f arg.
Proof. exact (fun a : P => @lem8339370 A B D P Q pat e q f arg a _112897 h1). Qed.
Lemma lem8339372 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1425 A B D P Q _112897 pat e q f.
Proof. exact (fun arg : type1475 A P Q => @lem8339371 A B D P Q pat e q f arg _112897 h1). Qed.
Lemma lem8339373 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1426 A B D P Q _112897 pat e q.
Proof. exact (fun f : A -> B => @lem8339372 A B D P Q pat e q f _112897 h1). Qed.
Lemma lem8339374 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1427 A B D P Q _112897 pat e.
Proof. exact (fun q : type1413 P Q => @lem8339373 A B D P Q pat e q _112897 h1). Qed.
Lemma lem8339375 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1428 A B D P Q _112897 pat.
Proof. exact (fun e : P -> D => @lem8339374 A B D P Q pat e _112897 h1). Qed.
Lemma lem8339376 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1429 A B D P Q _112897.
Proof. exact (fun pat : Q -> D => @lem8339375 A B D P Q pat _112897 h1). Qed.
Lemma lem8339377 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1430 A B D P Q _112897 pat.
Proof. exact (@lem8339376 A B D P Q _112897 h1 pat). Qed.
Lemma lem8339378 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1430 A B D P Q _112897 pat) = (term1428 A B D P Q _112897 pat).
Proof. exact (eq_refl (term1430 A B D P Q _112897 pat)). Qed.
Lemma lem8339379 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1428 A B D P Q _112897 pat.
Proof. exact (EQ_MP (@lem8339378 A B D P Q _112897 pat) (@lem8339377 A B D P Q pat _112897 h1)). Qed.
Lemma lem8339380 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1431 A B D P Q _112897 pat e.
Proof. exact (@lem8339379 A B D P Q pat _112897 h1 e). Qed.
Lemma lem8339381 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1431 A B D P Q _112897 pat e) = (term1427 A B D P Q _112897 pat e).
Proof. exact (eq_refl (term1431 A B D P Q _112897 pat e)). Qed.
Lemma lem8339382 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1427 A B D P Q _112897 pat e.
Proof. exact (EQ_MP (@lem8339381 A B D P Q _112897 pat e) (@lem8339380 A B D P Q pat e _112897 h1)). Qed.
Lemma lem8339383 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1432 A B D P Q _112897 pat e q.
Proof. exact (@lem8339382 A B D P Q pat e _112897 h1 q). Qed.
Lemma lem8339384 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1432 A B D P Q _112897 pat e q) = (term1426 A B D P Q _112897 pat e q).
Proof. exact (eq_refl (term1432 A B D P Q _112897 pat e q)). Qed.
Lemma lem8339385 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1426 A B D P Q _112897 pat e q.
Proof. exact (EQ_MP (@lem8339384 A B D P Q _112897 pat e q) (@lem8339383 A B D P Q pat e q _112897 h1)). Qed.
Lemma lem8339386 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1433 A B D P Q _112897 pat e q f.
Proof. exact (@lem8339385 A B D P Q pat e q _112897 h1 f). Qed.
Lemma lem8339387 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1433 A B D P Q _112897 pat e q f) = (term1425 A B D P Q _112897 pat e q f).
Proof. exact (eq_refl (term1433 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8339388 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1425 A B D P Q _112897 pat e q f.
Proof. exact (EQ_MP (@lem8339387 A B D P Q _112897 pat e q f) (@lem8339386 A B D P Q pat e q f _112897 h1)). Qed.
Lemma lem8339389 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1434 A B D P Q _112897 pat e q f arg.
Proof. exact (@lem8339388 A B D P Q pat e q f _112897 h1 arg). Qed.
Lemma lem8339390 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1434 A B D P Q _112897 pat e q f arg) = (term1424 A B D P Q _112897 pat e q f arg).
Proof. exact (eq_refl (term1434 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8339391 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1424 A B D P Q _112897 pat e q f arg.
Proof. exact (EQ_MP (@lem8339390 A B D P Q _112897 pat e q f arg) (@lem8339389 A B D P Q pat e q f arg _112897 h1)). Qed.
Lemma lem8339392 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1435 A B D P Q _112897 pat e q f arg a.
Proof. exact (@lem8339391 A B D P Q pat e q f arg _112897 h1 a). Qed.
Lemma lem8339393 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1435 A B D P Q _112897 pat e q f arg a) = ((term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a)).
Proof. exact (eq_refl (term1435 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8339396 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8339393 A B D P Q _112897 pat e q f arg a) (@lem8339392 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339397 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (@lem8339396 A B D P Q pat e q f arg a _112897 h1). Qed.
Lemma lem8339398 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term909 A B P Q f arg a t) = (term909 A B P Q f arg a t).
Proof. exact (eq_refl (term909 A B P Q f arg a t)). Qed.
Lemma lem8339399 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : ((term77 A B P Q f arg a t) = (term119 A B D P Q pat e q f arg a)) = ((term77 A B P Q f arg a t) = (_112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8339398 A B P Q f arg a t) (@lem8339397 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339400 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term911 P Q q a t) = (term911 P Q q a t).
Proof. exact (eq_refl (term911 P Q q a t)). Qed.
Lemma lem8339401 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1436 A B D P Q t pat e q f arg a) = (term1437 A B D P Q t _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339400 P Q q a t) (@lem8339399 A B D P Q t pat e q f arg a _112897 h1)). Qed.
Lemma lem8339402 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term913 D P Q pat t e a) = (term913 D P Q pat t e a).
Proof. exact (eq_refl (term913 D P Q pat t e a)). Qed.
Lemma lem8339403 {A B D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1438 A B D P Q t pat e q f arg a) = (term1439 A B D P Q t _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339402 D P Q pat t e a) (@lem8339401 A B D P Q t pat e q f arg a _112897 h1)). Qed.
Lemma lem8339404 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1440 A B D P Q pat e q f arg a) = (term1441 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8339403 A B D P Q t pat e q f arg a _112897 h1)). Qed.
Lemma lem8339405 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8339406 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1390 A B D P Q pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339405 Q) (@lem8339404 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339407 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1392 A B D P Q pat e q f arg a x) = (term1392 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term1392 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8339408 {A B D P Q : Type'} (x : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1394 A B D P Q x pat e q f arg a) = (term1443 A B D P Q x _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339407 A B D P Q pat e q f arg a x) (@lem8339406 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339409 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1396 A B D P Q pat e q f arg a) = (term1444 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8339408 A B D P Q x pat e q f arg a _112897 h1)). Qed.
Lemma lem8339410 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8339411 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1397 A B D P Q pat e q f arg a) = (term1445 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339410 B) (@lem8339409 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339412 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1446 A B D P Q pat e q f arg) = (term1447 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8339411 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339413 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339414 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1398 A B D P Q pat e q f arg) = (term1448 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8339413 P) (@lem8339412 A B D P Q pat e q f arg _112897 h1)). Qed.
Lemma lem8339415 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1449 A B D P Q pat e q f) = (term1450 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8339414 A B D P Q pat e q f arg _112897 h1)). Qed.
Lemma lem8339416 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8339417 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1399 A B D P Q pat e q f) = (term1451 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8339416 A P Q) (@lem8339415 A B D P Q pat e q f _112897 h1)). Qed.
Lemma lem8339418 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1452 A B D P Q pat e q) = (term1453 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8339417 A B D P Q pat e q f _112897 h1)). Qed.
Lemma lem8339419 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8339420 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1400 A B D P Q pat e q) = (term1454 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8339419 A B) (@lem8339418 A B D P Q pat e q _112897 h1)). Qed.
Lemma lem8339421 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1455 A B D P Q pat e) = (term1456 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8339420 A B D P Q pat e q _112897 h1)). Qed.
Lemma lem8339422 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8339423 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1401 A B D P Q pat e) = (term1457 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8339422 P Q) (@lem8339421 A B D P Q pat e _112897 h1)). Qed.
Lemma lem8339424 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1458 A B D P Q pat) = (term1459 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8339423 A B D P Q pat e _112897 h1)). Qed.
Lemma lem8339425 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8339426 {A B D P Q : Type'} (pat : Q -> D) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1402 A B D P Q pat) = (term1460 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8339425 D P) (@lem8339424 A B D P Q pat _112897 h1)). Qed.
Lemma lem8339427 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1461 A B D P Q) = (term1462 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8339426 A B D P Q pat _112897 h1)). Qed.
Lemma lem8339428 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8339429 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1403 A B D P Q) = (term1463 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8339428 D Q) (@lem8339427 A B D P Q _112897 h1)). Qed.
Lemma lem8339430 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339431 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1464 A B D P Q) = (term1465 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8339430) (@lem8339429 A B D P Q _112897 h1)). Qed.
Lemma lem8339433 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8339393 A B D P Q _112897 pat e q f arg a) (@lem8339392 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339434 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term119 A B D P Q pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (@lem8339433 A B D P Q pat e q f arg a _112897 h1). Qed.
Lemma lem8339435 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1358 B D P Q pat e q a) = (term1358 B D P Q pat e q a).
Proof. exact (eq_refl (term1358 B D P Q pat e q a)). Qed.
Lemma lem8339436 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1466 A B D P Q pat e q f arg a) = (term1467 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339435 B D P Q pat e q a) (@lem8339434 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339437 {B : Type'} : (term122 B) = (term122 B).
Proof. exact (eq_refl (term122 B)). Qed.
Lemma lem8339438 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term209 A B D P Q pat e q f arg a) = (term1468 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339436 A B D P Q pat e q f arg a _112897 h1) (@lem8339437 B)). Qed.
Lemma lem8339439 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8339440 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term210 A B D P Q pat e q f arg a) = (term1469 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8339439 B) (@lem8339438 A B D P Q pat e q f arg a _112897 h1)). Qed.
Lemma lem8339441 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1361 A B D P Q f arg _112896 pat e q a) = (term1361 A B D P Q f arg _112896 pat e q a).
Proof. exact (eq_refl (term1361 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8339442 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : ((term209 A B D P Q pat e q f arg a) = (term1361 A B D P Q f arg _112896 pat e q a)) = ((term1468 A B D P Q _112897 pat e q f arg a) = (term1361 A B D P Q f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8339440 A B D P Q pat e q f arg a _112897 h1) (@lem8339441 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8339443 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8339444 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1362 A B D P Q p f arg _112896 pat e q a) = (term1470 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8339443 A B P p f a) (@lem8339442 A B D P Q f arg _112896 pat e q a _112897 h1)). Qed.
Lemma lem8339445 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1363 A B D P Q p f arg _112896 pat e q) = (term1471 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8339444 A B D P Q p f arg _112896 pat e q a _112897 h1)). Qed.
Lemma lem8339446 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339447 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1364 A B D P Q p f arg _112896 pat e q) = (term1472 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339446 P) (@lem8339445 A B D P Q p f arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339448 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1365 A B D P Q p arg _112896 pat e q) = (term1473 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8339447 A B D P Q p f arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339449 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8339450 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1366 A B D P Q p arg _112896 pat e q) = (term1474 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339449 A B) (@lem8339448 A B D P Q p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339451 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1233 A B D P Q lt2 s p pat e q) = (term1233 A B D P Q lt2 s p pat e q).
Proof. exact (eq_refl (term1233 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8339452 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1367 A B D P Q lt2 s p arg _112896 pat e q) = (term1475 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339451 A B D P Q lt2 s p pat e q) (@lem8339450 A B D P Q p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339453 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1356 A B D P Q p arg _112896 pat e q lt2 s) = (term1356 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (eq_refl (term1356 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8339454 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1368 A B D P Q lt2 s p arg _112896 pat e q) = (term1476 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339453 A B D P Q p arg _112896 pat e q lt2 s) (@lem8339452 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339455 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8339456 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1369 A B D P Q lt2 s p arg _112896 pat e q) = (term1477 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339455) (@lem8339454 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339457 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339458 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1371 A B D P Q lt2 s p arg _112896 pat e q) = (term1478 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339457) (@lem8339456 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339459 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8339460 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1372 A B D P Q lt2 s p arg _112896 pat e q) = (term1479 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339458 A B D P Q lt2 s p arg _112896 pat e q _112897 h1) (@lem8339459)). Qed.
Lemma lem8339461 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1373 A B P lt2 s p) = (term1373 A B P lt2 s p).
Proof. exact (eq_refl (term1373 A B P lt2 s p)). Qed.
Lemma lem8339462 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1375 A B D P Q lt2 s p arg _112896 pat e q) = (term1480 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339461 A B P lt2 s p) (@lem8339460 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339463 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (eq_refl (term238 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8339464 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1377 A B D P Q lt2 s p arg _112896 pat e q) = (term1481 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339463 A B D P Q p q pat e arg lt2 s) (@lem8339462 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339465 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (eq_refl (term241 A B D P Q p pat e q arg)). Qed.
Lemma lem8339466 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1378 A B D P Q lt2 s p arg _112896 pat e q) = (term1482 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339465 A B D P Q p pat e q arg) (@lem8339464 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339467 {D P Q : Type'} (_112896 : type885 D P Q) : (term1343 D P Q _112896) = (term1343 D P Q _112896).
Proof. exact (eq_refl (term1343 D P Q _112896)). Qed.
Lemma lem8339468 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1379 A B D P Q lt2 s p arg _112896 pat e q) = (term1483 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8339467 D P Q _112896) (@lem8339466 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339469 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1484 A B D P Q lt2 s p arg pat e q) = (term1485 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (fun_ext (fun _112896 : type885 D P Q => @lem8339468 A B D P Q lt2 s p arg _112896 pat e q _112897 h1)). Qed.
Lemma lem8339470 {D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q))). Qed.
Lemma lem8339471 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1380 A B D P Q lt2 s p arg pat e q) = (term1486 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (MK_COMB (@lem8339470 D P Q) (@lem8339469 A B D P Q lt2 s p arg pat e q _112897 h1)). Qed.
Lemma lem8339472 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1404 A B D P Q lt2 s p arg pat e q) = (term1487 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (MK_COMB (@lem8339431 A B D P Q _112897 h1) (@lem8339471 A B D P Q lt2 s p arg pat e q _112897 h1)). Qed.
Lemma lem8339473 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1488 A B D P Q lt2 s p arg pat e q) : term1488 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339474 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1488 A B D P Q lt2 s p arg pat e q) : term1489 A B D P Q lt2 s p arg pat e q _112897.
Proof. exact (@lem8339473 A B D P Q lt2 s p arg pat e q h1 _112897). Qed.
Lemma lem8339475 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1489 A B D P Q lt2 s p arg pat e q _112897) = (term1487 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (eq_refl (term1489 A B D P Q lt2 s p arg pat e q _112897)). Qed.
Lemma lem8339476 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1488 A B D P Q lt2 s p arg pat e q) : term1487 A B D P Q lt2 s p _112897 arg pat e q.
Proof. exact (EQ_MP (@lem8339475 A B D P Q lt2 s p _112897 arg pat e q) (@lem8339474 A B D P Q _112897 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339477 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : (term1487 A B D P Q lt2 s p _112897 arg pat e q) = (term1404 A B D P Q lt2 s p arg pat e q).
Proof. exact (SYM (@lem8339472 A B D P Q lt2 s p arg pat e q _112897 h1)). Qed.
Lemma lem8339478 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : term1488 A B D P Q lt2 s p arg pat e q) (h2 : _112897 = (term1406 A B D P Q)) : term1404 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8339477 A B D P Q lt2 s p arg pat e q _112897 h2) (@lem8339476 A B D P Q _112897 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339479 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1490 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1488 A B D P Q lt2 s p arg pat e q => @lem8339478 A B D P Q lt2 s p arg pat e q _112897 h0 h1). Qed.
Lemma lem8339480 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1491 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1404 A B D P Q lt2 s p arg pat e q) (term1488 A B D P Q lt2 s p arg pat e q) (term1380 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339481 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1492 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339480 A B D P Q lt2 s p arg pat e q (@lem8339479 A B D P Q lt2 s p arg pat e q _112897 h1)). Qed.
Lemma lem8339482 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : _112897 = (term1406 A B D P Q)) : term1493 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339481 A B D P Q lt2 s p arg pat e q _112897 h1 (@lem8339332 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339483 {A B D P Q : Type'} : (term1406 A B D P Q) = (term1406 A B D P Q).
Proof. exact (eq_refl (term1406 A B D P Q)). Qed.
Lemma lem8339484 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1494 A B D P Q _112897 lt2 s p arg pat e q.
Proof. exact (fun h0 : _112897 = (term1406 A B D P Q) => @lem8339482 A B D P Q lt2 s p arg pat e q _112897 h0). Qed.
Lemma lem8339485 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1495 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339484 A B D P Q (term1406 A B D P Q) lt2 s p arg pat e q). Qed.
Lemma lem8339486 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1493 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339485 A B D P Q lt2 s p arg pat e q (@lem8339483 A B D P Q)). Qed.
Lemma lem8339487 {B : Type'} (P : B -> Prop) : term1279 B P.
Proof. exact (@lem19732 B P). Qed.
Lemma lem8339488 {B : Type'} : term1496 B.
Proof. exact (@lem8339487 B (term1497 B)). Qed.
Lemma lem8339489 {B : Type'} : (term1498 B) = False.
Proof. exact (eq_refl (term1498 B)). Qed.
Lemma lem8339490 {B : Type'} (x : B) : (term1499 B x) = False.
Proof. exact (eq_refl (term1499 B x)). Qed.
Lemma lem8339491 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339492 {B : Type'} (x : B) : (term1500 B x) = (imp False).
Proof. exact (MK_COMB (@lem8339491) (@lem8339490 B x)). Qed.
Lemma lem8339493 {B : Type'} (x : B) : (term1501 B x) = (False -> False).
Proof. exact (MK_COMB (@lem8339492 B x) (@lem8339489 B)). Qed.
Lemma lem8339494 {B : Type'} : (term1502 B) = (term1503 B).
Proof. exact (fun_ext (fun x : B => @lem8339493 B x)). Qed.
Lemma lem8339495 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8339496 {B : Type'} : (term1496 B) = (term1504 B).
Proof. exact (MK_COMB (@lem8339495 B) (@lem8339494 B)). Qed.
Lemma lem8339497 {B : Type'} : term1504 B.
Proof. exact (EQ_MP (@lem8339496 B) (@lem8339488 B)). Qed.
Lemma lem8339498 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1505 A B D P Q lt2 s p arg pat e q) : term1505 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339499 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1505 A B D P Q lt2 s p arg pat e q) : term1488 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339498 A B D P Q lt2 s p arg pat e q h1 (@lem8339497 B)). Qed.
Lemma lem8339500 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1506 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1505 A B D P Q lt2 s p arg pat e q => @lem8339499 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8339501 {B : Type'} (_112898 : B) (h1 : _112898 = (term122 B)) : _112898 = (term122 B).
Proof. exact (h1). Qed.
Lemma lem8339504 {B : Type'} (_112898 : B) (h1 : _112898 = (term122 B)) : (term122 B) = _112898.
Proof. exact (SYM (@lem8339501 B _112898 h1)). Qed.
Lemma lem8339505 {B : Type'} (_112898 : B) (h1 : _112898 = (term122 B)) : (term122 B) = _112898.
Proof. exact (@lem8339504 B _112898 h1). Qed.
Lemma lem8339506 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1467 A B D P Q _112897 pat e q f arg a) = (term1467 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1467 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8339507 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1468 A B D P Q _112897 pat e q f arg a) = (term1507 A B D P Q _112897 pat e q f arg a _112898).
Proof. exact (MK_COMB (@lem8339506 A B D P Q _112897 pat e q f arg a) (@lem8339505 B _112898 h1)). Qed.
Lemma lem8339508 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8339509 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1469 A B D P Q _112897 pat e q f arg a) = (term1508 A B D P Q _112897 pat e q f arg a _112898).
Proof. exact (MK_COMB (@lem8339508 B) (@lem8339507 A B D P Q _112897 pat e q f arg a _112898 h1)). Qed.
Lemma lem8339511 {B : Type'} (_112898 : B) (h1 : _112898 = (term122 B)) : (term122 B) = _112898.
Proof. exact (SYM (@lem8339501 B _112898 h1)). Qed.
Lemma lem8339512 {B : Type'} (_112898 : B) (h1 : _112898 = (term122 B)) : (term122 B) = _112898.
Proof. exact (@lem8339511 B _112898 h1). Qed.
Lemma lem8339513 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1360 A B D P Q f arg _112896 pat e q a) = (term1360 A B D P Q f arg _112896 pat e q a).
Proof. exact (eq_refl (term1360 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8339514 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1361 A B D P Q f arg _112896 pat e q a) = (term1509 A B D P Q f arg _112896 pat e q a _112898).
Proof. exact (MK_COMB (@lem8339513 A B D P Q f arg _112896 pat e q a) (@lem8339512 B _112898 h1)). Qed.
Lemma lem8339515 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) (h1 : _112898 = (term122 B)) : ((term1468 A B D P Q _112897 pat e q f arg a) = (term1361 A B D P Q f arg _112896 pat e q a)) = ((term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1509 A B D P Q f arg _112896 pat e q a _112898)).
Proof. exact (MK_COMB (@lem8339509 A B D P Q _112897 pat e q f arg a _112898 h1) (@lem8339514 A B D P Q f arg _112896 pat e q a _112898 h1)). Qed.
Lemma lem8339516 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8339517 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1470 A B D P Q p _112897 f arg _112896 pat e q a) = (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898).
Proof. exact (MK_COMB (@lem8339516 A B P p f a) (@lem8339515 A B D P Q _112897 f arg _112896 pat e q a _112898 h1)). Qed.
Lemma lem8339518 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1471 A B D P Q p _112897 f arg _112896 pat e q) = (term1511 A B D P Q p _112897 f arg _112896 pat e q _112898).
Proof. exact (fun_ext (fun a : P => @lem8339517 A B D P Q p _112897 f arg _112896 pat e q a _112898 h1)). Qed.
Lemma lem8339519 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8339520 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1472 A B D P Q p _112897 f arg _112896 pat e q) = (term1512 A B D P Q p _112897 f arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339519 P) (@lem8339518 A B D P Q p _112897 f arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339521 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1473 A B D P Q p _112897 arg _112896 pat e q) = (term1513 A B D P Q p _112897 arg _112896 pat e q _112898).
Proof. exact (fun_ext (fun f : A -> B => @lem8339520 A B D P Q p _112897 f arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339522 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8339523 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1474 A B D P Q p _112897 arg _112896 pat e q) = (term1514 A B D P Q p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339522 A B) (@lem8339521 A B D P Q p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339524 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1233 A B D P Q lt2 s p pat e q) = (term1233 A B D P Q lt2 s p pat e q).
Proof. exact (eq_refl (term1233 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8339525 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1475 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1515 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339524 A B D P Q lt2 s p pat e q) (@lem8339523 A B D P Q p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339526 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1356 A B D P Q p arg _112896 pat e q lt2 s) = (term1356 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (eq_refl (term1356 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8339527 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1476 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1516 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339526 A B D P Q p arg _112896 pat e q lt2 s) (@lem8339525 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339528 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8339529 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1477 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1517 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339528) (@lem8339527 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339530 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339531 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1478 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1518 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339530) (@lem8339529 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339532 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8339533 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1479 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1519 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339531 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1) (@lem8339532)). Qed.
Lemma lem8339534 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1373 A B P lt2 s p) = (term1373 A B P lt2 s p).
Proof. exact (eq_refl (term1373 A B P lt2 s p)). Qed.
Lemma lem8339535 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1480 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1520 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339534 A B P lt2 s p) (@lem8339533 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339536 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (eq_refl (term238 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8339537 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1481 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1521 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339536 A B D P Q p q pat e arg lt2 s) (@lem8339535 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339538 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (eq_refl (term241 A B D P Q p pat e q arg)). Qed.
Lemma lem8339539 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1482 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1522 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339538 A B D P Q p pat e q arg) (@lem8339537 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339540 {D P Q : Type'} (_112896 : type885 D P Q) : (term1343 D P Q _112896) = (term1343 D P Q _112896).
Proof. exact (eq_refl (term1343 D P Q _112896)). Qed.
Lemma lem8339541 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1483 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1523 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8339540 D P Q _112896) (@lem8339539 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339542 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1485 A B D P Q lt2 s p _112897 arg pat e q) = (term1524 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (fun_ext (fun _112896 : type885 D P Q => @lem8339541 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898 h1)). Qed.
Lemma lem8339543 {D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q))). Qed.
Lemma lem8339544 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1486 A B D P Q lt2 s p _112897 arg pat e q) = (term1525 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (MK_COMB (@lem8339543 D P Q) (@lem8339542 A B D P Q lt2 s p _112897 arg pat e q _112898 h1)). Qed.
Lemma lem8339545 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1465 A B D P Q _112897) = (term1465 A B D P Q _112897).
Proof. exact (eq_refl (term1465 A B D P Q _112897)). Qed.
Lemma lem8339546 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1487 A B D P Q lt2 s p _112897 arg pat e q) = (term1526 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (MK_COMB (@lem8339545 A B D P Q _112897) (@lem8339544 A B D P Q lt2 s p _112897 arg pat e q _112898 h1)). Qed.
Lemma lem8339547 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1527 A B D P Q lt2 s p arg pat e q) = (term1528 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (fun_ext (fun _112897 : type906 A B D P Q => @lem8339546 A B D P Q lt2 s p _112897 arg pat e q _112898 h1)). Qed.
Lemma lem8339548 {A B D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B))). Qed.
Lemma lem8339549 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1488 A B D P Q lt2 s p arg pat e q) = (term1529 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (MK_COMB (@lem8339548 A B D P Q) (@lem8339547 A B D P Q lt2 s p arg pat e q _112898 h1)). Qed.
Lemma lem8339550 {B : Type'} : (term1530 B) = (term1530 B).
Proof. exact (eq_refl (term1530 B)). Qed.
Lemma lem8339551 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1505 A B D P Q lt2 s p arg pat e q) = (term1531 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (MK_COMB (@lem8339550 B) (@lem8339549 A B D P Q lt2 s p arg pat e q _112898 h1)). Qed.
Lemma lem8339552 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1532 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339553 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1533 A B D P Q lt2 s p arg pat e q _112898.
Proof. exact (@lem8339552 A B D P Q lt2 s p arg pat e q h1 _112898). Qed.
Lemma lem8339554 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1533 A B D P Q lt2 s p arg pat e q _112898) = (term1531 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (eq_refl (term1533 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8339555 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1531 A B D P Q lt2 s p arg pat e q _112898.
Proof. exact (EQ_MP (@lem8339554 A B D P Q lt2 s p arg pat e q _112898) (@lem8339553 A B D P Q _112898 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339556 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : (term1531 A B D P Q lt2 s p arg pat e q _112898) = (term1505 A B D P Q lt2 s p arg pat e q).
Proof. exact (SYM (@lem8339551 A B D P Q lt2 s p arg pat e q _112898 h1)). Qed.
Lemma lem8339557 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : term1532 A B D P Q lt2 s p arg pat e q) (h2 : _112898 = (term122 B)) : term1505 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8339556 A B D P Q lt2 s p arg pat e q _112898 h2) (@lem8339555 A B D P Q _112898 lt2 s p arg pat e q h1)). Qed.
Lemma lem8339558 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : term1534 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1532 A B D P Q lt2 s p arg pat e q => @lem8339557 A B D P Q lt2 s p arg pat e q _112898 h0 h1). Qed.
Lemma lem8339559 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1535 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1505 A B D P Q lt2 s p arg pat e q) (term1532 A B D P Q lt2 s p arg pat e q) (term1488 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339560 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : term1536 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339559 A B D P Q lt2 s p arg pat e q (@lem8339558 A B D P Q lt2 s p arg pat e q _112898 h1)). Qed.
Lemma lem8339561 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) (h1 : _112898 = (term122 B)) : term1537 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339560 A B D P Q lt2 s p arg pat e q _112898 h1 (@lem8339500 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339562 {B : Type'} : (term122 B) = (term122 B).
Proof. exact (eq_refl (term122 B)). Qed.
Lemma lem8339563 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1538 A B D P Q _112898 lt2 s p arg pat e q.
Proof. exact (fun h0 : _112898 = (term122 B) => @lem8339561 A B D P Q lt2 s p arg pat e q _112898 h0). Qed.
Lemma lem8339564 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1539 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339563 A B D P Q (term122 B) lt2 s p arg pat e q). Qed.
Lemma lem8339565 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1537 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339564 A B D P Q lt2 s p arg pat e q (@lem8339562 B)). Qed.
Lemma lem8339566 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1532 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339567 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1540 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1532 A B D P Q lt2 s p arg pat e q => @lem8339566 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8339568 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1541 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1532 A B D P Q lt2 s p arg pat e q) (term1532 A B D P Q lt2 s p arg pat e q) (term1488 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339569 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1542 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339568 A B D P Q lt2 s p arg pat e q (@lem8339567 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339570 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1537 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339569 A B D P Q lt2 s p arg pat e q (@lem8339565 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339571 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1543 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1488 A B D P Q lt2 s p arg pat e q) (term1532 A B D P Q lt2 s p arg pat e q) (term1380 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339572 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1544 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339571 A B D P Q lt2 s p arg pat e q (@lem8339570 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339573 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1545 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339572 A B D P Q lt2 s p arg pat e q (@lem8339486 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339574 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1546 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem51 (term1380 A B D P Q lt2 s p arg pat e q) (term1532 A B D P Q lt2 s p arg pat e q) (term1295 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339575 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1547 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339574 A B D P Q lt2 s p arg pat e q (@lem8339573 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339576 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339575 A B D P Q lt2 s p arg pat e q (@lem8339312 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339577 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1548 A B D P Q lt2 s p arg pat e q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339578 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1532 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339579 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) (h2 : term1548 A B D P Q lt2 s p arg pat e q) : term1295 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339577 A B D P Q lt2 s p arg pat e q h2 (@lem8339578 A B D P Q lt2 s p arg pat e q h1)). Qed.
Lemma lem8339580 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) : term1549 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1548 A B D P Q lt2 s p arg pat e q => @lem8339579 A B D P Q lt2 s p arg pat e q h1 h0). Qed.
Lemma lem8339581 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1548 A B D P Q lt2 s p arg pat e q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (h1). Qed.
Lemma lem8339582 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1532 A B D P Q lt2 s p arg pat e q) (h2 : term1548 A B D P Q lt2 s p arg pat e q) : term1295 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339580 A B D P Q lt2 s p arg pat e q h1 (@lem8339581 A B D P Q lt2 s p arg pat e q h2)). Qed.
Lemma lem8339583 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1548 A B D P Q lt2 s p arg pat e q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1532 A B D P Q lt2 s p arg pat e q => @lem8339582 A B D P Q lt2 s p arg pat e q h0 h1). Qed.
Lemma lem8339584 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1550 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1548 A B D P Q lt2 s p arg pat e q => @lem8339583 A B D P Q lt2 s p arg pat e q h0). Qed.
Lemma lem8339587 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339584 A B D P Q lt2 s p arg pat e q (@lem8339576 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8339588 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1548 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339587 A B D P Q lt2 s p arg pat e q). Qed.
Lemma lem8339624 {A : Type'} (t : Prop) : (term1551 A t) = t.
Proof. exact (EQ_MP (@lem16458 A t) (@lem16457 A t)). Qed.
Lemma lem8339625 {B : Type'} (t : Prop) : (term1551 B t) = t.
Proof. exact (@lem8339624 B t). Qed.
Lemma lem8339626 {B : Type'} : (term1504 B) = (False -> False).
Proof. exact (@lem8339625 B (False -> False)). Qed.
Lemma lem8339628 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem16473 t)). Qed.
Lemma lem8339629 : (False -> False) = True.
Proof. exact (@lem8339628 False). Qed.
Lemma lem8339630 {B : Type'} : (term1504 B) = True.
Proof. exact (TRANS (@lem8339626 B) (@lem8339629)). Qed.
Lemma lem8339631 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8339632 {B : Type'} : (term1530 B) = (imp True).
Proof. exact (MK_COMB (@lem8339631) (@lem8339630 B)). Qed.
Lemma lem8339882 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8339883 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1519 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1552 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (@lem8339882 (term1517 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8339885 (t : Prop) : (term234 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8339886 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1552 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1516 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (@lem8339885 (term1516 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8339889 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1519 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1516 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (TRANS (@lem8339883 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) (@lem8339886 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340194 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1373 A B P lt2 s p) = (term1373 A B P lt2 s p).
Proof. exact (eq_refl (term1373 A B P lt2 s p)). Qed.
Lemma lem8340195 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1520 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1553 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8340194 A B P lt2 s p) (@lem8339889 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340198 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (eq_refl (term238 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8340199 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1521 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1554 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8340198 A B D P Q p q pat e arg lt2 s) (@lem8340195 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340202 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (eq_refl (term241 A B D P Q p pat e q arg)). Qed.
Lemma lem8340203 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1522 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1555 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8340202 A B D P Q p pat e q arg) (@lem8340199 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340206 {D P Q : Type'} (_112896 : type885 D P Q) : (term1343 D P Q _112896) = (term1343 D P Q _112896).
Proof. exact (eq_refl (term1343 D P Q _112896)). Qed.
Lemma lem8340207 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1523 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1556 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898).
Proof. exact (MK_COMB (@lem8340206 D P Q _112896) (@lem8340203 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340210 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1524 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1557 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (fun_ext (fun _112896 : type885 D P Q => @lem8340207 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898)). Qed.
Lemma lem8340211 {D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q))). Qed.
Lemma lem8340212 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1525 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1558 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (MK_COMB (@lem8340211 D P Q) (@lem8340210 A B D P Q lt2 s p _112897 arg pat e q _112898)). Qed.
Lemma lem8340217 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1465 A B D P Q _112897) = (term1465 A B D P Q _112897).
Proof. exact (eq_refl (term1465 A B D P Q _112897)). Qed.
Lemma lem8340218 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1526 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1559 A B D P Q lt2 s p _112897 arg pat e q _112898).
Proof. exact (MK_COMB (@lem8340217 A B D P Q _112897) (@lem8340212 A B D P Q lt2 s p _112897 arg pat e q _112898)). Qed.
Lemma lem8340221 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1528 A B D P Q lt2 s p arg pat e q _112898) = (term1560 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (fun_ext (fun _112897 : type906 A B D P Q => @lem8340218 A B D P Q lt2 s p _112897 arg pat e q _112898)). Qed.
Lemma lem8340222 {A B D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B))). Qed.
Lemma lem8340223 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1529 A B D P Q lt2 s p arg pat e q _112898) = (term1561 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (MK_COMB (@lem8340222 A B D P Q) (@lem8340221 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8340228 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1531 A B D P Q lt2 s p arg pat e q _112898) = (term1562 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (MK_COMB (@lem8339632 B) (@lem8340223 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8340230 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem16471 t)). Qed.
Lemma lem8340231 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1562 A B D P Q lt2 s p arg pat e q _112898) = (term1561 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (@lem8340230 (term1561 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8340786 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112898 : B) : (term1531 A B D P Q lt2 s p arg pat e q _112898) = (term1561 A B D P Q lt2 s p arg pat e q _112898).
Proof. exact (TRANS (@lem8340228 A B D P Q lt2 s p arg pat e q _112898) (@lem8340231 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8340787 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1563 A B D P Q lt2 s p arg pat e q) = (term1564 A B D P Q lt2 s p arg pat e q).
Proof. exact (fun_ext (fun _112898 : B => @lem8340786 A B D P Q lt2 s p arg pat e q _112898)). Qed.
Lemma lem8340788 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8340789 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1532 A B D P Q lt2 s p arg pat e q) = (term1565 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8340788 B) (@lem8340787 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8340794 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1566 A B D P Q s p arg pat e q) = (term1567 A B D P Q s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8340789 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8340795 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8340796 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1568 A B D P Q s p arg pat e q) = (term1569 A B D P Q s p arg pat e q).
Proof. exact (MK_COMB (@lem8340795 A) (@lem8340794 A B D P Q s p arg pat e q)). Qed.
Lemma lem8340801 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1570 A B D P Q p arg pat e q) = (term1571 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8340796 A B D P Q s p arg pat e q)). Qed.
Lemma lem8340802 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8340803 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1572 A B D P Q p arg pat e q) = (term1573 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8340802 A P) (@lem8340801 A B D P Q p arg pat e q)). Qed.
Lemma lem8340808 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1574 A B D P Q arg pat e q) = (term1575 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8340803 A B D P Q p arg pat e q)). Qed.
Lemma lem8340809 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8340810 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1576 A B D P Q arg pat e q) = (term1577 A B D P Q arg pat e q).
Proof. exact (MK_COMB (@lem8340809 A B P) (@lem8340808 A B D P Q arg pat e q)). Qed.
Lemma lem8340815 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1578 A B D P Q pat e q) = (term1579 A B D P Q pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8340810 A B D P Q arg pat e q)). Qed.
Lemma lem8340816 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8340817 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1580 A B D P Q pat e q) = (term1581 A B D P Q pat e q).
Proof. exact (MK_COMB (@lem8340816 A P Q) (@lem8340815 A B D P Q pat e q)). Qed.
Lemma lem8340822 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1582 A B D P Q e q) = (term1583 A B D P Q e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8340817 A B D P Q pat e q)). Qed.
Lemma lem8340823 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8340824 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1584 A B D P Q e q) = (term1585 A B D P Q e q).
Proof. exact (MK_COMB (@lem8340823 D Q) (@lem8340822 A B D P Q e q)). Qed.
Lemma lem8340829 {A B D P Q : Type'} (q : type1413 P Q) : (term1586 A B D P Q q) = (term1587 A B D P Q q).
Proof. exact (fun_ext (fun e : P -> D => @lem8340824 A B D P Q e q)). Qed.
Lemma lem8340830 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8340831 {A B D P Q : Type'} (q : type1413 P Q) : (term1588 A B D P Q q) = (term1589 A B D P Q q).
Proof. exact (MK_COMB (@lem8340830 D P) (@lem8340829 A B D P Q q)). Qed.
Lemma lem8340836 {A B D P Q : Type'} : (term1590 A B D P Q) = (term1591 A B D P Q).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8340831 A B D P Q q)). Qed.
Lemma lem8340837 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8340846 {A B D P Q : Type'} : (term1592 A B D P Q) = (term1593 A B D P Q).
Proof. exact (MK_COMB (@lem8340837 P Q) (@lem8340836 A B D P Q)). Qed.
Lemma lem8340854 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term179 D P Q pat e q a) = False.
Proof. exact (h1). Qed.
Lemma lem8340855 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term179 D P Q pat e q a) = False.
Proof. exact (@lem8340854 D P Q pat e q a h1). Qed.
Lemma lem8340856 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8340857 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1358 B D P Q pat e q a) = (@COND B False).
Proof. exact (MK_COMB (@lem8340856 B) (@lem8340855 D P Q pat e q a h1)). Qed.
Lemma lem8340858 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (_112897 pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (eq_refl (_112897 pat e q f arg a)). Qed.
Lemma lem8340859 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1467 A B D P Q _112897 pat e q f arg a) = (term1594 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8340857 B D P Q pat e q a h1) (@lem8340858 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8340860 {B : Type'} (_112898 : B) : _112898 = _112898.
Proof. exact (eq_refl _112898). Qed.
Lemma lem8340861 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1595 A B D P Q _112897 pat e q f arg a _112898).
Proof. exact (MK_COMB (@lem8340859 A B D P Q _112897 f arg pat e q a h1) (@lem8340860 B _112898)). Qed.
Lemma lem8340863 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8340864 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8340863 B t1 t2). Qed.
Lemma lem8340865 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (_112898 : B) : (term1595 A B D P Q _112897 pat e q f arg a _112898) = _112898.
Proof. exact (@lem8340864 B (_112897 pat e q f arg a) _112898). Qed.
Lemma lem8340866 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1507 A B D P Q _112897 pat e q f arg a _112898) = _112898.
Proof. exact (TRANS (@lem8340861 A B D P Q _112897 f arg _112898 pat e q a h1) (@lem8340865 A B D P Q _112897 pat e q f arg a _112898)). Qed.
Lemma lem8340867 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8340868 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1508 A B D P Q _112897 pat e q f arg a _112898) = (@eq B _112898).
Proof. exact (MK_COMB (@lem8340867 B) (@lem8340866 A B D P Q _112897 f arg _112898 pat e q a h1)). Qed.
Lemma lem8340874 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term179 D P Q pat e q a) = False.
Proof. exact (h1). Qed.
Lemma lem8340875 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term179 D P Q pat e q a) = False.
Proof. exact (@lem8340874 D P Q pat e q a h1). Qed.
Lemma lem8340876 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8340877 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1358 B D P Q pat e q a) = (@COND B False).
Proof. exact (MK_COMB (@lem8340876 B) (@lem8340875 D P Q pat e q a h1)). Qed.
Lemma lem8340878 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1357 A B D P Q f arg _112896 pat e q a) = (term1357 A B D P Q f arg _112896 pat e q a).
Proof. exact (eq_refl (term1357 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8340879 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1360 A B D P Q f arg _112896 pat e q a) = (term1596 A B D P Q f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8340877 B D P Q pat e q a h1) (@lem8340878 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8340880 {B : Type'} (_112898 : B) : _112898 = _112898.
Proof. exact (eq_refl _112898). Qed.
Lemma lem8340881 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1509 A B D P Q f arg _112896 pat e q a _112898) = (term1597 A B D P Q f arg _112896 pat e q a _112898).
Proof. exact (MK_COMB (@lem8340879 A B D P Q f arg _112896 pat e q a h1) (@lem8340880 B _112898)). Qed.
Lemma lem8340883 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8340884 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8340883 B t1 t2). Qed.
Lemma lem8340885 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) : (term1597 A B D P Q f arg _112896 pat e q a _112898) = _112898.
Proof. exact (@lem8340884 B (term1357 A B D P Q f arg _112896 pat e q a) _112898). Qed.
Lemma lem8340886 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1509 A B D P Q f arg _112896 pat e q a _112898) = _112898.
Proof. exact (TRANS (@lem8340881 A B D P Q f arg _112896 _112898 pat e q a h1) (@lem8340885 A B D P Q f arg _112896 pat e q a _112898)). Qed.
Lemma lem8340887 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : ((term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1509 A B D P Q f arg _112896 pat e q a _112898)) = (_112898 = _112898).
Proof. exact (MK_COMB (@lem8340868 A B D P Q _112897 f arg _112898 pat e q a h1) (@lem8340886 A B D P Q f arg _112896 _112898 pat e q a h1)). Qed.
Lemma lem8340889 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8340890 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8340889 B x). Qed.
Lemma lem8340891 {B : Type'} (_112898 : B) : (_112898 = _112898) = True.
Proof. exact (@lem8340890 B _112898). Qed.
Lemma lem8340892 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : ((term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1509 A B D P Q f arg _112896 pat e q a _112898)) = True.
Proof. exact (TRANS (@lem8340887 A B D P Q _112897 f arg _112896 _112898 pat e q a h1) (@lem8340891 B _112898)). Qed.
Lemma lem8340893 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8340894 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1598 A B P p f a).
Proof. exact (MK_COMB (@lem8340893 A B P p f a) (@lem8340892 A B D P Q _112897 f arg _112896 _112898 pat e q a h1)). Qed.
Lemma lem8340896 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8340897 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1598 A B P p f a) = True.
Proof. exact (@lem8340896 (p f a)). Qed.
Lemma lem8340898 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = False) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = True.
Proof. exact (TRANS (@lem8340894 A B D P Q _112897 arg _112896 _112898 p f pat e q a h1) (@lem8340897 A B P p f a)). Qed.
Lemma lem8340899 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) : term1599 A B D P Q p _112897 f arg _112896 pat e q a _112898.
Proof. exact (fun h0 : (term179 D P Q pat e q a) = False => @lem8340898 A B D P Q p _112897 f arg _112896 _112898 pat e q a h0). Qed.
Lemma lem8340905 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term179 D P Q pat e q a) = True.
Proof. exact (h1). Qed.
Lemma lem8340906 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term179 D P Q pat e q a) = True.
Proof. exact (@lem8340905 D P Q pat e q a h1). Qed.
Lemma lem8340907 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8340908 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1358 B D P Q pat e q a) = (@COND B True).
Proof. exact (MK_COMB (@lem8340907 B) (@lem8340906 D P Q pat e q a h1)). Qed.
Lemma lem8340909 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (_112897 pat e q f arg a) = (_112897 pat e q f arg a).
Proof. exact (eq_refl (_112897 pat e q f arg a)). Qed.
Lemma lem8340910 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1467 A B D P Q _112897 pat e q f arg a) = (term1600 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8340908 B D P Q pat e q a h1) (@lem8340909 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8340911 {B : Type'} (_112898 : B) : _112898 = _112898.
Proof. exact (eq_refl _112898). Qed.
Lemma lem8340912 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1601 A B D P Q _112897 pat e q f arg a _112898).
Proof. exact (MK_COMB (@lem8340910 A B D P Q _112897 f arg pat e q a h1) (@lem8340911 B _112898)). Qed.
Lemma lem8340914 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8340915 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8340914 B t2 t1). Qed.
Lemma lem8340916 {A B D P Q : Type'} (_112898 : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1601 A B D P Q _112897 pat e q f arg a _112898) = (_112897 pat e q f arg a).
Proof. exact (@lem8340915 B _112898 (_112897 pat e q f arg a)). Qed.
Lemma lem8340917 {A B D P Q : Type'} (_112898 : B) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1507 A B D P Q _112897 pat e q f arg a _112898) = (_112897 pat e q f arg a).
Proof. exact (TRANS (@lem8340912 A B D P Q _112897 f arg _112898 pat e q a h1) (@lem8340916 A B D P Q _112898 _112897 pat e q f arg a)). Qed.
Lemma lem8340918 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8340919 {A B D P Q : Type'} (_112898 : B) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1508 A B D P Q _112897 pat e q f arg a _112898) = (term1423 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8340918 B) (@lem8340917 A B D P Q _112898 _112897 f arg pat e q a h1)). Qed.
Lemma lem8340925 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term179 D P Q pat e q a) = True.
Proof. exact (h1). Qed.
Lemma lem8340926 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term179 D P Q pat e q a) = True.
Proof. exact (@lem8340925 D P Q pat e q a h1). Qed.
Lemma lem8340927 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8340928 {B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1358 B D P Q pat e q a) = (@COND B True).
Proof. exact (MK_COMB (@lem8340927 B) (@lem8340926 D P Q pat e q a h1)). Qed.
Lemma lem8340929 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1357 A B D P Q f arg _112896 pat e q a) = (term1357 A B D P Q f arg _112896 pat e q a).
Proof. exact (eq_refl (term1357 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8340930 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1360 A B D P Q f arg _112896 pat e q a) = (term1602 A B D P Q f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8340928 B D P Q pat e q a h1) (@lem8340929 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8340931 {B : Type'} (_112898 : B) : _112898 = _112898.
Proof. exact (eq_refl _112898). Qed.
Lemma lem8340932 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112898 : B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1509 A B D P Q f arg _112896 pat e q a _112898) = (term1603 A B D P Q f arg _112896 pat e q a _112898).
Proof. exact (MK_COMB (@lem8340930 A B D P Q f arg _112896 pat e q a h1) (@lem8340931 B _112898)). Qed.
Lemma lem8340934 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8340935 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8340934 B t2 t1). Qed.
Lemma lem8340936 {A B D P Q : Type'} (_112898 : B) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1603 A B D P Q f arg _112896 pat e q a _112898) = (term1357 A B D P Q f arg _112896 pat e q a).
Proof. exact (@lem8340935 B _112898 (term1357 A B D P Q f arg _112896 pat e q a)). Qed.
Lemma lem8340937 {A B D P Q : Type'} (_112898 : B) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1509 A B D P Q f arg _112896 pat e q a _112898) = (term1357 A B D P Q f arg _112896 pat e q a).
Proof. exact (TRANS (@lem8340932 A B D P Q f arg _112896 _112898 pat e q a h1) (@lem8340936 A B D P Q _112898 f arg _112896 pat e q a)). Qed.
Lemma lem8340938 {A B D P Q : Type'} (_112898 : B) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : ((term1507 A B D P Q _112897 pat e q f arg a _112898) = (term1509 A B D P Q f arg _112896 pat e q a _112898)) = ((_112897 pat e q f arg a) = (term1357 A B D P Q f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8340919 A B D P Q _112898 _112897 f arg pat e q a h1) (@lem8340937 A B D P Q _112898 f arg _112896 pat e q a h1)). Qed.
Lemma lem8340941 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term146 A B P p f a) = (term146 A B P p f a).
Proof. exact (eq_refl (term146 A B P p f a)). Qed.
Lemma lem8340942 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (h1 : (term179 D P Q pat e q a) = True) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1604 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8340941 A B P p f a) (@lem8340938 A B D P Q _112898 _112897 f arg _112896 pat e q a h1)). Qed.
Lemma lem8340945 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1605 A B D P Q _112898 p _112897 f arg _112896 pat e q a.
Proof. exact (fun h0 : (term179 D P Q pat e q a) = True => @lem8340942 A B D P Q _112898 p _112897 f arg _112896 pat e q a h0). Qed.
Lemma lem8340946 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1606 A B D P Q _112898 p _112897 f arg _112896 pat e q a.
Proof. exact (conj (@lem8340899 A B D P Q p _112897 f arg _112896 pat e q a _112898) (@lem8340945 A B D P Q _112898 p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340948 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1607 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8340949 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : term1608 A B D P Q _112898 p _112897 f arg _112896 pat e q a.
Proof. exact (@lem8340948 (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) (term1604 A B D P Q p _112897 f arg _112896 pat e q a) (term179 D P Q pat e q a) True). Qed.
Lemma lem8340950 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1609 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (@lem8340949 A B D P Q _112898 p _112897 f arg _112896 pat e q a (@lem8340946 A B D P Q _112898 p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340952 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8340953 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1610 D P Q pat e q a) = True.
Proof. exact (@lem8340952 (term179 D P Q pat e q a)). Qed.
Lemma lem8340958 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1611 A B D P Q p _112897 f arg _112896 pat e q a) = (term1611 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term1611 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340959 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1609 A B D P Q p _112897 f arg _112896 pat e q a) = (term1612 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8340958 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8340953 D P Q pat e q a)). Qed.
Lemma lem8340961 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8340962 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1612 A B D P Q p _112897 f arg _112896 pat e q a) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (@lem8340961 (term1613 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340963 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1609 A B D P Q p _112897 f arg _112896 pat e q a) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (TRANS (@lem8340959 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8340962 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340964 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (TRANS (@lem8340950 A B D P Q _112898 p _112897 f arg _112896 pat e q a) (@lem8340963 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340969 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1604 A B D P Q p _112897 f arg _112896 pat e q a) = (term1604 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term1604 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340974 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8340975 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8340974 D P Q pat e q a t)). Qed.
Lemma lem8340976 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8340977 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8340976 Q) (@lem8340975 D P Q pat e q a)). Qed.
Lemma lem8340978 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8340979 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term207 D P Q pat e q a) = (term207 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8340978) (@lem8340977 D P Q pat e q a)). Qed.
Lemma lem8340980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8340981 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1614 D P Q pat e q a) = (term1614 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8340980) (@lem8340979 D P Q pat e q a)). Qed.
Lemma lem8340982 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1613 A B D P Q p _112897 f arg _112896 pat e q a) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8340981 D P Q pat e q a) (@lem8340969 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340983 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112898 : B) : (term1615 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1615 A B D P Q p _112897 f arg _112896 pat e q a _112898).
Proof. exact (eq_refl (term1615 A B D P Q p _112897 f arg _112896 pat e q a _112898)). Qed.
Lemma lem8340984 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a)) = ((term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8340983 A B D P Q p _112897 f arg _112896 pat e q a _112898) (@lem8340982 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340985 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1510 A B D P Q p _112897 f arg _112896 pat e q a _112898) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (EQ_MP (@lem8340984 A B D P Q _112898 p _112897 f arg _112896 pat e q a) (@lem8340964 A B D P Q _112898 p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340986 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1511 A B D P Q p _112897 f arg _112896 pat e q _112898) = (term1616 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8340985 A B D P Q _112898 p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8340987 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8340988 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1512 A B D P Q p _112897 f arg _112896 pat e q _112898) = (term1617 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8340987 P) (@lem8340986 A B D P Q _112898 p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8340989 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1513 A B D P Q p _112897 arg _112896 pat e q _112898) = (term1618 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8340988 A B D P Q _112898 p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8340990 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8340991 {A B D P Q : Type'} (_112898 : B) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1514 A B D P Q p _112897 arg _112896 pat e q _112898) = (term1619 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8340990 A B) (@lem8340989 A B D P Q _112898 p _112897 arg _112896 pat e q)). Qed.
Lemma lem8340996 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8340997 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8340996 D P Q pat e q a t)). Qed.
Lemma lem8340998 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8340999 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8340998 Q) (@lem8340997 D P Q pat e q a)). Qed.
Lemma lem8341002 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1250 A B P p g a) = (term1250 A B P p g a).
Proof. exact (eq_refl (term1250 A B P p g a)). Qed.
Lemma lem8341003 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8341002 A B P p g a) (@lem8340999 D P Q pat e q a)). Qed.
Lemma lem8341008 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8341009 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8341008 D P Q pat e q a t)). Qed.
Lemma lem8341010 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8341011 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8341010 Q) (@lem8341009 D P Q pat e q a)). Qed.
Lemma lem8341014 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8341015 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8341014 A B P p f a) (@lem8341011 D P Q pat e q a)). Qed.
Lemma lem8341016 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8341017 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1193 A B D P Q p f pat e q a) = (term1193 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8341016) (@lem8341015 A B D P Q p f pat e q a)). Qed.
Lemma lem8341018 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a)) = ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a)).
Proof. exact (MK_COMB (@lem8341017 A B D P Q p f pat e q a) (@lem8341003 A B D P Q p g pat e q a)). Qed.
Lemma lem8341023 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1620 A B P lt2 s a f g z) = (term1620 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1620 A B P lt2 s a f g z)). Qed.
Lemma lem8341024 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1621 A B P lt2 s a f g) = (term1621 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8341023 A B P lt2 s a f g z)). Qed.
Lemma lem8341025 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8341026 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1104 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8341025 A) (@lem8341024 A B P lt2 s a f g)). Qed.
Lemma lem8341027 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341028 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1109 A B P lt2 s a f g) = (term1109 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8341027) (@lem8341026 A B P lt2 s a f g)). Qed.
Lemma lem8341029 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1219 A B D P Q lt2 s f p g pat e q a) = (term1219 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8341028 A B P lt2 s a f g) (@lem8341018 A B D P Q f p g pat e q a)). Qed.
Lemma lem8341030 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1221 A B D P Q lt2 s f p g pat e q) = (term1221 A B D P Q lt2 s f p g pat e q).
Proof. exact (fun_ext (fun a : P => @lem8341029 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8341031 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341032 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1223 A B D P Q lt2 s f p g pat e q) = (term1223 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8341031 P) (@lem8341030 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8341033 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1225 A B D P Q lt2 s f p pat e q) = (term1225 A B D P Q lt2 s f p pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8341032 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8341034 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341035 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1227 A B D P Q lt2 s f p pat e q) = (term1227 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8341034 A B) (@lem8341033 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8341036 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1229 A B D P Q lt2 s p pat e q) = (term1229 A B D P Q lt2 s p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8341035 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8341037 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341038 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1231 A B D P Q lt2 s p pat e q) = (term1231 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8341037 A B) (@lem8341036 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8341039 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8341040 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1233 A B D P Q lt2 s p pat e q) = (term1233 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8341039) (@lem8341038 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8341041 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1515 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1622 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341040 A B D P Q lt2 s p pat e q) (@lem8340991 A B D P Q _112898 p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341042 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term1125 A P lt2 y s a).
Proof. exact (eq_refl (term1125 A P lt2 y s a)). Qed.
Lemma lem8341043 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8341048 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8341049 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8341048 D P Q pat e q a t)). Qed.
Lemma lem8341050 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8341051 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8341050 Q) (@lem8341049 D P Q pat e q a)). Qed.
Lemma lem8341054 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8341055 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8341054 A B P p f a) (@lem8341051 D P Q pat e q a)). Qed.
Lemma lem8341056 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8341057 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term1145 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8341056) (@lem8341055 A B D P Q p f pat e q a)). Qed.
Lemma lem8341058 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1346 A B D P Q p f lt2 y arg _112896 pat e q a) = (term1346 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8341057 A B D P Q p f pat e q a) (@lem8341043 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8341059 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341060 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1348 A B D P Q p f lt2 y arg _112896 pat e q a) = (term1348 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8341059) (@lem8341058 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8341061 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1349 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term1349 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8341060 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8341042 A P lt2 y s a)). Qed.
Lemma lem8341062 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1350 A B D P Q p f arg _112896 pat e q lt2 s a) = (term1350 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8341061 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8341063 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8341064 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1351 A B D P Q p f arg _112896 pat e q lt2 s a) = (term1351 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8341063 A) (@lem8341062 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8341065 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1352 A B D P Q p f arg _112896 pat e q lt2 s) = (term1352 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8341064 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8341066 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341067 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1353 A B D P Q p f arg _112896 pat e q lt2 s) = (term1353 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8341066 P) (@lem8341065 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8341068 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1354 A B D P Q p arg _112896 pat e q lt2 s) = (term1354 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8341067 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8341069 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341070 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1355 A B D P Q p arg _112896 pat e q lt2 s) = (term1355 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8341069 A B) (@lem8341068 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8341071 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8341072 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term1356 A B D P Q p arg _112896 pat e q lt2 s) = (term1356 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8341071) (@lem8341070 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8341073 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1516 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1623 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341072 A B D P Q p arg _112896 pat e q lt2 s) (@lem8341041 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341078 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8341083 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1620 A B P lt2 s a f g z) = (term1620 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1620 A B P lt2 s a f g z)). Qed.
Lemma lem8341084 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1621 A B P lt2 s a f g) = (term1621 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8341083 A B P lt2 s a f g z)). Qed.
Lemma lem8341085 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8341086 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1104 A B P lt2 s a f g) = (term1104 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8341085 A) (@lem8341084 A B P lt2 s a f g)). Qed.
Lemma lem8341087 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341088 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1109 A B P lt2 s a f g) = (term1109 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8341087) (@lem8341086 A B P lt2 s a f g)). Qed.
Lemma lem8341089 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1111 A B P lt2 s f p g a) = (term1111 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8341088 A B P lt2 s a f g) (@lem8341078 A B P f p g a)). Qed.
Lemma lem8341090 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1113 A B P lt2 s f p g) = (term1113 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8341089 A B P lt2 s f p g a)). Qed.
Lemma lem8341091 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341092 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1115 A B P lt2 s f p g) = (term1115 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8341091 P) (@lem8341090 A B P lt2 s f p g)). Qed.
Lemma lem8341093 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1117 A B P lt2 s f p) = (term1117 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8341092 A B P lt2 s f p g)). Qed.
Lemma lem8341094 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341095 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1119 A B P lt2 s f p) = (term1119 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8341094 A B) (@lem8341093 A B P lt2 s f p)). Qed.
Lemma lem8341096 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1121 A B P lt2 s p) = (term1121 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8341095 A B P lt2 s f p)). Qed.
Lemma lem8341097 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341098 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1122 A B P lt2 s p) = (term1122 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8341097 A B) (@lem8341096 A B P lt2 s p)). Qed.
Lemma lem8341099 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341100 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1373 A B P lt2 s p) = (term1373 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8341099) (@lem8341098 A B P lt2 s p)). Qed.
Lemma lem8341101 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1553 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1624 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341100 A B P lt2 s p) (@lem8341073 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341106 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term284 A P Q arg t lt2 y s a) = (term284 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term284 A P Q arg t lt2 y s a)). Qed.
Lemma lem8341107 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term285 A P Q arg t lt2 s a) = (term285 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8341106 A P Q arg t lt2 y s a)). Qed.
Lemma lem8341108 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8341109 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term286 A P Q arg t lt2 s a) = (term286 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8341108 A) (@lem8341107 A P Q arg t lt2 s a)). Qed.
Lemma lem8341120 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term287 A B D P Q p f q pat t e a) = (term287 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term287 A B D P Q p f q pat t e a)). Qed.
Lemma lem8341121 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term288 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8341120 A B D P Q p f q pat t e a) (@lem8341109 A P Q arg t lt2 s a)). Qed.
Lemma lem8341122 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term289 A B D P Q p f q pat e arg lt2 s a) = (term289 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8341121 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8341123 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8341124 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term290 A B D P Q p f q pat e arg lt2 s a) = (term290 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8341123 Q) (@lem8341122 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8341125 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term291 A B D P Q p f q pat e arg lt2 s) = (term291 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8341124 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8341126 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341127 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term292 A B D P Q p f q pat e arg lt2 s) = (term292 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8341126 P) (@lem8341125 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8341128 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term293 A B D P Q p q pat e arg lt2 s) = (term293 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8341127 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8341129 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341130 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term35 A B D P Q p q pat e arg lt2 s) = (term35 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8341129 A B) (@lem8341128 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8341131 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341132 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term238 A B D P Q p q pat e arg lt2 s) = (term238 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8341131) (@lem8341130 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8341133 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1554 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1625 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341132 A B D P Q p q pat e arg lt2 s) (@lem8341101 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341154 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term295 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term295 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8341155 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term296 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8341154 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8341156 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8341157 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term297 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8341156 Q) (@lem8341155 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8341158 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term298 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8341157 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8341159 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8341160 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term299 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8341159 Q) (@lem8341158 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8341161 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term300 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8341160 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8341162 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341163 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term301 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8341162 P) (@lem8341161 A B D P Q p f pat e q arg)). Qed.
Lemma lem8341164 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term302 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8341163 A B D P Q p f pat e q arg)). Qed.
Lemma lem8341165 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341166 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term36 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8341165 A B) (@lem8341164 A B D P Q p pat e q arg)). Qed.
Lemma lem8341167 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341168 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term241 A B D P Q p pat e q arg) = (term241 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8341167) (@lem8341166 A B D P Q p pat e q arg)). Qed.
Lemma lem8341169 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1555 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1626 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341168 A B D P Q p pat e q arg) (@lem8341133 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341182 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1327 D P Q x _112896 pat e q a) = (term1327 D P Q x _112896 pat e q a).
Proof. exact (eq_refl (term1327 D P Q x _112896 pat e q a)). Qed.
Lemma lem8341183 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1328 D P Q _112896 pat e q a) = (term1328 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8341182 D P Q x _112896 pat e q a)). Qed.
Lemma lem8341184 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8341185 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1329 D P Q _112896 pat e q a) = (term1329 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8341184 Q) (@lem8341183 D P Q _112896 pat e q a)). Qed.
Lemma lem8341186 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1331 D P Q _112896 pat e q) = (term1331 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8341185 D P Q _112896 pat e q a)). Qed.
Lemma lem8341187 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341188 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1332 D P Q _112896 pat e q) = (term1332 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8341187 P) (@lem8341186 D P Q _112896 pat e q)). Qed.
Lemma lem8341189 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1334 D P Q _112896 pat e) = (term1334 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8341188 D P Q _112896 pat e q)). Qed.
Lemma lem8341190 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8341191 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1335 D P Q _112896 pat e) = (term1335 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8341190 P Q) (@lem8341189 D P Q _112896 pat e)). Qed.
Lemma lem8341192 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1337 D P Q _112896 pat) = (term1337 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8341191 D P Q _112896 pat e)). Qed.
Lemma lem8341193 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8341194 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1338 D P Q _112896 pat) = (term1338 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8341193 D P) (@lem8341192 D P Q _112896 pat)). Qed.
Lemma lem8341195 {D P Q : Type'} (_112896 : type885 D P Q) : (term1340 D P Q _112896) = (term1340 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8341194 D P Q _112896 pat)). Qed.
Lemma lem8341196 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8341197 {D P Q : Type'} (_112896 : type885 D P Q) : (term1341 D P Q _112896) = (term1341 D P Q _112896).
Proof. exact (MK_COMB (@lem8341196 D Q) (@lem8341195 D P Q _112896)). Qed.
Lemma lem8341198 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341199 {D P Q : Type'} (_112896 : type885 D P Q) : (term1343 D P Q _112896) = (term1343 D P Q _112896).
Proof. exact (MK_COMB (@lem8341198) (@lem8341197 D P Q _112896)). Qed.
Lemma lem8341200 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1556 A B D P Q lt2 s p _112897 arg _112896 pat e q _112898) = (term1627 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8341199 D P Q _112896) (@lem8341169 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341201 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1557 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1628 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (fun_ext (fun _112896 : type885 D P Q => @lem8341200 A B D P Q _112898 lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341202 {D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q))). Qed.
Lemma lem8341203 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1558 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1629 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (MK_COMB (@lem8341202 D P Q) (@lem8341201 A B D P Q _112898 lt2 s p _112897 arg pat e q)). Qed.
Lemma lem8341212 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1439 A B D P Q t _112897 pat e q f arg a) = (term1439 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1439 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8341213 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1441 A B D P Q _112897 pat e q f arg a) = (term1441 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8341212 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8341214 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8341215 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1442 A B D P Q _112897 pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341214 Q) (@lem8341213 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341224 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term274 A B D P Q pat e q f arg a t x) = (term274 A B D P Q pat e q f arg a t x).
Proof. exact (eq_refl (term274 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341225 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term275 A B D P Q pat e q f arg a x) = (term275 A B D P Q pat e q f arg a x).
Proof. exact (fun_ext (fun t : Q => @lem8341224 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341226 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8341227 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term276 A B D P Q pat e q f arg a x) = (term276 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8341226 Q) (@lem8341225 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341228 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341229 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1392 A B D P Q pat e q f arg a x) = (term1392 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8341228) (@lem8341227 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341230 {A B D P Q : Type'} (x : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1443 A B D P Q x _112897 pat e q f arg a) = (term1443 A B D P Q x _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341229 A B D P Q pat e q f arg a x) (@lem8341215 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341231 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1444 A B D P Q _112897 pat e q f arg a) = (term1444 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8341230 A B D P Q x _112897 pat e q f arg a)). Qed.
Lemma lem8341232 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8341233 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1445 A B D P Q _112897 pat e q f arg a) = (term1445 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341232 B) (@lem8341231 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341234 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1447 A B D P Q _112897 pat e q f arg) = (term1447 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8341233 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341235 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341236 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1448 A B D P Q _112897 pat e q f arg) = (term1448 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8341235 P) (@lem8341234 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8341237 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1450 A B D P Q _112897 pat e q f) = (term1450 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8341236 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8341238 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8341239 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1451 A B D P Q _112897 pat e q f) = (term1451 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8341238 A P Q) (@lem8341237 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8341240 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1453 A B D P Q _112897 pat e q) = (term1453 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8341239 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8341241 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341242 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1454 A B D P Q _112897 pat e q) = (term1454 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8341241 A B) (@lem8341240 A B D P Q _112897 pat e q)). Qed.
Lemma lem8341243 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1456 A B D P Q _112897 pat e) = (term1456 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8341242 A B D P Q _112897 pat e q)). Qed.
Lemma lem8341244 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8341245 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1457 A B D P Q _112897 pat e) = (term1457 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8341244 P Q) (@lem8341243 A B D P Q _112897 pat e)). Qed.
Lemma lem8341246 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1459 A B D P Q _112897 pat) = (term1459 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8341245 A B D P Q _112897 pat e)). Qed.
Lemma lem8341247 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8341248 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1460 A B D P Q _112897 pat) = (term1460 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8341247 D P) (@lem8341246 A B D P Q _112897 pat)). Qed.
Lemma lem8341249 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1462 A B D P Q _112897) = (term1462 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8341248 A B D P Q _112897 pat)). Qed.
Lemma lem8341250 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8341251 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1463 A B D P Q _112897) = (term1463 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8341250 D Q) (@lem8341249 A B D P Q _112897)). Qed.
Lemma lem8341252 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8341253 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1465 A B D P Q _112897) = (term1465 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8341252) (@lem8341251 A B D P Q _112897)). Qed.
Lemma lem8341254 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1559 A B D P Q lt2 s p _112897 arg pat e q _112898) = (term1630 A B D P Q lt2 s p _112897 arg pat e q).
Proof. exact (MK_COMB (@lem8341253 A B D P Q _112897) (@lem8341203 A B D P Q _112898 lt2 s p _112897 arg pat e q)). Qed.
Lemma lem8341255 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1560 A B D P Q lt2 s p arg pat e q _112898) = (term1631 A B D P Q lt2 s p arg pat e q).
Proof. exact (fun_ext (fun _112897 : type906 A B D P Q => @lem8341254 A B D P Q _112898 lt2 s p _112897 arg pat e q)). Qed.
Lemma lem8341256 {A B D P Q : Type'} : (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)) = (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B)).
Proof. exact (eq_refl (@all ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B))). Qed.
Lemma lem8341257 {A B D P Q : Type'} (_112898 : B) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1561 A B D P Q lt2 s p arg pat e q _112898) = (term1632 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8341256 A B D P Q) (@lem8341255 A B D P Q _112898 lt2 s p arg pat e q)). Qed.
Lemma lem8341258 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1564 A B D P Q lt2 s p arg pat e q) = (term1633 A B D P Q lt2 s p arg pat e q).
Proof. exact (fun_ext (fun _112898 : B => @lem8341257 A B D P Q _112898 lt2 s p arg pat e q)). Qed.
Lemma lem8341259 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8341260 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1565 A B D P Q lt2 s p arg pat e q) = (term1634 A B D P Q lt2 s p arg pat e q).
Proof. exact (MK_COMB (@lem8341259 B) (@lem8341258 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8341261 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1567 A B D P Q s p arg pat e q) = (term1635 A B D P Q s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8341260 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8341262 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8341263 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1569 A B D P Q s p arg pat e q) = (term1636 A B D P Q s p arg pat e q).
Proof. exact (MK_COMB (@lem8341262 A) (@lem8341261 A B D P Q s p arg pat e q)). Qed.
Lemma lem8341264 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1571 A B D P Q p arg pat e q) = (term1637 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8341263 A B D P Q s p arg pat e q)). Qed.
Lemma lem8341265 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8341266 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1573 A B D P Q p arg pat e q) = (term1638 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8341265 A P) (@lem8341264 A B D P Q p arg pat e q)). Qed.
Lemma lem8341267 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1575 A B D P Q arg pat e q) = (term1639 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8341266 A B D P Q p arg pat e q)). Qed.
Lemma lem8341268 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8341269 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1577 A B D P Q arg pat e q) = (term1640 A B D P Q arg pat e q).
Proof. exact (MK_COMB (@lem8341268 A B P) (@lem8341267 A B D P Q arg pat e q)). Qed.
Lemma lem8341270 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1579 A B D P Q pat e q) = (term1641 A B D P Q pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8341269 A B D P Q arg pat e q)). Qed.
Lemma lem8341271 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8341272 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1581 A B D P Q pat e q) = (term1642 A B D P Q pat e q).
Proof. exact (MK_COMB (@lem8341271 A P Q) (@lem8341270 A B D P Q pat e q)). Qed.
Lemma lem8341273 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1583 A B D P Q e q) = (term1643 A B D P Q e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8341272 A B D P Q pat e q)). Qed.
Lemma lem8341274 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8341275 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1585 A B D P Q e q) = (term1644 A B D P Q e q).
Proof. exact (MK_COMB (@lem8341274 D Q) (@lem8341273 A B D P Q e q)). Qed.
Lemma lem8341276 {A B D P Q : Type'} (q : type1413 P Q) : (term1587 A B D P Q q) = (term1645 A B D P Q q).
Proof. exact (fun_ext (fun e : P -> D => @lem8341275 A B D P Q e q)). Qed.
Lemma lem8341277 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8341278 {A B D P Q : Type'} (q : type1413 P Q) : (term1589 A B D P Q q) = (term1646 A B D P Q q).
Proof. exact (MK_COMB (@lem8341277 D P) (@lem8341276 A B D P Q q)). Qed.
Lemma lem8341279 {A B D P Q : Type'} : (term1591 A B D P Q) = (term1647 A B D P Q).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8341278 A B D P Q q)). Qed.
Lemma lem8341280 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8341281 {A B D P Q : Type'} : (term1593 A B D P Q) = (term1648 A B D P Q).
Proof. exact (MK_COMB (@lem8341280 P Q) (@lem8341279 A B D P Q)). Qed.
Lemma lem8341282 {A B D P Q : Type'} : (term1592 A B D P Q) = (term1648 A B D P Q).
Proof. exact (TRANS (@lem8340846 A B D P Q) (@lem8341281 A B D P Q)). Qed.
Lemma lem8341326 {A : Type'} (t : Prop) : (term1551 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8341327 {B : Type'} (t : Prop) : (term1551 B t) = t.
Proof. exact (@lem8341326 B t). Qed.
Lemma lem8341328 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1634 A B D P Q lt2 s p arg pat e q) = (term1632 A B D P Q lt2 s p arg pat e q).
Proof. exact (@lem8341327 B (term1632 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8341653 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1635 A B D P Q s p arg pat e q) = (term1649 A B D P Q s p arg pat e q).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8341328 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8341654 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8341655 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1636 A B D P Q s p arg pat e q) = (term1650 A B D P Q s p arg pat e q).
Proof. exact (MK_COMB (@lem8341654 A) (@lem8341653 A B D P Q s p arg pat e q)). Qed.
Lemma lem8341662 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1637 A B D P Q p arg pat e q) = (term1651 A B D P Q p arg pat e q).
Proof. exact (fun_ext (fun s : P -> A => @lem8341655 A B D P Q s p arg pat e q)). Qed.
Lemma lem8341663 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8341664 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1638 A B D P Q p arg pat e q) = (term1652 A B D P Q p arg pat e q).
Proof. exact (MK_COMB (@lem8341663 A P) (@lem8341662 A B D P Q p arg pat e q)). Qed.
Lemma lem8341671 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1639 A B D P Q arg pat e q) = (term1653 A B D P Q arg pat e q).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8341664 A B D P Q p arg pat e q)). Qed.
Lemma lem8341672 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8341673 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1640 A B D P Q arg pat e q) = (term1654 A B D P Q arg pat e q).
Proof. exact (MK_COMB (@lem8341672 A B P) (@lem8341671 A B D P Q arg pat e q)). Qed.
Lemma lem8341680 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1641 A B D P Q pat e q) = (term1655 A B D P Q pat e q).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8341673 A B D P Q arg pat e q)). Qed.
Lemma lem8341681 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8341682 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1642 A B D P Q pat e q) = (term1656 A B D P Q pat e q).
Proof. exact (MK_COMB (@lem8341681 A P Q) (@lem8341680 A B D P Q pat e q)). Qed.
Lemma lem8341689 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1643 A B D P Q e q) = (term1657 A B D P Q e q).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8341682 A B D P Q pat e q)). Qed.
Lemma lem8341690 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8341691 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term1644 A B D P Q e q) = (term1658 A B D P Q e q).
Proof. exact (MK_COMB (@lem8341690 D Q) (@lem8341689 A B D P Q e q)). Qed.
Lemma lem8341698 {A B D P Q : Type'} (q : type1413 P Q) : (term1645 A B D P Q q) = (term1659 A B D P Q q).
Proof. exact (fun_ext (fun e : P -> D => @lem8341691 A B D P Q e q)). Qed.
Lemma lem8341699 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8341700 {A B D P Q : Type'} (q : type1413 P Q) : (term1646 A B D P Q q) = (term1660 A B D P Q q).
Proof. exact (MK_COMB (@lem8341699 D P) (@lem8341698 A B D P Q q)). Qed.
Lemma lem8341707 {A B D P Q : Type'} : (term1647 A B D P Q) = (term1661 A B D P Q).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8341700 A B D P Q q)). Qed.
Lemma lem8341708 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8341709 {A B D P Q : Type'} : (term1648 A B D P Q) = (term1662 A B D P Q).
Proof. exact (MK_COMB (@lem8341708 P Q) (@lem8341707 A B D P Q)). Qed.
Lemma lem8341716 {A B D P Q : Type'} : (term1592 A B D P Q) = (term1662 A B D P Q).
Proof. exact (TRANS (@lem8341282 A B D P Q) (@lem8341709 A B D P Q)). Qed.
Lemma lem8341717 {A B D P Q : Type'} : (term1662 A B D P Q) = (term1592 A B D P Q).
Proof. exact (SYM (@lem8341716 A B D P Q)). Qed.
Lemma lem8341718 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : term1463 A B D P Q _112897) : term1463 A B D P Q _112897.
Proof. exact (h1). Qed.
Lemma lem8341719 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term1341 D P Q _112896.
Proof. exact (h1). Qed.
Lemma lem8341720 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term36 A B D P Q p pat e q arg.
Proof. exact (h1). Qed.
Lemma lem8341721 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term35 A B D P Q p q pat e arg lt2 s.
Proof. exact (h1). Qed.
Lemma lem8341722 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term1122 A B P lt2 s p) : term1122 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8341724 (p : Prop) : p = (term226 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8341725 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1623 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1663 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (@lem8341724 (term1623 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341726 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1663 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term1623 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (SYM (@lem8341725 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8341727 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8341735 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term436 A B P Q q f arg a t x) = (term437 A B P Q q f arg a t x).
Proof. exact (@lem17045 (q a t) ((term77 A B P Q f arg a t) = x)). Qed.
Lemma lem8341737 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term413 D P Q pat t e a) = (term413 D P Q pat t e a).
Proof. exact (eq_refl (term413 D P Q pat t e a)). Qed.
Lemma lem8341738 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term438 A B D P Q pat e q f arg a t x) = (term439 A B D P Q pat e q f arg a t x).
Proof. exact (MK_COMB (@lem8341737 D P Q pat t e a) (@lem8341735 A B P Q q f arg a t x)). Qed.
Lemma lem8341739 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term440 A B D P Q pat e q f arg a t x) = (term438 A B D P Q pat e q f arg a t x).
Proof. exact (@lem17045 ((pat t) = (e a)) (term441 A B P Q q f arg a t x)). Qed.
Lemma lem8341740 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term440 A B D P Q pat e q f arg a t x) = (term439 A B D P Q pat e q f arg a t x).
Proof. exact (TRANS (@lem8341739 A B D P Q pat e q f arg a t x) (@lem8341738 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341741 {Q : Type'} (P : Q -> Prop) : (term442 Q P) = (term443 Q P).
Proof. exact (@lem18394 Q P). Qed.
Lemma lem8341742 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term444 A B D P Q pat e q f arg a x) = (term445 A B D P Q pat e q f arg a x).
Proof. exact (@lem8341741 Q (term275 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341743 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term446 A B D P Q pat e q f arg a x t) = (term274 A B D P Q pat e q f arg a t x).
Proof. exact (eq_refl (term446 A B D P Q pat e q f arg a x t)). Qed.
Lemma lem8341744 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8341745 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term447 A B D P Q pat e q f arg a x t) = (term440 A B D P Q pat e q f arg a t x).
Proof. exact (MK_COMB (@lem8341744) (@lem8341743 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341746 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term447 A B D P Q pat e q f arg a x t) = (term439 A B D P Q pat e q f arg a t x).
Proof. exact (TRANS (@lem8341745 A B D P Q pat e q f arg a t x) (@lem8341740 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341747 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term448 A B D P Q pat e q f arg a x) = (term449 A B D P Q pat e q f arg a x).
Proof. exact (fun_ext (fun t : Q => @lem8341746 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8341748 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8341749 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term445 A B D P Q pat e q f arg a x) = (term450 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8341748 Q) (@lem8341747 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341750 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term444 A B D P Q pat e q f arg a x) = (term450 A B D P Q pat e q f arg a x).
Proof. exact (TRANS (@lem8341742 A B D P Q pat e q f arg a x) (@lem8341749 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341759 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1439 A B D P Q t _112897 pat e q f arg a) = (term1439 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1439 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8341760 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1441 A B D P Q _112897 pat e q f arg a) = (term1441 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8341759 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8341761 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8341762 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1442 A B D P Q _112897 pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341761 Q) (@lem8341760 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341763 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8341764 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1665 A B D P Q pat e q f arg a x) = (term461 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8341763) (@lem8341750 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341765 {A B D P Q : Type'} (x : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1666 A B D P Q x _112897 pat e q f arg a) = (term1667 A B D P Q x _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341764 A B D P Q pat e q f arg a x) (@lem8341762 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341766 {A B D P Q : Type'} (x : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1443 A B D P Q x _112897 pat e q f arg a) = (term1666 A B D P Q x _112897 pat e q f arg a).
Proof. exact (@lem17265 (term276 A B D P Q pat e q f arg a x) (term1442 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341767 {A B D P Q : Type'} (x : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1443 A B D P Q x _112897 pat e q f arg a) = (term1667 A B D P Q x _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8341766 A B D P Q x _112897 pat e q f arg a) (@lem8341765 A B D P Q x _112897 pat e q f arg a)). Qed.
Lemma lem8341768 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1444 A B D P Q _112897 pat e q f arg a) = (term1668 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8341767 A B D P Q x _112897 pat e q f arg a)). Qed.
Lemma lem8341769 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8341770 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1445 A B D P Q _112897 pat e q f arg a) = (term1669 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341769 B) (@lem8341768 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341771 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1447 A B D P Q _112897 pat e q f arg) = (term1670 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8341770 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341772 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341773 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1448 A B D P Q _112897 pat e q f arg) = (term1671 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8341772 P) (@lem8341771 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8341774 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1450 A B D P Q _112897 pat e q f) = (term1672 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8341773 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8341775 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8341776 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1451 A B D P Q _112897 pat e q f) = (term1673 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8341775 A P Q) (@lem8341774 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8341777 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1453 A B D P Q _112897 pat e q) = (term1674 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8341776 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8341778 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8341779 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1454 A B D P Q _112897 pat e q) = (term1675 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8341778 A B) (@lem8341777 A B D P Q _112897 pat e q)). Qed.
Lemma lem8341780 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1456 A B D P Q _112897 pat e) = (term1676 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8341779 A B D P Q _112897 pat e q)). Qed.
Lemma lem8341781 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8341782 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1457 A B D P Q _112897 pat e) = (term1677 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8341781 P Q) (@lem8341780 A B D P Q _112897 pat e)). Qed.
Lemma lem8341783 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1459 A B D P Q _112897 pat) = (term1678 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8341782 A B D P Q _112897 pat e)). Qed.
Lemma lem8341784 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8341785 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1460 A B D P Q _112897 pat) = (term1679 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8341784 D P) (@lem8341783 A B D P Q _112897 pat)). Qed.
Lemma lem8341786 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1462 A B D P Q _112897) = (term1680 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8341785 A B D P Q _112897 pat)). Qed.
Lemma lem8341787 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8341788 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1463 A B D P Q _112897) = (term1681 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8341787 D Q) (@lem8341786 A B D P Q _112897)). Qed.
Lemma lem8341834 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1682 A P Q) = (term1683 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem8341835 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1682 B P Q) = (term1683 B P Q).
Proof. exact (@lem8341834 B P Q). Qed.
Lemma lem8341836 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1684 A B D P Q _112897 pat e q f arg a) = (term1685 A B D P Q _112897 pat e q f arg a).
Proof. exact (@lem8341835 B (term495 A B D P Q pat e q f arg a) (term1442 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341837 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1686 A B D P Q pat e q f arg a x) = (term450 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term1686 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8341839 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1687 A B D P Q pat e q f arg a x) = (term461 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8341838) (@lem8341837 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341840 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1442 A B D P Q _112897 pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1442 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341841 {A B D P Q : Type'} (x : B) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1688 A B D P Q x _112897 pat e q f arg a) = (term1667 A B D P Q x _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341839 A B D P Q pat e q f arg a x) (@lem8341840 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341842 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1689 A B D P Q _112897 pat e q f arg a) = (term1668 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8341841 A B D P Q x _112897 pat e q f arg a)). Qed.
Lemma lem8341843 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8341844 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1684 A B D P Q _112897 pat e q f arg a) = (term1669 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341843 B) (@lem8341842 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341845 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8341846 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1690 A B D P Q _112897 pat e q f arg a) = (term1691 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341845) (@lem8341844 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341847 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term1686 A B D P Q pat e q f arg a x) = (term450 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term1686 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341848 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1692 A B D P Q pat e q f arg a) = (term495 A B D P Q pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8341847 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8341849 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8341850 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1693 A B D P Q pat e q f arg a) = (term497 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8341849 B) (@lem8341848 A B D P Q pat e q f arg a)). Qed.
Lemma lem8341851 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8341852 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1694 A B D P Q pat e q f arg a) = (term499 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8341851) (@lem8341850 A B D P Q pat e q f arg a)). Qed.
Lemma lem8341853 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1442 A B D P Q _112897 pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1442 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341854 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1685 A B D P Q _112897 pat e q f arg a) = (term1695 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8341852 A B D P Q pat e q f arg a) (@lem8341853 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341855 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term1684 A B D P Q _112897 pat e q f arg a) = (term1685 A B D P Q _112897 pat e q f arg a)) = ((term1669 A B D P Q _112897 pat e q f arg a) = (term1695 A B D P Q _112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8341846 A B D P Q _112897 pat e q f arg a) (@lem8341854 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341856 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1669 A B D P Q _112897 pat e q f arg a) = (term1695 A B D P Q _112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8341855 A B D P Q _112897 pat e q f arg a) (@lem8341836 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341957 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1670 A B D P Q _112897 pat e q f arg) = (term1696 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8341856 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8341958 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8341959 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1671 A B D P Q _112897 pat e q f arg) = (term1697 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8341958 P) (@lem8341957 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342008 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1672 A B D P Q _112897 pat e q f) = (term1698 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8341959 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342009 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8342010 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1673 A B D P Q _112897 pat e q f) = (term1699 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342009 A P Q) (@lem8342008 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342015 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1674 A B D P Q _112897 pat e q) = (term1700 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8342010 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342016 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342017 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1675 A B D P Q _112897 pat e q) = (term1701 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342016 A B) (@lem8342015 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342022 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1676 A B D P Q _112897 pat e) = (term1702 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342017 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342023 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342024 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1677 A B D P Q _112897 pat e) = (term1703 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342023 P Q) (@lem8342022 A B D P Q _112897 pat e)). Qed.
Lemma lem8342029 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1678 A B D P Q _112897 pat) = (term1704 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342024 A B D P Q _112897 pat e)). Qed.
Lemma lem8342030 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342031 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1679 A B D P Q _112897 pat) = (term1705 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342030 D P) (@lem8342029 A B D P Q _112897 pat)). Qed.
Lemma lem8342036 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1680 A B D P Q _112897) = (term1706 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342031 A B D P Q _112897 pat)). Qed.
Lemma lem8342037 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342038 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1681 A B D P Q _112897) = (term1707 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8342037 D Q) (@lem8342036 A B D P Q _112897)). Qed.
Lemma lem8342044 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8342045 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8342044 Q P Q'). Qed.
Lemma lem8342046 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1708 A B D P Q _112897 pat e q f arg a) = (term1709 A B D P Q _112897 pat e q f arg a).
Proof. exact (@lem8342045 Q (term497 A B D P Q pat e q f arg a) (term1441 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342047 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1710 A B D P Q _112897 pat e q f arg a t) = (term1439 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1710 A B D P Q _112897 pat e q f arg a t)). Qed.
Lemma lem8342048 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1711 A B D P Q _112897 pat e q f arg a) = (term1441 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8342047 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342049 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8342050 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1712 A B D P Q _112897 pat e q f arg a) = (term1442 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342049 Q) (@lem8342048 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342051 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term499 A B D P Q pat e q f arg a) = (term499 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg a)). Qed.
Lemma lem8342052 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1708 A B D P Q _112897 pat e q f arg a) = (term1695 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342051 A B D P Q pat e q f arg a) (@lem8342050 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342053 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342054 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1713 A B D P Q _112897 pat e q f arg a) = (term1714 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342053) (@lem8342052 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342055 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1710 A B D P Q _112897 pat e q f arg a t) = (term1439 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1710 A B D P Q _112897 pat e q f arg a t)). Qed.
Lemma lem8342056 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term499 A B D P Q pat e q f arg a) = (term499 A B D P Q pat e q f arg a).
Proof. exact (eq_refl (term499 A B D P Q pat e q f arg a)). Qed.
Lemma lem8342057 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1715 A B D P Q _112897 pat e q f arg a t) = (term1716 A B D P Q t _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342056 A B D P Q pat e q f arg a) (@lem8342055 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342058 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1717 A B D P Q _112897 pat e q f arg a) = (term1718 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8342057 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342059 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8342060 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1709 A B D P Q _112897 pat e q f arg a) = (term1719 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342059 Q) (@lem8342058 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342061 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term1708 A B D P Q _112897 pat e q f arg a) = (term1709 A B D P Q _112897 pat e q f arg a)) = ((term1695 A B D P Q _112897 pat e q f arg a) = (term1719 A B D P Q _112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8342054 A B D P Q _112897 pat e q f arg a) (@lem8342060 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342062 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1695 A B D P Q _112897 pat e q f arg a) = (term1719 A B D P Q _112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8342061 A B D P Q _112897 pat e q f arg a) (@lem8342046 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342063 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1696 A B D P Q _112897 pat e q f arg) = (term1720 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8342062 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342064 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342065 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1697 A B D P Q _112897 pat e q f arg) = (term1721 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342064 P) (@lem8342063 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342067 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342068 {P Q : Type'} (P' : type1413 P Q) : (term1722 P Q P') = (term1723 P Q P').
Proof. exact (@lem8342067 P Q P'). Qed.
Lemma lem8342069 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1724 A B D P Q _112897 pat e q f arg) = (term1725 A B D P Q _112897 pat e q f arg).
Proof. exact (@lem8342068 P Q (term1726 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342070 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1727 A B D P Q _112897 pat e q f arg a) = (term1718 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1727 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342071 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342072 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term1728 A B D P Q _112897 pat e q f arg a t) = (term1729 A B D P Q _112897 pat e q f arg a t).
Proof. exact (MK_COMB (@lem8342070 A B D P Q _112897 pat e q f arg a) (@lem8342071 Q t)). Qed.
Lemma lem8342073 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1729 A B D P Q _112897 pat e q f arg a t) = (term1716 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1729 A B D P Q _112897 pat e q f arg a t)). Qed.
Lemma lem8342074 {A B D P Q : Type'} (t : Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1728 A B D P Q _112897 pat e q f arg a t) = (term1716 A B D P Q t _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8342072 A B D P Q _112897 pat e q f arg a t) (@lem8342073 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342075 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1730 A B D P Q _112897 pat e q f arg a) = (term1718 A B D P Q _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8342074 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342076 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8342077 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1731 A B D P Q _112897 pat e q f arg a) = (term1719 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8342076 Q) (@lem8342075 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342078 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1732 A B D P Q _112897 pat e q f arg) = (term1720 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8342077 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342079 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342080 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1724 A B D P Q _112897 pat e q f arg) = (term1721 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342079 P) (@lem8342078 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342081 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342082 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1733 A B D P Q _112897 pat e q f arg) = (term1734 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342081) (@lem8342080 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342083 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1727 A B D P Q _112897 pat e q f arg a) = (term1718 A B D P Q _112897 pat e q f arg a).
Proof. exact (eq_refl (term1727 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8342084 {P Q : Type'} (t : P -> Q) (a : P) : (t a) = (t a).
Proof. exact (eq_refl (t a)). Qed.
Lemma lem8342085 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (t : P -> Q) (a : P) : (term1735 A B D P Q _112897 pat e q f arg t a) = (term1736 A B D P Q _112897 pat e q f arg t a).
Proof. exact (MK_COMB (@lem8342083 A B D P Q _112897 pat e q f arg a) (@lem8342084 P Q t a)). Qed.
Lemma lem8342086 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1736 A B D P Q _112897 pat e q f arg t a) = (term1737 A B D P Q t _112897 pat e q f arg a).
Proof. exact (eq_refl (term1736 A B D P Q _112897 pat e q f arg t a)). Qed.
Lemma lem8342087 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term1735 A B D P Q _112897 pat e q f arg t a) = (term1737 A B D P Q t _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8342085 A B D P Q _112897 pat e q f arg t a) (@lem8342086 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342088 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1738 A B D P Q _112897 pat e q f arg t) = (term1739 A B D P Q t _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8342087 A B D P Q t _112897 pat e q f arg a)). Qed.
Lemma lem8342089 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342090 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1740 A B D P Q _112897 pat e q f arg t) = (term1741 A B D P Q t _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342089 P) (@lem8342088 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342091 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1742 A B D P Q _112897 pat e q f arg) = (term1743 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun t : P -> Q => @lem8342090 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342092 {P Q : Type'} : (@ex (P -> Q)) = (@ex (P -> Q)).
Proof. exact (eq_refl (@ex (P -> Q))). Qed.
Lemma lem8342093 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1725 A B D P Q _112897 pat e q f arg) = (term1744 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342092 P Q) (@lem8342091 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342094 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : ((term1724 A B D P Q _112897 pat e q f arg) = (term1725 A B D P Q _112897 pat e q f arg)) = ((term1721 A B D P Q _112897 pat e q f arg) = (term1744 A B D P Q _112897 pat e q f arg)).
Proof. exact (MK_COMB (@lem8342082 A B D P Q _112897 pat e q f arg) (@lem8342093 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342095 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1721 A B D P Q _112897 pat e q f arg) = (term1744 A B D P Q _112897 pat e q f arg).
Proof. exact (EQ_MP (@lem8342094 A B D P Q _112897 pat e q f arg) (@lem8342069 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342096 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1697 A B D P Q _112897 pat e q f arg) = (term1744 A B D P Q _112897 pat e q f arg).
Proof. exact (TRANS (@lem8342065 A B D P Q _112897 pat e q f arg) (@lem8342095 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342097 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1698 A B D P Q _112897 pat e q f) = (term1745 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8342096 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342098 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8342099 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1699 A B D P Q _112897 pat e q f) = (term1746 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342098 A P Q) (@lem8342097 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342101 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342102 {A P Q : Type'} (P' : type762 A P Q) : (term1747 A P Q P') = (term1748 A P Q P').
Proof. exact (@lem8342101 (type1475 A P Q) (P -> Q) P'). Qed.
Lemma lem8342103 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1749 A B D P Q _112897 pat e q f) = (term1750 A B D P Q _112897 pat e q f).
Proof. exact (@lem8342102 A P Q (term1751 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342104 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1752 A B D P Q _112897 pat e q f arg) = (term1743 A B D P Q _112897 pat e q f arg).
Proof. exact (eq_refl (term1752 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342105 {P Q : Type'} (t : P -> Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342106 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (t : P -> Q) : (term1753 A B D P Q _112897 pat e q f arg t) = (term1754 A B D P Q _112897 pat e q f arg t).
Proof. exact (MK_COMB (@lem8342104 A B D P Q _112897 pat e q f arg) (@lem8342105 P Q t)). Qed.
Lemma lem8342107 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1754 A B D P Q _112897 pat e q f arg t) = (term1741 A B D P Q t _112897 pat e q f arg).
Proof. exact (eq_refl (term1754 A B D P Q _112897 pat e q f arg t)). Qed.
Lemma lem8342108 {A B D P Q : Type'} (t : P -> Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1753 A B D P Q _112897 pat e q f arg t) = (term1741 A B D P Q t _112897 pat e q f arg).
Proof. exact (TRANS (@lem8342106 A B D P Q _112897 pat e q f arg t) (@lem8342107 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342109 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1755 A B D P Q _112897 pat e q f arg) = (term1743 A B D P Q _112897 pat e q f arg).
Proof. exact (fun_ext (fun t : P -> Q => @lem8342108 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342110 {P Q : Type'} : (@ex (P -> Q)) = (@ex (P -> Q)).
Proof. exact (eq_refl (@ex (P -> Q))). Qed.
Lemma lem8342111 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1756 A B D P Q _112897 pat e q f arg) = (term1744 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8342110 P Q) (@lem8342109 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342112 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1757 A B D P Q _112897 pat e q f) = (term1745 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8342111 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342113 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8342114 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1749 A B D P Q _112897 pat e q f) = (term1746 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342113 A P Q) (@lem8342112 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342116 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1758 A B D P Q _112897 pat e q f) = (term1759 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342115) (@lem8342114 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342117 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1752 A B D P Q _112897 pat e q f arg) = (term1743 A B D P Q _112897 pat e q f arg).
Proof. exact (eq_refl (term1752 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8342118 {A P Q : Type'} (t : type765 A P Q) (arg : type1475 A P Q) : (t arg) = (t arg).
Proof. exact (eq_refl (t arg)). Qed.
Lemma lem8342119 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (t : type765 A P Q) (arg : type1475 A P Q) : (term1760 A B D P Q _112897 pat e q f t arg) = (term1761 A B D P Q _112897 pat e q f t arg).
Proof. exact (MK_COMB (@lem8342117 A B D P Q _112897 pat e q f arg) (@lem8342118 A P Q t arg)). Qed.
Lemma lem8342120 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1761 A B D P Q _112897 pat e q f t arg) = (term1762 A B D P Q t _112897 pat e q f arg).
Proof. exact (eq_refl (term1761 A B D P Q _112897 pat e q f t arg)). Qed.
Lemma lem8342121 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term1760 A B D P Q _112897 pat e q f t arg) = (term1762 A B D P Q t _112897 pat e q f arg).
Proof. exact (TRANS (@lem8342119 A B D P Q _112897 pat e q f t arg) (@lem8342120 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342122 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1763 A B D P Q _112897 pat e q f t) = (term1764 A B D P Q t _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8342121 A B D P Q t _112897 pat e q f arg)). Qed.
Lemma lem8342123 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8342124 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1765 A B D P Q _112897 pat e q f t) = (term1766 A B D P Q t _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342123 A P Q) (@lem8342122 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342125 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1767 A B D P Q _112897 pat e q f) = (term1768 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun t : type765 A P Q => @lem8342124 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342126 {A P Q : Type'} : (@ex ((P -> Q -> A) -> P -> Q)) = (@ex ((P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342127 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1750 A B D P Q _112897 pat e q f) = (term1769 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342126 A P Q) (@lem8342125 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342128 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : ((term1749 A B D P Q _112897 pat e q f) = (term1750 A B D P Q _112897 pat e q f)) = ((term1746 A B D P Q _112897 pat e q f) = (term1769 A B D P Q _112897 pat e q f)).
Proof. exact (MK_COMB (@lem8342116 A B D P Q _112897 pat e q f) (@lem8342127 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342129 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1746 A B D P Q _112897 pat e q f) = (term1769 A B D P Q _112897 pat e q f).
Proof. exact (EQ_MP (@lem8342128 A B D P Q _112897 pat e q f) (@lem8342103 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342130 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1699 A B D P Q _112897 pat e q f) = (term1769 A B D P Q _112897 pat e q f).
Proof. exact (TRANS (@lem8342099 A B D P Q _112897 pat e q f) (@lem8342129 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342131 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1700 A B D P Q _112897 pat e q) = (term1770 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8342130 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342132 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342133 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1701 A B D P Q _112897 pat e q) = (term1771 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342132 A B) (@lem8342131 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342135 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342136 {A B P Q : Type'} (P' : type509 A B P Q) : (term1772 A B P Q P') = (term1773 A B P Q P').
Proof. exact (@lem8342135 (A -> B) (type765 A P Q) P'). Qed.
Lemma lem8342137 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1774 A B D P Q _112897 pat e q) = (term1775 A B D P Q _112897 pat e q).
Proof. exact (@lem8342136 A B P Q (term1776 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342138 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1777 A B D P Q _112897 pat e q f) = (term1768 A B D P Q _112897 pat e q f).
Proof. exact (eq_refl (term1777 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342139 {A P Q : Type'} (t : type765 A P Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342140 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (t : type765 A P Q) : (term1778 A B D P Q _112897 pat e q f t) = (term1779 A B D P Q _112897 pat e q f t).
Proof. exact (MK_COMB (@lem8342138 A B D P Q _112897 pat e q f) (@lem8342139 A P Q t)). Qed.
Lemma lem8342141 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1779 A B D P Q _112897 pat e q f t) = (term1766 A B D P Q t _112897 pat e q f).
Proof. exact (eq_refl (term1779 A B D P Q _112897 pat e q f t)). Qed.
Lemma lem8342142 {A B D P Q : Type'} (t : type765 A P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1778 A B D P Q _112897 pat e q f t) = (term1766 A B D P Q t _112897 pat e q f).
Proof. exact (TRANS (@lem8342140 A B D P Q _112897 pat e q f t) (@lem8342141 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342143 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1780 A B D P Q _112897 pat e q f) = (term1768 A B D P Q _112897 pat e q f).
Proof. exact (fun_ext (fun t : type765 A P Q => @lem8342142 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342144 {A P Q : Type'} : (@ex ((P -> Q -> A) -> P -> Q)) = (@ex ((P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342145 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1781 A B D P Q _112897 pat e q f) = (term1769 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8342144 A P Q) (@lem8342143 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342146 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1782 A B D P Q _112897 pat e q) = (term1770 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8342145 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342147 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342148 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1774 A B D P Q _112897 pat e q) = (term1771 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342147 A B) (@lem8342146 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342149 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342150 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1783 A B D P Q _112897 pat e q) = (term1784 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342149) (@lem8342148 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342151 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1777 A B D P Q _112897 pat e q f) = (term1768 A B D P Q _112897 pat e q f).
Proof. exact (eq_refl (term1777 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8342152 {A B P Q : Type'} (t : type535 A B P Q) (f : A -> B) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem8342153 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : type535 A B P Q) (f : A -> B) : (term1785 A B D P Q _112897 pat e q t f) = (term1786 A B D P Q _112897 pat e q t f).
Proof. exact (MK_COMB (@lem8342151 A B D P Q _112897 pat e q f) (@lem8342152 A B P Q t f)). Qed.
Lemma lem8342154 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1786 A B D P Q _112897 pat e q t f) = (term1787 A B D P Q t _112897 pat e q f).
Proof. exact (eq_refl (term1786 A B D P Q _112897 pat e q t f)). Qed.
Lemma lem8342155 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term1785 A B D P Q _112897 pat e q t f) = (term1787 A B D P Q t _112897 pat e q f).
Proof. exact (TRANS (@lem8342153 A B D P Q _112897 pat e q t f) (@lem8342154 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342156 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1788 A B D P Q _112897 pat e q t) = (term1789 A B D P Q t _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8342155 A B D P Q t _112897 pat e q f)). Qed.
Lemma lem8342157 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342158 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1790 A B D P Q _112897 pat e q t) = (term1791 A B D P Q t _112897 pat e q).
Proof. exact (MK_COMB (@lem8342157 A B) (@lem8342156 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342159 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1792 A B D P Q _112897 pat e q) = (term1793 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun t : type535 A B P Q => @lem8342158 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342160 {A B P Q : Type'} : (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342161 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1775 A B D P Q _112897 pat e q) = (term1794 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342160 A B P Q) (@lem8342159 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342162 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term1774 A B D P Q _112897 pat e q) = (term1775 A B D P Q _112897 pat e q)) = ((term1771 A B D P Q _112897 pat e q) = (term1794 A B D P Q _112897 pat e q)).
Proof. exact (MK_COMB (@lem8342150 A B D P Q _112897 pat e q) (@lem8342161 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342163 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1771 A B D P Q _112897 pat e q) = (term1794 A B D P Q _112897 pat e q).
Proof. exact (EQ_MP (@lem8342162 A B D P Q _112897 pat e q) (@lem8342137 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342164 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1701 A B D P Q _112897 pat e q) = (term1794 A B D P Q _112897 pat e q).
Proof. exact (TRANS (@lem8342133 A B D P Q _112897 pat e q) (@lem8342163 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342165 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1702 A B D P Q _112897 pat e) = (term1795 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342164 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342166 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342167 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1703 A B D P Q _112897 pat e) = (term1796 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342166 P Q) (@lem8342165 A B D P Q _112897 pat e)). Qed.
Lemma lem8342169 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342170 {A B P Q : Type'} (P' : type880 A B P Q) : (term1797 A B P Q P') = (term1798 A B P Q P').
Proof. exact (@lem8342169 (type1413 P Q) (type535 A B P Q) P'). Qed.
Lemma lem8342171 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1799 A B D P Q _112897 pat e) = (term1800 A B D P Q _112897 pat e).
Proof. exact (@lem8342170 A B P Q (term1801 A B D P Q _112897 pat e)). Qed.
Lemma lem8342172 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1802 A B D P Q _112897 pat e q) = (term1793 A B D P Q _112897 pat e q).
Proof. exact (eq_refl (term1802 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342173 {A B P Q : Type'} (t : type535 A B P Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342174 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : type535 A B P Q) : (term1803 A B D P Q _112897 pat e q t) = (term1804 A B D P Q _112897 pat e q t).
Proof. exact (MK_COMB (@lem8342172 A B D P Q _112897 pat e q) (@lem8342173 A B P Q t)). Qed.
Lemma lem8342175 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1804 A B D P Q _112897 pat e q t) = (term1791 A B D P Q t _112897 pat e q).
Proof. exact (eq_refl (term1804 A B D P Q _112897 pat e q t)). Qed.
Lemma lem8342176 {A B D P Q : Type'} (t : type535 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1803 A B D P Q _112897 pat e q t) = (term1791 A B D P Q t _112897 pat e q).
Proof. exact (TRANS (@lem8342174 A B D P Q _112897 pat e q t) (@lem8342175 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342177 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1805 A B D P Q _112897 pat e q) = (term1793 A B D P Q _112897 pat e q).
Proof. exact (fun_ext (fun t : type535 A B P Q => @lem8342176 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342178 {A B P Q : Type'} : (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342179 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1806 A B D P Q _112897 pat e q) = (term1794 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8342178 A B P Q) (@lem8342177 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342180 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1807 A B D P Q _112897 pat e) = (term1795 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342179 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342181 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342182 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1799 A B D P Q _112897 pat e) = (term1796 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342181 P Q) (@lem8342180 A B D P Q _112897 pat e)). Qed.
Lemma lem8342183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342184 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1808 A B D P Q _112897 pat e) = (term1809 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342183) (@lem8342182 A B D P Q _112897 pat e)). Qed.
Lemma lem8342185 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1802 A B D P Q _112897 pat e q) = (term1793 A B D P Q _112897 pat e q).
Proof. exact (eq_refl (term1802 A B D P Q _112897 pat e q)). Qed.
Lemma lem8342186 {A B P Q : Type'} (t : type882 A B P Q) (q : type1413 P Q) : (t q) = (t q).
Proof. exact (eq_refl (t q)). Qed.
Lemma lem8342187 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (t : type882 A B P Q) (q : type1413 P Q) : (term1810 A B D P Q _112897 pat e t q) = (term1811 A B D P Q _112897 pat e t q).
Proof. exact (MK_COMB (@lem8342185 A B D P Q _112897 pat e q) (@lem8342186 A B P Q t q)). Qed.
Lemma lem8342188 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1811 A B D P Q _112897 pat e t q) = (term1812 A B D P Q t _112897 pat e q).
Proof. exact (eq_refl (term1811 A B D P Q _112897 pat e t q)). Qed.
Lemma lem8342189 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1810 A B D P Q _112897 pat e t q) = (term1812 A B D P Q t _112897 pat e q).
Proof. exact (TRANS (@lem8342187 A B D P Q _112897 pat e t q) (@lem8342188 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342190 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1813 A B D P Q _112897 pat e t) = (term1814 A B D P Q t _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342189 A B D P Q t _112897 pat e q)). Qed.
Lemma lem8342191 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342192 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1815 A B D P Q _112897 pat e t) = (term1816 A B D P Q t _112897 pat e).
Proof. exact (MK_COMB (@lem8342191 P Q) (@lem8342190 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342193 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1817 A B D P Q _112897 pat e) = (term1818 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun t : type882 A B P Q => @lem8342192 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342194 {A B P Q : Type'} : (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342195 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1800 A B D P Q _112897 pat e) = (term1819 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342194 A B P Q) (@lem8342193 A B D P Q _112897 pat e)). Qed.
Lemma lem8342196 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : ((term1799 A B D P Q _112897 pat e) = (term1800 A B D P Q _112897 pat e)) = ((term1796 A B D P Q _112897 pat e) = (term1819 A B D P Q _112897 pat e)).
Proof. exact (MK_COMB (@lem8342184 A B D P Q _112897 pat e) (@lem8342195 A B D P Q _112897 pat e)). Qed.
Lemma lem8342197 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1796 A B D P Q _112897 pat e) = (term1819 A B D P Q _112897 pat e).
Proof. exact (EQ_MP (@lem8342196 A B D P Q _112897 pat e) (@lem8342171 A B D P Q _112897 pat e)). Qed.
Lemma lem8342198 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1703 A B D P Q _112897 pat e) = (term1819 A B D P Q _112897 pat e).
Proof. exact (TRANS (@lem8342167 A B D P Q _112897 pat e) (@lem8342197 A B D P Q _112897 pat e)). Qed.
Lemma lem8342199 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1704 A B D P Q _112897 pat) = (term1820 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342198 A B D P Q _112897 pat e)). Qed.
Lemma lem8342200 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342201 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1705 A B D P Q _112897 pat) = (term1821 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342200 D P) (@lem8342199 A B D P Q _112897 pat)). Qed.
Lemma lem8342203 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342204 {A B D P Q : Type'} (P' : type896 A B D P Q) : (term1822 A B D P Q P') = (term1823 A B D P Q P').
Proof. exact (@lem8342203 (P -> D) (type882 A B P Q) P'). Qed.
Lemma lem8342205 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1824 A B D P Q _112897 pat) = (term1825 A B D P Q _112897 pat).
Proof. exact (@lem8342204 A B D P Q (term1826 A B D P Q _112897 pat)). Qed.
Lemma lem8342206 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1827 A B D P Q _112897 pat e) = (term1818 A B D P Q _112897 pat e).
Proof. exact (eq_refl (term1827 A B D P Q _112897 pat e)). Qed.
Lemma lem8342207 {A B P Q : Type'} (t : type882 A B P Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342208 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (t : type882 A B P Q) : (term1828 A B D P Q _112897 pat e t) = (term1829 A B D P Q _112897 pat e t).
Proof. exact (MK_COMB (@lem8342206 A B D P Q _112897 pat e) (@lem8342207 A B P Q t)). Qed.
Lemma lem8342209 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1829 A B D P Q _112897 pat e t) = (term1816 A B D P Q t _112897 pat e).
Proof. exact (eq_refl (term1829 A B D P Q _112897 pat e t)). Qed.
Lemma lem8342210 {A B D P Q : Type'} (t : type882 A B P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1828 A B D P Q _112897 pat e t) = (term1816 A B D P Q t _112897 pat e).
Proof. exact (TRANS (@lem8342208 A B D P Q _112897 pat e t) (@lem8342209 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342211 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1830 A B D P Q _112897 pat e) = (term1818 A B D P Q _112897 pat e).
Proof. exact (fun_ext (fun t : type882 A B P Q => @lem8342210 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342212 {A B P Q : Type'} : (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342213 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1831 A B D P Q _112897 pat e) = (term1819 A B D P Q _112897 pat e).
Proof. exact (MK_COMB (@lem8342212 A B P Q) (@lem8342211 A B D P Q _112897 pat e)). Qed.
Lemma lem8342214 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1832 A B D P Q _112897 pat) = (term1820 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342213 A B D P Q _112897 pat e)). Qed.
Lemma lem8342215 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342216 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1824 A B D P Q _112897 pat) = (term1821 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342215 D P) (@lem8342214 A B D P Q _112897 pat)). Qed.
Lemma lem8342217 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342218 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1833 A B D P Q _112897 pat) = (term1834 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342217) (@lem8342216 A B D P Q _112897 pat)). Qed.
Lemma lem8342219 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1827 A B D P Q _112897 pat e) = (term1818 A B D P Q _112897 pat e).
Proof. exact (eq_refl (term1827 A B D P Q _112897 pat e)). Qed.
Lemma lem8342220 {A B D P Q : Type'} (t : type900 A B D P Q) (e : P -> D) : (t e) = (t e).
Proof. exact (eq_refl (t e)). Qed.
Lemma lem8342221 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (t : type900 A B D P Q) (e : P -> D) : (term1835 A B D P Q _112897 pat t e) = (term1836 A B D P Q _112897 pat t e).
Proof. exact (MK_COMB (@lem8342219 A B D P Q _112897 pat e) (@lem8342220 A B D P Q t e)). Qed.
Lemma lem8342222 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1836 A B D P Q _112897 pat t e) = (term1837 A B D P Q t _112897 pat e).
Proof. exact (eq_refl (term1836 A B D P Q _112897 pat t e)). Qed.
Lemma lem8342223 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term1835 A B D P Q _112897 pat t e) = (term1837 A B D P Q t _112897 pat e).
Proof. exact (TRANS (@lem8342221 A B D P Q _112897 pat t e) (@lem8342222 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342224 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1838 A B D P Q _112897 pat t) = (term1839 A B D P Q t _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342223 A B D P Q t _112897 pat e)). Qed.
Lemma lem8342225 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342226 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1840 A B D P Q _112897 pat t) = (term1841 A B D P Q t _112897 pat).
Proof. exact (MK_COMB (@lem8342225 D P) (@lem8342224 A B D P Q t _112897 pat)). Qed.
Lemma lem8342227 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1842 A B D P Q _112897 pat) = (term1843 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun t : type900 A B D P Q => @lem8342226 A B D P Q t _112897 pat)). Qed.
Lemma lem8342228 {A B D P Q : Type'} : (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342229 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1825 A B D P Q _112897 pat) = (term1844 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342228 A B D P Q) (@lem8342227 A B D P Q _112897 pat)). Qed.
Lemma lem8342230 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : ((term1824 A B D P Q _112897 pat) = (term1825 A B D P Q _112897 pat)) = ((term1821 A B D P Q _112897 pat) = (term1844 A B D P Q _112897 pat)).
Proof. exact (MK_COMB (@lem8342218 A B D P Q _112897 pat) (@lem8342229 A B D P Q _112897 pat)). Qed.
Lemma lem8342231 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1821 A B D P Q _112897 pat) = (term1844 A B D P Q _112897 pat).
Proof. exact (EQ_MP (@lem8342230 A B D P Q _112897 pat) (@lem8342205 A B D P Q _112897 pat)). Qed.
Lemma lem8342232 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1705 A B D P Q _112897 pat) = (term1844 A B D P Q _112897 pat).
Proof. exact (TRANS (@lem8342201 A B D P Q _112897 pat) (@lem8342231 A B D P Q _112897 pat)). Qed.
Lemma lem8342233 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1706 A B D P Q _112897) = (term1845 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342232 A B D P Q _112897 pat)). Qed.
Lemma lem8342234 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342235 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1707 A B D P Q _112897) = (term1846 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8342234 D Q) (@lem8342233 A B D P Q _112897)). Qed.
Lemma lem8342237 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342238 {A B D P Q : Type'} (P' : type903 A B D P Q) : (term1847 A B D P Q P') = (term1848 A B D P Q P').
Proof. exact (@lem8342237 (Q -> D) (type900 A B D P Q) P'). Qed.
Lemma lem8342239 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1849 A B D P Q _112897) = (term1850 A B D P Q _112897).
Proof. exact (@lem8342238 A B D P Q (term1851 A B D P Q _112897)). Qed.
Lemma lem8342240 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1852 A B D P Q _112897 pat) = (term1843 A B D P Q _112897 pat).
Proof. exact (eq_refl (term1852 A B D P Q _112897 pat)). Qed.
Lemma lem8342241 {A B D P Q : Type'} (t : type900 A B D P Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8342242 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (t : type900 A B D P Q) : (term1853 A B D P Q _112897 pat t) = (term1854 A B D P Q _112897 pat t).
Proof. exact (MK_COMB (@lem8342240 A B D P Q _112897 pat) (@lem8342241 A B D P Q t)). Qed.
Lemma lem8342243 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1854 A B D P Q _112897 pat t) = (term1841 A B D P Q t _112897 pat).
Proof. exact (eq_refl (term1854 A B D P Q _112897 pat t)). Qed.
Lemma lem8342244 {A B D P Q : Type'} (t : type900 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1853 A B D P Q _112897 pat t) = (term1841 A B D P Q t _112897 pat).
Proof. exact (TRANS (@lem8342242 A B D P Q _112897 pat t) (@lem8342243 A B D P Q t _112897 pat)). Qed.
Lemma lem8342245 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1855 A B D P Q _112897 pat) = (term1843 A B D P Q _112897 pat).
Proof. exact (fun_ext (fun t : type900 A B D P Q => @lem8342244 A B D P Q t _112897 pat)). Qed.
Lemma lem8342246 {A B D P Q : Type'} : (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342247 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1856 A B D P Q _112897 pat) = (term1844 A B D P Q _112897 pat).
Proof. exact (MK_COMB (@lem8342246 A B D P Q) (@lem8342245 A B D P Q _112897 pat)). Qed.
Lemma lem8342248 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1857 A B D P Q _112897) = (term1845 A B D P Q _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342247 A B D P Q _112897 pat)). Qed.
Lemma lem8342249 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342250 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1849 A B D P Q _112897) = (term1846 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8342249 D Q) (@lem8342248 A B D P Q _112897)). Qed.
Lemma lem8342251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342252 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1858 A B D P Q _112897) = (term1859 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8342251) (@lem8342250 A B D P Q _112897)). Qed.
Lemma lem8342253 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1852 A B D P Q _112897 pat) = (term1843 A B D P Q _112897 pat).
Proof. exact (eq_refl (term1852 A B D P Q _112897 pat)). Qed.
Lemma lem8342254 {A B D P Q : Type'} (t : type907 A B D P Q) (pat : Q -> D) : (t pat) = (t pat).
Proof. exact (eq_refl (t pat)). Qed.
Lemma lem8342255 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (t : type907 A B D P Q) (pat : Q -> D) : (term1860 A B D P Q _112897 t pat) = (term1861 A B D P Q _112897 t pat).
Proof. exact (MK_COMB (@lem8342253 A B D P Q _112897 pat) (@lem8342254 A B D P Q t pat)). Qed.
Lemma lem8342256 {A B D P Q : Type'} (t : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1861 A B D P Q _112897 t pat) = (term1862 A B D P Q t _112897 pat).
Proof. exact (eq_refl (term1861 A B D P Q _112897 t pat)). Qed.
Lemma lem8342257 {A B D P Q : Type'} (t : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1860 A B D P Q _112897 t pat) = (term1862 A B D P Q t _112897 pat).
Proof. exact (TRANS (@lem8342255 A B D P Q _112897 t pat) (@lem8342256 A B D P Q t _112897 pat)). Qed.
Lemma lem8342258 {A B D P Q : Type'} (t : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term1863 A B D P Q _112897 t) = (term1864 A B D P Q t _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342257 A B D P Q t _112897 pat)). Qed.
Lemma lem8342259 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342260 {A B D P Q : Type'} (t : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term1865 A B D P Q _112897 t) = (term1866 A B D P Q t _112897).
Proof. exact (MK_COMB (@lem8342259 D Q) (@lem8342258 A B D P Q t _112897)). Qed.
Lemma lem8342261 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1867 A B D P Q _112897) = (term1868 A B D P Q _112897).
Proof. exact (fun_ext (fun t : type907 A B D P Q => @lem8342260 A B D P Q t _112897)). Qed.
Lemma lem8342262 {A B D P Q : Type'} : (@ex ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)) = (@ex ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q)).
Proof. exact (eq_refl (@ex ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q))). Qed.
Lemma lem8342263 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1850 A B D P Q _112897) = (term1869 A B D P Q _112897).
Proof. exact (MK_COMB (@lem8342262 A B D P Q) (@lem8342261 A B D P Q _112897)). Qed.
Lemma lem8342264 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : ((term1849 A B D P Q _112897) = (term1850 A B D P Q _112897)) = ((term1846 A B D P Q _112897) = (term1869 A B D P Q _112897)).
Proof. exact (MK_COMB (@lem8342252 A B D P Q _112897) (@lem8342263 A B D P Q _112897)). Qed.
Lemma lem8342265 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1846 A B D P Q _112897) = (term1869 A B D P Q _112897).
Proof. exact (EQ_MP (@lem8342264 A B D P Q _112897) (@lem8342239 A B D P Q _112897)). Qed.
Lemma lem8342266 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1707 A B D P Q _112897) = (term1869 A B D P Q _112897).
Proof. exact (TRANS (@lem8342235 A B D P Q _112897) (@lem8342265 A B D P Q _112897)). Qed.
Lemma lem8342267 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1681 A B D P Q _112897) = (term1869 A B D P Q _112897).
Proof. exact (TRANS (@lem8342038 A B D P Q _112897) (@lem8342266 A B D P Q _112897)). Qed.
Lemma lem8342268 {A B D P Q : Type'} (_112897 : type906 A B D P Q) : (term1463 A B D P Q _112897) = (term1869 A B D P Q _112897).
Proof. exact (TRANS (@lem8341788 A B D P Q _112897) (@lem8342267 A B D P Q _112897)). Qed.
Lemma lem8342269 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (h1 : term1463 A B D P Q _112897) : term1869 A B D P Q _112897.
Proof. exact (EQ_MP (@lem8342268 A B D P Q _112897) (@lem8341718 A B D P Q _112897 h1)). Qed.
Lemma lem8342276 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term407 D P Q pat e q a x) = (term408 D P Q pat e q a x).
Proof. exact (@lem17045 ((pat x) = (e a)) (q a x)). Qed.
Lemma lem8342281 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1326 D P Q _112896 pat e q a) = (term1326 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term1326 D P Q _112896 pat e q a)). Qed.
Lemma lem8342282 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342283 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term1870 D P Q pat e q a x) = (term1871 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8342282) (@lem8342276 D P Q pat e q a x)). Qed.
Lemma lem8342284 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1872 D P Q x _112896 pat e q a) = (term1873 D P Q x _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342283 D P Q pat e q a x) (@lem8342281 D P Q _112896 pat e q a)). Qed.
Lemma lem8342285 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1327 D P Q x _112896 pat e q a) = (term1872 D P Q x _112896 pat e q a).
Proof. exact (@lem17265 (term272 D P Q pat e q a x) (term1326 D P Q _112896 pat e q a)). Qed.
Lemma lem8342286 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1327 D P Q x _112896 pat e q a) = (term1873 D P Q x _112896 pat e q a).
Proof. exact (TRANS (@lem8342285 D P Q x _112896 pat e q a) (@lem8342284 D P Q x _112896 pat e q a)). Qed.
Lemma lem8342287 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1328 D P Q _112896 pat e q a) = (term1874 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8342286 D P Q x _112896 pat e q a)). Qed.
Lemma lem8342288 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342289 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1329 D P Q _112896 pat e q a) = (term1875 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342288 Q) (@lem8342287 D P Q _112896 pat e q a)). Qed.
Lemma lem8342290 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1331 D P Q _112896 pat e q) = (term1876 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8342289 D P Q _112896 pat e q a)). Qed.
Lemma lem8342291 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342292 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1332 D P Q _112896 pat e q) = (term1877 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8342291 P) (@lem8342290 D P Q _112896 pat e q)). Qed.
Lemma lem8342293 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1334 D P Q _112896 pat e) = (term1878 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342292 D P Q _112896 pat e q)). Qed.
Lemma lem8342294 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342295 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1335 D P Q _112896 pat e) = (term1879 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8342294 P Q) (@lem8342293 D P Q _112896 pat e)). Qed.
Lemma lem8342296 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1337 D P Q _112896 pat) = (term1880 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342295 D P Q _112896 pat e)). Qed.
Lemma lem8342297 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342298 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1338 D P Q _112896 pat) = (term1881 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8342297 D P) (@lem8342296 D P Q _112896 pat)). Qed.
Lemma lem8342299 {D P Q : Type'} (_112896 : type885 D P Q) : (term1340 D P Q _112896) = (term1882 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342298 D P Q _112896 pat)). Qed.
Lemma lem8342300 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342301 {D P Q : Type'} (_112896 : type885 D P Q) : (term1341 D P Q _112896) = (term1883 D P Q _112896).
Proof. exact (MK_COMB (@lem8342300 D Q) (@lem8342299 D P Q _112896)). Qed.
Lemma lem8342339 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1682 A P Q) = (term1683 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem8342340 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term1682 Q P Q') = (term1683 Q P Q').
Proof. exact (@lem8342339 Q P Q'). Qed.
Lemma lem8342341 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1884 D P Q _112896 pat e q a) = (term1885 D P Q _112896 pat e q a).
Proof. exact (@lem8342340 Q (term505 D P Q pat e q a) (term1326 D P Q _112896 pat e q a)). Qed.
Lemma lem8342342 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term942 D P Q pat e q a x) = (term408 D P Q pat e q a x).
Proof. exact (eq_refl (term942 D P Q pat e q a x)). Qed.
Lemma lem8342343 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342344 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term1886 D P Q pat e q a x) = (term1871 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8342343) (@lem8342342 D P Q pat e q a x)). Qed.
Lemma lem8342345 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1326 D P Q _112896 pat e q a) = (term1326 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term1326 D P Q _112896 pat e q a)). Qed.
Lemma lem8342346 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1887 D P Q x _112896 pat e q a) = (term1873 D P Q x _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342344 D P Q pat e q a x) (@lem8342345 D P Q _112896 pat e q a)). Qed.
Lemma lem8342347 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1888 D P Q _112896 pat e q a) = (term1874 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8342346 D P Q x _112896 pat e q a)). Qed.
Lemma lem8342348 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342349 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1884 D P Q _112896 pat e q a) = (term1875 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342348 Q) (@lem8342347 D P Q _112896 pat e q a)). Qed.
Lemma lem8342350 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342351 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1889 D P Q _112896 pat e q a) = (term1890 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342350) (@lem8342349 D P Q _112896 pat e q a)). Qed.
Lemma lem8342352 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term942 D P Q pat e q a x) = (term408 D P Q pat e q a x).
Proof. exact (eq_refl (term942 D P Q pat e q a x)). Qed.
Lemma lem8342353 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1891 D P Q pat e q a) = (term505 D P Q pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8342352 D P Q pat e q a x)). Qed.
Lemma lem8342354 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342355 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1892 D P Q pat e q a) = (term506 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8342354 Q) (@lem8342353 D P Q pat e q a)). Qed.
Lemma lem8342356 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342357 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1893 D P Q pat e q a) = (term1894 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8342356) (@lem8342355 D P Q pat e q a)). Qed.
Lemma lem8342358 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1326 D P Q _112896 pat e q a) = (term1326 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term1326 D P Q _112896 pat e q a)). Qed.
Lemma lem8342359 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1885 D P Q _112896 pat e q a) = (term1895 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8342357 D P Q pat e q a) (@lem8342358 D P Q _112896 pat e q a)). Qed.
Lemma lem8342360 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term1884 D P Q _112896 pat e q a) = (term1885 D P Q _112896 pat e q a)) = ((term1875 D P Q _112896 pat e q a) = (term1895 D P Q _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8342351 D P Q _112896 pat e q a) (@lem8342359 D P Q _112896 pat e q a)). Qed.
Lemma lem8342361 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1875 D P Q _112896 pat e q a) = (term1895 D P Q _112896 pat e q a).
Proof. exact (EQ_MP (@lem8342360 D P Q _112896 pat e q a) (@lem8342341 D P Q _112896 pat e q a)). Qed.
Lemma lem8342410 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1876 D P Q _112896 pat e q) = (term1896 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8342361 D P Q _112896 pat e q a)). Qed.
Lemma lem8342411 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342412 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1877 D P Q _112896 pat e q) = (term1897 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8342411 P) (@lem8342410 D P Q _112896 pat e q)). Qed.
Lemma lem8342461 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1878 D P Q _112896 pat e) = (term1898 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8342412 D P Q _112896 pat e q)). Qed.
Lemma lem8342462 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8342463 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1879 D P Q _112896 pat e) = (term1899 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8342462 P Q) (@lem8342461 D P Q _112896 pat e)). Qed.
Lemma lem8342468 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1880 D P Q _112896 pat) = (term1900 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8342463 D P Q _112896 pat e)). Qed.
Lemma lem8342469 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8342470 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1881 D P Q _112896 pat) = (term1901 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8342469 D P) (@lem8342468 D P Q _112896 pat)). Qed.
Lemma lem8342475 {D P Q : Type'} (_112896 : type885 D P Q) : (term1882 D P Q _112896) = (term1902 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8342470 D P Q _112896 pat)). Qed.
Lemma lem8342476 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8342483 {D P Q : Type'} (_112896 : type885 D P Q) : (term1883 D P Q _112896) = (term1903 D P Q _112896).
Proof. exact (MK_COMB (@lem8342476 D Q) (@lem8342475 D P Q _112896)). Qed.
Lemma lem8342484 {D P Q : Type'} (_112896 : type885 D P Q) : (term1341 D P Q _112896) = (term1903 D P Q _112896).
Proof. exact (TRANS (@lem8342301 D P Q _112896) (@lem8342483 D P Q _112896)). Qed.
Lemma lem8342485 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term1903 D P Q _112896.
Proof. exact (EQ_MP (@lem8342484 D P Q _112896) (@lem8341719 D P Q _112896 h1)). Qed.
Lemma lem8342495 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term407 D P Q pat e q a u) = (term408 D P Q pat e q a u).
Proof. exact (@lem17045 ((pat u) = (e a)) (q a u)). Qed.
Lemma lem8342497 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term409 P Q q a t) = (term409 P Q q a t).
Proof. exact (eq_refl (term409 P Q q a t)). Qed.
Lemma lem8342498 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term410 D P Q t pat e q a u) = (term411 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8342497 P Q q a t) (@lem8342495 D P Q pat e q a u)). Qed.
Lemma lem8342499 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term412 D P Q t pat e q a u) = (term410 D P Q t pat e q a u).
Proof. exact (@lem17045 (q a t) (term272 D P Q pat e q a u)). Qed.
Lemma lem8342500 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term412 D P Q t pat e q a u) = (term411 D P Q t pat e q a u).
Proof. exact (TRANS (@lem8342499 D P Q t pat e q a u) (@lem8342498 D P Q t pat e q a u)). Qed.
Lemma lem8342502 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term413 D P Q pat t e a) = (term413 D P Q pat t e a).
Proof. exact (eq_refl (term413 D P Q pat t e a)). Qed.
Lemma lem8342503 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term414 D P Q t pat e q a u) = (term415 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8342502 D P Q pat t e a) (@lem8342500 D P Q t pat e q a u)). Qed.
Lemma lem8342504 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term416 D P Q t pat e q a u) = (term414 D P Q t pat e q a u).
Proof. exact (@lem17045 ((pat t) = (e a)) (term417 D P Q t pat e q a u)). Qed.
Lemma lem8342505 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term416 D P Q t pat e q a u) = (term415 D P Q t pat e q a u).
Proof. exact (TRANS (@lem8342504 D P Q t pat e q a u) (@lem8342503 D P Q t pat e q a u)). Qed.
Lemma lem8342507 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term418 A B P p f a).
Proof. exact (eq_refl (term418 A B P p f a)). Qed.
Lemma lem8342508 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term419 A B D P Q p f t pat e q a u) = (term420 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8342507 A B P p f a) (@lem8342505 D P Q t pat e q a u)). Qed.
Lemma lem8342509 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term421 A B D P Q p f t pat e q a u) = (term419 A B D P Q p f t pat e q a u).
Proof. exact (@lem17045 (p f a) (term422 D P Q t pat e q a u)). Qed.
Lemma lem8342510 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term421 A B D P Q p f t pat e q a u) = (term420 A B D P Q p f t pat e q a u).
Proof. exact (TRANS (@lem8342509 A B D P Q p f t pat e q a u) (@lem8342508 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8342511 {A P Q : Type'} (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : ((arg a t) = (arg a u)) = ((arg a t) = (arg a u)).
Proof. exact (eq_refl ((arg a t) = (arg a u))). Qed.
Lemma lem8342512 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342513 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term423 A B D P Q p f t pat e q a u) = (term424 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8342512) (@lem8342510 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8342514 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term425 A B D P Q p f pat e q t arg a u) = (term426 A B D P Q p f pat e q t arg a u).
Proof. exact (MK_COMB (@lem8342513 A B D P Q p f t pat e q a u) (@lem8342511 A P Q t arg a u)). Qed.
Lemma lem8342515 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term425 A B D P Q p f pat e q t arg a u).
Proof. exact (@lem17265 (term427 A B D P Q p f t pat e q a u) ((arg a t) = (arg a u))). Qed.
Lemma lem8342516 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term295 A B D P Q p f pat e q t arg a u) = (term426 A B D P Q p f pat e q t arg a u).
Proof. exact (TRANS (@lem8342515 A B D P Q p f pat e q t arg a u) (@lem8342514 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8342517 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term296 A B D P Q p f pat e q t arg a) = (term428 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8342516 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8342518 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342519 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term297 A B D P Q p f pat e q t arg a) = (term429 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8342518 Q) (@lem8342517 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8342520 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term298 A B D P Q p f pat e q arg a) = (term430 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8342519 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8342521 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342522 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term299 A B D P Q p f pat e q arg a) = (term431 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8342521 Q) (@lem8342520 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8342523 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term300 A B D P Q p f pat e q arg) = (term432 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8342522 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8342524 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342525 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term301 A B D P Q p f pat e q arg) = (term433 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8342524 P) (@lem8342523 A B D P Q p f pat e q arg)). Qed.
Lemma lem8342526 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term302 A B D P Q p pat e q arg) = (term434 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8342525 A B D P Q p f pat e q arg)). Qed.
Lemma lem8342527 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342592 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term36 A B D P Q p pat e q arg) = (term435 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8342527 A B) (@lem8342526 A B D P Q p pat e q arg)). Qed.
Lemma lem8342593 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term435 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8342592 A B D P Q p pat e q arg) (@lem8341720 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8342601 {D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1904 D P Q q pat t e a) = (term1905 D P Q q pat t e a).
Proof. exact (@lem17045 (q a t) ((pat t) = (e a))). Qed.
Lemma lem8342603 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term418 A B P p f a).
Proof. exact (eq_refl (term418 A B P p f a)). Qed.
Lemma lem8342604 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1906 A B D P Q p f q pat t e a) = (term1907 A B D P Q p f q pat t e a).
Proof. exact (MK_COMB (@lem8342603 A B P p f a) (@lem8342601 D P Q q pat t e a)). Qed.
Lemma lem8342605 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1908 A B D P Q p f q pat t e a) = (term1906 A B D P Q p f q pat t e a).
Proof. exact (@lem17045 (p f a) (term1909 D P Q q pat t e a)). Qed.
Lemma lem8342606 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1908 A B D P Q p f q pat t e a) = (term1907 A B D P Q p f q pat t e a).
Proof. exact (TRANS (@lem8342605 A B D P Q p f q pat t e a) (@lem8342604 A B D P Q p f q pat t e a)). Qed.
Lemma lem8342613 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term284 A P Q arg t lt2 y s a) = (term1910 A P Q arg t lt2 y s a).
Proof. exact (@lem17265 (term1911 A P Q lt2 y arg a t) (term1125 A P lt2 y s a)). Qed.
Lemma lem8342614 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term285 A P Q arg t lt2 s a) = (term1912 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8342613 A P Q arg t lt2 y s a)). Qed.
Lemma lem8342615 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8342616 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term286 A P Q arg t lt2 s a) = (term1913 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8342615 A) (@lem8342614 A P Q arg t lt2 s a)). Qed.
Lemma lem8342617 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342618 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1914 A B D P Q p f q pat t e a) = (term1915 A B D P Q p f q pat t e a).
Proof. exact (MK_COMB (@lem8342617) (@lem8342606 A B D P Q p f q pat t e a)). Qed.
Lemma lem8342619 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1916 A B D P Q p f q pat e arg t lt2 s a) = (term1917 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8342618 A B D P Q p f q pat t e a) (@lem8342616 A P Q arg t lt2 s a)). Qed.
Lemma lem8342620 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term1916 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (@lem17265 (term1918 A B D P Q p f q pat t e a) (term286 A P Q arg t lt2 s a)). Qed.
Lemma lem8342621 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term288 A B D P Q p f q pat e arg t lt2 s a) = (term1917 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (TRANS (@lem8342620 A B D P Q p f q pat e arg t lt2 s a) (@lem8342619 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8342622 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term289 A B D P Q p f q pat e arg lt2 s a) = (term1919 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8342621 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8342623 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8342624 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term290 A B D P Q p f q pat e arg lt2 s a) = (term1920 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8342623 Q) (@lem8342622 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8342625 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term291 A B D P Q p f q pat e arg lt2 s) = (term1921 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8342624 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8342626 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342627 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term292 A B D P Q p f q pat e arg lt2 s) = (term1922 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8342626 P) (@lem8342625 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8342628 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term293 A B D P Q p q pat e arg lt2 s) = (term1923 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8342627 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8342629 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342738 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term35 A B D P Q p q pat e arg lt2 s) = (term1924 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8342629 A B) (@lem8342628 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8342739 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term1924 A B D P Q p q pat e arg lt2 s.
Proof. exact (EQ_MP (@lem8342738 A B D P Q p q pat e arg lt2 s) (@lem8341721 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8342746 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1925 A B P lt2 s a f g z) = (term1926 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term1125 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8342747 {A : Type'} (P : A -> Prop) : (term1927 A P) = (term1928 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8342748 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1929 A B P lt2 s a f g) = (term1930 A B P lt2 s a f g).
Proof. exact (@lem8342747 A (term1621 A B P lt2 s a f g)). Qed.
Lemma lem8342749 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1931 A B P lt2 s a f g z) = (term1620 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1931 A B P lt2 s a f g z)). Qed.
Lemma lem8342750 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8342751 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1932 A B P lt2 s a f g z) = (term1925 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8342750) (@lem8342749 A B P lt2 s a f g z)). Qed.
Lemma lem8342752 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1932 A B P lt2 s a f g z) = (term1926 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8342751 A B P lt2 s a f g z) (@lem8342746 A B P lt2 s a f g z)). Qed.
Lemma lem8342753 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1933 A B P lt2 s a f g) = (term1934 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8342752 A B P lt2 s a f g z)). Qed.
Lemma lem8342754 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8342755 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1930 A B P lt2 s a f g) = (term1935 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8342754 A) (@lem8342753 A B P lt2 s a f g)). Qed.
Lemma lem8342756 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1929 A B P lt2 s a f g) = (term1935 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8342748 A B P lt2 s a f g) (@lem8342755 A B P lt2 s a f g)). Qed.
Lemma lem8342771 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = (term1936 A B P f p g a).
Proof. exact (@lem17784 (p f a) (p g a)). Qed.
Lemma lem8342772 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342773 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1937 A B P lt2 s a f g) = (term1938 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8342772) (@lem8342756 A B P lt2 s a f g)). Qed.
Lemma lem8342774 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1939 A B P lt2 s f p g a) = (term1940 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8342773 A B P lt2 s a f g) (@lem8342771 A B P f p g a)). Qed.
Lemma lem8342775 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1111 A B P lt2 s f p g a) = (term1939 A B P lt2 s f p g a).
Proof. exact (@lem17265 (term1104 A B P lt2 s a f g) ((p f a) = (p g a))). Qed.
Lemma lem8342776 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1111 A B P lt2 s f p g a) = (term1940 A B P lt2 s f p g a).
Proof. exact (TRANS (@lem8342775 A B P lt2 s f p g a) (@lem8342774 A B P lt2 s f p g a)). Qed.
Lemma lem8342777 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1113 A B P lt2 s f p g) = (term1941 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8342776 A B P lt2 s f p g a)). Qed.
Lemma lem8342778 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342779 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1115 A B P lt2 s f p g) = (term1942 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342778 P) (@lem8342777 A B P lt2 s f p g)). Qed.
Lemma lem8342780 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1117 A B P lt2 s f p) = (term1943 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8342779 A B P lt2 s f p g)). Qed.
Lemma lem8342781 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342782 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1119 A B P lt2 s f p) = (term1944 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342781 A B) (@lem8342780 A B P lt2 s f p)). Qed.
Lemma lem8342783 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1121 A B P lt2 s p) = (term1945 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8342782 A B P lt2 s f p)). Qed.
Lemma lem8342784 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342785 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1122 A B P lt2 s p) = (term1946 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8342784 A B) (@lem8342783 A B P lt2 s p)). Qed.
Lemma lem8342892 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8342893 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (@lem8342892 A P Q). Qed.
Lemma lem8342894 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1949 A B P lt2 s f p g a) = (term1950 A B P lt2 s f p g a).
Proof. exact (@lem8342893 A (term1934 A B P lt2 s a f g) (term1936 A B P f p g a)). Qed.
Lemma lem8342895 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1951 A B P lt2 s a f g z) = (term1926 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1951 A B P lt2 s a f g z)). Qed.
Lemma lem8342896 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1952 A B P lt2 s a f g) = (term1934 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8342895 A B P lt2 s a f g z)). Qed.
Lemma lem8342897 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8342898 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1953 A B P lt2 s a f g) = (term1935 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8342897 A) (@lem8342896 A B P lt2 s a f g)). Qed.
Lemma lem8342899 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342900 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1954 A B P lt2 s a f g) = (term1938 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8342899) (@lem8342898 A B P lt2 s a f g)). Qed.
Lemma lem8342901 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1936 A B P f p g a) = (term1936 A B P f p g a).
Proof. exact (eq_refl (term1936 A B P f p g a)). Qed.
Lemma lem8342902 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1949 A B P lt2 s f p g a) = (term1940 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8342900 A B P lt2 s a f g) (@lem8342901 A B P f p g a)). Qed.
Lemma lem8342903 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342904 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1955 A B P lt2 s f p g a) = (term1956 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8342903) (@lem8342902 A B P lt2 s f p g a)). Qed.
Lemma lem8342905 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1951 A B P lt2 s a f g z) = (term1926 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1951 A B P lt2 s a f g z)). Qed.
Lemma lem8342906 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8342907 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1957 A B P lt2 s a f g z) = (term1958 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8342906) (@lem8342905 A B P lt2 s a f g z)). Qed.
Lemma lem8342908 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1936 A B P f p g a) = (term1936 A B P f p g a).
Proof. exact (eq_refl (term1936 A B P f p g a)). Qed.
Lemma lem8342909 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1959 A B P lt2 s z f p g a) = (term1960 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8342907 A B P lt2 s a f g z) (@lem8342908 A B P f p g a)). Qed.
Lemma lem8342910 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1961 A B P lt2 s f p g a) = (term1962 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8342909 A B P lt2 s z f p g a)). Qed.
Lemma lem8342911 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8342912 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1950 A B P lt2 s f p g a) = (term1963 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8342911 A) (@lem8342910 A B P lt2 s f p g a)). Qed.
Lemma lem8342913 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((term1949 A B P lt2 s f p g a) = (term1950 A B P lt2 s f p g a)) = ((term1940 A B P lt2 s f p g a) = (term1963 A B P lt2 s f p g a)).
Proof. exact (MK_COMB (@lem8342904 A B P lt2 s f p g a) (@lem8342912 A B P lt2 s f p g a)). Qed.
Lemma lem8342914 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1940 A B P lt2 s f p g a) = (term1963 A B P lt2 s f p g a).
Proof. exact (EQ_MP (@lem8342913 A B P lt2 s f p g a) (@lem8342894 A B P lt2 s f p g a)). Qed.
Lemma lem8342915 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1941 A B P lt2 s f p g) = (term1964 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8342914 A B P lt2 s f p g a)). Qed.
Lemma lem8342916 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342917 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1942 A B P lt2 s f p g) = (term1965 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342916 P) (@lem8342915 A B P lt2 s f p g)). Qed.
Lemma lem8342919 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342920 {A P : Type'} (P' : type1470 A P) : (term1966 A P P') = (term1967 A P P').
Proof. exact (@lem8342919 P A P'). Qed.
Lemma lem8342921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1968 A B P lt2 s f p g) = (term1969 A B P lt2 s f p g).
Proof. exact (@lem8342920 A P (term1970 A B P lt2 s f p g)). Qed.
Lemma lem8342922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1971 A B P lt2 s f p g a) = (term1962 A B P lt2 s f p g a).
Proof. exact (eq_refl (term1971 A B P lt2 s f p g a)). Qed.
Lemma lem8342923 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8342924 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (z : A) : (term1972 A B P lt2 s f p g a z) = (term1973 A B P lt2 s f p g a z).
Proof. exact (MK_COMB (@lem8342922 A B P lt2 s f p g a) (@lem8342923 A z)). Qed.
Lemma lem8342925 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1973 A B P lt2 s f p g a z) = (term1960 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term1973 A B P lt2 s f p g a z)). Qed.
Lemma lem8342926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1972 A B P lt2 s f p g a z) = (term1960 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8342924 A B P lt2 s f p g a z) (@lem8342925 A B P lt2 s z f p g a)). Qed.
Lemma lem8342927 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1974 A B P lt2 s f p g a) = (term1962 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8342926 A B P lt2 s z f p g a)). Qed.
Lemma lem8342928 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8342929 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1975 A B P lt2 s f p g a) = (term1963 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8342928 A) (@lem8342927 A B P lt2 s f p g a)). Qed.
Lemma lem8342930 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1976 A B P lt2 s f p g) = (term1964 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8342929 A B P lt2 s f p g a)). Qed.
Lemma lem8342931 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342932 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1968 A B P lt2 s f p g) = (term1965 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342931 P) (@lem8342930 A B P lt2 s f p g)). Qed.
Lemma lem8342933 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342934 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1977 A B P lt2 s f p g) = (term1978 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342933) (@lem8342932 A B P lt2 s f p g)). Qed.
Lemma lem8342935 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1971 A B P lt2 s f p g a) = (term1962 A B P lt2 s f p g a).
Proof. exact (eq_refl (term1971 A B P lt2 s f p g a)). Qed.
Lemma lem8342936 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8342937 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term1979 A B P lt2 s f p g z a) = (term1980 A B P lt2 s f p g z a).
Proof. exact (MK_COMB (@lem8342935 A B P lt2 s f p g a) (@lem8342936 A P z a)). Qed.
Lemma lem8342938 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1980 A B P lt2 s f p g z a) = (term1981 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term1980 A B P lt2 s f p g z a)). Qed.
Lemma lem8342939 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1979 A B P lt2 s f p g z a) = (term1981 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8342937 A B P lt2 s f p g z a) (@lem8342938 A B P lt2 s z f p g a)). Qed.
Lemma lem8342940 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1982 A B P lt2 s f p g z) = (term1983 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8342939 A B P lt2 s z f p g a)). Qed.
Lemma lem8342941 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8342942 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1984 A B P lt2 s f p g z) = (term1985 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8342941 P) (@lem8342940 A B P lt2 s z f p g)). Qed.
Lemma lem8342943 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1986 A B P lt2 s f p g) = (term1987 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8342942 A B P lt2 s z f p g)). Qed.
Lemma lem8342944 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8342945 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1969 A B P lt2 s f p g) = (term1988 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342944 A P) (@lem8342943 A B P lt2 s f p g)). Qed.
Lemma lem8342946 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : ((term1968 A B P lt2 s f p g) = (term1969 A B P lt2 s f p g)) = ((term1965 A B P lt2 s f p g) = (term1988 A B P lt2 s f p g)).
Proof. exact (MK_COMB (@lem8342934 A B P lt2 s f p g) (@lem8342945 A B P lt2 s f p g)). Qed.
Lemma lem8342947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1965 A B P lt2 s f p g) = (term1988 A B P lt2 s f p g).
Proof. exact (EQ_MP (@lem8342946 A B P lt2 s f p g) (@lem8342921 A B P lt2 s f p g)). Qed.
Lemma lem8342948 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1942 A B P lt2 s f p g) = (term1988 A B P lt2 s f p g).
Proof. exact (TRANS (@lem8342917 A B P lt2 s f p g) (@lem8342947 A B P lt2 s f p g)). Qed.
Lemma lem8342949 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1943 A B P lt2 s f p) = (term1989 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8342948 A B P lt2 s f p g)). Qed.
Lemma lem8342950 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1944 A B P lt2 s f p) = (term1990 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342950 A B) (@lem8342949 A B P lt2 s f p)). Qed.
Lemma lem8342953 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342954 {A B P : Type'} (P' : type537 A B P) : (term1991 A B P P') = (term1992 A B P P').
Proof. exact (@lem8342953 (A -> B) (P -> A) P'). Qed.
Lemma lem8342955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1993 A B P lt2 s f p) = (term1994 A B P lt2 s f p).
Proof. exact (@lem8342954 A B P (term1995 A B P lt2 s f p)). Qed.
Lemma lem8342956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1996 A B P lt2 s f p g) = (term1987 A B P lt2 s f p g).
Proof. exact (eq_refl (term1996 A B P lt2 s f p g)). Qed.
Lemma lem8342957 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8342958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) : (term1997 A B P lt2 s f p g z) = (term1998 A B P lt2 s f p g z).
Proof. exact (MK_COMB (@lem8342956 A B P lt2 s f p g) (@lem8342957 A P z)). Qed.
Lemma lem8342959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1998 A B P lt2 s f p g z) = (term1985 A B P lt2 s z f p g).
Proof. exact (eq_refl (term1998 A B P lt2 s f p g z)). Qed.
Lemma lem8342960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1997 A B P lt2 s f p g z) = (term1985 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8342958 A B P lt2 s f p g z) (@lem8342959 A B P lt2 s z f p g)). Qed.
Lemma lem8342961 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1999 A B P lt2 s f p g) = (term1987 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8342960 A B P lt2 s z f p g)). Qed.
Lemma lem8342962 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8342963 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2000 A B P lt2 s f p g) = (term1988 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8342962 A P) (@lem8342961 A B P lt2 s f p g)). Qed.
Lemma lem8342964 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2001 A B P lt2 s f p) = (term1989 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8342963 A B P lt2 s f p g)). Qed.
Lemma lem8342965 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342966 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1993 A B P lt2 s f p) = (term1990 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342965 A B) (@lem8342964 A B P lt2 s f p)). Qed.
Lemma lem8342967 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8342968 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2002 A B P lt2 s f p) = (term2003 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342967) (@lem8342966 A B P lt2 s f p)). Qed.
Lemma lem8342969 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1996 A B P lt2 s f p g) = (term1987 A B P lt2 s f p g).
Proof. exact (eq_refl (term1996 A B P lt2 s f p g)). Qed.
Lemma lem8342970 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8342971 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) (g : A -> B) : (term2004 A B P lt2 s f p z g) = (term2005 A B P lt2 s f p z g).
Proof. exact (MK_COMB (@lem8342969 A B P lt2 s f p g) (@lem8342970 A B P z g)). Qed.
Lemma lem8342972 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2005 A B P lt2 s f p z g) = (term2006 A B P lt2 s z f p g).
Proof. exact (eq_refl (term2005 A B P lt2 s f p z g)). Qed.
Lemma lem8342973 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2004 A B P lt2 s f p z g) = (term2006 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8342971 A B P lt2 s f p z g) (@lem8342972 A B P lt2 s z f p g)). Qed.
Lemma lem8342974 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term2007 A B P lt2 s f p z) = (term2008 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8342973 A B P lt2 s z f p g)). Qed.
Lemma lem8342975 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342976 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term2009 A B P lt2 s f p z) = (term2010 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8342975 A B) (@lem8342974 A B P lt2 s z f p)). Qed.
Lemma lem8342977 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2011 A B P lt2 s f p) = (term2012 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8342976 A B P lt2 s z f p)). Qed.
Lemma lem8342978 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8342979 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1994 A B P lt2 s f p) = (term2013 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342978 A B P) (@lem8342977 A B P lt2 s f p)). Qed.
Lemma lem8342980 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : ((term1993 A B P lt2 s f p) = (term1994 A B P lt2 s f p)) = ((term1990 A B P lt2 s f p) = (term2013 A B P lt2 s f p)).
Proof. exact (MK_COMB (@lem8342968 A B P lt2 s f p) (@lem8342979 A B P lt2 s f p)). Qed.
Lemma lem8342981 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1990 A B P lt2 s f p) = (term2013 A B P lt2 s f p).
Proof. exact (EQ_MP (@lem8342980 A B P lt2 s f p) (@lem8342955 A B P lt2 s f p)). Qed.
Lemma lem8342982 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1944 A B P lt2 s f p) = (term2013 A B P lt2 s f p).
Proof. exact (TRANS (@lem8342951 A B P lt2 s f p) (@lem8342981 A B P lt2 s f p)). Qed.
Lemma lem8342983 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1945 A B P lt2 s p) = (term2014 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8342982 A B P lt2 s f p)). Qed.
Lemma lem8342984 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8342985 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1946 A B P lt2 s p) = (term2015 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8342984 A B) (@lem8342983 A B P lt2 s p)). Qed.
Lemma lem8342987 {A B : Type'} (P : type1413 A B) : (term1722 A B P) = (term1723 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8342988 {A B P : Type'} (P' : type495 A B P) : (term2016 A B P P') = (term2017 A B P P').
Proof. exact (@lem8342987 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8342989 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2018 A B P lt2 s p) = (term2019 A B P lt2 s p).
Proof. exact (@lem8342988 A B P (term2020 A B P lt2 s p)). Qed.
Lemma lem8342990 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2021 A B P lt2 s p f) = (term2012 A B P lt2 s f p).
Proof. exact (eq_refl (term2021 A B P lt2 s p f)). Qed.
Lemma lem8342991 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8342992 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) : (term2022 A B P lt2 s p f z) = (term2023 A B P lt2 s f p z).
Proof. exact (MK_COMB (@lem8342990 A B P lt2 s f p) (@lem8342991 A B P z)). Qed.
Lemma lem8342993 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term2023 A B P lt2 s f p z) = (term2010 A B P lt2 s z f p).
Proof. exact (eq_refl (term2023 A B P lt2 s f p z)). Qed.
Lemma lem8342994 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term2022 A B P lt2 s p f z) = (term2010 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8342992 A B P lt2 s f p z) (@lem8342993 A B P lt2 s z f p)). Qed.
Lemma lem8342995 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2024 A B P lt2 s p f) = (term2012 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8342994 A B P lt2 s z f p)). Qed.
Lemma lem8342996 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8342997 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2025 A B P lt2 s p f) = (term2013 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8342996 A B P) (@lem8342995 A B P lt2 s f p)). Qed.
Lemma lem8342998 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2026 A B P lt2 s p) = (term2014 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8342997 A B P lt2 s f p)). Qed.
Lemma lem8342999 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8343000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2018 A B P lt2 s p) = (term2015 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8342999 A B) (@lem8342998 A B P lt2 s p)). Qed.
Lemma lem8343001 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343002 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2027 A B P lt2 s p) = (term2028 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8343001) (@lem8343000 A B P lt2 s p)). Qed.
Lemma lem8343003 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term2021 A B P lt2 s p f) = (term2012 A B P lt2 s f p).
Proof. exact (eq_refl (term2021 A B P lt2 s p f)). Qed.
Lemma lem8343004 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8343005 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z : type518 A B P) (f : A -> B) : (term2029 A B P lt2 s p z f) = (term2030 A B P lt2 s p z f).
Proof. exact (MK_COMB (@lem8343003 A B P lt2 s f p) (@lem8343004 A B P z f)). Qed.
Lemma lem8343006 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2030 A B P lt2 s p z f) = (term2031 A B P lt2 s z f p).
Proof. exact (eq_refl (term2030 A B P lt2 s p z f)). Qed.
Lemma lem8343007 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2029 A B P lt2 s p z f) = (term2031 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8343005 A B P lt2 s p z f) (@lem8343006 A B P lt2 s z f p)). Qed.
Lemma lem8343008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2032 A B P lt2 s p z) = (term2033 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8343007 A B P lt2 s z f p)). Qed.
Lemma lem8343009 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8343010 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2034 A B P lt2 s p z) = (term2035 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8343009 A B) (@lem8343008 A B P lt2 s z p)). Qed.
Lemma lem8343011 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2036 A B P lt2 s p) = (term2037 A B P lt2 s p).
Proof. exact (fun_ext (fun z : type518 A B P => @lem8343010 A B P lt2 s z p)). Qed.
Lemma lem8343012 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8343013 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2019 A B P lt2 s p) = (term2038 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8343012 A B P) (@lem8343011 A B P lt2 s p)). Qed.
Lemma lem8343014 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : ((term2018 A B P lt2 s p) = (term2019 A B P lt2 s p)) = ((term2015 A B P lt2 s p) = (term2038 A B P lt2 s p)).
Proof. exact (MK_COMB (@lem8343002 A B P lt2 s p) (@lem8343013 A B P lt2 s p)). Qed.
Lemma lem8343015 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term2015 A B P lt2 s p) = (term2038 A B P lt2 s p).
Proof. exact (EQ_MP (@lem8343014 A B P lt2 s p) (@lem8342989 A B P lt2 s p)). Qed.
Lemma lem8343017 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1946 A B P lt2 s p) = (term2038 A B P lt2 s p).
Proof. exact (TRANS (@lem8342985 A B P lt2 s p) (@lem8343015 A B P lt2 s p)). Qed.
Lemma lem8343018 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1122 A B P lt2 s p) = (term2038 A B P lt2 s p).
Proof. exact (TRANS (@lem8342785 A B P lt2 s p) (@lem8343017 A B P lt2 s p)). Qed.
Lemma lem8343019 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term1122 A B P lt2 s p) : term2038 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8343018 A B P lt2 s p) (@lem8341722 A B P lt2 s p h1)). Qed.
Lemma lem8343025 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8343026 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343025 D P Q pat e q a t)). Qed.
Lemma lem8343027 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343028 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343027 Q) (@lem8343026 D P Q pat e q a)). Qed.
Lemma lem8343030 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343031 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343030 A B P p f a) (@lem8343028 D P Q pat e q a)). Qed.
Lemma lem8343032 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343033 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343034 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term1145 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343033) (@lem8343031 A B D P Q p f pat e q a)). Qed.
Lemma lem8343035 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1346 A B D P Q p f lt2 y arg _112896 pat e q a) = (term1346 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343034 A B D P Q p f pat e q a) (@lem8343032 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343036 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2039 A P lt2 y s a) = (term2039 A P lt2 y s a).
Proof. exact (eq_refl (term2039 A P lt2 y s a)). Qed.
Lemma lem8343037 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343038 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2040 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2040 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343037) (@lem8343035 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343039 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343038 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343036 A P lt2 y s a)). Qed.
Lemma lem8343040 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2042 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (@lem17362 (term1346 A B D P Q p f lt2 y arg _112896 pat e q a) (term1125 A P lt2 y s a)). Qed.
Lemma lem8343041 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2042 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (TRANS (@lem8343040 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8343039 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343042 {A : Type'} (P : A -> Prop) : (term1927 A P) = (term1928 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8343043 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2043 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2044 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (@lem8343042 A (term1350 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343044 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2045 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term1349 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2045 A B D P Q p f arg _112896 pat e q lt2 s a y)). Qed.
Lemma lem8343045 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343046 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2046 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term2042 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343045) (@lem8343044 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343047 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2046 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (TRANS (@lem8343046 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8343041 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343048 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2047 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2048 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8343047 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343049 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8343050 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2044 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2049 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8343049 A) (@lem8343048 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343051 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2043 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2049 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (TRANS (@lem8343043 A B D P Q p f arg _112896 pat e q lt2 s a) (@lem8343050 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343052 {P : Type'} (P' : P -> Prop) : (term1927 P P') = (term1928 P P').
Proof. exact (@lem18392 P P'). Qed.
Lemma lem8343053 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2050 A B D P Q p f arg _112896 pat e q lt2 s) = (term2051 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (@lem8343052 P (term1352 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343054 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2052 A B D P Q p f arg _112896 pat e q lt2 s a) = (term1351 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (eq_refl (term2052 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343055 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343056 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2053 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2043 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8343055) (@lem8343054 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343057 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2053 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2049 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (TRANS (@lem8343056 A B D P Q p f arg _112896 pat e q lt2 s a) (@lem8343051 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343058 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2054 A B D P Q p f arg _112896 pat e q lt2 s) = (term2055 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8343057 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343059 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8343060 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2051 A B D P Q p f arg _112896 pat e q lt2 s) = (term2056 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343059 P) (@lem8343058 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343061 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2050 A B D P Q p f arg _112896 pat e q lt2 s) = (term2056 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (TRANS (@lem8343053 A B D P Q p f arg _112896 pat e q lt2 s) (@lem8343060 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343062 {A B : Type'} (P : type572 A B) : (term2057 A B P) = (term2058 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8343063 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2059 A B D P Q p arg _112896 pat e q lt2 s) = (term2060 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (@lem8343062 A B (term1354 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343064 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2061 A B D P Q p arg _112896 pat e q lt2 s f) = (term1353 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (eq_refl (term2061 A B D P Q p arg _112896 pat e q lt2 s f)). Qed.
Lemma lem8343065 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343066 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2062 A B D P Q p arg _112896 pat e q lt2 s f) = (term2050 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343065) (@lem8343064 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343067 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2062 A B D P Q p arg _112896 pat e q lt2 s f) = (term2056 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (TRANS (@lem8343066 A B D P Q p f arg _112896 pat e q lt2 s) (@lem8343061 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343068 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2063 A B D P Q p arg _112896 pat e q lt2 s) = (term2064 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8343067 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343069 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343070 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2060 A B D P Q p arg _112896 pat e q lt2 s) = (term2065 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343069 A B) (@lem8343068 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343071 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2059 A B D P Q p arg _112896 pat e q lt2 s) = (term2065 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (TRANS (@lem8343063 A B D P Q p arg _112896 pat e q lt2 s) (@lem8343070 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343078 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1620 A B P lt2 s a f g z) = (term2066 A B P lt2 s a f g z).
Proof. exact (@lem17265 (term1125 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8343079 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1621 A B P lt2 s a f g) = (term2067 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8343078 A B P lt2 s a f g z)). Qed.
Lemma lem8343080 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8343081 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1104 A B P lt2 s a f g) = (term2068 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8343080 A) (@lem8343079 A B P lt2 s a f g)). Qed.
Lemma lem8343092 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term407 D P Q pat e q a t) = (term408 D P Q pat e q a t).
Proof. exact (@lem17045 ((pat t) = (e a)) (q a t)). Qed.
Lemma lem8343095 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8343096 {Q : Type'} (P : Q -> Prop) : (term442 Q P) = (term443 Q P).
Proof. exact (@lem18394 Q P). Qed.
Lemma lem8343097 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term207 D P Q pat e q a) = (term501 D P Q pat e q a).
Proof. exact (@lem8343096 Q (term273 D P Q pat e q a)). Qed.
Lemma lem8343098 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343099 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343100 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term503 D P Q pat e q a t) = (term407 D P Q pat e q a t).
Proof. exact (MK_COMB (@lem8343099) (@lem8343098 D P Q pat e q a t)). Qed.
Lemma lem8343101 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term503 D P Q pat e q a t) = (term408 D P Q pat e q a t).
Proof. exact (TRANS (@lem8343100 D P Q pat e q a t) (@lem8343092 D P Q pat e q a t)). Qed.
Lemma lem8343102 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term504 D P Q pat e q a) = (term505 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343101 D P Q pat e q a t)). Qed.
Lemma lem8343103 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8343104 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term501 D P Q pat e q a) = (term506 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343103 Q) (@lem8343102 D P Q pat e q a)). Qed.
Lemma lem8343105 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term207 D P Q pat e q a) = (term506 D P Q pat e q a).
Proof. exact (TRANS (@lem8343097 D P Q pat e q a) (@lem8343104 D P Q pat e q a)). Qed.
Lemma lem8343106 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343095 D P Q pat e q a t)). Qed.
Lemma lem8343107 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343108 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343107 Q) (@lem8343106 D P Q pat e q a)). Qed.
Lemma lem8343110 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term418 A B P p f a).
Proof. exact (eq_refl (term418 A B P p f a)). Qed.
Lemma lem8343111 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2069 A B D P Q p f pat e q a) = (term2070 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343110 A B P p f a) (@lem8343105 D P Q pat e q a)). Qed.
Lemma lem8343112 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2071 A B D P Q p f pat e q a) = (term2069 A B D P Q p f pat e q a).
Proof. exact (@lem17045 (p f a) (term179 D P Q pat e q a)). Qed.
Lemma lem8343113 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2071 A B D P Q p f pat e q a) = (term2070 A B D P Q p f pat e q a).
Proof. exact (TRANS (@lem8343112 A B D P Q p f pat e q a) (@lem8343111 A B D P Q p f pat e q a)). Qed.
Lemma lem8343115 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343116 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343115 A B P p f a) (@lem8343108 D P Q pat e q a)). Qed.
Lemma lem8343127 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term407 D P Q pat e q a t) = (term408 D P Q pat e q a t).
Proof. exact (@lem17045 ((pat t) = (e a)) (q a t)). Qed.
Lemma lem8343130 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8343131 {Q : Type'} (P : Q -> Prop) : (term442 Q P) = (term443 Q P).
Proof. exact (@lem18394 Q P). Qed.
Lemma lem8343132 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term207 D P Q pat e q a) = (term501 D P Q pat e q a).
Proof. exact (@lem8343131 Q (term273 D P Q pat e q a)). Qed.
Lemma lem8343133 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343134 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343135 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term503 D P Q pat e q a t) = (term407 D P Q pat e q a t).
Proof. exact (MK_COMB (@lem8343134) (@lem8343133 D P Q pat e q a t)). Qed.
Lemma lem8343136 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term503 D P Q pat e q a t) = (term408 D P Q pat e q a t).
Proof. exact (TRANS (@lem8343135 D P Q pat e q a t) (@lem8343127 D P Q pat e q a t)). Qed.
Lemma lem8343137 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term504 D P Q pat e q a) = (term505 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343136 D P Q pat e q a t)). Qed.
Lemma lem8343138 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8343139 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term501 D P Q pat e q a) = (term506 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343138 Q) (@lem8343137 D P Q pat e q a)). Qed.
Lemma lem8343140 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term207 D P Q pat e q a) = (term506 D P Q pat e q a).
Proof. exact (TRANS (@lem8343132 D P Q pat e q a) (@lem8343139 D P Q pat e q a)). Qed.
Lemma lem8343141 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343130 D P Q pat e q a t)). Qed.
Lemma lem8343142 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343143 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343142 Q) (@lem8343141 D P Q pat e q a)). Qed.
Lemma lem8343145 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term418 A B P p g a) = (term418 A B P p g a).
Proof. exact (eq_refl (term418 A B P p g a)). Qed.
Lemma lem8343146 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2069 A B D P Q p g pat e q a) = (term2070 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343145 A B P p g a) (@lem8343140 D P Q pat e q a)). Qed.
Lemma lem8343147 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2071 A B D P Q p g pat e q a) = (term2069 A B D P Q p g pat e q a).
Proof. exact (@lem17045 (p g a) (term179 D P Q pat e q a)). Qed.
Lemma lem8343148 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2071 A B D P Q p g pat e q a) = (term2070 A B D P Q p g pat e q a).
Proof. exact (TRANS (@lem8343147 A B D P Q p g pat e q a) (@lem8343146 A B D P Q p g pat e q a)). Qed.
Lemma lem8343150 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1250 A B P p g a) = (term1250 A B P p g a).
Proof. exact (eq_refl (term1250 A B P p g a)). Qed.
Lemma lem8343151 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343150 A B P p g a) (@lem8343143 D P Q pat e q a)). Qed.
Lemma lem8343152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343153 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2072 A B D P Q p f pat e q a) = (term2073 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343152) (@lem8343113 A B D P Q p f pat e q a)). Qed.
Lemma lem8343154 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2074 A B D P Q f p g pat e q a) = (term2075 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343153 A B D P Q p f pat e q a) (@lem8343151 A B D P Q p g pat e q a)). Qed.
Lemma lem8343155 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343156 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term1145 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343155) (@lem8343116 A B D P Q p f pat e q a)). Qed.
Lemma lem8343157 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2076 A B D P Q f p g pat e q a) = (term2077 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343156 A B D P Q p f pat e q a) (@lem8343148 A B D P Q p g pat e q a)). Qed.
Lemma lem8343158 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343159 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2078 A B D P Q f p g pat e q a) = (term2079 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343158) (@lem8343157 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343160 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2080 A B D P Q f p g pat e q a) = (term2081 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343159 A B D P Q f p g pat e q a) (@lem8343154 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343161 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2082 A B D P Q f p g pat e q a) = (term2080 A B D P Q f p g pat e q a).
Proof. exact (@lem17646 (term1140 A B D P Q p f pat e q a) (term1140 A B D P Q p g pat e q a)). Qed.
Lemma lem8343162 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2082 A B D P Q f p g pat e q a) = (term2081 A B D P Q f p g pat e q a).
Proof. exact (TRANS (@lem8343161 A B D P Q f p g pat e q a) (@lem8343160 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343164 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2083 A B P lt2 s a f g) = (term2084 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8343163) (@lem8343081 A B P lt2 s a f g)). Qed.
Lemma lem8343165 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2085 A B D P Q lt2 s f p g pat e q a) = (term2086 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343164 A B P lt2 s a f g) (@lem8343162 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343166 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2087 A B D P Q lt2 s f p g pat e q a) = (term2085 A B D P Q lt2 s f p g pat e q a).
Proof. exact (@lem17362 (term1104 A B P lt2 s a f g) ((term1140 A B D P Q p f pat e q a) = (term1140 A B D P Q p g pat e q a))). Qed.
Lemma lem8343167 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2087 A B D P Q lt2 s f p g pat e q a) = (term2086 A B D P Q lt2 s f p g pat e q a).
Proof. exact (TRANS (@lem8343166 A B D P Q lt2 s f p g pat e q a) (@lem8343165 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343168 {P : Type'} (P' : P -> Prop) : (term1927 P P') = (term1928 P P').
Proof. exact (@lem18392 P P'). Qed.
Lemma lem8343169 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2088 A B D P Q lt2 s f p g pat e q) = (term2089 A B D P Q lt2 s f p g pat e q).
Proof. exact (@lem8343168 P (term1221 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343170 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2090 A B D P Q lt2 s f p g pat e q a) = (term1219 A B D P Q lt2 s f p g pat e q a).
Proof. exact (eq_refl (term2090 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343171 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343172 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2091 A B D P Q lt2 s f p g pat e q a) = (term2087 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343171) (@lem8343170 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343173 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2091 A B D P Q lt2 s f p g pat e q a) = (term2086 A B D P Q lt2 s f p g pat e q a).
Proof. exact (TRANS (@lem8343172 A B D P Q lt2 s f p g pat e q a) (@lem8343167 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343174 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2092 A B D P Q lt2 s f p g pat e q) = (term2093 A B D P Q lt2 s f p g pat e q).
Proof. exact (fun_ext (fun a : P => @lem8343173 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343175 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8343176 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2089 A B D P Q lt2 s f p g pat e q) = (term2094 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8343175 P) (@lem8343174 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343177 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2088 A B D P Q lt2 s f p g pat e q) = (term2094 A B D P Q lt2 s f p g pat e q).
Proof. exact (TRANS (@lem8343169 A B D P Q lt2 s f p g pat e q) (@lem8343176 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343178 {A B : Type'} (P : type572 A B) : (term2057 A B P) = (term2058 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8343179 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2095 A B D P Q lt2 s f p pat e q) = (term2096 A B D P Q lt2 s f p pat e q).
Proof. exact (@lem8343178 A B (term1225 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343180 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2097 A B D P Q lt2 s f p pat e q g) = (term1223 A B D P Q lt2 s f p g pat e q).
Proof. exact (eq_refl (term2097 A B D P Q lt2 s f p pat e q g)). Qed.
Lemma lem8343181 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343182 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2098 A B D P Q lt2 s f p pat e q g) = (term2088 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8343181) (@lem8343180 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343183 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2098 A B D P Q lt2 s f p pat e q g) = (term2094 A B D P Q lt2 s f p g pat e q).
Proof. exact (TRANS (@lem8343182 A B D P Q lt2 s f p g pat e q) (@lem8343177 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343184 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2099 A B D P Q lt2 s f p pat e q) = (term2100 A B D P Q lt2 s f p pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8343183 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343185 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343186 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2096 A B D P Q lt2 s f p pat e q) = (term2101 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8343185 A B) (@lem8343184 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343187 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2095 A B D P Q lt2 s f p pat e q) = (term2101 A B D P Q lt2 s f p pat e q).
Proof. exact (TRANS (@lem8343179 A B D P Q lt2 s f p pat e q) (@lem8343186 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343188 {A B : Type'} (P : type572 A B) : (term2057 A B P) = (term2058 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8343189 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2102 A B D P Q lt2 s p pat e q) = (term2103 A B D P Q lt2 s p pat e q).
Proof. exact (@lem8343188 A B (term1229 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343190 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2104 A B D P Q lt2 s p pat e q f) = (term1227 A B D P Q lt2 s f p pat e q).
Proof. exact (eq_refl (term2104 A B D P Q lt2 s p pat e q f)). Qed.
Lemma lem8343191 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343192 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2105 A B D P Q lt2 s p pat e q f) = (term2095 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8343191) (@lem8343190 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343193 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2105 A B D P Q lt2 s p pat e q f) = (term2101 A B D P Q lt2 s f p pat e q).
Proof. exact (TRANS (@lem8343192 A B D P Q lt2 s f p pat e q) (@lem8343187 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343194 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2106 A B D P Q lt2 s p pat e q) = (term2107 A B D P Q lt2 s p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8343193 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343195 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343196 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2103 A B D P Q lt2 s p pat e q) = (term2108 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8343195 A B) (@lem8343194 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343197 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2102 A B D P Q lt2 s p pat e q) = (term2108 A B D P Q lt2 s p pat e q).
Proof. exact (TRANS (@lem8343189 A B D P Q lt2 s p pat e q) (@lem8343196 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343202 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term272 D P Q pat e q a t)). Qed.
Lemma lem8343203 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term273 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343202 D P Q pat e q a t)). Qed.
Lemma lem8343204 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343205 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term179 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343204 Q) (@lem8343203 D P Q pat e q a)). Qed.
Lemma lem8343206 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2109 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (@lem16933 (term179 D P Q pat e q a)). Qed.
Lemma lem8343207 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2109 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (TRANS (@lem8343206 D P Q pat e q a) (@lem8343205 D P Q pat e q a)). Qed.
Lemma lem8343214 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2110 A B D P Q p _112897 f arg _112896 pat e q a) = (term2111 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (@lem17362 (p f a) ((_112897 pat e q f arg a) = (term1357 A B D P Q f arg _112896 pat e q a))). Qed.
Lemma lem8343215 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343216 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2112 D P Q pat e q a) = (term2113 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343215) (@lem8343207 D P Q pat e q a)). Qed.
Lemma lem8343217 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2114 A B D P Q p _112897 f arg _112896 pat e q a) = (term2115 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343216 D P Q pat e q a) (@lem8343214 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343218 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2116 A B D P Q p _112897 f arg _112896 pat e q a) = (term2114 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (@lem17160 (term207 D P Q pat e q a) (term1604 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343219 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2116 A B D P Q p _112897 f arg _112896 pat e q a) = (term2115 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (TRANS (@lem8343218 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8343217 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343220 {P : Type'} (P' : P -> Prop) : (term1927 P P') = (term1928 P P').
Proof. exact (@lem18392 P P'). Qed.
Lemma lem8343221 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2117 A B D P Q p _112897 f arg _112896 pat e q) = (term2118 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (@lem8343220 P (term1616 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343222 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2119 A B D P Q p _112897 f arg _112896 pat e q a) = (term1613 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2119 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343223 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343224 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2120 A B D P Q p _112897 f arg _112896 pat e q a) = (term2116 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343223) (@lem8343222 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343225 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2120 A B D P Q p _112897 f arg _112896 pat e q a) = (term2115 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (TRANS (@lem8343224 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8343219 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343226 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2121 A B D P Q p _112897 f arg _112896 pat e q) = (term2122 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8343225 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8343227 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8343228 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2118 A B D P Q p _112897 f arg _112896 pat e q) = (term2123 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343227 P) (@lem8343226 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343229 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2117 A B D P Q p _112897 f arg _112896 pat e q) = (term2123 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8343221 A B D P Q p _112897 f arg _112896 pat e q) (@lem8343228 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343230 {A B : Type'} (P : type572 A B) : (term2057 A B P) = (term2058 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8343231 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2124 A B D P Q p _112897 arg _112896 pat e q) = (term2125 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (@lem8343230 A B (term1618 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343232 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2126 A B D P Q p _112897 arg _112896 pat e q f) = (term1617 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2126 A B D P Q p _112897 arg _112896 pat e q f)). Qed.
Lemma lem8343233 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8343234 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2127 A B D P Q p _112897 arg _112896 pat e q f) = (term2117 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343233) (@lem8343232 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343235 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2127 A B D P Q p _112897 arg _112896 pat e q f) = (term2123 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8343234 A B D P Q p _112897 f arg _112896 pat e q) (@lem8343229 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343236 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2128 A B D P Q p _112897 arg _112896 pat e q) = (term2129 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8343235 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8343237 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343238 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2125 A B D P Q p _112897 arg _112896 pat e q) = (term2130 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343237 A B) (@lem8343236 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343239 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2124 A B D P Q p _112897 arg _112896 pat e q) = (term2130 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8343231 A B D P Q p _112897 arg _112896 pat e q) (@lem8343238 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343240 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343241 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2131 A B D P Q lt2 s p pat e q) = (term2132 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8343240) (@lem8343197 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343242 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2133 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2134 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343241 A B D P Q lt2 s p pat e q) (@lem8343239 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343243 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2135 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2133 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (@lem17045 (term1231 A B D P Q lt2 s p pat e q) (term1619 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343244 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2135 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2134 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8343243 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8343242 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343245 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343246 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2136 A B D P Q p arg _112896 pat e q lt2 s) = (term2137 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343245) (@lem8343071 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343247 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2138 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2139 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343246 A B D P Q p arg _112896 pat e q lt2 s) (@lem8343244 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343248 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2138 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (@lem17045 (term1355 A B D P Q p arg _112896 pat e q lt2 s) (term1622 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343249 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2139 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8343248 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8343247 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8343752 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8343753 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8343752 Q P Q'). Qed.
Lemma lem8343754 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p f pat e q a) = (term2141 A B D P Q p f pat e q a).
Proof. exact (@lem8343753 Q (p f a) (term273 D P Q pat e q a)). Qed.
Lemma lem8343755 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343756 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term793 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343755 D P Q pat e q a t)). Qed.
Lemma lem8343757 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343758 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term794 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343757 Q) (@lem8343756 D P Q pat e q a)). Qed.
Lemma lem8343759 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343760 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343759 A B P p f a) (@lem8343758 D P Q pat e q a)). Qed.
Lemma lem8343761 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343762 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2142 A B D P Q p f pat e q a) = (term1193 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343761) (@lem8343760 A B D P Q p f pat e q a)). Qed.
Lemma lem8343763 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343764 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343765 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2143 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8343764 A B P p f a) (@lem8343763 D P Q pat e q a t)). Qed.
Lemma lem8343766 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2145 A B D P Q p f pat e q a) = (term2146 A B D P Q p f pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343765 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343767 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343768 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2141 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343767 Q) (@lem8343766 A B D P Q p f pat e q a)). Qed.
Lemma lem8343769 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2140 A B D P Q p f pat e q a) = (term2141 A B D P Q p f pat e q a)) = ((term1140 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a)).
Proof. exact (MK_COMB (@lem8343762 A B D P Q p f pat e q a) (@lem8343768 A B D P Q p f pat e q a)). Qed.
Lemma lem8343770 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (EQ_MP (@lem8343769 A B D P Q p f pat e q a) (@lem8343754 A B D P Q p f pat e q a)). Qed.
Lemma lem8343771 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343772 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term2148 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343771) (@lem8343770 A B D P Q p f pat e q a)). Qed.
Lemma lem8343773 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343774 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1346 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2149 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343772 A B D P Q p f pat e q a) (@lem8343773 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343776 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8343777 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8343776 Q P Q'). Qed.
Lemma lem8343778 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2150 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2151 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (@lem8343777 Q (term2146 A B D P Q p f pat e q a) (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343779 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343780 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2153 A B D P Q p f pat e q a) = (term2146 A B D P Q p f pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343779 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343781 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343782 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2154 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343781 Q) (@lem8343780 A B D P Q p f pat e q a)). Qed.
Lemma lem8343783 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343784 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2155 A B D P Q p f pat e q a) = (term2148 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343783) (@lem8343782 A B D P Q p f pat e q a)). Qed.
Lemma lem8343785 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343786 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2150 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2149 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343784 A B D P Q p f pat e q a) (@lem8343785 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343787 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343788 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2156 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2157 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343787) (@lem8343786 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343789 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343790 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343791 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2158 A B D P Q p f pat e q a t) = (term2159 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8343790) (@lem8343789 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343792 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term1345 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term1345 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343793 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2160 A B D P Q p f t lt2 y arg _112896 pat e q a) = (term2161 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343791 A B D P Q p f pat e q a t) (@lem8343792 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343794 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2162 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2163 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343793 A B D P Q p f t lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343795 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343796 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2151 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2164 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343795 Q) (@lem8343794 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343797 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2150 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2151 A B D P Q p f lt2 y arg _112896 pat e q a)) = ((term2149 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2164 A B D P Q p f lt2 y arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8343788 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343796 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343798 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2149 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2164 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (EQ_MP (@lem8343797 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343778 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343799 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1346 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2164 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (TRANS (@lem8343774 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343798 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343801 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2040 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2165 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343800) (@lem8343799 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343802 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2039 A P lt2 y s a) = (term2039 A P lt2 y s a).
Proof. exact (eq_refl (term2039 A P lt2 y s a)). Qed.
Lemma lem8343803 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2166 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343801 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343802 A P lt2 y s a)). Qed.
Lemma lem8343805 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8343806 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8343805 Q P Q'). Qed.
Lemma lem8343807 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2167 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2168 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (@lem8343806 Q (term2163 A B D P Q p f lt2 y arg _112896 pat e q a) (term2039 A P lt2 y s a)). Qed.
Lemma lem8343808 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2169 A B D P Q p f lt2 y arg _112896 pat e q a t) = (term2161 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term2169 A B D P Q p f lt2 y arg _112896 pat e q a t)). Qed.
Lemma lem8343809 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2170 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2163 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343808 A B D P Q p f t lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343810 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343811 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2171 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2164 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343810 Q) (@lem8343809 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343812 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343813 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2172 A B D P Q p f lt2 y arg _112896 pat e q a) = (term2165 A B D P Q p f lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343812) (@lem8343811 A B D P Q p f lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343814 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2039 A P lt2 y s a) = (term2039 A P lt2 y s a).
Proof. exact (eq_refl (term2039 A P lt2 y s a)). Qed.
Lemma lem8343815 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2167 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2166 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343813 A B D P Q p f lt2 y arg _112896 pat e q a) (@lem8343814 A P lt2 y s a)). Qed.
Lemma lem8343816 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343817 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2173 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2174 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343816) (@lem8343815 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343818 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2169 A B D P Q p f lt2 y arg _112896 pat e q a t) = (term2161 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (eq_refl (term2169 A B D P Q p f lt2 y arg _112896 pat e q a t)). Qed.
Lemma lem8343819 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343820 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2175 A B D P Q p f lt2 y arg _112896 pat e q a t) = (term2176 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8343819) (@lem8343818 A B D P Q p f t lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8343821 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2039 A P lt2 y s a) = (term2039 A P lt2 y s a).
Proof. exact (eq_refl (term2039 A P lt2 y s a)). Qed.
Lemma lem8343822 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2177 A B D P Q p f arg _112896 pat e q t lt2 y s a) = (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343820 A B D P Q p f t lt2 y arg _112896 pat e q a) (@lem8343821 A P lt2 y s a)). Qed.
Lemma lem8343823 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2179 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2180 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (fun_ext (fun t : Q => @lem8343822 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343824 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343825 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2168 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8343824 Q) (@lem8343823 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343826 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : ((term2167 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2168 A B D P Q p f arg _112896 pat e q lt2 y s a)) = ((term2166 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a)).
Proof. exact (MK_COMB (@lem8343817 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8343825 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343827 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2166 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (EQ_MP (@lem8343826 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8343807 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343828 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2041 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (TRANS (@lem8343803 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8343827 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343829 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2048 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2182 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8343828 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8343830 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8343831 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2049 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2183 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8343830 A) (@lem8343829 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343832 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2055 A B D P Q p f arg _112896 pat e q lt2 s) = (term2184 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8343831 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8343833 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8343834 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2056 A B D P Q p f arg _112896 pat e q lt2 s) = (term2185 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343833 P) (@lem8343832 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343835 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2064 A B D P Q p arg _112896 pat e q lt2 s) = (term2186 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8343834 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343836 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343837 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2065 A B D P Q p arg _112896 pat e q lt2 s) = (term2187 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343836 A B) (@lem8343835 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343839 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2137 A B D P Q p arg _112896 pat e q lt2 s) = (term2188 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8343838) (@lem8343837 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8343841 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8343842 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8343841 Q P Q'). Qed.
Lemma lem8343843 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p f pat e q a) = (term2141 A B D P Q p f pat e q a).
Proof. exact (@lem8343842 Q (p f a) (term273 D P Q pat e q a)). Qed.
Lemma lem8343844 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343845 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term793 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343844 D P Q pat e q a t)). Qed.
Lemma lem8343846 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343847 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term794 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343846 Q) (@lem8343845 D P Q pat e q a)). Qed.
Lemma lem8343848 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343849 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p f pat e q a) = (term1140 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343848 A B P p f a) (@lem8343847 D P Q pat e q a)). Qed.
Lemma lem8343850 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343851 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2142 A B D P Q p f pat e q a) = (term1193 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343850) (@lem8343849 A B D P Q p f pat e q a)). Qed.
Lemma lem8343852 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343853 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1250 A B P p f a).
Proof. exact (eq_refl (term1250 A B P p f a)). Qed.
Lemma lem8343854 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2143 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8343853 A B P p f a) (@lem8343852 D P Q pat e q a t)). Qed.
Lemma lem8343855 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2145 A B D P Q p f pat e q a) = (term2146 A B D P Q p f pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343854 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343856 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343857 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2141 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343856 Q) (@lem8343855 A B D P Q p f pat e q a)). Qed.
Lemma lem8343858 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2140 A B D P Q p f pat e q a) = (term2141 A B D P Q p f pat e q a)) = ((term1140 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a)).
Proof. exact (MK_COMB (@lem8343851 A B D P Q p f pat e q a) (@lem8343857 A B D P Q p f pat e q a)). Qed.
Lemma lem8343859 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (EQ_MP (@lem8343858 A B D P Q p f pat e q a) (@lem8343843 A B D P Q p f pat e q a)). Qed.
Lemma lem8343860 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343861 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1145 A B D P Q p f pat e q a) = (term2148 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343860) (@lem8343859 A B D P Q p f pat e q a)). Qed.
Lemma lem8343862 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2070 A B D P Q p g pat e q a) = (term2070 A B D P Q p g pat e q a).
Proof. exact (eq_refl (term2070 A B D P Q p g pat e q a)). Qed.
Lemma lem8343863 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2077 A B D P Q f p g pat e q a) = (term2189 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343861 A B D P Q p f pat e q a) (@lem8343862 A B D P Q p g pat e q a)). Qed.
Lemma lem8343865 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8343866 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8343865 Q P Q'). Qed.
Lemma lem8343867 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2190 A B D P Q f p g pat e q a) = (term2191 A B D P Q f p g pat e q a).
Proof. exact (@lem8343866 Q (term2146 A B D P Q p f pat e q a) (term2070 A B D P Q p g pat e q a)). Qed.
Lemma lem8343868 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343869 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2153 A B D P Q p f pat e q a) = (term2146 A B D P Q p f pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343868 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343870 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343871 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2154 A B D P Q p f pat e q a) = (term2147 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343870 Q) (@lem8343869 A B D P Q p f pat e q a)). Qed.
Lemma lem8343872 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343873 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2155 A B D P Q p f pat e q a) = (term2148 A B D P Q p f pat e q a).
Proof. exact (MK_COMB (@lem8343872) (@lem8343871 A B D P Q p f pat e q a)). Qed.
Lemma lem8343874 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2070 A B D P Q p g pat e q a) = (term2070 A B D P Q p g pat e q a).
Proof. exact (eq_refl (term2070 A B D P Q p g pat e q a)). Qed.
Lemma lem8343875 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2190 A B D P Q f p g pat e q a) = (term2189 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343873 A B D P Q p f pat e q a) (@lem8343874 A B D P Q p g pat e q a)). Qed.
Lemma lem8343876 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343877 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2192 A B D P Q f p g pat e q a) = (term2193 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343876) (@lem8343875 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343878 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p f pat e q a t) = (term2144 A B D P Q p f pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343879 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8343880 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2158 A B D P Q p f pat e q a t) = (term2159 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8343879) (@lem8343878 A B D P Q p f pat e q a t)). Qed.
Lemma lem8343881 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2070 A B D P Q p g pat e q a) = (term2070 A B D P Q p g pat e q a).
Proof. exact (eq_refl (term2070 A B D P Q p g pat e q a)). Qed.
Lemma lem8343882 {A B D P Q : Type'} (f : A -> B) (t : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2194 A B D P Q f t p g pat e q a) = (term2195 A B D P Q f t p g pat e q a).
Proof. exact (MK_COMB (@lem8343880 A B D P Q p f pat e q a t) (@lem8343881 A B D P Q p g pat e q a)). Qed.
Lemma lem8343883 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2196 A B D P Q f p g pat e q a) = (term2197 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343882 A B D P Q f t p g pat e q a)). Qed.
Lemma lem8343884 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343885 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2191 A B D P Q f p g pat e q a) = (term2198 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343884 Q) (@lem8343883 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343886 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2190 A B D P Q f p g pat e q a) = (term2191 A B D P Q f p g pat e q a)) = ((term2189 A B D P Q f p g pat e q a) = (term2198 A B D P Q f p g pat e q a)).
Proof. exact (MK_COMB (@lem8343877 A B D P Q f p g pat e q a) (@lem8343885 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343887 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2189 A B D P Q f p g pat e q a) = (term2198 A B D P Q f p g pat e q a).
Proof. exact (EQ_MP (@lem8343886 A B D P Q f p g pat e q a) (@lem8343867 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343888 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2077 A B D P Q f p g pat e q a) = (term2198 A B D P Q f p g pat e q a).
Proof. exact (TRANS (@lem8343863 A B D P Q f p g pat e q a) (@lem8343887 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343889 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343890 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2079 A B D P Q f p g pat e q a) = (term2199 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343889) (@lem8343888 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343892 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8343893 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8343892 Q P Q'). Qed.
Lemma lem8343894 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p g pat e q a) = (term2141 A B D P Q p g pat e q a).
Proof. exact (@lem8343893 Q (p g a) (term273 D P Q pat e q a)). Qed.
Lemma lem8343895 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343896 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term793 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343895 D P Q pat e q a t)). Qed.
Lemma lem8343897 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343898 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term794 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8343897 Q) (@lem8343896 D P Q pat e q a)). Qed.
Lemma lem8343899 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1250 A B P p g a) = (term1250 A B P p g a).
Proof. exact (eq_refl (term1250 A B P p g a)). Qed.
Lemma lem8343900 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2140 A B D P Q p g pat e q a) = (term1140 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343899 A B P p g a) (@lem8343898 D P Q pat e q a)). Qed.
Lemma lem8343901 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343902 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2142 A B D P Q p g pat e q a) = (term1193 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343901) (@lem8343900 A B D P Q p g pat e q a)). Qed.
Lemma lem8343903 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8343904 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1250 A B P p g a) = (term1250 A B P p g a).
Proof. exact (eq_refl (term1250 A B P p g a)). Qed.
Lemma lem8343905 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2143 A B D P Q p g pat e q a t) = (term2144 A B D P Q p g pat e q a t).
Proof. exact (MK_COMB (@lem8343904 A B P p g a) (@lem8343903 D P Q pat e q a t)). Qed.
Lemma lem8343906 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2145 A B D P Q p g pat e q a) = (term2146 A B D P Q p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343905 A B D P Q p g pat e q a t)). Qed.
Lemma lem8343907 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343908 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2141 A B D P Q p g pat e q a) = (term2147 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343907 Q) (@lem8343906 A B D P Q p g pat e q a)). Qed.
Lemma lem8343909 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2140 A B D P Q p g pat e q a) = (term2141 A B D P Q p g pat e q a)) = ((term1140 A B D P Q p g pat e q a) = (term2147 A B D P Q p g pat e q a)).
Proof. exact (MK_COMB (@lem8343902 A B D P Q p g pat e q a) (@lem8343908 A B D P Q p g pat e q a)). Qed.
Lemma lem8343910 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1140 A B D P Q p g pat e q a) = (term2147 A B D P Q p g pat e q a).
Proof. exact (EQ_MP (@lem8343909 A B D P Q p g pat e q a) (@lem8343894 A B D P Q p g pat e q a)). Qed.
Lemma lem8343911 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2073 A B D P Q p f pat e q a) = (term2073 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term2073 A B D P Q p f pat e q a)). Qed.
Lemma lem8343912 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2075 A B D P Q f p g pat e q a) = (term2200 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343911 A B D P Q p f pat e q a) (@lem8343910 A B D P Q p g pat e q a)). Qed.
Lemma lem8343914 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8343915 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8343914 Q P Q'). Qed.
Lemma lem8343916 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2201 A B D P Q f p g pat e q a) = (term2202 A B D P Q f p g pat e q a).
Proof. exact (@lem8343915 Q (term2070 A B D P Q p f pat e q a) (term2146 A B D P Q p g pat e q a)). Qed.
Lemma lem8343917 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p g pat e q a t) = (term2144 A B D P Q p g pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p g pat e q a t)). Qed.
Lemma lem8343918 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2153 A B D P Q p g pat e q a) = (term2146 A B D P Q p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343917 A B D P Q p g pat e q a t)). Qed.
Lemma lem8343919 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343920 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2154 A B D P Q p g pat e q a) = (term2147 A B D P Q p g pat e q a).
Proof. exact (MK_COMB (@lem8343919 Q) (@lem8343918 A B D P Q p g pat e q a)). Qed.
Lemma lem8343921 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2073 A B D P Q p f pat e q a) = (term2073 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term2073 A B D P Q p f pat e q a)). Qed.
Lemma lem8343922 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2201 A B D P Q f p g pat e q a) = (term2200 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343921 A B D P Q p f pat e q a) (@lem8343920 A B D P Q p g pat e q a)). Qed.
Lemma lem8343923 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343924 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2203 A B D P Q f p g pat e q a) = (term2204 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343923) (@lem8343922 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343925 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2152 A B D P Q p g pat e q a t) = (term2144 A B D P Q p g pat e q a t).
Proof. exact (eq_refl (term2152 A B D P Q p g pat e q a t)). Qed.
Lemma lem8343926 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2073 A B D P Q p f pat e q a) = (term2073 A B D P Q p f pat e q a).
Proof. exact (eq_refl (term2073 A B D P Q p f pat e q a)). Qed.
Lemma lem8343927 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2205 A B D P Q f p g pat e q a t) = (term2206 A B D P Q f p g pat e q a t).
Proof. exact (MK_COMB (@lem8343926 A B D P Q p f pat e q a) (@lem8343925 A B D P Q p g pat e q a t)). Qed.
Lemma lem8343928 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2207 A B D P Q f p g pat e q a) = (term2208 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343927 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343929 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343930 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2202 A B D P Q f p g pat e q a) = (term2209 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343929 Q) (@lem8343928 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343931 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2201 A B D P Q f p g pat e q a) = (term2202 A B D P Q f p g pat e q a)) = ((term2200 A B D P Q f p g pat e q a) = (term2209 A B D P Q f p g pat e q a)).
Proof. exact (MK_COMB (@lem8343924 A B D P Q f p g pat e q a) (@lem8343930 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343932 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2200 A B D P Q f p g pat e q a) = (term2209 A B D P Q f p g pat e q a).
Proof. exact (EQ_MP (@lem8343931 A B D P Q f p g pat e q a) (@lem8343916 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343933 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2075 A B D P Q f p g pat e q a) = (term2209 A B D P Q f p g pat e q a).
Proof. exact (TRANS (@lem8343912 A B D P Q f p g pat e q a) (@lem8343932 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343934 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2081 A B D P Q f p g pat e q a) = (term2210 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343890 A B D P Q f p g pat e q a) (@lem8343933 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343936 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8343937 {Q : Type'} (P : Q -> Prop) (Q' : Q -> Prop) : (term811 Q P Q') = (term812 Q P Q').
Proof. exact (@lem8343936 Q P Q'). Qed.
Lemma lem8343938 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2211 A B D P Q f p g pat e q a) = (term2212 A B D P Q f p g pat e q a).
Proof. exact (@lem8343937 Q (term2197 A B D P Q f p g pat e q a) (term2208 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343939 {A B D P Q : Type'} (f : A -> B) (t : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2213 A B D P Q f p g pat e q a t) = (term2195 A B D P Q f t p g pat e q a).
Proof. exact (eq_refl (term2213 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343940 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2214 A B D P Q f p g pat e q a) = (term2197 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343939 A B D P Q f t p g pat e q a)). Qed.
Lemma lem8343941 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343942 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2215 A B D P Q f p g pat e q a) = (term2198 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343941 Q) (@lem8343940 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343943 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343944 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2216 A B D P Q f p g pat e q a) = (term2199 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343943) (@lem8343942 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343945 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2217 A B D P Q f p g pat e q a t) = (term2206 A B D P Q f p g pat e q a t).
Proof. exact (eq_refl (term2217 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343946 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2218 A B D P Q f p g pat e q a) = (term2208 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343945 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343947 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343948 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2219 A B D P Q f p g pat e q a) = (term2209 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343947 Q) (@lem8343946 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343949 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2211 A B D P Q f p g pat e q a) = (term2210 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343944 A B D P Q f p g pat e q a) (@lem8343948 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343950 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343951 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2220 A B D P Q f p g pat e q a) = (term2221 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343950) (@lem8343949 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343952 {A B D P Q : Type'} (f : A -> B) (t : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2213 A B D P Q f p g pat e q a t) = (term2195 A B D P Q f t p g pat e q a).
Proof. exact (eq_refl (term2213 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343953 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343954 {A B D P Q : Type'} (f : A -> B) (t : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2222 A B D P Q f p g pat e q a t) = (term2223 A B D P Q f t p g pat e q a).
Proof. exact (MK_COMB (@lem8343953) (@lem8343952 A B D P Q f t p g pat e q a)). Qed.
Lemma lem8343955 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2217 A B D P Q f p g pat e q a t) = (term2206 A B D P Q f p g pat e q a t).
Proof. exact (eq_refl (term2217 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343956 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2224 A B D P Q f p g pat e q a t) = (term2225 A B D P Q f p g pat e q a t).
Proof. exact (MK_COMB (@lem8343954 A B D P Q f t p g pat e q a) (@lem8343955 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343957 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2226 A B D P Q f p g pat e q a) = (term2227 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343956 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343958 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343959 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2212 A B D P Q f p g pat e q a) = (term2228 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343958 Q) (@lem8343957 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343960 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2211 A B D P Q f p g pat e q a) = (term2212 A B D P Q f p g pat e q a)) = ((term2210 A B D P Q f p g pat e q a) = (term2228 A B D P Q f p g pat e q a)).
Proof. exact (MK_COMB (@lem8343951 A B D P Q f p g pat e q a) (@lem8343959 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343961 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2210 A B D P Q f p g pat e q a) = (term2228 A B D P Q f p g pat e q a).
Proof. exact (EQ_MP (@lem8343960 A B D P Q f p g pat e q a) (@lem8343938 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343962 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2081 A B D P Q f p g pat e q a) = (term2228 A B D P Q f p g pat e q a).
Proof. exact (TRANS (@lem8343934 A B D P Q f p g pat e q a) (@lem8343961 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343963 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2084 A B P lt2 s a f g) = (term2084 A B P lt2 s a f g).
Proof. exact (eq_refl (term2084 A B P lt2 s a f g)). Qed.
Lemma lem8343964 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2086 A B D P Q lt2 s f p g pat e q a) = (term2229 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343963 A B P lt2 s a f g) (@lem8343962 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343966 {A : Type'} (P : Prop) (Q : A -> Prop) : (term540 A P Q) = (term539 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8343967 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term540 Q P Q') = (term539 Q P Q').
Proof. exact (@lem8343966 Q P Q'). Qed.
Lemma lem8343968 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2230 A B D P Q lt2 s f p g pat e q a) = (term2231 A B D P Q lt2 s f p g pat e q a).
Proof. exact (@lem8343967 Q (term2068 A B P lt2 s a f g) (term2227 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343969 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2232 A B D P Q f p g pat e q a t) = (term2225 A B D P Q f p g pat e q a t).
Proof. exact (eq_refl (term2232 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343970 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2233 A B D P Q f p g pat e q a) = (term2227 A B D P Q f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343969 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343971 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343972 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2234 A B D P Q f p g pat e q a) = (term2228 A B D P Q f p g pat e q a).
Proof. exact (MK_COMB (@lem8343971 Q) (@lem8343970 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343973 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2084 A B P lt2 s a f g) = (term2084 A B P lt2 s a f g).
Proof. exact (eq_refl (term2084 A B P lt2 s a f g)). Qed.
Lemma lem8343974 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2230 A B D P Q lt2 s f p g pat e q a) = (term2229 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343973 A B P lt2 s a f g) (@lem8343972 A B D P Q f p g pat e q a)). Qed.
Lemma lem8343975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8343976 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2235 A B D P Q lt2 s f p g pat e q a) = (term2236 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343975) (@lem8343974 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343977 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2232 A B D P Q f p g pat e q a t) = (term2225 A B D P Q f p g pat e q a t).
Proof. exact (eq_refl (term2232 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343978 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2084 A B P lt2 s a f g) = (term2084 A B P lt2 s a f g).
Proof. exact (eq_refl (term2084 A B P lt2 s a f g)). Qed.
Lemma lem8343979 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2237 A B D P Q lt2 s f p g pat e q a t) = (term2238 A B D P Q lt2 s f p g pat e q a t).
Proof. exact (MK_COMB (@lem8343978 A B P lt2 s a f g) (@lem8343977 A B D P Q f p g pat e q a t)). Qed.
Lemma lem8343980 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2239 A B D P Q lt2 s f p g pat e q a) = (term2240 A B D P Q lt2 s f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8343979 A B D P Q lt2 s f p g pat e q a t)). Qed.
Lemma lem8343981 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8343982 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2231 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8343981 Q) (@lem8343980 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343983 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2230 A B D P Q lt2 s f p g pat e q a) = (term2231 A B D P Q lt2 s f p g pat e q a)) = ((term2229 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a)).
Proof. exact (MK_COMB (@lem8343976 A B D P Q lt2 s f p g pat e q a) (@lem8343982 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343984 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2229 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (EQ_MP (@lem8343983 A B D P Q lt2 s f p g pat e q a) (@lem8343968 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343985 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2086 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (TRANS (@lem8343964 A B D P Q lt2 s f p g pat e q a) (@lem8343984 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343986 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2093 A B D P Q lt2 s f p g pat e q) = (term2242 A B D P Q lt2 s f p g pat e q).
Proof. exact (fun_ext (fun a : P => @lem8343985 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8343987 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8343988 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2094 A B D P Q lt2 s f p g pat e q) = (term2243 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8343987 P) (@lem8343986 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343989 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2100 A B D P Q lt2 s f p pat e q) = (term2244 A B D P Q lt2 s f p pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8343988 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8343990 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343991 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2101 A B D P Q lt2 s f p pat e q) = (term2245 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8343990 A B) (@lem8343989 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343992 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2107 A B D P Q lt2 s p pat e q) = (term2246 A B D P Q lt2 s p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8343991 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8343993 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8343994 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2108 A B D P Q lt2 s p pat e q) = (term2247 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8343993 A B) (@lem8343992 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343995 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8343996 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2132 A B D P Q lt2 s p pat e q) = (term2248 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8343995) (@lem8343994 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8343998 {A : Type'} (P : A -> Prop) (Q : Prop) : (term559 A P Q) = (term560 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8343999 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term559 Q P Q') = (term560 Q P Q').
Proof. exact (@lem8343998 Q P Q'). Qed.
Lemma lem8344000 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2249 A B D P Q p _112897 f arg _112896 pat e q a) = (term2250 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (@lem8343999 Q (term273 D P Q pat e q a) (term2111 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344001 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8344002 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term793 D P Q pat e q a) = (term273 D P Q pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8344001 D P Q pat e q a t)). Qed.
Lemma lem8344003 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344004 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term794 D P Q pat e q a) = (term179 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8344003 Q) (@lem8344002 D P Q pat e q a)). Qed.
Lemma lem8344005 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8344006 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2251 D P Q pat e q a) = (term2113 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8344005) (@lem8344004 D P Q pat e q a)). Qed.
Lemma lem8344007 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2111 A B D P Q p _112897 f arg _112896 pat e q a) = (term2111 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2111 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344008 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2249 A B D P Q p _112897 f arg _112896 pat e q a) = (term2115 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344006 D P Q pat e q a) (@lem8344007 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344009 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344010 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2252 A B D P Q p _112897 f arg _112896 pat e q a) = (term2253 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344009) (@lem8344008 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344011 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term502 D P Q pat e q a t) = (term272 D P Q pat e q a t).
Proof. exact (eq_refl (term502 D P Q pat e q a t)). Qed.
Lemma lem8344012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8344013 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2254 D P Q pat e q a t) = (term2255 D P Q pat e q a t).
Proof. exact (MK_COMB (@lem8344012) (@lem8344011 D P Q pat e q a t)). Qed.
Lemma lem8344014 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2111 A B D P Q p _112897 f arg _112896 pat e q a) = (term2111 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2111 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344015 {A B D P Q : Type'} (t : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2256 A B D P Q t p _112897 f arg _112896 pat e q a) = (term2257 A B D P Q t p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344013 D P Q pat e q a t) (@lem8344014 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344016 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2258 A B D P Q p _112897 f arg _112896 pat e q a) = (term2259 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8344015 A B D P Q t p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344017 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344018 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2250 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344017 Q) (@lem8344016 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344019 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2249 A B D P Q p _112897 f arg _112896 pat e q a) = (term2250 A B D P Q p _112897 f arg _112896 pat e q a)) = ((term2115 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8344010 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8344018 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344020 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2115 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (EQ_MP (@lem8344019 A B D P Q p _112897 f arg _112896 pat e q a) (@lem8344000 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344021 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2122 A B D P Q p _112897 f arg _112896 pat e q) = (term2261 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344020 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344022 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344023 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2123 A B D P Q p _112897 f arg _112896 pat e q) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344022 P) (@lem8344021 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344024 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2129 A B D P Q p _112897 arg _112896 pat e q) = (term2263 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344023 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344025 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344026 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2130 A B D P Q p _112897 arg _112896 pat e q) = (term2264 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344025 A B) (@lem8344024 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344027 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2134 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2265 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343996 A B D P Q lt2 s p pat e q) (@lem8344026 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344029 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8344030 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2266 A B P Q) = (term2267 A B P Q).
Proof. exact (@lem8344029 (A -> B) P Q). Qed.
Lemma lem8344031 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2268 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2269 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (@lem8344030 A B (term2246 A B D P Q lt2 s p pat e q) (term2263 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344032 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2270 A B D P Q lt2 s p pat e q f) = (term2245 A B D P Q lt2 s f p pat e q).
Proof. exact (eq_refl (term2270 A B D P Q lt2 s p pat e q f)). Qed.
Lemma lem8344033 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2271 A B D P Q lt2 s p pat e q) = (term2246 A B D P Q lt2 s p pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344032 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8344034 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344035 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2272 A B D P Q lt2 s p pat e q) = (term2247 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8344034 A B) (@lem8344033 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8344036 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344037 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2273 A B D P Q lt2 s p pat e q) = (term2248 A B D P Q lt2 s p pat e q).
Proof. exact (MK_COMB (@lem8344036) (@lem8344035 A B D P Q lt2 s p pat e q)). Qed.
Lemma lem8344038 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2274 A B D P Q p _112897 arg _112896 pat e q f) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2274 A B D P Q p _112897 arg _112896 pat e q f)). Qed.
Lemma lem8344039 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2275 A B D P Q p _112897 arg _112896 pat e q) = (term2263 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344038 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344040 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344041 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2276 A B D P Q p _112897 arg _112896 pat e q) = (term2264 A B D P Q p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344040 A B) (@lem8344039 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344042 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2268 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2265 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344037 A B D P Q lt2 s p pat e q) (@lem8344041 A B D P Q p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344043 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344044 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2277 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2278 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344043) (@lem8344042 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344045 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2270 A B D P Q lt2 s p pat e q f) = (term2245 A B D P Q lt2 s f p pat e q).
Proof. exact (eq_refl (term2270 A B D P Q lt2 s p pat e q f)). Qed.
Lemma lem8344046 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344047 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2279 A B D P Q lt2 s p pat e q f) = (term2280 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8344046) (@lem8344045 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8344048 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2274 A B D P Q p _112897 arg _112896 pat e q f) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2274 A B D P Q p _112897 arg _112896 pat e q f)). Qed.
Lemma lem8344049 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2281 A B D P Q lt2 s p _112897 arg _112896 pat e q f) = (term2282 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344047 A B D P Q lt2 s f p pat e q) (@lem8344048 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344050 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2283 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2284 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344049 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344051 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344052 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2269 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2285 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344051 A B) (@lem8344050 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344053 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2268 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2269 A B D P Q lt2 s p _112897 arg _112896 pat e q)) = ((term2265 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2285 A B D P Q lt2 s p _112897 arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344044 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344052 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344054 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2265 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2285 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344053 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344031 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344058 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8344059 {A B : Type'} (P : type572 A B) (Q : Prop) : (term2286 A B P Q) = (term2287 A B P Q).
Proof. exact (@lem8344058 (A -> B) P Q). Qed.
Lemma lem8344060 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2288 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2289 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344059 A B (term2244 A B D P Q lt2 s f p pat e q) (term2262 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344061 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2290 A B D P Q lt2 s f p pat e q g) = (term2243 A B D P Q lt2 s f p g pat e q).
Proof. exact (eq_refl (term2290 A B D P Q lt2 s f p pat e q g)). Qed.
Lemma lem8344062 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2291 A B D P Q lt2 s f p pat e q) = (term2244 A B D P Q lt2 s f p pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344061 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8344063 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344064 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2292 A B D P Q lt2 s f p pat e q) = (term2245 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8344063 A B) (@lem8344062 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8344065 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344066 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2293 A B D P Q lt2 s f p pat e q) = (term2280 A B D P Q lt2 s f p pat e q).
Proof. exact (MK_COMB (@lem8344065) (@lem8344064 A B D P Q lt2 s f p pat e q)). Qed.
Lemma lem8344067 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2262 A B D P Q p _112897 f arg _112896 pat e q) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2262 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344068 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2288 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2282 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344066 A B D P Q lt2 s f p pat e q) (@lem8344067 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344069 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344070 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2294 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2295 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344069) (@lem8344068 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344071 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2290 A B D P Q lt2 s f p pat e q g) = (term2243 A B D P Q lt2 s f p g pat e q).
Proof. exact (eq_refl (term2290 A B D P Q lt2 s f p pat e q g)). Qed.
Lemma lem8344072 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344073 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2296 A B D P Q lt2 s f p pat e q g) = (term2297 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8344072) (@lem8344071 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8344074 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2262 A B D P Q p _112897 f arg _112896 pat e q) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2262 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344075 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2298 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344073 A B D P Q lt2 s f p g pat e q) (@lem8344074 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344076 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2300 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2301 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344075 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344077 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344078 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2289 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2302 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344077 A B) (@lem8344076 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344079 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2288 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2289 A B D P Q lt2 s p _112897 f arg _112896 pat e q)) = ((term2282 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2302 A B D P Q lt2 s p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344070 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344078 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344080 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2282 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2302 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344079 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344060 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344082 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8344083 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term811 P P' Q) = (term812 P P' Q).
Proof. exact (@lem8344082 P P' Q). Qed.
Lemma lem8344084 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2303 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2304 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344083 P (term2242 A B D P Q lt2 s f p g pat e q) (term2261 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344085 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2305 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (eq_refl (term2305 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344086 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2306 A B D P Q lt2 s f p g pat e q) = (term2242 A B D P Q lt2 s f p g pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344085 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344087 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344088 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2307 A B D P Q lt2 s f p g pat e q) = (term2243 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8344087 P) (@lem8344086 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8344089 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344090 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2308 A B D P Q lt2 s f p g pat e q) = (term2297 A B D P Q lt2 s f p g pat e q).
Proof. exact (MK_COMB (@lem8344089) (@lem8344088 A B D P Q lt2 s f p g pat e q)). Qed.
Lemma lem8344091 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2309 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2309 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344092 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2310 A B D P Q p _112897 f arg _112896 pat e q) = (term2261 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344091 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344093 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344094 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2311 A B D P Q p _112897 f arg _112896 pat e q) = (term2262 A B D P Q p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344093 P) (@lem8344092 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344095 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2303 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344090 A B D P Q lt2 s f p g pat e q) (@lem8344094 A B D P Q p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344096 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344097 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2312 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2313 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344096) (@lem8344095 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344098 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2305 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (eq_refl (term2305 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344099 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344100 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2314 A B D P Q lt2 s f p g pat e q a) = (term2315 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8344099) (@lem8344098 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344101 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2309 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2309 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344102 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2316 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2317 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344100 A B D P Q lt2 s f p g pat e q a) (@lem8344101 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344103 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2318 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2319 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344102 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344104 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344105 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2304 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2320 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344104 P) (@lem8344103 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344106 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2303 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2304 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)) = ((term2299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2320 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344097 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) (@lem8344105 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344107 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2320 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344106 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) (@lem8344084 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344109 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8344110 {Q : Type'} (P : Q -> Prop) (Q' : Q -> Prop) : (term811 Q P Q') = (term812 Q P Q').
Proof. exact (@lem8344109 Q P Q'). Qed.
Lemma lem8344111 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2321 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2322 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (@lem8344110 Q (term2240 A B D P Q lt2 s f p g pat e q a) (term2259 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344112 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2323 A B D P Q lt2 s f p g pat e q a t) = (term2238 A B D P Q lt2 s f p g pat e q a t).
Proof. exact (eq_refl (term2323 A B D P Q lt2 s f p g pat e q a t)). Qed.
Lemma lem8344113 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2324 A B D P Q lt2 s f p g pat e q a) = (term2240 A B D P Q lt2 s f p g pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8344112 A B D P Q lt2 s f p g pat e q a t)). Qed.
Lemma lem8344114 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344115 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2325 A B D P Q lt2 s f p g pat e q a) = (term2241 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8344114 Q) (@lem8344113 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344116 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344117 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2326 A B D P Q lt2 s f p g pat e q a) = (term2315 A B D P Q lt2 s f p g pat e q a).
Proof. exact (MK_COMB (@lem8344116) (@lem8344115 A B D P Q lt2 s f p g pat e q a)). Qed.
Lemma lem8344118 {A B D P Q : Type'} (t : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2327 A B D P Q p _112897 f arg _112896 pat e q a t) = (term2257 A B D P Q t p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2327 A B D P Q p _112897 f arg _112896 pat e q a t)). Qed.
Lemma lem8344119 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2328 A B D P Q p _112897 f arg _112896 pat e q a) = (term2259 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8344118 A B D P Q t p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344120 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344121 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2329 A B D P Q p _112897 f arg _112896 pat e q a) = (term2260 A B D P Q p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344120 Q) (@lem8344119 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344122 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2321 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2317 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344117 A B D P Q lt2 s f p g pat e q a) (@lem8344121 A B D P Q p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344123 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344124 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2330 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2331 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344123) (@lem8344122 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344125 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2323 A B D P Q lt2 s f p g pat e q a t) = (term2238 A B D P Q lt2 s f p g pat e q a t).
Proof. exact (eq_refl (term2323 A B D P Q lt2 s f p g pat e q a t)). Qed.
Lemma lem8344126 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344127 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2332 A B D P Q lt2 s f p g pat e q a t) = (term2333 A B D P Q lt2 s f p g pat e q a t).
Proof. exact (MK_COMB (@lem8344126) (@lem8344125 A B D P Q lt2 s f p g pat e q a t)). Qed.
Lemma lem8344128 {A B D P Q : Type'} (t : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2327 A B D P Q p _112897 f arg _112896 pat e q a t) = (term2257 A B D P Q t p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2327 A B D P Q p _112897 f arg _112896 pat e q a t)). Qed.
Lemma lem8344129 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2334 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a t) = (term2335 A B D P Q lt2 s g t p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344127 A B D P Q lt2 s f p g pat e q a t) (@lem8344128 A B D P Q t p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344130 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2336 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2337 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (fun_ext (fun t : Q => @lem8344129 A B D P Q lt2 s g t p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344131 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344132 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2322 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344131 Q) (@lem8344130 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344133 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2321 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2322 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)) = ((term2317 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8344124 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) (@lem8344132 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344134 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2317 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (EQ_MP (@lem8344133 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) (@lem8344111 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344135 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2319 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2339 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344134 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344136 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344137 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2320 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2340 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344136 P) (@lem8344135 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344138 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2340 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344107 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) (@lem8344137 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344139 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2301 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2341 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344138 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344140 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344141 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2302 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344140 A B) (@lem8344139 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344142 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2282 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344080 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344141 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344143 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2284 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2343 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344142 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344144 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344145 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2285 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2344 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344144 A B) (@lem8344143 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344146 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2265 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2344 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8344054 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344145 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344147 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2134 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2344 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8344027 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344146 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344148 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2139 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2345 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8343839 A B D P Q p arg _112896 pat e q lt2 s) (@lem8344147 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344150 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term811 A P Q) = (term812 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8344151 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2266 A B P Q) = (term2267 A B P Q).
Proof. exact (@lem8344150 (A -> B) P Q). Qed.
Lemma lem8344152 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2346 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2347 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (@lem8344151 A B (term2186 A B D P Q p arg _112896 pat e q lt2 s) (term2343 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344153 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2348 A B D P Q p arg _112896 pat e q lt2 s f) = (term2185 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (eq_refl (term2348 A B D P Q p arg _112896 pat e q lt2 s f)). Qed.
Lemma lem8344154 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2349 A B D P Q p arg _112896 pat e q lt2 s) = (term2186 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8344153 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344155 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344156 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2350 A B D P Q p arg _112896 pat e q lt2 s) = (term2187 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8344155 A B) (@lem8344154 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344157 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344158 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2351 A B D P Q p arg _112896 pat e q lt2 s) = (term2188 A B D P Q p arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8344157) (@lem8344156 A B D P Q p arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344159 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2352 A B D P Q lt2 s p _112897 arg _112896 pat e q f) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2352 A B D P Q lt2 s p _112897 arg _112896 pat e q f)). Qed.
Lemma lem8344160 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2353 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2343 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344159 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344161 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344162 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2354 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2344 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344161 A B) (@lem8344160 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344163 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2346 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2345 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344158 A B D P Q p arg _112896 pat e q lt2 s) (@lem8344162 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344164 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344165 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2355 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2356 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344164) (@lem8344163 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344166 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2348 A B D P Q p arg _112896 pat e q lt2 s f) = (term2185 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (eq_refl (term2348 A B D P Q p arg _112896 pat e q lt2 s f)). Qed.
Lemma lem8344167 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344168 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2357 A B D P Q p arg _112896 pat e q lt2 s f) = (term2358 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8344167) (@lem8344166 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344169 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2352 A B D P Q lt2 s p _112897 arg _112896 pat e q f) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2352 A B D P Q lt2 s p _112897 arg _112896 pat e q f)). Qed.
Lemma lem8344170 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2359 A B D P Q lt2 s p _112897 arg _112896 pat e q f) = (term2360 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344168 A B D P Q p f arg _112896 pat e q lt2 s) (@lem8344169 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344171 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2361 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2362 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344170 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344172 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344173 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2347 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2363 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344172 A B) (@lem8344171 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344174 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2346 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2347 A B D P Q lt2 s p _112897 arg _112896 pat e q)) = ((term2345 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2363 A B D P Q lt2 s p _112897 arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344165 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344173 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344175 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2345 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2363 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344174 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344152 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344179 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8344180 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term1947 P P' Q) = (term1948 P P' Q).
Proof. exact (@lem8344179 P P' Q). Qed.
Lemma lem8344181 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2364 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2365 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344180 P (term2184 A B D P Q p f arg _112896 pat e q lt2 s) (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344182 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2366 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2183 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (eq_refl (term2366 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344183 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2367 A B D P Q p f arg _112896 pat e q lt2 s) = (term2184 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8344182 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344184 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344185 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2368 A B D P Q p f arg _112896 pat e q lt2 s) = (term2185 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8344184 P) (@lem8344183 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344186 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344187 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) : (term2369 A B D P Q p f arg _112896 pat e q lt2 s) = (term2358 A B D P Q p f arg _112896 pat e q lt2 s).
Proof. exact (MK_COMB (@lem8344186) (@lem8344185 A B D P Q p f arg _112896 pat e q lt2 s)). Qed.
Lemma lem8344188 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344189 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2364 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2360 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344187 A B D P Q p f arg _112896 pat e q lt2 s) (@lem8344188 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344190 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344191 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2370 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2371 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344190) (@lem8344189 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344192 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2366 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2183 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (eq_refl (term2366 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344193 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344194 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2372 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2373 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8344193) (@lem8344192 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344195 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344196 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2374 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2375 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344194 A B D P Q p f arg _112896 pat e q lt2 s a) (@lem8344195 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344197 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2376 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2377 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344196 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344198 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344199 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2365 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2378 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344198 P) (@lem8344197 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344200 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2364 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2365 A B D P Q lt2 s p _112897 f arg _112896 pat e q)) = ((term2360 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2378 A B D P Q lt2 s p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344191 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344199 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344201 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2360 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2378 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344200 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344181 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344205 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8344206 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (@lem8344205 A P Q). Qed.
Lemma lem8344207 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2379 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2380 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344206 A (term2182 A B D P Q p f arg _112896 pat e q lt2 s a) (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344208 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2381 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2381 A B D P Q p f arg _112896 pat e q lt2 s a y)). Qed.
Lemma lem8344209 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2382 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2182 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8344208 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344210 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8344211 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2383 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2183 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8344210 A) (@lem8344209 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344212 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344213 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2384 A B D P Q p f arg _112896 pat e q lt2 s a) = (term2373 A B D P Q p f arg _112896 pat e q lt2 s a).
Proof. exact (MK_COMB (@lem8344212) (@lem8344211 A B D P Q p f arg _112896 pat e q lt2 s a)). Qed.
Lemma lem8344214 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344215 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2379 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2375 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344213 A B D P Q p f arg _112896 pat e q lt2 s a) (@lem8344214 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344216 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344217 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2385 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2386 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344216) (@lem8344215 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344218 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2381 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2381 A B D P Q p f arg _112896 pat e q lt2 s a y)). Qed.
Lemma lem8344219 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344220 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2387 A B D P Q p f arg _112896 pat e q lt2 s a y) = (term2388 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8344219) (@lem8344218 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344221 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344222 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2389 A B D P Q a y lt2 s p _112897 f arg _112896 pat e q) = (term2390 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344220 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8344221 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344223 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2391 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2392 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun y : A => @lem8344222 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344224 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8344225 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2380 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2393 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344224 A) (@lem8344223 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344226 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2379 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2380 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)) = ((term2375 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2393 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344217 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) (@lem8344225 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344227 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2375 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2393 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344226 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) (@lem8344207 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344231 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1947 A P Q) = (term1948 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8344232 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term1947 Q P Q') = (term1948 Q P Q').
Proof. exact (@lem8344231 Q P Q'). Qed.
Lemma lem8344233 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2394 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2395 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344232 Q (term2180 A B D P Q p f arg _112896 pat e q lt2 y s a) (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344234 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2396 A B D P Q p f arg _112896 pat e q lt2 y s a t) = (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2396 A B D P Q p f arg _112896 pat e q lt2 y s a t)). Qed.
Lemma lem8344235 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2397 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2180 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (fun_ext (fun t : Q => @lem8344234 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344236 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344237 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2398 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2181 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8344236 Q) (@lem8344235 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344238 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344239 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2399 A B D P Q p f arg _112896 pat e q lt2 y s a) = (term2388 A B D P Q p f arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8344238) (@lem8344237 A B D P Q p f arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344240 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344241 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2394 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2390 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344239 A B D P Q p f arg _112896 pat e q lt2 y s a) (@lem8344240 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344242 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344243 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2400 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2401 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344242) (@lem8344241 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344244 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2396 A B D P Q p f arg _112896 pat e q lt2 y s a t) = (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2396 A B D P Q p f arg _112896 pat e q lt2 y s a t)). Qed.
Lemma lem8344245 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344246 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2402 A B D P Q p f arg _112896 pat e q lt2 y s a t) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8344245) (@lem8344244 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344247 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344248 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2404 A B D P Q y a t lt2 s p _112897 f arg _112896 pat e q) = (term2405 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344246 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344247 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344249 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2406 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2407 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun t : Q => @lem8344248 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344250 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344251 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2395 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2408 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344250 Q) (@lem8344249 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344252 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2394 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2395 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)) = ((term2390 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2408 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344243 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344251 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344253 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2390 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2408 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344252 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344233 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344255 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8344256 {A B : Type'} (P : Prop) (Q : type572 A B) : (term2409 A B P Q) = (term2410 A B P Q).
Proof. exact (@lem8344255 (A -> B) P Q). Qed.
Lemma lem8344257 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2411 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2412 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344256 A B (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a) (term2341 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344258 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2413 A B D P Q lt2 s p _112897 f arg _112896 pat e q g) = (term2340 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2413 A B D P Q lt2 s p _112897 f arg _112896 pat e q g)). Qed.
Lemma lem8344259 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2414 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2341 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344258 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344260 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344261 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2415 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2342 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344260 A B) (@lem8344259 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344262 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344263 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2411 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2405 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344262 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344261 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344264 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344265 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2416 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2417 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344264) (@lem8344263 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344266 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2413 A B D P Q lt2 s p _112897 f arg _112896 pat e q g) = (term2340 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (eq_refl (term2413 A B D P Q lt2 s p _112897 f arg _112896 pat e q g)). Qed.
Lemma lem8344267 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344268 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2418 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q g) = (term2419 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344267 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344266 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344269 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2420 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2421 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344268 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344270 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344271 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2412 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2422 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344270 A B) (@lem8344269 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344272 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2411 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2412 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)) = ((term2405 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2422 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344265 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344271 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344273 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2405 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2422 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344272 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344257 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344275 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8344276 {P : Type'} (P' : Prop) (Q : P -> Prop) : (term673 P P' Q) = (term674 P P' Q).
Proof. exact (@lem8344275 P P' Q). Qed.
Lemma lem8344277 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2423 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2424 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (@lem8344276 P (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a) (term2339 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344278 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2425 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a) = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a).
Proof. exact (eq_refl (term2425 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344279 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2426 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2339 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344278 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a)). Qed.
Lemma lem8344280 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344281 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2427 A B D P Q lt2 s g p _112897 f arg _112896 pat e q) = (term2340 A B D P Q lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344280 P) (@lem8344279 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344282 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344283 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2423 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2419 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344282 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344281 A B D P Q lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344285 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2428 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2429 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344284) (@lem8344283 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344286 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2425 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a') = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (eq_refl (term2425 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344287 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344288 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2430 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2431 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344287 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344286 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344289 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2432 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2433 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a' : P => @lem8344288 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344290 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344291 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2424 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2434 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344290 P) (@lem8344289 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344292 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : ((term2423 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2424 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)) = ((term2419 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2434 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)).
Proof. exact (MK_COMB (@lem8344285 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) (@lem8344291 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344293 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2419 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2434 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (EQ_MP (@lem8344292 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) (@lem8344277 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344295 {A : Type'} (P : Prop) (Q : A -> Prop) : (term673 A P Q) = (term674 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8344296 {Q : Type'} (P : Prop) (Q' : Q -> Prop) : (term673 Q P Q') = (term674 Q P Q').
Proof. exact (@lem8344295 Q P Q'). Qed.
Lemma lem8344297 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2435 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2436 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (@lem8344296 Q (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a) (term2337 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344298 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2437 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a' t) = (term2335 A B D P Q lt2 s g t p _112897 f arg _112896 pat e q a').
Proof. exact (eq_refl (term2437 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a' t)). Qed.
Lemma lem8344299 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2438 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a') = (term2337 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (fun_ext (fun t : Q => @lem8344298 A B D P Q lt2 s g t p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344300 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344301 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2439 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a') = (term2338 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344300 Q) (@lem8344299 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344302 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344303 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2435 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2431 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344302 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344301 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344304 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8344305 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2440 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2441 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344304) (@lem8344303 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344306 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2437 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a' t') = (term2335 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a').
Proof. exact (eq_refl (term2437 A B D P Q lt2 s g p _112897 f arg _112896 pat e q a' t')). Qed.
Lemma lem8344307 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (eq_refl (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8344308 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2442 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a' t') = (term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344307 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8344306 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344309 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2444 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2445 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (fun_ext (fun t' : Q => @lem8344308 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344310 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344311 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2436 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344310 Q) (@lem8344309 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344312 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : ((term2435 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2436 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')) = ((term2431 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')).
Proof. exact (MK_COMB (@lem8344305 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') (@lem8344311 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344313 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2431 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') = (term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a').
Proof. exact (EQ_MP (@lem8344312 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') (@lem8344297 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344314 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2433 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2447 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a' : P => @lem8344313 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344315 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344316 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2434 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2448 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344315 P) (@lem8344314 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344317 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2419 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) = (term2448 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344293 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) (@lem8344316 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344318 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2421 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2449 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun g : A -> B => @lem8344317 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344319 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344320 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2422 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2450 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344319 A B) (@lem8344318 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344321 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2405 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) = (term2450 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344273 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344320 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344322 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2407 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2451 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun t : Q => @lem8344321 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344323 {Q : Type'} : (@ex Q) = (@ex Q).
Proof. exact (eq_refl (@ex Q)). Qed.
Lemma lem8344324 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2408 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2452 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344323 Q) (@lem8344322 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344325 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2390 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) = (term2452 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344253 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) (@lem8344324 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344326 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2392 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2453 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun y : A => @lem8344325 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344327 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8344328 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2393 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2454 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344327 A) (@lem8344326 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344329 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2375 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) = (term2454 A B D P Q a lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344227 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) (@lem8344328 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344330 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2377 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2455 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344329 A B D P Q a lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344331 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8344332 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2378 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2456 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344331 P) (@lem8344330 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344333 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2360 A B D P Q lt2 s p _112897 f arg _112896 pat e q) = (term2456 A B D P Q lt2 s p _112897 f arg _112896 pat e q).
Proof. exact (TRANS (@lem8344201 A B D P Q lt2 s p _112897 f arg _112896 pat e q) (@lem8344332 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344334 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2362 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2457 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8344333 A B D P Q lt2 s p _112897 f arg _112896 pat e q)). Qed.
Lemma lem8344335 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8344336 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2363 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2458 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (MK_COMB (@lem8344335 A B) (@lem8344334 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344337 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2345 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2458 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8344175 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344336 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344339 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2139 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2458 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8344148 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344337 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344340 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) = (term2458 A B D P Q lt2 s p _112897 arg _112896 pat e q).
Proof. exact (TRANS (@lem8343249 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8344339 A B D P Q lt2 s p _112897 arg _112896 pat e q)). Qed.
Lemma lem8344341 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) : term2458 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (EQ_MP (@lem8344340 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8341727 A B D P Q lt2 s p _112897 arg _112896 pat e q h1)). Qed.
Lemma lem8344342 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term2456 A B D P Q lt2 s p _112897 f arg _112896 pat e q) : term2456 A B D P Q lt2 s p _112897 f arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8344343 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term2454 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) : term2454 A B D P Q a lt2 s p _112897 f arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8344344 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term2452 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) : term2452 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8344345 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term2450 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) : term2450 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8344346 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term2448 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) : term2448 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q.
Proof. exact (h1). Qed.
Lemma lem8344347 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') : term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8344348 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8344349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2035 A B P lt2 s z p.
Proof. exact (h1). Qed.
Lemma lem8344350 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term1866 A B D P Q t'' _112897.
Proof. exact (h1). Qed.
Lemma lem8344363 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344364 {D P Q : Type'} (f : type885 D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344363 (Q -> D) (type783 D P Q) f x). Qed.
Lemma lem8344365 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (_112896 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat).
Proof. exact (@lem8344364 D P Q _112896 pat). Qed.
Lemma lem8344366 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8344367 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e).
Proof. exact (MK_COMB (@lem8344365 D P Q _112896 pat) (@lem8344366 D P e)). Qed.
Lemma lem8344369 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344370 {D P Q : Type'} (f : type783 D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344369 (P -> D) (type467 P Q) f x). Qed.
Lemma lem8344371 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (@lem8344370 D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat) e). Qed.
Lemma lem8344372 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (TRANS (@lem8344367 D P Q _112896 pat e) (@lem8344371 D P Q _112896 pat e)). Qed.
Lemma lem8344373 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8344374 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2460 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8344372 D P Q _112896 pat e) (@lem8344373 P Q q)). Qed.
Lemma lem8344376 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344377 {P Q : Type'} (f : type467 P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344376 (type1413 P Q) (P -> Q) f x). Qed.
Lemma lem8344378 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2460 D P Q _112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (@lem8344377 P Q (term2459 D P Q _112896 pat e) q). Qed.
Lemma lem8344379 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (TRANS (@lem8344374 D P Q _112896 pat e q) (@lem8344378 D P Q _112896 pat e q)). Qed.
Lemma lem8344380 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8344381 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2462 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344379 D P Q _112896 pat e q) (@lem8344380 P a)). Qed.
Lemma lem8344383 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344384 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8344383 P Q f x). Qed.
Lemma lem8344385 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2462 D P Q _112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (@lem8344384 P Q (term2461 D P Q _112896 pat e q) a). Qed.
Lemma lem8344387 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8344381 D P Q _112896 pat e q a) (@lem8344385 D P Q _112896 pat e q a)). Qed.
Lemma lem8344388 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (q a).
Proof. exact (eq_refl (q a)). Qed.
Lemma lem8344389 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1325 D P Q _112896 pat e q a) = (term2464 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344388 P Q q a) (@lem8344387 D P Q _112896 pat e q a)). Qed.
Lemma lem8344391 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344392 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344391 P (Q -> Prop) f x). Qed.
Lemma lem8344393 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8344392 P Q q a). Qed.
Lemma lem8344394 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2463 D P Q _112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2463 D P Q _112896 pat e q a)). Qed.
Lemma lem8344395 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2464 D P Q _112896 pat e q a) = (term2465 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344393 P Q q a) (@lem8344394 D P Q _112896 pat e q a)). Qed.
Lemma lem8344397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344398 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344397 Q Prop f x). Qed.
Lemma lem8344399 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2465 D P Q _112896 pat e q a) = (term2466 D P Q _112896 pat e q a).
Proof. exact (@lem8344398 Q (@I (P -> Q -> Prop) q a) (term2463 D P Q _112896 pat e q a)). Qed.
Lemma lem8344400 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2464 D P Q _112896 pat e q a) = (term2466 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8344395 D P Q _112896 pat e q a) (@lem8344399 D P Q _112896 pat e q a)). Qed.
Lemma lem8344401 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1325 D P Q _112896 pat e q a) = (term2466 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8344389 D P Q _112896 pat e q a) (@lem8344400 D P Q _112896 pat e q a)). Qed.
Lemma lem8344402 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344403 {D Q : Type'} (pat : Q -> D) : pat = pat.
Proof. exact (eq_refl pat). Qed.
Lemma lem8344414 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344415 {D P Q : Type'} (f : type885 D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344414 (Q -> D) (type783 D P Q) f x). Qed.
Lemma lem8344416 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (_112896 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat).
Proof. exact (@lem8344415 D P Q _112896 pat). Qed.
Lemma lem8344417 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8344418 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e).
Proof. exact (MK_COMB (@lem8344416 D P Q _112896 pat) (@lem8344417 D P e)). Qed.
Lemma lem8344420 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344421 {D P Q : Type'} (f : type783 D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344420 (P -> D) (type467 P Q) f x). Qed.
Lemma lem8344422 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (@lem8344421 D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat) e). Qed.
Lemma lem8344423 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (TRANS (@lem8344418 D P Q _112896 pat e) (@lem8344422 D P Q _112896 pat e)). Qed.
Lemma lem8344424 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8344425 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2460 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8344423 D P Q _112896 pat e) (@lem8344424 P Q q)). Qed.
Lemma lem8344427 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344428 {P Q : Type'} (f : type467 P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344427 (type1413 P Q) (P -> Q) f x). Qed.
Lemma lem8344429 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2460 D P Q _112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (@lem8344428 P Q (term2459 D P Q _112896 pat e) q). Qed.
Lemma lem8344430 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (TRANS (@lem8344425 D P Q _112896 pat e q) (@lem8344429 D P Q _112896 pat e q)). Qed.
Lemma lem8344431 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8344432 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2462 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344430 D P Q _112896 pat e q) (@lem8344431 P a)). Qed.
Lemma lem8344434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344435 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8344434 P Q f x). Qed.
Lemma lem8344436 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2462 D P Q _112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (@lem8344435 P Q (term2461 D P Q _112896 pat e q) a). Qed.
Lemma lem8344438 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8344432 D P Q _112896 pat e q a) (@lem8344436 D P Q _112896 pat e q a)). Qed.
Lemma lem8344439 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1319 D P Q _112896 pat e q a) = (term2467 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344403 D Q pat) (@lem8344438 D P Q _112896 pat e q a)). Qed.
Lemma lem8344441 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344442 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344441 Q D f x). Qed.
Lemma lem8344443 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2467 D P Q _112896 pat e q a) = (term2468 D P Q _112896 pat e q a).
Proof. exact (@lem8344442 D Q pat (term2463 D P Q _112896 pat e q a)). Qed.
Lemma lem8344444 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1319 D P Q _112896 pat e q a) = (term2468 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8344439 D P Q _112896 pat e q a) (@lem8344443 D P Q _112896 pat e q a)). Qed.
Lemma lem8344449 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344450 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344449 P D f x). Qed.
Lemma lem8344452 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8344450 D P e a). Qed.
Lemma lem8344453 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1321 D P Q _112896 pat e q a) = (term2469 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344402 D) (@lem8344444 D P Q _112896 pat e q a)). Qed.
Lemma lem8344454 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) : ((term1319 D P Q _112896 pat e q a) = (e a)) = ((term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8344453 D P Q _112896 pat e q a) (@lem8344452 D P e a)). Qed.
Lemma lem8344455 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8344456 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) : (term1323 D P Q _112896 pat q e a) = (term2470 D P Q _112896 pat q e a).
Proof. exact (MK_COMB (@lem8344455) (@lem8344454 D P Q _112896 pat q e a)). Qed.
Lemma lem8344457 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1326 D P Q _112896 pat e q a) = (term2471 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344456 D P Q _112896 pat q e a) (@lem8344401 D P Q _112896 pat e q a)). Qed.
Lemma lem8344458 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344465 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344466 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344465 P (Q -> Prop) f x). Qed.
Lemma lem8344467 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8344466 P Q q a). Qed.
Lemma lem8344468 {Q : Type'} (x : Q) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8344469 {P Q : Type'} (q : type1413 P Q) (a : P) (x : Q) : (q a x) = (@I (P -> Q -> Prop) q a x).
Proof. exact (MK_COMB (@lem8344467 P Q q a) (@lem8344468 Q x)). Qed.
Lemma lem8344471 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344472 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344471 Q Prop f x). Qed.
Lemma lem8344473 {P Q : Type'} (q : type1413 P Q) (a : P) (x : Q) : (@I (P -> Q -> Prop) q a x) = (term2472 P Q q a x).
Proof. exact (@lem8344472 Q (@I (P -> Q -> Prop) q a) x). Qed.
Lemma lem8344475 {P Q : Type'} (q : type1413 P Q) (a : P) (x : Q) : (q a x) = (term2472 P Q q a x).
Proof. exact (TRANS (@lem8344469 P Q q a x) (@lem8344473 P Q q a x)). Qed.
Lemma lem8344476 {P Q : Type'} (q : type1413 P Q) (a : P) (x : Q) : (term955 P Q q a x) = (term2473 P Q q a x).
Proof. exact (MK_COMB (@lem8344458) (@lem8344475 P Q q a x)). Qed.
Lemma lem8344477 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344478 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344483 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344484 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344483 Q D f x). Qed.
Lemma lem8344486 {D Q : Type'} (pat : Q -> D) (x : Q) : (pat x) = (@I (Q -> D) pat x).
Proof. exact (@lem8344484 D Q pat x). Qed.
Lemma lem8344491 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344492 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344491 P D f x). Qed.
Lemma lem8344494 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8344492 D P e a). Qed.
Lemma lem8344495 {D Q : Type'} (pat : Q -> D) (x : Q) : (term2474 D Q pat x) = (term2475 D Q pat x).
Proof. exact (MK_COMB (@lem8344478 D) (@lem8344486 D Q pat x)). Qed.
Lemma lem8344496 {D P Q : Type'} (pat : Q -> D) (x : Q) (e : P -> D) (a : P) : ((pat x) = (e a)) = ((@I (Q -> D) pat x) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8344495 D Q pat x) (@lem8344494 D P e a)). Qed.
Lemma lem8344497 {D P Q : Type'} (pat : Q -> D) (x : Q) (e : P -> D) (a : P) : (term952 D P Q pat x e a) = (term2476 D P Q pat x e a).
Proof. exact (MK_COMB (@lem8344477) (@lem8344496 D P Q pat x e a)). Qed.
Lemma lem8344498 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344499 {D P Q : Type'} (pat : Q -> D) (x : Q) (e : P -> D) (a : P) : (term413 D P Q pat x e a) = (term2477 D P Q pat x e a).
Proof. exact (MK_COMB (@lem8344498) (@lem8344497 D P Q pat x e a)). Qed.
Lemma lem8344500 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term408 D P Q pat e q a x) = (term2478 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8344499 D P Q pat x e a) (@lem8344476 P Q q a x)). Qed.
Lemma lem8344501 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term505 D P Q pat e q a) = (term2479 D P Q pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8344500 D P Q pat e q a x)). Qed.
Lemma lem8344502 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8344503 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term506 D P Q pat e q a) = (term2480 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8344502 Q) (@lem8344501 D P Q pat e q a)). Qed.
Lemma lem8344504 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344505 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1894 D P Q pat e q a) = (term2481 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8344504) (@lem8344503 D P Q pat e q a)). Qed.
Lemma lem8344506 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1895 D P Q _112896 pat e q a) = (term2482 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8344505 D P Q pat e q a) (@lem8344457 D P Q _112896 pat e q a)). Qed.
Lemma lem8344507 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1896 D P Q _112896 pat e q) = (term2483 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8344506 D P Q _112896 pat e q a)). Qed.
Lemma lem8344508 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8344509 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term1897 D P Q _112896 pat e q) = (term2484 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8344508 P) (@lem8344507 D P Q _112896 pat e q)). Qed.
Lemma lem8344510 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1898 D P Q _112896 pat e) = (term2485 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8344509 D P Q _112896 pat e q)). Qed.
Lemma lem8344511 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8344512 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term1899 D P Q _112896 pat e) = (term2486 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8344511 P Q) (@lem8344510 D P Q _112896 pat e)). Qed.
Lemma lem8344513 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1900 D P Q _112896 pat) = (term2487 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8344512 D P Q _112896 pat e)). Qed.
Lemma lem8344514 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8344515 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term1901 D P Q _112896 pat) = (term2488 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8344514 D P) (@lem8344513 D P Q _112896 pat)). Qed.
Lemma lem8344516 {D P Q : Type'} (_112896 : type885 D P Q) : (term1902 D P Q _112896) = (term2489 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8344515 D P Q _112896 pat)). Qed.
Lemma lem8344517 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8344518 {D P Q : Type'} (_112896 : type885 D P Q) : (term1903 D P Q _112896) = (term2490 D P Q _112896).
Proof. exact (MK_COMB (@lem8344517 D Q) (@lem8344516 D P Q _112896)). Qed.
Lemma lem8344519 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2490 D P Q _112896.
Proof. exact (EQ_MP (@lem8344518 D P Q _112896) (@lem8342485 D P Q _112896 h1)). Qed.
Lemma lem8344520 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8344527 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344528 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8344527 P (Q -> A) f x). Qed.
Lemma lem8344529 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8344528 A P Q arg a). Qed.
Lemma lem8344530 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8344531 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (@I (P -> Q -> A) arg a t).
Proof. exact (MK_COMB (@lem8344529 A P Q arg a) (@lem8344530 Q t)). Qed.
Lemma lem8344533 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344534 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8344533 Q A f x). Qed.
Lemma lem8344535 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (@I (P -> Q -> A) arg a t) = (term2491 A P Q arg a t).
Proof. exact (@lem8344534 A Q (@I (P -> Q -> A) arg a) t). Qed.
Lemma lem8344537 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (term2491 A P Q arg a t).
Proof. exact (TRANS (@lem8344531 A P Q arg a t) (@lem8344535 A P Q arg a t)). Qed.
Lemma lem8344544 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344545 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8344544 P (Q -> A) f x). Qed.
Lemma lem8344546 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8344545 A P Q arg a). Qed.
Lemma lem8344547 {Q : Type'} (u : Q) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem8344548 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (u : Q) : (arg a u) = (@I (P -> Q -> A) arg a u).
Proof. exact (MK_COMB (@lem8344546 A P Q arg a) (@lem8344547 Q u)). Qed.
Lemma lem8344550 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344551 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8344550 Q A f x). Qed.
Lemma lem8344552 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (u : Q) : (@I (P -> Q -> A) arg a u) = (term2491 A P Q arg a u).
Proof. exact (@lem8344551 A Q (@I (P -> Q -> A) arg a) u). Qed.
Lemma lem8344554 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (u : Q) : (arg a u) = (term2491 A P Q arg a u).
Proof. exact (TRANS (@lem8344548 A P Q arg a u) (@lem8344552 A P Q arg a u)). Qed.
Lemma lem8344555 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (term2492 A P Q arg a t) = (term2493 A P Q arg a t).
Proof. exact (MK_COMB (@lem8344520 A) (@lem8344537 A P Q arg a t)). Qed.
Lemma lem8344556 {A P Q : Type'} (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : ((arg a t) = (arg a u)) = ((term2491 A P Q arg a t) = (term2491 A P Q arg a u)).
Proof. exact (MK_COMB (@lem8344555 A P Q arg a t) (@lem8344554 A P Q arg a u)). Qed.
Lemma lem8344557 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344564 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344565 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344564 P (Q -> Prop) f x). Qed.
Lemma lem8344566 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8344565 P Q q a). Qed.
Lemma lem8344567 {Q : Type'} (u : Q) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem8344568 {P Q : Type'} (q : type1413 P Q) (a : P) (u : Q) : (q a u) = (@I (P -> Q -> Prop) q a u).
Proof. exact (MK_COMB (@lem8344566 P Q q a) (@lem8344567 Q u)). Qed.
Lemma lem8344570 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344571 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344570 Q Prop f x). Qed.
Lemma lem8344572 {P Q : Type'} (q : type1413 P Q) (a : P) (u : Q) : (@I (P -> Q -> Prop) q a u) = (term2472 P Q q a u).
Proof. exact (@lem8344571 Q (@I (P -> Q -> Prop) q a) u). Qed.
Lemma lem8344574 {P Q : Type'} (q : type1413 P Q) (a : P) (u : Q) : (q a u) = (term2472 P Q q a u).
Proof. exact (TRANS (@lem8344568 P Q q a u) (@lem8344572 P Q q a u)). Qed.
Lemma lem8344575 {P Q : Type'} (q : type1413 P Q) (a : P) (u : Q) : (term955 P Q q a u) = (term2473 P Q q a u).
Proof. exact (MK_COMB (@lem8344557) (@lem8344574 P Q q a u)). Qed.
Lemma lem8344576 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344577 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344582 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344583 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344582 Q D f x). Qed.
Lemma lem8344585 {D Q : Type'} (pat : Q -> D) (u : Q) : (pat u) = (@I (Q -> D) pat u).
Proof. exact (@lem8344583 D Q pat u). Qed.
Lemma lem8344590 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344591 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344590 P D f x). Qed.
Lemma lem8344593 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8344591 D P e a). Qed.
Lemma lem8344594 {D Q : Type'} (pat : Q -> D) (u : Q) : (term2474 D Q pat u) = (term2475 D Q pat u).
Proof. exact (MK_COMB (@lem8344577 D) (@lem8344585 D Q pat u)). Qed.
Lemma lem8344595 {D P Q : Type'} (pat : Q -> D) (u : Q) (e : P -> D) (a : P) : ((pat u) = (e a)) = ((@I (Q -> D) pat u) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8344594 D Q pat u) (@lem8344593 D P e a)). Qed.
Lemma lem8344596 {D P Q : Type'} (pat : Q -> D) (u : Q) (e : P -> D) (a : P) : (term952 D P Q pat u e a) = (term2476 D P Q pat u e a).
Proof. exact (MK_COMB (@lem8344576) (@lem8344595 D P Q pat u e a)). Qed.
Lemma lem8344597 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344598 {D P Q : Type'} (pat : Q -> D) (u : Q) (e : P -> D) (a : P) : (term413 D P Q pat u e a) = (term2477 D P Q pat u e a).
Proof. exact (MK_COMB (@lem8344597) (@lem8344596 D P Q pat u e a)). Qed.
Lemma lem8344599 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term408 D P Q pat e q a u) = (term2478 D P Q pat e q a u).
Proof. exact (MK_COMB (@lem8344598 D P Q pat u e a) (@lem8344575 P Q q a u)). Qed.
Lemma lem8344600 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344607 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344608 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344607 P (Q -> Prop) f x). Qed.
Lemma lem8344609 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8344608 P Q q a). Qed.
Lemma lem8344610 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8344611 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (@I (P -> Q -> Prop) q a t).
Proof. exact (MK_COMB (@lem8344609 P Q q a) (@lem8344610 Q t)). Qed.
Lemma lem8344613 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344614 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344613 Q Prop f x). Qed.
Lemma lem8344615 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (@I (P -> Q -> Prop) q a t) = (term2472 P Q q a t).
Proof. exact (@lem8344614 Q (@I (P -> Q -> Prop) q a) t). Qed.
Lemma lem8344617 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (term2472 P Q q a t).
Proof. exact (TRANS (@lem8344611 P Q q a t) (@lem8344615 P Q q a t)). Qed.
Lemma lem8344618 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term955 P Q q a t) = (term2473 P Q q a t).
Proof. exact (MK_COMB (@lem8344600) (@lem8344617 P Q q a t)). Qed.
Lemma lem8344619 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344620 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term409 P Q q a t) = (term2494 P Q q a t).
Proof. exact (MK_COMB (@lem8344619) (@lem8344618 P Q q a t)). Qed.
Lemma lem8344621 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term411 D P Q t pat e q a u) = (term2495 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8344620 P Q q a t) (@lem8344599 D P Q pat e q a u)). Qed.
Lemma lem8344622 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344623 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344628 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344629 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344628 Q D f x). Qed.
Lemma lem8344631 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8344629 D Q pat t). Qed.
Lemma lem8344636 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344637 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344636 P D f x). Qed.
Lemma lem8344639 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8344637 D P e a). Qed.
Lemma lem8344640 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8344623 D) (@lem8344631 D Q pat t)). Qed.
Lemma lem8344641 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : ((pat t) = (e a)) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8344640 D Q pat t) (@lem8344639 D P e a)). Qed.
Lemma lem8344642 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term952 D P Q pat t e a) = (term2476 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8344622) (@lem8344641 D P Q pat t e a)). Qed.
Lemma lem8344643 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344644 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term413 D P Q pat t e a) = (term2477 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8344643) (@lem8344642 D P Q pat t e a)). Qed.
Lemma lem8344645 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term415 D P Q t pat e q a u) = (term2496 D P Q t pat e q a u).
Proof. exact (MK_COMB (@lem8344644 D P Q pat t e a) (@lem8344621 D P Q t pat e q a u)). Qed.
Lemma lem8344646 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344653 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344654 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8344653 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8344655 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8344654 A B P p f). Qed.
Lemma lem8344656 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8344657 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8344655 A B P p f) (@lem8344656 P a)). Qed.
Lemma lem8344659 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344660 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8344659 P Prop f x). Qed.
Lemma lem8344661 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8344660 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8344663 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8344657 A B P p f a) (@lem8344661 A B P p f a)). Qed.
Lemma lem8344664 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term894 A B P p f a) = (term895 A B P p f a).
Proof. exact (MK_COMB (@lem8344646) (@lem8344663 A B P p f a)). Qed.
Lemma lem8344665 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344666 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term896 A B P p f a).
Proof. exact (MK_COMB (@lem8344665) (@lem8344664 A B P p f a)). Qed.
Lemma lem8344667 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term420 A B D P Q p f t pat e q a u) = (term2497 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8344666 A B P p f a) (@lem8344645 D P Q t pat e q a u)). Qed.
Lemma lem8344668 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344669 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (u : Q) : (term424 A B D P Q p f t pat e q a u) = (term2498 A B D P Q p f t pat e q a u).
Proof. exact (MK_COMB (@lem8344668) (@lem8344667 A B D P Q p f t pat e q a u)). Qed.
Lemma lem8344670 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term426 A B D P Q p f pat e q t arg a u) = (term2499 A B D P Q p f pat e q t arg a u).
Proof. exact (MK_COMB (@lem8344669 A B D P Q p f t pat e q a u) (@lem8344556 A P Q t arg a u)). Qed.
Lemma lem8344671 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term428 A B D P Q p f pat e q t arg a) = (term2500 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8344670 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8344672 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8344673 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term429 A B D P Q p f pat e q t arg a) = (term2501 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8344672 Q) (@lem8344671 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8344674 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term430 A B D P Q p f pat e q arg a) = (term2502 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8344673 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8344675 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8344676 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term431 A B D P Q p f pat e q arg a) = (term2503 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8344675 Q) (@lem8344674 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8344677 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term432 A B D P Q p f pat e q arg) = (term2504 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8344676 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8344678 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8344679 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term433 A B D P Q p f pat e q arg) = (term2505 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8344678 P) (@lem8344677 A B D P Q p f pat e q arg)). Qed.
Lemma lem8344680 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term434 A B D P Q p pat e q arg) = (term2506 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8344679 A B D P Q p f pat e q arg)). Qed.
Lemma lem8344681 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8344682 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term435 A B D P Q p pat e q arg) = (term2507 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8344681 A B) (@lem8344680 A B D P Q p pat e q arg)). Qed.
Lemma lem8344683 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2507 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8344682 A B D P Q p pat e q arg) (@lem8342593 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8344690 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344691 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8344690 P A f x). Qed.
Lemma lem8344693 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8344691 A P s a). Qed.
Lemma lem8344694 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8344695 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term2508 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8344694 A lt2 y) (@lem8344693 A P s a)). Qed.
Lemma lem8344697 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344698 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8344697 A (A -> Prop) f x). Qed.
Lemma lem8344699 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8344698 A lt2 y). Qed.
Lemma lem8344700 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8344701 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2508 A P lt2 y s a) = (term2509 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8344699 A lt2 y) (@lem8344700 A P s a)). Qed.
Lemma lem8344703 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344704 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8344703 A Prop f x). Qed.
Lemma lem8344705 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2509 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (@lem8344704 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8344706 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2508 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (TRANS (@lem8344701 A P lt2 y s a) (@lem8344705 A P lt2 y s a)). Qed.
Lemma lem8344707 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (TRANS (@lem8344695 A P lt2 y s a) (@lem8344706 A P lt2 y s a)). Qed.
Lemma lem8344708 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344717 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344718 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8344717 P (Q -> A) f x). Qed.
Lemma lem8344719 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8344718 A P Q arg a). Qed.
Lemma lem8344720 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8344721 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (@I (P -> Q -> A) arg a t).
Proof. exact (MK_COMB (@lem8344719 A P Q arg a) (@lem8344720 Q t)). Qed.
Lemma lem8344723 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344724 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8344723 Q A f x). Qed.
Lemma lem8344725 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (@I (P -> Q -> A) arg a t) = (term2491 A P Q arg a t).
Proof. exact (@lem8344724 A Q (@I (P -> Q -> A) arg a) t). Qed.
Lemma lem8344727 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (term2491 A P Q arg a t).
Proof. exact (TRANS (@lem8344721 A P Q arg a t) (@lem8344725 A P Q arg a t)). Qed.
Lemma lem8344728 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8344729 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term1911 A P Q lt2 y arg a t) = (term2511 A P Q lt2 y arg a t).
Proof. exact (MK_COMB (@lem8344728 A lt2 y) (@lem8344727 A P Q arg a t)). Qed.
Lemma lem8344731 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344732 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8344731 A (A -> Prop) f x). Qed.
Lemma lem8344733 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8344732 A lt2 y). Qed.
Lemma lem8344734 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (term2491 A P Q arg a t) = (term2491 A P Q arg a t).
Proof. exact (eq_refl (term2491 A P Q arg a t)). Qed.
Lemma lem8344735 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term2511 A P Q lt2 y arg a t) = (term2512 A P Q lt2 y arg a t).
Proof. exact (MK_COMB (@lem8344733 A lt2 y) (@lem8344734 A P Q arg a t)). Qed.
Lemma lem8344737 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344738 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8344737 A Prop f x). Qed.
Lemma lem8344739 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term2512 A P Q lt2 y arg a t) = (term2513 A P Q lt2 y arg a t).
Proof. exact (@lem8344738 A (@I (A -> A -> Prop) lt2 y) (term2491 A P Q arg a t)). Qed.
Lemma lem8344740 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term2511 A P Q lt2 y arg a t) = (term2513 A P Q lt2 y arg a t).
Proof. exact (TRANS (@lem8344735 A P Q lt2 y arg a t) (@lem8344739 A P Q lt2 y arg a t)). Qed.
Lemma lem8344741 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term1911 A P Q lt2 y arg a t) = (term2513 A P Q lt2 y arg a t).
Proof. exact (TRANS (@lem8344729 A P Q lt2 y arg a t) (@lem8344740 A P Q lt2 y arg a t)). Qed.
Lemma lem8344742 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term2514 A P Q lt2 y arg a t) = (term2515 A P Q lt2 y arg a t).
Proof. exact (MK_COMB (@lem8344708) (@lem8344741 A P Q lt2 y arg a t)). Qed.
Lemma lem8344743 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344744 {A P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (a : P) (t : Q) : (term2516 A P Q lt2 y arg a t) = (term2517 A P Q lt2 y arg a t).
Proof. exact (MK_COMB (@lem8344743) (@lem8344742 A P Q lt2 y arg a t)). Qed.
Lemma lem8344745 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1910 A P Q arg t lt2 y s a) = (term2518 A P Q arg t lt2 y s a).
Proof. exact (MK_COMB (@lem8344744 A P Q lt2 y arg a t) (@lem8344707 A P lt2 y s a)). Qed.
Lemma lem8344746 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1912 A P Q arg t lt2 s a) = (term2519 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8344745 A P Q arg t lt2 y s a)). Qed.
Lemma lem8344747 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8344748 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1913 A P Q arg t lt2 s a) = (term2520 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8344747 A) (@lem8344746 A P Q arg t lt2 s a)). Qed.
Lemma lem8344749 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344750 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344755 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344756 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344755 Q D f x). Qed.
Lemma lem8344758 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8344756 D Q pat t). Qed.
Lemma lem8344763 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344764 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344763 P D f x). Qed.
Lemma lem8344766 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8344764 D P e a). Qed.
Lemma lem8344767 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8344750 D) (@lem8344758 D Q pat t)). Qed.
Lemma lem8344768 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : ((pat t) = (e a)) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8344767 D Q pat t) (@lem8344766 D P e a)). Qed.
Lemma lem8344769 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term952 D P Q pat t e a) = (term2476 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8344749) (@lem8344768 D P Q pat t e a)). Qed.
Lemma lem8344770 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344777 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344778 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344777 P (Q -> Prop) f x). Qed.
Lemma lem8344779 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8344778 P Q q a). Qed.
Lemma lem8344780 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8344781 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (@I (P -> Q -> Prop) q a t).
Proof. exact (MK_COMB (@lem8344779 P Q q a) (@lem8344780 Q t)). Qed.
Lemma lem8344783 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344784 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344783 Q Prop f x). Qed.
Lemma lem8344785 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (@I (P -> Q -> Prop) q a t) = (term2472 P Q q a t).
Proof. exact (@lem8344784 Q (@I (P -> Q -> Prop) q a) t). Qed.
Lemma lem8344787 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (term2472 P Q q a t).
Proof. exact (TRANS (@lem8344781 P Q q a t) (@lem8344785 P Q q a t)). Qed.
Lemma lem8344788 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term955 P Q q a t) = (term2473 P Q q a t).
Proof. exact (MK_COMB (@lem8344770) (@lem8344787 P Q q a t)). Qed.
Lemma lem8344789 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344790 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term409 P Q q a t) = (term2494 P Q q a t).
Proof. exact (MK_COMB (@lem8344789) (@lem8344788 P Q q a t)). Qed.
Lemma lem8344791 {D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1905 D P Q q pat t e a) = (term2521 D P Q q pat t e a).
Proof. exact (MK_COMB (@lem8344790 P Q q a t) (@lem8344769 D P Q pat t e a)). Qed.
Lemma lem8344792 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344799 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344800 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8344799 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8344801 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8344800 A B P p f). Qed.
Lemma lem8344802 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8344803 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8344801 A B P p f) (@lem8344802 P a)). Qed.
Lemma lem8344805 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344806 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8344805 P Prop f x). Qed.
Lemma lem8344807 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8344806 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8344809 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8344803 A B P p f a) (@lem8344807 A B P p f a)). Qed.
Lemma lem8344810 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term894 A B P p f a) = (term895 A B P p f a).
Proof. exact (MK_COMB (@lem8344792) (@lem8344809 A B P p f a)). Qed.
Lemma lem8344811 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344812 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term896 A B P p f a).
Proof. exact (MK_COMB (@lem8344811) (@lem8344810 A B P p f a)). Qed.
Lemma lem8344813 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1907 A B D P Q p f q pat t e a) = (term2522 A B D P Q p f q pat t e a).
Proof. exact (MK_COMB (@lem8344812 A B P p f a) (@lem8344791 D P Q q pat t e a)). Qed.
Lemma lem8344814 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8344815 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term1915 A B D P Q p f q pat t e a) = (term2523 A B D P Q p f q pat t e a).
Proof. exact (MK_COMB (@lem8344814) (@lem8344813 A B D P Q p f q pat t e a)). Qed.
Lemma lem8344816 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1917 A B D P Q p f q pat e arg t lt2 s a) = (term2524 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8344815 A B D P Q p f q pat t e a) (@lem8344748 A P Q arg t lt2 s a)). Qed.
Lemma lem8344817 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1919 A B D P Q p f q pat e arg lt2 s a) = (term2525 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8344816 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8344818 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8344819 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1920 A B D P Q p f q pat e arg lt2 s a) = (term2526 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8344818 Q) (@lem8344817 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8344820 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term1921 A B D P Q p f q pat e arg lt2 s) = (term2527 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8344819 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8344821 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8344822 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term1922 A B D P Q p f q pat e arg lt2 s) = (term2528 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8344821 P) (@lem8344820 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8344823 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term1923 A B D P Q p q pat e arg lt2 s) = (term2529 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8344822 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8344824 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8344825 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term1924 A B D P Q p q pat e arg lt2 s) = (term2530 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8344824 A B) (@lem8344823 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8344826 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2530 A B D P Q p q pat e arg lt2 s.
Proof. exact (EQ_MP (@lem8344825 A B D P Q p q pat e arg lt2 s) (@lem8342739 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8344827 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8344828 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8344843 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344844 {A B D P Q : Type'} (f : type906 A B D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8344843 (Q -> D) (type899 A B D P Q) f x). Qed.
Lemma lem8344845 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (_112897 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat).
Proof. exact (@lem8344844 A B D P Q _112897 pat). Qed.
Lemma lem8344846 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8344847 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (_112897 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat e).
Proof. exact (MK_COMB (@lem8344845 A B D P Q _112897 pat) (@lem8344846 D P e)). Qed.
Lemma lem8344849 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344850 {A B D P Q : Type'} (f : type899 A B D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8344849 (P -> D) (type881 A B P Q) f x). Qed.
Lemma lem8344851 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat e) = (term2531 A B D P Q _112897 pat e).
Proof. exact (@lem8344850 A B D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat) e). Qed.
Lemma lem8344852 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (_112897 pat e) = (term2531 A B D P Q _112897 pat e).
Proof. exact (TRANS (@lem8344847 A B D P Q _112897 pat e) (@lem8344851 A B D P Q _112897 pat e)). Qed.
Lemma lem8344853 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8344854 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112897 pat e q) = (term2532 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8344852 A B D P Q _112897 pat e) (@lem8344853 P Q q)). Qed.
Lemma lem8344856 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344857 {A B P Q : Type'} (f : type881 A B P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8344856 (type1413 P Q) (type534 A B P Q) f x). Qed.
Lemma lem8344858 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2532 A B D P Q _112897 pat e q) = (term2533 A B D P Q _112897 pat e q).
Proof. exact (@lem8344857 A B P Q (term2531 A B D P Q _112897 pat e) q). Qed.
Lemma lem8344859 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112897 pat e q) = (term2533 A B D P Q _112897 pat e q).
Proof. exact (TRANS (@lem8344854 A B D P Q _112897 pat e q) (@lem8344858 A B D P Q _112897 pat e q)). Qed.
Lemma lem8344860 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8344861 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (_112897 pat e q f) = (term2534 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8344859 A B D P Q _112897 pat e q) (@lem8344860 A B f)). Qed.
Lemma lem8344863 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344864 {A B P Q : Type'} (f : type534 A B P Q) (x : A -> B) : (f x) = (@I ((A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8344863 (A -> B) (type878 A B P Q) f x). Qed.
Lemma lem8344865 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2534 A B D P Q _112897 pat e q f) = (term2535 A B D P Q _112897 pat e q f).
Proof. exact (@lem8344864 A B P Q (term2533 A B D P Q _112897 pat e q) f). Qed.
Lemma lem8344866 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (_112897 pat e q f) = (term2535 A B D P Q _112897 pat e q f).
Proof. exact (TRANS (@lem8344861 A B D P Q _112897 pat e q f) (@lem8344865 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8344867 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8344868 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (_112897 pat e q f arg) = (term2536 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8344866 A B D P Q _112897 pat e q f) (@lem8344867 A P Q arg)). Qed.
Lemma lem8344870 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344871 {A B P Q : Type'} (f : type878 A B P Q) (x : type1475 A P Q) : (f x) = (@I ((P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8344870 (type1475 A P Q) (P -> B) f x). Qed.
Lemma lem8344872 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2536 A B D P Q _112897 pat e q f arg) = (term2537 A B D P Q _112897 pat e q f arg).
Proof. exact (@lem8344871 A B P Q (term2535 A B D P Q _112897 pat e q f) arg). Qed.
Lemma lem8344873 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (_112897 pat e q f arg) = (term2537 A B D P Q _112897 pat e q f arg).
Proof. exact (TRANS (@lem8344868 A B D P Q _112897 pat e q f arg) (@lem8344872 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8344874 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8344875 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (_112897 pat e q f arg a') = (term2538 A B D P Q _112897 pat e q f arg a').
Proof. exact (MK_COMB (@lem8344873 A B D P Q _112897 pat e q f arg) (@lem8344874 P a')). Qed.
Lemma lem8344877 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344878 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8344877 P B f x). Qed.
Lemma lem8344879 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (term2538 A B D P Q _112897 pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a').
Proof. exact (@lem8344878 B P (term2537 A B D P Q _112897 pat e q f arg) a'). Qed.
Lemma lem8344881 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (_112897 pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a').
Proof. exact (TRANS (@lem8344875 A B D P Q _112897 pat e q f arg a') (@lem8344879 A B D P Q _112897 pat e q f arg a')). Qed.
Lemma lem8344882 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8344895 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344896 {D P Q : Type'} (f : type885 D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344895 (Q -> D) (type783 D P Q) f x). Qed.
Lemma lem8344897 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (_112896 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat).
Proof. exact (@lem8344896 D P Q _112896 pat). Qed.
Lemma lem8344898 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8344899 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e).
Proof. exact (MK_COMB (@lem8344897 D P Q _112896 pat) (@lem8344898 D P e)). Qed.
Lemma lem8344901 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344902 {D P Q : Type'} (f : type783 D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344901 (P -> D) (type467 P Q) f x). Qed.
Lemma lem8344903 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (@lem8344902 D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat) e). Qed.
Lemma lem8344904 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (TRANS (@lem8344899 D P Q _112896 pat e) (@lem8344903 D P Q _112896 pat e)). Qed.
Lemma lem8344905 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8344906 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2460 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8344904 D P Q _112896 pat e) (@lem8344905 P Q q)). Qed.
Lemma lem8344908 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344909 {P Q : Type'} (f : type467 P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8344908 (type1413 P Q) (P -> Q) f x). Qed.
Lemma lem8344910 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2460 D P Q _112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (@lem8344909 P Q (term2459 D P Q _112896 pat e) q). Qed.
Lemma lem8344911 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (TRANS (@lem8344906 D P Q _112896 pat e q) (@lem8344910 D P Q _112896 pat e q)). Qed.
Lemma lem8344912 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8344913 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (_112896 pat e q a') = (term2462 D P Q _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344911 D P Q _112896 pat e q) (@lem8344912 P a')). Qed.
Lemma lem8344915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344916 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8344915 P Q f x). Qed.
Lemma lem8344917 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2462 D P Q _112896 pat e q a') = (term2463 D P Q _112896 pat e q a').
Proof. exact (@lem8344916 P Q (term2461 D P Q _112896 pat e q) a'). Qed.
Lemma lem8344919 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (_112896 pat e q a') = (term2463 D P Q _112896 pat e q a').
Proof. exact (TRANS (@lem8344913 D P Q _112896 pat e q a') (@lem8344917 D P Q _112896 pat e q a')). Qed.
Lemma lem8344920 {A P Q : Type'} (arg : type1475 A P Q) (a' : P) : (arg a') = (arg a').
Proof. exact (eq_refl (arg a')). Qed.
Lemma lem8344921 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term1344 A D P Q arg _112896 pat e q a') = (term2540 A D P Q arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344920 A P Q arg a') (@lem8344919 D P Q _112896 pat e q a')). Qed.
Lemma lem8344923 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344924 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8344923 P (Q -> A) f x). Qed.
Lemma lem8344925 {A P Q : Type'} (arg : type1475 A P Q) (a' : P) : (arg a') = (@I (P -> Q -> A) arg a').
Proof. exact (@lem8344924 A P Q arg a'). Qed.
Lemma lem8344926 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2463 D P Q _112896 pat e q a') = (term2463 D P Q _112896 pat e q a').
Proof. exact (eq_refl (term2463 D P Q _112896 pat e q a')). Qed.
Lemma lem8344927 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2540 A D P Q arg _112896 pat e q a') = (term2541 A D P Q arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344925 A P Q arg a') (@lem8344926 D P Q _112896 pat e q a')). Qed.
Lemma lem8344929 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344930 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8344929 Q A f x). Qed.
Lemma lem8344931 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2541 A D P Q arg _112896 pat e q a') = (term2542 A D P Q arg _112896 pat e q a').
Proof. exact (@lem8344930 A Q (@I (P -> Q -> A) arg a') (term2463 D P Q _112896 pat e q a')). Qed.
Lemma lem8344932 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2540 A D P Q arg _112896 pat e q a') = (term2542 A D P Q arg _112896 pat e q a').
Proof. exact (TRANS (@lem8344927 A D P Q arg _112896 pat e q a') (@lem8344931 A D P Q arg _112896 pat e q a')). Qed.
Lemma lem8344933 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term1344 A D P Q arg _112896 pat e q a') = (term2542 A D P Q arg _112896 pat e q a').
Proof. exact (TRANS (@lem8344921 A D P Q arg _112896 pat e q a') (@lem8344932 A D P Q arg _112896 pat e q a')). Qed.
Lemma lem8344934 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term1357 A B D P Q f arg _112896 pat e q a') = (term2543 A B D P Q f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344882 A B f) (@lem8344933 A D P Q arg _112896 pat e q a')). Qed.
Lemma lem8344936 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344937 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8344936 A B f x). Qed.
Lemma lem8344938 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2543 A B D P Q f arg _112896 pat e q a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (@lem8344937 A B f (term2542 A D P Q arg _112896 pat e q a')). Qed.
Lemma lem8344939 {A B D P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term1357 A B D P Q f arg _112896 pat e q a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (TRANS (@lem8344934 A B D P Q f arg _112896 pat e q a') (@lem8344938 A B D P Q f arg _112896 pat e q a')). Qed.
Lemma lem8344940 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (term1423 A B D P Q _112897 pat e q f arg a') = (term2545 A B D P Q _112897 pat e q f arg a').
Proof. exact (MK_COMB (@lem8344828 B) (@lem8344881 A B D P Q _112897 pat e q f arg a')). Qed.
Lemma lem8344941 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : ((_112897 pat e q f arg a') = (term1357 A B D P Q f arg _112896 pat e q a')) = ((term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a')).
Proof. exact (MK_COMB (@lem8344940 A B D P Q _112897 pat e q f arg a') (@lem8344939 A B D P Q f arg _112896 pat e q a')). Qed.
Lemma lem8344942 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2546 A B D P Q _112897 f arg _112896 pat e q a') = (term2547 A B D P Q _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344827) (@lem8344941 A B D P Q _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344950 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8344949 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8344951 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8344950 A B P p f). Qed.
Lemma lem8344952 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8344953 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (@I ((A -> B) -> P -> Prop) p f a').
Proof. exact (MK_COMB (@lem8344951 A B P p f) (@lem8344952 P a')). Qed.
Lemma lem8344955 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344956 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8344955 P Prop f x). Qed.
Lemma lem8344957 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (@I ((A -> B) -> P -> Prop) p f a') = (term893 A B P p f a').
Proof. exact (@lem8344956 P (@I ((A -> B) -> P -> Prop) p f) a'). Qed.
Lemma lem8344959 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (term893 A B P p f a').
Proof. exact (TRANS (@lem8344953 A B P p f a') (@lem8344957 A B P p f a')). Qed.
Lemma lem8344960 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8344961 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term1250 A B P p f a') = (term1043 A B P p f a').
Proof. exact (MK_COMB (@lem8344960) (@lem8344959 A B P p f a')). Qed.
Lemma lem8344962 {A B D P Q : Type'} (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2111 A B D P Q p _112897 f arg _112896 pat e q a') = (term2548 A B D P Q p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8344961 A B P p f a') (@lem8344942 A B D P Q _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8344969 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344970 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8344969 P (Q -> Prop) f x). Qed.
Lemma lem8344971 {P Q : Type'} (q : type1413 P Q) (a' : P) : (q a') = (@I (P -> Q -> Prop) q a').
Proof. exact (@lem8344970 P Q q a'). Qed.
Lemma lem8344972 {Q : Type'} (t' : Q) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8344973 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (@I (P -> Q -> Prop) q a' t').
Proof. exact (MK_COMB (@lem8344971 P Q q a') (@lem8344972 Q t')). Qed.
Lemma lem8344975 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344976 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8344975 Q Prop f x). Qed.
Lemma lem8344977 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (@I (P -> Q -> Prop) q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8344976 Q (@I (P -> Q -> Prop) q a') t'). Qed.
Lemma lem8344979 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (term2472 P Q q a' t').
Proof. exact (TRANS (@lem8344973 P Q q a' t') (@lem8344977 P Q q a' t')). Qed.
Lemma lem8344980 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8344985 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344986 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8344985 Q D f x). Qed.
Lemma lem8344988 {D Q : Type'} (pat : Q -> D) (t' : Q) : (pat t') = (@I (Q -> D) pat t').
Proof. exact (@lem8344986 D Q pat t'). Qed.
Lemma lem8344993 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8344994 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8344993 P D f x). Qed.
Lemma lem8344996 {D P : Type'} (e : P -> D) (a' : P) : (e a') = (@I (P -> D) e a').
Proof. exact (@lem8344994 D P e a'). Qed.
Lemma lem8344997 {D Q : Type'} (pat : Q -> D) (t' : Q) : (term2474 D Q pat t') = (term2475 D Q pat t').
Proof. exact (MK_COMB (@lem8344980 D) (@lem8344988 D Q pat t')). Qed.
Lemma lem8344998 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : ((pat t') = (e a')) = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (MK_COMB (@lem8344997 D Q pat t') (@lem8344996 D P e a')). Qed.
Lemma lem8344999 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345000 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term913 D P Q pat t' e a') = (term2549 D P Q pat t' e a').
Proof. exact (MK_COMB (@lem8344999) (@lem8344998 D P Q pat t' e a')). Qed.
Lemma lem8345001 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term272 D P Q pat e q a' t') = (term2550 D P Q pat e q a' t').
Proof. exact (MK_COMB (@lem8345000 D P Q pat t' e a') (@lem8344979 P Q q a' t')). Qed.
Lemma lem8345002 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345003 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2255 D P Q pat e q a' t') = (term2551 D P Q pat e q a' t').
Proof. exact (MK_COMB (@lem8345002) (@lem8345001 D P Q pat e q a' t')). Qed.
Lemma lem8345004 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2257 A B D P Q t' p _112897 f arg _112896 pat e q a') = (term2552 A B D P Q t' p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8345003 D P Q pat e q a' t') (@lem8344962 A B D P Q p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8345011 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345012 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345011 P (Q -> Prop) f x). Qed.
Lemma lem8345013 {P Q : Type'} (q : type1413 P Q) (a' : P) : (q a') = (@I (P -> Q -> Prop) q a').
Proof. exact (@lem8345012 P Q q a'). Qed.
Lemma lem8345014 {Q : Type'} (t' : Q) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8345015 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (@I (P -> Q -> Prop) q a' t').
Proof. exact (MK_COMB (@lem8345013 P Q q a') (@lem8345014 Q t')). Qed.
Lemma lem8345017 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345018 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345017 Q Prop f x). Qed.
Lemma lem8345019 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (@I (P -> Q -> Prop) q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8345018 Q (@I (P -> Q -> Prop) q a') t'). Qed.
Lemma lem8345021 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (term2472 P Q q a' t').
Proof. exact (TRANS (@lem8345015 P Q q a' t') (@lem8345019 P Q q a' t')). Qed.
Lemma lem8345022 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345028 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345027 Q D f x). Qed.
Lemma lem8345030 {D Q : Type'} (pat : Q -> D) (t' : Q) : (pat t') = (@I (Q -> D) pat t').
Proof. exact (@lem8345028 D Q pat t'). Qed.
Lemma lem8345035 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345036 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345035 P D f x). Qed.
Lemma lem8345038 {D P : Type'} (e : P -> D) (a' : P) : (e a') = (@I (P -> D) e a').
Proof. exact (@lem8345036 D P e a'). Qed.
Lemma lem8345039 {D Q : Type'} (pat : Q -> D) (t' : Q) : (term2474 D Q pat t') = (term2475 D Q pat t').
Proof. exact (MK_COMB (@lem8345022 D) (@lem8345030 D Q pat t')). Qed.
Lemma lem8345040 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : ((pat t') = (e a')) = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (MK_COMB (@lem8345039 D Q pat t') (@lem8345038 D P e a')). Qed.
Lemma lem8345041 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345042 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term913 D P Q pat t' e a') = (term2549 D P Q pat t' e a').
Proof. exact (MK_COMB (@lem8345041) (@lem8345040 D P Q pat t' e a')). Qed.
Lemma lem8345043 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term272 D P Q pat e q a' t') = (term2550 D P Q pat e q a' t').
Proof. exact (MK_COMB (@lem8345042 D P Q pat t' e a') (@lem8345021 P Q q a' t')). Qed.
Lemma lem8345050 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345051 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345050 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345052 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8345051 A B P p g). Qed.
Lemma lem8345053 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8345054 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (p g a') = (@I ((A -> B) -> P -> Prop) p g a').
Proof. exact (MK_COMB (@lem8345052 A B P p g) (@lem8345053 P a')). Qed.
Lemma lem8345056 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345057 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345056 P Prop f x). Qed.
Lemma lem8345058 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (@I ((A -> B) -> P -> Prop) p g a') = (term893 A B P p g a').
Proof. exact (@lem8345057 P (@I ((A -> B) -> P -> Prop) p g) a'). Qed.
Lemma lem8345060 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (p g a') = (term893 A B P p g a').
Proof. exact (TRANS (@lem8345054 A B P p g a') (@lem8345058 A B P p g a')). Qed.
Lemma lem8345061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345062 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term1250 A B P p g a') = (term1043 A B P p g a').
Proof. exact (MK_COMB (@lem8345061) (@lem8345060 A B P p g a')). Qed.
Lemma lem8345063 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2144 A B D P Q p g pat e q a' t') = (term2553 A B D P Q p g pat e q a' t').
Proof. exact (MK_COMB (@lem8345062 A B P p g a') (@lem8345043 D P Q pat e q a' t')). Qed.
Lemma lem8345064 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345071 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345072 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345071 P (Q -> Prop) f x). Qed.
Lemma lem8345073 {P Q : Type'} (q : type1413 P Q) (a' : P) : (q a') = (@I (P -> Q -> Prop) q a').
Proof. exact (@lem8345072 P Q q a'). Qed.
Lemma lem8345074 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8345075 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (q a' t) = (@I (P -> Q -> Prop) q a' t).
Proof. exact (MK_COMB (@lem8345073 P Q q a') (@lem8345074 Q t)). Qed.
Lemma lem8345077 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345078 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345077 Q Prop f x). Qed.
Lemma lem8345079 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (@I (P -> Q -> Prop) q a' t) = (term2472 P Q q a' t).
Proof. exact (@lem8345078 Q (@I (P -> Q -> Prop) q a') t). Qed.
Lemma lem8345081 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (q a' t) = (term2472 P Q q a' t).
Proof. exact (TRANS (@lem8345075 P Q q a' t) (@lem8345079 P Q q a' t)). Qed.
Lemma lem8345082 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (term955 P Q q a' t) = (term2473 P Q q a' t).
Proof. exact (MK_COMB (@lem8345064) (@lem8345081 P Q q a' t)). Qed.
Lemma lem8345083 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345084 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345089 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345090 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345089 Q D f x). Qed.
Lemma lem8345092 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8345090 D Q pat t). Qed.
Lemma lem8345097 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345098 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345097 P D f x). Qed.
Lemma lem8345100 {D P : Type'} (e : P -> D) (a' : P) : (e a') = (@I (P -> D) e a').
Proof. exact (@lem8345098 D P e a'). Qed.
Lemma lem8345101 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8345084 D) (@lem8345092 D Q pat t)). Qed.
Lemma lem8345102 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : ((pat t) = (e a')) = ((@I (Q -> D) pat t) = (@I (P -> D) e a')).
Proof. exact (MK_COMB (@lem8345101 D Q pat t) (@lem8345100 D P e a')). Qed.
Lemma lem8345103 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : (term952 D P Q pat t e a') = (term2476 D P Q pat t e a').
Proof. exact (MK_COMB (@lem8345083) (@lem8345102 D P Q pat t e a')). Qed.
Lemma lem8345104 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345105 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : (term413 D P Q pat t e a') = (term2477 D P Q pat t e a').
Proof. exact (MK_COMB (@lem8345104) (@lem8345103 D P Q pat t e a')). Qed.
Lemma lem8345106 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t : Q) : (term408 D P Q pat e q a' t) = (term2478 D P Q pat e q a' t).
Proof. exact (MK_COMB (@lem8345105 D P Q pat t e a') (@lem8345082 P Q q a' t)). Qed.
Lemma lem8345107 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term505 D P Q pat e q a') = (term2479 D P Q pat e q a').
Proof. exact (fun_ext (fun t : Q => @lem8345106 D P Q pat e q a' t)). Qed.
Lemma lem8345108 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8345109 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term506 D P Q pat e q a') = (term2480 D P Q pat e q a').
Proof. exact (MK_COMB (@lem8345108 Q) (@lem8345107 D P Q pat e q a')). Qed.
Lemma lem8345110 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345118 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345117 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345119 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8345118 A B P p f). Qed.
Lemma lem8345120 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8345121 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (@I ((A -> B) -> P -> Prop) p f a').
Proof. exact (MK_COMB (@lem8345119 A B P p f) (@lem8345120 P a')). Qed.
Lemma lem8345123 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345124 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345123 P Prop f x). Qed.
Lemma lem8345125 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (@I ((A -> B) -> P -> Prop) p f a') = (term893 A B P p f a').
Proof. exact (@lem8345124 P (@I ((A -> B) -> P -> Prop) p f) a'). Qed.
Lemma lem8345127 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (term893 A B P p f a').
Proof. exact (TRANS (@lem8345121 A B P p f a') (@lem8345125 A B P p f a')). Qed.
Lemma lem8345128 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term894 A B P p f a') = (term895 A B P p f a').
Proof. exact (MK_COMB (@lem8345110) (@lem8345127 A B P p f a')). Qed.
Lemma lem8345129 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345130 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term418 A B P p f a') = (term896 A B P p f a').
Proof. exact (MK_COMB (@lem8345129) (@lem8345128 A B P p f a')). Qed.
Lemma lem8345131 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2070 A B D P Q p f pat e q a') = (term2554 A B D P Q p f pat e q a').
Proof. exact (MK_COMB (@lem8345130 A B P p f a') (@lem8345109 D P Q pat e q a')). Qed.
Lemma lem8345132 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345133 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2073 A B D P Q p f pat e q a') = (term2555 A B D P Q p f pat e q a').
Proof. exact (MK_COMB (@lem8345132) (@lem8345131 A B D P Q p f pat e q a')). Qed.
Lemma lem8345134 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2206 A B D P Q f p g pat e q a' t') = (term2556 A B D P Q f p g pat e q a' t').
Proof. exact (MK_COMB (@lem8345133 A B D P Q p f pat e q a') (@lem8345063 A B D P Q p g pat e q a' t')). Qed.
Lemma lem8345135 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345142 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345143 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345142 P (Q -> Prop) f x). Qed.
Lemma lem8345144 {P Q : Type'} (q : type1413 P Q) (a' : P) : (q a') = (@I (P -> Q -> Prop) q a').
Proof. exact (@lem8345143 P Q q a'). Qed.
Lemma lem8345145 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8345146 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (q a' t) = (@I (P -> Q -> Prop) q a' t).
Proof. exact (MK_COMB (@lem8345144 P Q q a') (@lem8345145 Q t)). Qed.
Lemma lem8345148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345149 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345148 Q Prop f x). Qed.
Lemma lem8345150 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (@I (P -> Q -> Prop) q a' t) = (term2472 P Q q a' t).
Proof. exact (@lem8345149 Q (@I (P -> Q -> Prop) q a') t). Qed.
Lemma lem8345152 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (q a' t) = (term2472 P Q q a' t).
Proof. exact (TRANS (@lem8345146 P Q q a' t) (@lem8345150 P Q q a' t)). Qed.
Lemma lem8345153 {P Q : Type'} (q : type1413 P Q) (a' : P) (t : Q) : (term955 P Q q a' t) = (term2473 P Q q a' t).
Proof. exact (MK_COMB (@lem8345135) (@lem8345152 P Q q a' t)). Qed.
Lemma lem8345154 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345155 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345160 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345161 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345160 Q D f x). Qed.
Lemma lem8345163 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8345161 D Q pat t). Qed.
Lemma lem8345168 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345169 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345168 P D f x). Qed.
Lemma lem8345171 {D P : Type'} (e : P -> D) (a' : P) : (e a') = (@I (P -> D) e a').
Proof. exact (@lem8345169 D P e a'). Qed.
Lemma lem8345172 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8345155 D) (@lem8345163 D Q pat t)). Qed.
Lemma lem8345173 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : ((pat t) = (e a')) = ((@I (Q -> D) pat t) = (@I (P -> D) e a')).
Proof. exact (MK_COMB (@lem8345172 D Q pat t) (@lem8345171 D P e a')). Qed.
Lemma lem8345174 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : (term952 D P Q pat t e a') = (term2476 D P Q pat t e a').
Proof. exact (MK_COMB (@lem8345154) (@lem8345173 D P Q pat t e a')). Qed.
Lemma lem8345175 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345176 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a' : P) : (term413 D P Q pat t e a') = (term2477 D P Q pat t e a').
Proof. exact (MK_COMB (@lem8345175) (@lem8345174 D P Q pat t e a')). Qed.
Lemma lem8345177 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t : Q) : (term408 D P Q pat e q a' t) = (term2478 D P Q pat e q a' t).
Proof. exact (MK_COMB (@lem8345176 D P Q pat t e a') (@lem8345153 P Q q a' t)). Qed.
Lemma lem8345178 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term505 D P Q pat e q a') = (term2479 D P Q pat e q a').
Proof. exact (fun_ext (fun t : Q => @lem8345177 D P Q pat e q a' t)). Qed.
Lemma lem8345179 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8345180 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term506 D P Q pat e q a') = (term2480 D P Q pat e q a').
Proof. exact (MK_COMB (@lem8345179 Q) (@lem8345178 D P Q pat e q a')). Qed.
Lemma lem8345181 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345188 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345189 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345188 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345190 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8345189 A B P p g). Qed.
Lemma lem8345191 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8345192 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (p g a') = (@I ((A -> B) -> P -> Prop) p g a').
Proof. exact (MK_COMB (@lem8345190 A B P p g) (@lem8345191 P a')). Qed.
Lemma lem8345194 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345195 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345194 P Prop f x). Qed.
Lemma lem8345196 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (@I ((A -> B) -> P -> Prop) p g a') = (term893 A B P p g a').
Proof. exact (@lem8345195 P (@I ((A -> B) -> P -> Prop) p g) a'). Qed.
Lemma lem8345198 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (p g a') = (term893 A B P p g a').
Proof. exact (TRANS (@lem8345192 A B P p g a') (@lem8345196 A B P p g a')). Qed.
Lemma lem8345199 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term894 A B P p g a') = (term895 A B P p g a').
Proof. exact (MK_COMB (@lem8345181) (@lem8345198 A B P p g a')). Qed.
Lemma lem8345200 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345201 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term418 A B P p g a') = (term896 A B P p g a').
Proof. exact (MK_COMB (@lem8345200) (@lem8345199 A B P p g a')). Qed.
Lemma lem8345202 {A B D P Q : Type'} (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2070 A B D P Q p g pat e q a') = (term2554 A B D P Q p g pat e q a').
Proof. exact (MK_COMB (@lem8345201 A B P p g a') (@lem8345180 D P Q pat e q a')). Qed.
Lemma lem8345209 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345210 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345209 P (Q -> Prop) f x). Qed.
Lemma lem8345211 {P Q : Type'} (q : type1413 P Q) (a' : P) : (q a') = (@I (P -> Q -> Prop) q a').
Proof. exact (@lem8345210 P Q q a'). Qed.
Lemma lem8345212 {Q : Type'} (t' : Q) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8345213 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (@I (P -> Q -> Prop) q a' t').
Proof. exact (MK_COMB (@lem8345211 P Q q a') (@lem8345212 Q t')). Qed.
Lemma lem8345215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345216 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345215 Q Prop f x). Qed.
Lemma lem8345217 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (@I (P -> Q -> Prop) q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8345216 Q (@I (P -> Q -> Prop) q a') t'). Qed.
Lemma lem8345219 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (q a' t') = (term2472 P Q q a' t').
Proof. exact (TRANS (@lem8345213 P Q q a' t') (@lem8345217 P Q q a' t')). Qed.
Lemma lem8345220 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345225 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345226 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345225 Q D f x). Qed.
Lemma lem8345228 {D Q : Type'} (pat : Q -> D) (t' : Q) : (pat t') = (@I (Q -> D) pat t').
Proof. exact (@lem8345226 D Q pat t'). Qed.
Lemma lem8345233 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345234 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345233 P D f x). Qed.
Lemma lem8345236 {D P : Type'} (e : P -> D) (a' : P) : (e a') = (@I (P -> D) e a').
Proof. exact (@lem8345234 D P e a'). Qed.
Lemma lem8345237 {D Q : Type'} (pat : Q -> D) (t' : Q) : (term2474 D Q pat t') = (term2475 D Q pat t').
Proof. exact (MK_COMB (@lem8345220 D) (@lem8345228 D Q pat t')). Qed.
Lemma lem8345238 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : ((pat t') = (e a')) = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (MK_COMB (@lem8345237 D Q pat t') (@lem8345236 D P e a')). Qed.
Lemma lem8345239 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345240 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term913 D P Q pat t' e a') = (term2549 D P Q pat t' e a').
Proof. exact (MK_COMB (@lem8345239) (@lem8345238 D P Q pat t' e a')). Qed.
Lemma lem8345241 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term272 D P Q pat e q a' t') = (term2550 D P Q pat e q a' t').
Proof. exact (MK_COMB (@lem8345240 D P Q pat t' e a') (@lem8345219 P Q q a' t')). Qed.
Lemma lem8345248 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345249 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345248 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345250 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8345249 A B P p f). Qed.
Lemma lem8345251 {P : Type'} (a' : P) : a' = a'.
Proof. exact (eq_refl a'). Qed.
Lemma lem8345252 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (@I ((A -> B) -> P -> Prop) p f a').
Proof. exact (MK_COMB (@lem8345250 A B P p f) (@lem8345251 P a')). Qed.
Lemma lem8345254 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345255 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345254 P Prop f x). Qed.
Lemma lem8345256 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (@I ((A -> B) -> P -> Prop) p f a') = (term893 A B P p f a').
Proof. exact (@lem8345255 P (@I ((A -> B) -> P -> Prop) p f) a'). Qed.
Lemma lem8345258 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (p f a') = (term893 A B P p f a').
Proof. exact (TRANS (@lem8345252 A B P p f a') (@lem8345256 A B P p f a')). Qed.
Lemma lem8345259 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345260 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term1250 A B P p f a') = (term1043 A B P p f a').
Proof. exact (MK_COMB (@lem8345259) (@lem8345258 A B P p f a')). Qed.
Lemma lem8345261 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2144 A B D P Q p f pat e q a' t') = (term2553 A B D P Q p f pat e q a' t').
Proof. exact (MK_COMB (@lem8345260 A B P p f a') (@lem8345241 D P Q pat e q a' t')). Qed.
Lemma lem8345262 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345263 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2159 A B D P Q p f pat e q a' t') = (term2557 A B D P Q p f pat e q a' t').
Proof. exact (MK_COMB (@lem8345262) (@lem8345261 A B D P Q p f pat e q a' t')). Qed.
Lemma lem8345264 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2195 A B D P Q f t' p g pat e q a') = (term2558 A B D P Q f t' p g pat e q a').
Proof. exact (MK_COMB (@lem8345263 A B D P Q p f pat e q a' t') (@lem8345202 A B D P Q p g pat e q a')). Qed.
Lemma lem8345265 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345266 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2223 A B D P Q f t' p g pat e q a') = (term2559 A B D P Q f t' p g pat e q a').
Proof. exact (MK_COMB (@lem8345265) (@lem8345264 A B D P Q f t' p g pat e q a')). Qed.
Lemma lem8345267 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2225 A B D P Q f p g pat e q a' t') = (term2560 A B D P Q f p g pat e q a' t').
Proof. exact (MK_COMB (@lem8345266 A B D P Q f t' p g pat e q a') (@lem8345134 A B D P Q f p g pat e q a' t')). Qed.
Lemma lem8345268 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8345273 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345274 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8345273 A B f x). Qed.
Lemma lem8345276 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8345274 A B f z). Qed.
Lemma lem8345281 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345282 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8345281 A B f x). Qed.
Lemma lem8345284 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8345282 A B g z). Qed.
Lemma lem8345285 {A B : Type'} (f : A -> B) (z : A) : (term2561 A B f z) = (term2562 A B f z).
Proof. exact (MK_COMB (@lem8345268 B) (@lem8345276 A B f z)). Qed.
Lemma lem8345286 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8345285 A B f z) (@lem8345284 A B g z)). Qed.
Lemma lem8345287 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345294 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345295 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345294 P A f x). Qed.
Lemma lem8345297 {A P : Type'} (s : P -> A) (a' : P) : (s a') = (@I (P -> A) s a').
Proof. exact (@lem8345295 A P s a'). Qed.
Lemma lem8345298 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8345299 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term1125 A P lt2 z s a') = (term2508 A P lt2 z s a').
Proof. exact (MK_COMB (@lem8345298 A lt2 z) (@lem8345297 A P s a')). Qed.
Lemma lem8345301 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345302 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8345301 A (A -> Prop) f x). Qed.
Lemma lem8345303 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem8345302 A lt2 z). Qed.
Lemma lem8345304 {A P : Type'} (s : P -> A) (a' : P) : (@I (P -> A) s a') = (@I (P -> A) s a').
Proof. exact (eq_refl (@I (P -> A) s a')). Qed.
Lemma lem8345305 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term2508 A P lt2 z s a') = (term2509 A P lt2 z s a').
Proof. exact (MK_COMB (@lem8345303 A lt2 z) (@lem8345304 A P s a')). Qed.
Lemma lem8345307 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345308 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8345307 A Prop f x). Qed.
Lemma lem8345309 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term2509 A P lt2 z s a') = (term2510 A P lt2 z s a').
Proof. exact (@lem8345308 A (@I (A -> A -> Prop) lt2 z) (@I (P -> A) s a')). Qed.
Lemma lem8345310 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term2508 A P lt2 z s a') = (term2510 A P lt2 z s a').
Proof. exact (TRANS (@lem8345305 A P lt2 z s a') (@lem8345309 A P lt2 z s a')). Qed.
Lemma lem8345311 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term1125 A P lt2 z s a') = (term2510 A P lt2 z s a').
Proof. exact (TRANS (@lem8345299 A P lt2 z s a') (@lem8345310 A P lt2 z s a')). Qed.
Lemma lem8345312 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term2039 A P lt2 z s a') = (term2563 A P lt2 z s a').
Proof. exact (MK_COMB (@lem8345287) (@lem8345311 A P lt2 z s a')). Qed.
Lemma lem8345313 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345314 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a' : P) : (term2564 A P lt2 z s a') = (term2565 A P lt2 z s a').
Proof. exact (MK_COMB (@lem8345313) (@lem8345312 A P lt2 z s a')). Qed.
Lemma lem8345315 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (z : A) : (term2066 A B P lt2 s a' f g z) = (term2566 A B P lt2 s a' f g z).
Proof. exact (MK_COMB (@lem8345314 A P lt2 z s a') (@lem8345286 A B f g z)). Qed.
Lemma lem8345316 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2067 A B P lt2 s a' f g) = (term2567 A B P lt2 s a' f g).
Proof. exact (fun_ext (fun z : A => @lem8345315 A B P lt2 s a' f g z)). Qed.
Lemma lem8345317 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8345318 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2068 A B P lt2 s a' f g) = (term2568 A B P lt2 s a' f g).
Proof. exact (MK_COMB (@lem8345317 A) (@lem8345316 A B P lt2 s a' f g)). Qed.
Lemma lem8345319 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345320 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2084 A B P lt2 s a' f g) = (term2569 A B P lt2 s a' f g).
Proof. exact (MK_COMB (@lem8345319) (@lem8345318 A B P lt2 s a' f g)). Qed.
Lemma lem8345321 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2238 A B D P Q lt2 s f p g pat e q a' t') = (term2570 A B D P Q lt2 s f p g pat e q a' t').
Proof. exact (MK_COMB (@lem8345320 A B P lt2 s a' f g) (@lem8345267 A B D P Q f p g pat e q a' t')). Qed.
Lemma lem8345322 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345323 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) : (term2333 A B D P Q lt2 s f p g pat e q a' t') = (term2571 A B D P Q lt2 s f p g pat e q a' t').
Proof. exact (MK_COMB (@lem8345322) (@lem8345321 A B D P Q lt2 s f p g pat e q a' t')). Qed.
Lemma lem8345324 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2335 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a') = (term2572 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8345323 A B D P Q lt2 s f p g pat e q a' t') (@lem8345004 A B D P Q t' p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8345325 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345332 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345333 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345332 P A f x). Qed.
Lemma lem8345335 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8345333 A P s a). Qed.
Lemma lem8345336 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8345337 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term2508 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8345336 A lt2 y) (@lem8345335 A P s a)). Qed.
Lemma lem8345339 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345340 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8345339 A (A -> Prop) f x). Qed.
Lemma lem8345341 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8345340 A lt2 y). Qed.
Lemma lem8345342 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8345343 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2508 A P lt2 y s a) = (term2509 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8345341 A lt2 y) (@lem8345342 A P s a)). Qed.
Lemma lem8345345 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345346 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8345345 A Prop f x). Qed.
Lemma lem8345347 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2509 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (@lem8345346 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8345348 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2508 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (TRANS (@lem8345343 A P lt2 y s a) (@lem8345347 A P lt2 y s a)). Qed.
Lemma lem8345349 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1125 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (TRANS (@lem8345337 A P lt2 y s a) (@lem8345348 A P lt2 y s a)). Qed.
Lemma lem8345350 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2039 A P lt2 y s a) = (term2563 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8345325) (@lem8345349 A P lt2 y s a)). Qed.
Lemma lem8345365 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345366 {D P Q : Type'} (f : type885 D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8345365 (Q -> D) (type783 D P Q) f x). Qed.
Lemma lem8345367 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (_112896 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat).
Proof. exact (@lem8345366 D P Q _112896 pat). Qed.
Lemma lem8345368 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8345369 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e).
Proof. exact (MK_COMB (@lem8345367 D P Q _112896 pat) (@lem8345368 D P e)). Qed.
Lemma lem8345371 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345372 {D P Q : Type'} (f : type783 D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8345371 (P -> D) (type467 P Q) f x). Qed.
Lemma lem8345373 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (@lem8345372 D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> P -> Q) _112896 pat) e). Qed.
Lemma lem8345374 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (_112896 pat e) = (term2459 D P Q _112896 pat e).
Proof. exact (TRANS (@lem8345369 D P Q _112896 pat e) (@lem8345373 D P Q _112896 pat e)). Qed.
Lemma lem8345375 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8345376 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2460 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8345374 D P Q _112896 pat e) (@lem8345375 P Q q)). Qed.
Lemma lem8345378 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345379 {P Q : Type'} (f : type467 P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> P -> Q) f x).
Proof. exact (@lem8345378 (type1413 P Q) (P -> Q) f x). Qed.
Lemma lem8345380 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2460 D P Q _112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (@lem8345379 P Q (term2459 D P Q _112896 pat e) q). Qed.
Lemma lem8345381 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112896 pat e q) = (term2461 D P Q _112896 pat e q).
Proof. exact (TRANS (@lem8345376 D P Q _112896 pat e q) (@lem8345380 D P Q _112896 pat e q)). Qed.
Lemma lem8345382 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345383 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2462 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345381 D P Q _112896 pat e q) (@lem8345382 P a)). Qed.
Lemma lem8345385 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345386 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8345385 P Q f x). Qed.
Lemma lem8345387 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2462 D P Q _112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (@lem8345386 P Q (term2461 D P Q _112896 pat e q) a). Qed.
Lemma lem8345389 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (_112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (TRANS (@lem8345383 D P Q _112896 pat e q a) (@lem8345387 D P Q _112896 pat e q a)). Qed.
Lemma lem8345390 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (arg a).
Proof. exact (eq_refl (arg a)). Qed.
Lemma lem8345391 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1344 A D P Q arg _112896 pat e q a) = (term2540 A D P Q arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345390 A P Q arg a) (@lem8345389 D P Q _112896 pat e q a)). Qed.
Lemma lem8345393 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345394 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8345393 P (Q -> A) f x). Qed.
Lemma lem8345395 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8345394 A P Q arg a). Qed.
Lemma lem8345396 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2463 D P Q _112896 pat e q a) = (term2463 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2463 D P Q _112896 pat e q a)). Qed.
Lemma lem8345397 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2540 A D P Q arg _112896 pat e q a) = (term2541 A D P Q arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345395 A P Q arg a) (@lem8345396 D P Q _112896 pat e q a)). Qed.
Lemma lem8345399 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345400 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8345399 Q A f x). Qed.
Lemma lem8345401 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2541 A D P Q arg _112896 pat e q a) = (term2542 A D P Q arg _112896 pat e q a).
Proof. exact (@lem8345400 A Q (@I (P -> Q -> A) arg a) (term2463 D P Q _112896 pat e q a)). Qed.
Lemma lem8345402 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2540 A D P Q arg _112896 pat e q a) = (term2542 A D P Q arg _112896 pat e q a).
Proof. exact (TRANS (@lem8345397 A D P Q arg _112896 pat e q a) (@lem8345401 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345403 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1344 A D P Q arg _112896 pat e q a) = (term2542 A D P Q arg _112896 pat e q a).
Proof. exact (TRANS (@lem8345391 A D P Q arg _112896 pat e q a) (@lem8345402 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345404 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8345405 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term2573 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345404 A lt2 y) (@lem8345403 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345407 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345408 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8345407 A (A -> Prop) f x). Qed.
Lemma lem8345409 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8345408 A lt2 y). Qed.
Lemma lem8345410 {A D P Q : Type'} (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2542 A D P Q arg _112896 pat e q a) = (term2542 A D P Q arg _112896 pat e q a).
Proof. exact (eq_refl (term2542 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345411 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2573 A D P Q lt2 y arg _112896 pat e q a) = (term2574 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345409 A lt2 y) (@lem8345410 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345413 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345414 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8345413 A Prop f x). Qed.
Lemma lem8345415 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2574 A D P Q lt2 y arg _112896 pat e q a) = (term2575 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (@lem8345414 A (@I (A -> A -> Prop) lt2 y) (term2542 A D P Q arg _112896 pat e q a)). Qed.
Lemma lem8345416 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2573 A D P Q lt2 y arg _112896 pat e q a) = (term2575 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (TRANS (@lem8345411 A D P Q lt2 y arg _112896 pat e q a) (@lem8345415 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8345417 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term1345 A D P Q lt2 y arg _112896 pat e q a) = (term2575 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (TRANS (@lem8345405 A D P Q lt2 y arg _112896 pat e q a) (@lem8345416 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8345424 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345425 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345424 P (Q -> Prop) f x). Qed.
Lemma lem8345426 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8345425 P Q q a). Qed.
Lemma lem8345427 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8345428 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (@I (P -> Q -> Prop) q a t).
Proof. exact (MK_COMB (@lem8345426 P Q q a) (@lem8345427 Q t)). Qed.
Lemma lem8345430 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345431 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345430 Q Prop f x). Qed.
Lemma lem8345432 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (@I (P -> Q -> Prop) q a t) = (term2472 P Q q a t).
Proof. exact (@lem8345431 Q (@I (P -> Q -> Prop) q a) t). Qed.
Lemma lem8345434 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (term2472 P Q q a t).
Proof. exact (TRANS (@lem8345428 P Q q a t) (@lem8345432 P Q q a t)). Qed.
Lemma lem8345435 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345440 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345441 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345440 Q D f x). Qed.
Lemma lem8345443 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8345441 D Q pat t). Qed.
Lemma lem8345448 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345449 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345448 P D f x). Qed.
Lemma lem8345451 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8345449 D P e a). Qed.
Lemma lem8345452 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8345435 D) (@lem8345443 D Q pat t)). Qed.
Lemma lem8345453 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : ((pat t) = (e a)) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8345452 D Q pat t) (@lem8345451 D P e a)). Qed.
Lemma lem8345454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345455 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term913 D P Q pat t e a) = (term2549 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8345454) (@lem8345453 D P Q pat t e a)). Qed.
Lemma lem8345456 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term272 D P Q pat e q a t) = (term2550 D P Q pat e q a t).
Proof. exact (MK_COMB (@lem8345455 D P Q pat t e a) (@lem8345434 P Q q a t)). Qed.
Lemma lem8345463 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345464 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345463 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345465 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8345464 A B P p f). Qed.
Lemma lem8345466 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345467 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8345465 A B P p f) (@lem8345466 P a)). Qed.
Lemma lem8345469 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345470 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345469 P Prop f x). Qed.
Lemma lem8345471 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8345470 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8345473 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8345467 A B P p f a) (@lem8345471 A B P p f a)). Qed.
Lemma lem8345474 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345475 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1250 A B P p f a) = (term1043 A B P p f a).
Proof. exact (MK_COMB (@lem8345474) (@lem8345473 A B P p f a)). Qed.
Lemma lem8345476 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2144 A B D P Q p f pat e q a t) = (term2553 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8345475 A B P p f a) (@lem8345456 D P Q pat e q a t)). Qed.
Lemma lem8345477 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345478 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (t : Q) : (term2159 A B D P Q p f pat e q a t) = (term2557 A B D P Q p f pat e q a t).
Proof. exact (MK_COMB (@lem8345477) (@lem8345476 A B D P Q p f pat e q a t)). Qed.
Lemma lem8345479 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2161 A B D P Q p f t lt2 y arg _112896 pat e q a) = (term2576 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345478 A B D P Q p f pat e q a t) (@lem8345417 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8345480 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345481 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2176 A B D P Q p f t lt2 y arg _112896 pat e q a) = (term2577 A B D P Q p f t lt2 y arg _112896 pat e q a).
Proof. exact (MK_COMB (@lem8345480) (@lem8345479 A B D P Q p f t lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8345482 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2178 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8345481 A B D P Q p f t lt2 y arg _112896 pat e q a) (@lem8345350 A P lt2 y s a)). Qed.
Lemma lem8345483 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345484 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2403 A B D P Q p f t arg _112896 pat e q lt2 y s a) = (term2579 A B D P Q p f t arg _112896 pat e q lt2 y s a).
Proof. exact (MK_COMB (@lem8345483) (@lem8345482 A B D P Q p f t arg _112896 pat e q lt2 y s a)). Qed.
Lemma lem8345485 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') = (term2580 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a').
Proof. exact (MK_COMB (@lem8345484 A B D P Q p f t arg _112896 pat e q lt2 y s a) (@lem8345324 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a')). Qed.
Lemma lem8345486 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') : term2580 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a'.
Proof. exact (EQ_MP (@lem8345485 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') (@lem8344348 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8345493 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345494 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345493 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345495 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8345494 A B P p g). Qed.
Lemma lem8345496 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345497 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8345495 A B P p g) (@lem8345496 P a)). Qed.
Lemma lem8345499 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345500 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345499 P Prop f x). Qed.
Lemma lem8345501 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term893 A B P p g a).
Proof. exact (@lem8345500 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8345503 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term893 A B P p g a).
Proof. exact (TRANS (@lem8345497 A B P p g a) (@lem8345501 A B P p g a)). Qed.
Lemma lem8345504 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345511 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345512 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345511 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345513 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8345512 A B P p f). Qed.
Lemma lem8345514 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345515 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8345513 A B P p f) (@lem8345514 P a)). Qed.
Lemma lem8345517 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345518 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345517 P Prop f x). Qed.
Lemma lem8345519 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8345518 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8345521 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8345515 A B P p f a) (@lem8345519 A B P p f a)). Qed.
Lemma lem8345522 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term894 A B P p f a) = (term895 A B P p f a).
Proof. exact (MK_COMB (@lem8345504) (@lem8345521 A B P p f a)). Qed.
Lemma lem8345523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345524 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term418 A B P p f a) = (term896 A B P p f a).
Proof. exact (MK_COMB (@lem8345523) (@lem8345522 A B P p f a)). Qed.
Lemma lem8345525 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2581 A B P f p g a) = (term2582 A B P f p g a).
Proof. exact (MK_COMB (@lem8345524 A B P p f a) (@lem8345503 A B P p g a)). Qed.
Lemma lem8345526 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345533 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345534 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345533 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345535 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8345534 A B P p g). Qed.
Lemma lem8345536 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345537 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8345535 A B P p g) (@lem8345536 P a)). Qed.
Lemma lem8345539 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345540 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345539 P Prop f x). Qed.
Lemma lem8345541 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term893 A B P p g a).
Proof. exact (@lem8345540 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8345543 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term893 A B P p g a).
Proof. exact (TRANS (@lem8345537 A B P p g a) (@lem8345541 A B P p g a)). Qed.
Lemma lem8345544 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term894 A B P p g a) = (term895 A B P p g a).
Proof. exact (MK_COMB (@lem8345526) (@lem8345543 A B P p g a)). Qed.
Lemma lem8345551 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345552 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8345551 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8345553 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8345552 A B P p f). Qed.
Lemma lem8345554 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345555 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8345553 A B P p f) (@lem8345554 P a)). Qed.
Lemma lem8345557 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345558 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8345557 P Prop f x). Qed.
Lemma lem8345559 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term893 A B P p f a).
Proof. exact (@lem8345558 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8345561 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term893 A B P p f a).
Proof. exact (TRANS (@lem8345555 A B P p f a) (@lem8345559 A B P p f a)). Qed.
Lemma lem8345562 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345563 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2583 A B P p f a) = (term2584 A B P p f a).
Proof. exact (MK_COMB (@lem8345562) (@lem8345561 A B P p f a)). Qed.
Lemma lem8345564 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2585 A B P f p g a) = (term2586 A B P f p g a).
Proof. exact (MK_COMB (@lem8345563 A B P p f a) (@lem8345544 A B P p g a)). Qed.
Lemma lem8345565 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345566 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2587 A B P f p g a) = (term2588 A B P f p g a).
Proof. exact (MK_COMB (@lem8345565) (@lem8345564 A B P f p g a)). Qed.
Lemma lem8345567 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1936 A B P f p g a) = (term2589 A B P f p g a).
Proof. exact (MK_COMB (@lem8345566 A B P f p g a) (@lem8345525 A B P f p g a)). Qed.
Lemma lem8345568 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345569 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8345570 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345579 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345580 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8345579 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8345581 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8345580 A B P z f). Qed.
Lemma lem8345582 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8345583 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8345581 A B P z f) (@lem8345582 A B g)). Qed.
Lemma lem8345585 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345586 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8345585 (A -> B) (P -> A) f x). Qed.
Lemma lem8345587 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2590 A B P z f g).
Proof. exact (@lem8345586 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8345588 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2590 A B P z f g).
Proof. exact (TRANS (@lem8345583 A B P z f g) (@lem8345587 A B P z f g)). Qed.
Lemma lem8345589 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345590 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2591 A B P z f g a).
Proof. exact (MK_COMB (@lem8345588 A B P z f g) (@lem8345589 P a)). Qed.
Lemma lem8345592 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345593 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345592 P A f x). Qed.
Lemma lem8345594 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2591 A B P z f g a) = (term2592 A B P z f g a).
Proof. exact (@lem8345593 A P (term2590 A B P z f g) a). Qed.
Lemma lem8345596 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2592 A B P z f g a).
Proof. exact (TRANS (@lem8345590 A B P z f g a) (@lem8345594 A B P z f g a)). Qed.
Lemma lem8345597 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2593 A B P z f g a) = (term2594 A B P z f g a).
Proof. exact (MK_COMB (@lem8345570 A B f) (@lem8345596 A B P z f g a)). Qed.
Lemma lem8345599 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345600 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8345599 A B f x). Qed.
Lemma lem8345601 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2594 A B P z f g a) = (term2595 A B P z f g a).
Proof. exact (@lem8345600 A B f (term2592 A B P z f g a)). Qed.
Lemma lem8345602 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2593 A B P z f g a) = (term2595 A B P z f g a).
Proof. exact (TRANS (@lem8345597 A B P z f g a) (@lem8345601 A B P z f g a)). Qed.
Lemma lem8345603 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8345612 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345613 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8345612 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8345614 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8345613 A B P z f). Qed.
Lemma lem8345615 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8345616 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8345614 A B P z f) (@lem8345615 A B g)). Qed.
Lemma lem8345618 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345619 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8345618 (A -> B) (P -> A) f x). Qed.
Lemma lem8345620 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2590 A B P z f g).
Proof. exact (@lem8345619 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8345621 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2590 A B P z f g).
Proof. exact (TRANS (@lem8345616 A B P z f g) (@lem8345620 A B P z f g)). Qed.
Lemma lem8345622 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345623 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2591 A B P z f g a).
Proof. exact (MK_COMB (@lem8345621 A B P z f g) (@lem8345622 P a)). Qed.
Lemma lem8345625 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345626 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345625 P A f x). Qed.
Lemma lem8345627 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2591 A B P z f g a) = (term2592 A B P z f g a).
Proof. exact (@lem8345626 A P (term2590 A B P z f g) a). Qed.
Lemma lem8345629 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2592 A B P z f g a).
Proof. exact (TRANS (@lem8345623 A B P z f g a) (@lem8345627 A B P z f g a)). Qed.
Lemma lem8345630 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2596 A B P z f g a) = (term2597 A B P z f g a).
Proof. exact (MK_COMB (@lem8345603 A B g) (@lem8345629 A B P z f g a)). Qed.
Lemma lem8345632 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345633 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8345632 A B f x). Qed.
Lemma lem8345634 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2597 A B P z f g a) = (term2598 A B P z f g a).
Proof. exact (@lem8345633 A B g (term2592 A B P z f g a)). Qed.
Lemma lem8345635 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2596 A B P z f g a) = (term2598 A B P z f g a).
Proof. exact (TRANS (@lem8345630 A B P z f g a) (@lem8345634 A B P z f g a)). Qed.
Lemma lem8345636 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2599 A B P z f g a) = (term2600 A B P z f g a).
Proof. exact (MK_COMB (@lem8345569 B) (@lem8345602 A B P z f g a)). Qed.
Lemma lem8345637 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term2593 A B P z f g a) = (term2596 A B P z f g a)) = ((term2595 A B P z f g a) = (term2598 A B P z f g a)).
Proof. exact (MK_COMB (@lem8345636 A B P z f g a) (@lem8345635 A B P z f g a)). Qed.
Lemma lem8345638 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2601 A B P z f g a) = (term2602 A B P z f g a).
Proof. exact (MK_COMB (@lem8345568) (@lem8345637 A B P z f g a)). Qed.
Lemma lem8345639 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8345648 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345649 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8345648 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8345650 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8345649 A B P z f). Qed.
Lemma lem8345651 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8345652 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8345650 A B P z f) (@lem8345651 A B g)). Qed.
Lemma lem8345654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345655 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8345654 (A -> B) (P -> A) f x). Qed.
Lemma lem8345656 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2590 A B P z f g).
Proof. exact (@lem8345655 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8345657 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2590 A B P z f g).
Proof. exact (TRANS (@lem8345652 A B P z f g) (@lem8345656 A B P z f g)). Qed.
Lemma lem8345658 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345659 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2591 A B P z f g a).
Proof. exact (MK_COMB (@lem8345657 A B P z f g) (@lem8345658 P a)). Qed.
Lemma lem8345661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345662 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345661 P A f x). Qed.
Lemma lem8345663 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2591 A B P z f g a) = (term2592 A B P z f g a).
Proof. exact (@lem8345662 A P (term2590 A B P z f g) a). Qed.
Lemma lem8345665 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2592 A B P z f g a).
Proof. exact (TRANS (@lem8345659 A B P z f g a) (@lem8345663 A B P z f g a)). Qed.
Lemma lem8345670 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345671 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8345670 P A f x). Qed.
Lemma lem8345673 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8345671 A P s a). Qed.
Lemma lem8345674 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2603 A B P lt2 z f g a) = (term2604 A B P lt2 z f g a).
Proof. exact (MK_COMB (@lem8345639 A lt2) (@lem8345665 A B P z f g a)). Qed.
Lemma lem8345675 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2605 A B P lt2 z f g s a) = (term2606 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8345674 A B P lt2 z f g a) (@lem8345673 A P s a)). Qed.
Lemma lem8345677 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345678 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8345677 A (A -> Prop) f x). Qed.
Lemma lem8345679 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2604 A B P lt2 z f g a) = (term2607 A B P lt2 z f g a).
Proof. exact (@lem8345678 A lt2 (term2592 A B P z f g a)). Qed.
Lemma lem8345680 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8345681 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2606 A B P lt2 z f g s a) = (term2608 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8345679 A B P lt2 z f g a) (@lem8345680 A P s a)). Qed.
Lemma lem8345683 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345684 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8345683 A Prop f x). Qed.
Lemma lem8345685 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2608 A B P lt2 z f g s a) = (term2609 A B P lt2 z f g s a).
Proof. exact (@lem8345684 A (term2607 A B P lt2 z f g a) (@I (P -> A) s a)). Qed.
Lemma lem8345686 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2606 A B P lt2 z f g s a) = (term2609 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8345681 A B P lt2 z f g s a) (@lem8345685 A B P lt2 z f g s a)). Qed.
Lemma lem8345687 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2605 A B P lt2 z f g s a) = (term2609 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8345675 A B P lt2 z f g s a) (@lem8345686 A B P lt2 z f g s a)). Qed.
Lemma lem8345688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345689 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2610 A B P lt2 z f g s a) = (term2611 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8345688) (@lem8345687 A B P lt2 z f g s a)). Qed.
Lemma lem8345690 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2612 A B P lt2 s z f g a) = (term2613 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8345689 A B P lt2 z f g s a) (@lem8345638 A B P z f g a)). Qed.
Lemma lem8345691 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8345692 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2614 A B P lt2 s z f g a) = (term2615 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8345691) (@lem8345690 A B P lt2 s z f g a)). Qed.
Lemma lem8345693 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2616 A B P lt2 s z f p g a) = (term2617 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8345692 A B P lt2 s z f g a) (@lem8345567 A B P f p g a)). Qed.
Lemma lem8345694 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2618 A B P lt2 s z f p g) = (term2619 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8345693 A B P lt2 s z f p g a)). Qed.
Lemma lem8345695 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8345696 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2620 A B P lt2 s z f p g) = (term2621 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8345695 P) (@lem8345694 A B P lt2 s z f p g)). Qed.
Lemma lem8345697 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2622 A B P lt2 s z f p) = (term2623 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8345696 A B P lt2 s z f p g)). Qed.
Lemma lem8345698 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8345699 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2031 A B P lt2 s z f p) = (term2624 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8345698 A B) (@lem8345697 A B P lt2 s z f p)). Qed.
Lemma lem8345700 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2033 A B P lt2 s z p) = (term2625 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8345699 A B P lt2 s z f p)). Qed.
Lemma lem8345701 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8345702 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2035 A B P lt2 s z p) = (term2626 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8345701 A B) (@lem8345700 A B P lt2 s z p)). Qed.
Lemma lem8345703 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2626 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8345702 A B P lt2 s z p) (@lem8344349 A B P lt2 s z p h1)). Qed.
Lemma lem8345704 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8345705 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345722 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345723 {A B D P Q : Type'} (f : type907 A B D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345722 (Q -> D) (type900 A B D P Q) f x). Qed.
Lemma lem8345724 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) : (t'' pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat).
Proof. exact (@lem8345723 A B D P Q t'' pat). Qed.
Lemma lem8345725 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8345726 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e).
Proof. exact (MK_COMB (@lem8345724 A B D P Q t'' pat) (@lem8345725 D P e)). Qed.
Lemma lem8345728 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345729 {A B D P Q : Type'} (f : type900 A B D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345728 (P -> D) (type882 A B P Q) f x). Qed.
Lemma lem8345730 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (@lem8345729 A B D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat) e). Qed.
Lemma lem8345731 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (TRANS (@lem8345726 A B D P Q t'' pat e) (@lem8345730 A B D P Q t'' pat e)). Qed.
Lemma lem8345732 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8345733 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2628 A B D P Q t'' pat e q).
Proof. exact (MK_COMB (@lem8345731 A B D P Q t'' pat e) (@lem8345732 P Q q)). Qed.
Lemma lem8345735 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345736 {A B P Q : Type'} (f : type882 A B P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345735 (type1413 P Q) (type535 A B P Q) f x). Qed.
Lemma lem8345737 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2628 A B D P Q t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (@lem8345736 A B P Q (term2627 A B D P Q t'' pat e) q). Qed.
Lemma lem8345738 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (TRANS (@lem8345733 A B D P Q t'' pat e q) (@lem8345737 A B D P Q t'' pat e q)). Qed.
Lemma lem8345739 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345740 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2630 A B D P Q t'' pat e q f).
Proof. exact (MK_COMB (@lem8345738 A B D P Q t'' pat e q) (@lem8345739 A B f)). Qed.
Lemma lem8345742 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345743 {A B P Q : Type'} (f : type535 A B P Q) (x : A -> B) : (f x) = (@I ((A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345742 (A -> B) (type765 A P Q) f x). Qed.
Lemma lem8345744 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2630 A B D P Q t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (@lem8345743 A B P Q (term2629 A B D P Q t'' pat e q) f). Qed.
Lemma lem8345745 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (TRANS (@lem8345740 A B D P Q t'' pat e q f) (@lem8345744 A B D P Q t'' pat e q f)). Qed.
Lemma lem8345746 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8345747 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2632 A B D P Q t'' pat e q f arg).
Proof. exact (MK_COMB (@lem8345745 A B D P Q t'' pat e q f) (@lem8345746 A P Q arg)). Qed.
Lemma lem8345749 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345750 {A P Q : Type'} (f : type765 A P Q) (x : type1475 A P Q) : (f x) = (@I ((P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345749 (type1475 A P Q) (P -> Q) f x). Qed.
Lemma lem8345751 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2632 A B D P Q t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (@lem8345750 A P Q (term2631 A B D P Q t'' pat e q f) arg). Qed.
Lemma lem8345752 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (TRANS (@lem8345747 A B D P Q t'' pat e q f arg) (@lem8345751 A B D P Q t'' pat e q f arg)). Qed.
Lemma lem8345753 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345754 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2634 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345752 A B D P Q t'' pat e q f arg) (@lem8345753 P a)). Qed.
Lemma lem8345756 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345757 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8345756 P Q f x). Qed.
Lemma lem8345758 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2634 A B D P Q t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345757 P Q (term2633 A B D P Q t'' pat e q f arg) a). Qed.
Lemma lem8345760 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345754 A B D P Q t'' pat e q f arg a) (@lem8345758 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345761 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (arg a).
Proof. exact (eq_refl (arg a)). Qed.
Lemma lem8345762 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2636 A B D P Q t'' pat e q f arg a) = (term2637 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345761 A P Q arg a) (@lem8345760 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345764 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345765 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8345764 P (Q -> A) f x). Qed.
Lemma lem8345766 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8345765 A P Q arg a). Qed.
Lemma lem8345767 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2635 A B D P Q t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (eq_refl (term2635 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345768 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2637 A B D P Q t'' pat e q f arg a) = (term2638 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345766 A P Q arg a) (@lem8345767 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345770 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345771 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8345770 Q A f x). Qed.
Lemma lem8345772 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2638 A B D P Q t'' pat e q f arg a) = (term2639 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345771 A Q (@I (P -> Q -> A) arg a) (term2635 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345773 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2637 A B D P Q t'' pat e q f arg a) = (term2639 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345768 A B D P Q t'' pat e q f arg a) (@lem8345772 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345774 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2636 A B D P Q t'' pat e q f arg a) = (term2639 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345762 A B D P Q t'' pat e q f arg a) (@lem8345773 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345775 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2640 A B D P Q t'' pat e q f arg a) = (term2641 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345705 A B f) (@lem8345774 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345777 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345778 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8345777 A B f x). Qed.
Lemma lem8345779 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2641 A B D P Q t'' pat e q f arg a) = (term2642 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345778 A B f (term2639 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345780 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2640 A B D P Q t'' pat e q f arg a) = (term2642 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345775 A B D P Q t'' pat e q f arg a) (@lem8345779 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345795 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345796 {A B D P Q : Type'} (f : type906 A B D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8345795 (Q -> D) (type899 A B D P Q) f x). Qed.
Lemma lem8345797 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) : (_112897 pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat).
Proof. exact (@lem8345796 A B D P Q _112897 pat). Qed.
Lemma lem8345798 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8345799 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (_112897 pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat e).
Proof. exact (MK_COMB (@lem8345797 A B D P Q _112897 pat) (@lem8345798 D P e)). Qed.
Lemma lem8345801 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345802 {A B D P Q : Type'} (f : type899 A B D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8345801 (P -> D) (type881 A B P Q) f x). Qed.
Lemma lem8345803 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat e) = (term2531 A B D P Q _112897 pat e).
Proof. exact (@lem8345802 A B D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) _112897 pat) e). Qed.
Lemma lem8345804 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (_112897 pat e) = (term2531 A B D P Q _112897 pat e).
Proof. exact (TRANS (@lem8345799 A B D P Q _112897 pat e) (@lem8345803 A B D P Q _112897 pat e)). Qed.
Lemma lem8345805 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8345806 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112897 pat e q) = (term2532 A B D P Q _112897 pat e q).
Proof. exact (MK_COMB (@lem8345804 A B D P Q _112897 pat e) (@lem8345805 P Q q)). Qed.
Lemma lem8345808 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345809 {A B P Q : Type'} (f : type881 A B P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8345808 (type1413 P Q) (type534 A B P Q) f x). Qed.
Lemma lem8345810 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2532 A B D P Q _112897 pat e q) = (term2533 A B D P Q _112897 pat e q).
Proof. exact (@lem8345809 A B P Q (term2531 A B D P Q _112897 pat e) q). Qed.
Lemma lem8345811 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (_112897 pat e q) = (term2533 A B D P Q _112897 pat e q).
Proof. exact (TRANS (@lem8345806 A B D P Q _112897 pat e q) (@lem8345810 A B D P Q _112897 pat e q)). Qed.
Lemma lem8345812 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345813 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (_112897 pat e q f) = (term2534 A B D P Q _112897 pat e q f).
Proof. exact (MK_COMB (@lem8345811 A B D P Q _112897 pat e q) (@lem8345812 A B f)). Qed.
Lemma lem8345815 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345816 {A B P Q : Type'} (f : type534 A B P Q) (x : A -> B) : (f x) = (@I ((A -> B) -> (P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8345815 (A -> B) (type878 A B P Q) f x). Qed.
Lemma lem8345817 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2534 A B D P Q _112897 pat e q f) = (term2535 A B D P Q _112897 pat e q f).
Proof. exact (@lem8345816 A B P Q (term2533 A B D P Q _112897 pat e q) f). Qed.
Lemma lem8345818 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (_112897 pat e q f) = (term2535 A B D P Q _112897 pat e q f).
Proof. exact (TRANS (@lem8345813 A B D P Q _112897 pat e q f) (@lem8345817 A B D P Q _112897 pat e q f)). Qed.
Lemma lem8345819 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8345820 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (_112897 pat e q f arg) = (term2536 A B D P Q _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8345818 A B D P Q _112897 pat e q f) (@lem8345819 A P Q arg)). Qed.
Lemma lem8345822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345823 {A B P Q : Type'} (f : type878 A B P Q) (x : type1475 A P Q) : (f x) = (@I ((P -> Q -> A) -> P -> B) f x).
Proof. exact (@lem8345822 (type1475 A P Q) (P -> B) f x). Qed.
Lemma lem8345824 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2536 A B D P Q _112897 pat e q f arg) = (term2537 A B D P Q _112897 pat e q f arg).
Proof. exact (@lem8345823 A B P Q (term2535 A B D P Q _112897 pat e q f) arg). Qed.
Lemma lem8345825 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (_112897 pat e q f arg) = (term2537 A B D P Q _112897 pat e q f arg).
Proof. exact (TRANS (@lem8345820 A B D P Q _112897 pat e q f arg) (@lem8345824 A B D P Q _112897 pat e q f arg)). Qed.
Lemma lem8345826 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345827 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (_112897 pat e q f arg a) = (term2538 A B D P Q _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8345825 A B D P Q _112897 pat e q f arg) (@lem8345826 P a)). Qed.
Lemma lem8345829 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345830 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8345829 P B f x). Qed.
Lemma lem8345831 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2538 A B D P Q _112897 pat e q f arg a) = (term2539 A B D P Q _112897 pat e q f arg a).
Proof. exact (@lem8345830 B P (term2537 A B D P Q _112897 pat e q f arg) a). Qed.
Lemma lem8345833 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (_112897 pat e q f arg a) = (term2539 A B D P Q _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8345827 A B D P Q _112897 pat e q f arg a) (@lem8345831 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8345834 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2643 A B D P Q t'' pat e q f arg a) = (term2644 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345704 B) (@lem8345780 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345835 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term2640 A B D P Q t'' pat e q f arg a) = (_112897 pat e q f arg a)) = ((term2642 A B D P Q t'' pat e q f arg a) = (term2539 A B D P Q _112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8345834 A B D P Q t'' pat e q f arg a) (@lem8345833 A B D P Q _112897 pat e q f arg a)). Qed.
Lemma lem8345852 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345853 {A B D P Q : Type'} (f : type907 A B D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345852 (Q -> D) (type900 A B D P Q) f x). Qed.
Lemma lem8345854 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) : (t'' pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat).
Proof. exact (@lem8345853 A B D P Q t'' pat). Qed.
Lemma lem8345855 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8345856 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e).
Proof. exact (MK_COMB (@lem8345854 A B D P Q t'' pat) (@lem8345855 D P e)). Qed.
Lemma lem8345858 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345859 {A B D P Q : Type'} (f : type900 A B D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345858 (P -> D) (type882 A B P Q) f x). Qed.
Lemma lem8345860 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (@lem8345859 A B D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat) e). Qed.
Lemma lem8345861 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (TRANS (@lem8345856 A B D P Q t'' pat e) (@lem8345860 A B D P Q t'' pat e)). Qed.
Lemma lem8345862 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8345863 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2628 A B D P Q t'' pat e q).
Proof. exact (MK_COMB (@lem8345861 A B D P Q t'' pat e) (@lem8345862 P Q q)). Qed.
Lemma lem8345865 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345866 {A B P Q : Type'} (f : type882 A B P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345865 (type1413 P Q) (type535 A B P Q) f x). Qed.
Lemma lem8345867 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2628 A B D P Q t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (@lem8345866 A B P Q (term2627 A B D P Q t'' pat e) q). Qed.
Lemma lem8345868 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (TRANS (@lem8345863 A B D P Q t'' pat e q) (@lem8345867 A B D P Q t'' pat e q)). Qed.
Lemma lem8345869 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345870 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2630 A B D P Q t'' pat e q f).
Proof. exact (MK_COMB (@lem8345868 A B D P Q t'' pat e q) (@lem8345869 A B f)). Qed.
Lemma lem8345872 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345873 {A B P Q : Type'} (f : type535 A B P Q) (x : A -> B) : (f x) = (@I ((A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345872 (A -> B) (type765 A P Q) f x). Qed.
Lemma lem8345874 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2630 A B D P Q t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (@lem8345873 A B P Q (term2629 A B D P Q t'' pat e q) f). Qed.
Lemma lem8345875 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (TRANS (@lem8345870 A B D P Q t'' pat e q f) (@lem8345874 A B D P Q t'' pat e q f)). Qed.
Lemma lem8345876 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8345877 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2632 A B D P Q t'' pat e q f arg).
Proof. exact (MK_COMB (@lem8345875 A B D P Q t'' pat e q f) (@lem8345876 A P Q arg)). Qed.
Lemma lem8345879 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345880 {A P Q : Type'} (f : type765 A P Q) (x : type1475 A P Q) : (f x) = (@I ((P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345879 (type1475 A P Q) (P -> Q) f x). Qed.
Lemma lem8345881 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2632 A B D P Q t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (@lem8345880 A P Q (term2631 A B D P Q t'' pat e q f) arg). Qed.
Lemma lem8345882 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (TRANS (@lem8345877 A B D P Q t'' pat e q f arg) (@lem8345881 A B D P Q t'' pat e q f arg)). Qed.
Lemma lem8345883 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345884 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2634 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345882 A B D P Q t'' pat e q f arg) (@lem8345883 P a)). Qed.
Lemma lem8345886 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345887 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8345886 P Q f x). Qed.
Lemma lem8345888 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2634 A B D P Q t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345887 P Q (term2633 A B D P Q t'' pat e q f arg) a). Qed.
Lemma lem8345890 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345884 A B D P Q t'' pat e q f arg a) (@lem8345888 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345891 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (q a).
Proof. exact (eq_refl (q a)). Qed.
Lemma lem8345892 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2645 A B D P Q t'' pat e q f arg a) = (term2646 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345891 P Q q a) (@lem8345890 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345894 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345895 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8345894 P (Q -> Prop) f x). Qed.
Lemma lem8345896 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8345895 P Q q a). Qed.
Lemma lem8345897 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2635 A B D P Q t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (eq_refl (term2635 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345898 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2646 A B D P Q t'' pat e q f arg a) = (term2647 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345896 P Q q a) (@lem8345897 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345900 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345901 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8345900 Q Prop f x). Qed.
Lemma lem8345902 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2647 A B D P Q t'' pat e q f arg a) = (term2648 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345901 Q (@I (P -> Q -> Prop) q a) (term2635 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345903 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2646 A B D P Q t'' pat e q f arg a) = (term2648 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345898 A B D P Q t'' pat e q f arg a) (@lem8345902 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345904 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2645 A B D P Q t'' pat e q f arg a) = (term2648 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345892 A B D P Q t'' pat e q f arg a) (@lem8345903 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345905 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345906 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2649 A B D P Q t'' pat e q f arg a) = (term2650 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345905) (@lem8345904 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345907 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2651 A B D P Q t'' _112897 pat e q f arg a) = (term2652 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8345906 A B D P Q t'' pat e q f arg a) (@lem8345835 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8345908 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8345909 {D Q : Type'} (pat : Q -> D) : pat = pat.
Proof. exact (eq_refl pat). Qed.
Lemma lem8345924 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345925 {A B D P Q : Type'} (f : type907 A B D P Q) (x : Q -> D) : (f x) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345924 (Q -> D) (type900 A B D P Q) f x). Qed.
Lemma lem8345926 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) : (t'' pat) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat).
Proof. exact (@lem8345925 A B D P Q t'' pat). Qed.
Lemma lem8345927 {D P : Type'} (e : P -> D) : e = e.
Proof. exact (eq_refl e). Qed.
Lemma lem8345928 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e).
Proof. exact (MK_COMB (@lem8345926 A B D P Q t'' pat) (@lem8345927 D P e)). Qed.
Lemma lem8345930 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345931 {A B D P Q : Type'} (f : type900 A B D P Q) (x : P -> D) : (f x) = (@I ((P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345930 (P -> D) (type882 A B P Q) f x). Qed.
Lemma lem8345932 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (@lem8345931 A B D P Q (@I ((Q -> D) -> (P -> D) -> (P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) t'' pat) e). Qed.
Lemma lem8345933 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) : (t'' pat e) = (term2627 A B D P Q t'' pat e).
Proof. exact (TRANS (@lem8345928 A B D P Q t'' pat e) (@lem8345932 A B D P Q t'' pat e)). Qed.
Lemma lem8345934 {P Q : Type'} (q : type1413 P Q) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem8345935 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2628 A B D P Q t'' pat e q).
Proof. exact (MK_COMB (@lem8345933 A B D P Q t'' pat e) (@lem8345934 P Q q)). Qed.
Lemma lem8345937 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345938 {A B P Q : Type'} (f : type882 A B P Q) (x : type1413 P Q) : (f x) = (@I ((P -> Q -> Prop) -> (A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345937 (type1413 P Q) (type535 A B P Q) f x). Qed.
Lemma lem8345939 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2628 A B D P Q t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (@lem8345938 A B P Q (term2627 A B D P Q t'' pat e) q). Qed.
Lemma lem8345940 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (t'' pat e q) = (term2629 A B D P Q t'' pat e q).
Proof. exact (TRANS (@lem8345935 A B D P Q t'' pat e q) (@lem8345939 A B D P Q t'' pat e q)). Qed.
Lemma lem8345941 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345942 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2630 A B D P Q t'' pat e q f).
Proof. exact (MK_COMB (@lem8345940 A B D P Q t'' pat e q) (@lem8345941 A B f)). Qed.
Lemma lem8345944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345945 {A B P Q : Type'} (f : type535 A B P Q) (x : A -> B) : (f x) = (@I ((A -> B) -> (P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345944 (A -> B) (type765 A P Q) f x). Qed.
Lemma lem8345946 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2630 A B D P Q t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (@lem8345945 A B P Q (term2629 A B D P Q t'' pat e q) f). Qed.
Lemma lem8345947 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (t'' pat e q f) = (term2631 A B D P Q t'' pat e q f).
Proof. exact (TRANS (@lem8345942 A B D P Q t'' pat e q f) (@lem8345946 A B D P Q t'' pat e q f)). Qed.
Lemma lem8345948 {A P Q : Type'} (arg : type1475 A P Q) : arg = arg.
Proof. exact (eq_refl arg). Qed.
Lemma lem8345949 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2632 A B D P Q t'' pat e q f arg).
Proof. exact (MK_COMB (@lem8345947 A B D P Q t'' pat e q f) (@lem8345948 A P Q arg)). Qed.
Lemma lem8345951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345952 {A P Q : Type'} (f : type765 A P Q) (x : type1475 A P Q) : (f x) = (@I ((P -> Q -> A) -> P -> Q) f x).
Proof. exact (@lem8345951 (type1475 A P Q) (P -> Q) f x). Qed.
Lemma lem8345953 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2632 A B D P Q t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (@lem8345952 A P Q (term2631 A B D P Q t'' pat e q f) arg). Qed.
Lemma lem8345954 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (t'' pat e q f arg) = (term2633 A B D P Q t'' pat e q f arg).
Proof. exact (TRANS (@lem8345949 A B D P Q t'' pat e q f arg) (@lem8345953 A B D P Q t'' pat e q f arg)). Qed.
Lemma lem8345955 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8345956 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2634 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345954 A B D P Q t'' pat e q f arg) (@lem8345955 P a)). Qed.
Lemma lem8345958 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345959 {P Q : Type'} (f : P -> Q) (x : P) : (f x) = (@I (P -> Q) f x).
Proof. exact (@lem8345958 P Q f x). Qed.
Lemma lem8345960 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2634 A B D P Q t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345959 P Q (term2633 A B D P Q t'' pat e q f arg) a). Qed.
Lemma lem8345962 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (t'' pat e q f arg a) = (term2635 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345956 A B D P Q t'' pat e q f arg a) (@lem8345960 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345963 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2653 A B D P Q t'' pat e q f arg a) = (term2654 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345909 D Q pat) (@lem8345962 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345965 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345966 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8345965 Q D f x). Qed.
Lemma lem8345967 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2654 A B D P Q t'' pat e q f arg a) = (term2655 A B D P Q t'' pat e q f arg a).
Proof. exact (@lem8345966 D Q pat (term2635 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345968 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2653 A B D P Q t'' pat e q f arg a) = (term2655 A B D P Q t'' pat e q f arg a).
Proof. exact (TRANS (@lem8345963 A B D P Q t'' pat e q f arg a) (@lem8345967 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345973 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345974 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8345973 P D f x). Qed.
Lemma lem8345976 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8345974 D P e a). Qed.
Lemma lem8345977 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2656 A B D P Q t'' pat e q f arg a) = (term2657 A B D P Q t'' pat e q f arg a).
Proof. exact (MK_COMB (@lem8345908 D) (@lem8345968 A B D P Q t'' pat e q f arg a)). Qed.
Lemma lem8345978 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (a : P) : ((term2653 A B D P Q t'' pat e q f arg a) = (e a)) = ((term2655 A B D P Q t'' pat e q f arg a) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8345977 A B D P Q t'' pat e q f arg a) (@lem8345976 D P e a)). Qed.
Lemma lem8345979 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8345980 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (a : P) : (term2658 A B D P Q t'' pat q f arg e a) = (term2659 A B D P Q t'' pat q f arg e a).
Proof. exact (MK_COMB (@lem8345979) (@lem8345978 A B D P Q t'' pat q f arg e a)). Qed.
Lemma lem8345981 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2660 A B D P Q t'' _112897 pat e q f arg a) = (term2661 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8345980 A B D P Q t'' pat q f arg e a) (@lem8345907 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8345982 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8345983 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8345984 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8345991 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345992 {A P Q : Type'} (f : type1475 A P Q) (x : P) : (f x) = (@I (P -> Q -> A) f x).
Proof. exact (@lem8345991 P (Q -> A) f x). Qed.
Lemma lem8345993 {A P Q : Type'} (arg : type1475 A P Q) (a : P) : (arg a) = (@I (P -> Q -> A) arg a).
Proof. exact (@lem8345992 A P Q arg a). Qed.
Lemma lem8345994 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8345995 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (@I (P -> Q -> A) arg a t).
Proof. exact (MK_COMB (@lem8345993 A P Q arg a) (@lem8345994 Q t)). Qed.
Lemma lem8345997 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8345998 {A Q : Type'} (f : Q -> A) (x : Q) : (f x) = (@I (Q -> A) f x).
Proof. exact (@lem8345997 Q A f x). Qed.
Lemma lem8345999 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (@I (P -> Q -> A) arg a t) = (term2491 A P Q arg a t).
Proof. exact (@lem8345998 A Q (@I (P -> Q -> A) arg a) t). Qed.
Lemma lem8346001 {A P Q : Type'} (arg : type1475 A P Q) (a : P) (t : Q) : (arg a t) = (term2491 A P Q arg a t).
Proof. exact (TRANS (@lem8345995 A P Q arg a t) (@lem8345999 A P Q arg a t)). Qed.
Lemma lem8346002 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term77 A B P Q f arg a t) = (term2662 A B P Q f arg a t).
Proof. exact (MK_COMB (@lem8345984 A B f) (@lem8346001 A P Q arg a t)). Qed.
Lemma lem8346004 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8346005 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8346004 A B f x). Qed.
Lemma lem8346006 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term2662 A B P Q f arg a t) = (term2663 A B P Q f arg a t).
Proof. exact (@lem8346005 A B f (term2491 A P Q arg a t)). Qed.
Lemma lem8346007 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term77 A B P Q f arg a t) = (term2663 A B P Q f arg a t).
Proof. exact (TRANS (@lem8346002 A B P Q f arg a t) (@lem8346006 A B P Q f arg a t)). Qed.
Lemma lem8346008 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8346009 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) : (term909 A B P Q f arg a t) = (term2664 A B P Q f arg a t).
Proof. exact (MK_COMB (@lem8345983 B) (@lem8346007 A B P Q f arg a t)). Qed.
Lemma lem8346010 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : ((term77 A B P Q f arg a t) = x) = ((term2663 A B P Q f arg a t) = x).
Proof. exact (MK_COMB (@lem8346009 A B P Q f arg a t) (@lem8346008 B x)). Qed.
Lemma lem8346011 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term918 A B P Q f arg a t x) = (term2665 A B P Q f arg a t x).
Proof. exact (MK_COMB (@lem8345982) (@lem8346010 A B P Q f arg a t x)). Qed.
Lemma lem8346012 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8346019 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8346020 {P Q : Type'} (f : type1413 P Q) (x : P) : (f x) = (@I (P -> Q -> Prop) f x).
Proof. exact (@lem8346019 P (Q -> Prop) f x). Qed.
Lemma lem8346021 {P Q : Type'} (q : type1413 P Q) (a : P) : (q a) = (@I (P -> Q -> Prop) q a).
Proof. exact (@lem8346020 P Q q a). Qed.
Lemma lem8346022 {Q : Type'} (t : Q) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8346023 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (@I (P -> Q -> Prop) q a t).
Proof. exact (MK_COMB (@lem8346021 P Q q a) (@lem8346022 Q t)). Qed.
Lemma lem8346025 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8346026 {Q : Type'} (f : Q -> Prop) (x : Q) : (f x) = (@I (Q -> Prop) f x).
Proof. exact (@lem8346025 Q Prop f x). Qed.
Lemma lem8346027 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (@I (P -> Q -> Prop) q a t) = (term2472 P Q q a t).
Proof. exact (@lem8346026 Q (@I (P -> Q -> Prop) q a) t). Qed.
Lemma lem8346029 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (q a t) = (term2472 P Q q a t).
Proof. exact (TRANS (@lem8346023 P Q q a t) (@lem8346027 P Q q a t)). Qed.
Lemma lem8346030 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term955 P Q q a t) = (term2473 P Q q a t).
Proof. exact (MK_COMB (@lem8346012) (@lem8346029 P Q q a t)). Qed.
Lemma lem8346031 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8346032 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term409 P Q q a t) = (term2494 P Q q a t).
Proof. exact (MK_COMB (@lem8346031) (@lem8346030 P Q q a t)). Qed.
Lemma lem8346033 {A B P Q : Type'} (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term437 A B P Q q f arg a t x) = (term2666 A B P Q q f arg a t x).
Proof. exact (MK_COMB (@lem8346032 P Q q a t) (@lem8346011 A B P Q f arg a t x)). Qed.
Lemma lem8346034 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8346035 {D : Type'} : (@eq D) = (@eq D).
Proof. exact (eq_refl (@eq D)). Qed.
Lemma lem8346040 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8346041 {D Q : Type'} (f : Q -> D) (x : Q) : (f x) = (@I (Q -> D) f x).
Proof. exact (@lem8346040 Q D f x). Qed.
Lemma lem8346043 {D Q : Type'} (pat : Q -> D) (t : Q) : (pat t) = (@I (Q -> D) pat t).
Proof. exact (@lem8346041 D Q pat t). Qed.
Lemma lem8346048 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8346049 {D P : Type'} (f : P -> D) (x : P) : (f x) = (@I (P -> D) f x).
Proof. exact (@lem8346048 P D f x). Qed.
Lemma lem8346051 {D P : Type'} (e : P -> D) (a : P) : (e a) = (@I (P -> D) e a).
Proof. exact (@lem8346049 D P e a). Qed.
Lemma lem8346052 {D Q : Type'} (pat : Q -> D) (t : Q) : (term2474 D Q pat t) = (term2475 D Q pat t).
Proof. exact (MK_COMB (@lem8346035 D) (@lem8346043 D Q pat t)). Qed.
Lemma lem8346053 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : ((pat t) = (e a)) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (MK_COMB (@lem8346052 D Q pat t) (@lem8346051 D P e a)). Qed.
Lemma lem8346054 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term952 D P Q pat t e a) = (term2476 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8346034) (@lem8346053 D P Q pat t e a)). Qed.
Lemma lem8346055 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8346056 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term413 D P Q pat t e a) = (term2477 D P Q pat t e a).
Proof. exact (MK_COMB (@lem8346055) (@lem8346054 D P Q pat t e a)). Qed.
Lemma lem8346057 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term439 A B D P Q pat e q f arg a t x) = (term2667 A B D P Q pat e q f arg a t x).
Proof. exact (MK_COMB (@lem8346056 D P Q pat t e a) (@lem8346033 A B P Q q f arg a t x)). Qed.
Lemma lem8346058 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term449 A B D P Q pat e q f arg a x) = (term2668 A B D P Q pat e q f arg a x).
Proof. exact (fun_ext (fun t : Q => @lem8346057 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8346059 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346060 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term450 A B D P Q pat e q f arg a x) = (term2669 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8346059 Q) (@lem8346058 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8346061 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term495 A B D P Q pat e q f arg a) = (term2670 A B D P Q pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8346060 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8346062 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8346063 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term497 A B D P Q pat e q f arg a) = (term2671 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8346062 B) (@lem8346061 A B D P Q pat e q f arg a)). Qed.
Lemma lem8346064 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8346065 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term499 A B D P Q pat e q f arg a) = (term2672 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8346064) (@lem8346063 A B D P Q pat e q f arg a)). Qed.
Lemma lem8346066 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2673 A B D P Q t'' _112897 pat e q f arg a) = (term2674 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8346065 A B D P Q pat e q f arg a) (@lem8345981 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8346067 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2675 A B D P Q t'' _112897 pat e q f arg) = (term2676 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8346066 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8346068 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346069 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2677 A B D P Q t'' _112897 pat e q f arg) = (term2678 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8346068 P) (@lem8346067 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8346070 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2679 A B D P Q t'' _112897 pat e q f) = (term2680 A B D P Q t'' _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8346069 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8346071 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8346072 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2681 A B D P Q t'' _112897 pat e q f) = (term2682 A B D P Q t'' _112897 pat e q f).
Proof. exact (MK_COMB (@lem8346071 A P Q) (@lem8346070 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8346073 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2683 A B D P Q t'' _112897 pat e q) = (term2684 A B D P Q t'' _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8346072 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8346074 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8346075 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2685 A B D P Q t'' _112897 pat e q) = (term2686 A B D P Q t'' _112897 pat e q).
Proof. exact (MK_COMB (@lem8346074 A B) (@lem8346073 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8346076 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2687 A B D P Q t'' _112897 pat e) = (term2688 A B D P Q t'' _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8346075 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8346077 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8346078 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2689 A B D P Q t'' _112897 pat e) = (term2690 A B D P Q t'' _112897 pat e).
Proof. exact (MK_COMB (@lem8346077 P Q) (@lem8346076 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8346079 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term2691 A B D P Q t'' _112897 pat) = (term2692 A B D P Q t'' _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8346078 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8346080 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8346081 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term1862 A B D P Q t'' _112897 pat) = (term2693 A B D P Q t'' _112897 pat).
Proof. exact (MK_COMB (@lem8346080 D P) (@lem8346079 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8346082 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term1864 A B D P Q t'' _112897) = (term2694 A B D P Q t'' _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8346081 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8346083 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8346084 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term1866 A B D P Q t'' _112897) = (term2695 A B D P Q t'' _112897).
Proof. exact (MK_COMB (@lem8346083 D Q) (@lem8346082 A B D P Q t'' _112897)). Qed.
Lemma lem8346085 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2695 A B D P Q t'' _112897.
Proof. exact (EQ_MP (@lem8346084 A B D P Q t'' _112897) (@lem8344350 A B D P Q t'' _112897 h1)). Qed.
Lemma lem8346086 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a.
Proof. exact (h1). Qed.
Lemma lem8346087 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2572 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a') : term2572 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8346089 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2576 A B D P Q p f t lt2 y arg _112896 pat e q a.
Proof. exact (proj1 (@lem8346086 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8346091 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2553 A B D P Q p f pat e q a t.
Proof. exact (proj1 (@lem8346089 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8346092 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2550 D P Q pat e q a t.
Proof. exact (proj2 (@lem8346091 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8346096 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2570 A B D P Q lt2 s f p g pat e q a' t'.
Proof. exact (h1). Qed.
Lemma lem8346097 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8346098 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2560 A B D P Q f p g pat e q a' t'.
Proof. exact (proj2 (@lem8346096 A B D P Q lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8346099 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2568 A B P lt2 s a' f g.
Proof. exact (proj1 (@lem8346096 A B D P Q lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8346100 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2558 A B D P Q f t' p g pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8346101 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2556 A B D P Q f p g pat e q a' t'.
Proof. exact (h1). Qed.
Lemma lem8346102 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2554 A B D P Q p g pat e q a'.
Proof. exact (proj2 (@lem8346100 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8346103 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2553 A B D P Q p f pat e q a' t'.
Proof. exact (proj1 (@lem8346100 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8346104 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2550 D P Q pat e q a' t'.
Proof. exact (proj2 (@lem8346103 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8346109 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2480 D P Q pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8346110 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2553 A B D P Q p g pat e q a' t'.
Proof. exact (proj2 (@lem8346101 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8346111 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2554 A B D P Q p f pat e q a'.
Proof. exact (proj1 (@lem8346101 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8346112 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2550 D P Q pat e q a' t'.
Proof. exact (proj2 (@lem8346110 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8346117 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2480 D P Q pat e q a'.
Proof. exact (h1). Qed.
Lemma lem8346118 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2548 A B D P Q p _112897 f arg _112896 pat e q a'.
Proof. exact (proj2 (@lem8346097 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8346119 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2550 D P Q pat e q a' t'.
Proof. exact (proj1 (@lem8346097 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8346125 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1683 A P Q) = (term1682 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8346126 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term1683 Q P Q') = (term1682 Q P Q').
Proof. exact (@lem8346125 Q P Q'). Qed.
Lemma lem8346127 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2696 D P Q _112896 pat e q a) = (term2697 D P Q _112896 pat e q a).
Proof. exact (@lem8346126 Q (term2479 D P Q pat e q a) (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8346128 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2698 D P Q pat e q a x) = (term2478 D P Q pat e q a x).
Proof. exact (eq_refl (term2698 D P Q pat e q a x)). Qed.
Lemma lem8346129 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2699 D P Q pat e q a) = (term2479 D P Q pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8346128 D P Q pat e q a x)). Qed.
Lemma lem8346130 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346131 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2700 D P Q pat e q a) = (term2480 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8346130 Q) (@lem8346129 D P Q pat e q a)). Qed.
Lemma lem8346132 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8346133 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2701 D P Q pat e q a) = (term2481 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8346132) (@lem8346131 D P Q pat e q a)). Qed.
Lemma lem8346134 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2471 D P Q _112896 pat e q a) = (term2471 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8346135 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2696 D P Q _112896 pat e q a) = (term2482 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8346133 D P Q pat e q a) (@lem8346134 D P Q _112896 pat e q a)). Qed.
Lemma lem8346136 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8346137 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2702 D P Q _112896 pat e q a) = (term2703 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8346136) (@lem8346135 D P Q _112896 pat e q a)). Qed.
Lemma lem8346138 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2698 D P Q pat e q a x) = (term2478 D P Q pat e q a x).
Proof. exact (eq_refl (term2698 D P Q pat e q a x)). Qed.
Lemma lem8346139 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8346140 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2704 D P Q pat e q a x) = (term2705 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8346139) (@lem8346138 D P Q pat e q a x)). Qed.
Lemma lem8346141 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2471 D P Q _112896 pat e q a) = (term2471 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8346142 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2706 D P Q x _112896 pat e q a) = (term2707 D P Q x _112896 pat e q a).
Proof. exact (MK_COMB (@lem8346140 D P Q pat e q a x) (@lem8346141 D P Q _112896 pat e q a)). Qed.
Lemma lem8346143 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2708 D P Q _112896 pat e q a) = (term2709 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8346142 D P Q x _112896 pat e q a)). Qed.
Lemma lem8346144 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346145 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2697 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8346144 Q) (@lem8346143 D P Q _112896 pat e q a)). Qed.
Lemma lem8346146 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2696 D P Q _112896 pat e q a) = (term2697 D P Q _112896 pat e q a)) = ((term2482 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8346137 D P Q _112896 pat e q a) (@lem8346145 D P Q _112896 pat e q a)). Qed.
Lemma lem8346147 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2482 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a).
Proof. exact (EQ_MP (@lem8346146 D P Q _112896 pat e q a) (@lem8346127 D P Q _112896 pat e q a)). Qed.
Lemma lem8346148 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2483 D P Q _112896 pat e q) = (term2711 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8346147 D P Q _112896 pat e q a)). Qed.
Lemma lem8346149 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346150 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2484 D P Q _112896 pat e q) = (term2712 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8346149 P) (@lem8346148 D P Q _112896 pat e q)). Qed.
Lemma lem8346151 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2485 D P Q _112896 pat e) = (term2713 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8346150 D P Q _112896 pat e q)). Qed.
Lemma lem8346152 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8346153 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2486 D P Q _112896 pat e) = (term2714 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8346152 P Q) (@lem8346151 D P Q _112896 pat e)). Qed.
Lemma lem8346154 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2487 D P Q _112896 pat) = (term2715 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8346153 D P Q _112896 pat e)). Qed.
Lemma lem8346155 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8346156 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2488 D P Q _112896 pat) = (term2716 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8346155 D P) (@lem8346154 D P Q _112896 pat)). Qed.
Lemma lem8346157 {D P Q : Type'} (_112896 : type885 D P Q) : (term2489 D P Q _112896) = (term2717 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8346156 D P Q _112896 pat)). Qed.
Lemma lem8346158 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8346159 {D P Q : Type'} (_112896 : type885 D P Q) : (term2490 D P Q _112896) = (term2718 D P Q _112896).
Proof. exact (MK_COMB (@lem8346158 D Q) (@lem8346157 D P Q _112896)). Qed.
Lemma lem8346182 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2707 D P Q x _112896 pat e q a) = (term2719 D P Q x _112896 pat e q a).
Proof. exact (@lem19490 ((term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a)) (term2478 D P Q pat e q a x) (term2466 D P Q _112896 pat e q a)). Qed.
Lemma lem8346183 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2709 D P Q _112896 pat e q a) = (term2720 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8346182 D P Q x _112896 pat e q a)). Qed.
Lemma lem8346184 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346185 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2710 D P Q _112896 pat e q a) = (term2721 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8346184 Q) (@lem8346183 D P Q _112896 pat e q a)). Qed.
Lemma lem8346186 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2711 D P Q _112896 pat e q) = (term2722 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8346185 D P Q _112896 pat e q a)). Qed.
Lemma lem8346187 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346188 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2712 D P Q _112896 pat e q) = (term2723 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8346187 P) (@lem8346186 D P Q _112896 pat e q)). Qed.
Lemma lem8346189 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2713 D P Q _112896 pat e) = (term2724 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8346188 D P Q _112896 pat e q)). Qed.
Lemma lem8346190 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8346191 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2714 D P Q _112896 pat e) = (term2725 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8346190 P Q) (@lem8346189 D P Q _112896 pat e)). Qed.
Lemma lem8346192 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2715 D P Q _112896 pat) = (term2726 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8346191 D P Q _112896 pat e)). Qed.
Lemma lem8346193 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8346194 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2716 D P Q _112896 pat) = (term2727 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8346193 D P) (@lem8346192 D P Q _112896 pat)). Qed.
Lemma lem8346195 {D P Q : Type'} (_112896 : type885 D P Q) : (term2717 D P Q _112896) = (term2728 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8346194 D P Q _112896 pat)). Qed.
Lemma lem8346196 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8346197 {D P Q : Type'} (_112896 : type885 D P Q) : (term2718 D P Q _112896) = (term2729 D P Q _112896).
Proof. exact (MK_COMB (@lem8346196 D Q) (@lem8346195 D P Q _112896)). Qed.
Lemma lem8346198 {D P Q : Type'} (_112896 : type885 D P Q) : (term2490 D P Q _112896) = (term2729 D P Q _112896).
Proof. exact (TRANS (@lem8346159 D P Q _112896) (@lem8346197 D P Q _112896)). Qed.
Lemma lem8346199 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2729 D P Q _112896.
Proof. exact (EQ_MP (@lem8346198 D P Q _112896) (@lem8344519 D P Q _112896 h1)). Qed.
Lemma lem8346247 {A : Type'} (P : Prop) (Q : A -> Prop) : (term520 A P Q) = (term519 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8346248 {A : Type'} (P : Prop) (Q : A -> Prop) : (term520 A P Q) = (term519 A P Q).
Proof. exact (@lem8346247 A P Q). Qed.
Lemma lem8346249 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2730 A B D P Q p f q pat e arg t lt2 s a) = (term2731 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (@lem8346248 A (term2522 A B D P Q p f q pat t e a) (term2519 A P Q arg t lt2 s a)). Qed.
Lemma lem8346250 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2732 A P Q arg t lt2 s a y) = (term2518 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term2732 A P Q arg t lt2 s a y)). Qed.
Lemma lem8346251 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2733 A P Q arg t lt2 s a) = (term2519 A P Q arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8346250 A P Q arg t lt2 y s a)). Qed.
Lemma lem8346252 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8346253 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2734 A P Q arg t lt2 s a) = (term2520 A P Q arg t lt2 s a).
Proof. exact (MK_COMB (@lem8346252 A) (@lem8346251 A P Q arg t lt2 s a)). Qed.
Lemma lem8346254 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term2523 A B D P Q p f q pat t e a) = (term2523 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term2523 A B D P Q p f q pat t e a)). Qed.
Lemma lem8346255 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2730 A B D P Q p f q pat e arg t lt2 s a) = (term2524 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8346254 A B D P Q p f q pat t e a) (@lem8346253 A P Q arg t lt2 s a)). Qed.
Lemma lem8346256 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8346257 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2735 A B D P Q p f q pat e arg t lt2 s a) = (term2736 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8346256) (@lem8346255 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346258 {A P Q : Type'} (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2732 A P Q arg t lt2 s a y) = (term2518 A P Q arg t lt2 y s a).
Proof. exact (eq_refl (term2732 A P Q arg t lt2 s a y)). Qed.
Lemma lem8346259 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term2523 A B D P Q p f q pat t e a) = (term2523 A B D P Q p f q pat t e a).
Proof. exact (eq_refl (term2523 A B D P Q p f q pat t e a)). Qed.
Lemma lem8346260 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2737 A B D P Q p f q pat e arg t lt2 s a y) = (term2738 A B D P Q p f q pat e arg t lt2 y s a).
Proof. exact (MK_COMB (@lem8346259 A B D P Q p f q pat t e a) (@lem8346258 A P Q arg t lt2 y s a)). Qed.
Lemma lem8346261 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2739 A B D P Q p f q pat e arg t lt2 s a) = (term2740 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8346260 A B D P Q p f q pat e arg t lt2 y s a)). Qed.
Lemma lem8346262 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8346263 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2731 A B D P Q p f q pat e arg t lt2 s a) = (term2741 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8346262 A) (@lem8346261 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346264 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term2730 A B D P Q p f q pat e arg t lt2 s a) = (term2731 A B D P Q p f q pat e arg t lt2 s a)) = ((term2524 A B D P Q p f q pat e arg t lt2 s a) = (term2741 A B D P Q p f q pat e arg t lt2 s a)).
Proof. exact (MK_COMB (@lem8346257 A B D P Q p f q pat e arg t lt2 s a) (@lem8346263 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346265 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2524 A B D P Q p f q pat e arg t lt2 s a) = (term2741 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (EQ_MP (@lem8346264 A B D P Q p f q pat e arg t lt2 s a) (@lem8346249 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346266 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2525 A B D P Q p f q pat e arg lt2 s a) = (term2742 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8346265 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346267 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346268 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2526 A B D P Q p f q pat e arg lt2 s a) = (term2743 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8346267 Q) (@lem8346266 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8346269 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2527 A B D P Q p f q pat e arg lt2 s) = (term2744 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8346268 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8346270 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346271 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2528 A B D P Q p f q pat e arg lt2 s) = (term2745 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8346270 P) (@lem8346269 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8346272 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2529 A B D P Q p q pat e arg lt2 s) = (term2746 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8346271 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8346273 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8346274 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2530 A B D P Q p q pat e arg lt2 s) = (term2747 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8346273 A B) (@lem8346272 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8346299 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2738 A B D P Q p f q pat e arg t lt2 y s a) = (term2738 A B D P Q p f q pat e arg t lt2 y s a).
Proof. exact (eq_refl (term2738 A B D P Q p f q pat e arg t lt2 y s a)). Qed.
Lemma lem8346300 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2740 A B D P Q p f q pat e arg t lt2 s a) = (term2740 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8346299 A B D P Q p f q pat e arg t lt2 y s a)). Qed.
Lemma lem8346301 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8346302 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (t : Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2741 A B D P Q p f q pat e arg t lt2 s a) = (term2741 A B D P Q p f q pat e arg t lt2 s a).
Proof. exact (MK_COMB (@lem8346301 A) (@lem8346300 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346303 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2742 A B D P Q p f q pat e arg lt2 s a) = (term2742 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (fun_ext (fun t : Q => @lem8346302 A B D P Q p f q pat e arg t lt2 s a)). Qed.
Lemma lem8346304 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8346305 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2743 A B D P Q p f q pat e arg lt2 s a) = (term2743 A B D P Q p f q pat e arg lt2 s a).
Proof. exact (MK_COMB (@lem8346304 Q) (@lem8346303 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8346306 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2744 A B D P Q p f q pat e arg lt2 s) = (term2744 A B D P Q p f q pat e arg lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8346305 A B D P Q p f q pat e arg lt2 s a)). Qed.
Lemma lem8346307 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346308 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2745 A B D P Q p f q pat e arg lt2 s) = (term2745 A B D P Q p f q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8346307 P) (@lem8346306 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8346309 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2746 A B D P Q p q pat e arg lt2 s) = (term2746 A B D P Q p q pat e arg lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8346308 A B D P Q p f q pat e arg lt2 s)). Qed.
Lemma lem8346310 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8346311 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2747 A B D P Q p q pat e arg lt2 s) = (term2747 A B D P Q p q pat e arg lt2 s).
Proof. exact (MK_COMB (@lem8346310 A B) (@lem8346309 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8346312 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2530 A B D P Q p q pat e arg lt2 s) = (term2747 A B D P Q p q pat e arg lt2 s).
Proof. exact (TRANS (@lem8346274 A B D P Q p q pat e arg lt2 s) (@lem8346311 A B D P Q p q pat e arg lt2 s)). Qed.
Lemma lem8346313 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2747 A B D P Q p q pat e arg lt2 s.
Proof. exact (EQ_MP (@lem8346312 A B D P Q p q pat e arg lt2 s) (@lem8344826 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8346742 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2617 A B P lt2 s z f p g a) = (term2748 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term2586 A B P f p g a) (term2613 A B P lt2 s z f g a) (term2582 A B P f p g a)). Qed.
Lemma lem8346749 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2749 A B P lt2 s z f p g a) = (term2750 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term2609 A B P lt2 z f g s a) (term2602 A B P z f g a) (term2582 A B P f p g a)). Qed.
Lemma lem8346756 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2751 A B P lt2 s z f p g a) = (term2752 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term2609 A B P lt2 z f g s a) (term2602 A B P z f g a) (term2586 A B P f p g a)). Qed.
Lemma lem8346757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8346758 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2753 A B P lt2 s z f p g a) = (term2754 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8346757) (@lem8346756 A B P lt2 s z f p g a)). Qed.
Lemma lem8346759 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2748 A B P lt2 s z f p g a) = (term2755 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8346758 A B P lt2 s z f p g a) (@lem8346749 A B P lt2 s z f p g a)). Qed.
Lemma lem8346761 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2617 A B P lt2 s z f p g a) = (term2755 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8346742 A B P lt2 s z f p g a) (@lem8346759 A B P lt2 s z f p g a)). Qed.
Lemma lem8346762 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2619 A B P lt2 s z f p g) = (term2756 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8346761 A B P lt2 s z f p g a)). Qed.
Lemma lem8346763 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8346764 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2621 A B P lt2 s z f p g) = (term2757 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8346763 P) (@lem8346762 A B P lt2 s z f p g)). Qed.
Lemma lem8346765 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2623 A B P lt2 s z f p) = (term2758 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8346764 A B P lt2 s z f p g)). Qed.
Lemma lem8346766 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8346767 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2624 A B P lt2 s z f p) = (term2759 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8346766 A B) (@lem8346765 A B P lt2 s z f p)). Qed.
Lemma lem8346768 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2625 A B P lt2 s z p) = (term2760 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8346767 A B P lt2 s z f p)). Qed.
Lemma lem8346769 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8346771 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2626 A B P lt2 s z p) = (term2761 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8346769 A B) (@lem8346768 A B P lt2 s z p)). Qed.
Lemma lem8346772 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2761 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8346771 A B P lt2 s z p) (@lem8345703 A B P lt2 s z p h1)). Qed.
Lemma lem8346915 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (z : A) : (term2566 A B P lt2 s a' f g z) = (term2566 A B P lt2 s a' f g z).
Proof. exact (eq_refl (term2566 A B P lt2 s a' f g z)). Qed.
Lemma lem8346916 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2567 A B P lt2 s a' f g) = (term2567 A B P lt2 s a' f g).
Proof. exact (fun_ext (fun z : A => @lem8346915 A B P lt2 s a' f g z)). Qed.
Lemma lem8346917 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8346919 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2568 A B P lt2 s a' f g) = (term2568 A B P lt2 s a' f g).
Proof. exact (MK_COMB (@lem8346917 A) (@lem8346916 A B P lt2 s a' f g)). Qed.
Lemma lem8346920 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2568 A B P lt2 s a' f g.
Proof. exact (EQ_MP (@lem8346919 A B P lt2 s a' f g) (@lem8346099 A B D P Q lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8346936 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term895 A B P p g a'.
Proof. exact (h1). Qed.
Lemma lem8347351 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t : Q) : (term2478 D P Q pat e q a' t) = (term2478 D P Q pat e q a' t).
Proof. exact (eq_refl (term2478 D P Q pat e q a' t)). Qed.
Lemma lem8347352 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2479 D P Q pat e q a') = (term2479 D P Q pat e q a').
Proof. exact (fun_ext (fun t : Q => @lem8347351 D P Q pat e q a' t)). Qed.
Lemma lem8347353 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8347355 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2480 D P Q pat e q a') = (term2480 D P Q pat e q a').
Proof. exact (MK_COMB (@lem8347353 Q) (@lem8347352 D P Q pat e q a')). Qed.
Lemma lem8347356 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2480 D P Q pat e q a'.
Proof. exact (EQ_MP (@lem8347355 D P Q pat e q a') (@lem8346109 D P Q pat e q a' h1)). Qed.
Lemma lem8347573 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2617 A B P lt2 s z f p g a) = (term2748 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term2586 A B P f p g a) (term2613 A B P lt2 s z f g a) (term2582 A B P f p g a)). Qed.
Lemma lem8347580 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2749 A B P lt2 s z f p g a) = (term2750 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term2609 A B P lt2 z f g s a) (term2602 A B P z f g a) (term2582 A B P f p g a)). Qed.
Lemma lem8347587 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2751 A B P lt2 s z f p g a) = (term2752 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term2609 A B P lt2 z f g s a) (term2602 A B P z f g a) (term2586 A B P f p g a)). Qed.
Lemma lem8347588 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8347589 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2753 A B P lt2 s z f p g a) = (term2754 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8347588) (@lem8347587 A B P lt2 s z f p g a)). Qed.
Lemma lem8347590 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2748 A B P lt2 s z f p g a) = (term2755 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8347589 A B P lt2 s z f p g a) (@lem8347580 A B P lt2 s z f p g a)). Qed.
Lemma lem8347592 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2617 A B P lt2 s z f p g a) = (term2755 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8347573 A B P lt2 s z f p g a) (@lem8347590 A B P lt2 s z f p g a)). Qed.
Lemma lem8347593 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2619 A B P lt2 s z f p g) = (term2756 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8347592 A B P lt2 s z f p g a)). Qed.
Lemma lem8347594 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8347595 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term2621 A B P lt2 s z f p g) = (term2757 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8347594 P) (@lem8347593 A B P lt2 s z f p g)). Qed.
Lemma lem8347596 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2623 A B P lt2 s z f p) = (term2758 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8347595 A B P lt2 s z f p g)). Qed.
Lemma lem8347597 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8347598 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term2624 A B P lt2 s z f p) = (term2759 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8347597 A B) (@lem8347596 A B P lt2 s z f p)). Qed.
Lemma lem8347599 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2625 A B P lt2 s z p) = (term2760 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8347598 A B P lt2 s z f p)). Qed.
Lemma lem8347600 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8347602 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term2626 A B P lt2 s z p) = (term2761 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8347600 A B) (@lem8347599 A B P lt2 s z p)). Qed.
Lemma lem8347603 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2761 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8347602 A B P lt2 s z p) (@lem8345703 A B P lt2 s z p h1)). Qed.
Lemma lem8347746 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (z : A) : (term2566 A B P lt2 s a' f g z) = (term2566 A B P lt2 s a' f g z).
Proof. exact (eq_refl (term2566 A B P lt2 s a' f g z)). Qed.
Lemma lem8347747 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2567 A B P lt2 s a' f g) = (term2567 A B P lt2 s a' f g).
Proof. exact (fun_ext (fun z : A => @lem8347746 A B P lt2 s a' f g z)). Qed.
Lemma lem8347748 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8347750 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) : (term2568 A B P lt2 s a' f g) = (term2568 A B P lt2 s a' f g).
Proof. exact (MK_COMB (@lem8347748 A) (@lem8347747 A B P lt2 s a' f g)). Qed.
Lemma lem8347751 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2568 A B P lt2 s a' f g.
Proof. exact (EQ_MP (@lem8347750 A B P lt2 s a' f g) (@lem8346099 A B D P Q lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8347767 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term895 A B P p f a'.
Proof. exact (h1). Qed.
Lemma lem8348182 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t : Q) : (term2478 D P Q pat e q a' t) = (term2478 D P Q pat e q a' t).
Proof. exact (eq_refl (term2478 D P Q pat e q a' t)). Qed.
Lemma lem8348183 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2479 D P Q pat e q a') = (term2479 D P Q pat e q a').
Proof. exact (fun_ext (fun t : Q => @lem8348182 D P Q pat e q a' t)). Qed.
Lemma lem8348184 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348186 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2480 D P Q pat e q a') = (term2480 D P Q pat e q a').
Proof. exact (MK_COMB (@lem8348184 Q) (@lem8348183 D P Q pat e q a')). Qed.
Lemma lem8348187 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2480 D P Q pat e q a'.
Proof. exact (EQ_MP (@lem8348186 D P Q pat e q a') (@lem8346117 D P Q pat e q a' h1)). Qed.
Lemma lem8348189 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1683 A P Q) = (term1682 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8348190 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term1683 Q P Q') = (term1682 Q P Q').
Proof. exact (@lem8348189 Q P Q'). Qed.
Lemma lem8348191 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2696 D P Q _112896 pat e q a) = (term2697 D P Q _112896 pat e q a).
Proof. exact (@lem8348190 Q (term2479 D P Q pat e q a) (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8348192 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2698 D P Q pat e q a x) = (term2478 D P Q pat e q a x).
Proof. exact (eq_refl (term2698 D P Q pat e q a x)). Qed.
Lemma lem8348193 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2699 D P Q pat e q a) = (term2479 D P Q pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8348192 D P Q pat e q a x)). Qed.
Lemma lem8348194 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348195 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2700 D P Q pat e q a) = (term2480 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8348194 Q) (@lem8348193 D P Q pat e q a)). Qed.
Lemma lem8348196 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348197 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2701 D P Q pat e q a) = (term2481 D P Q pat e q a).
Proof. exact (MK_COMB (@lem8348196) (@lem8348195 D P Q pat e q a)). Qed.
Lemma lem8348198 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2471 D P Q _112896 pat e q a) = (term2471 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8348199 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2696 D P Q _112896 pat e q a) = (term2482 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8348197 D P Q pat e q a) (@lem8348198 D P Q _112896 pat e q a)). Qed.
Lemma lem8348200 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8348201 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2702 D P Q _112896 pat e q a) = (term2703 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8348200) (@lem8348199 D P Q _112896 pat e q a)). Qed.
Lemma lem8348202 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2698 D P Q pat e q a x) = (term2478 D P Q pat e q a x).
Proof. exact (eq_refl (term2698 D P Q pat e q a x)). Qed.
Lemma lem8348203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348204 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (x : Q) : (term2704 D P Q pat e q a x) = (term2705 D P Q pat e q a x).
Proof. exact (MK_COMB (@lem8348203) (@lem8348202 D P Q pat e q a x)). Qed.
Lemma lem8348205 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2471 D P Q _112896 pat e q a) = (term2471 D P Q _112896 pat e q a).
Proof. exact (eq_refl (term2471 D P Q _112896 pat e q a)). Qed.
Lemma lem8348206 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2706 D P Q x _112896 pat e q a) = (term2707 D P Q x _112896 pat e q a).
Proof. exact (MK_COMB (@lem8348204 D P Q pat e q a x) (@lem8348205 D P Q _112896 pat e q a)). Qed.
Lemma lem8348207 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2708 D P Q _112896 pat e q a) = (term2709 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8348206 D P Q x _112896 pat e q a)). Qed.
Lemma lem8348208 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348209 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2697 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8348208 Q) (@lem8348207 D P Q _112896 pat e q a)). Qed.
Lemma lem8348210 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : ((term2696 D P Q _112896 pat e q a) = (term2697 D P Q _112896 pat e q a)) = ((term2482 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a)).
Proof. exact (MK_COMB (@lem8348201 D P Q _112896 pat e q a) (@lem8348209 D P Q _112896 pat e q a)). Qed.
Lemma lem8348211 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2482 D P Q _112896 pat e q a) = (term2710 D P Q _112896 pat e q a).
Proof. exact (EQ_MP (@lem8348210 D P Q _112896 pat e q a) (@lem8348191 D P Q _112896 pat e q a)). Qed.
Lemma lem8348212 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2483 D P Q _112896 pat e q) = (term2711 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8348211 D P Q _112896 pat e q a)). Qed.
Lemma lem8348213 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8348214 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2484 D P Q _112896 pat e q) = (term2712 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8348213 P) (@lem8348212 D P Q _112896 pat e q)). Qed.
Lemma lem8348215 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2485 D P Q _112896 pat e) = (term2713 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8348214 D P Q _112896 pat e q)). Qed.
Lemma lem8348216 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8348217 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2486 D P Q _112896 pat e) = (term2714 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8348216 P Q) (@lem8348215 D P Q _112896 pat e)). Qed.
Lemma lem8348218 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2487 D P Q _112896 pat) = (term2715 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8348217 D P Q _112896 pat e)). Qed.
Lemma lem8348219 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8348220 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2488 D P Q _112896 pat) = (term2716 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8348219 D P) (@lem8348218 D P Q _112896 pat)). Qed.
Lemma lem8348221 {D P Q : Type'} (_112896 : type885 D P Q) : (term2489 D P Q _112896) = (term2717 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8348220 D P Q _112896 pat)). Qed.
Lemma lem8348222 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8348223 {D P Q : Type'} (_112896 : type885 D P Q) : (term2490 D P Q _112896) = (term2718 D P Q _112896).
Proof. exact (MK_COMB (@lem8348222 D Q) (@lem8348221 D P Q _112896)). Qed.
Lemma lem8348246 {D P Q : Type'} (x : Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2707 D P Q x _112896 pat e q a) = (term2719 D P Q x _112896 pat e q a).
Proof. exact (@lem19490 ((term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a)) (term2478 D P Q pat e q a x) (term2466 D P Q _112896 pat e q a)). Qed.
Lemma lem8348247 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2709 D P Q _112896 pat e q a) = (term2720 D P Q _112896 pat e q a).
Proof. exact (fun_ext (fun x : Q => @lem8348246 D P Q x _112896 pat e q a)). Qed.
Lemma lem8348248 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348249 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2710 D P Q _112896 pat e q a) = (term2721 D P Q _112896 pat e q a).
Proof. exact (MK_COMB (@lem8348248 Q) (@lem8348247 D P Q _112896 pat e q a)). Qed.
Lemma lem8348250 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2711 D P Q _112896 pat e q) = (term2722 D P Q _112896 pat e q).
Proof. exact (fun_ext (fun a : P => @lem8348249 D P Q _112896 pat e q a)). Qed.
Lemma lem8348251 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8348252 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2712 D P Q _112896 pat e q) = (term2723 D P Q _112896 pat e q).
Proof. exact (MK_COMB (@lem8348251 P) (@lem8348250 D P Q _112896 pat e q)). Qed.
Lemma lem8348253 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2713 D P Q _112896 pat e) = (term2724 D P Q _112896 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8348252 D P Q _112896 pat e q)). Qed.
Lemma lem8348254 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8348255 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) : (term2714 D P Q _112896 pat e) = (term2725 D P Q _112896 pat e).
Proof. exact (MK_COMB (@lem8348254 P Q) (@lem8348253 D P Q _112896 pat e)). Qed.
Lemma lem8348256 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2715 D P Q _112896 pat) = (term2726 D P Q _112896 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8348255 D P Q _112896 pat e)). Qed.
Lemma lem8348257 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8348258 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) : (term2716 D P Q _112896 pat) = (term2727 D P Q _112896 pat).
Proof. exact (MK_COMB (@lem8348257 D P) (@lem8348256 D P Q _112896 pat)). Qed.
Lemma lem8348259 {D P Q : Type'} (_112896 : type885 D P Q) : (term2717 D P Q _112896) = (term2728 D P Q _112896).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8348258 D P Q _112896 pat)). Qed.
Lemma lem8348260 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8348261 {D P Q : Type'} (_112896 : type885 D P Q) : (term2718 D P Q _112896) = (term2729 D P Q _112896).
Proof. exact (MK_COMB (@lem8348260 D Q) (@lem8348259 D P Q _112896)). Qed.
Lemma lem8348262 {D P Q : Type'} (_112896 : type885 D P Q) : (term2490 D P Q _112896) = (term2729 D P Q _112896).
Proof. exact (TRANS (@lem8348223 D P Q _112896) (@lem8348261 D P Q _112896)). Qed.
Lemma lem8348263 {D P Q : Type'} (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2729 D P Q _112896.
Proof. exact (EQ_MP (@lem8348262 D P Q _112896) (@lem8344519 D P Q _112896 h1)). Qed.
Lemma lem8348295 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) (u : Q) : (term2499 A B D P Q p f pat e q t arg a u) = (term2499 A B D P Q p f pat e q t arg a u).
Proof. exact (eq_refl (term2499 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8348296 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term2500 A B D P Q p f pat e q t arg a) = (term2500 A B D P Q p f pat e q t arg a).
Proof. exact (fun_ext (fun u : Q => @lem8348295 A B D P Q p f pat e q t arg a u)). Qed.
Lemma lem8348297 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348298 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (t : Q) (arg : type1475 A P Q) (a : P) : (term2501 A B D P Q p f pat e q t arg a) = (term2501 A B D P Q p f pat e q t arg a).
Proof. exact (MK_COMB (@lem8348297 Q) (@lem8348296 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8348299 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term2502 A B D P Q p f pat e q arg a) = (term2502 A B D P Q p f pat e q arg a).
Proof. exact (fun_ext (fun t : Q => @lem8348298 A B D P Q p f pat e q t arg a)). Qed.
Lemma lem8348300 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348301 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (a : P) : (term2503 A B D P Q p f pat e q arg a) = (term2503 A B D P Q p f pat e q arg a).
Proof. exact (MK_COMB (@lem8348300 Q) (@lem8348299 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8348302 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term2504 A B D P Q p f pat e q arg) = (term2504 A B D P Q p f pat e q arg).
Proof. exact (fun_ext (fun a : P => @lem8348301 A B D P Q p f pat e q arg a)). Qed.
Lemma lem8348303 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8348304 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term2505 A B D P Q p f pat e q arg) = (term2505 A B D P Q p f pat e q arg).
Proof. exact (MK_COMB (@lem8348303 P) (@lem8348302 A B D P Q p f pat e q arg)). Qed.
Lemma lem8348305 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term2506 A B D P Q p pat e q arg) = (term2506 A B D P Q p pat e q arg).
Proof. exact (fun_ext (fun f : A -> B => @lem8348304 A B D P Q p f pat e q arg)). Qed.
Lemma lem8348306 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8348308 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term2507 A B D P Q p pat e q arg) = (term2507 A B D P Q p pat e q arg).
Proof. exact (MK_COMB (@lem8348306 A B) (@lem8348305 A B D P Q p pat e q arg)). Qed.
Lemma lem8348309 {A B D P Q : Type'} (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2507 A B D P Q p pat e q arg.
Proof. exact (EQ_MP (@lem8348308 A B D P Q p pat e q arg) (@lem8344683 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8348436 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1683 A P Q) = (term1682 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8348437 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1683 B P Q) = (term1682 B P Q).
Proof. exact (@lem8348436 B P Q). Qed.
Lemma lem8348438 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2762 A B D P Q t'' _112897 pat e q f arg a) = (term2763 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (@lem8348437 B (term2670 A B D P Q pat e q f arg a) (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348439 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2764 A B D P Q pat e q f arg a x) = (term2669 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term2764 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348440 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2765 A B D P Q pat e q f arg a) = (term2670 A B D P Q pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8348439 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348441 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8348442 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2766 A B D P Q pat e q f arg a) = (term2671 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8348441 B) (@lem8348440 A B D P Q pat e q f arg a)). Qed.
Lemma lem8348443 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348444 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2767 A B D P Q pat e q f arg a) = (term2672 A B D P Q pat e q f arg a).
Proof. exact (MK_COMB (@lem8348443) (@lem8348442 A B D P Q pat e q f arg a)). Qed.
Lemma lem8348445 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2661 A B D P Q t'' _112897 pat e q f arg a) = (term2661 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (eq_refl (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348446 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2762 A B D P Q t'' _112897 pat e q f arg a) = (term2674 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348444 A B D P Q pat e q f arg a) (@lem8348445 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8348448 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2768 A B D P Q t'' _112897 pat e q f arg a) = (term2769 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348447) (@lem8348446 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348449 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2764 A B D P Q pat e q f arg a x) = (term2669 A B D P Q pat e q f arg a x).
Proof. exact (eq_refl (term2764 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348450 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348451 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2770 A B D P Q pat e q f arg a x) = (term2771 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8348450) (@lem8348449 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348452 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2661 A B D P Q t'' _112897 pat e q f arg a) = (term2661 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (eq_refl (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348453 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2772 A B D P Q x t'' _112897 pat e q f arg a) = (term2773 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348451 A B D P Q pat e q f arg a x) (@lem8348452 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348454 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2774 A B D P Q t'' _112897 pat e q f arg a) = (term2775 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8348453 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348455 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8348456 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2763 A B D P Q t'' _112897 pat e q f arg a) = (term2776 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348455 B) (@lem8348454 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348457 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term2762 A B D P Q t'' _112897 pat e q f arg a) = (term2763 A B D P Q t'' _112897 pat e q f arg a)) = ((term2674 A B D P Q t'' _112897 pat e q f arg a) = (term2776 A B D P Q t'' _112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8348448 A B D P Q t'' _112897 pat e q f arg a) (@lem8348456 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348458 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2674 A B D P Q t'' _112897 pat e q f arg a) = (term2776 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8348457 A B D P Q t'' _112897 pat e q f arg a) (@lem8348438 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348460 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1683 A P Q) = (term1682 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8348461 {Q : Type'} (P : Q -> Prop) (Q' : Prop) : (term1683 Q P Q') = (term1682 Q P Q').
Proof. exact (@lem8348460 Q P Q'). Qed.
Lemma lem8348462 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2777 A B D P Q x t'' _112897 pat e q f arg a) = (term2778 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (@lem8348461 Q (term2668 A B D P Q pat e q f arg a x) (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348463 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term2779 A B D P Q pat e q f arg a x t) = (term2667 A B D P Q pat e q f arg a t x).
Proof. exact (eq_refl (term2779 A B D P Q pat e q f arg a x t)). Qed.
Lemma lem8348464 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2780 A B D P Q pat e q f arg a x) = (term2668 A B D P Q pat e q f arg a x).
Proof. exact (fun_ext (fun t : Q => @lem8348463 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8348465 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348466 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2781 A B D P Q pat e q f arg a x) = (term2669 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8348465 Q) (@lem8348464 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348467 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348468 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (x : B) : (term2782 A B D P Q pat e q f arg a x) = (term2771 A B D P Q pat e q f arg a x).
Proof. exact (MK_COMB (@lem8348467) (@lem8348466 A B D P Q pat e q f arg a x)). Qed.
Lemma lem8348469 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2661 A B D P Q t'' _112897 pat e q f arg a) = (term2661 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (eq_refl (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348470 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2777 A B D P Q x t'' _112897 pat e q f arg a) = (term2773 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348468 A B D P Q pat e q f arg a x) (@lem8348469 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348471 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8348472 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2783 A B D P Q x t'' _112897 pat e q f arg a) = (term2784 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348471) (@lem8348470 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348473 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term2779 A B D P Q pat e q f arg a x t) = (term2667 A B D P Q pat e q f arg a t x).
Proof. exact (eq_refl (term2779 A B D P Q pat e q f arg a x t)). Qed.
Lemma lem8348474 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8348475 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) (t : Q) (x : B) : (term2785 A B D P Q pat e q f arg a x t) = (term2786 A B D P Q pat e q f arg a t x).
Proof. exact (MK_COMB (@lem8348474) (@lem8348473 A B D P Q pat e q f arg a t x)). Qed.
Lemma lem8348476 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2661 A B D P Q t'' _112897 pat e q f arg a) = (term2661 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (eq_refl (term2661 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348477 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2787 A B D P Q x t t'' _112897 pat e q f arg a) = (term2788 A B D P Q t x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348475 A B D P Q pat e q f arg a t x) (@lem8348476 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348478 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2789 A B D P Q x t'' _112897 pat e q f arg a) = (term2790 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8348477 A B D P Q t x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348479 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348480 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2778 A B D P Q x t'' _112897 pat e q f arg a) = (term2791 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348479 Q) (@lem8348478 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348481 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : ((term2777 A B D P Q x t'' _112897 pat e q f arg a) = (term2778 A B D P Q x t'' _112897 pat e q f arg a)) = ((term2773 A B D P Q x t'' _112897 pat e q f arg a) = (term2791 A B D P Q x t'' _112897 pat e q f arg a)).
Proof. exact (MK_COMB (@lem8348472 A B D P Q x t'' _112897 pat e q f arg a) (@lem8348480 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348482 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2773 A B D P Q x t'' _112897 pat e q f arg a) = (term2791 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (EQ_MP (@lem8348481 A B D P Q x t'' _112897 pat e q f arg a) (@lem8348462 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348483 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2775 A B D P Q t'' _112897 pat e q f arg a) = (term2792 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8348482 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348484 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8348485 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2776 A B D P Q t'' _112897 pat e q f arg a) = (term2793 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348484 B) (@lem8348483 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348486 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2674 A B D P Q t'' _112897 pat e q f arg a) = (term2793 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8348458 A B D P Q t'' _112897 pat e q f arg a) (@lem8348485 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348487 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2676 A B D P Q t'' _112897 pat e q f arg) = (term2794 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8348486 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348488 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8348489 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2678 A B D P Q t'' _112897 pat e q f arg) = (term2795 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8348488 P) (@lem8348487 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8348490 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2680 A B D P Q t'' _112897 pat e q f) = (term2796 A B D P Q t'' _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8348489 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8348491 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8348492 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2682 A B D P Q t'' _112897 pat e q f) = (term2797 A B D P Q t'' _112897 pat e q f).
Proof. exact (MK_COMB (@lem8348491 A P Q) (@lem8348490 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8348493 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2684 A B D P Q t'' _112897 pat e q) = (term2798 A B D P Q t'' _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8348492 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8348494 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8348495 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2686 A B D P Q t'' _112897 pat e q) = (term2799 A B D P Q t'' _112897 pat e q).
Proof. exact (MK_COMB (@lem8348494 A B) (@lem8348493 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8348496 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2688 A B D P Q t'' _112897 pat e) = (term2800 A B D P Q t'' _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8348495 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8348497 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8348498 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2690 A B D P Q t'' _112897 pat e) = (term2801 A B D P Q t'' _112897 pat e).
Proof. exact (MK_COMB (@lem8348497 P Q) (@lem8348496 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8348499 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term2692 A B D P Q t'' _112897 pat) = (term2802 A B D P Q t'' _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8348498 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8348500 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8348501 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term2693 A B D P Q t'' _112897 pat) = (term2803 A B D P Q t'' _112897 pat).
Proof. exact (MK_COMB (@lem8348500 D P) (@lem8348499 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8348502 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term2694 A B D P Q t'' _112897) = (term2804 A B D P Q t'' _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8348501 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8348503 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8348504 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term2695 A B D P Q t'' _112897) = (term2805 A B D P Q t'' _112897).
Proof. exact (MK_COMB (@lem8348503 D Q) (@lem8348502 A B D P Q t'' _112897)). Qed.
Lemma lem8348530 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2788 A B D P Q t x t'' _112897 pat e q f arg a) = (term2806 A B D P Q t x t'' _112897 pat e q f arg a).
Proof. exact (@lem19490 ((term2655 A B D P Q t'' pat e q f arg a) = (@I (P -> D) e a)) (term2667 A B D P Q pat e q f arg a t x) (term2652 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348537 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2807 A B D P Q t x t'' _112897 pat e q f arg a) = (term2808 A B D P Q t x t'' _112897 pat e q f arg a).
Proof. exact (@lem19490 (term2648 A B D P Q t'' pat e q f arg a) (term2667 A B D P Q pat e q f arg a t x) ((term2642 A B D P Q t'' pat e q f arg a) = (term2539 A B D P Q _112897 pat e q f arg a))). Qed.
Lemma lem8348540 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (a : P) : (term2809 A B D P Q t x t'' pat q f arg e a) = (term2809 A B D P Q t x t'' pat q f arg e a).
Proof. exact (eq_refl (term2809 A B D P Q t x t'' pat q f arg e a)). Qed.
Lemma lem8348541 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2806 A B D P Q t x t'' _112897 pat e q f arg a) = (term2810 A B D P Q t x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348540 A B D P Q t x t'' pat q f arg e a) (@lem8348537 A B D P Q t x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348543 {A B D P Q : Type'} (t : Q) (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2788 A B D P Q t x t'' _112897 pat e q f arg a) = (term2810 A B D P Q t x t'' _112897 pat e q f arg a).
Proof. exact (TRANS (@lem8348530 A B D P Q t x t'' _112897 pat e q f arg a) (@lem8348541 A B D P Q t x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348544 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2790 A B D P Q x t'' _112897 pat e q f arg a) = (term2811 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (fun_ext (fun t : Q => @lem8348543 A B D P Q t x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348545 {Q : Type'} : (@all Q) = (@all Q).
Proof. exact (eq_refl (@all Q)). Qed.
Lemma lem8348546 {A B D P Q : Type'} (x : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2791 A B D P Q x t'' _112897 pat e q f arg a) = (term2812 A B D P Q x t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348545 Q) (@lem8348544 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348547 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2792 A B D P Q t'' _112897 pat e q f arg a) = (term2813 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (fun_ext (fun x : B => @lem8348546 A B D P Q x t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348548 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8348549 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a : P) : (term2793 A B D P Q t'' _112897 pat e q f arg a) = (term2814 A B D P Q t'' _112897 pat e q f arg a).
Proof. exact (MK_COMB (@lem8348548 B) (@lem8348547 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348550 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2794 A B D P Q t'' _112897 pat e q f arg) = (term2815 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (fun_ext (fun a : P => @lem8348549 A B D P Q t'' _112897 pat e q f arg a)). Qed.
Lemma lem8348551 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8348552 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) : (term2795 A B D P Q t'' _112897 pat e q f arg) = (term2816 A B D P Q t'' _112897 pat e q f arg).
Proof. exact (MK_COMB (@lem8348551 P) (@lem8348550 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8348553 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2796 A B D P Q t'' _112897 pat e q f) = (term2817 A B D P Q t'' _112897 pat e q f).
Proof. exact (fun_ext (fun arg : type1475 A P Q => @lem8348552 A B D P Q t'' _112897 pat e q f arg)). Qed.
Lemma lem8348554 {A P Q : Type'} : (@all (P -> Q -> A)) = (@all (P -> Q -> A)).
Proof. exact (eq_refl (@all (P -> Q -> A))). Qed.
Lemma lem8348555 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) : (term2797 A B D P Q t'' _112897 pat e q f) = (term2818 A B D P Q t'' _112897 pat e q f).
Proof. exact (MK_COMB (@lem8348554 A P Q) (@lem8348553 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8348556 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2798 A B D P Q t'' _112897 pat e q) = (term2819 A B D P Q t'' _112897 pat e q).
Proof. exact (fun_ext (fun f : A -> B => @lem8348555 A B D P Q t'' _112897 pat e q f)). Qed.
Lemma lem8348557 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8348558 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term2799 A B D P Q t'' _112897 pat e q) = (term2820 A B D P Q t'' _112897 pat e q).
Proof. exact (MK_COMB (@lem8348557 A B) (@lem8348556 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8348559 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2800 A B D P Q t'' _112897 pat e) = (term2821 A B D P Q t'' _112897 pat e).
Proof. exact (fun_ext (fun q : type1413 P Q => @lem8348558 A B D P Q t'' _112897 pat e q)). Qed.
Lemma lem8348560 {P Q : Type'} : (@all (P -> Q -> Prop)) = (@all (P -> Q -> Prop)).
Proof. exact (eq_refl (@all (P -> Q -> Prop))). Qed.
Lemma lem8348561 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) : (term2801 A B D P Q t'' _112897 pat e) = (term2822 A B D P Q t'' _112897 pat e).
Proof. exact (MK_COMB (@lem8348560 P Q) (@lem8348559 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8348562 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term2802 A B D P Q t'' _112897 pat) = (term2823 A B D P Q t'' _112897 pat).
Proof. exact (fun_ext (fun e : P -> D => @lem8348561 A B D P Q t'' _112897 pat e)). Qed.
Lemma lem8348563 {D P : Type'} : (@all (P -> D)) = (@all (P -> D)).
Proof. exact (eq_refl (@all (P -> D))). Qed.
Lemma lem8348564 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) : (term2803 A B D P Q t'' _112897 pat) = (term2824 A B D P Q t'' _112897 pat).
Proof. exact (MK_COMB (@lem8348563 D P) (@lem8348562 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8348565 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term2804 A B D P Q t'' _112897) = (term2825 A B D P Q t'' _112897).
Proof. exact (fun_ext (fun pat : Q -> D => @lem8348564 A B D P Q t'' _112897 pat)). Qed.
Lemma lem8348566 {D Q : Type'} : (@all (Q -> D)) = (@all (Q -> D)).
Proof. exact (eq_refl (@all (Q -> D))). Qed.
Lemma lem8348567 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term2805 A B D P Q t'' _112897) = (term2826 A B D P Q t'' _112897).
Proof. exact (MK_COMB (@lem8348566 D Q) (@lem8348565 A B D P Q t'' _112897)). Qed.
Lemma lem8348568 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) : (term2695 A B D P Q t'' _112897) = (term2826 A B D P Q t'' _112897).
Proof. exact (TRANS (@lem8348504 A B D P Q t'' _112897) (@lem8348567 A B D P Q t'' _112897)). Qed.
Lemma lem8348569 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2826 A B D P Q t'' _112897.
Proof. exact (EQ_MP (@lem8348568 A B D P Q t'' _112897) (@lem8346085 A B D P Q t'' _112897 h1)). Qed.
Lemma lem8348586 {D P Q : Type'} (_112899 : Q -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2827 D P Q _112896 _112899.
Proof. exact (@lem8346199 D P Q _112896 h1 _112899). Qed.
Lemma lem8348587 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) : (term2827 D P Q _112896 _112899) = (term2727 D P Q _112896 _112899).
Proof. exact (eq_refl (term2827 D P Q _112896 _112899)). Qed.
Lemma lem8348588 {D P Q : Type'} (_112899 : Q -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2727 D P Q _112896 _112899.
Proof. exact (EQ_MP (@lem8348587 D P Q _112896 _112899) (@lem8348586 D P Q _112899 _112896 h1)). Qed.
Lemma lem8348589 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2828 D P Q _112896 _112899 _112900.
Proof. exact (@lem8348588 D P Q _112899 _112896 h1 _112900). Qed.
Lemma lem8348590 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) : (term2828 D P Q _112896 _112899 _112900) = (term2725 D P Q _112896 _112899 _112900).
Proof. exact (eq_refl (term2828 D P Q _112896 _112899 _112900)). Qed.
Lemma lem8348591 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2725 D P Q _112896 _112899 _112900.
Proof. exact (EQ_MP (@lem8348590 D P Q _112896 _112899 _112900) (@lem8348589 D P Q _112899 _112900 _112896 h1)). Qed.
Lemma lem8348592 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2829 D P Q _112896 _112899 _112900 _112901.
Proof. exact (@lem8348591 D P Q _112899 _112900 _112896 h1 _112901). Qed.
Lemma lem8348593 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) : (term2829 D P Q _112896 _112899 _112900 _112901) = (term2723 D P Q _112896 _112899 _112900 _112901).
Proof. exact (eq_refl (term2829 D P Q _112896 _112899 _112900 _112901)). Qed.
Lemma lem8348594 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2723 D P Q _112896 _112899 _112900 _112901.
Proof. exact (EQ_MP (@lem8348593 D P Q _112896 _112899 _112900 _112901) (@lem8348592 D P Q _112899 _112900 _112901 _112896 h1)). Qed.
Lemma lem8348595 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2830 D P Q _112896 _112899 _112900 _112901 _112902.
Proof. exact (@lem8348594 D P Q _112899 _112900 _112901 _112896 h1 _112902). Qed.
Lemma lem8348596 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2830 D P Q _112896 _112899 _112900 _112901 _112902) = (term2721 D P Q _112896 _112899 _112900 _112901 _112902).
Proof. exact (eq_refl (term2830 D P Q _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8348597 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2721 D P Q _112896 _112899 _112900 _112901 _112902.
Proof. exact (EQ_MP (@lem8348596 D P Q _112896 _112899 _112900 _112901 _112902) (@lem8348595 D P Q _112899 _112900 _112901 _112902 _112896 h1)). Qed.
Lemma lem8348598 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2831 D P Q _112896 _112899 _112900 _112901 _112902 _112903.
Proof. exact (@lem8348597 D P Q _112899 _112900 _112901 _112902 _112896 h1 _112903). Qed.
Lemma lem8348599 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2831 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2719 D P Q _112903 _112896 _112899 _112900 _112901 _112902).
Proof. exact (eq_refl (term2831 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8348600 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2719 D P Q _112903 _112896 _112899 _112900 _112901 _112902.
Proof. exact (EQ_MP (@lem8348599 D P Q _112903 _112896 _112899 _112900 _112901 _112902) (@lem8348598 D P Q _112899 _112900 _112901 _112902 _112903 _112896 h1)). Qed.
Lemma lem8348613 {A B D P Q : Type'} (_112908 : A -> B) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2832 A B D P Q p q pat e arg lt2 s _112908.
Proof. exact (@lem8346313 A B D P Q p q pat e arg lt2 s h1 _112908). Qed.
Lemma lem8348614 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) : (term2832 A B D P Q p q pat e arg lt2 s _112908) = (term2745 A B D P Q p _112908 q pat e arg lt2 s).
Proof. exact (eq_refl (term2832 A B D P Q p q pat e arg lt2 s _112908)). Qed.
Lemma lem8348615 {A B D P Q : Type'} (_112908 : A -> B) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2745 A B D P Q p _112908 q pat e arg lt2 s.
Proof. exact (EQ_MP (@lem8348614 A B D P Q p _112908 q pat e arg lt2 s) (@lem8348613 A B D P Q _112908 p q pat e arg lt2 s h1)). Qed.
Lemma lem8348616 {A B D P Q : Type'} (_112908 : A -> B) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2833 A B D P Q p _112908 q pat e arg lt2 s _112909.
Proof. exact (@lem8348615 A B D P Q _112908 p q pat e arg lt2 s h1 _112909). Qed.
Lemma lem8348617 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (_112909 : P) : (term2833 A B D P Q p _112908 q pat e arg lt2 s _112909) = (term2743 A B D P Q p _112908 q pat e arg lt2 s _112909).
Proof. exact (eq_refl (term2833 A B D P Q p _112908 q pat e arg lt2 s _112909)). Qed.
Lemma lem8348618 {A B D P Q : Type'} (_112908 : A -> B) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2743 A B D P Q p _112908 q pat e arg lt2 s _112909.
Proof. exact (EQ_MP (@lem8348617 A B D P Q p _112908 q pat e arg lt2 s _112909) (@lem8348616 A B D P Q _112908 _112909 p q pat e arg lt2 s h1)). Qed.
Lemma lem8348619 {A B D P Q : Type'} (_112908 : A -> B) (_112909 : P) (_112910 : Q) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2834 A B D P Q p _112908 q pat e arg lt2 s _112909 _112910.
Proof. exact (@lem8348618 A B D P Q _112908 _112909 p q pat e arg lt2 s h1 _112910). Qed.
Lemma lem8348620 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (s : P -> A) (_112909 : P) : (term2834 A B D P Q p _112908 q pat e arg lt2 s _112909 _112910) = (term2741 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909).
Proof. exact (eq_refl (term2834 A B D P Q p _112908 q pat e arg lt2 s _112909 _112910)). Qed.
Lemma lem8348621 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2741 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909.
Proof. exact (EQ_MP (@lem8348620 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909) (@lem8348619 A B D P Q _112908 _112909 _112910 p q pat e arg lt2 s h1)). Qed.
Lemma lem8348622 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112909 : P) (_112911 : A) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2835 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909 _112911.
Proof. exact (@lem8348621 A B D P Q _112908 _112910 _112909 p q pat e arg lt2 s h1 _112911). Qed.
Lemma lem8348623 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2835 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909 _112911) = (term2738 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (eq_refl (term2835 A B D P Q p _112908 q pat e arg _112910 lt2 s _112909 _112911)). Qed.
Lemma lem8348624 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112911 : A) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2738 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909.
Proof. exact (EQ_MP (@lem8348623 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) (@lem8348622 A B D P Q _112908 _112910 _112909 _112911 p q pat e arg lt2 s h1)). Qed.
Lemma lem8348697 {A B P : Type'} (_112936 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2836 A B P lt2 s z p _112936.
Proof. exact (@lem8346772 A B P lt2 s z p h1 _112936). Qed.
Lemma lem8348698 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) : (term2836 A B P lt2 s z p _112936) = (term2759 A B P lt2 s z _112936 p).
Proof. exact (eq_refl (term2836 A B P lt2 s z p _112936)). Qed.
Lemma lem8348699 {A B P : Type'} (_112936 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2759 A B P lt2 s z _112936 p.
Proof. exact (EQ_MP (@lem8348698 A B P lt2 s z _112936 p) (@lem8348697 A B P _112936 lt2 s z p h1)). Qed.
Lemma lem8348700 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2837 A B P lt2 s z _112936 p _112937.
Proof. exact (@lem8348699 A B P _112936 lt2 s z p h1 _112937). Qed.
Lemma lem8348701 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) : (term2837 A B P lt2 s z _112936 p _112937) = (term2757 A B P lt2 s z _112936 p _112937).
Proof. exact (eq_refl (term2837 A B P lt2 s z _112936 p _112937)). Qed.
Lemma lem8348702 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2757 A B P lt2 s z _112936 p _112937.
Proof. exact (EQ_MP (@lem8348701 A B P lt2 s z _112936 p _112937) (@lem8348700 A B P _112936 _112937 lt2 s z p h1)). Qed.
Lemma lem8348703 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2838 A B P lt2 s z _112936 p _112937 _112938.
Proof. exact (@lem8348702 A B P _112936 _112937 lt2 s z p h1 _112938). Qed.
Lemma lem8348704 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2838 A B P lt2 s z _112936 p _112937 _112938) = (term2755 A B P lt2 s z _112936 p _112937 _112938).
Proof. exact (eq_refl (term2838 A B P lt2 s z _112936 p _112937 _112938)). Qed.
Lemma lem8348705 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2755 A B P lt2 s z _112936 p _112937 _112938.
Proof. exact (EQ_MP (@lem8348704 A B P lt2 s z _112936 p _112937 _112938) (@lem8348703 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8348730 {A B D P Q : Type'} (_112947 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2839 A B P lt2 s a' f g _112947.
Proof. exact (@lem8346920 A B D P Q lt2 s f p g pat e q a' t' h1 _112947). Qed.
Lemma lem8348731 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112947 : A) : (term2839 A B P lt2 s a' f g _112947) = (term2566 A B P lt2 s a' f g _112947).
Proof. exact (eq_refl (term2839 A B P lt2 s a' f g _112947)). Qed.
Lemma lem8348808 {D P Q : Type'} (_112973 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2698 D P Q pat e q a' _112973.
Proof. exact (@lem8347356 D P Q pat e q a' h1 _112973). Qed.
Lemma lem8348809 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_112973 : Q) : (term2698 D P Q pat e q a' _112973) = (term2478 D P Q pat e q a' _112973).
Proof. exact (eq_refl (term2698 D P Q pat e q a' _112973)). Qed.
Lemma lem8348850 {A B P : Type'} (_112987 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2836 A B P lt2 s z p _112987.
Proof. exact (@lem8347603 A B P lt2 s z p h1 _112987). Qed.
Lemma lem8348851 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) : (term2836 A B P lt2 s z p _112987) = (term2759 A B P lt2 s z _112987 p).
Proof. exact (eq_refl (term2836 A B P lt2 s z p _112987)). Qed.
Lemma lem8348852 {A B P : Type'} (_112987 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2759 A B P lt2 s z _112987 p.
Proof. exact (EQ_MP (@lem8348851 A B P lt2 s z _112987 p) (@lem8348850 A B P _112987 lt2 s z p h1)). Qed.
Lemma lem8348853 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2837 A B P lt2 s z _112987 p _112988.
Proof. exact (@lem8348852 A B P _112987 lt2 s z p h1 _112988). Qed.
Lemma lem8348854 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) : (term2837 A B P lt2 s z _112987 p _112988) = (term2757 A B P lt2 s z _112987 p _112988).
Proof. exact (eq_refl (term2837 A B P lt2 s z _112987 p _112988)). Qed.
Lemma lem8348855 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2757 A B P lt2 s z _112987 p _112988.
Proof. exact (EQ_MP (@lem8348854 A B P lt2 s z _112987 p _112988) (@lem8348853 A B P _112987 _112988 lt2 s z p h1)). Qed.
Lemma lem8348856 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2838 A B P lt2 s z _112987 p _112988 _112989.
Proof. exact (@lem8348855 A B P _112987 _112988 lt2 s z p h1 _112989). Qed.
Lemma lem8348857 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term2838 A B P lt2 s z _112987 p _112988 _112989) = (term2755 A B P lt2 s z _112987 p _112988 _112989).
Proof. exact (eq_refl (term2838 A B P lt2 s z _112987 p _112988 _112989)). Qed.
Lemma lem8348858 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2755 A B P lt2 s z _112987 p _112988 _112989.
Proof. exact (EQ_MP (@lem8348857 A B P lt2 s z _112987 p _112988 _112989) (@lem8348856 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8348883 {A B D P Q : Type'} (_112998 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2839 A B P lt2 s a' f g _112998.
Proof. exact (@lem8347751 A B D P Q lt2 s f p g pat e q a' t' h1 _112998). Qed.
Lemma lem8348884 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112998 : A) : (term2839 A B P lt2 s a' f g _112998) = (term2566 A B P lt2 s a' f g _112998).
Proof. exact (eq_refl (term2839 A B P lt2 s a' f g _112998)). Qed.
Lemma lem8348961 {D P Q : Type'} (_113024 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2698 D P Q pat e q a' _113024.
Proof. exact (@lem8348187 D P Q pat e q a' h1 _113024). Qed.
Lemma lem8348962 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_113024 : Q) : (term2698 D P Q pat e q a' _113024) = (term2478 D P Q pat e q a' _113024).
Proof. exact (eq_refl (term2698 D P Q pat e q a' _113024)). Qed.
Lemma lem8348964 {D P Q : Type'} (_113025 : Q -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2827 D P Q _112896 _113025.
Proof. exact (@lem8348263 D P Q _112896 h1 _113025). Qed.
Lemma lem8348965 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) : (term2827 D P Q _112896 _113025) = (term2727 D P Q _112896 _113025).
Proof. exact (eq_refl (term2827 D P Q _112896 _113025)). Qed.
Lemma lem8348966 {D P Q : Type'} (_113025 : Q -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2727 D P Q _112896 _113025.
Proof. exact (EQ_MP (@lem8348965 D P Q _112896 _113025) (@lem8348964 D P Q _113025 _112896 h1)). Qed.
Lemma lem8348967 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2828 D P Q _112896 _113025 _113026.
Proof. exact (@lem8348966 D P Q _113025 _112896 h1 _113026). Qed.
Lemma lem8348968 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) : (term2828 D P Q _112896 _113025 _113026) = (term2725 D P Q _112896 _113025 _113026).
Proof. exact (eq_refl (term2828 D P Q _112896 _113025 _113026)). Qed.
Lemma lem8348969 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2725 D P Q _112896 _113025 _113026.
Proof. exact (EQ_MP (@lem8348968 D P Q _112896 _113025 _113026) (@lem8348967 D P Q _113025 _113026 _112896 h1)). Qed.
Lemma lem8348970 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2829 D P Q _112896 _113025 _113026 _113027.
Proof. exact (@lem8348969 D P Q _113025 _113026 _112896 h1 _113027). Qed.
Lemma lem8348971 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) : (term2829 D P Q _112896 _113025 _113026 _113027) = (term2723 D P Q _112896 _113025 _113026 _113027).
Proof. exact (eq_refl (term2829 D P Q _112896 _113025 _113026 _113027)). Qed.
Lemma lem8348972 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2723 D P Q _112896 _113025 _113026 _113027.
Proof. exact (EQ_MP (@lem8348971 D P Q _112896 _113025 _113026 _113027) (@lem8348970 D P Q _113025 _113026 _113027 _112896 h1)). Qed.
Lemma lem8348973 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2830 D P Q _112896 _113025 _113026 _113027 _113028.
Proof. exact (@lem8348972 D P Q _113025 _113026 _113027 _112896 h1 _113028). Qed.
Lemma lem8348974 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2830 D P Q _112896 _113025 _113026 _113027 _113028) = (term2721 D P Q _112896 _113025 _113026 _113027 _113028).
Proof. exact (eq_refl (term2830 D P Q _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8348975 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2721 D P Q _112896 _113025 _113026 _113027 _113028.
Proof. exact (EQ_MP (@lem8348974 D P Q _112896 _113025 _113026 _113027 _113028) (@lem8348973 D P Q _113025 _113026 _113027 _113028 _112896 h1)). Qed.
Lemma lem8348976 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2831 D P Q _112896 _113025 _113026 _113027 _113028 _113029.
Proof. exact (@lem8348975 D P Q _113025 _113026 _113027 _113028 _112896 h1 _113029). Qed.
Lemma lem8348977 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2831 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2719 D P Q _113029 _112896 _113025 _113026 _113027 _113028).
Proof. exact (eq_refl (term2831 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8348978 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2719 D P Q _113029 _112896 _113025 _113026 _113027 _113028.
Proof. exact (EQ_MP (@lem8348977 D P Q _113029 _112896 _113025 _113026 _113027 _113028) (@lem8348976 D P Q _113025 _113026 _113027 _113028 _113029 _112896 h1)). Qed.
Lemma lem8348979 {A B D P Q : Type'} (_113030 : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2840 A B D P Q p pat e q arg _113030.
Proof. exact (@lem8348309 A B D P Q p pat e q arg h1 _113030). Qed.
Lemma lem8348980 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : (term2840 A B D P Q p pat e q arg _113030) = (term2505 A B D P Q p _113030 pat e q arg).
Proof. exact (eq_refl (term2840 A B D P Q p pat e q arg _113030)). Qed.
Lemma lem8348981 {A B D P Q : Type'} (_113030 : A -> B) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2505 A B D P Q p _113030 pat e q arg.
Proof. exact (EQ_MP (@lem8348980 A B D P Q p _113030 pat e q arg) (@lem8348979 A B D P Q _113030 p pat e q arg h1)). Qed.
Lemma lem8348982 {A B D P Q : Type'} (_113030 : A -> B) (_113031 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2841 A B D P Q p _113030 pat e q arg _113031.
Proof. exact (@lem8348981 A B D P Q _113030 p pat e q arg h1 _113031). Qed.
Lemma lem8348983 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (_113031 : P) : (term2841 A B D P Q p _113030 pat e q arg _113031) = (term2503 A B D P Q p _113030 pat e q arg _113031).
Proof. exact (eq_refl (term2841 A B D P Q p _113030 pat e q arg _113031)). Qed.
Lemma lem8348984 {A B D P Q : Type'} (_113030 : A -> B) (_113031 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2503 A B D P Q p _113030 pat e q arg _113031.
Proof. exact (EQ_MP (@lem8348983 A B D P Q p _113030 pat e q arg _113031) (@lem8348982 A B D P Q _113030 _113031 p pat e q arg h1)). Qed.
Lemma lem8348985 {A B D P Q : Type'} (_113030 : A -> B) (_113031 : P) (_113032 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2842 A B D P Q p _113030 pat e q arg _113031 _113032.
Proof. exact (@lem8348984 A B D P Q _113030 _113031 p pat e q arg h1 _113032). Qed.
Lemma lem8348986 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) : (term2842 A B D P Q p _113030 pat e q arg _113031 _113032) = (term2501 A B D P Q p _113030 pat e q _113032 arg _113031).
Proof. exact (eq_refl (term2842 A B D P Q p _113030 pat e q arg _113031 _113032)). Qed.
Lemma lem8348987 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2501 A B D P Q p _113030 pat e q _113032 arg _113031.
Proof. exact (EQ_MP (@lem8348986 A B D P Q p _113030 pat e q _113032 arg _113031) (@lem8348985 A B D P Q _113030 _113031 _113032 p pat e q arg h1)). Qed.
Lemma lem8348988 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2843 A B D P Q p _113030 pat e q _113032 arg _113031 _113033.
Proof. exact (@lem8348987 A B D P Q _113030 _113032 _113031 p pat e q arg h1 _113033). Qed.
Lemma lem8348989 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2843 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term2499 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (eq_refl (term2843 A B D P Q p _113030 pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8348990 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2499 A B D P Q p _113030 pat e q _113032 arg _113031 _113033.
Proof. exact (EQ_MP (@lem8348989 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8348988 A B D P Q _113030 _113032 _113031 _113033 p pat e q arg h1)). Qed.
Lemma lem8349012 {A B D P Q : Type'} (_113041 : Q -> D) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2844 A B D P Q t'' _112897 _113041.
Proof. exact (@lem8348569 A B D P Q t'' _112897 h1 _113041). Qed.
Lemma lem8349013 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) : (term2844 A B D P Q t'' _112897 _113041) = (term2824 A B D P Q t'' _112897 _113041).
Proof. exact (eq_refl (term2844 A B D P Q t'' _112897 _113041)). Qed.
Lemma lem8349014 {A B D P Q : Type'} (_113041 : Q -> D) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2824 A B D P Q t'' _112897 _113041.
Proof. exact (EQ_MP (@lem8349013 A B D P Q t'' _112897 _113041) (@lem8349012 A B D P Q _113041 t'' _112897 h1)). Qed.
Lemma lem8349015 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2845 A B D P Q t'' _112897 _113041 _113042.
Proof. exact (@lem8349014 A B D P Q _113041 t'' _112897 h1 _113042). Qed.
Lemma lem8349016 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) : (term2845 A B D P Q t'' _112897 _113041 _113042) = (term2822 A B D P Q t'' _112897 _113041 _113042).
Proof. exact (eq_refl (term2845 A B D P Q t'' _112897 _113041 _113042)). Qed.
Lemma lem8349017 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2822 A B D P Q t'' _112897 _113041 _113042.
Proof. exact (EQ_MP (@lem8349016 A B D P Q t'' _112897 _113041 _113042) (@lem8349015 A B D P Q _113041 _113042 t'' _112897 h1)). Qed.
Lemma lem8349018 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2846 A B D P Q t'' _112897 _113041 _113042 _113043.
Proof. exact (@lem8349017 A B D P Q _113041 _113042 t'' _112897 h1 _113043). Qed.
Lemma lem8349019 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) : (term2846 A B D P Q t'' _112897 _113041 _113042 _113043) = (term2820 A B D P Q t'' _112897 _113041 _113042 _113043).
Proof. exact (eq_refl (term2846 A B D P Q t'' _112897 _113041 _113042 _113043)). Qed.
Lemma lem8349020 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2820 A B D P Q t'' _112897 _113041 _113042 _113043.
Proof. exact (EQ_MP (@lem8349019 A B D P Q t'' _112897 _113041 _113042 _113043) (@lem8349018 A B D P Q _113041 _113042 _113043 t'' _112897 h1)). Qed.
Lemma lem8349021 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2847 A B D P Q t'' _112897 _113041 _113042 _113043 _113044.
Proof. exact (@lem8349020 A B D P Q _113041 _113042 _113043 t'' _112897 h1 _113044). Qed.
Lemma lem8349022 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) : (term2847 A B D P Q t'' _112897 _113041 _113042 _113043 _113044) = (term2818 A B D P Q t'' _112897 _113041 _113042 _113043 _113044).
Proof. exact (eq_refl (term2847 A B D P Q t'' _112897 _113041 _113042 _113043 _113044)). Qed.
Lemma lem8349023 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2818 A B D P Q t'' _112897 _113041 _113042 _113043 _113044.
Proof. exact (EQ_MP (@lem8349022 A B D P Q t'' _112897 _113041 _113042 _113043 _113044) (@lem8349021 A B D P Q _113041 _113042 _113043 _113044 t'' _112897 h1)). Qed.
Lemma lem8349024 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2848 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045.
Proof. exact (@lem8349023 A B D P Q _113041 _113042 _113043 _113044 t'' _112897 h1 _113045). Qed.
Lemma lem8349025 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) : (term2848 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045) = (term2816 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045).
Proof. exact (eq_refl (term2848 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045)). Qed.
Lemma lem8349026 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2816 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045.
Proof. exact (EQ_MP (@lem8349025 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045) (@lem8349024 A B D P Q _113041 _113042 _113043 _113044 _113045 t'' _112897 h1)). Qed.
Lemma lem8349027 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2849 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (@lem8349026 A B D P Q _113041 _113042 _113043 _113044 _113045 t'' _112897 h1 _113046). Qed.
Lemma lem8349028 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2849 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term2814 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term2849 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8349029 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2814 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8349028 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8349027 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8349030 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2850 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113047.
Proof. exact (@lem8349029 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1 _113047). Qed.
Lemma lem8349031 {A B D P Q : Type'} (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2850 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113047) = (term2812 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term2850 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113047)). Qed.
Lemma lem8349032 {A B D P Q : Type'} (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2812 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8349031 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8349030 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113047 t'' _112897 h1)). Qed.
Lemma lem8349033 {A B D P Q : Type'} (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2851 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048.
Proof. exact (@lem8349032 A B D P Q _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1 _113048). Qed.
Lemma lem8349034 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2851 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048) = (term2810 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term2851 A B D P Q _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048)). Qed.
Lemma lem8349035 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2810 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8349034 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8349033 A B D P Q _113047 _113041 _113042 _113043 _113044 _113045 _113046 _113048 t'' _112897 h1)). Qed.
Lemma lem8349046 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2852 D P Q _112903 _112896 _112899 _112900 _112901 _112902.
Proof. exact (proj2 (@lem8348600 D P Q _112903 _112899 _112900 _112901 _112902 _112896 h1)). Qed.
Lemma lem8349047 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2853 D P Q _112903 _112896 _112899 _112901 _112900 _112902.
Proof. exact (proj1 (@lem8348600 D P Q _112903 _112899 _112900 _112901 _112902 _112896 h1)). Qed.
Lemma lem8349052 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2750 A B P lt2 s z _112936 p _112937 _112938.
Proof. exact (proj2 (@lem8348705 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8349077 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2752 A B P lt2 s z _112987 p _112988 _112989.
Proof. exact (proj1 (@lem8348858 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8349096 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2808 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (proj2 (@lem8349035 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8349097 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2854 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046.
Proof. exact (proj1 (@lem8349035 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8349098 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2855 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (proj2 (@lem8349096 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8349099 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2856 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (proj1 (@lem8349096 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8349106 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2852 D P Q _113029 _112896 _113025 _113026 _113027 _113028.
Proof. exact (proj2 (@lem8348978 D P Q _113029 _113025 _113026 _113027 _113028 _112896 h1)). Qed.
Lemma lem8349107 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2853 D P Q _113029 _112896 _113025 _113027 _113026 _113028.
Proof. exact (proj1 (@lem8348978 D P Q _113029 _113025 _113026 _113027 _113028 _112896 h1)). Qed.
Lemma lem8349145 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2738 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2857 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (@lem8321069 (term895 A B P p _112908 _112909) (term2521 D P Q q pat _112910 e _112909) (term2518 A P Q arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8349152 {A D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2858 A D P Q q pat e arg _112910 lt2 _112911 s _112909) = (term2859 A D P Q q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (@lem8321069 (term2473 P Q q _112909 _112910) (term2476 D P Q pat _112910 e _112909) (term2518 A P Q arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8349153 {A B P : Type'} (p : type560 A B P) (_112908 : A -> B) (_112909 : P) : (term896 A B P p _112908 _112909) = (term896 A B P p _112908 _112909).
Proof. exact (eq_refl (term896 A B P p _112908 _112909)). Qed.
Lemma lem8349156 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2857 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (MK_COMB (@lem8349153 A B P p _112908 _112909) (@lem8349152 A D P Q q pat e arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8349158 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2738 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (TRANS (@lem8349145 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) (@lem8349156 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8349159 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112911 : A) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909.
Proof. exact (EQ_MP (@lem8349158 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) (@lem8348624 A B D P Q _112908 _112910 _112911 _112909 p q pat e arg lt2 s h1)). Qed.
Lemma lem8349161 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2563 A P lt2 y s a.
Proof. exact (proj2 (@lem8346086 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8349274 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) : (term2853 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902).
Proof. exact (@lem8321069 (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903) ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902))). Qed.
Lemma lem8349275 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902.
Proof. exact (EQ_MP (@lem8349274 D P Q _112903 _112896 _112899 _112901 _112900 _112902) (@lem8349047 D P Q _112903 _112899 _112901 _112900 _112902 _112896 h1)). Qed.
Lemma lem8349286 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2852 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902).
Proof. exact (@lem8321069 (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903) (term2466 D P Q _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8349287 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902.
Proof. exact (EQ_MP (@lem8349286 D P Q _112903 _112896 _112899 _112900 _112901 _112902) (@lem8349046 D P Q _112903 _112899 _112900 _112901 _112902 _112896 h1)). Qed.
Lemma lem8349345 {A B D P Q : Type'} (_112947 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2566 A B P lt2 s a' f g _112947.
Proof. exact (EQ_MP (@lem8348731 A B P lt2 s a' f g _112947) (@lem8348730 A B D P Q _112947 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8349353 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term895 A B P p g a'.
Proof. exact (h1). Qed.
Lemma lem8349417 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2863 A B P lt2 z s _112936 p _112937 _112938.
Proof. exact (proj1 (@lem8349052 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8349427 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2864 A B P z _112936 p _112937 _112938.
Proof. exact (proj2 (@lem8349052 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8349541 {D P Q : Type'} (_112973 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2478 D P Q pat e q a' _112973.
Proof. exact (EQ_MP (@lem8348809 D P Q pat e q a' _112973) (@lem8348808 D P Q _112973 pat e q a' h1)). Qed.
Lemma lem8349717 {A B D P Q : Type'} (_112998 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2566 A B P lt2 s a' f g _112998.
Proof. exact (EQ_MP (@lem8348884 A B P lt2 s a' f g _112998) (@lem8348883 A B D P Q _112998 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8349725 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term895 A B P p f a'.
Proof. exact (h1). Qed.
Lemma lem8349809 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2865 A B P lt2 z s _112987 p _112988 _112989.
Proof. exact (proj1 (@lem8349077 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8349819 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2866 A B P z _112987 p _112988 _112989.
Proof. exact (proj2 (@lem8349077 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8349913 {D P Q : Type'} (_113024 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term2478 D P Q pat e q a' _113024.
Proof. exact (EQ_MP (@lem8348962 D P Q pat e q a' _113024) (@lem8348961 D P Q _113024 pat e q a' h1)). Qed.
Lemma lem8350035 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2499 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term2867 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8321069 (term895 A B P p _113030 _113031) (term2496 D P Q _113032 pat e q _113031 _113033) ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8350036 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2868 A D P Q pat e q _113032 arg _113031 _113033) = (term2869 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8321069 (term2476 D P Q pat _113032 e _113031) (term2495 D P Q _113032 pat e q _113031 _113033) ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8350037 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2870 A D P Q pat e q _113032 arg _113031 _113033) = (term2871 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8321069 (term2473 P Q q _113031 _113032) (term2478 D P Q pat e q _113031 _113033) ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8350044 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2872 A D P Q pat e q _113032 arg _113031 _113033) = (term2873 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8321069 (term2476 D P Q pat _113033 e _113031) (term2473 P Q q _113031 _113033) ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8350045 {P Q : Type'} (q : type1413 P Q) (_113031 : P) (_113032 : Q) : (term2494 P Q q _113031 _113032) = (term2494 P Q q _113031 _113032).
Proof. exact (eq_refl (term2494 P Q q _113031 _113032)). Qed.
Lemma lem8350048 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2871 A D P Q pat e q _113032 arg _113031 _113033) = (term2874 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (MK_COMB (@lem8350045 P Q q _113031 _113032) (@lem8350044 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350049 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2870 A D P Q pat e q _113032 arg _113031 _113033) = (term2874 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (TRANS (@lem8350037 A D P Q pat e q _113032 arg _113031 _113033) (@lem8350048 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350050 {D P Q : Type'} (pat : Q -> D) (_113032 : Q) (e : P -> D) (_113031 : P) : (term2477 D P Q pat _113032 e _113031) = (term2477 D P Q pat _113032 e _113031).
Proof. exact (eq_refl (term2477 D P Q pat _113032 e _113031)). Qed.
Lemma lem8350053 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2869 A D P Q pat e q _113032 arg _113031 _113033) = (term2875 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (MK_COMB (@lem8350050 D P Q pat _113032 e _113031) (@lem8350049 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350054 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2868 A D P Q pat e q _113032 arg _113031 _113033) = (term2875 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (TRANS (@lem8350036 A D P Q pat e q _113032 arg _113031 _113033) (@lem8350053 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350055 {A B P : Type'} (p : type560 A B P) (_113030 : A -> B) (_113031 : P) : (term896 A B P p _113030 _113031) = (term896 A B P p _113030 _113031).
Proof. exact (eq_refl (term896 A B P p _113030 _113031)). Qed.
Lemma lem8350058 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2867 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (MK_COMB (@lem8350055 A B P p _113030 _113031) (@lem8350054 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350060 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2499 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (TRANS (@lem8350035 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8350058 A B D P Q p _113030 pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8350061 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033.
Proof. exact (EQ_MP (@lem8350060 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8348990 A B D P Q _113030 _113032 _113031 _113033 p pat e q arg h1)). Qed.
Lemma lem8350087 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2547 A B D P Q _112897 f arg _112896 pat e q a'.
Proof. exact (proj2 (@lem8346118 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8350095 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term2854 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term2877 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (@lem8321069 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8350102 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term2878 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term2879 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (@lem8321069 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8350103 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8350106 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term2877 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (MK_COMB (@lem8350103 D P Q _113041 _113048 _113042 _113046) (@lem8350102 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8350108 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term2854 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (TRANS (@lem8350095 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8350106 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8350109 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046.
Proof. exact (EQ_MP (@lem8350108 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8349097 A B D P Q _113048 _113047 _113041 _113043 _113044 _113045 _113042 _113046 t'' _112897 h1)). Qed.
Lemma lem8350113 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2856 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2881 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8321069 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350120 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2882 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2883 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8321069 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350121 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8350124 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2881 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (MK_COMB (@lem8350121 D P Q _113041 _113048 _113042 _113046) (@lem8350120 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350126 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2856 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (TRANS (@lem8350113 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8350124 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350127 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8350126 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8349099 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8350131 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2855 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term2885 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8321069 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046))). Qed.
Lemma lem8350138 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2886 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term2887 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8321069 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046))). Qed.
Lemma lem8350139 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8350142 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2885 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (MK_COMB (@lem8350139 D P Q _113041 _113048 _113042 _113046) (@lem8350138 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350144 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2855 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (TRANS (@lem8350131 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8350142 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8350145 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8350144 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8349098 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8350196 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) : (term2853 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028).
Proof. exact (@lem8321069 (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029) ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028))). Qed.
Lemma lem8350197 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028.
Proof. exact (EQ_MP (@lem8350196 D P Q _113029 _112896 _113025 _113027 _113026 _113028) (@lem8349107 D P Q _113029 _113025 _113027 _113026 _113028 _112896 h1)). Qed.
Lemma lem8350208 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2852 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028).
Proof. exact (@lem8321069 (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029) (term2466 D P Q _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8350209 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028.
Proof. exact (EQ_MP (@lem8350208 D P Q _113029 _112896 _113025 _113026 _113027 _113028) (@lem8349106 D P Q _113029 _113025 _113026 _113027 _113028 _112896 h1)). Qed.
Lemma lem8350726 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term893 A B P p f a.
Proof. exact (proj1 (@lem8346091 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350727 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term994 A B P p f a.
Proof. exact (fun h0 : term895 A B P p f a => @lem8350726 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350729 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350730 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term994 A B P p f a) = (term893 A B P p f a).
Proof. exact (@lem8350729 (term893 A B P p f a)). Qed.
Lemma lem8350731 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term893 A B P p f a.
Proof. exact (EQ_MP (@lem8350730 A B P p f a) (@lem8350727 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350733 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (@I (Q -> D) pat t) = (@I (P -> D) e a).
Proof. exact (proj1 (@lem8346092 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350734 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2889 D P Q pat t e a.
Proof. exact (fun h0 : term2476 D P Q pat t e a => @lem8350733 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350736 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350737 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term2889 D P Q pat t e a) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (@lem8350736 ((@I (Q -> D) pat t) = (@I (P -> D) e a))). Qed.
Lemma lem8350738 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (@I (Q -> D) pat t) = (@I (P -> D) e a).
Proof. exact (EQ_MP (@lem8350737 D P Q pat t e a) (@lem8350734 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350740 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2472 P Q q a t.
Proof. exact (proj2 (@lem8346092 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350741 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2890 P Q q a t.
Proof. exact (fun h0 : term2473 P Q q a t => @lem8350740 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350743 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350744 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term2890 P Q q a t) = (term2472 P Q q a t).
Proof. exact (@lem8350743 (term2472 P Q q a t)). Qed.
Lemma lem8350745 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2472 P Q q a t.
Proof. exact (EQ_MP (@lem8350744 P Q q a t) (@lem8350741 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350763 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8350764 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2891 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2892 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350763 (term2466 D P Q _112896 _112899 _112900 _112901 _112902) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350770 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2477 D P Q _112899 _112903 _112900 _112902) = (term2477 D P Q _112899 _112903 _112900 _112902).
Proof. exact (eq_refl (term2477 D P Q _112899 _112903 _112900 _112902)). Qed.
Lemma lem8350771 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2893 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350770 D P Q _112899 _112903 _112900 _112902) (@lem8350764 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350775 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8350776 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2893 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350775 (term2466 D P Q _112896 _112899 _112900 _112901 _112902) (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350794 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (TRANS (@lem8350771 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350776 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350795 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8350796 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2895 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2896 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350795) (@lem8350794 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350814 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (eq_refl (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350815 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = ((term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)).
Proof. exact (MK_COMB (@lem8350796 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350814 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350817 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8350818 (x : Prop) : (x = x) = True.
Proof. exact (@lem8350817 Prop x). Qed.
Lemma lem8350819 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = True.
Proof. exact (@lem8350818 (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350820 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = True.
Proof. exact (TRANS (@lem8350815 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350819 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350821 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : True = ((term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903)).
Proof. exact (SYM (@lem8350820 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350822 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2862 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (EQ_MP (@lem8350821 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem0)). Qed.
Lemma lem8350823 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903.
Proof. exact (EQ_MP (@lem8350822 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8349287 D P Q _112903 _112899 _112900 _112901 _112902 _112896 h1)). Qed.
Lemma lem8350825 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8350826 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2897 D P Q _112903 _112896 _112899 _112900 _112901 _112902).
Proof. exact (@lem8350825 (term2478 D P Q _112899 _112900 _112901 _112902 _112903) (term2466 D P Q _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8350828 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8350829 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2898 D P Q _112899 _112900 _112901 _112902 _112903) = (term2899 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350828 (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350831 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8350832 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2900 D P Q _112899 _112903 _112900 _112902) = ((@I (Q -> D) _112899 _112903) = (@I (P -> D) _112900 _112902)).
Proof. exact (@lem8350831 ((@I (Q -> D) _112899 _112903) = (@I (P -> D) _112900 _112902))). Qed.
Lemma lem8350833 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8350834 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2901 D P Q _112899 _112903 _112900 _112902) = (term2549 D P Q _112899 _112903 _112900 _112902).
Proof. exact (MK_COMB (@lem8350833) (@lem8350832 D P Q _112899 _112903 _112900 _112902)). Qed.
Lemma lem8350836 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8350837 {P Q : Type'} (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2902 P Q _112901 _112902 _112903) = (term2472 P Q _112901 _112902 _112903).
Proof. exact (@lem8350836 (term2472 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350838 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2899 D P Q _112899 _112900 _112901 _112902 _112903) = (term2550 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350834 D P Q _112899 _112903 _112900 _112902) (@lem8350837 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350839 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2898 D P Q _112899 _112900 _112901 _112902 _112903) = (term2550 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (TRANS (@lem8350829 D P Q _112899 _112900 _112901 _112902 _112903) (@lem8350838 D P Q _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350840 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8350841 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2903 D P Q _112899 _112900 _112901 _112902 _112903) = (term2904 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350840) (@lem8350839 D P Q _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350842 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2466 D P Q _112896 _112899 _112900 _112901 _112902) = (term2466 D P Q _112896 _112899 _112900 _112901 _112902).
Proof. exact (eq_refl (term2466 D P Q _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8350843 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2897 D P Q _112903 _112896 _112899 _112900 _112901 _112902) = (term2905 D P Q _112903 _112896 _112899 _112900 _112901 _112902).
Proof. exact (MK_COMB (@lem8350841 D P Q _112899 _112900 _112901 _112902 _112903) (@lem8350842 D P Q _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8350844 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) : (term2894 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2905 D P Q _112903 _112896 _112899 _112900 _112901 _112902).
Proof. exact (TRANS (@lem8350826 D P Q _112903 _112896 _112899 _112900 _112901 _112902) (@lem8350843 D P Q _112903 _112896 _112899 _112900 _112901 _112902)). Qed.
Lemma lem8350846 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2550 D P Q pat e q a t.
Proof. exact (conj (@lem8350738 A B D P Q p f t arg _112896 pat e q lt2 y s a h1) (@lem8350745 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350848 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q _112903 _112896 _112899 _112900 _112901 _112902.
Proof. exact (EQ_MP (@lem8350844 D P Q _112903 _112896 _112899 _112900 _112901 _112902) (@lem8350823 D P Q _112899 _112900 _112901 _112902 _112903 _112896 h1)). Qed.
Lemma lem8350849 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q _112903 _112896 _112899 _112900 _112901 _112902.
Proof. exact (@lem8350848 D P Q _112903 _112899 _112900 _112901 _112902 _112896 h1). Qed.
Lemma lem8350850 {D P Q : Type'} (t : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q t _112896 pat e q a.
Proof. exact (@lem8350849 D P Q t pat e q a _112896 h1). Qed.
Lemma lem8350853 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2466 D P Q _112896 pat e q a.
Proof. exact (@lem8350850 D P Q t pat e q a _112896 h1 (@lem8350846 A B D P Q p f t arg _112896 pat e q lt2 y s a h2)). Qed.
Lemma lem8350854 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2906 D P Q _112896 pat e q a.
Proof. exact (fun h0 : term2907 D P Q _112896 pat e q a => @lem8350853 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2). Qed.
Lemma lem8350856 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350857 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2906 D P Q _112896 pat e q a) = (term2466 D P Q _112896 pat e q a).
Proof. exact (@lem8350856 (term2466 D P Q _112896 pat e q a)). Qed.
Lemma lem8350858 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2466 D P Q _112896 pat e q a.
Proof. exact (EQ_MP (@lem8350857 D P Q _112896 pat e q a) (@lem8350854 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2)). Qed.
Lemma lem8350860 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (@I (Q -> D) pat t) = (@I (P -> D) e a).
Proof. exact (proj1 (@lem8346092 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350861 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2889 D P Q pat t e a.
Proof. exact (fun h0 : term2476 D P Q pat t e a => @lem8350860 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350863 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350864 {D P Q : Type'} (pat : Q -> D) (t : Q) (e : P -> D) (a : P) : (term2889 D P Q pat t e a) = ((@I (Q -> D) pat t) = (@I (P -> D) e a)).
Proof. exact (@lem8350863 ((@I (Q -> D) pat t) = (@I (P -> D) e a))). Qed.
Lemma lem8350865 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (@I (Q -> D) pat t) = (@I (P -> D) e a).
Proof. exact (EQ_MP (@lem8350864 D P Q pat t e a) (@lem8350861 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350867 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2472 P Q q a t.
Proof. exact (proj2 (@lem8346092 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350868 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2890 P Q q a t.
Proof. exact (fun h0 : term2473 P Q q a t => @lem8350867 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350870 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350871 {P Q : Type'} (q : type1413 P Q) (a : P) (t : Q) : (term2890 P Q q a t) = (term2472 P Q q a t).
Proof. exact (@lem8350870 (term2472 P Q q a t)). Qed.
Lemma lem8350872 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2472 P Q q a t.
Proof. exact (EQ_MP (@lem8350871 P Q q a t) (@lem8350868 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350890 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8350891 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2908 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2909 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350890 ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902)) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350899 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2477 D P Q _112899 _112903 _112900 _112902) = (term2477 D P Q _112899 _112903 _112900 _112902).
Proof. exact (eq_refl (term2477 D P Q _112899 _112903 _112900 _112902)). Qed.
Lemma lem8350900 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2910 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350899 D P Q _112899 _112903 _112900 _112902) (@lem8350891 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350904 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8350905 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2910 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350904 ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902)) (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350925 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (TRANS (@lem8350900 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350905 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350926 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8350927 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2912 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2913 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350926) (@lem8350925 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350947 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (eq_refl (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350948 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = ((term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)).
Proof. exact (MK_COMB (@lem8350927 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350947 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350950 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8350951 (x : Prop) : (x = x) = True.
Proof. exact (@lem8350950 Prop x). Qed.
Lemma lem8350952 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = True.
Proof. exact (@lem8350951 (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350953 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : ((term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)) = True.
Proof. exact (TRANS (@lem8350948 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8350952 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350954 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : True = ((term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903)).
Proof. exact (SYM (@lem8350953 D P Q _112896 _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350955 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2861 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903).
Proof. exact (EQ_MP (@lem8350954 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem0)). Qed.
Lemma lem8350956 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903.
Proof. exact (EQ_MP (@lem8350955 D P Q _112896 _112899 _112900 _112901 _112902 _112903) (@lem8349275 D P Q _112903 _112899 _112901 _112900 _112902 _112896 h1)). Qed.
Lemma lem8350958 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8350959 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) : (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2914 D P Q _112903 _112896 _112899 _112901 _112900 _112902).
Proof. exact (@lem8350958 (term2478 D P Q _112899 _112900 _112901 _112902 _112903) ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902))). Qed.
Lemma lem8350961 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8350962 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2898 D P Q _112899 _112900 _112901 _112902 _112903) = (term2899 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (@lem8350961 (term2476 D P Q _112899 _112903 _112900 _112902) (term2473 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350964 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8350965 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2900 D P Q _112899 _112903 _112900 _112902) = ((@I (Q -> D) _112899 _112903) = (@I (P -> D) _112900 _112902)).
Proof. exact (@lem8350964 ((@I (Q -> D) _112899 _112903) = (@I (P -> D) _112900 _112902))). Qed.
Lemma lem8350966 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8350967 {D P Q : Type'} (_112899 : Q -> D) (_112903 : Q) (_112900 : P -> D) (_112902 : P) : (term2901 D P Q _112899 _112903 _112900 _112902) = (term2549 D P Q _112899 _112903 _112900 _112902).
Proof. exact (MK_COMB (@lem8350966) (@lem8350965 D P Q _112899 _112903 _112900 _112902)). Qed.
Lemma lem8350969 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8350970 {P Q : Type'} (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2902 P Q _112901 _112902 _112903) = (term2472 P Q _112901 _112902 _112903).
Proof. exact (@lem8350969 (term2472 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350971 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2899 D P Q _112899 _112900 _112901 _112902 _112903) = (term2550 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350967 D P Q _112899 _112903 _112900 _112902) (@lem8350970 P Q _112901 _112902 _112903)). Qed.
Lemma lem8350972 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2898 D P Q _112899 _112900 _112901 _112902 _112903) = (term2550 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (TRANS (@lem8350962 D P Q _112899 _112900 _112901 _112902 _112903) (@lem8350971 D P Q _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350973 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8350974 {D P Q : Type'} (_112899 : Q -> D) (_112900 : P -> D) (_112901 : type1413 P Q) (_112902 : P) (_112903 : Q) : (term2903 D P Q _112899 _112900 _112901 _112902 _112903) = (term2904 D P Q _112899 _112900 _112901 _112902 _112903).
Proof. exact (MK_COMB (@lem8350973) (@lem8350972 D P Q _112899 _112900 _112901 _112902 _112903)). Qed.
Lemma lem8350975 {D P Q : Type'} (_112896 : type885 D P Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) : ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902)) = ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902)).
Proof. exact (eq_refl ((term2468 D P Q _112896 _112899 _112900 _112901 _112902) = (@I (P -> D) _112900 _112902))). Qed.
Lemma lem8350976 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) : (term2914 D P Q _112903 _112896 _112899 _112901 _112900 _112902) = (term2915 D P Q _112903 _112896 _112899 _112901 _112900 _112902).
Proof. exact (MK_COMB (@lem8350974 D P Q _112899 _112900 _112901 _112902 _112903) (@lem8350975 D P Q _112896 _112899 _112901 _112900 _112902)). Qed.
Lemma lem8350977 {D P Q : Type'} (_112903 : Q) (_112896 : type885 D P Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) : (term2911 D P Q _112896 _112899 _112900 _112901 _112902 _112903) = (term2915 D P Q _112903 _112896 _112899 _112901 _112900 _112902).
Proof. exact (TRANS (@lem8350959 D P Q _112903 _112896 _112899 _112901 _112900 _112902) (@lem8350976 D P Q _112903 _112896 _112899 _112901 _112900 _112902)). Qed.
Lemma lem8350979 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2550 D P Q pat e q a t.
Proof. exact (conj (@lem8350865 A B D P Q p f t arg _112896 pat e q lt2 y s a h1) (@lem8350872 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350981 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q _112903 _112896 _112899 _112901 _112900 _112902.
Proof. exact (EQ_MP (@lem8350977 D P Q _112903 _112896 _112899 _112901 _112900 _112902) (@lem8350956 D P Q _112899 _112900 _112901 _112902 _112903 _112896 h1)). Qed.
Lemma lem8350982 {D P Q : Type'} (_112903 : Q) (_112899 : Q -> D) (_112901 : type1413 P Q) (_112900 : P -> D) (_112902 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q _112903 _112896 _112899 _112901 _112900 _112902.
Proof. exact (@lem8350981 D P Q _112903 _112899 _112901 _112900 _112902 _112896 h1). Qed.
Lemma lem8350983 {D P Q : Type'} (t : Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q t _112896 pat q e a.
Proof. exact (@lem8350982 D P Q t pat q e a _112896 h1). Qed.
Lemma lem8350986 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a).
Proof. exact (@lem8350983 D P Q t pat q e a _112896 h1 (@lem8350979 A B D P Q p f t arg _112896 pat e q lt2 y s a h2)). Qed.
Lemma lem8350987 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2916 D P Q _112896 pat q e a.
Proof. exact (fun h0 : term2917 D P Q _112896 pat q e a => @lem8350986 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2). Qed.
Lemma lem8350989 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350990 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a : P) : (term2916 D P Q _112896 pat q e a) = ((term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a)).
Proof. exact (@lem8350989 ((term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a))). Qed.
Lemma lem8350991 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : (term2468 D P Q _112896 pat e q a) = (@I (P -> D) e a).
Proof. exact (EQ_MP (@lem8350990 D P Q _112896 pat q e a) (@lem8350987 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2)). Qed.
Lemma lem8350993 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2575 A D P Q lt2 y arg _112896 pat e q a.
Proof. exact (proj2 (@lem8346089 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8350994 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2918 A D P Q lt2 y arg _112896 pat e q a.
Proof. exact (fun h0 : term2919 A D P Q lt2 y arg _112896 pat e q a => @lem8350993 A B D P Q p f t arg _112896 pat e q lt2 y s a h1). Qed.
Lemma lem8350996 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8350997 {A D P Q : Type'} (lt2 : type1402 A) (y : A) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a : P) : (term2918 A D P Q lt2 y arg _112896 pat e q a) = (term2575 A D P Q lt2 y arg _112896 pat e q a).
Proof. exact (@lem8350996 (term2575 A D P Q lt2 y arg _112896 pat e q a)). Qed.
Lemma lem8350998 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2575 A D P Q lt2 y arg _112896 pat e q a.
Proof. exact (EQ_MP (@lem8350997 A D P Q lt2 y arg _112896 pat e q a) (@lem8350994 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8351014 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351015 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2859 A D P Q q pat e arg _112910 lt2 _112911 s _112909) = (term2920 A D P Q pat e q arg _112910 lt2 _112911 s _112909).
Proof. exact (@lem8351014 (term2476 D P Q pat _112910 e _112909) (term2473 P Q q _112909 _112910) (term2518 A P Q arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8351031 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351032 {A P Q : Type'} (arg : type1475 A P Q) (q : type1413 P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2921 A P Q q arg _112910 lt2 _112911 s _112909) = (term2922 A P Q arg q _112910 lt2 _112911 s _112909).
Proof. exact (@lem8351031 (term2515 A P Q lt2 _112911 arg _112909 _112910) (term2473 P Q q _112909 _112910) (term2510 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351046 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8351047 {A P Q : Type'} (lt2 : type1402 A) (_112911 : A) (s : P -> A) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2923 A P Q q _112910 lt2 _112911 s _112909) = (term2924 A P Q lt2 _112911 s q _112909 _112910).
Proof. exact (@lem8351046 (term2510 A P lt2 _112911 s _112909) (term2473 P Q q _112909 _112910)). Qed.
Lemma lem8351053 {A P Q : Type'} (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2517 A P Q lt2 _112911 arg _112909 _112910) = (term2517 A P Q lt2 _112911 arg _112909 _112910).
Proof. exact (eq_refl (term2517 A P Q lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351054 {A P Q : Type'} (arg : type1475 A P Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2922 A P Q arg q _112910 lt2 _112911 s _112909) = (term2925 A P Q arg lt2 _112911 s q _112909 _112910).
Proof. exact (MK_COMB (@lem8351053 A P Q lt2 _112911 arg _112909 _112910) (@lem8351047 A P Q lt2 _112911 s q _112909 _112910)). Qed.
Lemma lem8351058 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351059 {A P Q : Type'} (s : P -> A) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2925 A P Q arg lt2 _112911 s q _112909 _112910) = (term2926 A P Q s lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351058 (term2510 A P lt2 _112911 s _112909) (term2515 A P Q lt2 _112911 arg _112909 _112910) (term2473 P Q q _112909 _112910)). Qed.
Lemma lem8351075 {A P Q : Type'} (s : P -> A) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2922 A P Q arg q _112910 lt2 _112911 s _112909) = (term2926 A P Q s lt2 _112911 arg q _112909 _112910).
Proof. exact (TRANS (@lem8351054 A P Q arg lt2 _112911 s q _112909 _112910) (@lem8351059 A P Q s lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351076 {A P Q : Type'} (s : P -> A) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2921 A P Q q arg _112910 lt2 _112911 s _112909) = (term2926 A P Q s lt2 _112911 arg q _112909 _112910).
Proof. exact (TRANS (@lem8351032 A P Q arg q _112910 lt2 _112911 s _112909) (@lem8351075 A P Q s lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351077 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2477 D P Q pat _112910 e _112909) = (term2477 D P Q pat _112910 e _112909).
Proof. exact (eq_refl (term2477 D P Q pat _112910 e _112909)). Qed.
Lemma lem8351078 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (s : P -> A) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2920 A D P Q pat e q arg _112910 lt2 _112911 s _112909) = (term2927 A D P Q pat e s lt2 _112911 arg q _112909 _112910).
Proof. exact (MK_COMB (@lem8351077 D P Q pat _112910 e _112909) (@lem8351076 A P Q s lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351082 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351083 {A D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2927 A D P Q pat e s lt2 _112911 arg q _112909 _112910) = (term2928 A D P Q s pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351082 (term2510 A P lt2 _112911 s _112909) (term2476 D P Q pat _112910 e _112909) (term2929 A P Q lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351111 {A D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2920 A D P Q pat e q arg _112910 lt2 _112911 s _112909) = (term2928 A D P Q s pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (TRANS (@lem8351078 A D P Q pat e s lt2 _112911 arg q _112909 _112910) (@lem8351083 A D P Q s pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351112 {A D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2859 A D P Q q pat e arg _112910 lt2 _112911 s _112909) = (term2928 A D P Q s pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (TRANS (@lem8351015 A D P Q pat e q arg _112910 lt2 _112911 s _112909) (@lem8351111 A D P Q s pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351113 {A B P : Type'} (p : type560 A B P) (_112908 : A -> B) (_112909 : P) : (term896 A B P p _112908 _112909) = (term896 A B P p _112908 _112909).
Proof. exact (eq_refl (term896 A B P p _112908 _112909)). Qed.
Lemma lem8351114 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2930 A B D P Q p _112908 s pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (MK_COMB (@lem8351113 A B P p _112908 _112909) (@lem8351112 A D P Q s pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351118 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351119 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (_112908 : A -> B) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2930 A B D P Q p _112908 s pat e lt2 _112911 arg q _112909 _112910) = (term2931 A B D P Q s p _112908 pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351118 (term2510 A P lt2 _112911 s _112909) (term895 A B P p _112908 _112909) (term2932 A D P Q pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351133 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351134 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_112908 : A -> B) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2933 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910) = (term2934 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351133 (term2476 D P Q pat _112910 e _112909) (term895 A B P p _112908 _112909) (term2929 A P Q lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351150 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351151 {A B P Q : Type'} (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2935 A B P Q p _112908 lt2 _112911 arg q _112909 _112910) = (term2936 A B P Q lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (@lem8351150 (term2515 A P Q lt2 _112911 arg _112909 _112910) (term895 A B P p _112908 _112909) (term2473 P Q q _112909 _112910)). Qed.
Lemma lem8351167 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2477 D P Q pat _112910 e _112909) = (term2477 D P Q pat _112910 e _112909).
Proof. exact (eq_refl (term2477 D P Q pat _112910 e _112909)). Qed.
Lemma lem8351168 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2934 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910) = (term2937 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (MK_COMB (@lem8351167 D P Q pat _112910 e _112909) (@lem8351151 A B P Q lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351179 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2933 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910) = (term2937 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (TRANS (@lem8351134 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910) (@lem8351168 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351180 {A P : Type'} (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2938 A P lt2 _112911 s _112909) = (term2938 A P lt2 _112911 s _112909).
Proof. exact (eq_refl (term2938 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351181 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2931 A B D P Q s p _112908 pat e lt2 _112911 arg q _112909 _112910) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (MK_COMB (@lem8351180 A P lt2 _112911 s _112909) (@lem8351179 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351192 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2930 A B D P Q p _112908 s pat e lt2 _112911 arg q _112909 _112910) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (TRANS (@lem8351119 A B D P Q s p _112908 pat e lt2 _112911 arg q _112909 _112910) (@lem8351181 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351193 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (TRANS (@lem8351114 A B D P Q p _112908 s pat e lt2 _112911 arg q _112909 _112910) (@lem8351192 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351194 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8351195 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2940 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2941 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (MK_COMB (@lem8351194) (@lem8351193 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351219 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351220 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2942 A D P Q q pat e lt2 _112911 arg _112909 _112910) = (term2943 A D P Q pat e q lt2 _112911 arg _112909 _112910).
Proof. exact (@lem8351219 (term2476 D P Q pat _112910 e _112909) (term2473 P Q q _112909 _112910) (term2515 A P Q lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351236 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8351237 {A P Q : Type'} (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2944 A P Q q lt2 _112911 arg _112909 _112910) = (term2929 A P Q lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351236 (term2515 A P Q lt2 _112911 arg _112909 _112910) (term2473 P Q q _112909 _112910)). Qed.
Lemma lem8351243 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2477 D P Q pat _112910 e _112909) = (term2477 D P Q pat _112910 e _112909).
Proof. exact (eq_refl (term2477 D P Q pat _112910 e _112909)). Qed.
Lemma lem8351244 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2943 A D P Q pat e q lt2 _112911 arg _112909 _112910) = (term2932 A D P Q pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (MK_COMB (@lem8351243 D P Q pat _112910 e _112909) (@lem8351237 A P Q lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351255 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2942 A D P Q q pat e lt2 _112911 arg _112909 _112910) = (term2932 A D P Q pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (TRANS (@lem8351220 A D P Q pat e q lt2 _112911 arg _112909 _112910) (@lem8351244 A D P Q pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351256 {A B P : Type'} (p : type560 A B P) (_112908 : A -> B) (_112909 : P) : (term896 A B P p _112908 _112909) = (term896 A B P p _112908 _112909).
Proof. exact (eq_refl (term896 A B P p _112908 _112909)). Qed.
Lemma lem8351257 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2945 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2933 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910).
Proof. exact (MK_COMB (@lem8351256 A B P p _112908 _112909) (@lem8351255 A D P Q pat e lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351261 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351262 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_112908 : A -> B) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2933 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910) = (term2934 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910).
Proof. exact (@lem8351261 (term2476 D P Q pat _112910 e _112909) (term895 A B P p _112908 _112909) (term2929 A P Q lt2 _112911 arg q _112909 _112910)). Qed.
Lemma lem8351278 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8351279 {A B P Q : Type'} (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2935 A B P Q p _112908 lt2 _112911 arg q _112909 _112910) = (term2936 A B P Q lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (@lem8351278 (term2515 A P Q lt2 _112911 arg _112909 _112910) (term895 A B P p _112908 _112909) (term2473 P Q q _112909 _112910)). Qed.
Lemma lem8351295 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2477 D P Q pat _112910 e _112909) = (term2477 D P Q pat _112910 e _112909).
Proof. exact (eq_refl (term2477 D P Q pat _112910 e _112909)). Qed.
Lemma lem8351296 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2934 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910) = (term2937 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (MK_COMB (@lem8351295 D P Q pat _112910 e _112909) (@lem8351279 A B P Q lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351307 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2933 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910) = (term2937 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (TRANS (@lem8351262 A B D P Q pat e p _112908 lt2 _112911 arg q _112909 _112910) (@lem8351296 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351308 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2945 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2937 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (TRANS (@lem8351257 A B D P Q p _112908 pat e lt2 _112911 arg q _112909 _112910) (@lem8351307 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351309 {A P : Type'} (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2938 A P lt2 _112911 s _112909) = (term2938 A P lt2 _112911 s _112909).
Proof. exact (eq_refl (term2938 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351310 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910).
Proof. exact (MK_COMB (@lem8351309 A P lt2 _112911 s _112909) (@lem8351308 A B D P Q pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351321 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : ((term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910)) = ((term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)).
Proof. exact (MK_COMB (@lem8351195 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910) (@lem8351310 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351323 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8351324 (x : Prop) : (x = x) = True.
Proof. exact (@lem8351323 Prop x). Qed.
Lemma lem8351325 {A B D P Q : Type'} (s : P -> A) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (_112909 : P) (_112910 : Q) : ((term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910) = (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)) = True.
Proof. exact (@lem8351324 (term2939 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351326 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : ((term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910)) = True.
Proof. exact (TRANS (@lem8351321 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910) (@lem8351325 A B D P Q s pat e lt2 _112911 arg p _112908 q _112909 _112910)). Qed.
Lemma lem8351327 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : True = ((term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910)).
Proof. exact (SYM (@lem8351326 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351328 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2860 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (EQ_MP (@lem8351327 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910) (@lem0)). Qed.
Lemma lem8351329 {A B D P Q : Type'} (_112908 : A -> B) (_112911 : A) (_112909 : P) (_112910 : Q) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910.
Proof. exact (EQ_MP (@lem8351328 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910) (@lem8349159 A B D P Q _112908 _112910 _112911 _112909 p q pat e arg lt2 s h1)). Qed.
Lemma lem8351331 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8351332 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2947 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (@lem8351331 (term2945 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) (term2510 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351334 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8351335 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2948 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2949 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (@lem8351334 (term895 A B P p _112908 _112909) (term2942 A D P Q q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351337 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8351338 {A B P : Type'} (p : type560 A B P) (_112908 : A -> B) (_112909 : P) : (term1041 A B P p _112908 _112909) = (term893 A B P p _112908 _112909).
Proof. exact (@lem8351337 (term893 A B P p _112908 _112909)). Qed.
Lemma lem8351339 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8351340 {A B P : Type'} (p : type560 A B P) (_112908 : A -> B) (_112909 : P) : (term1042 A B P p _112908 _112909) = (term1043 A B P p _112908 _112909).
Proof. exact (MK_COMB (@lem8351339) (@lem8351338 A B P p _112908 _112909)). Qed.
Lemma lem8351342 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8351343 {A D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2950 A D P Q q pat e lt2 _112911 arg _112909 _112910) = (term2951 A D P Q q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (@lem8351342 (term2473 P Q q _112909 _112910) (term2952 A D P Q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351345 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8351346 {P Q : Type'} (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2902 P Q q _112909 _112910) = (term2472 P Q q _112909 _112910).
Proof. exact (@lem8351345 (term2472 P Q q _112909 _112910)). Qed.
Lemma lem8351347 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8351348 {P Q : Type'} (q : type1413 P Q) (_112909 : P) (_112910 : Q) : (term2953 P Q q _112909 _112910) = (term2954 P Q q _112909 _112910).
Proof. exact (MK_COMB (@lem8351347) (@lem8351346 P Q q _112909 _112910)). Qed.
Lemma lem8351350 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8351351 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2955 A D P Q pat e lt2 _112911 arg _112909 _112910) = (term2956 A D P Q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (@lem8351350 (term2476 D P Q pat _112910 e _112909) (term2515 A P Q lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351353 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8351354 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2900 D P Q pat _112910 e _112909) = ((@I (Q -> D) pat _112910) = (@I (P -> D) e _112909)).
Proof. exact (@lem8351353 ((@I (Q -> D) pat _112910) = (@I (P -> D) e _112909))). Qed.
Lemma lem8351355 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8351356 {D P Q : Type'} (pat : Q -> D) (_112910 : Q) (e : P -> D) (_112909 : P) : (term2901 D P Q pat _112910 e _112909) = (term2549 D P Q pat _112910 e _112909).
Proof. exact (MK_COMB (@lem8351355) (@lem8351354 D P Q pat _112910 e _112909)). Qed.
Lemma lem8351358 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8351359 {A P Q : Type'} (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2957 A P Q lt2 _112911 arg _112909 _112910) = (term2513 A P Q lt2 _112911 arg _112909 _112910).
Proof. exact (@lem8351358 (term2513 A P Q lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351360 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2956 A D P Q pat e lt2 _112911 arg _112909 _112910) = (term2958 A D P Q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (MK_COMB (@lem8351356 D P Q pat _112910 e _112909) (@lem8351359 A P Q lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351361 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2955 A D P Q pat e lt2 _112911 arg _112909 _112910) = (term2958 A D P Q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (TRANS (@lem8351351 A D P Q pat e lt2 _112911 arg _112909 _112910) (@lem8351360 A D P Q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351362 {A D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2951 A D P Q q pat e lt2 _112911 arg _112909 _112910) = (term2959 A D P Q q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (MK_COMB (@lem8351348 P Q q _112909 _112910) (@lem8351361 A D P Q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351363 {A D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2950 A D P Q q pat e lt2 _112911 arg _112909 _112910) = (term2959 A D P Q q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (TRANS (@lem8351343 A D P Q q pat e lt2 _112911 arg _112909 _112910) (@lem8351362 A D P Q q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351364 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2949 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2960 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (MK_COMB (@lem8351340 A B P p _112908 _112909) (@lem8351363 A D P Q q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351365 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2948 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2960 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (TRANS (@lem8351335 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) (@lem8351364 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351366 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8351367 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (lt2 : type1402 A) (_112911 : A) (arg : type1475 A P Q) (_112909 : P) (_112910 : Q) : (term2961 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2962 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910).
Proof. exact (MK_COMB (@lem8351366) (@lem8351365 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910)). Qed.
Lemma lem8351368 {A P : Type'} (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2510 A P lt2 _112911 s _112909) = (term2510 A P lt2 _112911 s _112909).
Proof. exact (eq_refl (term2510 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351369 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2947 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) = (term2963 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (MK_COMB (@lem8351367 A B D P Q p _112908 q pat e lt2 _112911 arg _112909 _112910) (@lem8351368 A P lt2 _112911 s _112909)). Qed.
Lemma lem8351370 {A B D P Q : Type'} (p : type560 A B P) (_112908 : A -> B) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_112910 : Q) (lt2 : type1402 A) (_112911 : A) (s : P -> A) (_112909 : P) : (term2946 A B D P Q s p _112908 q pat e lt2 _112911 arg _112909 _112910) = (term2963 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909).
Proof. exact (TRANS (@lem8351332 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) (@lem8351369 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909)). Qed.
Lemma lem8351372 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2964 A D P Q lt2 y arg _112896 pat e q a.
Proof. exact (conj (@lem8350991 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2) (@lem8350998 A B D P Q p f t arg _112896 pat e q lt2 y s a h2)). Qed.
Lemma lem8351373 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2965 A D P Q lt2 y arg _112896 pat e q a.
Proof. exact (conj (@lem8350858 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2) (@lem8351372 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2)). Qed.
Lemma lem8351374 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1341 D P Q _112896) (h2 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2966 A B D P Q p f lt2 y arg _112896 pat e q a.
Proof. exact (conj (@lem8350731 A B D P Q p f t arg _112896 pat e q lt2 y s a h2) (@lem8351373 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2)). Qed.
Lemma lem8351376 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112911 : A) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2963 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909.
Proof. exact (EQ_MP (@lem8351370 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909) (@lem8351329 A B D P Q _112908 _112911 _112909 _112910 p q pat e arg lt2 s h1)). Qed.
Lemma lem8351377 {A B D P Q : Type'} (_112908 : A -> B) (_112910 : Q) (_112911 : A) (_112909 : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2963 A B D P Q p _112908 q pat e arg _112910 lt2 _112911 s _112909.
Proof. exact (@lem8351376 A B D P Q _112908 _112910 _112911 _112909 p q pat e arg lt2 s h1). Qed.
Lemma lem8351378 {A B D P Q : Type'} (f : A -> B) (_112896 : type885 D P Q) (y : A) (a : P) (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term35 A B D P Q p q pat e arg lt2 s) : term2967 A B D P Q p f arg _112896 pat e q lt2 y s a.
Proof. exact (@lem8351377 A B D P Q f (term2463 D P Q _112896 pat e q a) y a p q pat e arg lt2 s h1). Qed.
Lemma lem8351381 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2510 A P lt2 y s a.
Proof. exact (@lem8351378 A B D P Q f _112896 y a p q pat e arg lt2 s h1 (@lem8351374 A B D P Q p f t arg _112896 pat e q lt2 y s a h2 h3)). Qed.
Lemma lem8351382 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2968 A P lt2 y s a.
Proof. exact (fun h0 : term2563 A P lt2 y s a => @lem8351381 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2 h3). Qed.
Lemma lem8351384 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8351385 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2968 A P lt2 y s a) = (term2510 A P lt2 y s a).
Proof. exact (@lem8351384 (term2510 A P lt2 y s a)). Qed.
Lemma lem8351386 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2510 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8351385 A P lt2 y s a) (@lem8351382 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2 h3)). Qed.
Lemma lem8351389 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8351391 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2563 A P lt2 y s a) = (term2969 A P lt2 y s a).
Proof. exact (@lem8351389 (term2510 A P lt2 y s a)). Qed.
Lemma lem8351394 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term2969 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8351391 A P lt2 y s a) (@lem8349161 A B D P Q p f t arg _112896 pat e q lt2 y s a h1)). Qed.
Lemma lem8351397 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : False.
Proof. exact (@lem8351394 A B D P Q p f t arg _112896 pat e q lt2 y s a h3 (@lem8351386 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2 h3)). Qed.
Lemma lem8351398 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : term979.
Proof. exact (fun h0 : ~ False => @lem8351397 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2 h3). Qed.
Lemma lem8351400 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8351401 : term979 = False.
Proof. exact (@lem8351400 False). Qed.
Lemma lem8351402 {A B D P Q : Type'} (p : type560 A B P) (f : A -> B) (t : Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term35 A B D P Q p q pat e arg lt2 s) (h2 : term1341 D P Q _112896) (h3 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a) : False.
Proof. exact (EQ_MP (@lem8351401) (@lem8351398 A B D P Q p f t arg _112896 pat e q lt2 y s a h1 h2 h3)). Qed.
Lemma lem8351919 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p f a'.
Proof. exact (proj1 (@lem8346103 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8351920 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term994 A B P p f a'.
Proof. exact (fun h0 : term895 A B P p f a' => @lem8351919 A B D P Q f t' p g pat e q a' h1). Qed.
Lemma lem8351922 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8351923 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term994 A B P p f a') = (term893 A B P p f a').
Proof. exact (@lem8351922 (term893 A B P p f a')). Qed.
Lemma lem8351924 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p f a'.
Proof. exact (EQ_MP (@lem8351923 A B P p f a') (@lem8351920 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8351927 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term895 A B P p g a'.
Proof. exact (h1). Qed.
Lemma lem8351928 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term2970 A B P p g a'.
Proof. exact (fun h0 : term893 A B P p g a' => @lem8351927 A B P p g a' h1). Qed.
Lemma lem8351930 (p : Prop) : (term2971 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8351931 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term2970 A B P p g a') = (term895 A B P p g a').
Proof. exact (@lem8351930 (term893 A B P p g a')). Qed.
Lemma lem8351932 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term895 A B P p g a'.
Proof. exact (EQ_MP (@lem8351931 A B P p g a') (@lem8351928 A B P p g a' h1)). Qed.
Lemma lem8351934 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8351935 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (s : P -> A) (_112938 : P) : (term2863 A B P lt2 z s _112936 p _112937 _112938) = (term2972 A B P p lt2 z _112936 _112937 s _112938).
Proof. exact (@lem8351934 (term2582 A B P _112936 p _112937 _112938) (term2609 A B P lt2 z _112936 _112937 s _112938)). Qed.
Lemma lem8351937 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8351938 {A B P : Type'} (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2973 A B P _112936 p _112937 _112938) = (term2974 A B P _112936 p _112937 _112938).
Proof. exact (@lem8351937 (term895 A B P p _112936 _112938) (term893 A B P p _112937 _112938)). Qed.
Lemma lem8351940 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8351941 {A B P : Type'} (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term1041 A B P p _112936 _112938) = (term893 A B P p _112936 _112938).
Proof. exact (@lem8351940 (term893 A B P p _112936 _112938)). Qed.
Lemma lem8351942 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8351943 {A B P : Type'} (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term1042 A B P p _112936 _112938) = (term1043 A B P p _112936 _112938).
Proof. exact (MK_COMB (@lem8351942) (@lem8351941 A B P p _112936 _112938)). Qed.
Lemma lem8351944 {A B P : Type'} (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term895 A B P p _112937 _112938) = (term895 A B P p _112937 _112938).
Proof. exact (eq_refl (term895 A B P p _112937 _112938)). Qed.
Lemma lem8351945 {A B P : Type'} (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2974 A B P _112936 p _112937 _112938) = (term2975 A B P _112936 p _112937 _112938).
Proof. exact (MK_COMB (@lem8351943 A B P p _112936 _112938) (@lem8351944 A B P p _112937 _112938)). Qed.
Lemma lem8351946 {A B P : Type'} (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2973 A B P _112936 p _112937 _112938) = (term2975 A B P _112936 p _112937 _112938).
Proof. exact (TRANS (@lem8351938 A B P _112936 p _112937 _112938) (@lem8351945 A B P _112936 p _112937 _112938)). Qed.
Lemma lem8351947 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8351948 {A B P : Type'} (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2976 A B P _112936 p _112937 _112938) = (term2977 A B P _112936 p _112937 _112938).
Proof. exact (MK_COMB (@lem8351947) (@lem8351946 A B P _112936 p _112937 _112938)). Qed.
Lemma lem8351949 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (s : P -> A) (_112938 : P) : (term2609 A B P lt2 z _112936 _112937 s _112938) = (term2609 A B P lt2 z _112936 _112937 s _112938).
Proof. exact (eq_refl (term2609 A B P lt2 z _112936 _112937 s _112938)). Qed.
Lemma lem8351950 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (s : P -> A) (_112938 : P) : (term2972 A B P p lt2 z _112936 _112937 s _112938) = (term2978 A B P p lt2 z _112936 _112937 s _112938).
Proof. exact (MK_COMB (@lem8351948 A B P _112936 p _112937 _112938) (@lem8351949 A B P lt2 z _112936 _112937 s _112938)). Qed.
Lemma lem8351951 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (s : P -> A) (_112938 : P) : (term2863 A B P lt2 z s _112936 p _112937 _112938) = (term2978 A B P p lt2 z _112936 _112937 s _112938).
Proof. exact (TRANS (@lem8351935 A B P p lt2 z _112936 _112937 s _112938) (@lem8351950 A B P p lt2 z _112936 _112937 s _112938)). Qed.
Lemma lem8351953 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term895 A B P p g a') (h2 : term2558 A B D P Q f t' p g pat e q a') : term2975 A B P f p g a'.
Proof. exact (conj (@lem8351924 A B D P Q f t' p g pat e q a' h2) (@lem8351932 A B P p g a' h1)). Qed.
Lemma lem8351955 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2978 A B P p lt2 z _112936 _112937 s _112938.
Proof. exact (EQ_MP (@lem8351951 A B P p lt2 z _112936 _112937 s _112938) (@lem8349417 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8351956 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2978 A B P p lt2 z _112936 _112937 s _112938.
Proof. exact (@lem8351955 A B P _112936 _112937 _112938 lt2 s z p h1). Qed.
Lemma lem8351957 {A B P : Type'} (f : A -> B) (g : A -> B) (a' : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2978 A B P p lt2 z f g s a'.
Proof. exact (@lem8351956 A B P f g a' lt2 s z p h1). Qed.
Lemma lem8351960 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2558 A B D P Q f t' p g pat e q a') : term2609 A B P lt2 z f g s a'.
Proof. exact (@lem8351957 A B P f g a' lt2 s z p h1 (@lem8351953 A B D P Q f t' p g pat e q a' h2 h3)). Qed.
Lemma lem8351961 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2558 A B D P Q f t' p g pat e q a') : term2979 A B P lt2 z f g s a'.
Proof. exact (fun h0 : term2980 A B P lt2 z f g s a' => @lem8351960 A B D P Q lt2 s z f t' p g pat e q a' h1 h2 h3). Qed.
Lemma lem8351963 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8351964 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a' : P) : (term2979 A B P lt2 z f g s a') = (term2609 A B P lt2 z f g s a').
Proof. exact (@lem8351963 (term2609 A B P lt2 z f g s a')). Qed.
Lemma lem8351965 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2558 A B D P Q f t' p g pat e q a') : term2609 A B P lt2 z f g s a'.
Proof. exact (EQ_MP (@lem8351964 A B P lt2 z f g s a') (@lem8351961 A B D P Q lt2 s z f t' p g pat e q a' h1 h2 h3)). Qed.
Lemma lem8351971 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8351972 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2566 A B P lt2 s a' f g _112947) = (term2981 A B P f g lt2 _112947 s a').
Proof. exact (@lem8351971 ((@I (A -> B) f _112947) = (@I (A -> B) g _112947)) (term2563 A P lt2 _112947 s a')). Qed.
Lemma lem8351980 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8351981 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2982 A B P lt2 s a' f g _112947) = (term2983 A B P f g lt2 _112947 s a').
Proof. exact (MK_COMB (@lem8351980) (@lem8351972 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351989 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2981 A B P f g lt2 _112947 s a') = (term2981 A B P f g lt2 _112947 s a').
Proof. exact (eq_refl (term2981 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351990 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : ((term2566 A B P lt2 s a' f g _112947) = (term2981 A B P f g lt2 _112947 s a')) = ((term2981 A B P f g lt2 _112947 s a') = (term2981 A B P f g lt2 _112947 s a')).
Proof. exact (MK_COMB (@lem8351981 A B P f g lt2 _112947 s a') (@lem8351989 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351992 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8351993 (x : Prop) : (x = x) = True.
Proof. exact (@lem8351992 Prop x). Qed.
Lemma lem8351994 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : ((term2981 A B P f g lt2 _112947 s a') = (term2981 A B P f g lt2 _112947 s a')) = True.
Proof. exact (@lem8351993 (term2981 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351995 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : ((term2566 A B P lt2 s a' f g _112947) = (term2981 A B P f g lt2 _112947 s a')) = True.
Proof. exact (TRANS (@lem8351990 A B P f g lt2 _112947 s a') (@lem8351994 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351996 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : True = ((term2566 A B P lt2 s a' f g _112947) = (term2981 A B P f g lt2 _112947 s a')).
Proof. exact (SYM (@lem8351995 A B P f g lt2 _112947 s a')). Qed.
Lemma lem8351997 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2566 A B P lt2 s a' f g _112947) = (term2981 A B P f g lt2 _112947 s a').
Proof. exact (EQ_MP (@lem8351996 A B P f g lt2 _112947 s a') (@lem0)). Qed.
Lemma lem8351998 {A B D P Q : Type'} (_112947 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2981 A B P f g lt2 _112947 s a'.
Proof. exact (EQ_MP (@lem8351997 A B P f g lt2 _112947 s a') (@lem8349345 A B D P Q _112947 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8352000 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8352001 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112947 : A) : (term2981 A B P f g lt2 _112947 s a') = (term2984 A B P lt2 s a' f g _112947).
Proof. exact (@lem8352000 (term2563 A P lt2 _112947 s a') ((@I (A -> B) f _112947) = (@I (A -> B) g _112947))). Qed.
Lemma lem8352003 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8352004 {A P : Type'} (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2985 A P lt2 _112947 s a') = (term2510 A P lt2 _112947 s a').
Proof. exact (@lem8352003 (term2510 A P lt2 _112947 s a')). Qed.
Lemma lem8352005 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8352006 {A P : Type'} (lt2 : type1402 A) (_112947 : A) (s : P -> A) (a' : P) : (term2986 A P lt2 _112947 s a') = (term2987 A P lt2 _112947 s a').
Proof. exact (MK_COMB (@lem8352005) (@lem8352004 A P lt2 _112947 s a')). Qed.
Lemma lem8352007 {A B : Type'} (f : A -> B) (g : A -> B) (_112947 : A) : ((@I (A -> B) f _112947) = (@I (A -> B) g _112947)) = ((@I (A -> B) f _112947) = (@I (A -> B) g _112947)).
Proof. exact (eq_refl ((@I (A -> B) f _112947) = (@I (A -> B) g _112947))). Qed.
Lemma lem8352008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112947 : A) : (term2984 A B P lt2 s a' f g _112947) = (term2988 A B P lt2 s a' f g _112947).
Proof. exact (MK_COMB (@lem8352006 A P lt2 _112947 s a') (@lem8352007 A B f g _112947)). Qed.
Lemma lem8352009 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112947 : A) : (term2981 A B P f g lt2 _112947 s a') = (term2988 A B P lt2 s a' f g _112947).
Proof. exact (TRANS (@lem8352001 A B P lt2 s a' f g _112947) (@lem8352008 A B P lt2 s a' f g _112947)). Qed.
Lemma lem8352012 {A B D P Q : Type'} (_112947 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2988 A B P lt2 s a' f g _112947.
Proof. exact (EQ_MP (@lem8352009 A B P lt2 s a' f g _112947) (@lem8351998 A B D P Q _112947 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8352013 {A B D P Q : Type'} (_112947 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2988 A B P lt2 s a' f g _112947.
Proof. exact (@lem8352012 A B D P Q _112947 lt2 s f p g pat e q a' t' h1). Qed.
Lemma lem8352014 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2989 A B P lt2 s z f g a'.
Proof. exact (@lem8352013 A B D P Q (term2592 A B P z f g a') lt2 s f p g pat e q a' t' h1). Qed.
Lemma lem8352017 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : (term2595 A B P z f g a') = (term2598 A B P z f g a').
Proof. exact (@lem8352014 A B D P Q z lt2 s f p g pat e q a' t' h3 (@lem8351965 A B D P Q lt2 s z f t' p g pat e q a' h1 h2 h4)). Qed.
Lemma lem8352018 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : term2990 A B P z f g a'.
Proof. exact (fun h0 : term2602 A B P z f g a' => @lem8352017 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8352020 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352021 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a' : P) : (term2990 A B P z f g a') = ((term2595 A B P z f g a') = (term2598 A B P z f g a')).
Proof. exact (@lem8352020 ((term2595 A B P z f g a') = (term2598 A B P z f g a'))). Qed.
Lemma lem8352022 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : (term2595 A B P z f g a') = (term2598 A B P z f g a').
Proof. exact (EQ_MP (@lem8352021 A B P z f g a') (@lem8352018 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8352024 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p f a'.
Proof. exact (proj1 (@lem8346103 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352025 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term994 A B P p f a'.
Proof. exact (fun h0 : term895 A B P p f a' => @lem8352024 A B D P Q f t' p g pat e q a' h1). Qed.
Lemma lem8352027 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352028 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term994 A B P p f a') = (term893 A B P p f a').
Proof. exact (@lem8352027 (term893 A B P p f a')). Qed.
Lemma lem8352029 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p f a'.
Proof. exact (EQ_MP (@lem8352028 A B P p f a') (@lem8352025 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352047 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8352048 {A B P : Type'} (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2582 A B P _112936 p _112937 _112938) = (term2586 A B P _112937 p _112936 _112938).
Proof. exact (@lem8352047 (term893 A B P p _112937 _112938) (term895 A B P p _112936 _112938)). Qed.
Lemma lem8352054 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) : (term2991 A B P z _112936 _112937 _112938) = (term2991 A B P z _112936 _112937 _112938).
Proof. exact (eq_refl (term2991 A B P z _112936 _112937 _112938)). Qed.
Lemma lem8352055 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2864 A B P z _112936 p _112937 _112938) = (term2992 A B P z _112937 p _112936 _112938).
Proof. exact (MK_COMB (@lem8352054 A B P z _112936 _112937 _112938) (@lem8352048 A B P _112937 p _112936 _112938)). Qed.
Lemma lem8352059 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8352060 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2992 A B P z _112937 p _112936 _112938) = (term2993 A B P z _112937 p _112936 _112938).
Proof. exact (@lem8352059 (term893 A B P p _112937 _112938) (term2602 A B P z _112936 _112937 _112938) (term895 A B P p _112936 _112938)). Qed.
Lemma lem8352078 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2864 A B P z _112936 p _112937 _112938) = (term2993 A B P z _112937 p _112936 _112938).
Proof. exact (TRANS (@lem8352055 A B P z _112937 p _112936 _112938) (@lem8352060 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352079 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8352080 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2994 A B P z _112936 p _112937 _112938) = (term2995 A B P z _112937 p _112936 _112938).
Proof. exact (MK_COMB (@lem8352079) (@lem8352078 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352098 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2993 A B P z _112937 p _112936 _112938) = (term2993 A B P z _112937 p _112936 _112938).
Proof. exact (eq_refl (term2993 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352099 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : ((term2864 A B P z _112936 p _112937 _112938) = (term2993 A B P z _112937 p _112936 _112938)) = ((term2993 A B P z _112937 p _112936 _112938) = (term2993 A B P z _112937 p _112936 _112938)).
Proof. exact (MK_COMB (@lem8352080 A B P z _112937 p _112936 _112938) (@lem8352098 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352101 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8352102 (x : Prop) : (x = x) = True.
Proof. exact (@lem8352101 Prop x). Qed.
Lemma lem8352103 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : ((term2993 A B P z _112937 p _112936 _112938) = (term2993 A B P z _112937 p _112936 _112938)) = True.
Proof. exact (@lem8352102 (term2993 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352104 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : ((term2864 A B P z _112936 p _112937 _112938) = (term2993 A B P z _112937 p _112936 _112938)) = True.
Proof. exact (TRANS (@lem8352099 A B P z _112937 p _112936 _112938) (@lem8352103 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352105 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : True = ((term2864 A B P z _112936 p _112937 _112938) = (term2993 A B P z _112937 p _112936 _112938)).
Proof. exact (SYM (@lem8352104 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352106 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2864 A B P z _112936 p _112937 _112938) = (term2993 A B P z _112937 p _112936 _112938).
Proof. exact (EQ_MP (@lem8352105 A B P z _112937 p _112936 _112938) (@lem0)). Qed.
Lemma lem8352107 {A B P : Type'} (_112937 : A -> B) (_112936 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term2993 A B P z _112937 p _112936 _112938.
Proof. exact (EQ_MP (@lem8352106 A B P z _112937 p _112936 _112938) (@lem8349427 A B P _112936 _112937 _112938 lt2 s z p h1)). Qed.
Lemma lem8352109 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8352110 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2993 A B P z _112937 p _112936 _112938) = (term2996 A B P z _112936 p _112937 _112938).
Proof. exact (@lem8352109 (term2997 A B P z _112937 p _112936 _112938) (term893 A B P p _112937 _112938)). Qed.
Lemma lem8352112 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8352113 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2998 A B P z _112937 p _112936 _112938) = (term2999 A B P z _112937 p _112936 _112938).
Proof. exact (@lem8352112 (term2602 A B P z _112936 _112937 _112938) (term895 A B P p _112936 _112938)). Qed.
Lemma lem8352115 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8352116 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) : (term3000 A B P z _112936 _112937 _112938) = ((term2595 A B P z _112936 _112937 _112938) = (term2598 A B P z _112936 _112937 _112938)).
Proof. exact (@lem8352115 ((term2595 A B P z _112936 _112937 _112938) = (term2598 A B P z _112936 _112937 _112938))). Qed.
Lemma lem8352117 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8352118 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) : (term3001 A B P z _112936 _112937 _112938) = (term3002 A B P z _112936 _112937 _112938).
Proof. exact (MK_COMB (@lem8352117) (@lem8352116 A B P z _112936 _112937 _112938)). Qed.
Lemma lem8352120 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8352121 {A B P : Type'} (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term1041 A B P p _112936 _112938) = (term893 A B P p _112936 _112938).
Proof. exact (@lem8352120 (term893 A B P p _112936 _112938)). Qed.
Lemma lem8352122 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2999 A B P z _112937 p _112936 _112938) = (term3003 A B P z _112937 p _112936 _112938).
Proof. exact (MK_COMB (@lem8352118 A B P z _112936 _112937 _112938) (@lem8352121 A B P p _112936 _112938)). Qed.
Lemma lem8352123 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term2998 A B P z _112937 p _112936 _112938) = (term3003 A B P z _112937 p _112936 _112938).
Proof. exact (TRANS (@lem8352113 A B P z _112937 p _112936 _112938) (@lem8352122 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352124 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8352125 {A B P : Type'} (z : type518 A B P) (_112937 : A -> B) (p : type560 A B P) (_112936 : A -> B) (_112938 : P) : (term3004 A B P z _112937 p _112936 _112938) = (term3005 A B P z _112937 p _112936 _112938).
Proof. exact (MK_COMB (@lem8352124) (@lem8352123 A B P z _112937 p _112936 _112938)). Qed.
Lemma lem8352126 {A B P : Type'} (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term893 A B P p _112937 _112938) = (term893 A B P p _112937 _112938).
Proof. exact (eq_refl (term893 A B P p _112937 _112938)). Qed.
Lemma lem8352127 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2996 A B P z _112936 p _112937 _112938) = (term3006 A B P z _112936 p _112937 _112938).
Proof. exact (MK_COMB (@lem8352125 A B P z _112937 p _112936 _112938) (@lem8352126 A B P p _112937 _112938)). Qed.
Lemma lem8352128 {A B P : Type'} (z : type518 A B P) (_112936 : A -> B) (p : type560 A B P) (_112937 : A -> B) (_112938 : P) : (term2993 A B P z _112937 p _112936 _112938) = (term3006 A B P z _112936 p _112937 _112938).
Proof. exact (TRANS (@lem8352110 A B P z _112936 p _112937 _112938) (@lem8352127 A B P z _112936 p _112937 _112938)). Qed.
Lemma lem8352130 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : term3003 A B P z g p f a'.
Proof. exact (conj (@lem8352022 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (@lem8352029 A B D P Q f t' p g pat e q a' h4)). Qed.
Lemma lem8352132 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3006 A B P z _112936 p _112937 _112938.
Proof. exact (EQ_MP (@lem8352128 A B P z _112936 p _112937 _112938) (@lem8352107 A B P _112937 _112936 _112938 lt2 s z p h1)). Qed.
Lemma lem8352133 {A B P : Type'} (_112936 : A -> B) (_112937 : A -> B) (_112938 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3006 A B P z _112936 p _112937 _112938.
Proof. exact (@lem8352132 A B P _112936 _112937 _112938 lt2 s z p h1). Qed.
Lemma lem8352134 {A B P : Type'} (f : A -> B) (g : A -> B) (a' : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3006 A B P z f p g a'.
Proof. exact (@lem8352133 A B P f g a' lt2 s z p h1). Qed.
Lemma lem8352137 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p g a'.
Proof. exact (@lem8352134 A B P f g a' lt2 s z p h1 (@lem8352130 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8352138 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2558 A B D P Q f t' p g pat e q a') : term994 A B P p g a'.
Proof. exact (fun h0 : term895 A B P p g a' => @lem8352137 A B D P Q z lt2 s f t' p g pat e q a' h1 h0 h2 h3). Qed.
Lemma lem8352140 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352141 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term994 A B P p g a') = (term893 A B P p g a').
Proof. exact (@lem8352140 (term893 A B P p g a')). Qed.
Lemma lem8352142 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2558 A B D P Q f t' p g pat e q a') : term893 A B P p g a'.
Proof. exact (EQ_MP (@lem8352141 A B P p g a') (@lem8352138 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3)). Qed.
Lemma lem8352145 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8352147 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term895 A B P p g a') = (term3007 A B P p g a').
Proof. exact (@lem8352145 (term893 A B P p g a')). Qed.
Lemma lem8352150 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) (h1 : term895 A B P p g a') : term3007 A B P p g a'.
Proof. exact (EQ_MP (@lem8352147 A B P p g a') (@lem8349353 A B P p g a' h1)). Qed.
Lemma lem8352153 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (@lem8352150 A B P p g a' h2 (@lem8352142 A B D P Q z lt2 s f t' p g pat e q a' h1 h3 h4)). Qed.
Lemma lem8352154 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : term979.
Proof. exact (fun h0 : ~ False => @lem8352153 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8352156 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352157 : term979 = False.
Proof. exact (@lem8352156 False). Qed.
Lemma lem8352158 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8352157) (@lem8352154 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8352675 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346104 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352676 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8352675 A B D P Q f t' p g pat e q a' h1). Qed.
Lemma lem8352678 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352679 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8352678 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8352680 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8352679 D P Q pat t' e a') (@lem8352676 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352682 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346104 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352683 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8352682 A B D P Q f t' p g pat e q a' h1). Qed.
Lemma lem8352685 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352686 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8352685 (term2472 P Q q a' t')). Qed.
Lemma lem8352687 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8352686 P Q q a' t') (@lem8352683 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352689 (a : Prop) (b : Prop) : (term976 a b) = (term977 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8352690 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_112973 : Q) : (term2478 D P Q pat e q a' _112973) = (term3008 D P Q pat e q a' _112973).
Proof. exact (@lem8352689 ((@I (Q -> D) pat _112973) = (@I (P -> D) e a')) (term2472 P Q q a' _112973)). Qed.
Lemma lem8352692 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8352693 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_112973 : Q) : (term3008 D P Q pat e q a' _112973) = (term3009 D P Q pat e q a' _112973).
Proof. exact (@lem8352692 (term2550 D P Q pat e q a' _112973)). Qed.
Lemma lem8352694 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_112973 : Q) : (term2478 D P Q pat e q a' _112973) = (term3009 D P Q pat e q a' _112973).
Proof. exact (TRANS (@lem8352690 D P Q pat e q a' _112973) (@lem8352693 D P Q pat e q a' _112973)). Qed.
Lemma lem8352696 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2558 A B D P Q f t' p g pat e q a') : term2550 D P Q pat e q a' t'.
Proof. exact (conj (@lem8352680 A B D P Q f t' p g pat e q a' h1) (@lem8352687 A B D P Q f t' p g pat e q a' h1)). Qed.
Lemma lem8352698 {D P Q : Type'} (_112973 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' _112973.
Proof. exact (EQ_MP (@lem8352694 D P Q pat e q a' _112973) (@lem8349541 D P Q _112973 pat e q a' h1)). Qed.
Lemma lem8352699 {D P Q : Type'} (_112973 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' _112973.
Proof. exact (@lem8352698 D P Q _112973 pat e q a' h1). Qed.
Lemma lem8352700 {D P Q : Type'} (t' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' t'.
Proof. exact (@lem8352699 D P Q t' pat e q a' h1). Qed.
Lemma lem8352703 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') (h2 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (@lem8352700 D P Q t' pat e q a' h1 (@lem8352696 A B D P Q f t' p g pat e q a' h2)). Qed.
Lemma lem8352704 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') (h2 : term2558 A B D P Q f t' p g pat e q a') : term979.
Proof. exact (fun h0 : ~ False => @lem8352703 A B D P Q f t' p g pat e q a' h1 h2). Qed.
Lemma lem8352706 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8352707 : term979 = False.
Proof. exact (@lem8352706 False). Qed.
Lemma lem8352708 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') (h2 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8352707) (@lem8352704 A B D P Q f t' p g pat e q a' h1 h2)). Qed.
Lemma lem8353226 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term895 A B P p f a'.
Proof. exact (h1). Qed.
Lemma lem8353227 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term2970 A B P p f a'.
Proof. exact (fun h0 : term893 A B P p f a' => @lem8353226 A B P p f a' h1). Qed.
Lemma lem8353229 (p : Prop) : (term2971 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8353230 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term2970 A B P p f a') = (term895 A B P p f a').
Proof. exact (@lem8353229 (term893 A B P p f a')). Qed.
Lemma lem8353231 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term895 A B P p f a'.
Proof. exact (EQ_MP (@lem8353230 A B P p f a') (@lem8353227 A B P p f a' h1)). Qed.
Lemma lem8353233 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p g a'.
Proof. exact (proj1 (@lem8346110 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353234 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term994 A B P p g a'.
Proof. exact (fun h0 : term895 A B P p g a' => @lem8353233 A B D P Q f p g pat e q a' t' h1). Qed.
Lemma lem8353236 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353237 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term994 A B P p g a') = (term893 A B P p g a').
Proof. exact (@lem8353236 (term893 A B P p g a')). Qed.
Lemma lem8353238 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p g a'.
Proof. exact (EQ_MP (@lem8353237 A B P p g a') (@lem8353234 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353240 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8353241 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (s : P -> A) (_112989 : P) : (term2865 A B P lt2 z s _112987 p _112988 _112989) = (term3010 A B P p lt2 z _112987 _112988 s _112989).
Proof. exact (@lem8353240 (term2586 A B P _112987 p _112988 _112989) (term2609 A B P lt2 z _112987 _112988 s _112989)). Qed.
Lemma lem8353243 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8353244 {A B P : Type'} (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3011 A B P _112987 p _112988 _112989) = (term3012 A B P _112987 p _112988 _112989).
Proof. exact (@lem8353243 (term893 A B P p _112987 _112989) (term895 A B P p _112988 _112989)). Qed.
Lemma lem8353246 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8353247 {A B P : Type'} (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term1041 A B P p _112988 _112989) = (term893 A B P p _112988 _112989).
Proof. exact (@lem8353246 (term893 A B P p _112988 _112989)). Qed.
Lemma lem8353248 {A B P : Type'} (p : type560 A B P) (_112987 : A -> B) (_112989 : P) : (term3013 A B P p _112987 _112989) = (term3013 A B P p _112987 _112989).
Proof. exact (eq_refl (term3013 A B P p _112987 _112989)). Qed.
Lemma lem8353249 {A B P : Type'} (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3012 A B P _112987 p _112988 _112989) = (term3014 A B P _112987 p _112988 _112989).
Proof. exact (MK_COMB (@lem8353248 A B P p _112987 _112989) (@lem8353247 A B P p _112988 _112989)). Qed.
Lemma lem8353250 {A B P : Type'} (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3011 A B P _112987 p _112988 _112989) = (term3014 A B P _112987 p _112988 _112989).
Proof. exact (TRANS (@lem8353244 A B P _112987 p _112988 _112989) (@lem8353249 A B P _112987 p _112988 _112989)). Qed.
Lemma lem8353251 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8353252 {A B P : Type'} (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3015 A B P _112987 p _112988 _112989) = (term3016 A B P _112987 p _112988 _112989).
Proof. exact (MK_COMB (@lem8353251) (@lem8353250 A B P _112987 p _112988 _112989)). Qed.
Lemma lem8353253 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (s : P -> A) (_112989 : P) : (term2609 A B P lt2 z _112987 _112988 s _112989) = (term2609 A B P lt2 z _112987 _112988 s _112989).
Proof. exact (eq_refl (term2609 A B P lt2 z _112987 _112988 s _112989)). Qed.
Lemma lem8353254 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (s : P -> A) (_112989 : P) : (term3010 A B P p lt2 z _112987 _112988 s _112989) = (term3017 A B P p lt2 z _112987 _112988 s _112989).
Proof. exact (MK_COMB (@lem8353252 A B P _112987 p _112988 _112989) (@lem8353253 A B P lt2 z _112987 _112988 s _112989)). Qed.
Lemma lem8353255 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (s : P -> A) (_112989 : P) : (term2865 A B P lt2 z s _112987 p _112988 _112989) = (term3017 A B P p lt2 z _112987 _112988 s _112989).
Proof. exact (TRANS (@lem8353241 A B P p lt2 z _112987 _112988 s _112989) (@lem8353254 A B P p lt2 z _112987 _112988 s _112989)). Qed.
Lemma lem8353257 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term895 A B P p f a') (h2 : term2556 A B D P Q f p g pat e q a' t') : term3014 A B P f p g a'.
Proof. exact (conj (@lem8353231 A B P p f a' h1) (@lem8353238 A B D P Q f p g pat e q a' t' h2)). Qed.
Lemma lem8353259 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3017 A B P p lt2 z _112987 _112988 s _112989.
Proof. exact (EQ_MP (@lem8353255 A B P p lt2 z _112987 _112988 s _112989) (@lem8349809 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8353260 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3017 A B P p lt2 z _112987 _112988 s _112989.
Proof. exact (@lem8353259 A B P _112987 _112988 _112989 lt2 s z p h1). Qed.
Lemma lem8353261 {A B P : Type'} (f : A -> B) (g : A -> B) (a' : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3017 A B P p lt2 z f g s a'.
Proof. exact (@lem8353260 A B P f g a' lt2 s z p h1). Qed.
Lemma lem8353264 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2556 A B D P Q f p g pat e q a' t') : term2609 A B P lt2 z f g s a'.
Proof. exact (@lem8353261 A B P f g a' lt2 s z p h1 (@lem8353257 A B D P Q f p g pat e q a' t' h2 h3)). Qed.
Lemma lem8353265 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2556 A B D P Q f p g pat e q a' t') : term2979 A B P lt2 z f g s a'.
Proof. exact (fun h0 : term2980 A B P lt2 z f g s a' => @lem8353264 A B D P Q lt2 s z f p g pat e q a' t' h1 h2 h3). Qed.
Lemma lem8353267 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353268 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a' : P) : (term2979 A B P lt2 z f g s a') = (term2609 A B P lt2 z f g s a').
Proof. exact (@lem8353267 (term2609 A B P lt2 z f g s a')). Qed.
Lemma lem8353269 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2556 A B D P Q f p g pat e q a' t') : term2609 A B P lt2 z f g s a'.
Proof. exact (EQ_MP (@lem8353268 A B P lt2 z f g s a') (@lem8353265 A B D P Q lt2 s z f p g pat e q a' t' h1 h2 h3)). Qed.
Lemma lem8353275 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8353276 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2566 A B P lt2 s a' f g _112998) = (term2981 A B P f g lt2 _112998 s a').
Proof. exact (@lem8353275 ((@I (A -> B) f _112998) = (@I (A -> B) g _112998)) (term2563 A P lt2 _112998 s a')). Qed.
Lemma lem8353284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8353285 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2982 A B P lt2 s a' f g _112998) = (term2983 A B P f g lt2 _112998 s a').
Proof. exact (MK_COMB (@lem8353284) (@lem8353276 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353293 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2981 A B P f g lt2 _112998 s a') = (term2981 A B P f g lt2 _112998 s a').
Proof. exact (eq_refl (term2981 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353294 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : ((term2566 A B P lt2 s a' f g _112998) = (term2981 A B P f g lt2 _112998 s a')) = ((term2981 A B P f g lt2 _112998 s a') = (term2981 A B P f g lt2 _112998 s a')).
Proof. exact (MK_COMB (@lem8353285 A B P f g lt2 _112998 s a') (@lem8353293 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353296 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8353297 (x : Prop) : (x = x) = True.
Proof. exact (@lem8353296 Prop x). Qed.
Lemma lem8353298 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : ((term2981 A B P f g lt2 _112998 s a') = (term2981 A B P f g lt2 _112998 s a')) = True.
Proof. exact (@lem8353297 (term2981 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353299 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : ((term2566 A B P lt2 s a' f g _112998) = (term2981 A B P f g lt2 _112998 s a')) = True.
Proof. exact (TRANS (@lem8353294 A B P f g lt2 _112998 s a') (@lem8353298 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353300 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : True = ((term2566 A B P lt2 s a' f g _112998) = (term2981 A B P f g lt2 _112998 s a')).
Proof. exact (SYM (@lem8353299 A B P f g lt2 _112998 s a')). Qed.
Lemma lem8353301 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2566 A B P lt2 s a' f g _112998) = (term2981 A B P f g lt2 _112998 s a').
Proof. exact (EQ_MP (@lem8353300 A B P f g lt2 _112998 s a') (@lem0)). Qed.
Lemma lem8353302 {A B D P Q : Type'} (_112998 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2981 A B P f g lt2 _112998 s a'.
Proof. exact (EQ_MP (@lem8353301 A B P f g lt2 _112998 s a') (@lem8349717 A B D P Q _112998 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8353304 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8353305 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112998 : A) : (term2981 A B P f g lt2 _112998 s a') = (term2984 A B P lt2 s a' f g _112998).
Proof. exact (@lem8353304 (term2563 A P lt2 _112998 s a') ((@I (A -> B) f _112998) = (@I (A -> B) g _112998))). Qed.
Lemma lem8353307 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8353308 {A P : Type'} (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2985 A P lt2 _112998 s a') = (term2510 A P lt2 _112998 s a').
Proof. exact (@lem8353307 (term2510 A P lt2 _112998 s a')). Qed.
Lemma lem8353309 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8353310 {A P : Type'} (lt2 : type1402 A) (_112998 : A) (s : P -> A) (a' : P) : (term2986 A P lt2 _112998 s a') = (term2987 A P lt2 _112998 s a').
Proof. exact (MK_COMB (@lem8353309) (@lem8353308 A P lt2 _112998 s a')). Qed.
Lemma lem8353311 {A B : Type'} (f : A -> B) (g : A -> B) (_112998 : A) : ((@I (A -> B) f _112998) = (@I (A -> B) g _112998)) = ((@I (A -> B) f _112998) = (@I (A -> B) g _112998)).
Proof. exact (eq_refl ((@I (A -> B) f _112998) = (@I (A -> B) g _112998))). Qed.
Lemma lem8353312 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112998 : A) : (term2984 A B P lt2 s a' f g _112998) = (term2988 A B P lt2 s a' f g _112998).
Proof. exact (MK_COMB (@lem8353310 A P lt2 _112998 s a') (@lem8353311 A B f g _112998)). Qed.
Lemma lem8353313 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a' : P) (f : A -> B) (g : A -> B) (_112998 : A) : (term2981 A B P f g lt2 _112998 s a') = (term2988 A B P lt2 s a' f g _112998).
Proof. exact (TRANS (@lem8353305 A B P lt2 s a' f g _112998) (@lem8353312 A B P lt2 s a' f g _112998)). Qed.
Lemma lem8353316 {A B D P Q : Type'} (_112998 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2988 A B P lt2 s a' f g _112998.
Proof. exact (EQ_MP (@lem8353313 A B P lt2 s a' f g _112998) (@lem8353302 A B D P Q _112998 lt2 s f p g pat e q a' t' h1)). Qed.
Lemma lem8353317 {A B D P Q : Type'} (_112998 : A) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2988 A B P lt2 s a' f g _112998.
Proof. exact (@lem8353316 A B D P Q _112998 lt2 s f p g pat e q a' t' h1). Qed.
Lemma lem8353318 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2570 A B D P Q lt2 s f p g pat e q a' t') : term2989 A B P lt2 s z f g a'.
Proof. exact (@lem8353317 A B D P Q (term2592 A B P z f g a') lt2 s f p g pat e q a' t' h1). Qed.
Lemma lem8353321 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : (term2595 A B P z f g a') = (term2598 A B P z f g a').
Proof. exact (@lem8353318 A B D P Q z lt2 s f p g pat e q a' t' h3 (@lem8353269 A B D P Q lt2 s z f p g pat e q a' t' h1 h2 h4)). Qed.
Lemma lem8353322 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : term2990 A B P z f g a'.
Proof. exact (fun h0 : term2602 A B P z f g a' => @lem8353321 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4). Qed.
Lemma lem8353324 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353325 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a' : P) : (term2990 A B P z f g a') = ((term2595 A B P z f g a') = (term2598 A B P z f g a')).
Proof. exact (@lem8353324 ((term2595 A B P z f g a') = (term2598 A B P z f g a'))). Qed.
Lemma lem8353326 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : (term2595 A B P z f g a') = (term2598 A B P z f g a').
Proof. exact (EQ_MP (@lem8353325 A B P z f g a') (@lem8353322 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4)). Qed.
Lemma lem8353328 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p g a'.
Proof. exact (proj1 (@lem8346110 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353329 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term994 A B P p g a'.
Proof. exact (fun h0 : term895 A B P p g a' => @lem8353328 A B D P Q f p g pat e q a' t' h1). Qed.
Lemma lem8353331 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353332 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a' : P) : (term994 A B P p g a') = (term893 A B P p g a').
Proof. exact (@lem8353331 (term893 A B P p g a')). Qed.
Lemma lem8353333 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p g a'.
Proof. exact (EQ_MP (@lem8353332 A B P p g a') (@lem8353329 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353339 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8353340 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term2866 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989).
Proof. exact (@lem8353339 (term893 A B P p _112987 _112989) (term2602 A B P z _112987 _112988 _112989) (term895 A B P p _112988 _112989)). Qed.
Lemma lem8353358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8353359 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3019 A B P z _112987 p _112988 _112989) = (term3020 A B P z _112987 p _112988 _112989).
Proof. exact (MK_COMB (@lem8353358) (@lem8353340 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353377 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3018 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989).
Proof. exact (eq_refl (term3018 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353378 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : ((term2866 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989)) = ((term3018 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989)).
Proof. exact (MK_COMB (@lem8353359 A B P z _112987 p _112988 _112989) (@lem8353377 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353380 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8353381 (x : Prop) : (x = x) = True.
Proof. exact (@lem8353380 Prop x). Qed.
Lemma lem8353382 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : ((term3018 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989)) = True.
Proof. exact (@lem8353381 (term3018 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353383 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : ((term2866 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989)) = True.
Proof. exact (TRANS (@lem8353378 A B P z _112987 p _112988 _112989) (@lem8353382 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353384 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : True = ((term2866 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989)).
Proof. exact (SYM (@lem8353383 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353385 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term2866 A B P z _112987 p _112988 _112989) = (term3018 A B P z _112987 p _112988 _112989).
Proof. exact (EQ_MP (@lem8353384 A B P z _112987 p _112988 _112989) (@lem0)). Qed.
Lemma lem8353386 {A B P : Type'} (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3018 A B P z _112987 p _112988 _112989.
Proof. exact (EQ_MP (@lem8353385 A B P z _112987 p _112988 _112989) (@lem8349819 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8353388 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8353389 {A B P : Type'} (z : type518 A B P) (_112988 : A -> B) (p : type560 A B P) (_112987 : A -> B) (_112989 : P) : (term3018 A B P z _112987 p _112988 _112989) = (term3021 A B P z _112988 p _112987 _112989).
Proof. exact (@lem8353388 (term3022 A B P z _112987 p _112988 _112989) (term893 A B P p _112987 _112989)). Qed.
Lemma lem8353391 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8353392 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3023 A B P z _112987 p _112988 _112989) = (term3024 A B P z _112987 p _112988 _112989).
Proof. exact (@lem8353391 (term2602 A B P z _112987 _112988 _112989) (term895 A B P p _112988 _112989)). Qed.
Lemma lem8353394 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8353395 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) : (term3000 A B P z _112987 _112988 _112989) = ((term2595 A B P z _112987 _112988 _112989) = (term2598 A B P z _112987 _112988 _112989)).
Proof. exact (@lem8353394 ((term2595 A B P z _112987 _112988 _112989) = (term2598 A B P z _112987 _112988 _112989))). Qed.
Lemma lem8353396 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8353397 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (_112988 : A -> B) (_112989 : P) : (term3001 A B P z _112987 _112988 _112989) = (term3002 A B P z _112987 _112988 _112989).
Proof. exact (MK_COMB (@lem8353396) (@lem8353395 A B P z _112987 _112988 _112989)). Qed.
Lemma lem8353399 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8353400 {A B P : Type'} (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term1041 A B P p _112988 _112989) = (term893 A B P p _112988 _112989).
Proof. exact (@lem8353399 (term893 A B P p _112988 _112989)). Qed.
Lemma lem8353401 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3024 A B P z _112987 p _112988 _112989) = (term3025 A B P z _112987 p _112988 _112989).
Proof. exact (MK_COMB (@lem8353397 A B P z _112987 _112988 _112989) (@lem8353400 A B P p _112988 _112989)). Qed.
Lemma lem8353402 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3023 A B P z _112987 p _112988 _112989) = (term3025 A B P z _112987 p _112988 _112989).
Proof. exact (TRANS (@lem8353392 A B P z _112987 p _112988 _112989) (@lem8353401 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353403 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8353404 {A B P : Type'} (z : type518 A B P) (_112987 : A -> B) (p : type560 A B P) (_112988 : A -> B) (_112989 : P) : (term3026 A B P z _112987 p _112988 _112989) = (term3027 A B P z _112987 p _112988 _112989).
Proof. exact (MK_COMB (@lem8353403) (@lem8353402 A B P z _112987 p _112988 _112989)). Qed.
Lemma lem8353405 {A B P : Type'} (p : type560 A B P) (_112987 : A -> B) (_112989 : P) : (term893 A B P p _112987 _112989) = (term893 A B P p _112987 _112989).
Proof. exact (eq_refl (term893 A B P p _112987 _112989)). Qed.
Lemma lem8353406 {A B P : Type'} (z : type518 A B P) (_112988 : A -> B) (p : type560 A B P) (_112987 : A -> B) (_112989 : P) : (term3021 A B P z _112988 p _112987 _112989) = (term3028 A B P z _112988 p _112987 _112989).
Proof. exact (MK_COMB (@lem8353404 A B P z _112987 p _112988 _112989) (@lem8353405 A B P p _112987 _112989)). Qed.
Lemma lem8353407 {A B P : Type'} (z : type518 A B P) (_112988 : A -> B) (p : type560 A B P) (_112987 : A -> B) (_112989 : P) : (term3018 A B P z _112987 p _112988 _112989) = (term3028 A B P z _112988 p _112987 _112989).
Proof. exact (TRANS (@lem8353389 A B P z _112988 p _112987 _112989) (@lem8353406 A B P z _112988 p _112987 _112989)). Qed.
Lemma lem8353409 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : term3025 A B P z f p g a'.
Proof. exact (conj (@lem8353326 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (@lem8353333 A B D P Q f p g pat e q a' t' h4)). Qed.
Lemma lem8353411 {A B P : Type'} (_112988 : A -> B) (_112987 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3028 A B P z _112988 p _112987 _112989.
Proof. exact (EQ_MP (@lem8353407 A B P z _112988 p _112987 _112989) (@lem8353386 A B P _112987 _112988 _112989 lt2 s z p h1)). Qed.
Lemma lem8353412 {A B P : Type'} (_112988 : A -> B) (_112987 : A -> B) (_112989 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3028 A B P z _112988 p _112987 _112989.
Proof. exact (@lem8353411 A B P _112988 _112987 _112989 lt2 s z p h1). Qed.
Lemma lem8353413 {A B P : Type'} (g : A -> B) (f : A -> B) (a' : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term2035 A B P lt2 s z p) : term3028 A B P z g p f a'.
Proof. exact (@lem8353412 A B P g f a' lt2 s z p h1). Qed.
Lemma lem8353416 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p f a'.
Proof. exact (@lem8353413 A B P g f a' lt2 s z p h1 (@lem8353409 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4)). Qed.
Lemma lem8353417 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2556 A B D P Q f p g pat e q a' t') : term994 A B P p f a'.
Proof. exact (fun h0 : term895 A B P p f a' => @lem8353416 A B D P Q z lt2 s f p g pat e q a' t' h1 h0 h2 h3). Qed.
Lemma lem8353419 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353420 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term994 A B P p f a') = (term893 A B P p f a').
Proof. exact (@lem8353419 (term893 A B P p f a')). Qed.
Lemma lem8353421 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2556 A B D P Q f p g pat e q a' t') : term893 A B P p f a'.
Proof. exact (EQ_MP (@lem8353420 A B P p f a') (@lem8353417 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3)). Qed.
Lemma lem8353424 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8353426 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term895 A B P p f a') = (term3007 A B P p f a').
Proof. exact (@lem8353424 (term893 A B P p f a')). Qed.
Lemma lem8353429 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) (h1 : term895 A B P p f a') : term3007 A B P p f a'.
Proof. exact (EQ_MP (@lem8353426 A B P p f a') (@lem8349725 A B P p f a' h1)). Qed.
Lemma lem8353432 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (@lem8353429 A B P p f a' h2 (@lem8353421 A B D P Q z lt2 s f p g pat e q a' t' h1 h3 h4)). Qed.
Lemma lem8353433 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : term979.
Proof. exact (fun h0 : ~ False => @lem8353432 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4). Qed.
Lemma lem8353435 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353436 : term979 = False.
Proof. exact (@lem8353435 False). Qed.
Lemma lem8353437 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8353436) (@lem8353433 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4)). Qed.
Lemma lem8353954 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346112 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353955 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8353954 A B D P Q f p g pat e q a' t' h1). Qed.
Lemma lem8353957 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353958 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8353957 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8353959 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8353958 D P Q pat t' e a') (@lem8353955 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353961 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346112 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353962 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8353961 A B D P Q f p g pat e q a' t' h1). Qed.
Lemma lem8353964 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353965 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8353964 (term2472 P Q q a' t')). Qed.
Lemma lem8353966 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8353965 P Q q a' t') (@lem8353962 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353968 (a : Prop) (b : Prop) : (term976 a b) = (term977 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8353969 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_113024 : Q) : (term2478 D P Q pat e q a' _113024) = (term3008 D P Q pat e q a' _113024).
Proof. exact (@lem8353968 ((@I (Q -> D) pat _113024) = (@I (P -> D) e a')) (term2472 P Q q a' _113024)). Qed.
Lemma lem8353971 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8353972 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_113024 : Q) : (term3008 D P Q pat e q a' _113024) = (term3009 D P Q pat e q a' _113024).
Proof. exact (@lem8353971 (term2550 D P Q pat e q a' _113024)). Qed.
Lemma lem8353973 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_113024 : Q) : (term2478 D P Q pat e q a' _113024) = (term3009 D P Q pat e q a' _113024).
Proof. exact (TRANS (@lem8353969 D P Q pat e q a' _113024) (@lem8353972 D P Q pat e q a' _113024)). Qed.
Lemma lem8353975 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2556 A B D P Q f p g pat e q a' t') : term2550 D P Q pat e q a' t'.
Proof. exact (conj (@lem8353959 A B D P Q f p g pat e q a' t' h1) (@lem8353966 A B D P Q f p g pat e q a' t' h1)). Qed.
Lemma lem8353977 {D P Q : Type'} (_113024 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' _113024.
Proof. exact (EQ_MP (@lem8353973 D P Q pat e q a' _113024) (@lem8349913 D P Q _113024 pat e q a' h1)). Qed.
Lemma lem8353978 {D P Q : Type'} (_113024 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' _113024.
Proof. exact (@lem8353977 D P Q _113024 pat e q a' h1). Qed.
Lemma lem8353979 {D P Q : Type'} (t' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') : term3009 D P Q pat e q a' t'.
Proof. exact (@lem8353978 D P Q t' pat e q a' h1). Qed.
Lemma lem8353982 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2480 D P Q pat e q a') (h2 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (@lem8353979 D P Q t' pat e q a' h1 (@lem8353975 A B D P Q f p g pat e q a' t' h2)). Qed.
Lemma lem8353983 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2480 D P Q pat e q a') (h2 : term2556 A B D P Q f p g pat e q a' t') : term979.
Proof. exact (fun h0 : ~ False => @lem8353982 A B D P Q f p g pat e q a' t' h1 h2). Qed.
Lemma lem8353985 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8353986 : term979 = False.
Proof. exact (@lem8353985 False). Qed.
Lemma lem8353987 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2480 D P Q pat e q a') (h2 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8353986) (@lem8353983 A B D P Q f p g pat e q a' t' h1 h2)). Qed.
Lemma lem8354300 {A B : Type'} : (@I (A -> B)) = (@I (A -> B)).
Proof. exact (eq_refl (@I (A -> B))). Qed.
Lemma lem8354301 {A B : Type'} (_113709 : A -> B) (_113711 : A -> B) (h1 : _113709 = _113711) : _113709 = _113711.
Proof. exact (h1). Qed.
Lemma lem8354302 {A : Type'} (_113710 : A) (_113712 : A) (h1 : _113710 = _113712) : _113710 = _113712.
Proof. exact (h1). Qed.
Lemma lem8354303 {A B : Type'} (_113709 : A -> B) (_113711 : A -> B) (h1 : _113709 = _113711) : (@I (A -> B) _113709) = (@I (A -> B) _113711).
Proof. exact (MK_COMB (@lem8354300 A B) (@lem8354301 A B _113709 _113711 h1)). Qed.
Lemma lem8354304 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) (h1 : _113710 = _113712) (h2 : _113709 = _113711) : (@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712).
Proof. exact (MK_COMB (@lem8354303 A B _113709 _113711 h2) (@lem8354302 A _113710 _113712 h1)). Qed.
Lemma lem8354305 {A B : Type'} (_113709 : A -> B) (_113711 : A -> B) (_113710 : A) (_113712 : A) (h1 : _113710 = _113712) : term989 A B _113709 _113710 _113711 _113712.
Proof. exact (fun h0 : _113709 = _113711 => @lem8354304 A B _113710 _113712 _113709 _113711 h1 h0). Qed.
Lemma lem8354307 (a : Prop) (b : Prop) : (a -> b) = (term990 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8354308 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : (term989 A B _113709 _113710 _113711 _113712) = (term991 A B _113709 _113710 _113711 _113712).
Proof. exact (@lem8354307 (_113709 = _113711) ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712))). Qed.
Lemma lem8354309 {A B : Type'} (_113709 : A -> B) (_113711 : A -> B) (_113710 : A) (_113712 : A) (h1 : _113710 = _113712) : term991 A B _113709 _113710 _113711 _113712.
Proof. exact (EQ_MP (@lem8354308 A B _113709 _113710 _113711 _113712) (@lem8354305 A B _113709 _113711 _113710 _113712 h1)). Qed.
Lemma lem8354310 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : term992 A B _113709 _113710 _113711 _113712.
Proof. exact (fun h0 : _113710 = _113712 => @lem8354309 A B _113709 _113711 _113710 _113712 h0). Qed.
Lemma lem8354312 (a : Prop) (b : Prop) : (a -> b) = (term990 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8354313 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : (term992 A B _113709 _113710 _113711 _113712) = (term993 A B _113709 _113710 _113711 _113712).
Proof. exact (@lem8354312 (_113710 = _113712) (term991 A B _113709 _113710 _113711 _113712)). Qed.
Lemma lem8354314 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : term993 A B _113709 _113710 _113711 _113712.
Proof. exact (EQ_MP (@lem8354313 A B _113709 _113710 _113711 _113712) (@lem8354310 A B _113709 _113710 _113711 _113712)). Qed.
Lemma lem8354468 {B : Type'} (x : B) (y : B) (z : B) : term3029 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem8354504 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354505 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8354504 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8354507 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354508 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8354507 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8354509 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8354508 D P Q pat t' e a') (@lem8354505 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354511 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354512 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8354511 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8354514 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354515 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8354514 (term2472 P Q q a' t')). Qed.
Lemma lem8354516 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8354515 P Q q a' t') (@lem8354512 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354518 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem8354519 {B : Type'} (x : B) : x = x.
Proof. exact (@lem8354518 B x). Qed.
Lemma lem8354520 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (@lem8354519 B (term2663 A B P Q f arg a' t')). Qed.
Lemma lem8354521 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : term3030 A B P Q f arg a' t'.
Proof. exact (fun h0 : term3031 A B P Q f arg a' t' => @lem8354520 A B P Q f arg a' t'). Qed.
Lemma lem8354523 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354524 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term3030 A B P Q f arg a' t') = ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t')).
Proof. exact (@lem8354523 ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t'))). Qed.
Lemma lem8354525 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (EQ_MP (@lem8354524 A B P Q f arg a' t') (@lem8354521 A B P Q f arg a' t')). Qed.
Lemma lem8354543 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354544 {A B D P Q : Type'} (_113047 : B) (_113048 : Q) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2887 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3032 A B D P Q _113047 _113048 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8354543 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048) ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046))). Qed.
Lemma lem8354560 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8354561 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3033 A B D P Q _113048 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3034 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113043 _113046 _113048).
Proof. exact (@lem8354560 ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046)) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354569 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3035 A B P Q _113044 _113045 _113046 _113048 _113047) = (term3035 A B P Q _113044 _113045 _113046 _113048 _113047).
Proof. exact (eq_refl (term3035 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354570 {A B D P Q : Type'} (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3032 A B D P Q _113047 _113048 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3036 A B D P Q _113047 t'' _112897 _113041 _113042 _113044 _113045 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354569 A B P Q _113044 _113045 _113046 _113048 _113047) (@lem8354561 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113043 _113046 _113048)). Qed.
Lemma lem8354574 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354575 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3036 A B D P Q _113047 t'' _112897 _113041 _113042 _113044 _113045 _113043 _113046 _113048) = (term3037 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354574 ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046)) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354595 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3032 A B D P Q _113047 _113048 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3037 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354570 A B D P Q _113047 t'' _112897 _113041 _113042 _113044 _113045 _113043 _113046 _113048) (@lem8354575 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354596 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2887 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3037 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354544 A B D P Q _113047 _113048 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8354595 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354597 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8354598 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3038 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354597 D P Q _113041 _113048 _113042 _113046) (@lem8354596 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354602 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354603 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3038 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3039 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354602 ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046)) (term2476 D P Q _113041 _113048 _113042 _113046) (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354619 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354620 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8354619 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354640 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8354641 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3039 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354640 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8354620 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354652 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3038 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354603 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354641 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354653 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354598 A B D P Q t'' _112897 _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354652 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354654 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8354655 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3045 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3046 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354654) (@lem8354653 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354683 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8354684 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354683 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354692 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8354693 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354692 D P Q _113041 _113048 _113042 _113046) (@lem8354684 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354697 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354698 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8354697 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354718 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354693 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354698 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354719 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term3043 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8354720 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354719 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8354718 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354731 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = ((term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)).
Proof. exact (MK_COMB (@lem8354655 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8354720 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354733 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8354734 (x : Prop) : (x = x) = True.
Proof. exact (@lem8354733 Prop x). Qed.
Lemma lem8354735 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)) = True.
Proof. exact (@lem8354734 (term3044 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354736 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : ((term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = True.
Proof. exact (TRANS (@lem8354731 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8354735 A B D P Q t'' _112897 _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354737 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : True = ((term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)).
Proof. exact (SYM (@lem8354736 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354738 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term2888 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (EQ_MP (@lem8354737 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem0)). Qed.
Lemma lem8354739 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047.
Proof. exact (EQ_MP (@lem8354738 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8350145 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8354741 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8354742 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3048 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8354741 (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046))). Qed.
Lemma lem8354744 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8354745 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8354744 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354747 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8354748 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2900 D P Q _113041 _113048 _113042 _113046) = ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046)).
Proof. exact (@lem8354747 ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8354749 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8354750 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2901 D P Q _113041 _113048 _113042 _113046) = (term2549 D P Q _113041 _113048 _113042 _113046).
Proof. exact (MK_COMB (@lem8354749) (@lem8354748 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8354752 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8354753 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8354752 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354755 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8354756 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2902 P Q _113043 _113046 _113048) = (term2472 P Q _113043 _113046 _113048).
Proof. exact (@lem8354755 (term2472 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8354758 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2953 P Q _113043 _113046 _113048) = (term2954 P Q _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354757) (@lem8354756 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354760 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8354761 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3053 A B P Q _113044 _113045 _113046 _113048 _113047) = ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047).
Proof. exact (@lem8354760 ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047)). Qed.
Lemma lem8354762 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8354758 P Q _113043 _113046 _113048) (@lem8354761 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354763 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8354753 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) (@lem8354762 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354764 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8354750 D P Q _113041 _113048 _113042 _113046) (@lem8354763 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354765 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8354745 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8354764 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354766 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8354767 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3056 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3057 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8354766) (@lem8354765 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354768 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046)) = ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046)).
Proof. exact (eq_refl ((term2642 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2539 A B D P Q _112897 _113041 _113042 _113043 _113044 _113045 _113046))). Qed.
Lemma lem8354769 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3048 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) = (term3058 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (MK_COMB (@lem8354767 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8354768 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8354770 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3047 A B D P Q t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3058 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (TRANS (@lem8354742 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8354769 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8354772 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3059 A B P Q q f arg a' t'.
Proof. exact (conj (@lem8354516 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8354525 A B P Q f arg a' t')). Qed.
Lemma lem8354773 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3060 A B D P Q pat e q f arg a' t'.
Proof. exact (conj (@lem8354509 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8354772 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354775 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3058 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8354770 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046) (@lem8354739 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047 t'' _112897 h1)). Qed.
Lemma lem8354776 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3058 A B D P Q _113048 _113047 t'' _112897 _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (@lem8354775 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1). Qed.
Lemma lem8354777 {A B D P Q : Type'} (t' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3061 A B D P Q t' t'' _112897 pat e q f arg a'.
Proof. exact (@lem8354776 A B D P Q t' (term2663 A B P Q f arg a' t') pat e q f arg a' t'' _112897 h1). Qed.
Lemma lem8354780 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2642 A B D P Q t'' pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a').
Proof. exact (@lem8354777 A B D P Q t' pat e q f arg a' t'' _112897 h1 (@lem8354773 A B D P Q t' p _112897 f arg _112896 pat e q a' h2)). Qed.
Lemma lem8354781 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3062 A B D P Q t'' _112897 pat e q f arg a'.
Proof. exact (fun h0 : term3063 A B D P Q t'' _112897 pat e q f arg a' => @lem8354780 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2). Qed.
Lemma lem8354783 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354784 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (term3062 A B D P Q t'' _112897 pat e q f arg a') = ((term2642 A B D P Q t'' pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a')).
Proof. exact (@lem8354783 ((term2642 A B D P Q t'' pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a'))). Qed.
Lemma lem8354785 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2642 A B D P Q t'' pat e q f arg a') = (term2539 A B D P Q _112897 pat e q f arg a').
Proof. exact (EQ_MP (@lem8354784 A B D P Q t'' _112897 pat e q f arg a') (@lem8354781 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8354787 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term893 A B P p f a'.
Proof. exact (proj1 (@lem8346118 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354788 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term994 A B P p f a'.
Proof. exact (fun h0 : term895 A B P p f a' => @lem8354787 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8354790 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354791 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a' : P) : (term994 A B P p f a') = (term893 A B P p f a').
Proof. exact (@lem8354790 (term893 A B P p f a')). Qed.
Lemma lem8354792 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term893 A B P p f a'.
Proof. exact (EQ_MP (@lem8354791 A B P p f a') (@lem8354788 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354794 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354795 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8354794 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8354797 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354798 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8354797 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8354799 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8354798 D P Q pat t' e a') (@lem8354795 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354801 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354802 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8354801 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8354804 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354805 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8354804 (term2472 P Q q a' t')). Qed.
Lemma lem8354806 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8354805 P Q q a' t') (@lem8354802 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8354808 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem8354809 {B : Type'} (x : B) : x = x.
Proof. exact (@lem8354808 B x). Qed.
Lemma lem8354810 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (@lem8354809 B (term2663 A B P Q f arg a' t')). Qed.
Lemma lem8354811 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : term3030 A B P Q f arg a' t'.
Proof. exact (fun h0 : term3031 A B P Q f arg a' t' => @lem8354810 A B P Q f arg a' t'). Qed.
Lemma lem8354813 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8354814 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term3030 A B P Q f arg a' t') = ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t')).
Proof. exact (@lem8354813 ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t'))). Qed.
Lemma lem8354815 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (EQ_MP (@lem8354814 A B P Q f arg a' t') (@lem8354811 A B P Q f arg a' t')). Qed.
Lemma lem8354833 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354834 {A B D P Q : Type'} (_113047 : B) (_113048 : Q) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term2879 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3064 A B D P Q _113047 _113048 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (@lem8354833 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048) ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8354850 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8354851 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3065 A B D P Q _113048 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3066 A B D P Q t'' _113041 _113044 _113045 _113042 _113043 _113046 _113048).
Proof. exact (@lem8354850 ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046)) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354859 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3035 A B P Q _113044 _113045 _113046 _113048 _113047) = (term3035 A B P Q _113044 _113045 _113046 _113048 _113047).
Proof. exact (eq_refl (term3035 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8354860 {A B D P Q : Type'} (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3064 A B D P Q _113047 _113048 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3067 A B D P Q _113047 t'' _113041 _113044 _113045 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354859 A B P Q _113044 _113045 _113046 _113048 _113047) (@lem8354851 A B D P Q t'' _113041 _113044 _113045 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354864 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354865 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3067 A B D P Q _113047 t'' _113041 _113044 _113045 _113042 _113043 _113046 _113048) = (term3068 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354864 ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046)) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354885 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3064 A B D P Q _113047 _113048 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3068 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354860 A B D P Q _113047 t'' _113041 _113044 _113045 _113042 _113043 _113046 _113048) (@lem8354865 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354886 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2879 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3068 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354834 A B D P Q _113047 _113048 t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8354885 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354887 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8354888 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3069 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354887 D P Q _113041 _113048 _113042 _113046) (@lem8354886 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354892 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354893 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3069 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3070 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354892 ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046)) (term2476 D P Q _113041 _113048 _113042 _113046) (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354909 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354910 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8354909 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354930 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (eq_refl (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8354931 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3070 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354930 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8354910 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354942 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3069 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354893 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354931 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354943 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354888 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354942 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354944 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8354945 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3073 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3074 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354944) (@lem8354943 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8354973 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8354974 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8354973 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8354982 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8354983 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8354982 D P Q _113041 _113048 _113042 _113046) (@lem8354974 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8354987 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8354988 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8354987 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355008 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8354983 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8354988 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355009 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (eq_refl (term3071 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8355010 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355009 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8355008 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355021 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = ((term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)).
Proof. exact (MK_COMB (@lem8354945 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8355010 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355023 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8355024 (x : Prop) : (x = x) = True.
Proof. exact (@lem8355023 Prop x). Qed.
Lemma lem8355025 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)) = True.
Proof. exact (@lem8355024 (term3072 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355026 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : ((term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = True.
Proof. exact (TRANS (@lem8355021 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8355025 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355027 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : True = ((term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)).
Proof. exact (SYM (@lem8355026 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355028 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term2880 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (EQ_MP (@lem8355027 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem0)). Qed.
Lemma lem8355029 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047.
Proof. exact (EQ_MP (@lem8355028 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8350109 A B D P Q _113048 _113047 _113041 _113043 _113044 _113045 _113042 _113046 t'' _112897 h1)). Qed.
Lemma lem8355031 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8355032 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3076 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (@lem8355031 (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8355034 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355035 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8355034 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355037 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355038 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2900 D P Q _113041 _113048 _113042 _113046) = ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046)).
Proof. exact (@lem8355037 ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8355039 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355040 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2901 D P Q _113041 _113048 _113042 _113046) = (term2549 D P Q _113041 _113048 _113042 _113046).
Proof. exact (MK_COMB (@lem8355039) (@lem8355038 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8355042 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355043 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8355042 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355045 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355046 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2902 P Q _113043 _113046 _113048) = (term2472 P Q _113043 _113046 _113048).
Proof. exact (@lem8355045 (term2472 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355048 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2953 P Q _113043 _113046 _113048) = (term2954 P Q _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355047) (@lem8355046 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355050 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355051 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3053 A B P Q _113044 _113045 _113046 _113048 _113047) = ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047).
Proof. exact (@lem8355050 ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047)). Qed.
Lemma lem8355052 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355048 P Q _113043 _113046 _113048) (@lem8355051 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355053 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8355043 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355054 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355040 D P Q _113041 _113048 _113042 _113046) (@lem8355053 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355055 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8355035 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355054 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355056 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8355057 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3056 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3057 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355056) (@lem8355055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355058 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046)) = ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046)).
Proof. exact (eq_refl ((term2655 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8355059 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term3076 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) = (term3077 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (MK_COMB (@lem8355057 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355058 A B D P Q t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8355060 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) : (term3075 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3077 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046).
Proof. exact (TRANS (@lem8355032 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8355059 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046)). Qed.
Lemma lem8355062 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3059 A B P Q q f arg a' t'.
Proof. exact (conj (@lem8354806 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8354815 A B P Q f arg a' t')). Qed.
Lemma lem8355063 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3060 A B D P Q pat e q f arg a' t'.
Proof. exact (conj (@lem8354799 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8355062 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355065 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3077 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046.
Proof. exact (EQ_MP (@lem8355060 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046) (@lem8355029 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047 t'' _112897 h1)). Qed.
Lemma lem8355066 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113042 : P -> D) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3077 A B D P Q _113048 _113047 t'' _113041 _113043 _113044 _113045 _113042 _113046.
Proof. exact (@lem8355065 A B D P Q _113048 _113047 _113041 _113043 _113044 _113045 _113042 _113046 t'' _112897 h1). Qed.
Lemma lem8355067 {A B D P Q : Type'} (t' : Q) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (a' : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3078 A B D P Q t' t'' pat q f arg e a'.
Proof. exact (@lem8355066 A B D P Q t' (term2663 A B P Q f arg a' t') pat q f arg e a' t'' _112897 h1). Qed.
Lemma lem8355070 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2655 A B D P Q t'' pat e q f arg a') = (@I (P -> D) e a').
Proof. exact (@lem8355067 A B D P Q t' pat q f arg e a' t'' _112897 h1 (@lem8355063 A B D P Q t' p _112897 f arg _112896 pat e q a' h2)). Qed.
Lemma lem8355071 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3079 A B D P Q t'' pat q f arg e a'.
Proof. exact (fun h0 : term3080 A B D P Q t'' pat q f arg e a' => @lem8355070 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2). Qed.
Lemma lem8355073 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355074 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (e : P -> D) (a' : P) : (term3079 A B D P Q t'' pat q f arg e a') = ((term2655 A B D P Q t'' pat e q f arg a') = (@I (P -> D) e a')).
Proof. exact (@lem8355073 ((term2655 A B D P Q t'' pat e q f arg a') = (@I (P -> D) e a'))). Qed.
Lemma lem8355075 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2655 A B D P Q t'' pat e q f arg a') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8355074 A B D P Q t'' pat q f arg e a') (@lem8355071 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8355077 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355078 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8355077 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355080 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355081 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8355080 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8355082 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8355081 D P Q pat t' e a') (@lem8355078 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355084 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355085 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8355084 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355087 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355088 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8355087 (term2472 P Q q a' t')). Qed.
Lemma lem8355089 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8355088 P Q q a' t') (@lem8355085 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355091 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem8355092 {B : Type'} (x : B) : x = x.
Proof. exact (@lem8355091 B x). Qed.
Lemma lem8355093 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (@lem8355092 B (term2663 A B P Q f arg a' t')). Qed.
Lemma lem8355094 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : term3030 A B P Q f arg a' t'.
Proof. exact (fun h0 : term3031 A B P Q f arg a' t' => @lem8355093 A B P Q f arg a' t'). Qed.
Lemma lem8355096 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355097 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term3030 A B P Q f arg a' t') = ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t')).
Proof. exact (@lem8355096 ((term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t'))). Qed.
Lemma lem8355098 {A B P Q : Type'} (f : A -> B) (arg : type1475 A P Q) (a' : P) (t' : Q) : (term2663 A B P Q f arg a' t') = (term2663 A B P Q f arg a' t').
Proof. exact (EQ_MP (@lem8355097 A B P Q f arg a' t') (@lem8355094 A B P Q f arg a' t')). Qed.
Lemma lem8355116 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355117 {A B D P Q : Type'} (_113047 : B) (_113048 : Q) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2883 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3081 A B D P Q _113047 _113048 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8355116 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048) (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355133 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8355134 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3082 A B D P Q _113048 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3083 A B D P Q t'' _113041 _113042 _113044 _113045 _113043 _113046 _113048).
Proof. exact (@lem8355133 (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355140 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3035 A B P Q _113044 _113045 _113046 _113048 _113047) = (term3035 A B P Q _113044 _113045 _113046 _113048 _113047).
Proof. exact (eq_refl (term3035 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355141 {A B D P Q : Type'} (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3081 A B D P Q _113047 _113048 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3084 A B D P Q _113047 t'' _113041 _113042 _113044 _113045 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355140 A B P Q _113044 _113045 _113046 _113048 _113047) (@lem8355134 A B D P Q t'' _113041 _113042 _113044 _113045 _113043 _113046 _113048)). Qed.
Lemma lem8355145 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355146 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3084 A B D P Q _113047 t'' _113041 _113042 _113044 _113045 _113043 _113046 _113048) = (term3085 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8355145 (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355164 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3081 A B D P Q _113047 _113048 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3085 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8355141 A B D P Q _113047 t'' _113041 _113042 _113044 _113045 _113043 _113046 _113048) (@lem8355146 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8355165 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2883 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3085 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8355117 A B D P Q _113047 _113048 t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8355164 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8355166 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8355167 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3086 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355166 D P Q _113041 _113048 _113042 _113046) (@lem8355165 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8355171 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355172 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3086 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3087 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8355171 (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) (term2476 D P Q _113041 _113048 _113042 _113046) (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8355186 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355187 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8355186 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355207 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355208 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3087 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355207 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8355187 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355219 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3086 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8355172 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8355208 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355220 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8355167 A B D P Q t'' _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8355219 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355221 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8355222 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3090 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3091 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355221) (@lem8355220 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355248 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8355249 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3040 A B P Q _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (@lem8355248 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355257 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2477 D P Q _113041 _113048 _113042 _113046) = (term2477 D P Q _113041 _113048 _113042 _113046).
Proof. exact (eq_refl (term2477 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8355258 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355257 D P Q _113041 _113048 _113042 _113046) (@lem8355249 A B P Q _113044 _113045 _113047 _113043 _113046 _113048)). Qed.
Lemma lem8355262 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355263 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3041 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (@lem8355262 (term2665 A B P Q _113044 _113045 _113046 _113048 _113047) (term2476 D P Q _113041 _113048 _113042 _113046) (term2473 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355283 {A B D P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3042 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (TRANS (@lem8355258 A B D P Q _113041 _113042 _113044 _113045 _113047 _113043 _113046 _113048) (@lem8355263 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355284 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term3088 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355285 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355284 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8355283 A B D P Q _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355296 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = ((term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)).
Proof. exact (MK_COMB (@lem8355222 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8355285 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355298 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8355299 (x : Prop) : (x = x) = True.
Proof. exact (@lem8355298 Prop x). Qed.
Lemma lem8355300 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : ((term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) = (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)) = True.
Proof. exact (@lem8355299 (term3089 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355301 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : ((term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)) = True.
Proof. exact (TRANS (@lem8355296 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048) (@lem8355300 A B D P Q t'' _113044 _113045 _113047 _113041 _113042 _113043 _113046 _113048)). Qed.
Lemma lem8355302 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : True = ((term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)).
Proof. exact (SYM (@lem8355301 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355303 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term2884 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (EQ_MP (@lem8355302 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem0)). Qed.
Lemma lem8355304 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047.
Proof. exact (EQ_MP (@lem8355303 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8350127 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1)). Qed.
Lemma lem8355306 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8355307 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3093 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (@lem8355306 (term2667 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355309 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355310 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8355309 (term2476 D P Q _113041 _113048 _113042 _113046) (term2666 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355312 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355313 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2900 D P Q _113041 _113048 _113042 _113046) = ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046)).
Proof. exact (@lem8355312 ((@I (Q -> D) _113041 _113048) = (@I (P -> D) _113042 _113046))). Qed.
Lemma lem8355314 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355315 {D P Q : Type'} (_113041 : Q -> D) (_113048 : Q) (_113042 : P -> D) (_113046 : P) : (term2901 D P Q _113041 _113048 _113042 _113046) = (term2549 D P Q _113041 _113048 _113042 _113046).
Proof. exact (MK_COMB (@lem8355314) (@lem8355313 D P Q _113041 _113048 _113042 _113046)). Qed.
Lemma lem8355317 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355318 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (@lem8355317 (term2473 P Q _113043 _113046 _113048) (term2665 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355320 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355321 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2902 P Q _113043 _113046 _113048) = (term2472 P Q _113043 _113046 _113048).
Proof. exact (@lem8355320 (term2472 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355322 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355323 {P Q : Type'} (_113043 : type1413 P Q) (_113046 : P) (_113048 : Q) : (term2953 P Q _113043 _113046 _113048) = (term2954 P Q _113043 _113046 _113048).
Proof. exact (MK_COMB (@lem8355322) (@lem8355321 P Q _113043 _113046 _113048)). Qed.
Lemma lem8355325 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355326 {A B P Q : Type'} (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3053 A B P Q _113044 _113045 _113046 _113048 _113047) = ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047).
Proof. exact (@lem8355325 ((term2663 A B P Q _113044 _113045 _113046 _113048) = _113047)). Qed.
Lemma lem8355327 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3052 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355323 P Q _113043 _113046 _113048) (@lem8355326 A B P Q _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355328 {A B P Q : Type'} (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3051 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) = (term3054 A B P Q _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8355318 A B P Q _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355327 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355329 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3050 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355315 D P Q _113041 _113048 _113042 _113046) (@lem8355328 A B P Q _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355330 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3049 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3055 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (TRANS (@lem8355310 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355329 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355331 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8355332 {A B D P Q : Type'} (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (_113048 : Q) (_113047 : B) : (term3056 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3057 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047).
Proof. exact (MK_COMB (@lem8355331) (@lem8355330 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047)). Qed.
Lemma lem8355333 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (eq_refl (term2648 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355334 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3093 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) = (term3094 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (MK_COMB (@lem8355332 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) (@lem8355333 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355335 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (t'' : type907 A B D P Q) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) : (term3092 A B D P Q t'' _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047) = (term3094 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046).
Proof. exact (TRANS (@lem8355307 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8355334 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046)). Qed.
Lemma lem8355337 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3059 A B P Q q f arg a' t'.
Proof. exact (conj (@lem8355089 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8355098 A B P Q f arg a' t')). Qed.
Lemma lem8355338 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3060 A B D P Q pat e q f arg a' t'.
Proof. exact (conj (@lem8355082 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8355337 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355340 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3094 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (EQ_MP (@lem8355335 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046) (@lem8355304 A B D P Q _113041 _113042 _113043 _113044 _113045 _113046 _113048 _113047 t'' _112897 h1)). Qed.
Lemma lem8355341 {A B D P Q : Type'} (_113048 : Q) (_113047 : B) (_113041 : Q -> D) (_113042 : P -> D) (_113043 : type1413 P Q) (_113044 : A -> B) (_113045 : type1475 A P Q) (_113046 : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3094 A B D P Q _113048 _113047 t'' _113041 _113042 _113043 _113044 _113045 _113046.
Proof. exact (@lem8355340 A B D P Q _113048 _113047 _113041 _113042 _113043 _113044 _113045 _113046 t'' _112897 h1). Qed.
Lemma lem8355342 {A B D P Q : Type'} (t' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (h1 : term1866 A B D P Q t'' _112897) : term3095 A B D P Q t' t'' pat e q f arg a'.
Proof. exact (@lem8355341 A B D P Q t' (term2663 A B P Q f arg a' t') pat e q f arg a' t'' _112897 h1). Qed.
Lemma lem8355345 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2648 A B D P Q t'' pat e q f arg a'.
Proof. exact (@lem8355342 A B D P Q t' pat e q f arg a' t'' _112897 h1 (@lem8355338 A B D P Q t' p _112897 f arg _112896 pat e q a' h2)). Qed.
Lemma lem8355346 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3096 A B D P Q t'' pat e q f arg a'.
Proof. exact (fun h0 : term3097 A B D P Q t'' pat e q f arg a' => @lem8355345 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2). Qed.
Lemma lem8355348 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355349 {A B D P Q : Type'} (t'' : type907 A B D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (f : A -> B) (arg : type1475 A P Q) (a' : P) : (term3096 A B D P Q t'' pat e q f arg a') = (term2648 A B D P Q t'' pat e q f arg a').
Proof. exact (@lem8355348 (term2648 A B D P Q t'' pat e q f arg a')). Qed.
Lemma lem8355350 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1866 A B D P Q t'' _112897) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2648 A B D P Q t'' pat e q f arg a'.
Proof. exact (EQ_MP (@lem8355349 A B D P Q t'' pat e q f arg a') (@lem8355346 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8355352 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355353 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8355352 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355355 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355356 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8355355 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8355357 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8355356 D P Q pat t' e a') (@lem8355353 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355359 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355360 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8355359 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355362 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355363 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8355362 (term2472 P Q q a' t')). Qed.
Lemma lem8355364 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8355363 P Q q a' t') (@lem8355360 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355382 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8355383 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2908 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2909 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355382 ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028)) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355391 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2477 D P Q _113025 _113029 _113026 _113028) = (term2477 D P Q _113025 _113029 _113026 _113028).
Proof. exact (eq_refl (term2477 D P Q _113025 _113029 _113026 _113028)). Qed.
Lemma lem8355392 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2910 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355391 D P Q _113025 _113029 _113026 _113028) (@lem8355383 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355396 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355397 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2910 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355396 ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028)) (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355417 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (TRANS (@lem8355392 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355397 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355418 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8355419 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2912 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2913 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355418) (@lem8355417 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355439 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (eq_refl (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355440 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = ((term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)).
Proof. exact (MK_COMB (@lem8355419 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355439 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355442 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8355443 (x : Prop) : (x = x) = True.
Proof. exact (@lem8355442 Prop x). Qed.
Lemma lem8355444 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = True.
Proof. exact (@lem8355443 (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355445 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = True.
Proof. exact (TRANS (@lem8355440 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355444 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355446 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : True = ((term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029)).
Proof. exact (SYM (@lem8355445 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355447 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2861 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (EQ_MP (@lem8355446 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem0)). Qed.
Lemma lem8355448 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029.
Proof. exact (EQ_MP (@lem8355447 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8350197 D P Q _113029 _113025 _113027 _113026 _113028 _112896 h1)). Qed.
Lemma lem8355450 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8355451 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) : (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2914 D P Q _113029 _112896 _113025 _113027 _113026 _113028).
Proof. exact (@lem8355450 (term2478 D P Q _113025 _113026 _113027 _113028 _113029) ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028))). Qed.
Lemma lem8355453 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355454 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2898 D P Q _113025 _113026 _113027 _113028 _113029) = (term2899 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355453 (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355456 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355457 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2900 D P Q _113025 _113029 _113026 _113028) = ((@I (Q -> D) _113025 _113029) = (@I (P -> D) _113026 _113028)).
Proof. exact (@lem8355456 ((@I (Q -> D) _113025 _113029) = (@I (P -> D) _113026 _113028))). Qed.
Lemma lem8355458 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355459 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2901 D P Q _113025 _113029 _113026 _113028) = (term2549 D P Q _113025 _113029 _113026 _113028).
Proof. exact (MK_COMB (@lem8355458) (@lem8355457 D P Q _113025 _113029 _113026 _113028)). Qed.
Lemma lem8355461 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355462 {P Q : Type'} (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2902 P Q _113027 _113028 _113029) = (term2472 P Q _113027 _113028 _113029).
Proof. exact (@lem8355461 (term2472 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355463 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2899 D P Q _113025 _113026 _113027 _113028 _113029) = (term2550 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355459 D P Q _113025 _113029 _113026 _113028) (@lem8355462 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355464 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2898 D P Q _113025 _113026 _113027 _113028 _113029) = (term2550 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (TRANS (@lem8355454 D P Q _113025 _113026 _113027 _113028 _113029) (@lem8355463 D P Q _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355465 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8355466 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2903 D P Q _113025 _113026 _113027 _113028 _113029) = (term2904 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355465) (@lem8355464 D P Q _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355467 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) : ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028)) = ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028)).
Proof. exact (eq_refl ((term2468 D P Q _112896 _113025 _113026 _113027 _113028) = (@I (P -> D) _113026 _113028))). Qed.
Lemma lem8355468 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) : (term2914 D P Q _113029 _112896 _113025 _113027 _113026 _113028) = (term2915 D P Q _113029 _112896 _113025 _113027 _113026 _113028).
Proof. exact (MK_COMB (@lem8355466 D P Q _113025 _113026 _113027 _113028 _113029) (@lem8355467 D P Q _112896 _113025 _113027 _113026 _113028)). Qed.
Lemma lem8355469 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) : (term2911 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2915 D P Q _113029 _112896 _113025 _113027 _113026 _113028).
Proof. exact (TRANS (@lem8355451 D P Q _113029 _112896 _113025 _113027 _113026 _113028) (@lem8355468 D P Q _113029 _112896 _113025 _113027 _113026 _113028)). Qed.
Lemma lem8355471 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2550 D P Q pat e q a' t'.
Proof. exact (conj (@lem8355357 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8355364 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355473 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q _113029 _112896 _113025 _113027 _113026 _113028.
Proof. exact (EQ_MP (@lem8355469 D P Q _113029 _112896 _113025 _113027 _113026 _113028) (@lem8355448 D P Q _113025 _113026 _113027 _113028 _113029 _112896 h1)). Qed.
Lemma lem8355474 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113027 : type1413 P Q) (_113026 : P -> D) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q _113029 _112896 _113025 _113027 _113026 _113028.
Proof. exact (@lem8355473 D P Q _113029 _113025 _113027 _113026 _113028 _112896 h1). Qed.
Lemma lem8355475 {D P Q : Type'} (t' : Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a' : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2915 D P Q t' _112896 pat q e a'.
Proof. exact (@lem8355474 D P Q t' pat q e a' _112896 h1). Qed.
Lemma lem8355478 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2468 D P Q _112896 pat e q a') = (@I (P -> D) e a').
Proof. exact (@lem8355475 D P Q t' pat q e a' _112896 h1 (@lem8355471 A B D P Q t' p _112897 f arg _112896 pat e q a' h2)). Qed.
Lemma lem8355479 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2916 D P Q _112896 pat q e a'.
Proof. exact (fun h0 : term2917 D P Q _112896 pat q e a' => @lem8355478 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2). Qed.
Lemma lem8355481 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355482 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (q : type1413 P Q) (e : P -> D) (a' : P) : (term2916 D P Q _112896 pat q e a') = ((term2468 D P Q _112896 pat e q a') = (@I (P -> D) e a')).
Proof. exact (@lem8355481 ((term2468 D P Q _112896 pat e q a') = (@I (P -> D) e a'))). Qed.
Lemma lem8355483 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2468 D P Q _112896 pat e q a') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8355482 D P Q _112896 pat q e a') (@lem8355479 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8355485 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (proj1 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355486 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2889 D P Q pat t' e a'.
Proof. exact (fun h0 : term2476 D P Q pat t' e a' => @lem8355485 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355488 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355489 {D P Q : Type'} (pat : Q -> D) (t' : Q) (e : P -> D) (a' : P) : (term2889 D P Q pat t' e a') = ((@I (Q -> D) pat t') = (@I (P -> D) e a')).
Proof. exact (@lem8355488 ((@I (Q -> D) pat t') = (@I (P -> D) e a'))). Qed.
Lemma lem8355490 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (@I (Q -> D) pat t') = (@I (P -> D) e a').
Proof. exact (EQ_MP (@lem8355489 D P Q pat t' e a') (@lem8355486 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355492 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (proj2 (@lem8346119 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355493 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2890 P Q q a' t'.
Proof. exact (fun h0 : term2473 P Q q a' t' => @lem8355492 A B D P Q t' p _112897 f arg _112896 pat e q a' h1). Qed.
Lemma lem8355495 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355496 {P Q : Type'} (q : type1413 P Q) (a' : P) (t' : Q) : (term2890 P Q q a' t') = (term2472 P Q q a' t').
Proof. exact (@lem8355495 (term2472 P Q q a' t')). Qed.
Lemma lem8355497 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2472 P Q q a' t'.
Proof. exact (EQ_MP (@lem8355496 P Q q a' t') (@lem8355493 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355515 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8355516 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2891 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2892 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355515 (term2466 D P Q _112896 _113025 _113026 _113027 _113028) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355522 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2477 D P Q _113025 _113029 _113026 _113028) = (term2477 D P Q _113025 _113029 _113026 _113028).
Proof. exact (eq_refl (term2477 D P Q _113025 _113029 _113026 _113028)). Qed.
Lemma lem8355523 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2893 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355522 D P Q _113025 _113029 _113026 _113028) (@lem8355516 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355527 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355528 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2893 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355527 (term2466 D P Q _112896 _113025 _113026 _113027 _113028) (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355546 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (TRANS (@lem8355523 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355528 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355547 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8355548 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2895 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2896 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355547) (@lem8355546 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355566 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (eq_refl (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355567 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = ((term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)).
Proof. exact (MK_COMB (@lem8355548 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355566 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355569 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8355570 (x : Prop) : (x = x) = True.
Proof. exact (@lem8355569 Prop x). Qed.
Lemma lem8355571 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = True.
Proof. exact (@lem8355570 (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355572 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : ((term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)) = True.
Proof. exact (TRANS (@lem8355567 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8355571 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355573 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : True = ((term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029)).
Proof. exact (SYM (@lem8355572 D P Q _112896 _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355574 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2862 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029).
Proof. exact (EQ_MP (@lem8355573 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem0)). Qed.
Lemma lem8355575 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029.
Proof. exact (EQ_MP (@lem8355574 D P Q _112896 _113025 _113026 _113027 _113028 _113029) (@lem8350209 D P Q _113029 _113025 _113026 _113027 _113028 _112896 h1)). Qed.
Lemma lem8355577 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8355578 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2897 D P Q _113029 _112896 _113025 _113026 _113027 _113028).
Proof. exact (@lem8355577 (term2478 D P Q _113025 _113026 _113027 _113028 _113029) (term2466 D P Q _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8355580 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8355581 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2898 D P Q _113025 _113026 _113027 _113028 _113029) = (term2899 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (@lem8355580 (term2476 D P Q _113025 _113029 _113026 _113028) (term2473 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355583 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355584 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2900 D P Q _113025 _113029 _113026 _113028) = ((@I (Q -> D) _113025 _113029) = (@I (P -> D) _113026 _113028)).
Proof. exact (@lem8355583 ((@I (Q -> D) _113025 _113029) = (@I (P -> D) _113026 _113028))). Qed.
Lemma lem8355585 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8355586 {D P Q : Type'} (_113025 : Q -> D) (_113029 : Q) (_113026 : P -> D) (_113028 : P) : (term2901 D P Q _113025 _113029 _113026 _113028) = (term2549 D P Q _113025 _113029 _113026 _113028).
Proof. exact (MK_COMB (@lem8355585) (@lem8355584 D P Q _113025 _113029 _113026 _113028)). Qed.
Lemma lem8355588 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8355589 {P Q : Type'} (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2902 P Q _113027 _113028 _113029) = (term2472 P Q _113027 _113028 _113029).
Proof. exact (@lem8355588 (term2472 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355590 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2899 D P Q _113025 _113026 _113027 _113028 _113029) = (term2550 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355586 D P Q _113025 _113029 _113026 _113028) (@lem8355589 P Q _113027 _113028 _113029)). Qed.
Lemma lem8355591 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2898 D P Q _113025 _113026 _113027 _113028 _113029) = (term2550 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (TRANS (@lem8355581 D P Q _113025 _113026 _113027 _113028 _113029) (@lem8355590 D P Q _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355592 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8355593 {D P Q : Type'} (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_113029 : Q) : (term2903 D P Q _113025 _113026 _113027 _113028 _113029) = (term2904 D P Q _113025 _113026 _113027 _113028 _113029).
Proof. exact (MK_COMB (@lem8355592) (@lem8355591 D P Q _113025 _113026 _113027 _113028 _113029)). Qed.
Lemma lem8355594 {D P Q : Type'} (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2466 D P Q _112896 _113025 _113026 _113027 _113028) = (term2466 D P Q _112896 _113025 _113026 _113027 _113028).
Proof. exact (eq_refl (term2466 D P Q _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8355595 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2897 D P Q _113029 _112896 _113025 _113026 _113027 _113028) = (term2905 D P Q _113029 _112896 _113025 _113026 _113027 _113028).
Proof. exact (MK_COMB (@lem8355593 D P Q _113025 _113026 _113027 _113028 _113029) (@lem8355594 D P Q _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8355596 {D P Q : Type'} (_113029 : Q) (_112896 : type885 D P Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) : (term2894 D P Q _112896 _113025 _113026 _113027 _113028 _113029) = (term2905 D P Q _113029 _112896 _113025 _113026 _113027 _113028).
Proof. exact (TRANS (@lem8355578 D P Q _113029 _112896 _113025 _113026 _113027 _113028) (@lem8355595 D P Q _113029 _112896 _113025 _113026 _113027 _113028)). Qed.
Lemma lem8355598 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2550 D P Q pat e q a' t'.
Proof. exact (conj (@lem8355490 A B D P Q t' p _112897 f arg _112896 pat e q a' h1) (@lem8355497 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8355600 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q _113029 _112896 _113025 _113026 _113027 _113028.
Proof. exact (EQ_MP (@lem8355596 D P Q _113029 _112896 _113025 _113026 _113027 _113028) (@lem8355575 D P Q _113025 _113026 _113027 _113028 _113029 _112896 h1)). Qed.
Lemma lem8355601 {D P Q : Type'} (_113029 : Q) (_113025 : Q -> D) (_113026 : P -> D) (_113027 : type1413 P Q) (_113028 : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q _113029 _112896 _113025 _113026 _113027 _113028.
Proof. exact (@lem8355600 D P Q _113029 _113025 _113026 _113027 _113028 _112896 h1). Qed.
Lemma lem8355602 {D P Q : Type'} (t' : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (_112896 : type885 D P Q) (h1 : term1341 D P Q _112896) : term2905 D P Q t' _112896 pat e q a'.
Proof. exact (@lem8355601 D P Q t' pat e q a' _112896 h1). Qed.
Lemma lem8355605 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2466 D P Q _112896 pat e q a'.
Proof. exact (@lem8355602 D P Q t' pat e q a' _112896 h1 (@lem8355598 A B D P Q t' p _112897 f arg _112896 pat e q a' h2)). Qed.
Lemma lem8355606 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2906 D P Q _112896 pat e q a'.
Proof. exact (fun h0 : term2907 D P Q _112896 pat e q a' => @lem8355605 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2). Qed.
Lemma lem8355608 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8355609 {D P Q : Type'} (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2906 D P Q _112896 pat e q a') = (term2466 D P Q _112896 pat e q a').
Proof. exact (@lem8355608 (term2466 D P Q _112896 pat e q a')). Qed.
Lemma lem8355610 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2466 D P Q _112896 pat e q a'.
Proof. exact (EQ_MP (@lem8355609 D P Q _112896 pat e q a') (@lem8355606 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8355616 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355617 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3098 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8355616 (term2476 D P Q pat _113032 e _113031) (term895 A B P p _113030 _113031) (term2874 A D P Q pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8355643 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355644 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term2874 A D P Q pat e q _113032 arg _113031 _113033) = (term3099 A D P Q pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8355643 (term2476 D P Q pat _113033 e _113031) (term2473 P Q q _113031 _113032) (term3100 A P Q q _113032 arg _113031 _113033)). Qed.
Lemma lem8355670 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8355671 {A P Q : Type'} (_113032 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3100 A P Q q _113032 arg _113031 _113033) = (term3101 A P Q _113032 arg q _113031 _113033).
Proof. exact (@lem8355670 ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) (term2473 P Q q _113031 _113033)). Qed.
Lemma lem8355679 {P Q : Type'} (q : type1413 P Q) (_113031 : P) (_113032 : Q) : (term2494 P Q q _113031 _113032) = (term2494 P Q q _113031 _113032).
Proof. exact (eq_refl (term2494 P Q q _113031 _113032)). Qed.
Lemma lem8355680 {A P Q : Type'} (_113032 : Q) (arg : type1475 A P Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3102 A P Q q _113032 arg _113031 _113033) = (term3103 A P Q _113032 arg q _113031 _113033).
Proof. exact (MK_COMB (@lem8355679 P Q q _113031 _113032) (@lem8355671 A P Q _113032 arg q _113031 _113033)). Qed.
Lemma lem8355684 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355685 {A P Q : Type'} (arg : type1475 A P Q) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3103 A P Q _113032 arg q _113031 _113033) = (term3104 A P Q arg _113032 q _113031 _113033).
Proof. exact (@lem8355684 ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) (term2473 P Q q _113031 _113032) (term2473 P Q q _113031 _113033)). Qed.
Lemma lem8355703 {A P Q : Type'} (arg : type1475 A P Q) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3102 A P Q q _113032 arg _113031 _113033) = (term3104 A P Q arg _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355680 A P Q _113032 arg q _113031 _113033) (@lem8355685 A P Q arg _113032 q _113031 _113033)). Qed.
Lemma lem8355704 {D P Q : Type'} (pat : Q -> D) (_113033 : Q) (e : P -> D) (_113031 : P) : (term2477 D P Q pat _113033 e _113031) = (term2477 D P Q pat _113033 e _113031).
Proof. exact (eq_refl (term2477 D P Q pat _113033 e _113031)). Qed.
Lemma lem8355705 {A D P Q : Type'} (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3099 A D P Q pat e q _113032 arg _113031 _113033) = (term3105 A D P Q pat e arg _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355704 D P Q pat _113033 e _113031) (@lem8355703 A P Q arg _113032 q _113031 _113033)). Qed.
Lemma lem8355709 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355710 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3105 A D P Q pat e arg _113032 q _113031 _113033) = (term3106 A D P Q arg pat e _113032 q _113031 _113033).
Proof. exact (@lem8355709 ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) (term2476 D P Q pat _113033 e _113031) (term3107 P Q _113032 q _113031 _113033)). Qed.
Lemma lem8355740 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3099 A D P Q pat e q _113032 arg _113031 _113033) = (term3106 A D P Q arg pat e _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355705 A D P Q pat e arg _113032 q _113031 _113033) (@lem8355710 A D P Q arg pat e _113032 q _113031 _113033)). Qed.
Lemma lem8355741 {A D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2874 A D P Q pat e q _113032 arg _113031 _113033) = (term3106 A D P Q arg pat e _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355644 A D P Q pat e q _113032 arg _113031 _113033) (@lem8355740 A D P Q arg pat e _113032 q _113031 _113033)). Qed.
Lemma lem8355742 {A B P : Type'} (p : type560 A B P) (_113030 : A -> B) (_113031 : P) : (term896 A B P p _113030 _113031) = (term896 A B P p _113030 _113031).
Proof. exact (eq_refl (term896 A B P p _113030 _113031)). Qed.
Lemma lem8355743 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3108 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3109 A B D P Q p _113030 arg pat e _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355742 A B P p _113030 _113031) (@lem8355741 A D P Q arg pat e _113032 q _113031 _113033)). Qed.
Lemma lem8355747 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355748 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3109 A B D P Q p _113030 arg pat e _113032 q _113031 _113033) = (term3110 A B D P Q arg p _113030 pat e _113032 q _113031 _113033).
Proof. exact (@lem8355747 ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) (term895 A B P p _113030 _113031) (term3111 D P Q pat e _113032 q _113031 _113033)). Qed.
Lemma lem8355764 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355765 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3112 A B D P Q p _113030 pat e _113032 q _113031 _113033) = (term3113 A B D P Q pat e p _113030 _113032 q _113031 _113033).
Proof. exact (@lem8355764 (term2476 D P Q pat _113033 e _113031) (term895 A B P p _113030 _113031) (term3107 P Q _113032 q _113031 _113033)). Qed.
Lemma lem8355793 {A P Q : Type'} (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term3114 A P Q _113032 arg _113031 _113033) = (term3114 A P Q _113032 arg _113031 _113033).
Proof. exact (eq_refl (term3114 A P Q _113032 arg _113031 _113033)). Qed.
Lemma lem8355794 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3110 A B D P Q arg p _113030 pat e _113032 q _113031 _113033) = (term3115 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355793 A P Q _113032 arg _113031 _113033) (@lem8355765 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355805 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3109 A B D P Q p _113030 arg pat e _113032 q _113031 _113033) = (term3115 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355748 A B D P Q arg p _113030 pat e _113032 q _113031 _113033) (@lem8355794 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355806 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3108 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3115 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355743 A B D P Q p _113030 arg pat e _113032 q _113031 _113033) (@lem8355805 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355807 {D P Q : Type'} (pat : Q -> D) (_113032 : Q) (e : P -> D) (_113031 : P) : (term2477 D P Q pat _113032 e _113031) = (term2477 D P Q pat _113032 e _113031).
Proof. exact (eq_refl (term2477 D P Q pat _113032 e _113031)). Qed.
Lemma lem8355808 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3098 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3116 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355807 D P Q pat _113032 e _113031) (@lem8355806 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355812 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355813 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3116 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (@lem8355812 ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) (term2476 D P Q pat _113032 e _113031) (term3113 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355865 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3098 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355808 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) (@lem8355813 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355866 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355617 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8355865 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355867 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8355868 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3118 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3119 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355867) (@lem8355866 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355884 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355885 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2497 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3120 A B D P Q p _113030 _113032 pat e q _113031 _113033).
Proof. exact (@lem8355884 (term2476 D P Q pat _113032 e _113031) (term895 A B P p _113030 _113031) (term2495 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8355911 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355912 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2495 D P Q _113032 pat e q _113031 _113033) = (term3111 D P Q pat e _113032 q _113031 _113033).
Proof. exact (@lem8355911 (term2476 D P Q pat _113033 e _113031) (term2473 P Q q _113031 _113032) (term2473 P Q q _113031 _113033)). Qed.
Lemma lem8355930 {A B P : Type'} (p : type560 A B P) (_113030 : A -> B) (_113031 : P) : (term896 A B P p _113030 _113031) = (term896 A B P p _113030 _113031).
Proof. exact (eq_refl (term896 A B P p _113030 _113031)). Qed.
Lemma lem8355931 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3121 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3112 A B D P Q p _113030 pat e _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355930 A B P p _113030 _113031) (@lem8355912 D P Q pat e _113032 q _113031 _113033)). Qed.
Lemma lem8355935 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8355936 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3112 A B D P Q p _113030 pat e _113032 q _113031 _113033) = (term3113 A B D P Q pat e p _113030 _113032 q _113031 _113033).
Proof. exact (@lem8355935 (term2476 D P Q pat _113033 e _113031) (term895 A B P p _113030 _113031) (term3107 P Q _113032 q _113031 _113033)). Qed.
Lemma lem8355964 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3121 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3113 A B D P Q pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355931 A B D P Q p _113030 pat e _113032 q _113031 _113033) (@lem8355936 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355965 {D P Q : Type'} (pat : Q -> D) (_113032 : Q) (e : P -> D) (_113031 : P) : (term2477 D P Q pat _113032 e _113031) = (term2477 D P Q pat _113032 e _113031).
Proof. exact (eq_refl (term2477 D P Q pat _113032 e _113031)). Qed.
Lemma lem8355966 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3120 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3122 A B D P Q pat e p _113030 _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355965 D P Q pat _113032 e _113031) (@lem8355964 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355977 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2497 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3122 A B D P Q pat e p _113030 _113032 q _113031 _113033).
Proof. exact (TRANS (@lem8355885 A B D P Q p _113030 _113032 pat e q _113031 _113033) (@lem8355966 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355978 {A P Q : Type'} (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term3114 A P Q _113032 arg _113031 _113033) = (term3114 A P Q _113032 arg _113031 _113033).
Proof. exact (eq_refl (term3114 A P Q _113032 arg _113031 _113033)). Qed.
Lemma lem8355979 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033).
Proof. exact (MK_COMB (@lem8355978 A P Q _113032 arg _113031 _113033) (@lem8355977 A B D P Q pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355990 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : ((term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033)) = ((term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)).
Proof. exact (MK_COMB (@lem8355868 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) (@lem8355979 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355992 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8355993 (x : Prop) : (x = x) = True.
Proof. exact (@lem8355992 Prop x). Qed.
Lemma lem8355994 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : ((term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) = (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)) = True.
Proof. exact (@lem8355993 (term3117 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355995 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : ((term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033)) = True.
Proof. exact (TRANS (@lem8355990 A B D P Q arg pat e p _113030 _113032 q _113031 _113033) (@lem8355994 A B D P Q arg pat e p _113030 _113032 q _113031 _113033)). Qed.
Lemma lem8355996 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : True = ((term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033)).
Proof. exact (SYM (@lem8355995 A B D P Q arg p _113030 _113032 pat e q _113031 _113033)). Qed.
Lemma lem8355997 {A B D P Q : Type'} (arg : type1475 A P Q) (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2876 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033).
Proof. exact (EQ_MP (@lem8355996 A B D P Q arg p _113030 _113032 pat e q _113031 _113033) (@lem0)). Qed.
Lemma lem8355998 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033.
Proof. exact (EQ_MP (@lem8355997 A B D P Q arg p _113030 _113032 pat e q _113031 _113033) (@lem8350061 A B D P Q _113030 _113032 _113031 _113033 p pat e q arg h1)). Qed.
Lemma lem8356000 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8356001 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033) = (term3124 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (@lem8356000 (term2497 A B D P Q p _113030 _113032 pat e q _113031 _113033) ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8356003 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356004 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3125 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3126 A B D P Q p _113030 _113032 pat e q _113031 _113033).
Proof. exact (@lem8356003 (term895 A B P p _113030 _113031) (term2496 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356006 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356007 {A B P : Type'} (p : type560 A B P) (_113030 : A -> B) (_113031 : P) : (term1041 A B P p _113030 _113031) = (term893 A B P p _113030 _113031).
Proof. exact (@lem8356006 (term893 A B P p _113030 _113031)). Qed.
Lemma lem8356008 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356009 {A B P : Type'} (p : type560 A B P) (_113030 : A -> B) (_113031 : P) : (term1042 A B P p _113030 _113031) = (term1043 A B P p _113030 _113031).
Proof. exact (MK_COMB (@lem8356008) (@lem8356007 A B P p _113030 _113031)). Qed.
Lemma lem8356011 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356012 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3127 D P Q _113032 pat e q _113031 _113033) = (term3128 D P Q _113032 pat e q _113031 _113033).
Proof. exact (@lem8356011 (term2476 D P Q pat _113032 e _113031) (term2495 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356014 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356015 {D P Q : Type'} (pat : Q -> D) (_113032 : Q) (e : P -> D) (_113031 : P) : (term2900 D P Q pat _113032 e _113031) = ((@I (Q -> D) pat _113032) = (@I (P -> D) e _113031)).
Proof. exact (@lem8356014 ((@I (Q -> D) pat _113032) = (@I (P -> D) e _113031))). Qed.
Lemma lem8356016 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356017 {D P Q : Type'} (pat : Q -> D) (_113032 : Q) (e : P -> D) (_113031 : P) : (term2901 D P Q pat _113032 e _113031) = (term2549 D P Q pat _113032 e _113031).
Proof. exact (MK_COMB (@lem8356016) (@lem8356015 D P Q pat _113032 e _113031)). Qed.
Lemma lem8356019 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356020 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3129 D P Q _113032 pat e q _113031 _113033) = (term3130 D P Q _113032 pat e q _113031 _113033).
Proof. exact (@lem8356019 (term2473 P Q q _113031 _113032) (term2478 D P Q pat e q _113031 _113033)). Qed.
Lemma lem8356022 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356023 {P Q : Type'} (q : type1413 P Q) (_113031 : P) (_113032 : Q) : (term2902 P Q q _113031 _113032) = (term2472 P Q q _113031 _113032).
Proof. exact (@lem8356022 (term2472 P Q q _113031 _113032)). Qed.
Lemma lem8356024 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356025 {P Q : Type'} (q : type1413 P Q) (_113031 : P) (_113032 : Q) : (term2953 P Q q _113031 _113032) = (term2954 P Q q _113031 _113032).
Proof. exact (MK_COMB (@lem8356024) (@lem8356023 P Q q _113031 _113032)). Qed.
Lemma lem8356027 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356028 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2898 D P Q pat e q _113031 _113033) = (term2899 D P Q pat e q _113031 _113033).
Proof. exact (@lem8356027 (term2476 D P Q pat _113033 e _113031) (term2473 P Q q _113031 _113033)). Qed.
Lemma lem8356030 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356031 {D P Q : Type'} (pat : Q -> D) (_113033 : Q) (e : P -> D) (_113031 : P) : (term2900 D P Q pat _113033 e _113031) = ((@I (Q -> D) pat _113033) = (@I (P -> D) e _113031)).
Proof. exact (@lem8356030 ((@I (Q -> D) pat _113033) = (@I (P -> D) e _113031))). Qed.
Lemma lem8356032 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356033 {D P Q : Type'} (pat : Q -> D) (_113033 : Q) (e : P -> D) (_113031 : P) : (term2901 D P Q pat _113033 e _113031) = (term2549 D P Q pat _113033 e _113031).
Proof. exact (MK_COMB (@lem8356032) (@lem8356031 D P Q pat _113033 e _113031)). Qed.
Lemma lem8356035 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356036 {P Q : Type'} (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2902 P Q q _113031 _113033) = (term2472 P Q q _113031 _113033).
Proof. exact (@lem8356035 (term2472 P Q q _113031 _113033)). Qed.
Lemma lem8356037 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2899 D P Q pat e q _113031 _113033) = (term2550 D P Q pat e q _113031 _113033).
Proof. exact (MK_COMB (@lem8356033 D P Q pat _113033 e _113031) (@lem8356036 P Q q _113031 _113033)). Qed.
Lemma lem8356038 {D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term2898 D P Q pat e q _113031 _113033) = (term2550 D P Q pat e q _113031 _113033).
Proof. exact (TRANS (@lem8356028 D P Q pat e q _113031 _113033) (@lem8356037 D P Q pat e q _113031 _113033)). Qed.
Lemma lem8356039 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3130 D P Q _113032 pat e q _113031 _113033) = (term3131 D P Q _113032 pat e q _113031 _113033).
Proof. exact (MK_COMB (@lem8356025 P Q q _113031 _113032) (@lem8356038 D P Q pat e q _113031 _113033)). Qed.
Lemma lem8356040 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3129 D P Q _113032 pat e q _113031 _113033) = (term3131 D P Q _113032 pat e q _113031 _113033).
Proof. exact (TRANS (@lem8356020 D P Q _113032 pat e q _113031 _113033) (@lem8356039 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356041 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3128 D P Q _113032 pat e q _113031 _113033) = (term3132 D P Q _113032 pat e q _113031 _113033).
Proof. exact (MK_COMB (@lem8356017 D P Q pat _113032 e _113031) (@lem8356040 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356042 {D P Q : Type'} (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3127 D P Q _113032 pat e q _113031 _113033) = (term3132 D P Q _113032 pat e q _113031 _113033).
Proof. exact (TRANS (@lem8356012 D P Q _113032 pat e q _113031 _113033) (@lem8356041 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356043 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3126 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3133 A B D P Q p _113030 _113032 pat e q _113031 _113033).
Proof. exact (MK_COMB (@lem8356009 A B P p _113030 _113031) (@lem8356042 D P Q _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356044 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3125 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3133 A B D P Q p _113030 _113032 pat e q _113031 _113033).
Proof. exact (TRANS (@lem8356004 A B D P Q p _113030 _113032 pat e q _113031 _113033) (@lem8356043 A B D P Q p _113030 _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356045 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8356046 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (_113032 : Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113031 : P) (_113033 : Q) : (term3134 A B D P Q p _113030 _113032 pat e q _113031 _113033) = (term3135 A B D P Q p _113030 _113032 pat e q _113031 _113033).
Proof. exact (MK_COMB (@lem8356045) (@lem8356044 A B D P Q p _113030 _113032 pat e q _113031 _113033)). Qed.
Lemma lem8356047 {A P Q : Type'} (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)) = ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033)).
Proof. exact (eq_refl ((term2491 A P Q arg _113031 _113032) = (term2491 A P Q arg _113031 _113033))). Qed.
Lemma lem8356048 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term3124 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) = (term3136 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (MK_COMB (@lem8356046 A B D P Q p _113030 _113032 pat e q _113031 _113033) (@lem8356047 A P Q _113032 arg _113031 _113033)). Qed.
Lemma lem8356049 {A B D P Q : Type'} (p : type560 A B P) (_113030 : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_113032 : Q) (arg : type1475 A P Q) (_113031 : P) (_113033 : Q) : (term3123 A B D P Q arg p _113030 _113032 pat e q _113031 _113033) = (term3136 A B D P Q p _113030 pat e q _113032 arg _113031 _113033).
Proof. exact (TRANS (@lem8356001 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8356048 A B D P Q p _113030 pat e q _113032 arg _113031 _113033)). Qed.
Lemma lem8356051 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term2471 D P Q _112896 pat e q a'.
Proof. exact (conj (@lem8355483 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2) (@lem8355610 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h2)). Qed.
Lemma lem8356052 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term1866 A B D P Q t'' _112897) (h3 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3137 A B D P Q t'' f arg _112896 pat e q a'.
Proof. exact (conj (@lem8355350 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h2 h3) (@lem8356051 A B D P Q t' p _112897 f arg _112896 pat e q a' h1 h3)). Qed.
Lemma lem8356053 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term1866 A B D P Q t'' _112897) (h3 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3138 A B D P Q t'' f arg _112896 pat e q a'.
Proof. exact (conj (@lem8355075 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h2 h3) (@lem8356052 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3)). Qed.
Lemma lem8356054 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term1341 D P Q _112896) (h2 : term1866 A B D P Q t'' _112897) (h3 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3139 A B D P Q p t'' f arg _112896 pat e q a'.
Proof. exact (conj (@lem8354792 A B D P Q t' p _112897 f arg _112896 pat e q a' h3) (@lem8356053 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3)). Qed.
Lemma lem8356056 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term3136 A B D P Q p _113030 pat e q _113032 arg _113031 _113033.
Proof. exact (EQ_MP (@lem8356049 A B D P Q p _113030 pat e q _113032 arg _113031 _113033) (@lem8355998 A B D P Q _113030 _113032 _113031 _113033 p pat e q arg h1)). Qed.
Lemma lem8356057 {A B D P Q : Type'} (_113030 : A -> B) (_113032 : Q) (_113031 : P) (_113033 : Q) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term3136 A B D P Q p _113030 pat e q _113032 arg _113031 _113033.
Proof. exact (@lem8356056 A B D P Q _113030 _113032 _113031 _113033 p pat e q arg h1). Qed.
Lemma lem8356058 {A B D P Q : Type'} (t'' : type907 A B D P Q) (f : A -> B) (_112896 : type885 D P Q) (a' : P) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term3140 A B D P Q p t'' f arg _112896 pat e q a'.
Proof. exact (@lem8356057 A B D P Q f (term2635 A B D P Q t'' pat e q f arg a') a' (term2463 D P Q _112896 pat e q a') p pat e q arg h1). Qed.
Lemma lem8356061 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2639 A B D P Q t'' pat e q f arg a') = (term2542 A D P Q arg _112896 pat e q a').
Proof. exact (@lem8356058 A B D P Q t'' f _112896 a' p pat e q arg h1 (@lem8356054 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h2 h3 h4)). Qed.
Lemma lem8356062 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3141 A B D P Q t'' f arg _112896 pat e q a'.
Proof. exact (fun h0 : term3142 A B D P Q t'' f arg _112896 pat e q a' => @lem8356061 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8356064 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8356065 {A B D P Q : Type'} (t'' : type907 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term3141 A B D P Q t'' f arg _112896 pat e q a') = ((term2639 A B D P Q t'' pat e q f arg a') = (term2542 A D P Q arg _112896 pat e q a')).
Proof. exact (@lem8356064 ((term2639 A B D P Q t'' pat e q f arg a') = (term2542 A D P Q arg _112896 pat e q a'))). Qed.
Lemma lem8356066 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2639 A B D P Q t'' pat e q f arg a') = (term2542 A D P Q arg _112896 pat e q a').
Proof. exact (EQ_MP (@lem8356065 A B D P Q t'' f arg _112896 pat e q a') (@lem8356062 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356068 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem21386 (A -> B) x). Qed.
Lemma lem8356069 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem8356068 A B x). Qed.
Lemma lem8356070 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (@lem8356069 A B f). Qed.
Lemma lem8356071 {A B : Type'} (f : A -> B) : term1060 A B f.
Proof. exact (fun h0 : term1061 A B f => @lem8356070 A B f). Qed.
Lemma lem8356073 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8356074 {A B : Type'} (f : A -> B) : (term1060 A B f) = (f = f).
Proof. exact (@lem8356073 (f = f)). Qed.
Lemma lem8356075 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (EQ_MP (@lem8356074 A B f) (@lem8356071 A B f)). Qed.
Lemma lem8356093 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8356094 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term991 A B _113709 _113710 _113711 _113712) = (term1062 A B _113710 _113712 _113709 _113711).
Proof. exact (@lem8356093 ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712)) (term1063 A B _113709 _113711)). Qed.
Lemma lem8356104 {A : Type'} (_113710 : A) (_113712 : A) : (term1064 A _113710 _113712) = (term1064 A _113710 _113712).
Proof. exact (eq_refl (term1064 A _113710 _113712)). Qed.
Lemma lem8356105 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term993 A B _113709 _113710 _113711 _113712) = (term1065 A B _113710 _113712 _113709 _113711).
Proof. exact (MK_COMB (@lem8356104 A _113710 _113712) (@lem8356094 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356109 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8356110 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1065 A B _113710 _113712 _113709 _113711) = (term1066 A B _113710 _113712 _113709 _113711).
Proof. exact (@lem8356109 ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712)) (term451 A _113710 _113712) (term1063 A B _113709 _113711)). Qed.
Lemma lem8356132 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term993 A B _113709 _113710 _113711 _113712) = (term1066 A B _113710 _113712 _113709 _113711).
Proof. exact (TRANS (@lem8356105 A B _113710 _113712 _113709 _113711) (@lem8356110 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356133 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8356134 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1067 A B _113709 _113710 _113711 _113712) = (term1068 A B _113710 _113712 _113709 _113711).
Proof. exact (MK_COMB (@lem8356133) (@lem8356132 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356156 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1066 A B _113710 _113712 _113709 _113711) = (term1066 A B _113710 _113712 _113709 _113711).
Proof. exact (eq_refl (term1066 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356157 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : ((term993 A B _113709 _113710 _113711 _113712) = (term1066 A B _113710 _113712 _113709 _113711)) = ((term1066 A B _113710 _113712 _113709 _113711) = (term1066 A B _113710 _113712 _113709 _113711)).
Proof. exact (MK_COMB (@lem8356134 A B _113710 _113712 _113709 _113711) (@lem8356156 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356159 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8356160 (x : Prop) : (x = x) = True.
Proof. exact (@lem8356159 Prop x). Qed.
Lemma lem8356161 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : ((term1066 A B _113710 _113712 _113709 _113711) = (term1066 A B _113710 _113712 _113709 _113711)) = True.
Proof. exact (@lem8356160 (term1066 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356162 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : ((term993 A B _113709 _113710 _113711 _113712) = (term1066 A B _113710 _113712 _113709 _113711)) = True.
Proof. exact (TRANS (@lem8356157 A B _113710 _113712 _113709 _113711) (@lem8356161 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356163 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : True = ((term993 A B _113709 _113710 _113711 _113712) = (term1066 A B _113710 _113712 _113709 _113711)).
Proof. exact (SYM (@lem8356162 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356164 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term993 A B _113709 _113710 _113711 _113712) = (term1066 A B _113710 _113712 _113709 _113711).
Proof. exact (EQ_MP (@lem8356163 A B _113710 _113712 _113709 _113711) (@lem0)). Qed.
Lemma lem8356165 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : term1066 A B _113710 _113712 _113709 _113711.
Proof. exact (EQ_MP (@lem8356164 A B _113710 _113712 _113709 _113711) (@lem8354314 A B _113709 _113710 _113711 _113712)). Qed.
Lemma lem8356167 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8356168 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : (term1066 A B _113710 _113712 _113709 _113711) = (term1069 A B _113709 _113710 _113711 _113712).
Proof. exact (@lem8356167 (term1070 A B _113710 _113712 _113709 _113711) ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712))). Qed.
Lemma lem8356170 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356171 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1071 A B _113710 _113712 _113709 _113711) = (term1072 A B _113710 _113712 _113709 _113711).
Proof. exact (@lem8356170 (term451 A _113710 _113712) (term1063 A B _113709 _113711)). Qed.
Lemma lem8356173 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356174 {A : Type'} (_113710 : A) (_113712 : A) : (term1073 A _113710 _113712) = (_113710 = _113712).
Proof. exact (@lem8356173 (_113710 = _113712)). Qed.
Lemma lem8356175 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356176 {A : Type'} (_113710 : A) (_113712 : A) : (term1074 A _113710 _113712) = (term1075 A _113710 _113712).
Proof. exact (MK_COMB (@lem8356175) (@lem8356174 A _113710 _113712)). Qed.
Lemma lem8356178 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356179 {A B : Type'} (_113709 : A -> B) (_113711 : A -> B) : (term1076 A B _113709 _113711) = (_113709 = _113711).
Proof. exact (@lem8356178 (_113709 = _113711)). Qed.
Lemma lem8356180 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1072 A B _113710 _113712 _113709 _113711) = (term1077 A B _113710 _113712 _113709 _113711).
Proof. exact (MK_COMB (@lem8356176 A _113710 _113712) (@lem8356179 A B _113709 _113711)). Qed.
Lemma lem8356181 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1071 A B _113710 _113712 _113709 _113711) = (term1077 A B _113710 _113712 _113709 _113711).
Proof. exact (TRANS (@lem8356171 A B _113710 _113712 _113709 _113711) (@lem8356180 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356182 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8356183 {A B : Type'} (_113710 : A) (_113712 : A) (_113709 : A -> B) (_113711 : A -> B) : (term1078 A B _113710 _113712 _113709 _113711) = (term1079 A B _113710 _113712 _113709 _113711).
Proof. exact (MK_COMB (@lem8356182) (@lem8356181 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356184 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712)) = ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712)).
Proof. exact (eq_refl ((@I (A -> B) _113709 _113710) = (@I (A -> B) _113711 _113712))). Qed.
Lemma lem8356185 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : (term1069 A B _113709 _113710 _113711 _113712) = (term1080 A B _113709 _113710 _113711 _113712).
Proof. exact (MK_COMB (@lem8356183 A B _113710 _113712 _113709 _113711) (@lem8356184 A B _113709 _113710 _113711 _113712)). Qed.
Lemma lem8356186 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : (term1066 A B _113710 _113712 _113709 _113711) = (term1080 A B _113709 _113710 _113711 _113712).
Proof. exact (TRANS (@lem8356168 A B _113709 _113710 _113711 _113712) (@lem8356185 A B _113709 _113710 _113711 _113712)). Qed.
Lemma lem8356188 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3143 A B D P Q t'' arg _112896 pat e q a' f.
Proof. exact (conj (@lem8356066 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4) (@lem8356075 A B f)). Qed.
Lemma lem8356190 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : term1080 A B _113709 _113710 _113711 _113712.
Proof. exact (EQ_MP (@lem8356186 A B _113709 _113710 _113711 _113712) (@lem8356165 A B _113710 _113712 _113709 _113711)). Qed.
Lemma lem8356191 {A B : Type'} (_113709 : A -> B) (_113710 : A) (_113711 : A -> B) (_113712 : A) : term1080 A B _113709 _113710 _113711 _113712.
Proof. exact (@lem8356190 A B _113709 _113710 _113711 _113712). Qed.
Lemma lem8356192 {A B D P Q : Type'} (t'' : type907 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : term3144 A B D P Q t'' f arg _112896 pat e q a'.
Proof. exact (@lem8356191 A B f (term2639 A B D P Q t'' pat e q f arg a') f (term2542 A D P Q arg _112896 pat e q a')). Qed.
Lemma lem8356195 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2642 A B D P Q t'' pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (@lem8356192 A B D P Q t'' f arg _112896 pat e q a' (@lem8356188 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356196 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3145 A B D P Q t'' f arg _112896 pat e q a'.
Proof. exact (fun h0 : term3146 A B D P Q t'' f arg _112896 pat e q a' => @lem8356195 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8356198 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8356199 {A B D P Q : Type'} (t'' : type907 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term3145 A B D P Q t'' f arg _112896 pat e q a') = ((term2642 A B D P Q t'' pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a')).
Proof. exact (@lem8356198 ((term2642 A B D P Q t'' pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a'))). Qed.
Lemma lem8356200 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2642 A B D P Q t'' pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (EQ_MP (@lem8356199 A B D P Q t'' f arg _112896 pat e q a') (@lem8356196 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356218 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8356219 {B : Type'} (y : B) (x : B) (z : B) : (term3147 B x y z) = (term3148 B y x z).
Proof. exact (@lem8356218 (y = z) (term451 B x z)). Qed.
Lemma lem8356229 {B : Type'} (x : B) (y : B) : (term1064 B x y) = (term1064 B x y).
Proof. exact (eq_refl (term1064 B x y)). Qed.
Lemma lem8356230 {B : Type'} (y : B) (x : B) (z : B) : (term3029 B x y z) = (term3149 B y x z).
Proof. exact (MK_COMB (@lem8356229 B x y) (@lem8356219 B y x z)). Qed.
Lemma lem8356234 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8356235 {B : Type'} (y : B) (x : B) (z : B) : (term3149 B y x z) = (term3150 B y x z).
Proof. exact (@lem8356234 (y = z) (term451 B x y) (term451 B x z)). Qed.
Lemma lem8356257 {B : Type'} (y : B) (x : B) (z : B) : (term3029 B x y z) = (term3150 B y x z).
Proof. exact (TRANS (@lem8356230 B y x z) (@lem8356235 B y x z)). Qed.
Lemma lem8356258 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8356259 {B : Type'} (y : B) (x : B) (z : B) : (term3151 B x y z) = (term3152 B y x z).
Proof. exact (MK_COMB (@lem8356258) (@lem8356257 B y x z)). Qed.
Lemma lem8356281 {B : Type'} (y : B) (x : B) (z : B) : (term3150 B y x z) = (term3150 B y x z).
Proof. exact (eq_refl (term3150 B y x z)). Qed.
Lemma lem8356282 {B : Type'} (y : B) (x : B) (z : B) : ((term3029 B x y z) = (term3150 B y x z)) = ((term3150 B y x z) = (term3150 B y x z)).
Proof. exact (MK_COMB (@lem8356259 B y x z) (@lem8356281 B y x z)). Qed.
Lemma lem8356284 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8356285 (x : Prop) : (x = x) = True.
Proof. exact (@lem8356284 Prop x). Qed.
Lemma lem8356286 {B : Type'} (y : B) (x : B) (z : B) : ((term3150 B y x z) = (term3150 B y x z)) = True.
Proof. exact (@lem8356285 (term3150 B y x z)). Qed.
Lemma lem8356287 {B : Type'} (y : B) (x : B) (z : B) : ((term3029 B x y z) = (term3150 B y x z)) = True.
Proof. exact (TRANS (@lem8356282 B y x z) (@lem8356286 B y x z)). Qed.
Lemma lem8356288 {B : Type'} (y : B) (x : B) (z : B) : True = ((term3029 B x y z) = (term3150 B y x z)).
Proof. exact (SYM (@lem8356287 B y x z)). Qed.
Lemma lem8356289 {B : Type'} (y : B) (x : B) (z : B) : (term3029 B x y z) = (term3150 B y x z).
Proof. exact (EQ_MP (@lem8356288 B y x z) (@lem0)). Qed.
Lemma lem8356290 {B : Type'} (y : B) (x : B) (z : B) : term3150 B y x z.
Proof. exact (EQ_MP (@lem8356289 B y x z) (@lem8354468 B x y z)). Qed.
Lemma lem8356292 (b : Prop) (a : Prop) : (a \/ b) = (term1035 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8356293 {B : Type'} (x : B) (y : B) (z : B) : (term3150 B y x z) = (term3153 B x y z).
Proof. exact (@lem8356292 (term3154 B y x z) (y = z)). Qed.
Lemma lem8356295 (a : Prop) (b : Prop) : (term1037 a b) = (term1038 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8356296 {B : Type'} (y : B) (x : B) (z : B) : (term3155 B y x z) = (term3156 B y x z).
Proof. exact (@lem8356295 (term451 B x y) (term451 B x z)). Qed.
Lemma lem8356298 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356299 {B : Type'} (x : B) (y : B) : (term1073 B x y) = (x = y).
Proof. exact (@lem8356298 (x = y)). Qed.
Lemma lem8356300 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356301 {B : Type'} (x : B) (y : B) : (term1074 B x y) = (term1075 B x y).
Proof. exact (MK_COMB (@lem8356300) (@lem8356299 B x y)). Qed.
Lemma lem8356303 (a : Prop) : (term234 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8356304 {B : Type'} (x : B) (z : B) : (term1073 B x z) = (x = z).
Proof. exact (@lem8356303 (x = z)). Qed.
Lemma lem8356305 {B : Type'} (y : B) (x : B) (z : B) : (term3156 B y x z) = (term3157 B y x z).
Proof. exact (MK_COMB (@lem8356301 B x y) (@lem8356304 B x z)). Qed.
Lemma lem8356306 {B : Type'} (y : B) (x : B) (z : B) : (term3155 B y x z) = (term3157 B y x z).
Proof. exact (TRANS (@lem8356296 B y x z) (@lem8356305 B y x z)). Qed.
Lemma lem8356307 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8356308 {B : Type'} (y : B) (x : B) (z : B) : (term3158 B y x z) = (term3159 B y x z).
Proof. exact (MK_COMB (@lem8356307) (@lem8356306 B y x z)). Qed.
Lemma lem8356309 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem8356310 {B : Type'} (x : B) (y : B) (z : B) : (term3153 B x y z) = (term3160 B x y z).
Proof. exact (MK_COMB (@lem8356308 B y x z) (@lem8356309 B y z)). Qed.
Lemma lem8356311 {B : Type'} (x : B) (y : B) (z : B) : (term3150 B y x z) = (term3160 B x y z).
Proof. exact (TRANS (@lem8356293 B x y z) (@lem8356310 B x y z)). Qed.
Lemma lem8356313 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3161 A B D P Q _112897 t'' f arg _112896 pat e q a'.
Proof. exact (conj (@lem8354785 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h3 h4) (@lem8356200 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356315 {B : Type'} (x : B) (y : B) (z : B) : term3160 B x y z.
Proof. exact (EQ_MP (@lem8356311 B x y z) (@lem8356290 B y x z)). Qed.
Lemma lem8356316 {B : Type'} (x : B) (y : B) (z : B) : term3160 B x y z.
Proof. exact (@lem8356315 B x y z). Qed.
Lemma lem8356317 {A B D P Q : Type'} (t'' : type907 A B D P Q) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : term3162 A B D P Q t'' _112897 f arg _112896 pat e q a'.
Proof. exact (@lem8356316 B (term2642 A B D P Q t'' pat e q f arg a') (term2539 A B D P Q _112897 pat e q f arg a') (term2544 A B D P Q f arg _112896 pat e q a')). Qed.
Lemma lem8356320 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (@lem8356317 A B D P Q t'' _112897 f arg _112896 pat e q a' (@lem8356313 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356321 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3163 A B D P Q _112897 f arg _112896 pat e q a'.
Proof. exact (fun h0 : term2547 A B D P Q _112897 f arg _112896 pat e q a' => @lem8356320 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8356323 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8356324 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term3163 A B D P Q _112897 f arg _112896 pat e q a') = ((term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a')).
Proof. exact (@lem8356323 ((term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a'))). Qed.
Lemma lem8356325 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : (term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a').
Proof. exact (EQ_MP (@lem8356324 A B D P Q _112897 f arg _112896 pat e q a') (@lem8356321 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356328 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8356330 {A B D P Q : Type'} (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) : (term2547 A B D P Q _112897 f arg _112896 pat e q a') = (term3164 A B D P Q _112897 f arg _112896 pat e q a').
Proof. exact (@lem8356328 ((term2539 A B D P Q _112897 pat e q f arg a') = (term2544 A B D P Q f arg _112896 pat e q a'))). Qed.
Lemma lem8356333 {A B D P Q : Type'} (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term3164 A B D P Q _112897 f arg _112896 pat e q a'.
Proof. exact (EQ_MP (@lem8356330 A B D P Q _112897 f arg _112896 pat e q a') (@lem8350087 A B D P Q t' p _112897 f arg _112896 pat e q a' h1)). Qed.
Lemma lem8356336 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (@lem8356333 A B D P Q t' p _112897 f arg _112896 pat e q a' h4 (@lem8356325 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356337 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : term979.
Proof. exact (fun h0 : ~ False => @lem8356336 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4). Qed.
Lemma lem8356339 (p : Prop) : (term974 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8356340 : term979 = False.
Proof. exact (@lem8356339 False). Qed.
Lemma lem8356341 {A B D P Q : Type'} (t'' : type907 A B D P Q) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1866 A B D P Q t'' _112897) (h4 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (EQ_MP (@lem8356340) (@lem8356337 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4)). Qed.
Lemma lem8356342 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : (term895 A B P p f a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p f a' => @lem8353437 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (fun h5 : False => @lem8349725 A B P p f a' h2)). Qed.
Lemma lem8356343 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8356342 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (@lem8349725 A B P p f a' h2)). Qed.
Lemma lem8356344 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : (term895 A B P p g a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p g a' => @lem8352158 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (fun h5 : False => @lem8349353 A B P p g a' h2)). Qed.
Lemma lem8356345 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8356344 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (@lem8349353 A B P p g a' h2)). Qed.
Lemma lem8356346 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : (term895 A B P p f a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p f a' => @lem8356343 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (fun h5 : False => @lem8347767 A B P p f a' h2)). Qed.
Lemma lem8356347 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8356346 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (@lem8347767 A B P p f a' h2)). Qed.
Lemma lem8356348 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : (term895 A B P p g a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p g a' => @lem8356345 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (fun h5 : False => @lem8346936 A B P p g a' h2)). Qed.
Lemma lem8356349 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8356348 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (@lem8346936 A B P p g a' h2)). Qed.
Lemma lem8356350 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2480 D P Q pat e q a') (h2 : term2556 A B D P Q f p g pat e q a' t') : (term2480 D P Q pat e q a') = False.
Proof. exact (prop_ext (fun h3 : term2480 D P Q pat e q a' => @lem8353987 A B D P Q f p g pat e q a' t' h1 h2) (fun h3 : False => @lem8348187 D P Q pat e q a' h1)). Qed.
Lemma lem8356351 {A B D P Q : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2480 D P Q pat e q a') (h2 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8356350 A B D P Q f p g pat e q a' t' h1 h2) (@lem8348187 D P Q pat e q a' h1)). Qed.
Lemma lem8356352 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : (term895 A B P p f a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p f a' => @lem8356347 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (fun h5 : False => @lem8347767 A B P p f a' h2)). Qed.
Lemma lem8356353 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p f a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (EQ_MP (@lem8356352 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h3 h4) (@lem8347767 A B P p f a' h2)). Qed.
Lemma lem8356354 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') (h2 : term2558 A B D P Q f t' p g pat e q a') : (term2480 D P Q pat e q a') = False.
Proof. exact (prop_ext (fun h3 : term2480 D P Q pat e q a' => @lem8352708 A B D P Q f t' p g pat e q a' h1 h2) (fun h3 : False => @lem8347356 D P Q pat e q a' h1)). Qed.
Lemma lem8356355 {A B D P Q : Type'} (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2480 D P Q pat e q a') (h2 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8356354 A B D P Q f t' p g pat e q a' h1 h2) (@lem8347356 D P Q pat e q a' h1)). Qed.
Lemma lem8356356 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : (term895 A B P p g a') = False.
Proof. exact (prop_ext (fun h5 : term895 A B P p g a' => @lem8356349 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (fun h5 : False => @lem8346936 A B P p g a' h2)). Qed.
Lemma lem8356357 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term895 A B P p g a') (h3 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h4 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (EQ_MP (@lem8356356 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h3 h4) (@lem8346936 A B P p g a' h2)). Qed.
Lemma lem8356358 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2556 A B D P Q f p g pat e q a' t') : False.
Proof. exact (or_elim (@lem8346111 A B D P Q f p g pat e q a' t' h3) (fun h0 : term895 A B P p f a' => @lem8356353 A B D P Q z lt2 s f p g pat e q a' t' h1 h0 h2 h3) (fun h0 : term2480 D P Q pat e q a' => @lem8356351 A B D P Q f p g pat e q a' t' h0 h3)). Qed.
Lemma lem8356359 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (t' : Q) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') (h3 : term2558 A B D P Q f t' p g pat e q a') : False.
Proof. exact (or_elim (@lem8346102 A B D P Q f t' p g pat e q a' h3) (fun h0 : term895 A B P p g a' => @lem8356357 A B D P Q z lt2 s f t' p g pat e q a' h1 h0 h2 h3) (fun h0 : term2480 D P Q pat e q a' => @lem8356355 A B D P Q f t' p g pat e q a' h0 h3)). Qed.
Lemma lem8356360 {A B D P Q : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (t' : Q) (h1 : term2035 A B P lt2 s z p) (h2 : term2570 A B D P Q lt2 s f p g pat e q a' t') : False.
Proof. exact (or_elim (@lem8346098 A B D P Q lt2 s f p g pat e q a' t' h2) (fun h0 : term2558 A B D P Q f t' p g pat e q a' => @lem8356359 A B D P Q z lt2 s f t' p g pat e q a' h1 h2 h0) (fun h0 : term2556 A B D P Q f p g pat e q a' t' => @lem8356358 A B D P Q z lt2 s f p g pat e q a' t' h1 h2 h0)). Qed.
Lemma lem8356361 {A B D P Q : Type'} (z : type518 A B P) (t'' : type907 A B D P Q) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term2035 A B P lt2 s z p) (h3 : term1341 D P Q _112896) (h4 : term1866 A B D P Q t'' _112897) (h5 : term2572 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (or_elim (@lem8346087 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a' h5) (fun h0 : term2570 A B D P Q lt2 s f p g pat e q a' t' => @lem8356360 A B D P Q z lt2 s f p g pat e q a' t' h2 h0) (fun h0 : term2552 A B D P Q t' p _112897 f arg _112896 pat e q a' => @lem8356341 A B D P Q t'' t' p _112897 f arg _112896 pat e q a' h1 h3 h4 h0)). Qed.
Lemma lem8356362 {A B D P Q : Type'} (z : type518 A B P) (t'' : type907 A B D P Q) (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term2035 A B P lt2 s z p) (h4 : term1341 D P Q _112896) (h5 : term1866 A B D P Q t'' _112897) (h6 : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (or_elim (@lem8345486 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a' h6) (fun h0 : term2578 A B D P Q p f t arg _112896 pat e q lt2 y s a => @lem8351402 A B D P Q p f t arg _112896 pat e q lt2 y s a h2 h4 h0) (fun h0 : term2572 A B D P Q lt2 s g t' p _112897 f arg _112896 pat e q a' => @lem8356361 A B D P Q z t'' lt2 s g t' p _112897 f arg _112896 pat e q a' h1 h3 h4 h5 h0)). Qed.
Lemma lem8356363 {A B D P Q : Type'} (z : type518 A B P) (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term2035 A B P lt2 s z p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (ex_elim (@lem8342269 A B D P Q _112897 h5) (fun t'' : type907 A B D P Q => fun h0 : term1868 A B D P Q _112897 t'' => @lem8356362 A B D P Q z t'' t y a lt2 s g t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4 h0 h6)). Qed.
Lemma lem8356364 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (t' : Q) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2443 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a') : False.
Proof. exact (ex_elim (@lem8343019 A B P lt2 s p h3) (fun z : type518 A B P => fun h0 : term2037 A B P lt2 s p z => @lem8356363 A B D P Q z t y a lt2 s g t' p _112897 f arg _112896 pat e q a' h1 h2 h0 h4 h5 h6)). Qed.
Lemma lem8356365 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (a' : P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2446 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a') : False.
Proof. exact (ex_elim (@lem8344347 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a' h6) (fun t' : Q => fun h0 : term2445 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a' t' => @lem8356364 A B D P Q t y a lt2 s g t' p _112897 f arg _112896 pat e q a' h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356366 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2448 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344346 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q h6) (fun a' : P => fun h0 : term2447 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a' => @lem8356365 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q a' h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356367 {A B D P Q : Type'} (t : Q) (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2450 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344345 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q h6) (fun g : A -> B => fun h0 : term2449 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q g => @lem8356366 A B D P Q t y a lt2 s g p _112897 f arg _112896 pat e q h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356368 {A B D P Q : Type'} (y : A) (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2452 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344344 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q h6) (fun t : Q => fun h0 : term2451 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q t => @lem8356367 A B D P Q t y a lt2 s p _112897 f arg _112896 pat e q h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356369 {A B D P Q : Type'} (a : P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2454 A B D P Q a lt2 s p _112897 f arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344343 A B D P Q a lt2 s p _112897 f arg _112896 pat e q h6) (fun y : A => fun h0 : term2453 A B D P Q a lt2 s p _112897 f arg _112896 pat e q y => @lem8356368 A B D P Q y a lt2 s p _112897 f arg _112896 pat e q h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356370 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (f : A -> B) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term2456 A B D P Q lt2 s p _112897 f arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344342 A B D P Q lt2 s p _112897 f arg _112896 pat e q h6) (fun a : P => fun h0 : term2455 A B D P Q lt2 s p _112897 f arg _112896 pat e q a => @lem8356369 A B D P Q a lt2 s p _112897 f arg _112896 pat e q h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356371 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) : False.
Proof. exact (ex_elim (@lem8344341 A B D P Q lt2 s p _112897 arg _112896 pat e q h6) (fun f : A -> B => fun h0 : term2457 A B D P Q lt2 s p _112897 arg _112896 pat e q f => @lem8356370 A B D P Q lt2 s p _112897 f arg _112896 pat e q h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8356372 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) : (term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) = False.
Proof. exact (prop_ext (fun h7 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q => @lem8356371 A B D P Q lt2 s p _112897 arg _112896 pat e q h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem8341727 A B D P Q lt2 s p _112897 arg _112896 pat e q h6)). Qed.
Lemma lem8356373 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) (h6 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q) : False.
Proof. exact (EQ_MP (@lem8356372 A B D P Q lt2 s p _112897 arg _112896 pat e q h1 h2 h3 h4 h5 h6) (@lem8341727 A B D P Q lt2 s p _112897 arg _112896 pat e q h6)). Qed.
Lemma lem8356374 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112896 : type885 D P Q) (_112897 : type906 A B D P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) : term1663 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (fun h0 : term1664 A B D P Q lt2 s p _112897 arg _112896 pat e q => @lem8356373 A B D P Q lt2 s p _112897 arg _112896 pat e q h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8356375 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112896 : type885 D P Q) (_112897 : type906 A B D P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1122 A B P lt2 s p) (h4 : term1341 D P Q _112896) (h5 : term1463 A B D P Q _112897) : term1623 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (EQ_MP (@lem8341726 A B D P Q lt2 s p _112897 arg _112896 pat e q) (@lem8356374 A B D P Q q pat e arg lt2 s p _112896 _112897 h1 h2 h3 h4 h5)). Qed.
Lemma lem8356376 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (_112896 : type885 D P Q) (_112897 : type906 A B D P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1341 D P Q _112896) (h4 : term1463 A B D P Q _112897) : term1624 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (fun h0 : term1122 A B P lt2 s p => @lem8356375 A B D P Q q pat e arg lt2 s p _112896 _112897 h1 h2 h0 h3 h4). Qed.
Lemma lem8356377 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (_112896 : type885 D P Q) (_112897 : type906 A B D P Q) (h1 : term36 A B D P Q p pat e q arg) (h2 : term1341 D P Q _112896) (h3 : term1463 A B D P Q _112897) : term1625 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (fun h0 : term35 A B D P Q p q pat e arg lt2 s => @lem8356376 A B D P Q p q pat e arg lt2 s _112896 _112897 h1 h0 h2 h3). Qed.
Lemma lem8356378 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112896 : type885 D P Q) (_112897 : type906 A B D P Q) (h1 : term1341 D P Q _112896) (h2 : term1463 A B D P Q _112897) : term1626 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (fun h0 : term36 A B D P Q p pat e q arg => @lem8356377 A B D P Q lt2 s p pat e q arg _112896 _112897 h0 h1 h2). Qed.
Lemma lem8356379 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (_112896 : type885 D P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : term1463 A B D P Q _112897) : term1627 A B D P Q lt2 s p _112897 arg _112896 pat e q.
Proof. exact (fun h0 : term1341 D P Q _112896 => @lem8356378 A B D P Q lt2 s p arg pat e q _112896 _112897 h0 h1). Qed.
Lemma lem8356384 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (_112897 : type906 A B D P Q) (h1 : term1463 A B D P Q _112897) : term1629 A B D P Q lt2 s p _112897 arg pat e q.
Proof. exact (fun _112896 : type885 D P Q => @lem8356379 A B D P Q lt2 s p arg _112896 pat e q _112897 h1). Qed.
Lemma lem8356385 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (_112897 : type906 A B D P Q) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1630 A B D P Q lt2 s p _112897 arg pat e q.
Proof. exact (fun h0 : term1463 A B D P Q _112897 => @lem8356384 A B D P Q lt2 s p arg pat e q _112897 h0). Qed.
Lemma lem8356390 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1632 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun _112897 : type906 A B D P Q => @lem8356385 A B D P Q lt2 s p _112897 arg pat e q). Qed.
Lemma lem8356395 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1650 A B D P Q s p arg pat e q.
Proof. exact (fun lt2 : type1402 A => @lem8356390 A B D P Q lt2 s p arg pat e q). Qed.
Lemma lem8356400 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1652 A B D P Q p arg pat e q.
Proof. exact (fun s : P -> A => @lem8356395 A B D P Q s p arg pat e q). Qed.
Lemma lem8356405 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1654 A B D P Q arg pat e q.
Proof. exact (fun p : type560 A B P => @lem8356400 A B D P Q p arg pat e q). Qed.
Lemma lem8356410 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1656 A B D P Q pat e q.
Proof. exact (fun arg : type1475 A P Q => @lem8356405 A B D P Q arg pat e q). Qed.
Lemma lem8356415 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : term1658 A B D P Q e q.
Proof. exact (fun pat : Q -> D => @lem8356410 A B D P Q pat e q). Qed.
Lemma lem8356420 {A B D P Q : Type'} (q : type1413 P Q) : term1660 A B D P Q q.
Proof. exact (fun e : P -> D => @lem8356415 A B D P Q e q). Qed.
Lemma lem8356425 {A B D P Q : Type'} : term1662 A B D P Q.
Proof. exact (fun q : type1413 P Q => @lem8356420 A B D P Q q). Qed.
Lemma lem8356426 {A B D P Q : Type'} : term1592 A B D P Q.
Proof. exact (EQ_MP (@lem8341717 A B D P Q) (@lem8356425 A B D P Q)). Qed.
Lemma lem8356427 {A B D P Q : Type'} (q : type1413 P Q) : term3165 A B D P Q q.
Proof. exact (@lem8356426 A B D P Q q). Qed.
Lemma lem8356428 {A B D P Q : Type'} (q : type1413 P Q) : (term3165 A B D P Q q) = (term1588 A B D P Q q).
Proof. exact (eq_refl (term3165 A B D P Q q)). Qed.
Lemma lem8356429 {A B D P Q : Type'} (q : type1413 P Q) : term1588 A B D P Q q.
Proof. exact (EQ_MP (@lem8356428 A B D P Q q) (@lem8356427 A B D P Q q)). Qed.
Lemma lem8356430 {A B D P Q : Type'} (q : type1413 P Q) (e : P -> D) : term3166 A B D P Q q e.
Proof. exact (@lem8356429 A B D P Q q e). Qed.
Lemma lem8356431 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : (term3166 A B D P Q q e) = (term1584 A B D P Q e q).
Proof. exact (eq_refl (term3166 A B D P Q q e)). Qed.
Lemma lem8356432 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) : term1584 A B D P Q e q.
Proof. exact (EQ_MP (@lem8356431 A B D P Q e q) (@lem8356430 A B D P Q q e)). Qed.
Lemma lem8356433 {A B D P Q : Type'} (e : P -> D) (q : type1413 P Q) (pat : Q -> D) : term3167 A B D P Q e q pat.
Proof. exact (@lem8356432 A B D P Q e q pat). Qed.
Lemma lem8356434 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term3167 A B D P Q e q pat) = (term1580 A B D P Q pat e q).
Proof. exact (eq_refl (term3167 A B D P Q e q pat)). Qed.
Lemma lem8356435 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1580 A B D P Q pat e q.
Proof. exact (EQ_MP (@lem8356434 A B D P Q pat e q) (@lem8356433 A B D P Q e q pat)). Qed.
Lemma lem8356436 {A B D P Q : Type'} (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) : term3168 A B D P Q pat e q arg.
Proof. exact (@lem8356435 A B D P Q pat e q arg). Qed.
Lemma lem8356437 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term3168 A B D P Q pat e q arg) = (term1576 A B D P Q arg pat e q).
Proof. exact (eq_refl (term3168 A B D P Q pat e q arg)). Qed.
Lemma lem8356438 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1576 A B D P Q arg pat e q.
Proof. exact (EQ_MP (@lem8356437 A B D P Q arg pat e q) (@lem8356436 A B D P Q pat e q arg)). Qed.
Lemma lem8356439 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (p : type560 A B P) : term3169 A B D P Q arg pat e q p.
Proof. exact (@lem8356438 A B D P Q arg pat e q p). Qed.
Lemma lem8356440 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term3169 A B D P Q arg pat e q p) = (term1572 A B D P Q p arg pat e q).
Proof. exact (eq_refl (term3169 A B D P Q arg pat e q p)). Qed.
Lemma lem8356441 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1572 A B D P Q p arg pat e q.
Proof. exact (EQ_MP (@lem8356440 A B D P Q p arg pat e q) (@lem8356439 A B D P Q arg pat e q p)). Qed.
Lemma lem8356442 {A B D P Q : Type'} (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (s : P -> A) : term3170 A B D P Q p arg pat e q s.
Proof. exact (@lem8356441 A B D P Q p arg pat e q s). Qed.
Lemma lem8356443 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term3170 A B D P Q p arg pat e q s) = (term1568 A B D P Q s p arg pat e q).
Proof. exact (eq_refl (term3170 A B D P Q p arg pat e q s)). Qed.
Lemma lem8356444 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1568 A B D P Q s p arg pat e q.
Proof. exact (EQ_MP (@lem8356443 A B D P Q s p arg pat e q) (@lem8356442 A B D P Q p arg pat e q s)). Qed.
Lemma lem8356445 {A B D P Q : Type'} (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) : term3171 A B D P Q s p arg pat e q lt2.
Proof. exact (@lem8356444 A B D P Q s p arg pat e q lt2). Qed.
Lemma lem8356446 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : (term3171 A B D P Q s p arg pat e q lt2) = (term1532 A B D P Q lt2 s p arg pat e q).
Proof. exact (eq_refl (term3171 A B D P Q s p arg pat e q lt2)). Qed.
Lemma lem8356447 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1532 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8356446 A B D P Q lt2 s p arg pat e q) (@lem8356445 A B D P Q s p arg pat e q lt2)). Qed.
Lemma lem8356449 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) : term1295 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8339588 A B D P Q lt2 s p arg pat e q (@lem8356447 A B D P Q lt2 s p arg pat e q)). Qed.
Lemma lem8356450 {A B D P Q : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (arg : type1475 A P Q) (h1 : term36 A B D P Q p pat e q arg) : term1376 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8356449 A B D P Q lt2 s p arg pat e q (@lem8333696 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8356451 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term1374 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8356450 A B D P Q lt2 s p pat e q arg h1 (@lem8333724 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356452 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1277 A B D P Q lt2 s p arg pat e q.
Proof. exact (@lem8356451 A B D P Q p q pat e arg lt2 s h1 h2 (@lem8333874 A B P lt2 s p h3)). Qed.
Lemma lem8356453 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1278 A B D P Q lt2 s p arg pat e q) (h4 : term40 A B P lt2 s p) : False.
Proof. exact (@lem8356452 A B D P Q q pat e arg lt2 s p h1 h2 h4 (@lem8339087 A B D P Q lt2 s p arg pat e q h3)). Qed.
Lemma lem8356454 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1278 A B D P Q lt2 s p arg pat e q) (h4 : term40 A B P lt2 s p) : (term1278 A B D P Q lt2 s p arg pat e q) = False.
Proof. exact (prop_ext (fun h5 : term1278 A B D P Q lt2 s p arg pat e q => @lem8356453 A B D P Q arg pat e q lt2 s p h1 h2 h3 h4) (fun h5 : False => @lem8339087 A B D P Q lt2 s p arg pat e q h3)). Qed.
Lemma lem8356455 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term1278 A B D P Q lt2 s p arg pat e q) (h4 : term40 A B P lt2 s p) : False.
Proof. exact (EQ_MP (@lem8356454 A B D P Q arg pat e q lt2 s p h1 h2 h3 h4) (@lem8339087 A B D P Q lt2 s p arg pat e q h3)). Qed.
Lemma lem8356456 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1277 A B D P Q lt2 s p arg pat e q.
Proof. exact (fun h0 : term1278 A B D P Q lt2 s p arg pat e q => @lem8356455 A B D P Q arg pat e q lt2 s p h1 h2 h0 h3). Qed.
Lemma lem8356457 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1276 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8339086 A B D P Q lt2 s p arg pat e q) (@lem8356456 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356458 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1275 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8339082 A B D P Q lt2 s p arg pat e q) (@lem8356457 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356459 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : (term35 A B D P Q p q pat e arg lt2 s) = (term1275 A B D P Q lt2 s p arg pat e q).
Proof. exact (prop_ext (fun h4 : term35 A B D P Q p q pat e arg lt2 s => @lem8356458 A B D P Q q pat e arg lt2 s p h1 h2 h3) (fun h4 : term1275 A B D P Q lt2 s p arg pat e q => @lem8333724 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356460 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1275 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8356459 A B D P Q q pat e arg lt2 s p h1 h2 h3) (@lem8333724 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356461 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : (term36 A B D P Q p pat e q arg) = (term1275 A B D P Q lt2 s p arg pat e q).
Proof. exact (prop_ext (fun h4 : term36 A B D P Q p pat e q arg => @lem8356460 A B D P Q q pat e arg lt2 s p h1 h2 h3) (fun h4 : term1275 A B D P Q lt2 s p arg pat e q => @lem8333696 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8356462 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term1275 A B D P Q lt2 s p arg pat e q.
Proof. exact (EQ_MP (@lem8356461 A B D P Q q pat e arg lt2 s p h1 h2 h3) (@lem8333696 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8356463 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term3172 A B D P Q lt2 s p arg pat e q.
Proof. exact (ex_intro (term3173 A B D P Q lt2 s p arg pat e q) (term1201 A B P) (@lem8356462 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356464 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term3174 A B D P Q lt2 s arg p pat e q.
Proof. exact (ex_intro (term3175 A B D P Q lt2 s arg p pat e q) (term1149 A B D P Q arg pat e q) (@lem8356463 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356465 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term225 A B D P Q lt2 s p pat e q arg.
Proof. exact (ex_intro (term224 A B D P Q lt2 s p pat e q arg) (term1132 A B D P Q p pat e q) (@lem8356464 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356466 {A B D P Q : Type'} (arg : type1475 A P Q) (pat : Q -> D) (e : P -> D) (q : type1413 P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term174 A B D P Q p arg pat e q) (h4 : term40 A B P lt2 s p) : term173 A B D P Q lt2 s p pat e q arg.
Proof. exact (EQ_MP (@lem8326936 A B D P Q lt2 s p arg pat e q h3) (@lem8356465 A B D P Q q pat e arg lt2 s p h1 h2 h4)). Qed.
Lemma lem8356467 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : (term174 A B D P Q p arg pat e q) = (term173 A B D P Q lt2 s p pat e q arg).
Proof. exact (prop_ext (fun h4 : term174 A B D P Q p arg pat e q => @lem8356466 A B D P Q arg pat e q lt2 s p h1 h2 h4 h3) (fun h4 : term173 A B D P Q lt2 s p pat e q arg => @lem8333662 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356468 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term173 A B D P Q lt2 s p pat e q arg.
Proof. exact (EQ_MP (@lem8356467 A B D P Q q pat e arg lt2 s p h1 h2 h3) (@lem8333662 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356469 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term128 A B D P Q lt2 p s pat e q arg.
Proof. exact (EQ_MP (@lem8321780 A B D P Q lt2 p s pat e q arg) (@lem8356468 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356470 {A B D P Q : Type'} (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) (h3 : term40 A B P lt2 s p) : term127 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8321568 A B D P Q lt2 p s e pat q arg) (@lem8356469 A B D P Q q pat e arg lt2 s p h1 h2 h3)). Qed.
Lemma lem8356471 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term38 A B D P Q lt2 p s e pat q arg.
Proof. exact (fun h0 : term40 A B P lt2 s p => @lem8356470 A B D P Q q pat e arg lt2 s p h1 h2 h0). Qed.
Lemma lem8356472 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term37 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8321253 A B D P Q lt2 p s e pat q arg) (@lem8356471 A B D P Q p q pat e arg lt2 s h1 h2)). Qed.
Lemma lem8356473 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term34 A B D P Q p q pat e arg lt2 s) : term35 A B D P Q p q pat e arg lt2 s.
Proof. exact (proj2 (@lem8321122 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8356474 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term34 A B D P Q p q pat e arg lt2 s) : term36 A B D P Q p pat e q arg.
Proof. exact (proj1 (@lem8321122 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8356475 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : (term35 A B D P Q p q pat e arg lt2 s) = (term37 A B D P Q lt2 p s e pat q arg).
Proof. exact (prop_ext (fun h3 : term35 A B D P Q p q pat e arg lt2 s => @lem8356472 A B D P Q p q pat e arg lt2 s h1 h2) (fun h3 : term37 A B D P Q lt2 p s e pat q arg => @lem8321123 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356476 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term37 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8356475 A B D P Q p q pat e arg lt2 s h1 h2) (@lem8321123 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356477 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : (term36 A B D P Q p pat e q arg) = (term37 A B D P Q lt2 p s e pat q arg).
Proof. exact (prop_ext (fun h3 : term36 A B D P Q p pat e q arg => @lem8356476 A B D P Q p q pat e arg lt2 s h1 h2) (fun h3 : term37 A B D P Q lt2 p s e pat q arg => @lem8321124 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8356478 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term35 A B D P Q p q pat e arg lt2 s) : term37 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8356477 A B D P Q p q pat e arg lt2 s h1 h2) (@lem8321124 A B D P Q p pat e q arg h1)). Qed.
Lemma lem8356479 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term34 A B D P Q p q pat e arg lt2 s) : (term35 A B D P Q p q pat e arg lt2 s) = (term37 A B D P Q lt2 p s e pat q arg).
Proof. exact (prop_ext (fun h3 : term35 A B D P Q p q pat e arg lt2 s => @lem8356478 A B D P Q p q pat e arg lt2 s h1 h3) (fun h3 : term37 A B D P Q lt2 p s e pat q arg => @lem8356473 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356480 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term36 A B D P Q p pat e q arg) (h2 : term34 A B D P Q p q pat e arg lt2 s) : term37 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8356479 A B D P Q p q pat e arg lt2 s h1 h2) (@lem8356473 A B D P Q p q pat e arg lt2 s h2)). Qed.
Lemma lem8356481 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term34 A B D P Q p q pat e arg lt2 s) : (term36 A B D P Q p pat e q arg) = (term37 A B D P Q lt2 p s e pat q arg).
Proof. exact (prop_ext (fun h2 : term36 A B D P Q p pat e q arg => @lem8356480 A B D P Q p q pat e arg lt2 s h2 h1) (fun h2 : term37 A B D P Q lt2 p s e pat q arg => @lem8356474 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8356482 {A B D P Q : Type'} (p : type560 A B P) (q : type1413 P Q) (pat : Q -> D) (e : P -> D) (arg : type1475 A P Q) (lt2 : type1402 A) (s : P -> A) (h1 : term34 A B D P Q p q pat e arg lt2 s) : term37 A B D P Q lt2 p s e pat q arg.
Proof. exact (EQ_MP (@lem8356481 A B D P Q p q pat e arg lt2 s h1) (@lem8356474 A B D P Q p q pat e arg lt2 s h1)). Qed.
Lemma lem8356483 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) (q : type1413 P Q) (arg : type1475 A P Q) : term3176 A B D P Q lt2 p s e pat q arg.
Proof. exact (fun h0 : term34 A B D P Q p q pat e arg lt2 s => @lem8356482 A B D P Q p q pat e arg lt2 s h0). Qed.
Lemma lem8356488 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) (q : type1413 P Q) : term3177 A B D P Q lt2 p s e pat q.
Proof. exact (fun arg : type1475 A P Q => @lem8356483 A B D P Q lt2 p s e pat q arg). Qed.
Lemma lem8356493 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) (pat : Q -> D) : term3178 A B D P Q lt2 p s e pat.
Proof. exact (fun q : type1413 P Q => @lem8356488 A B D P Q lt2 p s e pat q). Qed.
Lemma lem8356498 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (e : P -> D) : term3179 A B D P Q lt2 p s e.
Proof. exact (fun pat : Q -> D => @lem8356493 A B D P Q lt2 p s e pat). Qed.
Lemma lem8356503 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) : term3180 A B D P Q lt2 p s.
Proof. exact (fun e : P -> D => @lem8356498 A B D P Q lt2 p s e). Qed.
Lemma lem8356508 {A B D P Q : Type'} (lt2 : type1402 A) (p : type560 A B P) : term3181 A B D P Q lt2 p.
Proof. exact (fun s : P -> A => @lem8356503 A B D P Q lt2 p s). Qed.
Lemma lem8356513 {A B D P Q : Type'} (lt2 : type1402 A) : term3182 A B D P Q lt2.
Proof. exact (fun p : type560 A B P => @lem8356508 A B D P Q lt2 p). Qed.
Lemma lem8356518 {A B D P Q : Type'} : term3183 A B D P Q.
Proof. exact (fun lt2 : type1402 A => @lem8356513 A B D P Q lt2). Qed.
