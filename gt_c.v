Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import gt_c_term_abbrevs.
Lemma lem5125552 {_115015 _115016 : Type'} : (@gt_c _115015 _115016) = (term0 _115015 _115016).
Proof. exact (@gt_c_def _115015 _115016). Qed.
Lemma lem5125553 {_115016 : Type'} (_66889 : _115016 -> Prop) : _66889 = _66889.
Proof. exact (eq_refl _66889). Qed.
Lemma lem5125554 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : (@gt_c _115015 _115016 _66889) = (term1 _115015 _115016 _66889).
Proof. exact (MK_COMB (@lem5125552 _115015 _115016) (@lem5125553 _115016 _66889)). Qed.
Lemma lem5125555 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : (term1 _115015 _115016 _66889) = (term2 _115015 _115016 _66889).
Proof. exact (eq_refl (term1 _115015 _115016 _66889)). Qed.
Lemma lem5125556 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : (@gt_c _115015 _115016 _66889) = (term2 _115015 _115016 _66889).
Proof. exact (TRANS (@lem5125554 _115015 _115016 _66889) (@lem5125555 _115015 _115016 _66889)). Qed.
Lemma lem5125557 {_115015 : Type'} (_66890 : _115015 -> Prop) : _66890 = _66890.
Proof. exact (eq_refl _66890). Qed.
Lemma lem5125558 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) (_66890 : _115015 -> Prop) : (@gt_c _115015 _115016 _66889 _66890) = (term3 _115015 _115016 _66889 _66890).
Proof. exact (MK_COMB (@lem5125556 _115015 _115016 _66889) (@lem5125557 _115015 _66890)). Qed.
Lemma lem5125559 {_115015 _115016 : Type'} (_66890 : _115015 -> Prop) (_66889 : _115016 -> Prop) : (term3 _115015 _115016 _66889 _66890) = (@lt_c _115015 _115016 _66890 _66889).
Proof. exact (eq_refl (term3 _115015 _115016 _66889 _66890)). Qed.
Lemma lem5125560 {_115015 _115016 : Type'} (_66890 : _115015 -> Prop) (_66889 : _115016 -> Prop) : (@gt_c _115015 _115016 _66889 _66890) = (@lt_c _115015 _115016 _66890 _66889).
Proof. exact (TRANS (@lem5125558 _115015 _115016 _66889 _66890) (@lem5125559 _115015 _115016 _66890 _66889)). Qed.
Lemma lem5125561 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : term4 _115015 _115016 _66889.
Proof. exact (fun _66890 : _115015 -> Prop => @lem5125560 _115015 _115016 _66890 _66889). Qed.
Lemma lem5125562 {_115015 _115016 : Type'} : term5 _115015 _115016.
Proof. exact (fun _66889 : _115016 -> Prop => @lem5125561 _115015 _115016 _66889). Qed.
Lemma lem5125563 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : term6 _115015 _115016 _66889.
Proof. exact (@lem5125562 _115015 _115016 _66889). Qed.
Lemma lem5125564 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : (term6 _115015 _115016 _66889) = (term4 _115015 _115016 _66889).
Proof. exact (eq_refl (term6 _115015 _115016 _66889)). Qed.
Lemma lem5125565 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) : term4 _115015 _115016 _66889.
Proof. exact (EQ_MP (@lem5125564 _115015 _115016 _66889) (@lem5125563 _115015 _115016 _66889)). Qed.
Lemma lem5125566 {_115015 _115016 : Type'} (_66889 : _115016 -> Prop) (_66890 : _115015 -> Prop) : term7 _115015 _115016 _66889 _66890.
Proof. exact (@lem5125565 _115015 _115016 _66889 _66890). Qed.
Lemma lem5125567 {_115015 _115016 : Type'} (_66890 : _115015 -> Prop) (_66889 : _115016 -> Prop) : (term7 _115015 _115016 _66889 _66890) = ((@gt_c _115015 _115016 _66889 _66890) = (@lt_c _115015 _115016 _66890 _66889)).
Proof. exact (eq_refl (term7 _115015 _115016 _66889 _66890)). Qed.
Lemma lem5125568 {_115015 _115016 : Type'} (_66890 : _115015 -> Prop) (_66889 : _115016 -> Prop) : (@gt_c _115015 _115016 _66889 _66890) = (@lt_c _115015 _115016 _66890 _66889).
Proof. exact (EQ_MP (@lem5125567 _115015 _115016 _66890 _66889) (@lem5125566 _115015 _115016 _66889 _66890)). Qed.
Lemma lem5125611 {_115015 _115016 : Type'} (t : _115015 -> Prop) (s : _115016 -> Prop) : (@gt_c _115015 _115016 s t) = (@lt_c _115015 _115016 t s).
Proof. exact (@lem5125568 _115015 _115016 t s). Qed.
Lemma lem5125612 {_115015 _115016 : Type'} (t : _115015 -> Prop) : term8 _115015 _115016 t.
Proof. exact (fun s : _115016 -> Prop => @lem5125611 _115015 _115016 t s). Qed.
Lemma lem5125613 {_115015 _115016 : Type'} : term9 _115015 _115016.
Proof. exact (fun t : _115015 -> Prop => @lem5125612 _115015 _115016 t). Qed.
