Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import RECURSION_CASEWISE_PAIRWISE_term_abbrevs.
Require Import ALL_MEM_spec.
Require Import DISJ_ACI_spec.
Require Import FORALL_PAIR_THM_spec.
Require Import FUN_EQ_THM_spec.
Require Import RECURSION_CASEWISE_spec.
Require Import RIGHT_FORALL_IMP_THM_spec.
Require Import RIGHT_IMP_FORALL_THM_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm1094346_spec.
Require Import thm1094347_spec.
Require Import thm1103191_spec.
Require Import thm1103192_spec.
Require Import thm1103200_spec.
Require Import thm1103201_spec.
Require Import thm1110672_spec.
Require Import thm1110673_spec.
Require Import thm1110681_spec.
Require Import thm1110682_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17500_spec.
Require Import thm17646_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1822_spec.
Require Import thm18392_spec.
Require Import thm1842_spec.
Require Import thm1855_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm48805_spec.
Require Import thm48806_spec.
Require Import thm48811_spec.
Require Import thm48812_spec.
Require Import thm48920_spec.
Require Import thm51128_spec.
Require Import thm51159_spec.
Require Import thm7_spec.
Require Import thm885_spec.
Require Import thm886_spec.
Lemma lem8423345 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) (h1 : (term0 _26777 l P) = (@List.Forall _26777 P l)) : (term0 _26777 l P) = (@List.Forall _26777 P l).
Proof. exact (h1). Qed.
Lemma lem8423346 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) (h1 : (term0 _26777 l P) = (@List.Forall _26777 P l)) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (SYM (@lem8423345 _26777 P l h1)). Qed.
Lemma lem8423347 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) (h1 : (@List.Forall _26777 P l) = (term0 _26777 l P)) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (h1). Qed.
Lemma lem8423348 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) (h1 : (@List.Forall _26777 P l) = (term0 _26777 l P)) : (term0 _26777 l P) = (@List.Forall _26777 P l).
Proof. exact (SYM (@lem8423347 _26777 l P h1)). Qed.
Lemma lem8423349 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : ((term0 _26777 l P) = (@List.Forall _26777 P l)) = ((@List.Forall _26777 P l) = (term0 _26777 l P)).
Proof. exact (prop_ext (fun h1 : (term0 _26777 l P) = (@List.Forall _26777 P l) => @lem8423346 _26777 P l h1) (fun h1 : (@List.Forall _26777 P l) = (term0 _26777 l P) => @lem8423348 _26777 l P h1)). Qed.
Lemma lem8423350 {_26777 : Type'} (P : _26777 -> Prop) : (term1 _26777 P) = (term2 _26777 P).
Proof. exact (fun_ext (fun l : list _26777 => @lem8423349 _26777 l P)). Qed.
Lemma lem8423351 {_26777 : Type'} : (@all (list _26777)) = (@all (list _26777)).
Proof. exact (eq_refl (@all (list _26777))). Qed.
Lemma lem8423352 {_26777 : Type'} (P : _26777 -> Prop) : (term3 _26777 P) = (term4 _26777 P).
Proof. exact (MK_COMB (@lem8423351 _26777) (@lem8423350 _26777 P)). Qed.
Lemma lem8423353 {_26777 : Type'} : (term5 _26777) = (term6 _26777).
Proof. exact (fun_ext (fun P : _26777 -> Prop => @lem8423352 _26777 P)). Qed.
Lemma lem8423354 {_26777 : Type'} : (@all (_26777 -> Prop)) = (@all (_26777 -> Prop)).
Proof. exact (eq_refl (@all (_26777 -> Prop))). Qed.
Lemma lem8423355 {_26777 : Type'} : (term7 _26777) = (term8 _26777).
Proof. exact (MK_COMB (@lem8423354 _26777) (@lem8423353 _26777)). Qed.
Lemma lem8423356 {_26777 : Type'} : term8 _26777.
Proof. exact (EQ_MP (@lem8423355 _26777) (@lem1138070 _26777)). Qed.
Lemma lem8423357 {_26777 : Type'} (P : _26777 -> Prop) : term9 _26777 P.
Proof. exact (@lem8423356 _26777 P). Qed.
Lemma lem8423358 {_26777 : Type'} (P : _26777 -> Prop) : (term9 _26777 P) = (term4 _26777 P).
Proof. exact (eq_refl (term9 _26777 P)). Qed.
Lemma lem8423359 {_26777 : Type'} (P : _26777 -> Prop) : term4 _26777 P.
Proof. exact (EQ_MP (@lem8423358 _26777 P) (@lem8423357 _26777 P)). Qed.
Lemma lem8423360 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) : term10 _26777 P l.
Proof. exact (@lem8423359 _26777 P l). Qed.
Lemma lem8423361 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : (term10 _26777 P l) = ((@List.Forall _26777 P l) = (term0 _26777 l P)).
Proof. exact (eq_refl (term10 _26777 P l)). Qed.
Lemma lem8423369 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) (h1 : (term0 _26777 l P) = (@List.Forall _26777 P l)) : (term0 _26777 l P) = (@List.Forall _26777 P l).
Proof. exact (h1). Qed.
Lemma lem8423370 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) (h1 : (term0 _26777 l P) = (@List.Forall _26777 P l)) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (SYM (@lem8423369 _26777 P l h1)). Qed.
Lemma lem8423371 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) (h1 : (@List.Forall _26777 P l) = (term0 _26777 l P)) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (h1). Qed.
Lemma lem8423372 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) (h1 : (@List.Forall _26777 P l) = (term0 _26777 l P)) : (term0 _26777 l P) = (@List.Forall _26777 P l).
Proof. exact (SYM (@lem8423371 _26777 l P h1)). Qed.
Lemma lem8423373 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : ((term0 _26777 l P) = (@List.Forall _26777 P l)) = ((@List.Forall _26777 P l) = (term0 _26777 l P)).
Proof. exact (prop_ext (fun h1 : (term0 _26777 l P) = (@List.Forall _26777 P l) => @lem8423370 _26777 P l h1) (fun h1 : (@List.Forall _26777 P l) = (term0 _26777 l P) => @lem8423372 _26777 l P h1)). Qed.
Lemma lem8423374 {_26777 : Type'} (P : _26777 -> Prop) : (term1 _26777 P) = (term2 _26777 P).
Proof. exact (fun_ext (fun l : list _26777 => @lem8423373 _26777 l P)). Qed.
Lemma lem8423375 {_26777 : Type'} : (@all (list _26777)) = (@all (list _26777)).
Proof. exact (eq_refl (@all (list _26777))). Qed.
Lemma lem8423376 {_26777 : Type'} (P : _26777 -> Prop) : (term3 _26777 P) = (term4 _26777 P).
Proof. exact (MK_COMB (@lem8423375 _26777) (@lem8423374 _26777 P)). Qed.
Lemma lem8423377 {_26777 : Type'} : (term5 _26777) = (term6 _26777).
Proof. exact (fun_ext (fun P : _26777 -> Prop => @lem8423376 _26777 P)). Qed.
Lemma lem8423378 {_26777 : Type'} : (@all (_26777 -> Prop)) = (@all (_26777 -> Prop)).
Proof. exact (eq_refl (@all (_26777 -> Prop))). Qed.
Lemma lem8423379 {_26777 : Type'} : (term7 _26777) = (term8 _26777).
Proof. exact (MK_COMB (@lem8423378 _26777) (@lem8423377 _26777)). Qed.
Lemma lem8423380 {_26777 : Type'} : term8 _26777.
Proof. exact (EQ_MP (@lem8423379 _26777) (@lem1138070 _26777)). Qed.
Lemma lem8423381 {_26777 : Type'} (P : _26777 -> Prop) : term9 _26777 P.
Proof. exact (@lem8423380 _26777 P). Qed.
Lemma lem8423382 {_26777 : Type'} (P : _26777 -> Prop) : (term9 _26777 P) = (term4 _26777 P).
Proof. exact (eq_refl (term9 _26777 P)). Qed.
Lemma lem8423383 {_26777 : Type'} (P : _26777 -> Prop) : term4 _26777 P.
Proof. exact (EQ_MP (@lem8423382 _26777 P) (@lem8423381 _26777 P)). Qed.
Lemma lem8423384 {_26777 : Type'} (P : _26777 -> Prop) (l : list _26777) : term10 _26777 P l.
Proof. exact (@lem8423383 _26777 P l). Qed.
Lemma lem8423385 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : (term10 _26777 P l) = ((@List.Forall _26777 P l) = (term0 _26777 l P)).
Proof. exact (eq_refl (term10 _26777 P l)). Qed.
Lemma lem8423387 {A : Type'} (P : Prop) : term11 A P.
Proof. exact (@lem6534 A P). Qed.
Lemma lem8423388 {A : Type'} (P : Prop) : (term11 A P) = (term12 A P).
Proof. exact (eq_refl (term11 A P)). Qed.
Lemma lem8423389 {A : Type'} (P : Prop) : term12 A P.
Proof. exact (EQ_MP (@lem8423388 A P) (@lem8423387 A P)). Qed.
Lemma lem8423390 {A : Type'} (P : Prop) (Q : A -> Prop) : term13 A P Q.
Proof. exact (@lem8423389 A P Q). Qed.
Lemma lem8423391 {A : Type'} (P : Prop) (Q : A -> Prop) : (term13 A P Q) = ((term14 A P Q) = (term15 A P Q)).
Proof. exact (eq_refl (term13 A P Q)). Qed.
Lemma lem8423484 (p : Prop) (q : Prop) (r : Prop) : (term16 p q r) = (term17 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem8423485 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term18 _146801 l P x y) = (term19 _146801 l P x y).
Proof. exact (@lem8423484 (@List.In _146801 x l) (@List.In _146801 y l) (P x y)). Qed.
Lemma lem8423490 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term20 _146801 l P x) = (term21 _146801 l P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8423485 _146801 l P x y)). Qed.
Lemma lem8423491 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423492 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term22 _146801 l P x) = (term23 _146801 l P x).
Proof. exact (MK_COMB (@lem8423491 _146801) (@lem8423490 _146801 l P x)). Qed.
Lemma lem8423494 {A : Type'} (P : Prop) (Q : A -> Prop) : (term14 A P Q) = (term15 A P Q).
Proof. exact (EQ_MP (@lem8423391 A P Q) (@lem8423390 A P Q)). Qed.
Lemma lem8423495 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term14 _146801 P Q) = (term15 _146801 P Q).
Proof. exact (@lem8423494 _146801 P Q). Qed.
Lemma lem8423496 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term24 _146801 l P x) = (term25 _146801 l P x).
Proof. exact (@lem8423495 _146801 (@List.In _146801 x l) (term26 _146801 l P x)). Qed.
Lemma lem8423497 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term27 _146801 l P x y) = (term28 _146801 l P x y).
Proof. exact (eq_refl (term27 _146801 l P x y)). Qed.
Lemma lem8423498 {_146801 : Type'} (x : _146801) (l : list _146801) : (term29 _146801 x l) = (term29 _146801 x l).
Proof. exact (eq_refl (term29 _146801 x l)). Qed.
Lemma lem8423499 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term30 _146801 l P x y) = (term19 _146801 l P x y).
Proof. exact (MK_COMB (@lem8423498 _146801 x l) (@lem8423497 _146801 l P x y)). Qed.
Lemma lem8423500 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term31 _146801 l P x) = (term21 _146801 l P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8423499 _146801 l P x y)). Qed.
Lemma lem8423501 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423502 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term24 _146801 l P x) = (term23 _146801 l P x).
Proof. exact (MK_COMB (@lem8423501 _146801) (@lem8423500 _146801 l P x)). Qed.
Lemma lem8423503 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8423504 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term32 _146801 l P x) = (term33 _146801 l P x).
Proof. exact (MK_COMB (@lem8423503) (@lem8423502 _146801 l P x)). Qed.
Lemma lem8423505 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term27 _146801 l P x y) = (term28 _146801 l P x y).
Proof. exact (eq_refl (term27 _146801 l P x y)). Qed.
Lemma lem8423506 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term34 _146801 l P x) = (term26 _146801 l P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8423505 _146801 l P x y)). Qed.
Lemma lem8423507 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423508 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term35 _146801 l P x) = (term36 _146801 l P x).
Proof. exact (MK_COMB (@lem8423507 _146801) (@lem8423506 _146801 l P x)). Qed.
Lemma lem8423509 {_146801 : Type'} (x : _146801) (l : list _146801) : (term29 _146801 x l) = (term29 _146801 x l).
Proof. exact (eq_refl (term29 _146801 x l)). Qed.
Lemma lem8423510 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term25 _146801 l P x) = (term37 _146801 l P x).
Proof. exact (MK_COMB (@lem8423509 _146801 x l) (@lem8423508 _146801 l P x)). Qed.
Lemma lem8423511 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : ((term24 _146801 l P x) = (term25 _146801 l P x)) = ((term23 _146801 l P x) = (term37 _146801 l P x)).
Proof. exact (MK_COMB (@lem8423504 _146801 l P x) (@lem8423510 _146801 l P x)). Qed.
Lemma lem8423512 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term23 _146801 l P x) = (term37 _146801 l P x).
Proof. exact (EQ_MP (@lem8423511 _146801 l P x) (@lem8423496 _146801 l P x)). Qed.
Lemma lem8423541 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term22 _146801 l P x) = (term37 _146801 l P x).
Proof. exact (TRANS (@lem8423492 _146801 l P x) (@lem8423512 _146801 l P x)). Qed.
Lemma lem8423542 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term38 _146801 l P) = (term39 _146801 l P).
Proof. exact (fun_ext (fun x : _146801 => @lem8423541 _146801 l P x)). Qed.
Lemma lem8423543 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423544 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term40 _146801 l P) = (term41 _146801 l P).
Proof. exact (MK_COMB (@lem8423543 _146801) (@lem8423542 _146801 l P)). Qed.
Lemma lem8423569 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8423570 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term42 _146801 l P) = (term43 _146801 l P).
Proof. exact (MK_COMB (@lem8423569) (@lem8423544 _146801 l P)). Qed.
Lemma lem8423574 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (EQ_MP (@lem8423385 _26777 l P) (@lem8423384 _26777 P l)). Qed.
Lemma lem8423575 {_146801 : Type'} (l : list _146801) (P : _146801 -> Prop) : (@List.Forall _146801 P l) = (term0 _146801 l P).
Proof. exact (@lem8423574 _146801 l P). Qed.
Lemma lem8423576 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term44 _146801 P l) = (term45 _146801 l P).
Proof. exact (@lem8423575 _146801 l (term46 _146801 P)). Qed.
Lemma lem8423588 {A B : Type'} (f : A -> B) (y : A) : (term47 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8423589 {_146801 : Type'} (f : _146801 -> Prop) (y : _146801) : (term48 _146801 f y) = (f y).
Proof. exact (@lem8423588 _146801 Prop f y). Qed.
Lemma lem8423590 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term49 _146801 P x) = (term50 _146801 P x).
Proof. exact (@lem8423589 _146801 (term46 _146801 P) x). Qed.
Lemma lem8423591 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term50 _146801 P x) = (P x x).
Proof. exact (eq_refl (term50 _146801 P x)). Qed.
Lemma lem8423592 {_146801 : Type'} (P : type1402 _146801) : (term51 _146801 P) = (term46 _146801 P).
Proof. exact (fun_ext (fun x : _146801 => @lem8423591 _146801 P x)). Qed.
Lemma lem8423593 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8423594 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term49 _146801 P x) = (term50 _146801 P x).
Proof. exact (MK_COMB (@lem8423592 _146801 P) (@lem8423593 _146801 x)). Qed.
Lemma lem8423595 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8423596 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term52 _146801 P x) = (term53 _146801 P x).
Proof. exact (MK_COMB (@lem8423595) (@lem8423594 _146801 P x)). Qed.
Lemma lem8423597 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term50 _146801 P x) = (P x x).
Proof. exact (eq_refl (term50 _146801 P x)). Qed.
Lemma lem8423598 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : ((term49 _146801 P x) = (term50 _146801 P x)) = ((term50 _146801 P x) = (P x x)).
Proof. exact (MK_COMB (@lem8423596 _146801 P x) (@lem8423597 _146801 P x)). Qed.
Lemma lem8423599 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term50 _146801 P x) = (P x x).
Proof. exact (EQ_MP (@lem8423598 _146801 P x) (@lem8423590 _146801 P x)). Qed.
Lemma lem8423600 {_146801 : Type'} (x : _146801) (l : list _146801) : (term29 _146801 x l) = (term29 _146801 x l).
Proof. exact (eq_refl (term29 _146801 x l)). Qed.
Lemma lem8423601 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) (x : _146801) : (term54 _146801 l P x) = (term55 _146801 l P x).
Proof. exact (MK_COMB (@lem8423600 _146801 x l) (@lem8423599 _146801 P x)). Qed.
Lemma lem8423604 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term56 _146801 l P) = (term57 _146801 l P).
Proof. exact (fun_ext (fun x : _146801 => @lem8423601 _146801 l P x)). Qed.
Lemma lem8423605 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423606 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term45 _146801 l P) = (term58 _146801 l P).
Proof. exact (MK_COMB (@lem8423605 _146801) (@lem8423604 _146801 l P)). Qed.
Lemma lem8423631 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term44 _146801 P l) = (term58 _146801 l P).
Proof. exact (TRANS (@lem8423576 _146801 l P) (@lem8423606 _146801 l P)). Qed.
Lemma lem8423632 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8423633 {_146801 : Type'} (l : list _146801) (P : type1402 _146801) : (term59 _146801 P l) = (term60 _146801 l P).
Proof. exact (MK_COMB (@lem8423632) (@lem8423631 _146801 l P)). Qed.
Lemma lem8423634 {_146801 : Type'} (P : type1402 _146801) (l : list _146801) : (@List.ForallOrdPairs _146801 P l) = (@List.ForallOrdPairs _146801 P l).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P l)). Qed.
Lemma lem8423635 {_146801 : Type'} (P : type1402 _146801) (l : list _146801) : (term61 _146801 P l) = (term62 _146801 P l).
Proof. exact (MK_COMB (@lem8423633 _146801 l P) (@lem8423634 _146801 P l)). Qed.
Lemma lem8423638 {_146801 : Type'} (P : type1402 _146801) (l : list _146801) : ((term40 _146801 l P) = (term61 _146801 P l)) = ((term41 _146801 l P) = (term62 _146801 P l)).
Proof. exact (MK_COMB (@lem8423570 _146801 l P) (@lem8423635 _146801 P l)). Qed.
Lemma lem8423641 {_146801 : Type'} (P : type1402 _146801) : (term63 _146801 P) = (term64 _146801 P).
Proof. exact (fun_ext (fun l : list _146801 => @lem8423638 _146801 P l)). Qed.
Lemma lem8423642 {_146801 : Type'} : (@all (list _146801)) = (@all (list _146801)).
Proof. exact (eq_refl (@all (list _146801))). Qed.
Lemma lem8423643 {_146801 : Type'} (P : type1402 _146801) : (term65 _146801 P) = (term66 _146801 P).
Proof. exact (MK_COMB (@lem8423642 _146801) (@lem8423641 _146801 P)). Qed.
Lemma lem8423648 {_146801 : Type'} (P : type1402 _146801) : (term67 _146801 P) = (term67 _146801 P).
Proof. exact (eq_refl (term67 _146801 P)). Qed.
Lemma lem8423649 {_146801 : Type'} (P : type1402 _146801) : (term68 _146801 P) = (term69 _146801 P).
Proof. exact (MK_COMB (@lem8423648 _146801 P) (@lem8423643 _146801 P)). Qed.
Lemma lem8423652 {_146801 : Type'} : (term70 _146801) = (term71 _146801).
Proof. exact (fun_ext (fun P : type1402 _146801 => @lem8423649 _146801 P)). Qed.
Lemma lem8423653 {_146801 : Type'} : (@all (_146801 -> _146801 -> Prop)) = (@all (_146801 -> _146801 -> Prop)).
Proof. exact (eq_refl (@all (_146801 -> _146801 -> Prop))). Qed.
Lemma lem8423654 {_146801 : Type'} : (term72 _146801) = (term73 _146801).
Proof. exact (MK_COMB (@lem8423653 _146801) (@lem8423652 _146801)). Qed.
Lemma lem8423679 {_146801 : Type'} : (term73 _146801) = (term72 _146801).
Proof. exact (SYM (@lem8423654 _146801)). Qed.
Lemma lem8423680 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term74 _146801 P.
Proof. exact (h1). Qed.
Lemma lem8423682 {A : Type'} (P : type1143 A) : term75 A P.
Proof. exact (EQ_MP (@lem1094347 A P) (@lem1094346 A P)). Qed.
Lemma lem8423683 {_146801 : Type'} (P : type1143 _146801) : term75 _146801 P.
Proof. exact (@lem8423682 _146801 P). Qed.
Lemma lem8423684 {_146801 : Type'} (P : type1402 _146801) : term76 _146801 P.
Proof. exact (@lem8423683 _146801 (term64 _146801 P)). Qed.
Lemma lem8423685 {_146801 : Type'} (P : type1402 _146801) : (term77 _146801 P) = ((term78 _146801 P) = (term79 _146801 P)).
Proof. exact (eq_refl (term77 _146801 P)). Qed.
Lemma lem8423686 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8423687 {_146801 : Type'} (P : type1402 _146801) : (term80 _146801 P) = (term81 _146801 P).
Proof. exact (MK_COMB (@lem8423686) (@lem8423685 _146801 P)). Qed.
Lemma lem8423688 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term82 _146801 P t) = ((term41 _146801 t P) = (term62 _146801 P t)).
Proof. exact (eq_refl (term82 _146801 P t)). Qed.
Lemma lem8423689 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423690 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term83 _146801 P t) = (term84 _146801 P t).
Proof. exact (MK_COMB (@lem8423689) (@lem8423688 _146801 P t)). Qed.
Lemma lem8423691 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (t : list _146801) : (term85 _146801 P h t) = ((term86 _146801 h t P) = (term87 _146801 P h t)).
Proof. exact (eq_refl (term85 _146801 P h t)). Qed.
Lemma lem8423692 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (t : list _146801) : (term88 _146801 P h t) = (term89 _146801 P h t).
Proof. exact (MK_COMB (@lem8423690 _146801 P t) (@lem8423691 _146801 P h t)). Qed.
Lemma lem8423693 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term90 _146801 P h) = (term91 _146801 P h).
Proof. exact (fun_ext (fun t : list _146801 => @lem8423692 _146801 P h t)). Qed.
Lemma lem8423694 {_146801 : Type'} : (@all (list _146801)) = (@all (list _146801)).
Proof. exact (eq_refl (@all (list _146801))). Qed.
Lemma lem8423695 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term92 _146801 P h) = (term93 _146801 P h).
Proof. exact (MK_COMB (@lem8423694 _146801) (@lem8423693 _146801 P h)). Qed.
Lemma lem8423696 {_146801 : Type'} (P : type1402 _146801) : (term94 _146801 P) = (term95 _146801 P).
Proof. exact (fun_ext (fun h : _146801 => @lem8423695 _146801 P h)). Qed.
Lemma lem8423697 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423698 {_146801 : Type'} (P : type1402 _146801) : (term96 _146801 P) = (term97 _146801 P).
Proof. exact (MK_COMB (@lem8423697 _146801) (@lem8423696 _146801 P)). Qed.
Lemma lem8423699 {_146801 : Type'} (P : type1402 _146801) : (term98 _146801 P) = (term99 _146801 P).
Proof. exact (MK_COMB (@lem8423687 _146801 P) (@lem8423698 _146801 P)). Qed.
Lemma lem8423700 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423701 {_146801 : Type'} (P : type1402 _146801) : (term100 _146801 P) = (term101 _146801 P).
Proof. exact (MK_COMB (@lem8423700) (@lem8423699 _146801 P)). Qed.
Lemma lem8423702 {_146801 : Type'} (P : type1402 _146801) (l : list _146801) : (term82 _146801 P l) = ((term41 _146801 l P) = (term62 _146801 P l)).
Proof. exact (eq_refl (term82 _146801 P l)). Qed.
Lemma lem8423703 {_146801 : Type'} (P : type1402 _146801) : (term102 _146801 P) = (term64 _146801 P).
Proof. exact (fun_ext (fun l : list _146801 => @lem8423702 _146801 P l)). Qed.
Lemma lem8423704 {_146801 : Type'} : (@all (list _146801)) = (@all (list _146801)).
Proof. exact (eq_refl (@all (list _146801))). Qed.
Lemma lem8423705 {_146801 : Type'} (P : type1402 _146801) : (term103 _146801 P) = (term66 _146801 P).
Proof. exact (MK_COMB (@lem8423704 _146801) (@lem8423703 _146801 P)). Qed.
Lemma lem8423706 {_146801 : Type'} (P : type1402 _146801) : (term76 _146801 P) = (term104 _146801 P).
Proof. exact (MK_COMB (@lem8423701 _146801 P) (@lem8423705 _146801 P)). Qed.
Lemma lem8423707 {_146801 : Type'} (P : type1402 _146801) : term104 _146801 P.
Proof. exact (EQ_MP (@lem8423706 _146801 P) (@lem8423684 _146801 P)). Qed.
Lemma lem8423708 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : (term41 _146801 t P) = (term62 _146801 P t)) : (term41 _146801 t P) = (term62 _146801 P t).
Proof. exact (h1). Qed.
Lemma lem8423718 {_25376 : Type'} (x : _25376) : (@List.In _25376 x (@nil _25376)) = False.
Proof. exact (EQ_MP (@lem1103192 _25376 x) (@lem1103191 _25376 x)). Qed.
Lemma lem8423719 {_146801 : Type'} (x : _146801) : (@List.In _146801 x (@nil _146801)) = False.
Proof. exact (@lem8423718 _146801 x). Qed.
Lemma lem8423720 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423721 {_146801 : Type'} (x : _146801) : (term105 _146801 x) = (imp False).
Proof. exact (MK_COMB (@lem8423720) (@lem8423719 _146801 x)). Qed.
Lemma lem8423729 {_25376 : Type'} (x : _25376) : (@List.In _25376 x (@nil _25376)) = False.
Proof. exact (EQ_MP (@lem1103192 _25376 x) (@lem1103191 _25376 x)). Qed.
Lemma lem8423730 {_146801 : Type'} (x : _146801) : (@List.In _146801 x (@nil _146801)) = False.
Proof. exact (@lem8423729 _146801 x). Qed.
Lemma lem8423731 {_146801 : Type'} (y : _146801) : (@List.In _146801 y (@nil _146801)) = False.
Proof. exact (@lem8423730 _146801 y). Qed.
Lemma lem8423732 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423733 {_146801 : Type'} (y : _146801) : (term105 _146801 y) = (imp False).
Proof. exact (MK_COMB (@lem8423732) (@lem8423731 _146801 y)). Qed.
Lemma lem8423734 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (P x y).
Proof. exact (eq_refl (P x y)). Qed.
Lemma lem8423735 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term106 _146801 P x y) = (term107 _146801 P x y).
Proof. exact (MK_COMB (@lem8423733 _146801 y) (@lem8423734 _146801 P x y)). Qed.
Lemma lem8423737 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8423738 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term107 _146801 P x y) = True.
Proof. exact (@lem8423737 (P x y)). Qed.
Lemma lem8423739 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term106 _146801 P x y) = True.
Proof. exact (TRANS (@lem8423735 _146801 P x y) (@lem8423738 _146801 P x y)). Qed.
Lemma lem8423740 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term108 _146801 P x) = (term109 _146801).
Proof. exact (fun_ext (fun y : _146801 => @lem8423739 _146801 P x y)). Qed.
Lemma lem8423741 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423742 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term110 _146801 P x) = (term111 _146801).
Proof. exact (MK_COMB (@lem8423741 _146801) (@lem8423740 _146801 P x)). Qed.
Lemma lem8423744 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8423745 {_146801 : Type'} (t : Prop) : (term112 _146801 t) = t.
Proof. exact (@lem8423744 _146801 t). Qed.
Lemma lem8423746 {_146801 : Type'} : (term111 _146801) = True.
Proof. exact (@lem8423745 _146801 True). Qed.
Lemma lem8423747 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term110 _146801 P x) = True.
Proof. exact (TRANS (@lem8423742 _146801 P x) (@lem8423746 _146801)). Qed.
Lemma lem8423748 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term113 _146801 P x) = (False -> True).
Proof. exact (MK_COMB (@lem8423721 _146801 x) (@lem8423747 _146801 P x)). Qed.
Lemma lem8423750 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8423751 : (False -> True) = True.
Proof. exact (@lem8423750 True). Qed.
Lemma lem8423752 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term113 _146801 P x) = True.
Proof. exact (TRANS (@lem8423748 _146801 P x) (@lem8423751)). Qed.
Lemma lem8423753 {_146801 : Type'} (P : type1402 _146801) : (term114 _146801 P) = (term109 _146801).
Proof. exact (fun_ext (fun x : _146801 => @lem8423752 _146801 P x)). Qed.
Lemma lem8423754 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423755 {_146801 : Type'} (P : type1402 _146801) : (term78 _146801 P) = (term111 _146801).
Proof. exact (MK_COMB (@lem8423754 _146801) (@lem8423753 _146801 P)). Qed.
Lemma lem8423757 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8423758 {_146801 : Type'} (t : Prop) : (term112 _146801 t) = t.
Proof. exact (@lem8423757 _146801 t). Qed.
Lemma lem8423759 {_146801 : Type'} : (term111 _146801) = True.
Proof. exact (@lem8423758 _146801 True). Qed.
Lemma lem8423760 {_146801 : Type'} (P : type1402 _146801) : (term78 _146801 P) = True.
Proof. exact (TRANS (@lem8423755 _146801 P) (@lem8423759 _146801)). Qed.
Lemma lem8423761 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8423762 {_146801 : Type'} (P : type1402 _146801) : (term115 _146801 P) = (@eq Prop True).
Proof. exact (MK_COMB (@lem8423761) (@lem8423760 _146801 P)). Qed.
Lemma lem8423772 {_25376 : Type'} (x : _25376) : (@List.In _25376 x (@nil _25376)) = False.
Proof. exact (EQ_MP (@lem1103192 _25376 x) (@lem1103191 _25376 x)). Qed.
Lemma lem8423773 {_146801 : Type'} (x : _146801) : (@List.In _146801 x (@nil _146801)) = False.
Proof. exact (@lem8423772 _146801 x). Qed.
Lemma lem8423774 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423775 {_146801 : Type'} (x : _146801) : (term105 _146801 x) = (imp False).
Proof. exact (MK_COMB (@lem8423774) (@lem8423773 _146801 x)). Qed.
Lemma lem8423776 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (P x x).
Proof. exact (eq_refl (P x x)). Qed.
Lemma lem8423777 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term116 _146801 P x) = (term117 _146801 P x).
Proof. exact (MK_COMB (@lem8423775 _146801 x) (@lem8423776 _146801 P x)). Qed.
Lemma lem8423779 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8423780 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term117 _146801 P x) = True.
Proof. exact (@lem8423779 (P x x)). Qed.
Lemma lem8423781 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term116 _146801 P x) = True.
Proof. exact (TRANS (@lem8423777 _146801 P x) (@lem8423780 _146801 P x)). Qed.
Lemma lem8423782 {_146801 : Type'} (P : type1402 _146801) : (term118 _146801 P) = (term109 _146801).
Proof. exact (fun_ext (fun x : _146801 => @lem8423781 _146801 P x)). Qed.
Lemma lem8423783 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423784 {_146801 : Type'} (P : type1402 _146801) : (term119 _146801 P) = (term111 _146801).
Proof. exact (MK_COMB (@lem8423783 _146801) (@lem8423782 _146801 P)). Qed.
Lemma lem8423786 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8423787 {_146801 : Type'} (t : Prop) : (term112 _146801 t) = t.
Proof. exact (@lem8423786 _146801 t). Qed.
Lemma lem8423788 {_146801 : Type'} : (term111 _146801) = True.
Proof. exact (@lem8423787 _146801 True). Qed.
Lemma lem8423789 {_146801 : Type'} (P : type1402 _146801) : (term119 _146801 P) = True.
Proof. exact (TRANS (@lem8423784 _146801 P) (@lem8423788 _146801)). Qed.
Lemma lem8423790 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8423791 {_146801 : Type'} (P : type1402 _146801) : (term120 _146801 P) = (and True).
Proof. exact (MK_COMB (@lem8423790) (@lem8423789 _146801 P)). Qed.
Lemma lem8423793 {A : Type'} (r : type1402 A) : (@List.ForallOrdPairs A r (@nil A)) = True.
Proof. exact (EQ_MP (@lem1110673 A r) (@lem1110672 A r)). Qed.
Lemma lem8423794 {_146801 : Type'} (r : type1402 _146801) : (@List.ForallOrdPairs _146801 r (@nil _146801)) = True.
Proof. exact (@lem8423793 _146801 r). Qed.
Lemma lem8423795 {_146801 : Type'} (P : type1402 _146801) : (@List.ForallOrdPairs _146801 P (@nil _146801)) = True.
Proof. exact (@lem8423794 _146801 P). Qed.
Lemma lem8423796 {_146801 : Type'} (P : type1402 _146801) : (term79 _146801 P) = (True /\ True).
Proof. exact (MK_COMB (@lem8423791 _146801 P) (@lem8423795 _146801 P)). Qed.
Lemma lem8423798 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8423799 : (True /\ True) = True.
Proof. exact (@lem8423798 True). Qed.
Lemma lem8423800 {_146801 : Type'} (P : type1402 _146801) : (term79 _146801 P) = True.
Proof. exact (TRANS (@lem8423796 _146801 P) (@lem8423799)). Qed.
Lemma lem8423801 {_146801 : Type'} (P : type1402 _146801) : ((term78 _146801 P) = (term79 _146801 P)) = (True = True).
Proof. exact (MK_COMB (@lem8423762 _146801 P) (@lem8423800 _146801 P)). Qed.
Lemma lem8423803 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem8423804 : (True = True) = True.
Proof. exact (@lem8423803 True). Qed.
Lemma lem8423805 {_146801 : Type'} (P : type1402 _146801) : ((term78 _146801 P) = (term79 _146801 P)) = True.
Proof. exact (TRANS (@lem8423801 _146801 P) (@lem8423804)). Qed.
Lemma lem8423806 {_146801 : Type'} (P : type1402 _146801) : True = ((term78 _146801 P) = (term79 _146801 P)).
Proof. exact (SYM (@lem8423805 _146801 P)). Qed.
Lemma lem8423807 {_146801 : Type'} (P : type1402 _146801) : (term78 _146801 P) = (term79 _146801 P).
Proof. exact (EQ_MP (@lem8423806 _146801 P) (@lem0)). Qed.
Lemma lem8423817 {_25376 : Type'} (h : _25376) (x : _25376) (t : list _25376) : (term121 _25376 x h t) = (term122 _25376 h x t).
Proof. exact (EQ_MP (@lem1103201 _25376 h x t) (@lem1103200 _25376 h x t)). Qed.
Lemma lem8423818 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term121 _146801 x h t) = (term122 _146801 h x t).
Proof. exact (@lem8423817 _146801 h x t). Qed.
Lemma lem8423823 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423824 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term123 _146801 x h t) = (term124 _146801 h x t).
Proof. exact (MK_COMB (@lem8423823) (@lem8423818 _146801 h x t)). Qed.
Lemma lem8423832 {_25376 : Type'} (h : _25376) (x : _25376) (t : list _25376) : (term121 _25376 x h t) = (term122 _25376 h x t).
Proof. exact (EQ_MP (@lem1103201 _25376 h x t) (@lem1103200 _25376 h x t)). Qed.
Lemma lem8423833 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term121 _146801 x h t) = (term122 _146801 h x t).
Proof. exact (@lem8423832 _146801 h x t). Qed.
Lemma lem8423834 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term121 _146801 y h t) = (term122 _146801 h y t).
Proof. exact (@lem8423833 _146801 h y t). Qed.
Lemma lem8423839 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423840 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term123 _146801 y h t) = (term124 _146801 h y t).
Proof. exact (MK_COMB (@lem8423839) (@lem8423834 _146801 h y t)). Qed.
Lemma lem8423841 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (P x y).
Proof. exact (eq_refl (P x y)). Qed.
Lemma lem8423842 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term125 _146801 h t P x y) = (term126 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8423840 _146801 h y t) (@lem8423841 _146801 P x y)). Qed.
Lemma lem8423845 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term127 _146801 h t P x) = (term128 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8423842 _146801 h t P x y)). Qed.
Lemma lem8423846 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423847 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term129 _146801 h t P x) = (term130 _146801 h t P x).
Proof. exact (MK_COMB (@lem8423846 _146801) (@lem8423845 _146801 h t P x)). Qed.
Lemma lem8423852 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term131 _146801 h t P x) = (term132 _146801 h t P x).
Proof. exact (MK_COMB (@lem8423824 _146801 h x t) (@lem8423847 _146801 h t P x)). Qed.
Lemma lem8423855 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term133 _146801 h t P) = (term134 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8423852 _146801 h t P x)). Qed.
Lemma lem8423856 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423857 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term86 _146801 h t P) = (term135 _146801 h t P).
Proof. exact (MK_COMB (@lem8423856 _146801) (@lem8423855 _146801 h t P)). Qed.
Lemma lem8423862 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8423863 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term136 _146801 h t P) = (term137 _146801 h t P).
Proof. exact (MK_COMB (@lem8423862) (@lem8423857 _146801 h t P)). Qed.
Lemma lem8423873 {_25376 : Type'} (h : _25376) (x : _25376) (t : list _25376) : (term121 _25376 x h t) = (term122 _25376 h x t).
Proof. exact (EQ_MP (@lem1103201 _25376 h x t) (@lem1103200 _25376 h x t)). Qed.
Lemma lem8423874 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term121 _146801 x h t) = (term122 _146801 h x t).
Proof. exact (@lem8423873 _146801 h x t). Qed.
Lemma lem8423879 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8423880 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term123 _146801 x h t) = (term124 _146801 h x t).
Proof. exact (MK_COMB (@lem8423879) (@lem8423874 _146801 h x t)). Qed.
Lemma lem8423881 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (P x x).
Proof. exact (eq_refl (P x x)). Qed.
Lemma lem8423882 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term138 _146801 h t P x) = (term139 _146801 h t P x).
Proof. exact (MK_COMB (@lem8423880 _146801 h x t) (@lem8423881 _146801 P x)). Qed.
Lemma lem8423885 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term140 _146801 h t P) = (term141 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8423882 _146801 h t P x)). Qed.
Lemma lem8423886 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8423887 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term142 _146801 h t P) = (term143 _146801 h t P).
Proof. exact (MK_COMB (@lem8423886 _146801) (@lem8423885 _146801 h t P)). Qed.
Lemma lem8423892 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8423893 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term144 _146801 h t P) = (term145 _146801 h t P).
Proof. exact (MK_COMB (@lem8423892) (@lem8423887 _146801 h t P)). Qed.
Lemma lem8423895 {A : Type'} (h : A) (r : type1402 A) (t : list A) : (term146 A r h t) = (term147 A h r t).
Proof. exact (EQ_MP (@lem1110682 A h r t) (@lem1110681 A h r t)). Qed.
Lemma lem8423896 {_146801 : Type'} (h : _146801) (r : type1402 _146801) (t : list _146801) : (term146 _146801 r h t) = (term147 _146801 h r t).
Proof. exact (@lem8423895 _146801 h r t). Qed.
Lemma lem8423897 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term146 _146801 P h t) = (term147 _146801 h P t).
Proof. exact (@lem8423896 _146801 h P t). Qed.
Lemma lem8423901 {_26777 : Type'} (l : list _26777) (P : _26777 -> Prop) : (@List.Forall _26777 P l) = (term0 _26777 l P).
Proof. exact (EQ_MP (@lem8423361 _26777 l P) (@lem8423360 _26777 P l)). Qed.
Lemma lem8423902 {_146801 : Type'} (l : list _146801) (P : _146801 -> Prop) : (@List.Forall _146801 P l) = (term0 _146801 l P).
Proof. exact (@lem8423901 _146801 l P). Qed.
Lemma lem8423903 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term148 _146801 P h t) = (term36 _146801 t P h).
Proof. exact (@lem8423902 _146801 t (P h)). Qed.
Lemma lem8423910 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8423911 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term149 _146801 P h t) = (term150 _146801 t P h).
Proof. exact (MK_COMB (@lem8423910) (@lem8423903 _146801 t P h)). Qed.
Lemma lem8423912 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8423913 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term147 _146801 h P t) = (term151 _146801 h P t).
Proof. exact (MK_COMB (@lem8423911 _146801 t P h) (@lem8423912 _146801 P t)). Qed.
Lemma lem8423916 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term146 _146801 P h t) = (term151 _146801 h P t).
Proof. exact (TRANS (@lem8423897 _146801 h P t) (@lem8423913 _146801 h P t)). Qed.
Lemma lem8423917 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term87 _146801 P h t) = (term152 _146801 h P t).
Proof. exact (MK_COMB (@lem8423893 _146801 h t P) (@lem8423916 _146801 h P t)). Qed.
Lemma lem8423920 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term86 _146801 h t P) = (term87 _146801 P h t)) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (MK_COMB (@lem8423863 _146801 h t P) (@lem8423917 _146801 h P t)). Qed.
Lemma lem8423923 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (t : list _146801) : ((term135 _146801 h t P) = (term152 _146801 h P t)) = ((term86 _146801 h t P) = (term87 _146801 P h t)).
Proof. exact (SYM (@lem8423920 _146801 h P t)). Qed.
Lemma lem8423925 (p : Prop) : p = (term153 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8423926 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term135 _146801 h t P) = (term152 _146801 h P t)) = (term154 _146801 h P t).
Proof. exact (@lem8423925 ((term135 _146801 h t P) = (term152 _146801 h P t))). Qed.
Lemma lem8423927 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term154 _146801 h P t) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (SYM (@lem8423926 _146801 h P t)). Qed.
Lemma lem8423928 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term155 _146801 h P t) : term155 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8423931 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term156 _146801 h P t) : term156 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8423932 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term157 _146801 h P t.
Proof. exact (fun h0 : term156 _146801 h P t => @lem8423931 _146801 h P t h0). Qed.
Lemma lem8423933 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term157 _146801 h P t) : term157 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8423934 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term156 _146801 h P t) : term156 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8423935 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term156 _146801 h P t) (h2 : term157 _146801 h P t) : term156 _146801 h P t.
Proof. exact (@lem8423933 _146801 h P t h2 (@lem8423934 _146801 h P t h1)). Qed.
Lemma lem8423936 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term156 _146801 h P t) : term158 _146801 h P t.
Proof. exact (fun h0 : term157 _146801 h P t => @lem8423935 _146801 h P t h1 h0). Qed.
Lemma lem8423937 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term157 _146801 h P t) : term157 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8423938 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term156 _146801 h P t) (h2 : term157 _146801 h P t) : term156 _146801 h P t.
Proof. exact (@lem8423936 _146801 h P t h1 (@lem8423937 _146801 h P t h2)). Qed.
Lemma lem8423939 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term157 _146801 h P t) : term157 _146801 h P t.
Proof. exact (fun h0 : term156 _146801 h P t => @lem8423938 _146801 h P t h0 h1). Qed.
Lemma lem8423940 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term159 _146801 h P t.
Proof. exact (fun h0 : term157 _146801 h P t => @lem8423939 _146801 h P t h0). Qed.
Lemma lem8423943 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term157 _146801 h P t.
Proof. exact (@lem8423940 _146801 h P t (@lem8423932 _146801 h P t)). Qed.
Lemma lem8423944 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term157 _146801 h P t.
Proof. exact (@lem8423943 _146801 h P t). Qed.
Lemma lem8423992 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8423993 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term154 _146801 h P t) = (term160 _146801 h P t).
Proof. exact (@lem8423992 (term155 _146801 h P t)). Qed.
Lemma lem8423995 (t : Prop) : (term161 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8423996 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term160 _146801 h P t) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (@lem8423995 ((term135 _146801 h t P) = (term152 _146801 h P t))). Qed.
Lemma lem8423997 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term154 _146801 h P t) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (TRANS (@lem8423993 _146801 h P t) (@lem8423996 _146801 h P t)). Qed.
Lemma lem8424032 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term84 _146801 P t) = (term84 _146801 P t).
Proof. exact (eq_refl (term84 _146801 P t)). Qed.
Lemma lem8424033 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term162 _146801 h P t) = (term163 _146801 h P t).
Proof. exact (MK_COMB (@lem8424032 _146801 P t) (@lem8423997 _146801 h P t)). Qed.
Lemma lem8424036 {_146801 : Type'} (P : type1402 _146801) : (term67 _146801 P) = (term67 _146801 P).
Proof. exact (eq_refl (term67 _146801 P)). Qed.
Lemma lem8424037 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term156 _146801 h P t) = (term164 _146801 h P t).
Proof. exact (MK_COMB (@lem8424036 _146801 P) (@lem8424033 _146801 h P t)). Qed.
Lemma lem8424040 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term165 _146801 P t) = (term166 _146801 P t).
Proof. exact (fun_ext (fun h : _146801 => @lem8424037 _146801 h P t)). Qed.
Lemma lem8424041 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424042 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term167 _146801 P t) = (term168 _146801 P t).
Proof. exact (MK_COMB (@lem8424041 _146801) (@lem8424040 _146801 P t)). Qed.
Lemma lem8424047 {_146801 : Type'} (t : list _146801) : (term169 _146801 t) = (term170 _146801 t).
Proof. exact (fun_ext (fun P : type1402 _146801 => @lem8424042 _146801 P t)). Qed.
Lemma lem8424048 {_146801 : Type'} : (@all (_146801 -> _146801 -> Prop)) = (@all (_146801 -> _146801 -> Prop)).
Proof. exact (eq_refl (@all (_146801 -> _146801 -> Prop))). Qed.
Lemma lem8424049 {_146801 : Type'} (t : list _146801) : (term171 _146801 t) = (term172 _146801 t).
Proof. exact (MK_COMB (@lem8424048 _146801) (@lem8424047 _146801 t)). Qed.
Lemma lem8424054 {_146801 : Type'} : (term173 _146801) = (term174 _146801).
Proof. exact (fun_ext (fun t : list _146801 => @lem8424049 _146801 t)). Qed.
Lemma lem8424055 {_146801 : Type'} : (@all (list _146801)) = (@all (list _146801)).
Proof. exact (eq_refl (@all (list _146801))). Qed.
Lemma lem8424064 {_146801 : Type'} : (term175 _146801) = (term176 _146801).
Proof. exact (MK_COMB (@lem8424055 _146801) (@lem8424054 _146801)). Qed.
Lemma lem8424065 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8424070 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term28 _146801 t P h x) = (term28 _146801 t P h x).
Proof. exact (eq_refl (term28 _146801 t P h x)). Qed.
Lemma lem8424071 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term26 _146801 t P h) = (term26 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8424070 _146801 t P h x)). Qed.
Lemma lem8424072 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424073 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term36 _146801 t P h) = (term36 _146801 t P h).
Proof. exact (MK_COMB (@lem8424072 _146801) (@lem8424071 _146801 t P h)). Qed.
Lemma lem8424074 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424075 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term150 _146801 t P h) = (term150 _146801 t P h).
Proof. exact (MK_COMB (@lem8424074) (@lem8424073 _146801 t P h)). Qed.
Lemma lem8424076 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term151 _146801 h P t) = (term151 _146801 h P t).
Proof. exact (MK_COMB (@lem8424075 _146801 t P h) (@lem8424065 _146801 P t)). Qed.
Lemma lem8424085 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term139 _146801 h t P x) = (term139 _146801 h t P x).
Proof. exact (eq_refl (term139 _146801 h t P x)). Qed.
Lemma lem8424086 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term141 _146801 h t P) = (term141 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424085 _146801 h t P x)). Qed.
Lemma lem8424087 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424088 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term143 _146801 h t P) = (term143 _146801 h t P).
Proof. exact (MK_COMB (@lem8424087 _146801) (@lem8424086 _146801 h t P)). Qed.
Lemma lem8424089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424090 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term145 _146801 h t P) = (term145 _146801 h t P).
Proof. exact (MK_COMB (@lem8424089) (@lem8424088 _146801 h t P)). Qed.
Lemma lem8424091 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term152 _146801 h P t) = (term152 _146801 h P t).
Proof. exact (MK_COMB (@lem8424090 _146801 h t P) (@lem8424076 _146801 h P t)). Qed.
Lemma lem8424100 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term126 _146801 h t P x y) = (term126 _146801 h t P x y).
Proof. exact (eq_refl (term126 _146801 h t P x y)). Qed.
Lemma lem8424101 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term128 _146801 h t P x) = (term128 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424100 _146801 h t P x y)). Qed.
Lemma lem8424102 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424103 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term130 _146801 h t P x) = (term130 _146801 h t P x).
Proof. exact (MK_COMB (@lem8424102 _146801) (@lem8424101 _146801 h t P x)). Qed.
Lemma lem8424110 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term124 _146801 h x t) = (term124 _146801 h x t).
Proof. exact (eq_refl (term124 _146801 h x t)). Qed.
Lemma lem8424111 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term132 _146801 h t P x) = (term132 _146801 h t P x).
Proof. exact (MK_COMB (@lem8424110 _146801 h x t) (@lem8424103 _146801 h t P x)). Qed.
Lemma lem8424112 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term134 _146801 h t P) = (term134 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424111 _146801 h t P x)). Qed.
Lemma lem8424113 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424114 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term135 _146801 h t P) = (term135 _146801 h t P).
Proof. exact (MK_COMB (@lem8424113 _146801) (@lem8424112 _146801 h t P)). Qed.
Lemma lem8424115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424116 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term137 _146801 h t P) = (term137 _146801 h t P).
Proof. exact (MK_COMB (@lem8424115) (@lem8424114 _146801 h t P)). Qed.
Lemma lem8424117 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term135 _146801 h t P) = (term152 _146801 h P t)) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (MK_COMB (@lem8424116 _146801 h t P) (@lem8424091 _146801 h P t)). Qed.
Lemma lem8424118 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8424123 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term55 _146801 t P x) = (term55 _146801 t P x).
Proof. exact (eq_refl (term55 _146801 t P x)). Qed.
Lemma lem8424124 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term57 _146801 t P) = (term57 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424123 _146801 t P x)). Qed.
Lemma lem8424125 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424126 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term58 _146801 t P) = (term58 _146801 t P).
Proof. exact (MK_COMB (@lem8424125 _146801) (@lem8424124 _146801 t P)). Qed.
Lemma lem8424127 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424128 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term60 _146801 t P) = (term60 _146801 t P).
Proof. exact (MK_COMB (@lem8424127) (@lem8424126 _146801 t P)). Qed.
Lemma lem8424129 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term62 _146801 P t) = (term62 _146801 P t).
Proof. exact (MK_COMB (@lem8424128 _146801 t P) (@lem8424118 _146801 P t)). Qed.
Lemma lem8424134 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term28 _146801 t P x y) = (term28 _146801 t P x y).
Proof. exact (eq_refl (term28 _146801 t P x y)). Qed.
Lemma lem8424135 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term26 _146801 t P x) = (term26 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424134 _146801 t P x y)). Qed.
Lemma lem8424136 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424137 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term36 _146801 t P x) = (term36 _146801 t P x).
Proof. exact (MK_COMB (@lem8424136 _146801) (@lem8424135 _146801 t P x)). Qed.
Lemma lem8424140 {_146801 : Type'} (x : _146801) (t : list _146801) : (term29 _146801 x t) = (term29 _146801 x t).
Proof. exact (eq_refl (term29 _146801 x t)). Qed.
Lemma lem8424141 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term37 _146801 t P x) = (term37 _146801 t P x).
Proof. exact (MK_COMB (@lem8424140 _146801 x t) (@lem8424137 _146801 t P x)). Qed.
Lemma lem8424142 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term39 _146801 t P) = (term39 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424141 _146801 t P x)). Qed.
Lemma lem8424143 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424144 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term41 _146801 t P) = (term41 _146801 t P).
Proof. exact (MK_COMB (@lem8424143 _146801) (@lem8424142 _146801 t P)). Qed.
Lemma lem8424145 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424146 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term43 _146801 t P) = (term43 _146801 t P).
Proof. exact (MK_COMB (@lem8424145) (@lem8424144 _146801 t P)). Qed.
Lemma lem8424147 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term41 _146801 t P) = (term62 _146801 P t)) = ((term41 _146801 t P) = (term62 _146801 P t)).
Proof. exact (MK_COMB (@lem8424146 _146801 t P) (@lem8424129 _146801 P t)). Qed.
Lemma lem8424148 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8424149 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term84 _146801 P t) = (term84 _146801 P t).
Proof. exact (MK_COMB (@lem8424148) (@lem8424147 _146801 P t)). Qed.
Lemma lem8424150 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term163 _146801 h P t) = (term163 _146801 h P t).
Proof. exact (MK_COMB (@lem8424149 _146801 P t) (@lem8424117 _146801 h P t)). Qed.
Lemma lem8424155 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term177 _146801 P y x) = (term177 _146801 P y x).
Proof. exact (eq_refl (term177 _146801 P y x)). Qed.
Lemma lem8424156 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term178 _146801 P x) = (term178 _146801 P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424155 _146801 P y x)). Qed.
Lemma lem8424157 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424158 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term179 _146801 P x) = (term179 _146801 P x).
Proof. exact (MK_COMB (@lem8424157 _146801) (@lem8424156 _146801 P x)). Qed.
Lemma lem8424159 {_146801 : Type'} (P : type1402 _146801) : (term180 _146801 P) = (term180 _146801 P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424158 _146801 P x)). Qed.
Lemma lem8424160 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424161 {_146801 : Type'} (P : type1402 _146801) : (term74 _146801 P) = (term74 _146801 P).
Proof. exact (MK_COMB (@lem8424160 _146801) (@lem8424159 _146801 P)). Qed.
Lemma lem8424162 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8424163 {_146801 : Type'} (P : type1402 _146801) : (term67 _146801 P) = (term67 _146801 P).
Proof. exact (MK_COMB (@lem8424162) (@lem8424161 _146801 P)). Qed.
Lemma lem8424164 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term164 _146801 h P t) = (term164 _146801 h P t).
Proof. exact (MK_COMB (@lem8424163 _146801 P) (@lem8424150 _146801 h P t)). Qed.
Lemma lem8424165 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term166 _146801 P t) = (term166 _146801 P t).
Proof. exact (fun_ext (fun h : _146801 => @lem8424164 _146801 h P t)). Qed.
Lemma lem8424166 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424167 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term168 _146801 P t) = (term168 _146801 P t).
Proof. exact (MK_COMB (@lem8424166 _146801) (@lem8424165 _146801 P t)). Qed.
Lemma lem8424168 {_146801 : Type'} (t : list _146801) : (term170 _146801 t) = (term170 _146801 t).
Proof. exact (fun_ext (fun P : type1402 _146801 => @lem8424167 _146801 P t)). Qed.
Lemma lem8424169 {_146801 : Type'} : (@all (_146801 -> _146801 -> Prop)) = (@all (_146801 -> _146801 -> Prop)).
Proof. exact (eq_refl (@all (_146801 -> _146801 -> Prop))). Qed.
Lemma lem8424170 {_146801 : Type'} (t : list _146801) : (term172 _146801 t) = (term172 _146801 t).
Proof. exact (MK_COMB (@lem8424169 _146801) (@lem8424168 _146801 t)). Qed.
Lemma lem8424171 {_146801 : Type'} : (term174 _146801) = (term174 _146801).
Proof. exact (fun_ext (fun t : list _146801 => @lem8424170 _146801 t)). Qed.
Lemma lem8424172 {_146801 : Type'} : (@all (list _146801)) = (@all (list _146801)).
Proof. exact (eq_refl (@all (list _146801))). Qed.
Lemma lem8424173 {_146801 : Type'} : (term176 _146801) = (term176 _146801).
Proof. exact (MK_COMB (@lem8424172 _146801) (@lem8424171 _146801)). Qed.
Lemma lem8424280 {_146801 : Type'} : (term175 _146801) = (term176 _146801).
Proof. exact (TRANS (@lem8424064 _146801) (@lem8424173 _146801)). Qed.
Lemma lem8424281 {_146801 : Type'} : (term176 _146801) = (term175 _146801).
Proof. exact (SYM (@lem8424280 _146801)). Qed.
Lemma lem8424282 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term74 _146801 P.
Proof. exact (h1). Qed.
Lemma lem8424283 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : (term41 _146801 t P) = (term62 _146801 P t)) : (term41 _146801 t P) = (term62 _146801 P t).
Proof. exact (h1). Qed.
Lemma lem8424285 (p : Prop) : p = (term153 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8424286 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term135 _146801 h t P) = (term152 _146801 h P t)) = (term154 _146801 h P t).
Proof. exact (@lem8424285 ((term135 _146801 h t P) = (term152 _146801 h P t))). Qed.
Lemma lem8424287 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term154 _146801 h P t) = ((term135 _146801 h t P) = (term152 _146801 h P t)).
Proof. exact (SYM (@lem8424286 _146801 h P t)). Qed.
Lemma lem8424288 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term155 _146801 h P t) : term155 _146801 h P t.
Proof. exact (h1). Qed.
Lemma lem8424295 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term177 _146801 P y x) = (term181 _146801 P y x).
Proof. exact (@lem17265 (P x y) (P y x)). Qed.
Lemma lem8424296 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term178 _146801 P x) = (term182 _146801 P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424295 _146801 P y x)). Qed.
Lemma lem8424297 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424298 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term179 _146801 P x) = (term183 _146801 P x).
Proof. exact (MK_COMB (@lem8424297 _146801) (@lem8424296 _146801 P x)). Qed.
Lemma lem8424299 {_146801 : Type'} (P : type1402 _146801) : (term180 _146801 P) = (term184 _146801 P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424298 _146801 P x)). Qed.
Lemma lem8424300 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424357 {_146801 : Type'} (P : type1402 _146801) : (term74 _146801 P) = (term185 _146801 P).
Proof. exact (MK_COMB (@lem8424300 _146801) (@lem8424299 _146801 P)). Qed.
Lemma lem8424358 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term185 _146801 P.
Proof. exact (EQ_MP (@lem8424357 _146801 P) (@lem8424282 _146801 P h1)). Qed.
Lemma lem8424369 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term186 _146801 t P x y) = (term187 _146801 t P x y).
Proof. exact (@lem17362 (@List.In _146801 y t) (P x y)). Qed.
Lemma lem8424374 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term28 _146801 t P x y) = (term188 _146801 t P x y).
Proof. exact (@lem17265 (@List.In _146801 y t) (P x y)). Qed.
Lemma lem8424375 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8424376 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term191 _146801 t P x) = (term192 _146801 t P x).
Proof. exact (@lem8424375 _146801 (term26 _146801 t P x)). Qed.
Lemma lem8424377 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term27 _146801 t P x y) = (term28 _146801 t P x y).
Proof. exact (eq_refl (term27 _146801 t P x y)). Qed.
Lemma lem8424378 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8424379 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term193 _146801 t P x y) = (term186 _146801 t P x y).
Proof. exact (MK_COMB (@lem8424378) (@lem8424377 _146801 t P x y)). Qed.
Lemma lem8424380 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term193 _146801 t P x y) = (term187 _146801 t P x y).
Proof. exact (TRANS (@lem8424379 _146801 t P x y) (@lem8424369 _146801 t P x y)). Qed.
Lemma lem8424381 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term194 _146801 t P x) = (term195 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424380 _146801 t P x y)). Qed.
Lemma lem8424382 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424383 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term192 _146801 t P x) = (term196 _146801 t P x).
Proof. exact (MK_COMB (@lem8424382 _146801) (@lem8424381 _146801 t P x)). Qed.
Lemma lem8424384 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term191 _146801 t P x) = (term196 _146801 t P x).
Proof. exact (TRANS (@lem8424376 _146801 t P x) (@lem8424383 _146801 t P x)). Qed.
Lemma lem8424385 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term26 _146801 t P x) = (term197 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424374 _146801 t P x y)). Qed.
Lemma lem8424386 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424387 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term36 _146801 t P x) = (term198 _146801 t P x).
Proof. exact (MK_COMB (@lem8424386 _146801) (@lem8424385 _146801 t P x)). Qed.
Lemma lem8424389 {_146801 : Type'} (x : _146801) (t : list _146801) : (term199 _146801 x t) = (term199 _146801 x t).
Proof. exact (eq_refl (term199 _146801 x t)). Qed.
Lemma lem8424390 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term200 _146801 t P x) = (term201 _146801 t P x).
Proof. exact (MK_COMB (@lem8424389 _146801 x t) (@lem8424384 _146801 t P x)). Qed.
Lemma lem8424391 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term202 _146801 t P x) = (term200 _146801 t P x).
Proof. exact (@lem17362 (@List.In _146801 x t) (term36 _146801 t P x)). Qed.
Lemma lem8424392 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term202 _146801 t P x) = (term201 _146801 t P x).
Proof. exact (TRANS (@lem8424391 _146801 t P x) (@lem8424390 _146801 t P x)). Qed.
Lemma lem8424394 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8424395 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term204 _146801 t P x) = (term205 _146801 t P x).
Proof. exact (MK_COMB (@lem8424394 _146801 x t) (@lem8424387 _146801 t P x)). Qed.
Lemma lem8424396 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term37 _146801 t P x) = (term204 _146801 t P x).
Proof. exact (@lem17265 (@List.In _146801 x t) (term36 _146801 t P x)). Qed.
Lemma lem8424397 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term37 _146801 t P x) = (term205 _146801 t P x).
Proof. exact (TRANS (@lem8424396 _146801 t P x) (@lem8424395 _146801 t P x)). Qed.
Lemma lem8424398 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8424399 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term206 _146801 t P) = (term207 _146801 t P).
Proof. exact (@lem8424398 _146801 (term39 _146801 t P)). Qed.
Lemma lem8424400 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term208 _146801 t P x) = (term37 _146801 t P x).
Proof. exact (eq_refl (term208 _146801 t P x)). Qed.
Lemma lem8424401 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8424402 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term209 _146801 t P x) = (term202 _146801 t P x).
Proof. exact (MK_COMB (@lem8424401) (@lem8424400 _146801 t P x)). Qed.
Lemma lem8424403 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term209 _146801 t P x) = (term201 _146801 t P x).
Proof. exact (TRANS (@lem8424402 _146801 t P x) (@lem8424392 _146801 t P x)). Qed.
Lemma lem8424404 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term210 _146801 t P) = (term211 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424403 _146801 t P x)). Qed.
Lemma lem8424405 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424406 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term207 _146801 t P) = (term212 _146801 t P).
Proof. exact (MK_COMB (@lem8424405 _146801) (@lem8424404 _146801 t P)). Qed.
Lemma lem8424407 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term206 _146801 t P) = (term212 _146801 t P).
Proof. exact (TRANS (@lem8424399 _146801 t P) (@lem8424406 _146801 t P)). Qed.
Lemma lem8424408 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term39 _146801 t P) = (term213 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424397 _146801 t P x)). Qed.
Lemma lem8424409 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424410 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term41 _146801 t P) = (term214 _146801 t P).
Proof. exact (MK_COMB (@lem8424409 _146801) (@lem8424408 _146801 t P)). Qed.
Lemma lem8424419 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term215 _146801 t P x) = (term216 _146801 t P x).
Proof. exact (@lem17362 (@List.In _146801 x t) (P x x)). Qed.
Lemma lem8424424 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term55 _146801 t P x) = (term217 _146801 t P x).
Proof. exact (@lem17265 (@List.In _146801 x t) (P x x)). Qed.
Lemma lem8424425 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8424426 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term218 _146801 t P) = (term219 _146801 t P).
Proof. exact (@lem8424425 _146801 (term57 _146801 t P)). Qed.
Lemma lem8424427 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term220 _146801 t P x) = (term55 _146801 t P x).
Proof. exact (eq_refl (term220 _146801 t P x)). Qed.
Lemma lem8424428 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8424429 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term221 _146801 t P x) = (term215 _146801 t P x).
Proof. exact (MK_COMB (@lem8424428) (@lem8424427 _146801 t P x)). Qed.
Lemma lem8424430 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term221 _146801 t P x) = (term216 _146801 t P x).
Proof. exact (TRANS (@lem8424429 _146801 t P x) (@lem8424419 _146801 t P x)). Qed.
Lemma lem8424431 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term222 _146801 t P) = (term223 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424430 _146801 t P x)). Qed.
Lemma lem8424432 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424433 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term219 _146801 t P) = (term224 _146801 t P).
Proof. exact (MK_COMB (@lem8424432 _146801) (@lem8424431 _146801 t P)). Qed.
Lemma lem8424434 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term218 _146801 t P) = (term224 _146801 t P).
Proof. exact (TRANS (@lem8424426 _146801 t P) (@lem8424433 _146801 t P)). Qed.
Lemma lem8424435 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term57 _146801 t P) = (term225 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424424 _146801 t P x)). Qed.
Lemma lem8424436 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424437 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term58 _146801 t P) = (term226 _146801 t P).
Proof. exact (MK_COMB (@lem8424436 _146801) (@lem8424435 _146801 t P)). Qed.
Lemma lem8424438 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8424439 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8424440 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8424441 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term228 _146801 t P) = (term229 _146801 t P).
Proof. exact (MK_COMB (@lem8424440) (@lem8424434 _146801 t P)). Qed.
Lemma lem8424442 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term230 _146801 P t) = (term231 _146801 P t).
Proof. exact (MK_COMB (@lem8424441 _146801 t P) (@lem8424438 _146801 P t)). Qed.
Lemma lem8424443 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term232 _146801 P t) = (term230 _146801 P t).
Proof. exact (@lem17045 (term58 _146801 t P) (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8424444 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term232 _146801 P t) = (term231 _146801 P t).
Proof. exact (TRANS (@lem8424443 _146801 P t) (@lem8424442 _146801 P t)). Qed.
Lemma lem8424445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424446 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term60 _146801 t P) = (term233 _146801 t P).
Proof. exact (MK_COMB (@lem8424445) (@lem8424437 _146801 t P)). Qed.
Lemma lem8424447 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term62 _146801 P t) = (term234 _146801 P t).
Proof. exact (MK_COMB (@lem8424446 _146801 t P) (@lem8424439 _146801 P t)). Qed.
Lemma lem8424448 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424449 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term235 _146801 t P) = (term236 _146801 t P).
Proof. exact (MK_COMB (@lem8424448) (@lem8424407 _146801 t P)). Qed.
Lemma lem8424450 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term237 _146801 P t) = (term238 _146801 P t).
Proof. exact (MK_COMB (@lem8424449 _146801 t P) (@lem8424444 _146801 P t)). Qed.
Lemma lem8424451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424452 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term239 _146801 t P) = (term240 _146801 t P).
Proof. exact (MK_COMB (@lem8424451) (@lem8424410 _146801 t P)). Qed.
Lemma lem8424453 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term241 _146801 P t) = (term242 _146801 P t).
Proof. exact (MK_COMB (@lem8424452 _146801 t P) (@lem8424447 _146801 P t)). Qed.
Lemma lem8424454 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8424455 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term243 _146801 P t) = (term244 _146801 P t).
Proof. exact (MK_COMB (@lem8424454) (@lem8424453 _146801 P t)). Qed.
Lemma lem8424456 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term245 _146801 P t) = (term246 _146801 P t).
Proof. exact (MK_COMB (@lem8424455 _146801 P t) (@lem8424450 _146801 P t)). Qed.
Lemma lem8424457 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term41 _146801 t P) = (term62 _146801 P t)) = (term245 _146801 P t).
Proof. exact (@lem17500 (term41 _146801 t P) (term62 _146801 P t)). Qed.
Lemma lem8424458 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term41 _146801 t P) = (term62 _146801 P t)) = (term246 _146801 P t).
Proof. exact (TRANS (@lem8424457 _146801 P t) (@lem8424456 _146801 P t)). Qed.
Lemma lem8424749 {A : Type'} (P : Prop) (Q : A -> Prop) : (term247 A P Q) = (term248 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8424750 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term247 _146801 P Q) = (term248 _146801 P Q).
Proof. exact (@lem8424749 _146801 P Q). Qed.
Lemma lem8424751 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term249 _146801 t P x) = (term250 _146801 t P x).
Proof. exact (@lem8424750 _146801 (@List.In _146801 x t) (term195 _146801 t P x)). Qed.
Lemma lem8424752 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term251 _146801 t P x y) = (term187 _146801 t P x y).
Proof. exact (eq_refl (term251 _146801 t P x y)). Qed.
Lemma lem8424753 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term252 _146801 t P x) = (term195 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424752 _146801 t P x y)). Qed.
Lemma lem8424754 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424755 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term253 _146801 t P x) = (term196 _146801 t P x).
Proof. exact (MK_COMB (@lem8424754 _146801) (@lem8424753 _146801 t P x)). Qed.
Lemma lem8424756 {_146801 : Type'} (x : _146801) (t : list _146801) : (term199 _146801 x t) = (term199 _146801 x t).
Proof. exact (eq_refl (term199 _146801 x t)). Qed.
Lemma lem8424757 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term249 _146801 t P x) = (term201 _146801 t P x).
Proof. exact (MK_COMB (@lem8424756 _146801 x t) (@lem8424755 _146801 t P x)). Qed.
Lemma lem8424758 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424759 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term254 _146801 t P x) = (term255 _146801 t P x).
Proof. exact (MK_COMB (@lem8424758) (@lem8424757 _146801 t P x)). Qed.
Lemma lem8424760 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term251 _146801 t P x y) = (term187 _146801 t P x y).
Proof. exact (eq_refl (term251 _146801 t P x y)). Qed.
Lemma lem8424761 {_146801 : Type'} (x : _146801) (t : list _146801) : (term199 _146801 x t) = (term199 _146801 x t).
Proof. exact (eq_refl (term199 _146801 x t)). Qed.
Lemma lem8424762 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term256 _146801 t P x y) = (term257 _146801 t P x y).
Proof. exact (MK_COMB (@lem8424761 _146801 x t) (@lem8424760 _146801 t P x y)). Qed.
Lemma lem8424763 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term258 _146801 t P x) = (term259 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424762 _146801 t P x y)). Qed.
Lemma lem8424764 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424765 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term250 _146801 t P x) = (term260 _146801 t P x).
Proof. exact (MK_COMB (@lem8424764 _146801) (@lem8424763 _146801 t P x)). Qed.
Lemma lem8424766 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term249 _146801 t P x) = (term250 _146801 t P x)) = ((term201 _146801 t P x) = (term260 _146801 t P x)).
Proof. exact (MK_COMB (@lem8424759 _146801 t P x) (@lem8424765 _146801 t P x)). Qed.
Lemma lem8424767 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term201 _146801 t P x) = (term260 _146801 t P x).
Proof. exact (EQ_MP (@lem8424766 _146801 t P x) (@lem8424751 _146801 t P x)). Qed.
Lemma lem8424768 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term211 _146801 t P) = (term261 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424767 _146801 t P x)). Qed.
Lemma lem8424769 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424770 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term212 _146801 t P) = (term262 _146801 t P).
Proof. exact (MK_COMB (@lem8424769 _146801) (@lem8424768 _146801 t P)). Qed.
Lemma lem8424771 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424772 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term236 _146801 t P) = (term263 _146801 t P).
Proof. exact (MK_COMB (@lem8424771) (@lem8424770 _146801 t P)). Qed.
Lemma lem8424774 {A : Type'} (P : A -> Prop) (Q : Prop) : (term264 A P Q) = (term265 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8424775 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term264 _146801 P Q) = (term265 _146801 P Q).
Proof. exact (@lem8424774 _146801 P Q). Qed.
Lemma lem8424776 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term266 _146801 P t) = (term267 _146801 P t).
Proof. exact (@lem8424775 _146801 (term223 _146801 t P) (term227 _146801 P t)). Qed.
Lemma lem8424777 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term268 _146801 t P x) = (term216 _146801 t P x).
Proof. exact (eq_refl (term268 _146801 t P x)). Qed.
Lemma lem8424778 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term269 _146801 t P) = (term223 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424777 _146801 t P x)). Qed.
Lemma lem8424779 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424780 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term270 _146801 t P) = (term224 _146801 t P).
Proof. exact (MK_COMB (@lem8424779 _146801) (@lem8424778 _146801 t P)). Qed.
Lemma lem8424781 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8424782 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term271 _146801 t P) = (term229 _146801 t P).
Proof. exact (MK_COMB (@lem8424781) (@lem8424780 _146801 t P)). Qed.
Lemma lem8424783 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8424784 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term266 _146801 P t) = (term231 _146801 P t).
Proof. exact (MK_COMB (@lem8424782 _146801 t P) (@lem8424783 _146801 P t)). Qed.
Lemma lem8424785 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424786 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term272 _146801 P t) = (term273 _146801 P t).
Proof. exact (MK_COMB (@lem8424785) (@lem8424784 _146801 P t)). Qed.
Lemma lem8424787 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term268 _146801 t P x) = (term216 _146801 t P x).
Proof. exact (eq_refl (term268 _146801 t P x)). Qed.
Lemma lem8424788 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8424789 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term274 _146801 t P x) = (term275 _146801 t P x).
Proof. exact (MK_COMB (@lem8424788) (@lem8424787 _146801 t P x)). Qed.
Lemma lem8424790 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8424791 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term276 _146801 x P t) = (term277 _146801 x P t).
Proof. exact (MK_COMB (@lem8424789 _146801 t P x) (@lem8424790 _146801 P t)). Qed.
Lemma lem8424792 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term278 _146801 P t) = (term279 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424791 _146801 x P t)). Qed.
Lemma lem8424793 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424794 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term267 _146801 P t) = (term280 _146801 P t).
Proof. exact (MK_COMB (@lem8424793 _146801) (@lem8424792 _146801 P t)). Qed.
Lemma lem8424795 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term266 _146801 P t) = (term267 _146801 P t)) = ((term231 _146801 P t) = (term280 _146801 P t)).
Proof. exact (MK_COMB (@lem8424786 _146801 P t) (@lem8424794 _146801 P t)). Qed.
Lemma lem8424796 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term231 _146801 P t) = (term280 _146801 P t).
Proof. exact (EQ_MP (@lem8424795 _146801 P t) (@lem8424776 _146801 P t)). Qed.
Lemma lem8424797 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term238 _146801 P t) = (term281 _146801 P t).
Proof. exact (MK_COMB (@lem8424772 _146801 t P) (@lem8424796 _146801 P t)). Qed.
Lemma lem8424799 {A : Type'} (P : A -> Prop) (Q : Prop) : (term282 A P Q) = (term283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8424800 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term282 _146801 P Q) = (term283 _146801 P Q).
Proof. exact (@lem8424799 _146801 P Q). Qed.
Lemma lem8424801 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term284 _146801 P t) = (term285 _146801 P t).
Proof. exact (@lem8424800 _146801 (term261 _146801 t P) (term280 _146801 P t)). Qed.
Lemma lem8424802 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term286 _146801 t P x) = (term260 _146801 t P x).
Proof. exact (eq_refl (term286 _146801 t P x)). Qed.
Lemma lem8424803 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term287 _146801 t P) = (term261 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8424802 _146801 t P x)). Qed.
Lemma lem8424804 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424805 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term288 _146801 t P) = (term262 _146801 t P).
Proof. exact (MK_COMB (@lem8424804 _146801) (@lem8424803 _146801 t P)). Qed.
Lemma lem8424806 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424807 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term289 _146801 t P) = (term263 _146801 t P).
Proof. exact (MK_COMB (@lem8424806) (@lem8424805 _146801 t P)). Qed.
Lemma lem8424808 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term280 _146801 P t) = (term280 _146801 P t).
Proof. exact (eq_refl (term280 _146801 P t)). Qed.
Lemma lem8424809 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term284 _146801 P t) = (term281 _146801 P t).
Proof. exact (MK_COMB (@lem8424807 _146801 t P) (@lem8424808 _146801 P t)). Qed.
Lemma lem8424810 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424811 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term290 _146801 P t) = (term291 _146801 P t).
Proof. exact (MK_COMB (@lem8424810) (@lem8424809 _146801 P t)). Qed.
Lemma lem8424812 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term286 _146801 t P x) = (term260 _146801 t P x).
Proof. exact (eq_refl (term286 _146801 t P x)). Qed.
Lemma lem8424813 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424814 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term292 _146801 t P x) = (term293 _146801 t P x).
Proof. exact (MK_COMB (@lem8424813) (@lem8424812 _146801 t P x)). Qed.
Lemma lem8424815 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term280 _146801 P t) = (term280 _146801 P t).
Proof. exact (eq_refl (term280 _146801 P t)). Qed.
Lemma lem8424816 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term294 _146801 x P t) = (term295 _146801 x P t).
Proof. exact (MK_COMB (@lem8424814 _146801 t P x) (@lem8424815 _146801 P t)). Qed.
Lemma lem8424817 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term296 _146801 P t) = (term297 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424816 _146801 x P t)). Qed.
Lemma lem8424818 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424819 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term285 _146801 P t) = (term298 _146801 P t).
Proof. exact (MK_COMB (@lem8424818 _146801) (@lem8424817 _146801 P t)). Qed.
Lemma lem8424820 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term284 _146801 P t) = (term285 _146801 P t)) = ((term281 _146801 P t) = (term298 _146801 P t)).
Proof. exact (MK_COMB (@lem8424811 _146801 P t) (@lem8424819 _146801 P t)). Qed.
Lemma lem8424821 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term281 _146801 P t) = (term298 _146801 P t).
Proof. exact (EQ_MP (@lem8424820 _146801 P t) (@lem8424801 _146801 P t)). Qed.
Lemma lem8424823 {A : Type'} (P : A -> Prop) (Q : Prop) : (term282 A P Q) = (term283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8424824 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term282 _146801 P Q) = (term283 _146801 P Q).
Proof. exact (@lem8424823 _146801 P Q). Qed.
Lemma lem8424825 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term299 _146801 x P t) = (term300 _146801 x P t).
Proof. exact (@lem8424824 _146801 (term259 _146801 t P x) (term280 _146801 P t)). Qed.
Lemma lem8424826 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term301 _146801 t P x y) = (term257 _146801 t P x y).
Proof. exact (eq_refl (term301 _146801 t P x y)). Qed.
Lemma lem8424827 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term302 _146801 t P x) = (term259 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424826 _146801 t P x y)). Qed.
Lemma lem8424828 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424829 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term303 _146801 t P x) = (term260 _146801 t P x).
Proof. exact (MK_COMB (@lem8424828 _146801) (@lem8424827 _146801 t P x)). Qed.
Lemma lem8424830 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424831 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term304 _146801 t P x) = (term293 _146801 t P x).
Proof. exact (MK_COMB (@lem8424830) (@lem8424829 _146801 t P x)). Qed.
Lemma lem8424832 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term280 _146801 P t) = (term280 _146801 P t).
Proof. exact (eq_refl (term280 _146801 P t)). Qed.
Lemma lem8424833 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term299 _146801 x P t) = (term295 _146801 x P t).
Proof. exact (MK_COMB (@lem8424831 _146801 t P x) (@lem8424832 _146801 P t)). Qed.
Lemma lem8424834 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424835 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term305 _146801 x P t) = (term306 _146801 x P t).
Proof. exact (MK_COMB (@lem8424834) (@lem8424833 _146801 x P t)). Qed.
Lemma lem8424836 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term301 _146801 t P x y) = (term257 _146801 t P x y).
Proof. exact (eq_refl (term301 _146801 t P x y)). Qed.
Lemma lem8424837 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8424838 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term307 _146801 t P x y) = (term308 _146801 t P x y).
Proof. exact (MK_COMB (@lem8424837) (@lem8424836 _146801 t P x y)). Qed.
Lemma lem8424839 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term280 _146801 P t) = (term280 _146801 P t).
Proof. exact (eq_refl (term280 _146801 P t)). Qed.
Lemma lem8424840 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term309 _146801 x y P t) = (term310 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424838 _146801 t P x y) (@lem8424839 _146801 P t)). Qed.
Lemma lem8424841 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term311 _146801 x P t) = (term312 _146801 x P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8424840 _146801 x y P t)). Qed.
Lemma lem8424842 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424843 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term300 _146801 x P t) = (term313 _146801 x P t).
Proof. exact (MK_COMB (@lem8424842 _146801) (@lem8424841 _146801 x P t)). Qed.
Lemma lem8424844 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : ((term299 _146801 x P t) = (term300 _146801 x P t)) = ((term295 _146801 x P t) = (term313 _146801 x P t)).
Proof. exact (MK_COMB (@lem8424835 _146801 x P t) (@lem8424843 _146801 x P t)). Qed.
Lemma lem8424845 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term295 _146801 x P t) = (term313 _146801 x P t).
Proof. exact (EQ_MP (@lem8424844 _146801 x P t) (@lem8424825 _146801 x P t)). Qed.
Lemma lem8424847 {A : Type'} (P : Prop) (Q : A -> Prop) : (term247 A P Q) = (term248 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8424848 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term247 _146801 P Q) = (term248 _146801 P Q).
Proof. exact (@lem8424847 _146801 P Q). Qed.
Lemma lem8424849 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term314 _146801 x y P t) = (term315 _146801 x y P t).
Proof. exact (@lem8424848 _146801 (term257 _146801 t P x y) (term279 _146801 P t)). Qed.
Lemma lem8424850 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term316 _146801 P t x) = (term277 _146801 x P t).
Proof. exact (eq_refl (term316 _146801 P t x)). Qed.
Lemma lem8424851 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term317 _146801 P t) = (term279 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424850 _146801 x P t)). Qed.
Lemma lem8424852 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424853 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term318 _146801 P t) = (term280 _146801 P t).
Proof. exact (MK_COMB (@lem8424852 _146801) (@lem8424851 _146801 P t)). Qed.
Lemma lem8424854 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term308 _146801 t P x y) = (term308 _146801 t P x y).
Proof. exact (eq_refl (term308 _146801 t P x y)). Qed.
Lemma lem8424855 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term314 _146801 x y P t) = (term310 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424854 _146801 t P x y) (@lem8424853 _146801 P t)). Qed.
Lemma lem8424856 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424857 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term319 _146801 x y P t) = (term320 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424856) (@lem8424855 _146801 x y P t)). Qed.
Lemma lem8424858 {_146801 : Type'} (x' : _146801) (P : type1402 _146801) (t : list _146801) : (term316 _146801 P t x') = (term277 _146801 x' P t).
Proof. exact (eq_refl (term316 _146801 P t x')). Qed.
Lemma lem8424859 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term308 _146801 t P x y) = (term308 _146801 t P x y).
Proof. exact (eq_refl (term308 _146801 t P x y)). Qed.
Lemma lem8424860 {_146801 : Type'} (x : _146801) (y : _146801) (x' : _146801) (P : type1402 _146801) (t : list _146801) : (term321 _146801 x y P t x') = (term322 _146801 x y x' P t).
Proof. exact (MK_COMB (@lem8424859 _146801 t P x y) (@lem8424858 _146801 x' P t)). Qed.
Lemma lem8424861 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term323 _146801 x y P t) = (term324 _146801 x y P t).
Proof. exact (fun_ext (fun x' : _146801 => @lem8424860 _146801 x y x' P t)). Qed.
Lemma lem8424862 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424863 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term315 _146801 x y P t) = (term325 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424862 _146801) (@lem8424861 _146801 x y P t)). Qed.
Lemma lem8424864 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : ((term314 _146801 x y P t) = (term315 _146801 x y P t)) = ((term310 _146801 x y P t) = (term325 _146801 x y P t)).
Proof. exact (MK_COMB (@lem8424857 _146801 x y P t) (@lem8424863 _146801 x y P t)). Qed.
Lemma lem8424865 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term310 _146801 x y P t) = (term325 _146801 x y P t).
Proof. exact (EQ_MP (@lem8424864 _146801 x y P t) (@lem8424849 _146801 x y P t)). Qed.
Lemma lem8424866 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term312 _146801 x P t) = (term326 _146801 x P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8424865 _146801 x y P t)). Qed.
Lemma lem8424867 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424868 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term313 _146801 x P t) = (term327 _146801 x P t).
Proof. exact (MK_COMB (@lem8424867 _146801) (@lem8424866 _146801 x P t)). Qed.
Lemma lem8424869 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term295 _146801 x P t) = (term327 _146801 x P t).
Proof. exact (TRANS (@lem8424845 _146801 x P t) (@lem8424868 _146801 x P t)). Qed.
Lemma lem8424870 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term297 _146801 P t) = (term328 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424869 _146801 x P t)). Qed.
Lemma lem8424871 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424872 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term298 _146801 P t) = (term329 _146801 P t).
Proof. exact (MK_COMB (@lem8424871 _146801) (@lem8424870 _146801 P t)). Qed.
Lemma lem8424873 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term281 _146801 P t) = (term329 _146801 P t).
Proof. exact (TRANS (@lem8424821 _146801 P t) (@lem8424872 _146801 P t)). Qed.
Lemma lem8424874 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term238 _146801 P t) = (term329 _146801 P t).
Proof. exact (TRANS (@lem8424797 _146801 P t) (@lem8424873 _146801 P t)). Qed.
Lemma lem8424875 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424876 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term246 _146801 P t) = (term330 _146801 P t).
Proof. exact (MK_COMB (@lem8424875 _146801 P t) (@lem8424874 _146801 P t)). Qed.
Lemma lem8424878 {A : Type'} (P : Prop) (Q : A -> Prop) : (term331 A P Q) = (term332 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8424879 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term331 _146801 P Q) = (term332 _146801 P Q).
Proof. exact (@lem8424878 _146801 P Q). Qed.
Lemma lem8424880 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term333 _146801 P t) = (term334 _146801 P t).
Proof. exact (@lem8424879 _146801 (term242 _146801 P t) (term328 _146801 P t)). Qed.
Lemma lem8424881 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term335 _146801 P t x) = (term327 _146801 x P t).
Proof. exact (eq_refl (term335 _146801 P t x)). Qed.
Lemma lem8424882 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term336 _146801 P t) = (term328 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424881 _146801 x P t)). Qed.
Lemma lem8424883 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424884 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term337 _146801 P t) = (term329 _146801 P t).
Proof. exact (MK_COMB (@lem8424883 _146801) (@lem8424882 _146801 P t)). Qed.
Lemma lem8424885 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424886 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term333 _146801 P t) = (term330 _146801 P t).
Proof. exact (MK_COMB (@lem8424885 _146801 P t) (@lem8424884 _146801 P t)). Qed.
Lemma lem8424887 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424888 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term338 _146801 P t) = (term339 _146801 P t).
Proof. exact (MK_COMB (@lem8424887) (@lem8424886 _146801 P t)). Qed.
Lemma lem8424889 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term335 _146801 P t x) = (term327 _146801 x P t).
Proof. exact (eq_refl (term335 _146801 P t x)). Qed.
Lemma lem8424890 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424891 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term340 _146801 P t x) = (term341 _146801 x P t).
Proof. exact (MK_COMB (@lem8424890 _146801 P t) (@lem8424889 _146801 x P t)). Qed.
Lemma lem8424892 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term342 _146801 P t) = (term343 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424891 _146801 x P t)). Qed.
Lemma lem8424893 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424894 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term334 _146801 P t) = (term344 _146801 P t).
Proof. exact (MK_COMB (@lem8424893 _146801) (@lem8424892 _146801 P t)). Qed.
Lemma lem8424895 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term333 _146801 P t) = (term334 _146801 P t)) = ((term330 _146801 P t) = (term344 _146801 P t)).
Proof. exact (MK_COMB (@lem8424888 _146801 P t) (@lem8424894 _146801 P t)). Qed.
Lemma lem8424896 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term330 _146801 P t) = (term344 _146801 P t).
Proof. exact (EQ_MP (@lem8424895 _146801 P t) (@lem8424880 _146801 P t)). Qed.
Lemma lem8424898 {A : Type'} (P : Prop) (Q : A -> Prop) : (term331 A P Q) = (term332 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8424899 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term331 _146801 P Q) = (term332 _146801 P Q).
Proof. exact (@lem8424898 _146801 P Q). Qed.
Lemma lem8424900 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term345 _146801 x P t) = (term346 _146801 x P t).
Proof. exact (@lem8424899 _146801 (term242 _146801 P t) (term326 _146801 x P t)). Qed.
Lemma lem8424901 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term347 _146801 x P t y) = (term325 _146801 x y P t).
Proof. exact (eq_refl (term347 _146801 x P t y)). Qed.
Lemma lem8424902 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term348 _146801 x P t) = (term326 _146801 x P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8424901 _146801 x y P t)). Qed.
Lemma lem8424903 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424904 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term349 _146801 x P t) = (term327 _146801 x P t).
Proof. exact (MK_COMB (@lem8424903 _146801) (@lem8424902 _146801 x P t)). Qed.
Lemma lem8424905 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424906 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term345 _146801 x P t) = (term341 _146801 x P t).
Proof. exact (MK_COMB (@lem8424905 _146801 P t) (@lem8424904 _146801 x P t)). Qed.
Lemma lem8424907 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424908 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term350 _146801 x P t) = (term351 _146801 x P t).
Proof. exact (MK_COMB (@lem8424907) (@lem8424906 _146801 x P t)). Qed.
Lemma lem8424909 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term347 _146801 x P t y) = (term325 _146801 x y P t).
Proof. exact (eq_refl (term347 _146801 x P t y)). Qed.
Lemma lem8424910 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424911 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term352 _146801 x P t y) = (term353 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424910 _146801 P t) (@lem8424909 _146801 x y P t)). Qed.
Lemma lem8424912 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term354 _146801 x P t) = (term355 _146801 x P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8424911 _146801 x y P t)). Qed.
Lemma lem8424913 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424914 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term346 _146801 x P t) = (term356 _146801 x P t).
Proof. exact (MK_COMB (@lem8424913 _146801) (@lem8424912 _146801 x P t)). Qed.
Lemma lem8424915 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : ((term345 _146801 x P t) = (term346 _146801 x P t)) = ((term341 _146801 x P t) = (term356 _146801 x P t)).
Proof. exact (MK_COMB (@lem8424908 _146801 x P t) (@lem8424914 _146801 x P t)). Qed.
Lemma lem8424916 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term341 _146801 x P t) = (term356 _146801 x P t).
Proof. exact (EQ_MP (@lem8424915 _146801 x P t) (@lem8424900 _146801 x P t)). Qed.
Lemma lem8424918 {A : Type'} (P : Prop) (Q : A -> Prop) : (term331 A P Q) = (term332 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8424919 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term331 _146801 P Q) = (term332 _146801 P Q).
Proof. exact (@lem8424918 _146801 P Q). Qed.
Lemma lem8424920 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term357 _146801 x y P t) = (term358 _146801 x y P t).
Proof. exact (@lem8424919 _146801 (term242 _146801 P t) (term324 _146801 x y P t)). Qed.
Lemma lem8424921 {_146801 : Type'} (x : _146801) (y : _146801) (x' : _146801) (P : type1402 _146801) (t : list _146801) : (term359 _146801 x y P t x') = (term322 _146801 x y x' P t).
Proof. exact (eq_refl (term359 _146801 x y P t x')). Qed.
Lemma lem8424922 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term360 _146801 x y P t) = (term324 _146801 x y P t).
Proof. exact (fun_ext (fun x' : _146801 => @lem8424921 _146801 x y x' P t)). Qed.
Lemma lem8424923 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424924 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term361 _146801 x y P t) = (term325 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424923 _146801) (@lem8424922 _146801 x y P t)). Qed.
Lemma lem8424925 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424926 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term357 _146801 x y P t) = (term353 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424925 _146801 P t) (@lem8424924 _146801 x y P t)). Qed.
Lemma lem8424927 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8424928 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term362 _146801 x y P t) = (term363 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424927) (@lem8424926 _146801 x y P t)). Qed.
Lemma lem8424929 {_146801 : Type'} (x : _146801) (y : _146801) (x' : _146801) (P : type1402 _146801) (t : list _146801) : (term359 _146801 x y P t x') = (term322 _146801 x y x' P t).
Proof. exact (eq_refl (term359 _146801 x y P t x')). Qed.
Lemma lem8424930 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term244 _146801 P t).
Proof. exact (eq_refl (term244 _146801 P t)). Qed.
Lemma lem8424931 {_146801 : Type'} (x : _146801) (y : _146801) (x' : _146801) (P : type1402 _146801) (t : list _146801) : (term364 _146801 x y P t x') = (term365 _146801 x y x' P t).
Proof. exact (MK_COMB (@lem8424930 _146801 P t) (@lem8424929 _146801 x y x' P t)). Qed.
Lemma lem8424932 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term366 _146801 x y P t) = (term367 _146801 x y P t).
Proof. exact (fun_ext (fun x' : _146801 => @lem8424931 _146801 x y x' P t)). Qed.
Lemma lem8424933 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424934 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term358 _146801 x y P t) = (term368 _146801 x y P t).
Proof. exact (MK_COMB (@lem8424933 _146801) (@lem8424932 _146801 x y P t)). Qed.
Lemma lem8424935 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : ((term357 _146801 x y P t) = (term358 _146801 x y P t)) = ((term353 _146801 x y P t) = (term368 _146801 x y P t)).
Proof. exact (MK_COMB (@lem8424928 _146801 x y P t) (@lem8424934 _146801 x y P t)). Qed.
Lemma lem8424936 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) : (term353 _146801 x y P t) = (term368 _146801 x y P t).
Proof. exact (EQ_MP (@lem8424935 _146801 x y P t) (@lem8424920 _146801 x y P t)). Qed.
Lemma lem8424937 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term355 _146801 x P t) = (term369 _146801 x P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8424936 _146801 x y P t)). Qed.
Lemma lem8424938 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424939 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term356 _146801 x P t) = (term370 _146801 x P t).
Proof. exact (MK_COMB (@lem8424938 _146801) (@lem8424937 _146801 x P t)). Qed.
Lemma lem8424940 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) : (term341 _146801 x P t) = (term370 _146801 x P t).
Proof. exact (TRANS (@lem8424916 _146801 x P t) (@lem8424939 _146801 x P t)). Qed.
Lemma lem8424941 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term343 _146801 P t) = (term371 _146801 P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8424940 _146801 x P t)). Qed.
Lemma lem8424942 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424943 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term344 _146801 P t) = (term372 _146801 P t).
Proof. exact (MK_COMB (@lem8424942 _146801) (@lem8424941 _146801 P t)). Qed.
Lemma lem8424944 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term330 _146801 P t) = (term372 _146801 P t).
Proof. exact (TRANS (@lem8424896 _146801 P t) (@lem8424943 _146801 P t)). Qed.
Lemma lem8424946 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term246 _146801 P t) = (term372 _146801 P t).
Proof. exact (TRANS (@lem8424876 _146801 P t) (@lem8424944 _146801 P t)). Qed.
Lemma lem8424947 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : ((term41 _146801 t P) = (term62 _146801 P t)) = (term372 _146801 P t).
Proof. exact (TRANS (@lem8424458 _146801 P t) (@lem8424946 _146801 P t)). Qed.
Lemma lem8424948 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : (term41 _146801 t P) = (term62 _146801 P t)) : term372 _146801 P t.
Proof. exact (EQ_MP (@lem8424947 _146801 P t) (@lem8424283 _146801 P t h1)). Qed.
Lemma lem8424957 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term373 _146801 h x t) = (term374 _146801 h x t).
Proof. exact (@lem17160 (x = h) (@List.In _146801 x t)). Qed.
Lemma lem8424969 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term373 _146801 h y t) = (term374 _146801 h y t).
Proof. exact (@lem17160 (y = h) (@List.In _146801 y t)). Qed.
Lemma lem8424974 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (P x y).
Proof. exact (eq_refl (P x y)). Qed.
Lemma lem8424979 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term375 _146801 h t P x y) = (term376 _146801 h t P x y).
Proof. exact (@lem17362 (term122 _146801 h y t) (P x y)). Qed.
Lemma lem8424980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8424981 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term377 _146801 h y t) = (term378 _146801 h y t).
Proof. exact (MK_COMB (@lem8424980) (@lem8424969 _146801 h y t)). Qed.
Lemma lem8424982 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term379 _146801 h t P x y) = (term380 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8424981 _146801 h y t) (@lem8424974 _146801 P x y)). Qed.
Lemma lem8424983 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term126 _146801 h t P x y) = (term379 _146801 h t P x y).
Proof. exact (@lem17265 (term122 _146801 h y t) (P x y)). Qed.
Lemma lem8424984 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term126 _146801 h t P x y) = (term380 _146801 h t P x y).
Proof. exact (TRANS (@lem8424983 _146801 h t P x y) (@lem8424982 _146801 h t P x y)). Qed.
Lemma lem8424985 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8424986 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term381 _146801 h t P x) = (term382 _146801 h t P x).
Proof. exact (@lem8424985 _146801 (term128 _146801 h t P x)). Qed.
Lemma lem8424987 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term383 _146801 h t P x y) = (term126 _146801 h t P x y).
Proof. exact (eq_refl (term383 _146801 h t P x y)). Qed.
Lemma lem8424988 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8424989 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term384 _146801 h t P x y) = (term375 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8424988) (@lem8424987 _146801 h t P x y)). Qed.
Lemma lem8424990 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term384 _146801 h t P x y) = (term376 _146801 h t P x y).
Proof. exact (TRANS (@lem8424989 _146801 h t P x y) (@lem8424979 _146801 h t P x y)). Qed.
Lemma lem8424991 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term385 _146801 h t P x) = (term386 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424990 _146801 h t P x y)). Qed.
Lemma lem8424992 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8424993 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term382 _146801 h t P x) = (term387 _146801 h t P x).
Proof. exact (MK_COMB (@lem8424992 _146801) (@lem8424991 _146801 h t P x)). Qed.
Lemma lem8424994 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term381 _146801 h t P x) = (term387 _146801 h t P x).
Proof. exact (TRANS (@lem8424986 _146801 h t P x) (@lem8424993 _146801 h t P x)). Qed.
Lemma lem8424995 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term128 _146801 h t P x) = (term388 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8424984 _146801 h t P x y)). Qed.
Lemma lem8424996 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8424997 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term130 _146801 h t P x) = (term389 _146801 h t P x).
Proof. exact (MK_COMB (@lem8424996 _146801) (@lem8424995 _146801 h t P x)). Qed.
Lemma lem8424999 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term390 _146801 h x t) = (term390 _146801 h x t).
Proof. exact (eq_refl (term390 _146801 h x t)). Qed.
Lemma lem8425000 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term391 _146801 h t P x) = (term392 _146801 h t P x).
Proof. exact (MK_COMB (@lem8424999 _146801 h x t) (@lem8424994 _146801 h t P x)). Qed.
Lemma lem8425001 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term393 _146801 h t P x) = (term391 _146801 h t P x).
Proof. exact (@lem17362 (term122 _146801 h x t) (term130 _146801 h t P x)). Qed.
Lemma lem8425002 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term393 _146801 h t P x) = (term392 _146801 h t P x).
Proof. exact (TRANS (@lem8425001 _146801 h t P x) (@lem8425000 _146801 h t P x)). Qed.
Lemma lem8425003 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425004 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term377 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (MK_COMB (@lem8425003) (@lem8424957 _146801 h x t)). Qed.
Lemma lem8425005 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term394 _146801 h t P x) = (term395 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425004 _146801 h x t) (@lem8424997 _146801 h t P x)). Qed.
Lemma lem8425006 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term132 _146801 h t P x) = (term394 _146801 h t P x).
Proof. exact (@lem17265 (term122 _146801 h x t) (term130 _146801 h t P x)). Qed.
Lemma lem8425007 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term132 _146801 h t P x) = (term395 _146801 h t P x).
Proof. exact (TRANS (@lem8425006 _146801 h t P x) (@lem8425005 _146801 h t P x)). Qed.
Lemma lem8425008 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8425009 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term396 _146801 h t P) = (term397 _146801 h t P).
Proof. exact (@lem8425008 _146801 (term134 _146801 h t P)). Qed.
Lemma lem8425010 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term398 _146801 h t P x) = (term132 _146801 h t P x).
Proof. exact (eq_refl (term398 _146801 h t P x)). Qed.
Lemma lem8425011 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425012 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term399 _146801 h t P x) = (term393 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425011) (@lem8425010 _146801 h t P x)). Qed.
Lemma lem8425013 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term399 _146801 h t P x) = (term392 _146801 h t P x).
Proof. exact (TRANS (@lem8425012 _146801 h t P x) (@lem8425002 _146801 h t P x)). Qed.
Lemma lem8425014 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term400 _146801 h t P) = (term401 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425013 _146801 h t P x)). Qed.
Lemma lem8425015 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425016 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term397 _146801 h t P) = (term402 _146801 h t P).
Proof. exact (MK_COMB (@lem8425015 _146801) (@lem8425014 _146801 h t P)). Qed.
Lemma lem8425017 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term396 _146801 h t P) = (term402 _146801 h t P).
Proof. exact (TRANS (@lem8425009 _146801 h t P) (@lem8425016 _146801 h t P)). Qed.
Lemma lem8425018 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term134 _146801 h t P) = (term403 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425007 _146801 h t P x)). Qed.
Lemma lem8425019 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425020 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term135 _146801 h t P) = (term404 _146801 h t P).
Proof. exact (MK_COMB (@lem8425019 _146801) (@lem8425018 _146801 h t P)). Qed.
Lemma lem8425029 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term373 _146801 h x t) = (term374 _146801 h x t).
Proof. exact (@lem17160 (x = h) (@List.In _146801 x t)). Qed.
Lemma lem8425034 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (P x x).
Proof. exact (eq_refl (P x x)). Qed.
Lemma lem8425039 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term405 _146801 h t P x) = (term406 _146801 h t P x).
Proof. exact (@lem17362 (term122 _146801 h x t) (P x x)). Qed.
Lemma lem8425040 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425041 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term377 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (MK_COMB (@lem8425040) (@lem8425029 _146801 h x t)). Qed.
Lemma lem8425042 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term407 _146801 h t P x) = (term408 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425041 _146801 h x t) (@lem8425034 _146801 P x)). Qed.
Lemma lem8425043 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term139 _146801 h t P x) = (term407 _146801 h t P x).
Proof. exact (@lem17265 (term122 _146801 h x t) (P x x)). Qed.
Lemma lem8425044 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term139 _146801 h t P x) = (term408 _146801 h t P x).
Proof. exact (TRANS (@lem8425043 _146801 h t P x) (@lem8425042 _146801 h t P x)). Qed.
Lemma lem8425045 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8425046 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term409 _146801 h t P) = (term410 _146801 h t P).
Proof. exact (@lem8425045 _146801 (term141 _146801 h t P)). Qed.
Lemma lem8425047 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term411 _146801 h t P x) = (term139 _146801 h t P x).
Proof. exact (eq_refl (term411 _146801 h t P x)). Qed.
Lemma lem8425048 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425049 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term412 _146801 h t P x) = (term405 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425048) (@lem8425047 _146801 h t P x)). Qed.
Lemma lem8425050 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term412 _146801 h t P x) = (term406 _146801 h t P x).
Proof. exact (TRANS (@lem8425049 _146801 h t P x) (@lem8425039 _146801 h t P x)). Qed.
Lemma lem8425051 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term413 _146801 h t P) = (term414 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425050 _146801 h t P x)). Qed.
Lemma lem8425052 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425053 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term410 _146801 h t P) = (term415 _146801 h t P).
Proof. exact (MK_COMB (@lem8425052 _146801) (@lem8425051 _146801 h t P)). Qed.
Lemma lem8425054 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term409 _146801 h t P) = (term415 _146801 h t P).
Proof. exact (TRANS (@lem8425046 _146801 h t P) (@lem8425053 _146801 h t P)). Qed.
Lemma lem8425055 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term141 _146801 h t P) = (term416 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425044 _146801 h t P x)). Qed.
Lemma lem8425056 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425057 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term143 _146801 h t P) = (term417 _146801 h t P).
Proof. exact (MK_COMB (@lem8425056 _146801) (@lem8425055 _146801 h t P)). Qed.
Lemma lem8425066 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term186 _146801 t P h x) = (term187 _146801 t P h x).
Proof. exact (@lem17362 (@List.In _146801 x t) (P h x)). Qed.
Lemma lem8425071 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term28 _146801 t P h x) = (term188 _146801 t P h x).
Proof. exact (@lem17265 (@List.In _146801 x t) (P h x)). Qed.
Lemma lem8425072 {_146801 : Type'} (P : _146801 -> Prop) : (term189 _146801 P) = (term190 _146801 P).
Proof. exact (@lem18392 _146801 P). Qed.
Lemma lem8425073 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term191 _146801 t P h) = (term192 _146801 t P h).
Proof. exact (@lem8425072 _146801 (term26 _146801 t P h)). Qed.
Lemma lem8425074 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term27 _146801 t P h x) = (term28 _146801 t P h x).
Proof. exact (eq_refl (term27 _146801 t P h x)). Qed.
Lemma lem8425075 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425076 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term193 _146801 t P h x) = (term186 _146801 t P h x).
Proof. exact (MK_COMB (@lem8425075) (@lem8425074 _146801 t P h x)). Qed.
Lemma lem8425077 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term193 _146801 t P h x) = (term187 _146801 t P h x).
Proof. exact (TRANS (@lem8425076 _146801 t P h x) (@lem8425066 _146801 t P h x)). Qed.
Lemma lem8425078 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term194 _146801 t P h) = (term195 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8425077 _146801 t P h x)). Qed.
Lemma lem8425079 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425080 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term192 _146801 t P h) = (term196 _146801 t P h).
Proof. exact (MK_COMB (@lem8425079 _146801) (@lem8425078 _146801 t P h)). Qed.
Lemma lem8425081 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term191 _146801 t P h) = (term196 _146801 t P h).
Proof. exact (TRANS (@lem8425073 _146801 t P h) (@lem8425080 _146801 t P h)). Qed.
Lemma lem8425082 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term26 _146801 t P h) = (term197 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8425071 _146801 t P h x)). Qed.
Lemma lem8425083 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425084 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term36 _146801 t P h) = (term198 _146801 t P h).
Proof. exact (MK_COMB (@lem8425083 _146801) (@lem8425082 _146801 t P h)). Qed.
Lemma lem8425085 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8425086 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8425087 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425088 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term418 _146801 t P h) = (term419 _146801 t P h).
Proof. exact (MK_COMB (@lem8425087) (@lem8425081 _146801 t P h)). Qed.
Lemma lem8425089 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term420 _146801 h P t) = (term421 _146801 h P t).
Proof. exact (MK_COMB (@lem8425088 _146801 t P h) (@lem8425085 _146801 P t)). Qed.
Lemma lem8425090 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term422 _146801 h P t) = (term420 _146801 h P t).
Proof. exact (@lem17045 (term36 _146801 t P h) (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8425091 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term422 _146801 h P t) = (term421 _146801 h P t).
Proof. exact (TRANS (@lem8425090 _146801 h P t) (@lem8425089 _146801 h P t)). Qed.
Lemma lem8425092 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425093 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term150 _146801 t P h) = (term423 _146801 t P h).
Proof. exact (MK_COMB (@lem8425092) (@lem8425084 _146801 t P h)). Qed.
Lemma lem8425094 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term151 _146801 h P t) = (term424 _146801 h P t).
Proof. exact (MK_COMB (@lem8425093 _146801 t P h) (@lem8425086 _146801 P t)). Qed.
Lemma lem8425095 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425096 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term425 _146801 h t P) = (term426 _146801 h t P).
Proof. exact (MK_COMB (@lem8425095) (@lem8425054 _146801 h t P)). Qed.
Lemma lem8425097 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term427 _146801 h P t) = (term428 _146801 h P t).
Proof. exact (MK_COMB (@lem8425096 _146801 h t P) (@lem8425091 _146801 h P t)). Qed.
Lemma lem8425098 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term429 _146801 h P t) = (term427 _146801 h P t).
Proof. exact (@lem17045 (term143 _146801 h t P) (term151 _146801 h P t)). Qed.
Lemma lem8425099 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term429 _146801 h P t) = (term428 _146801 h P t).
Proof. exact (TRANS (@lem8425098 _146801 h P t) (@lem8425097 _146801 h P t)). Qed.
Lemma lem8425100 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425101 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term145 _146801 h t P) = (term430 _146801 h t P).
Proof. exact (MK_COMB (@lem8425100) (@lem8425057 _146801 h t P)). Qed.
Lemma lem8425102 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term152 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (MK_COMB (@lem8425101 _146801 h t P) (@lem8425094 _146801 h P t)). Qed.
Lemma lem8425103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425104 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term432 _146801 h t P) = (term433 _146801 h t P).
Proof. exact (MK_COMB (@lem8425103) (@lem8425017 _146801 h t P)). Qed.
Lemma lem8425105 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term434 _146801 h P t) = (term435 _146801 h P t).
Proof. exact (MK_COMB (@lem8425104 _146801 h t P) (@lem8425102 _146801 h P t)). Qed.
Lemma lem8425106 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425107 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term436 _146801 h t P) = (term437 _146801 h t P).
Proof. exact (MK_COMB (@lem8425106) (@lem8425020 _146801 h t P)). Qed.
Lemma lem8425108 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term438 _146801 h P t) = (term439 _146801 h P t).
Proof. exact (MK_COMB (@lem8425107 _146801 h t P) (@lem8425099 _146801 h P t)). Qed.
Lemma lem8425109 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425110 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term440 _146801 h P t) = (term441 _146801 h P t).
Proof. exact (MK_COMB (@lem8425109) (@lem8425108 _146801 h P t)). Qed.
Lemma lem8425111 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term442 _146801 h P t) = (term443 _146801 h P t).
Proof. exact (MK_COMB (@lem8425110 _146801 h P t) (@lem8425105 _146801 h P t)). Qed.
Lemma lem8425112 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term155 _146801 h P t) = (term442 _146801 h P t).
Proof. exact (@lem17646 (term135 _146801 h t P) (term152 _146801 h P t)). Qed.
Lemma lem8425113 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term155 _146801 h P t) = (term443 _146801 h P t).
Proof. exact (TRANS (@lem8425112 _146801 h P t) (@lem8425111 _146801 h P t)). Qed.
Lemma lem8425500 {A : Type'} (P : A -> Prop) (Q : Prop) : (term264 A P Q) = (term265 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8425501 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term264 _146801 P Q) = (term265 _146801 P Q).
Proof. exact (@lem8425500 _146801 P Q). Qed.
Lemma lem8425502 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term444 _146801 h P t) = (term445 _146801 h P t).
Proof. exact (@lem8425501 _146801 (term195 _146801 t P h) (term227 _146801 P t)). Qed.
Lemma lem8425503 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term251 _146801 t P h x) = (term187 _146801 t P h x).
Proof. exact (eq_refl (term251 _146801 t P h x)). Qed.
Lemma lem8425504 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term252 _146801 t P h) = (term195 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8425503 _146801 t P h x)). Qed.
Lemma lem8425505 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425506 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term253 _146801 t P h) = (term196 _146801 t P h).
Proof. exact (MK_COMB (@lem8425505 _146801) (@lem8425504 _146801 t P h)). Qed.
Lemma lem8425507 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425508 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term446 _146801 t P h) = (term419 _146801 t P h).
Proof. exact (MK_COMB (@lem8425507) (@lem8425506 _146801 t P h)). Qed.
Lemma lem8425509 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8425510 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term444 _146801 h P t) = (term421 _146801 h P t).
Proof. exact (MK_COMB (@lem8425508 _146801 t P h) (@lem8425509 _146801 P t)). Qed.
Lemma lem8425511 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425512 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term447 _146801 h P t) = (term448 _146801 h P t).
Proof. exact (MK_COMB (@lem8425511) (@lem8425510 _146801 h P t)). Qed.
Lemma lem8425513 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term251 _146801 t P h x) = (term187 _146801 t P h x).
Proof. exact (eq_refl (term251 _146801 t P h x)). Qed.
Lemma lem8425514 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425515 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term449 _146801 t P h x) = (term450 _146801 t P h x).
Proof. exact (MK_COMB (@lem8425514) (@lem8425513 _146801 t P h x)). Qed.
Lemma lem8425516 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8425517 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term451 _146801 h x P t) = (term452 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425515 _146801 t P h x) (@lem8425516 _146801 P t)). Qed.
Lemma lem8425518 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term453 _146801 h P t) = (term454 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425517 _146801 h x P t)). Qed.
Lemma lem8425519 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425520 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term445 _146801 h P t) = (term455 _146801 h P t).
Proof. exact (MK_COMB (@lem8425519 _146801) (@lem8425518 _146801 h P t)). Qed.
Lemma lem8425521 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term444 _146801 h P t) = (term445 _146801 h P t)) = ((term421 _146801 h P t) = (term455 _146801 h P t)).
Proof. exact (MK_COMB (@lem8425512 _146801 h P t) (@lem8425520 _146801 h P t)). Qed.
Lemma lem8425522 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term421 _146801 h P t) = (term455 _146801 h P t).
Proof. exact (EQ_MP (@lem8425521 _146801 h P t) (@lem8425502 _146801 h P t)). Qed.
Lemma lem8425523 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term426 _146801 h t P) = (term426 _146801 h t P).
Proof. exact (eq_refl (term426 _146801 h t P)). Qed.
Lemma lem8425524 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term428 _146801 h P t) = (term456 _146801 h P t).
Proof. exact (MK_COMB (@lem8425523 _146801 h t P) (@lem8425522 _146801 h P t)). Qed.
Lemma lem8425526 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term457 A P Q) = (term458 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8425527 {_146801 : Type'} (P : _146801 -> Prop) (Q : _146801 -> Prop) : (term457 _146801 P Q) = (term458 _146801 P Q).
Proof. exact (@lem8425526 _146801 P Q). Qed.
Lemma lem8425528 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term459 _146801 h P t) = (term460 _146801 h P t).
Proof. exact (@lem8425527 _146801 (term414 _146801 h t P) (term454 _146801 h P t)). Qed.
Lemma lem8425529 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term461 _146801 h t P x) = (term406 _146801 h t P x).
Proof. exact (eq_refl (term461 _146801 h t P x)). Qed.
Lemma lem8425530 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term462 _146801 h t P) = (term414 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425529 _146801 h t P x)). Qed.
Lemma lem8425531 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425532 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term463 _146801 h t P) = (term415 _146801 h t P).
Proof. exact (MK_COMB (@lem8425531 _146801) (@lem8425530 _146801 h t P)). Qed.
Lemma lem8425533 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425534 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term464 _146801 h t P) = (term426 _146801 h t P).
Proof. exact (MK_COMB (@lem8425533) (@lem8425532 _146801 h t P)). Qed.
Lemma lem8425535 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term465 _146801 h P t x) = (term452 _146801 h x P t).
Proof. exact (eq_refl (term465 _146801 h P t x)). Qed.
Lemma lem8425536 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term466 _146801 h P t) = (term454 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425535 _146801 h x P t)). Qed.
Lemma lem8425537 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425538 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term467 _146801 h P t) = (term455 _146801 h P t).
Proof. exact (MK_COMB (@lem8425537 _146801) (@lem8425536 _146801 h P t)). Qed.
Lemma lem8425539 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term459 _146801 h P t) = (term456 _146801 h P t).
Proof. exact (MK_COMB (@lem8425534 _146801 h t P) (@lem8425538 _146801 h P t)). Qed.
Lemma lem8425540 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425541 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term468 _146801 h P t) = (term469 _146801 h P t).
Proof. exact (MK_COMB (@lem8425540) (@lem8425539 _146801 h P t)). Qed.
Lemma lem8425542 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term461 _146801 h t P x) = (term406 _146801 h t P x).
Proof. exact (eq_refl (term461 _146801 h t P x)). Qed.
Lemma lem8425543 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425544 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term470 _146801 h t P x) = (term471 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425543) (@lem8425542 _146801 h t P x)). Qed.
Lemma lem8425545 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term465 _146801 h P t x) = (term452 _146801 h x P t).
Proof. exact (eq_refl (term465 _146801 h P t x)). Qed.
Lemma lem8425546 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term472 _146801 h P t x) = (term473 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425544 _146801 h t P x) (@lem8425545 _146801 h x P t)). Qed.
Lemma lem8425547 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term474 _146801 h P t) = (term475 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425546 _146801 h x P t)). Qed.
Lemma lem8425548 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425549 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term460 _146801 h P t) = (term476 _146801 h P t).
Proof. exact (MK_COMB (@lem8425548 _146801) (@lem8425547 _146801 h P t)). Qed.
Lemma lem8425550 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term459 _146801 h P t) = (term460 _146801 h P t)) = ((term456 _146801 h P t) = (term476 _146801 h P t)).
Proof. exact (MK_COMB (@lem8425541 _146801 h P t) (@lem8425549 _146801 h P t)). Qed.
Lemma lem8425551 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term456 _146801 h P t) = (term476 _146801 h P t).
Proof. exact (EQ_MP (@lem8425550 _146801 h P t) (@lem8425528 _146801 h P t)). Qed.
Lemma lem8425552 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term428 _146801 h P t) = (term476 _146801 h P t).
Proof. exact (TRANS (@lem8425524 _146801 h P t) (@lem8425551 _146801 h P t)). Qed.
Lemma lem8425553 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term437 _146801 h t P) = (term437 _146801 h t P).
Proof. exact (eq_refl (term437 _146801 h t P)). Qed.
Lemma lem8425554 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term439 _146801 h P t) = (term477 _146801 h P t).
Proof. exact (MK_COMB (@lem8425553 _146801 h t P) (@lem8425552 _146801 h P t)). Qed.
Lemma lem8425556 {A : Type'} (P : Prop) (Q : A -> Prop) : (term247 A P Q) = (term248 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8425557 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term247 _146801 P Q) = (term248 _146801 P Q).
Proof. exact (@lem8425556 _146801 P Q). Qed.
Lemma lem8425558 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term478 _146801 h P t) = (term479 _146801 h P t).
Proof. exact (@lem8425557 _146801 (term404 _146801 h t P) (term475 _146801 h P t)). Qed.
Lemma lem8425559 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term480 _146801 h P t x) = (term473 _146801 h x P t).
Proof. exact (eq_refl (term480 _146801 h P t x)). Qed.
Lemma lem8425560 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term481 _146801 h P t) = (term475 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425559 _146801 h x P t)). Qed.
Lemma lem8425561 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425562 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term482 _146801 h P t) = (term476 _146801 h P t).
Proof. exact (MK_COMB (@lem8425561 _146801) (@lem8425560 _146801 h P t)). Qed.
Lemma lem8425563 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term437 _146801 h t P) = (term437 _146801 h t P).
Proof. exact (eq_refl (term437 _146801 h t P)). Qed.
Lemma lem8425564 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term478 _146801 h P t) = (term477 _146801 h P t).
Proof. exact (MK_COMB (@lem8425563 _146801 h t P) (@lem8425562 _146801 h P t)). Qed.
Lemma lem8425565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425566 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term483 _146801 h P t) = (term484 _146801 h P t).
Proof. exact (MK_COMB (@lem8425565) (@lem8425564 _146801 h P t)). Qed.
Lemma lem8425567 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term480 _146801 h P t x) = (term473 _146801 h x P t).
Proof. exact (eq_refl (term480 _146801 h P t x)). Qed.
Lemma lem8425568 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term437 _146801 h t P) = (term437 _146801 h t P).
Proof. exact (eq_refl (term437 _146801 h t P)). Qed.
Lemma lem8425569 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term485 _146801 h P t x) = (term486 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425568 _146801 h t P) (@lem8425567 _146801 h x P t)). Qed.
Lemma lem8425570 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term487 _146801 h P t) = (term488 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425569 _146801 h x P t)). Qed.
Lemma lem8425571 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425572 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term479 _146801 h P t) = (term489 _146801 h P t).
Proof. exact (MK_COMB (@lem8425571 _146801) (@lem8425570 _146801 h P t)). Qed.
Lemma lem8425573 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term478 _146801 h P t) = (term479 _146801 h P t)) = ((term477 _146801 h P t) = (term489 _146801 h P t)).
Proof. exact (MK_COMB (@lem8425566 _146801 h P t) (@lem8425572 _146801 h P t)). Qed.
Lemma lem8425574 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term477 _146801 h P t) = (term489 _146801 h P t).
Proof. exact (EQ_MP (@lem8425573 _146801 h P t) (@lem8425558 _146801 h P t)). Qed.
Lemma lem8425575 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term439 _146801 h P t) = (term489 _146801 h P t).
Proof. exact (TRANS (@lem8425554 _146801 h P t) (@lem8425574 _146801 h P t)). Qed.
Lemma lem8425576 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425577 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term441 _146801 h P t) = (term490 _146801 h P t).
Proof. exact (MK_COMB (@lem8425576) (@lem8425575 _146801 h P t)). Qed.
Lemma lem8425579 {A : Type'} (P : Prop) (Q : A -> Prop) : (term247 A P Q) = (term248 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8425580 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term247 _146801 P Q) = (term248 _146801 P Q).
Proof. exact (@lem8425579 _146801 P Q). Qed.
Lemma lem8425581 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term491 _146801 h t P x) = (term492 _146801 h t P x).
Proof. exact (@lem8425580 _146801 (term122 _146801 h x t) (term386 _146801 h t P x)). Qed.
Lemma lem8425582 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term493 _146801 h t P x y) = (term376 _146801 h t P x y).
Proof. exact (eq_refl (term493 _146801 h t P x y)). Qed.
Lemma lem8425583 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term494 _146801 h t P x) = (term386 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8425582 _146801 h t P x y)). Qed.
Lemma lem8425584 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425585 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term495 _146801 h t P x) = (term387 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425584 _146801) (@lem8425583 _146801 h t P x)). Qed.
Lemma lem8425586 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term390 _146801 h x t) = (term390 _146801 h x t).
Proof. exact (eq_refl (term390 _146801 h x t)). Qed.
Lemma lem8425587 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term491 _146801 h t P x) = (term392 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425586 _146801 h x t) (@lem8425585 _146801 h t P x)). Qed.
Lemma lem8425588 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425589 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term496 _146801 h t P x) = (term497 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425588) (@lem8425587 _146801 h t P x)). Qed.
Lemma lem8425590 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term493 _146801 h t P x y) = (term376 _146801 h t P x y).
Proof. exact (eq_refl (term493 _146801 h t P x y)). Qed.
Lemma lem8425591 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term390 _146801 h x t) = (term390 _146801 h x t).
Proof. exact (eq_refl (term390 _146801 h x t)). Qed.
Lemma lem8425592 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term498 _146801 h t P x y) = (term499 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8425591 _146801 h x t) (@lem8425590 _146801 h t P x y)). Qed.
Lemma lem8425593 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term500 _146801 h t P x) = (term501 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8425592 _146801 h t P x y)). Qed.
Lemma lem8425594 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425595 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term492 _146801 h t P x) = (term502 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425594 _146801) (@lem8425593 _146801 h t P x)). Qed.
Lemma lem8425596 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term491 _146801 h t P x) = (term492 _146801 h t P x)) = ((term392 _146801 h t P x) = (term502 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8425589 _146801 h t P x) (@lem8425595 _146801 h t P x)). Qed.
Lemma lem8425597 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term392 _146801 h t P x) = (term502 _146801 h t P x).
Proof. exact (EQ_MP (@lem8425596 _146801 h t P x) (@lem8425581 _146801 h t P x)). Qed.
Lemma lem8425598 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term401 _146801 h t P) = (term503 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425597 _146801 h t P x)). Qed.
Lemma lem8425599 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425600 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term402 _146801 h t P) = (term504 _146801 h t P).
Proof. exact (MK_COMB (@lem8425599 _146801) (@lem8425598 _146801 h t P)). Qed.
Lemma lem8425601 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425602 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term433 _146801 h t P) = (term505 _146801 h t P).
Proof. exact (MK_COMB (@lem8425601) (@lem8425600 _146801 h t P)). Qed.
Lemma lem8425603 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (eq_refl (term431 _146801 h P t)). Qed.
Lemma lem8425604 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term435 _146801 h P t) = (term506 _146801 h P t).
Proof. exact (MK_COMB (@lem8425602 _146801 h t P) (@lem8425603 _146801 h P t)). Qed.
Lemma lem8425606 {A : Type'} (P : A -> Prop) (Q : Prop) : (term282 A P Q) = (term283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8425607 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term282 _146801 P Q) = (term283 _146801 P Q).
Proof. exact (@lem8425606 _146801 P Q). Qed.
Lemma lem8425608 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term507 _146801 h P t) = (term508 _146801 h P t).
Proof. exact (@lem8425607 _146801 (term503 _146801 h t P) (term431 _146801 h P t)). Qed.
Lemma lem8425609 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term509 _146801 h t P x) = (term502 _146801 h t P x).
Proof. exact (eq_refl (term509 _146801 h t P x)). Qed.
Lemma lem8425610 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term510 _146801 h t P) = (term503 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425609 _146801 h t P x)). Qed.
Lemma lem8425611 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425612 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term511 _146801 h t P) = (term504 _146801 h t P).
Proof. exact (MK_COMB (@lem8425611 _146801) (@lem8425610 _146801 h t P)). Qed.
Lemma lem8425613 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425614 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term512 _146801 h t P) = (term505 _146801 h t P).
Proof. exact (MK_COMB (@lem8425613) (@lem8425612 _146801 h t P)). Qed.
Lemma lem8425615 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (eq_refl (term431 _146801 h P t)). Qed.
Lemma lem8425616 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term507 _146801 h P t) = (term506 _146801 h P t).
Proof. exact (MK_COMB (@lem8425614 _146801 h t P) (@lem8425615 _146801 h P t)). Qed.
Lemma lem8425617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425618 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term513 _146801 h P t) = (term514 _146801 h P t).
Proof. exact (MK_COMB (@lem8425617) (@lem8425616 _146801 h P t)). Qed.
Lemma lem8425619 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term509 _146801 h t P x) = (term502 _146801 h t P x).
Proof. exact (eq_refl (term509 _146801 h t P x)). Qed.
Lemma lem8425620 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425621 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term515 _146801 h t P x) = (term516 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425620) (@lem8425619 _146801 h t P x)). Qed.
Lemma lem8425622 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (eq_refl (term431 _146801 h P t)). Qed.
Lemma lem8425623 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term517 _146801 x h P t) = (term518 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425621 _146801 h t P x) (@lem8425622 _146801 h P t)). Qed.
Lemma lem8425624 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term519 _146801 h P t) = (term520 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425623 _146801 x h P t)). Qed.
Lemma lem8425625 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425626 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term508 _146801 h P t) = (term521 _146801 h P t).
Proof. exact (MK_COMB (@lem8425625 _146801) (@lem8425624 _146801 h P t)). Qed.
Lemma lem8425627 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term507 _146801 h P t) = (term508 _146801 h P t)) = ((term506 _146801 h P t) = (term521 _146801 h P t)).
Proof. exact (MK_COMB (@lem8425618 _146801 h P t) (@lem8425626 _146801 h P t)). Qed.
Lemma lem8425628 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term506 _146801 h P t) = (term521 _146801 h P t).
Proof. exact (EQ_MP (@lem8425627 _146801 h P t) (@lem8425608 _146801 h P t)). Qed.
Lemma lem8425630 {A : Type'} (P : A -> Prop) (Q : Prop) : (term282 A P Q) = (term283 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8425631 {_146801 : Type'} (P : _146801 -> Prop) (Q : Prop) : (term282 _146801 P Q) = (term283 _146801 P Q).
Proof. exact (@lem8425630 _146801 P Q). Qed.
Lemma lem8425632 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term522 _146801 x h P t) = (term523 _146801 x h P t).
Proof. exact (@lem8425631 _146801 (term501 _146801 h t P x) (term431 _146801 h P t)). Qed.
Lemma lem8425633 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term524 _146801 h t P x y) = (term499 _146801 h t P x y).
Proof. exact (eq_refl (term524 _146801 h t P x y)). Qed.
Lemma lem8425634 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term525 _146801 h t P x) = (term501 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8425633 _146801 h t P x y)). Qed.
Lemma lem8425635 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425636 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term526 _146801 h t P x) = (term502 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425635 _146801) (@lem8425634 _146801 h t P x)). Qed.
Lemma lem8425637 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425638 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term527 _146801 h t P x) = (term516 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425637) (@lem8425636 _146801 h t P x)). Qed.
Lemma lem8425639 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (eq_refl (term431 _146801 h P t)). Qed.
Lemma lem8425640 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term522 _146801 x h P t) = (term518 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425638 _146801 h t P x) (@lem8425639 _146801 h P t)). Qed.
Lemma lem8425641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425642 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term528 _146801 x h P t) = (term529 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425641) (@lem8425640 _146801 x h P t)). Qed.
Lemma lem8425643 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term524 _146801 h t P x y) = (term499 _146801 h t P x y).
Proof. exact (eq_refl (term524 _146801 h t P x y)). Qed.
Lemma lem8425644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425645 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term530 _146801 h t P x y) = (term531 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8425644) (@lem8425643 _146801 h t P x y)). Qed.
Lemma lem8425646 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term431 _146801 h P t).
Proof. exact (eq_refl (term431 _146801 h P t)). Qed.
Lemma lem8425647 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term532 _146801 x y h P t) = (term533 _146801 x y h P t).
Proof. exact (MK_COMB (@lem8425645 _146801 h t P x y) (@lem8425646 _146801 h P t)). Qed.
Lemma lem8425648 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term534 _146801 x h P t) = (term535 _146801 x h P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8425647 _146801 x y h P t)). Qed.
Lemma lem8425649 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425650 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term523 _146801 x h P t) = (term536 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425649 _146801) (@lem8425648 _146801 x h P t)). Qed.
Lemma lem8425651 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term522 _146801 x h P t) = (term523 _146801 x h P t)) = ((term518 _146801 x h P t) = (term536 _146801 x h P t)).
Proof. exact (MK_COMB (@lem8425642 _146801 x h P t) (@lem8425650 _146801 x h P t)). Qed.
Lemma lem8425652 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term518 _146801 x h P t) = (term536 _146801 x h P t).
Proof. exact (EQ_MP (@lem8425651 _146801 x h P t) (@lem8425632 _146801 x h P t)). Qed.
Lemma lem8425653 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term520 _146801 h P t) = (term537 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425652 _146801 x h P t)). Qed.
Lemma lem8425654 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425655 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term521 _146801 h P t) = (term538 _146801 h P t).
Proof. exact (MK_COMB (@lem8425654 _146801) (@lem8425653 _146801 h P t)). Qed.
Lemma lem8425656 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term506 _146801 h P t) = (term538 _146801 h P t).
Proof. exact (TRANS (@lem8425628 _146801 h P t) (@lem8425655 _146801 h P t)). Qed.
Lemma lem8425657 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term435 _146801 h P t) = (term538 _146801 h P t).
Proof. exact (TRANS (@lem8425604 _146801 h P t) (@lem8425656 _146801 h P t)). Qed.
Lemma lem8425658 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term443 _146801 h P t) = (term539 _146801 h P t).
Proof. exact (MK_COMB (@lem8425577 _146801 h P t) (@lem8425657 _146801 h P t)). Qed.
Lemma lem8425660 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term457 A P Q) = (term458 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8425661 {_146801 : Type'} (P : _146801 -> Prop) (Q : _146801 -> Prop) : (term457 _146801 P Q) = (term458 _146801 P Q).
Proof. exact (@lem8425660 _146801 P Q). Qed.
Lemma lem8425662 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term540 _146801 h P t) = (term541 _146801 h P t).
Proof. exact (@lem8425661 _146801 (term488 _146801 h P t) (term537 _146801 h P t)). Qed.
Lemma lem8425663 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term542 _146801 h P t x) = (term486 _146801 h x P t).
Proof. exact (eq_refl (term542 _146801 h P t x)). Qed.
Lemma lem8425664 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term543 _146801 h P t) = (term488 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425663 _146801 h x P t)). Qed.
Lemma lem8425665 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425666 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term544 _146801 h P t) = (term489 _146801 h P t).
Proof. exact (MK_COMB (@lem8425665 _146801) (@lem8425664 _146801 h P t)). Qed.
Lemma lem8425667 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425668 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term545 _146801 h P t) = (term490 _146801 h P t).
Proof. exact (MK_COMB (@lem8425667) (@lem8425666 _146801 h P t)). Qed.
Lemma lem8425669 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term546 _146801 h P t x) = (term536 _146801 x h P t).
Proof. exact (eq_refl (term546 _146801 h P t x)). Qed.
Lemma lem8425670 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term547 _146801 h P t) = (term537 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425669 _146801 x h P t)). Qed.
Lemma lem8425671 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425672 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term548 _146801 h P t) = (term538 _146801 h P t).
Proof. exact (MK_COMB (@lem8425671 _146801) (@lem8425670 _146801 h P t)). Qed.
Lemma lem8425673 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term540 _146801 h P t) = (term539 _146801 h P t).
Proof. exact (MK_COMB (@lem8425668 _146801 h P t) (@lem8425672 _146801 h P t)). Qed.
Lemma lem8425674 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425675 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term549 _146801 h P t) = (term550 _146801 h P t).
Proof. exact (MK_COMB (@lem8425674) (@lem8425673 _146801 h P t)). Qed.
Lemma lem8425676 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term542 _146801 h P t x) = (term486 _146801 h x P t).
Proof. exact (eq_refl (term542 _146801 h P t x)). Qed.
Lemma lem8425677 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425678 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term551 _146801 h P t x) = (term552 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425677) (@lem8425676 _146801 h x P t)). Qed.
Lemma lem8425679 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term546 _146801 h P t x) = (term536 _146801 x h P t).
Proof. exact (eq_refl (term546 _146801 h P t x)). Qed.
Lemma lem8425680 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term553 _146801 h P t x) = (term554 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425678 _146801 h x P t) (@lem8425679 _146801 x h P t)). Qed.
Lemma lem8425681 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term555 _146801 h P t) = (term556 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425680 _146801 x h P t)). Qed.
Lemma lem8425682 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425683 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term541 _146801 h P t) = (term557 _146801 h P t).
Proof. exact (MK_COMB (@lem8425682 _146801) (@lem8425681 _146801 h P t)). Qed.
Lemma lem8425684 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term540 _146801 h P t) = (term541 _146801 h P t)) = ((term539 _146801 h P t) = (term557 _146801 h P t)).
Proof. exact (MK_COMB (@lem8425675 _146801 h P t) (@lem8425683 _146801 h P t)). Qed.
Lemma lem8425685 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term539 _146801 h P t) = (term557 _146801 h P t).
Proof. exact (EQ_MP (@lem8425684 _146801 h P t) (@lem8425662 _146801 h P t)). Qed.
Lemma lem8425687 {A : Type'} (P : Prop) (Q : A -> Prop) : (term331 A P Q) = (term332 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8425688 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term331 _146801 P Q) = (term332 _146801 P Q).
Proof. exact (@lem8425687 _146801 P Q). Qed.
Lemma lem8425689 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term558 _146801 x h P t) = (term559 _146801 x h P t).
Proof. exact (@lem8425688 _146801 (term486 _146801 h x P t) (term535 _146801 x h P t)). Qed.
Lemma lem8425690 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term560 _146801 x h P t y) = (term533 _146801 x y h P t).
Proof. exact (eq_refl (term560 _146801 x h P t y)). Qed.
Lemma lem8425691 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term561 _146801 x h P t) = (term535 _146801 x h P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8425690 _146801 x y h P t)). Qed.
Lemma lem8425692 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425693 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term562 _146801 x h P t) = (term536 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425692 _146801) (@lem8425691 _146801 x h P t)). Qed.
Lemma lem8425694 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term552 _146801 h x P t) = (term552 _146801 h x P t).
Proof. exact (eq_refl (term552 _146801 h x P t)). Qed.
Lemma lem8425695 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term558 _146801 x h P t) = (term554 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425694 _146801 h x P t) (@lem8425693 _146801 x h P t)). Qed.
Lemma lem8425696 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8425697 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term563 _146801 x h P t) = (term564 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425696) (@lem8425695 _146801 x h P t)). Qed.
Lemma lem8425698 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term560 _146801 x h P t y) = (term533 _146801 x y h P t).
Proof. exact (eq_refl (term560 _146801 x h P t y)). Qed.
Lemma lem8425699 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term552 _146801 h x P t) = (term552 _146801 h x P t).
Proof. exact (eq_refl (term552 _146801 h x P t)). Qed.
Lemma lem8425700 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term565 _146801 x h P t y) = (term566 _146801 x y h P t).
Proof. exact (MK_COMB (@lem8425699 _146801 h x P t) (@lem8425698 _146801 x y h P t)). Qed.
Lemma lem8425701 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term567 _146801 x h P t) = (term568 _146801 x h P t).
Proof. exact (fun_ext (fun y : _146801 => @lem8425700 _146801 x y h P t)). Qed.
Lemma lem8425702 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425703 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term559 _146801 x h P t) = (term569 _146801 x h P t).
Proof. exact (MK_COMB (@lem8425702 _146801) (@lem8425701 _146801 x h P t)). Qed.
Lemma lem8425704 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : ((term558 _146801 x h P t) = (term559 _146801 x h P t)) = ((term554 _146801 x h P t) = (term569 _146801 x h P t)).
Proof. exact (MK_COMB (@lem8425697 _146801 x h P t) (@lem8425703 _146801 x h P t)). Qed.
Lemma lem8425705 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term554 _146801 x h P t) = (term569 _146801 x h P t).
Proof. exact (EQ_MP (@lem8425704 _146801 x h P t) (@lem8425689 _146801 x h P t)). Qed.
Lemma lem8425706 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term556 _146801 h P t) = (term570 _146801 h P t).
Proof. exact (fun_ext (fun x : _146801 => @lem8425705 _146801 x h P t)). Qed.
Lemma lem8425707 {_146801 : Type'} : (@ex _146801) = (@ex _146801).
Proof. exact (eq_refl (@ex _146801)). Qed.
Lemma lem8425708 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term557 _146801 h P t) = (term571 _146801 h P t).
Proof. exact (MK_COMB (@lem8425707 _146801) (@lem8425706 _146801 h P t)). Qed.
Lemma lem8425709 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term539 _146801 h P t) = (term571 _146801 h P t).
Proof. exact (TRANS (@lem8425685 _146801 h P t) (@lem8425708 _146801 h P t)). Qed.
Lemma lem8425711 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term443 _146801 h P t) = (term571 _146801 h P t).
Proof. exact (TRANS (@lem8425658 _146801 h P t) (@lem8425709 _146801 h P t)). Qed.
Lemma lem8425712 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term155 _146801 h P t) = (term571 _146801 h P t).
Proof. exact (TRANS (@lem8425113 _146801 h P t) (@lem8425711 _146801 h P t)). Qed.
Lemma lem8425713 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term155 _146801 h P t) : term571 _146801 h P t.
Proof. exact (EQ_MP (@lem8425712 _146801 h P t) (@lem8424288 _146801 h P t h1)). Qed.
Lemma lem8425714 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term569 _146801 x h P t) : term569 _146801 x h P t.
Proof. exact (h1). Qed.
Lemma lem8425715 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term566 _146801 x y h P t) : term566 _146801 x y h P t.
Proof. exact (h1). Qed.
Lemma lem8425716 {_146801 : Type'} (x' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term370 _146801 x' P t) : term370 _146801 x' P t.
Proof. exact (h1). Qed.
Lemma lem8425717 {_146801 : Type'} (x' : _146801) (y' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term368 _146801 x' y' P t) : term368 _146801 x' y' P t.
Proof. exact (h1). Qed.
Lemma lem8425718 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term365 _146801 x' y' x'' P t) : term365 _146801 x' y' x'' P t.
Proof. exact (h1). Qed.
Lemma lem8425725 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425726 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425725 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425727 {_146801 : Type'} (P : type1402 _146801) (y : _146801) : (P y) = (@I (_146801 -> _146801 -> Prop) P y).
Proof. exact (@lem8425726 _146801 P y). Qed.
Lemma lem8425728 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8425729 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (P y x) = (@I (_146801 -> _146801 -> Prop) P y x).
Proof. exact (MK_COMB (@lem8425727 _146801 P y) (@lem8425728 _146801 x)). Qed.
Lemma lem8425731 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425732 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425731 _146801 Prop f x). Qed.
Lemma lem8425733 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P y x) = (term572 _146801 P y x).
Proof. exact (@lem8425732 _146801 (@I (_146801 -> _146801 -> Prop) P y) x). Qed.
Lemma lem8425735 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (P y x) = (term572 _146801 P y x).
Proof. exact (TRANS (@lem8425729 _146801 P y x) (@lem8425733 _146801 P y x)). Qed.
Lemma lem8425736 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425743 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425744 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425743 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425745 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8425744 _146801 P x). Qed.
Lemma lem8425746 {_146801 : Type'} (y : _146801) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem8425747 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (@I (_146801 -> _146801 -> Prop) P x y).
Proof. exact (MK_COMB (@lem8425745 _146801 P x) (@lem8425746 _146801 y)). Qed.
Lemma lem8425749 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425750 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425749 _146801 Prop f x). Qed.
Lemma lem8425751 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (@I (_146801 -> _146801 -> Prop) P x y) = (term572 _146801 P x y).
Proof. exact (@lem8425750 _146801 (@I (_146801 -> _146801 -> Prop) P x) y). Qed.
Lemma lem8425753 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (term572 _146801 P x y).
Proof. exact (TRANS (@lem8425747 _146801 P x y) (@lem8425751 _146801 P x y)). Qed.
Lemma lem8425754 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term573 _146801 P x y) = (term574 _146801 P x y).
Proof. exact (MK_COMB (@lem8425736) (@lem8425753 _146801 P x y)). Qed.
Lemma lem8425755 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425756 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term575 _146801 P x y) = (term576 _146801 P x y).
Proof. exact (MK_COMB (@lem8425755) (@lem8425754 _146801 P x y)). Qed.
Lemma lem8425757 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term181 _146801 P y x) = (term577 _146801 P y x).
Proof. exact (MK_COMB (@lem8425756 _146801 P x y) (@lem8425735 _146801 P y x)). Qed.
Lemma lem8425758 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term182 _146801 P x) = (term578 _146801 P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8425757 _146801 P y x)). Qed.
Lemma lem8425759 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425760 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term183 _146801 P x) = (term579 _146801 P x).
Proof. exact (MK_COMB (@lem8425759 _146801) (@lem8425758 _146801 P x)). Qed.
Lemma lem8425761 {_146801 : Type'} (P : type1402 _146801) : (term184 _146801 P) = (term580 _146801 P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425760 _146801 P x)). Qed.
Lemma lem8425762 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425763 {_146801 : Type'} (P : type1402 _146801) : (term185 _146801 P) = (term581 _146801 P).
Proof. exact (MK_COMB (@lem8425762 _146801) (@lem8425761 _146801 P)). Qed.
Lemma lem8425764 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term581 _146801 P.
Proof. exact (EQ_MP (@lem8425763 _146801 P) (@lem8424358 _146801 P h1)). Qed.
Lemma lem8425769 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8425776 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425777 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425776 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425778 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (P h) = (@I (_146801 -> _146801 -> Prop) P h).
Proof. exact (@lem8425777 _146801 P h). Qed.
Lemma lem8425779 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8425780 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (P h x) = (@I (_146801 -> _146801 -> Prop) P h x).
Proof. exact (MK_COMB (@lem8425778 _146801 P h) (@lem8425779 _146801 x)). Qed.
Lemma lem8425782 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425783 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425782 _146801 Prop f x). Qed.
Lemma lem8425784 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P h x) = (term572 _146801 P h x).
Proof. exact (@lem8425783 _146801 (@I (_146801 -> _146801 -> Prop) P h) x). Qed.
Lemma lem8425786 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (P h x) = (term572 _146801 P h x).
Proof. exact (TRANS (@lem8425780 _146801 P h x) (@lem8425784 _146801 P h x)). Qed.
Lemma lem8425795 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8425796 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term188 _146801 t P h x) = (term582 _146801 t P h x).
Proof. exact (MK_COMB (@lem8425795 _146801 x t) (@lem8425786 _146801 P h x)). Qed.
Lemma lem8425797 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term197 _146801 t P h) = (term583 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8425796 _146801 t P h x)). Qed.
Lemma lem8425798 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425799 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term198 _146801 t P h) = (term584 _146801 t P h).
Proof. exact (MK_COMB (@lem8425798 _146801) (@lem8425797 _146801 t P h)). Qed.
Lemma lem8425800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425801 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term423 _146801 t P h) = (term585 _146801 t P h).
Proof. exact (MK_COMB (@lem8425800) (@lem8425799 _146801 t P h)). Qed.
Lemma lem8425802 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term424 _146801 h P t) = (term586 _146801 h P t).
Proof. exact (MK_COMB (@lem8425801 _146801 t P h) (@lem8425769 _146801 P t)). Qed.
Lemma lem8425809 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425810 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425809 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425811 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8425810 _146801 P x). Qed.
Lemma lem8425812 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8425813 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (@I (_146801 -> _146801 -> Prop) P x x).
Proof. exact (MK_COMB (@lem8425811 _146801 P x) (@lem8425812 _146801 x)). Qed.
Lemma lem8425815 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425816 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425815 _146801 Prop f x). Qed.
Lemma lem8425817 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P x x) = (term587 _146801 P x).
Proof. exact (@lem8425816 _146801 (@I (_146801 -> _146801 -> Prop) P x) x). Qed.
Lemma lem8425819 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (term587 _146801 P x).
Proof. exact (TRANS (@lem8425813 _146801 P x) (@lem8425817 _146801 P x)). Qed.
Lemma lem8425838 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8425839 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term408 _146801 h t P x) = (term588 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425838 _146801 h x t) (@lem8425819 _146801 P x)). Qed.
Lemma lem8425840 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term416 _146801 h t P) = (term589 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8425839 _146801 h t P x)). Qed.
Lemma lem8425841 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8425842 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term417 _146801 h t P) = (term590 _146801 h t P).
Proof. exact (MK_COMB (@lem8425841 _146801) (@lem8425840 _146801 h t P)). Qed.
Lemma lem8425843 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425844 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term430 _146801 h t P) = (term591 _146801 h t P).
Proof. exact (MK_COMB (@lem8425843) (@lem8425842 _146801 h t P)). Qed.
Lemma lem8425845 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term431 _146801 h P t) = (term592 _146801 h P t).
Proof. exact (MK_COMB (@lem8425844 _146801 h t P) (@lem8425802 _146801 h P t)). Qed.
Lemma lem8425846 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425853 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425854 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425853 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425855 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8425854 _146801 P x). Qed.
Lemma lem8425856 {_146801 : Type'} (y : _146801) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem8425857 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (@I (_146801 -> _146801 -> Prop) P x y).
Proof. exact (MK_COMB (@lem8425855 _146801 P x) (@lem8425856 _146801 y)). Qed.
Lemma lem8425859 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425860 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425859 _146801 Prop f x). Qed.
Lemma lem8425861 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (@I (_146801 -> _146801 -> Prop) P x y) = (term572 _146801 P x y).
Proof. exact (@lem8425860 _146801 (@I (_146801 -> _146801 -> Prop) P x) y). Qed.
Lemma lem8425863 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (term572 _146801 P x y).
Proof. exact (TRANS (@lem8425857 _146801 P x y) (@lem8425861 _146801 P x y)). Qed.
Lemma lem8425864 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term573 _146801 P x y) = (term574 _146801 P x y).
Proof. exact (MK_COMB (@lem8425846) (@lem8425863 _146801 P x y)). Qed.
Lemma lem8425879 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term390 _146801 h y t) = (term390 _146801 h y t).
Proof. exact (eq_refl (term390 _146801 h y t)). Qed.
Lemma lem8425880 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term376 _146801 h t P x y) = (term593 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8425879 _146801 h y t) (@lem8425864 _146801 P x y)). Qed.
Lemma lem8425895 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term390 _146801 h x t) = (term390 _146801 h x t).
Proof. exact (eq_refl (term390 _146801 h x t)). Qed.
Lemma lem8425896 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term499 _146801 h t P x y) = (term594 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8425895 _146801 h x t) (@lem8425880 _146801 h t P x y)). Qed.
Lemma lem8425897 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8425898 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term531 _146801 h t P x y) = (term595 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8425897) (@lem8425896 _146801 h t P x y)). Qed.
Lemma lem8425899 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term533 _146801 x y h P t) = (term596 _146801 x y h P t).
Proof. exact (MK_COMB (@lem8425898 _146801 h t P x y) (@lem8425845 _146801 h P t)). Qed.
Lemma lem8425906 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8425907 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425914 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425915 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425914 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425916 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (P h) = (@I (_146801 -> _146801 -> Prop) P h).
Proof. exact (@lem8425915 _146801 P h). Qed.
Lemma lem8425917 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8425918 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (P h x) = (@I (_146801 -> _146801 -> Prop) P h x).
Proof. exact (MK_COMB (@lem8425916 _146801 P h) (@lem8425917 _146801 x)). Qed.
Lemma lem8425920 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425921 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425920 _146801 Prop f x). Qed.
Lemma lem8425922 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P h x) = (term572 _146801 P h x).
Proof. exact (@lem8425921 _146801 (@I (_146801 -> _146801 -> Prop) P h) x). Qed.
Lemma lem8425924 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (P h x) = (term572 _146801 P h x).
Proof. exact (TRANS (@lem8425918 _146801 P h x) (@lem8425922 _146801 P h x)). Qed.
Lemma lem8425925 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term573 _146801 P h x) = (term574 _146801 P h x).
Proof. exact (MK_COMB (@lem8425907) (@lem8425924 _146801 P h x)). Qed.
Lemma lem8425932 {_146801 : Type'} (x : _146801) (t : list _146801) : (term199 _146801 x t) = (term199 _146801 x t).
Proof. exact (eq_refl (term199 _146801 x t)). Qed.
Lemma lem8425933 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term187 _146801 t P h x) = (term597 _146801 t P h x).
Proof. exact (MK_COMB (@lem8425932 _146801 x t) (@lem8425925 _146801 P h x)). Qed.
Lemma lem8425934 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425935 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term450 _146801 t P h x) = (term598 _146801 t P h x).
Proof. exact (MK_COMB (@lem8425934) (@lem8425933 _146801 t P h x)). Qed.
Lemma lem8425936 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term452 _146801 h x P t) = (term599 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425935 _146801 t P h x) (@lem8425906 _146801 P t)). Qed.
Lemma lem8425937 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8425944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425945 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425944 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425946 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8425945 _146801 P x). Qed.
Lemma lem8425947 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8425948 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (@I (_146801 -> _146801 -> Prop) P x x).
Proof. exact (MK_COMB (@lem8425946 _146801 P x) (@lem8425947 _146801 x)). Qed.
Lemma lem8425950 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425951 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425950 _146801 Prop f x). Qed.
Lemma lem8425952 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P x x) = (term587 _146801 P x).
Proof. exact (@lem8425951 _146801 (@I (_146801 -> _146801 -> Prop) P x) x). Qed.
Lemma lem8425954 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (term587 _146801 P x).
Proof. exact (TRANS (@lem8425948 _146801 P x) (@lem8425952 _146801 P x)). Qed.
Lemma lem8425955 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term600 _146801 P x) = (term601 _146801 P x).
Proof. exact (MK_COMB (@lem8425937) (@lem8425954 _146801 P x)). Qed.
Lemma lem8425970 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term390 _146801 h x t) = (term390 _146801 h x t).
Proof. exact (eq_refl (term390 _146801 h x t)). Qed.
Lemma lem8425971 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term406 _146801 h t P x) = (term602 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425970 _146801 h x t) (@lem8425955 _146801 P x)). Qed.
Lemma lem8425972 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8425973 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term471 _146801 h t P x) = (term603 _146801 h t P x).
Proof. exact (MK_COMB (@lem8425972) (@lem8425971 _146801 h t P x)). Qed.
Lemma lem8425974 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term473 _146801 h x P t) = (term604 _146801 h x P t).
Proof. exact (MK_COMB (@lem8425973 _146801 h t P x) (@lem8425936 _146801 h x P t)). Qed.
Lemma lem8425981 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425982 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8425981 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8425983 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8425982 _146801 P x). Qed.
Lemma lem8425984 {_146801 : Type'} (y : _146801) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem8425985 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (@I (_146801 -> _146801 -> Prop) P x y).
Proof. exact (MK_COMB (@lem8425983 _146801 P x) (@lem8425984 _146801 y)). Qed.
Lemma lem8425987 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8425988 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8425987 _146801 Prop f x). Qed.
Lemma lem8425989 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (@I (_146801 -> _146801 -> Prop) P x y) = (term572 _146801 P x y).
Proof. exact (@lem8425988 _146801 (@I (_146801 -> _146801 -> Prop) P x) y). Qed.
Lemma lem8425991 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (term572 _146801 P x y).
Proof. exact (TRANS (@lem8425985 _146801 P x y) (@lem8425989 _146801 P x y)). Qed.
Lemma lem8426010 {_146801 : Type'} (h : _146801) (y : _146801) (t : list _146801) : (term378 _146801 h y t) = (term378 _146801 h y t).
Proof. exact (eq_refl (term378 _146801 h y t)). Qed.
Lemma lem8426011 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term380 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426010 _146801 h y t) (@lem8425991 _146801 P x y)). Qed.
Lemma lem8426012 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term388 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426011 _146801 h t P x y)). Qed.
Lemma lem8426013 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426014 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term389 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426013 _146801) (@lem8426012 _146801 h t P x)). Qed.
Lemma lem8426033 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426034 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term395 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426033 _146801 h x t) (@lem8426014 _146801 h t P x)). Qed.
Lemma lem8426035 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term403 _146801 h t P) = (term609 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426034 _146801 h t P x)). Qed.
Lemma lem8426036 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426037 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term404 _146801 h t P) = (term610 _146801 h t P).
Proof. exact (MK_COMB (@lem8426036 _146801) (@lem8426035 _146801 h t P)). Qed.
Lemma lem8426038 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426039 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term437 _146801 h t P) = (term611 _146801 h t P).
Proof. exact (MK_COMB (@lem8426038) (@lem8426037 _146801 h t P)). Qed.
Lemma lem8426040 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term486 _146801 h x P t) = (term612 _146801 h x P t).
Proof. exact (MK_COMB (@lem8426039 _146801 h t P) (@lem8425974 _146801 h x P t)). Qed.
Lemma lem8426041 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8426042 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) : (term552 _146801 h x P t) = (term613 _146801 h x P t).
Proof. exact (MK_COMB (@lem8426041) (@lem8426040 _146801 h x P t)). Qed.
Lemma lem8426043 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) : (term566 _146801 x y h P t) = (term614 _146801 x y h P t).
Proof. exact (MK_COMB (@lem8426042 _146801 h x P t) (@lem8425899 _146801 x y h P t)). Qed.
Lemma lem8426044 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term566 _146801 x y h P t) : term614 _146801 x y h P t.
Proof. exact (EQ_MP (@lem8426043 _146801 x y h P t) (@lem8425715 _146801 x y h P t h1)). Qed.
Lemma lem8426051 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term227 _146801 P t).
Proof. exact (eq_refl (term227 _146801 P t)). Qed.
Lemma lem8426052 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8426059 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426060 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8426059 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8426061 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (P x'') = (@I (_146801 -> _146801 -> Prop) P x'').
Proof. exact (@lem8426060 _146801 P x''). Qed.
Lemma lem8426062 {_146801 : Type'} (x'' : _146801) : x'' = x''.
Proof. exact (eq_refl x''). Qed.
Lemma lem8426063 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (P x'' x'') = (@I (_146801 -> _146801 -> Prop) P x'' x'').
Proof. exact (MK_COMB (@lem8426061 _146801 P x'') (@lem8426062 _146801 x'')). Qed.
Lemma lem8426065 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426066 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8426065 _146801 Prop f x). Qed.
Lemma lem8426067 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (@I (_146801 -> _146801 -> Prop) P x'' x'') = (term587 _146801 P x'').
Proof. exact (@lem8426066 _146801 (@I (_146801 -> _146801 -> Prop) P x'') x''). Qed.
Lemma lem8426069 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (P x'' x'') = (term587 _146801 P x'').
Proof. exact (TRANS (@lem8426063 _146801 P x'') (@lem8426067 _146801 P x'')). Qed.
Lemma lem8426070 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term600 _146801 P x'') = (term601 _146801 P x'').
Proof. exact (MK_COMB (@lem8426052) (@lem8426069 _146801 P x'')). Qed.
Lemma lem8426077 {_146801 : Type'} (x'' : _146801) (t : list _146801) : (term199 _146801 x'' t) = (term199 _146801 x'' t).
Proof. exact (eq_refl (term199 _146801 x'' t)). Qed.
Lemma lem8426078 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) : (term216 _146801 t P x'') = (term615 _146801 t P x'').
Proof. exact (MK_COMB (@lem8426077 _146801 x'' t) (@lem8426070 _146801 P x'')). Qed.
Lemma lem8426079 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8426080 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) : (term275 _146801 t P x'') = (term616 _146801 t P x'').
Proof. exact (MK_COMB (@lem8426079) (@lem8426078 _146801 t P x'')). Qed.
Lemma lem8426081 {_146801 : Type'} (x'' : _146801) (P : type1402 _146801) (t : list _146801) : (term277 _146801 x'' P t) = (term617 _146801 x'' P t).
Proof. exact (MK_COMB (@lem8426080 _146801 t P x'') (@lem8426051 _146801 P t)). Qed.
Lemma lem8426082 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8426089 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426090 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8426089 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8426091 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) : (P x') = (@I (_146801 -> _146801 -> Prop) P x').
Proof. exact (@lem8426090 _146801 P x'). Qed.
Lemma lem8426092 {_146801 : Type'} (y' : _146801) : y' = y'.
Proof. exact (eq_refl y'). Qed.
Lemma lem8426093 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (P x' y') = (@I (_146801 -> _146801 -> Prop) P x' y').
Proof. exact (MK_COMB (@lem8426091 _146801 P x') (@lem8426092 _146801 y')). Qed.
Lemma lem8426095 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426096 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8426095 _146801 Prop f x). Qed.
Lemma lem8426097 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (@I (_146801 -> _146801 -> Prop) P x' y') = (term572 _146801 P x' y').
Proof. exact (@lem8426096 _146801 (@I (_146801 -> _146801 -> Prop) P x') y'). Qed.
Lemma lem8426099 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (P x' y') = (term572 _146801 P x' y').
Proof. exact (TRANS (@lem8426093 _146801 P x' y') (@lem8426097 _146801 P x' y')). Qed.
Lemma lem8426100 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term573 _146801 P x' y') = (term574 _146801 P x' y').
Proof. exact (MK_COMB (@lem8426082) (@lem8426099 _146801 P x' y')). Qed.
Lemma lem8426107 {_146801 : Type'} (y' : _146801) (t : list _146801) : (term199 _146801 y' t) = (term199 _146801 y' t).
Proof. exact (eq_refl (term199 _146801 y' t)). Qed.
Lemma lem8426108 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term187 _146801 t P x' y') = (term597 _146801 t P x' y').
Proof. exact (MK_COMB (@lem8426107 _146801 y' t) (@lem8426100 _146801 P x' y')). Qed.
Lemma lem8426115 {_146801 : Type'} (x' : _146801) (t : list _146801) : (term199 _146801 x' t) = (term199 _146801 x' t).
Proof. exact (eq_refl (term199 _146801 x' t)). Qed.
Lemma lem8426116 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term257 _146801 t P x' y') = (term618 _146801 t P x' y').
Proof. exact (MK_COMB (@lem8426115 _146801 x' t) (@lem8426108 _146801 t P x' y')). Qed.
Lemma lem8426117 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426118 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term308 _146801 t P x' y') = (term619 _146801 t P x' y').
Proof. exact (MK_COMB (@lem8426117) (@lem8426116 _146801 t P x' y')). Qed.
Lemma lem8426119 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) : (term322 _146801 x' y' x'' P t) = (term620 _146801 x' y' x'' P t).
Proof. exact (MK_COMB (@lem8426118 _146801 t P x' y') (@lem8426081 _146801 x'' P t)). Qed.
Lemma lem8426124 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (@List.ForallOrdPairs _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (eq_refl (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8426131 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426132 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8426131 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8426133 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8426132 _146801 P x). Qed.
Lemma lem8426134 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8426135 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (@I (_146801 -> _146801 -> Prop) P x x).
Proof. exact (MK_COMB (@lem8426133 _146801 P x) (@lem8426134 _146801 x)). Qed.
Lemma lem8426137 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426138 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8426137 _146801 Prop f x). Qed.
Lemma lem8426139 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (@I (_146801 -> _146801 -> Prop) P x x) = (term587 _146801 P x).
Proof. exact (@lem8426138 _146801 (@I (_146801 -> _146801 -> Prop) P x) x). Qed.
Lemma lem8426141 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x x) = (term587 _146801 P x).
Proof. exact (TRANS (@lem8426135 _146801 P x) (@lem8426139 _146801 P x)). Qed.
Lemma lem8426150 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8426151 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term217 _146801 t P x) = (term621 _146801 t P x).
Proof. exact (MK_COMB (@lem8426150 _146801 x t) (@lem8426141 _146801 P x)). Qed.
Lemma lem8426152 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term225 _146801 t P) = (term622 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426151 _146801 t P x)). Qed.
Lemma lem8426153 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426154 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term226 _146801 t P) = (term623 _146801 t P).
Proof. exact (MK_COMB (@lem8426153 _146801) (@lem8426152 _146801 t P)). Qed.
Lemma lem8426155 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426156 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term233 _146801 t P) = (term624 _146801 t P).
Proof. exact (MK_COMB (@lem8426155) (@lem8426154 _146801 t P)). Qed.
Lemma lem8426157 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term234 _146801 P t) = (term625 _146801 P t).
Proof. exact (MK_COMB (@lem8426156 _146801 t P) (@lem8426124 _146801 P t)). Qed.
Lemma lem8426164 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426165 {_146801 : Type'} (f : type1402 _146801) (x : _146801) : (f x) = (@I (_146801 -> _146801 -> Prop) f x).
Proof. exact (@lem8426164 _146801 (_146801 -> Prop) f x). Qed.
Lemma lem8426166 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (P x) = (@I (_146801 -> _146801 -> Prop) P x).
Proof. exact (@lem8426165 _146801 P x). Qed.
Lemma lem8426167 {_146801 : Type'} (y : _146801) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem8426168 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (@I (_146801 -> _146801 -> Prop) P x y).
Proof. exact (MK_COMB (@lem8426166 _146801 P x) (@lem8426167 _146801 y)). Qed.
Lemma lem8426170 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8426171 {_146801 : Type'} (f : _146801 -> Prop) (x : _146801) : (f x) = (@I (_146801 -> Prop) f x).
Proof. exact (@lem8426170 _146801 Prop f x). Qed.
Lemma lem8426172 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (@I (_146801 -> _146801 -> Prop) P x y) = (term572 _146801 P x y).
Proof. exact (@lem8426171 _146801 (@I (_146801 -> _146801 -> Prop) P x) y). Qed.
Lemma lem8426174 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (P x y) = (term572 _146801 P x y).
Proof. exact (TRANS (@lem8426168 _146801 P x y) (@lem8426172 _146801 P x y)). Qed.
Lemma lem8426183 {_146801 : Type'} (y : _146801) (t : list _146801) : (term203 _146801 y t) = (term203 _146801 y t).
Proof. exact (eq_refl (term203 _146801 y t)). Qed.
Lemma lem8426184 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term188 _146801 t P x y) = (term582 _146801 t P x y).
Proof. exact (MK_COMB (@lem8426183 _146801 y t) (@lem8426174 _146801 P x y)). Qed.
Lemma lem8426185 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term197 _146801 t P x) = (term583 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426184 _146801 t P x y)). Qed.
Lemma lem8426186 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426187 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term198 _146801 t P x) = (term584 _146801 t P x).
Proof. exact (MK_COMB (@lem8426186 _146801) (@lem8426185 _146801 t P x)). Qed.
Lemma lem8426196 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8426197 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term205 _146801 t P x) = (term626 _146801 t P x).
Proof. exact (MK_COMB (@lem8426196 _146801 x t) (@lem8426187 _146801 t P x)). Qed.
Lemma lem8426198 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term213 _146801 t P) = (term627 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426197 _146801 t P x)). Qed.
Lemma lem8426199 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426200 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term214 _146801 t P) = (term628 _146801 t P).
Proof. exact (MK_COMB (@lem8426199 _146801) (@lem8426198 _146801 t P)). Qed.
Lemma lem8426201 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426202 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term240 _146801 t P) = (term629 _146801 t P).
Proof. exact (MK_COMB (@lem8426201) (@lem8426200 _146801 t P)). Qed.
Lemma lem8426203 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term242 _146801 P t) = (term630 _146801 P t).
Proof. exact (MK_COMB (@lem8426202 _146801 t P) (@lem8426157 _146801 P t)). Qed.
Lemma lem8426204 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8426205 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term244 _146801 P t) = (term631 _146801 P t).
Proof. exact (MK_COMB (@lem8426204) (@lem8426203 _146801 P t)). Qed.
Lemma lem8426206 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) : (term365 _146801 x' y' x'' P t) = (term632 _146801 x' y' x'' P t).
Proof. exact (MK_COMB (@lem8426205 _146801 P t) (@lem8426119 _146801 x' y' x'' P t)). Qed.
Lemma lem8426207 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term365 _146801 x' y' x'' P t) : term632 _146801 x' y' x'' P t.
Proof. exact (EQ_MP (@lem8426206 _146801 x' y' x'' P t) (@lem8425718 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8426208 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term630 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8426209 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term620 _146801 x' y' x'' P t.
Proof. exact (h1). Qed.
Lemma lem8426210 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term625 _146801 P t.
Proof. exact (proj2 (@lem8426208 _146801 P t h1)). Qed.
Lemma lem8426211 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term628 _146801 t P.
Proof. exact (proj1 (@lem8426208 _146801 P t h1)). Qed.
Lemma lem8426213 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term623 _146801 t P.
Proof. exact (proj1 (@lem8426210 _146801 P t h1)). Qed.
Lemma lem8426214 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term612 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426215 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term596 _146801 x y h P t.
Proof. exact (h1). Qed.
Lemma lem8426216 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term604 _146801 h x P t.
Proof. exact (proj2 (@lem8426214 _146801 h x P t h1)). Qed.
Lemma lem8426217 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term610 _146801 h t P.
Proof. exact (proj1 (@lem8426214 _146801 h x P t h1)). Qed.
Lemma lem8426218 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term602 _146801 h t P x.
Proof. exact (h1). Qed.
Lemma lem8426219 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term599 _146801 h x P t) : term599 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426221 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426218 _146801 h t P x h1)). Qed.
Lemma lem8426224 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term597 _146801 t P h x.
Proof. exact (h1). Qed.
Lemma lem8426228 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term592 _146801 h P t.
Proof. exact (proj2 (@lem8426215 _146801 x y h P t h1)). Qed.
Lemma lem8426229 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term594 _146801 h t P x y.
Proof. exact (proj1 (@lem8426215 _146801 x y h P t h1)). Qed.
Lemma lem8426230 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term586 _146801 h P t.
Proof. exact (proj2 (@lem8426228 _146801 x y h P t h1)). Qed.
Lemma lem8426231 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term590 _146801 h t P.
Proof. exact (proj1 (@lem8426228 _146801 x y h P t h1)). Qed.
Lemma lem8426233 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term584 _146801 t P h.
Proof. exact (proj1 (@lem8426230 _146801 x y h P t h1)). Qed.
Lemma lem8426234 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term593 _146801 h t P x y.
Proof. exact (proj2 (@lem8426229 _146801 x y h P t h1)). Qed.
Lemma lem8426235 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426229 _146801 x y h P t h1)). Qed.
Lemma lem8426237 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h y t.
Proof. exact (proj1 (@lem8426234 _146801 x y h P t h1)). Qed.
Lemma lem8426244 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term617 _146801 x'' P t.
Proof. exact (proj2 (@lem8426209 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8426245 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term618 _146801 t P x' y'.
Proof. exact (proj1 (@lem8426209 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8426246 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term597 _146801 t P x' y'.
Proof. exact (proj2 (@lem8426245 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8426250 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term615 _146801 t P x''.
Proof. exact (h1). Qed.
Lemma lem8426254 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term612 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426255 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term596 _146801 x y h P t.
Proof. exact (h1). Qed.
Lemma lem8426256 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term604 _146801 h x P t.
Proof. exact (proj2 (@lem8426254 _146801 h x P t h1)). Qed.
Lemma lem8426257 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term610 _146801 h t P.
Proof. exact (proj1 (@lem8426254 _146801 h x P t h1)). Qed.
Lemma lem8426258 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term602 _146801 h t P x.
Proof. exact (h1). Qed.
Lemma lem8426259 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term599 _146801 h x P t) : term599 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426261 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426258 _146801 h t P x h1)). Qed.
Lemma lem8426264 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term597 _146801 t P h x.
Proof. exact (h1). Qed.
Lemma lem8426268 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term592 _146801 h P t.
Proof. exact (proj2 (@lem8426255 _146801 x y h P t h1)). Qed.
Lemma lem8426269 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term594 _146801 h t P x y.
Proof. exact (proj1 (@lem8426255 _146801 x y h P t h1)). Qed.
Lemma lem8426270 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term586 _146801 h P t.
Proof. exact (proj2 (@lem8426268 _146801 x y h P t h1)). Qed.
Lemma lem8426271 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term590 _146801 h t P.
Proof. exact (proj1 (@lem8426268 _146801 x y h P t h1)). Qed.
Lemma lem8426273 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term584 _146801 t P h.
Proof. exact (proj1 (@lem8426270 _146801 x y h P t h1)). Qed.
Lemma lem8426274 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term593 _146801 h t P x y.
Proof. exact (proj2 (@lem8426269 _146801 x y h P t h1)). Qed.
Lemma lem8426275 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426269 _146801 x y h P t h1)). Qed.
Lemma lem8426277 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h y t.
Proof. exact (proj1 (@lem8426274 _146801 x y h P t h1)). Qed.
Lemma lem8426284 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term612 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426285 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term596 _146801 x y h P t.
Proof. exact (h1). Qed.
Lemma lem8426286 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term604 _146801 h x P t.
Proof. exact (proj2 (@lem8426284 _146801 h x P t h1)). Qed.
Lemma lem8426287 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term610 _146801 h t P.
Proof. exact (proj1 (@lem8426284 _146801 h x P t h1)). Qed.
Lemma lem8426288 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term602 _146801 h t P x.
Proof. exact (h1). Qed.
Lemma lem8426289 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term599 _146801 h x P t) : term599 _146801 h x P t.
Proof. exact (h1). Qed.
Lemma lem8426291 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426288 _146801 h t P x h1)). Qed.
Lemma lem8426294 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term597 _146801 t P h x.
Proof. exact (h1). Qed.
Lemma lem8426298 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term592 _146801 h P t.
Proof. exact (proj2 (@lem8426285 _146801 x y h P t h1)). Qed.
Lemma lem8426299 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term594 _146801 h t P x y.
Proof. exact (proj1 (@lem8426285 _146801 x y h P t h1)). Qed.
Lemma lem8426300 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term586 _146801 h P t.
Proof. exact (proj2 (@lem8426298 _146801 x y h P t h1)). Qed.
Lemma lem8426304 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term593 _146801 h t P x y.
Proof. exact (proj2 (@lem8426299 _146801 x y h P t h1)). Qed.
Lemma lem8426305 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h x t.
Proof. exact (proj1 (@lem8426299 _146801 x y h P t h1)). Qed.
Lemma lem8426307 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term122 _146801 h y t.
Proof. exact (proj1 (@lem8426304 _146801 x y h P t h1)). Qed.
Lemma lem8426392 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8426393 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8426392 _146801 P Q). Qed.
Lemma lem8426394 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8426393 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8426395 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8426396 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426395 _146801 h t P x y)). Qed.
Lemma lem8426397 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426398 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426397 _146801) (@lem8426396 _146801 h t P x)). Qed.
Lemma lem8426399 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426400 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426399 _146801 h x t) (@lem8426398 _146801 h t P x)). Qed.
Lemma lem8426401 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8426402 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426401) (@lem8426400 _146801 h t P x)). Qed.
Lemma lem8426403 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8426404 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426405 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426404 _146801 h x t) (@lem8426403 _146801 h t P x y)). Qed.
Lemma lem8426406 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426405 _146801 h t P x y)). Qed.
Lemma lem8426407 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426408 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426407 _146801) (@lem8426406 _146801 h t P x)). Qed.
Lemma lem8426409 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8426402 _146801 h t P x) (@lem8426408 _146801 h t P x)). Qed.
Lemma lem8426410 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8426409 _146801 h t P x) (@lem8426394 _146801 h t P x)). Qed.
Lemma lem8426411 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426410 _146801 h t P x)). Qed.
Lemma lem8426412 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426413 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8426412 _146801) (@lem8426411 _146801 h t P)). Qed.
Lemma lem8426430 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8426437 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426438 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426437 _146801 h x t) (@lem8426430 _146801 h t P x y)). Qed.
Lemma lem8426439 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8426446 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8426453 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8426454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426455 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8426454) (@lem8426453 _146801 t h P x y)). Qed.
Lemma lem8426456 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426455 _146801 t h P x y) (@lem8426446 _146801 h t P x y)). Qed.
Lemma lem8426457 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8426439 _146801 h t P x y) (@lem8426456 _146801 h t P x y)). Qed.
Lemma lem8426458 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8426438 _146801 h t P x y) (@lem8426457 _146801 h t P x y)). Qed.
Lemma lem8426459 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426458 _146801 h t P x y)). Qed.
Lemma lem8426460 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426461 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426460 _146801) (@lem8426459 _146801 h t P x)). Qed.
Lemma lem8426462 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426461 _146801 h t P x)). Qed.
Lemma lem8426463 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426464 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8426463 _146801) (@lem8426462 _146801 h t P)). Qed.
Lemma lem8426465 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8426413 _146801 h t P) (@lem8426464 _146801 h t P)). Qed.
Lemma lem8426466 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8426465 _146801 h t P) (@lem8426217 _146801 h x P t h1)). Qed.
Lemma lem8426474 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8426542 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term621 _146801 t P x) = (term621 _146801 t P x).
Proof. exact (eq_refl (term621 _146801 t P x)). Qed.
Lemma lem8426543 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term622 _146801 t P) = (term622 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426542 _146801 t P x)). Qed.
Lemma lem8426544 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426546 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term623 _146801 t P) = (term623 _146801 t P).
Proof. exact (MK_COMB (@lem8426544 _146801) (@lem8426543 _146801 t P)). Qed.
Lemma lem8426547 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term623 _146801 t P.
Proof. exact (EQ_MP (@lem8426546 _146801 t P) (@lem8426213 _146801 P t h1)). Qed.
Lemma lem8426635 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8426714 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8426715 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8426714 _146801 P Q). Qed.
Lemma lem8426716 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8426715 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8426717 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8426718 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426717 _146801 h t P x y)). Qed.
Lemma lem8426719 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426720 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426719 _146801) (@lem8426718 _146801 h t P x)). Qed.
Lemma lem8426721 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426722 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426721 _146801 h x t) (@lem8426720 _146801 h t P x)). Qed.
Lemma lem8426723 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8426724 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426723) (@lem8426722 _146801 h t P x)). Qed.
Lemma lem8426725 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8426726 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426727 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426726 _146801 h x t) (@lem8426725 _146801 h t P x y)). Qed.
Lemma lem8426728 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426727 _146801 h t P x y)). Qed.
Lemma lem8426729 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426730 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426729 _146801) (@lem8426728 _146801 h t P x)). Qed.
Lemma lem8426731 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8426724 _146801 h t P x) (@lem8426730 _146801 h t P x)). Qed.
Lemma lem8426732 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8426731 _146801 h t P x) (@lem8426716 _146801 h t P x)). Qed.
Lemma lem8426733 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426732 _146801 h t P x)). Qed.
Lemma lem8426734 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426735 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8426734 _146801) (@lem8426733 _146801 h t P)). Qed.
Lemma lem8426752 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8426759 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8426760 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426759 _146801 h x t) (@lem8426752 _146801 h t P x y)). Qed.
Lemma lem8426761 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8426768 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8426775 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8426776 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8426777 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8426776) (@lem8426775 _146801 t h P x y)). Qed.
Lemma lem8426778 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8426777 _146801 t h P x y) (@lem8426768 _146801 h t P x y)). Qed.
Lemma lem8426779 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8426761 _146801 h t P x y) (@lem8426778 _146801 h t P x y)). Qed.
Lemma lem8426780 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8426760 _146801 h t P x y) (@lem8426779 _146801 h t P x y)). Qed.
Lemma lem8426781 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8426780 _146801 h t P x y)). Qed.
Lemma lem8426782 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426783 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8426782 _146801) (@lem8426781 _146801 h t P x)). Qed.
Lemma lem8426784 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8426783 _146801 h t P x)). Qed.
Lemma lem8426785 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8426786 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8426785 _146801) (@lem8426784 _146801 h t P)). Qed.
Lemma lem8426787 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8426735 _146801 h t P) (@lem8426786 _146801 h t P)). Qed.
Lemma lem8426788 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8426787 _146801 h t P) (@lem8426217 _146801 h x P t h1)). Qed.
Lemma lem8426953 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8427048 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term588 _146801 h t P x) = (term666 _146801 h t P x).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term587 _146801 P x)). Qed.
Lemma lem8427049 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term589 _146801 h t P) = (term667 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427048 _146801 h t P x)). Qed.
Lemma lem8427050 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427052 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term590 _146801 h t P) = (term668 _146801 h t P).
Proof. exact (MK_COMB (@lem8427050 _146801) (@lem8427049 _146801 h t P)). Qed.
Lemma lem8427053 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term668 _146801 h t P.
Proof. exact (EQ_MP (@lem8427052 _146801 h t P) (@lem8426231 _146801 x y h P t h1)). Qed.
Lemma lem8427078 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8427082 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8427090 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term577 _146801 P y x) = (term577 _146801 P y x).
Proof. exact (eq_refl (term577 _146801 P y x)). Qed.
Lemma lem8427091 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term578 _146801 P x) = (term578 _146801 P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427090 _146801 P y x)). Qed.
Lemma lem8427092 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427093 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term579 _146801 P x) = (term579 _146801 P x).
Proof. exact (MK_COMB (@lem8427092 _146801) (@lem8427091 _146801 P x)). Qed.
Lemma lem8427094 {_146801 : Type'} (P : type1402 _146801) : (term580 _146801 P) = (term580 _146801 P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427093 _146801 P x)). Qed.
Lemma lem8427095 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427097 {_146801 : Type'} (P : type1402 _146801) : (term581 _146801 P) = (term581 _146801 P).
Proof. exact (MK_COMB (@lem8427095 _146801) (@lem8427094 _146801 P)). Qed.
Lemma lem8427098 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term581 _146801 P.
Proof. exact (EQ_MP (@lem8427097 _146801 P) (@lem8425764 _146801 P h1)). Qed.
Lemma lem8427190 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term582 _146801 t P h x) = (term582 _146801 t P h x).
Proof. exact (eq_refl (term582 _146801 t P h x)). Qed.
Lemma lem8427191 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term583 _146801 t P h) = (term583 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8427190 _146801 t P h x)). Qed.
Lemma lem8427192 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427194 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term584 _146801 t P h) = (term584 _146801 t P h).
Proof. exact (MK_COMB (@lem8427192 _146801) (@lem8427191 _146801 t P h)). Qed.
Lemma lem8427195 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term584 _146801 t P h.
Proof. exact (EQ_MP (@lem8427194 _146801 t P h) (@lem8426233 _146801 x y h P t h1)). Qed.
Lemma lem8427207 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8427211 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8427319 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term582 _146801 t P h x) = (term582 _146801 t P h x).
Proof. exact (eq_refl (term582 _146801 t P h x)). Qed.
Lemma lem8427320 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term583 _146801 t P h) = (term583 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8427319 _146801 t P h x)). Qed.
Lemma lem8427321 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427323 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term584 _146801 t P h) = (term584 _146801 t P h).
Proof. exact (MK_COMB (@lem8427321 _146801) (@lem8427320 _146801 t P h)). Qed.
Lemma lem8427324 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term584 _146801 t P h.
Proof. exact (EQ_MP (@lem8427323 _146801 t P h) (@lem8426233 _146801 x y h P t h1)). Qed.
Lemma lem8427336 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8427340 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8427358 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8427359 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8427358 _146801 P Q). Qed.
Lemma lem8427360 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term669 _146801 t P x) = (term670 _146801 t P x).
Proof. exact (@lem8427359 _146801 (term651 _146801 x t) (term583 _146801 t P x)). Qed.
Lemma lem8427361 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term671 _146801 t P x y) = (term582 _146801 t P x y).
Proof. exact (eq_refl (term671 _146801 t P x y)). Qed.
Lemma lem8427362 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term672 _146801 t P x) = (term583 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427361 _146801 t P x y)). Qed.
Lemma lem8427363 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427364 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term673 _146801 t P x) = (term584 _146801 t P x).
Proof. exact (MK_COMB (@lem8427363 _146801) (@lem8427362 _146801 t P x)). Qed.
Lemma lem8427365 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8427366 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term669 _146801 t P x) = (term626 _146801 t P x).
Proof. exact (MK_COMB (@lem8427365 _146801 x t) (@lem8427364 _146801 t P x)). Qed.
Lemma lem8427367 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8427368 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term674 _146801 t P x) = (term675 _146801 t P x).
Proof. exact (MK_COMB (@lem8427367) (@lem8427366 _146801 t P x)). Qed.
Lemma lem8427369 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term671 _146801 t P x y) = (term582 _146801 t P x y).
Proof. exact (eq_refl (term671 _146801 t P x y)). Qed.
Lemma lem8427370 {_146801 : Type'} (x : _146801) (t : list _146801) : (term203 _146801 x t) = (term203 _146801 x t).
Proof. exact (eq_refl (term203 _146801 x t)). Qed.
Lemma lem8427371 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term676 _146801 t P x y) = (term677 _146801 t P x y).
Proof. exact (MK_COMB (@lem8427370 _146801 x t) (@lem8427369 _146801 t P x y)). Qed.
Lemma lem8427372 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term678 _146801 t P x) = (term679 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427371 _146801 t P x y)). Qed.
Lemma lem8427373 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427374 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term670 _146801 t P x) = (term680 _146801 t P x).
Proof. exact (MK_COMB (@lem8427373 _146801) (@lem8427372 _146801 t P x)). Qed.
Lemma lem8427375 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term669 _146801 t P x) = (term670 _146801 t P x)) = ((term626 _146801 t P x) = (term680 _146801 t P x)).
Proof. exact (MK_COMB (@lem8427368 _146801 t P x) (@lem8427374 _146801 t P x)). Qed.
Lemma lem8427376 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term626 _146801 t P x) = (term680 _146801 t P x).
Proof. exact (EQ_MP (@lem8427375 _146801 t P x) (@lem8427360 _146801 t P x)). Qed.
Lemma lem8427377 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term627 _146801 t P) = (term681 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427376 _146801 t P x)). Qed.
Lemma lem8427378 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427379 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term628 _146801 t P) = (term682 _146801 t P).
Proof. exact (MK_COMB (@lem8427378 _146801) (@lem8427377 _146801 t P)). Qed.
Lemma lem8427392 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term677 _146801 t P x y) = (term677 _146801 t P x y).
Proof. exact (eq_refl (term677 _146801 t P x y)). Qed.
Lemma lem8427393 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term679 _146801 t P x) = (term679 _146801 t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427392 _146801 t P x y)). Qed.
Lemma lem8427394 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427395 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) : (term680 _146801 t P x) = (term680 _146801 t P x).
Proof. exact (MK_COMB (@lem8427394 _146801) (@lem8427393 _146801 t P x)). Qed.
Lemma lem8427396 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term681 _146801 t P) = (term681 _146801 t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427395 _146801 t P x)). Qed.
Lemma lem8427397 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427398 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term682 _146801 t P) = (term682 _146801 t P).
Proof. exact (MK_COMB (@lem8427397 _146801) (@lem8427396 _146801 t P)). Qed.
Lemma lem8427399 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : (term628 _146801 t P) = (term682 _146801 t P).
Proof. exact (TRANS (@lem8427379 _146801 t P) (@lem8427398 _146801 t P)). Qed.
Lemma lem8427400 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term682 _146801 t P.
Proof. exact (EQ_MP (@lem8427399 _146801 t P) (@lem8426211 _146801 P t h1)). Qed.
Lemma lem8427465 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8427469 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8427507 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8427508 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8427507 _146801 P Q). Qed.
Lemma lem8427509 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8427508 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8427510 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427511 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427510 _146801 h t P x y)). Qed.
Lemma lem8427512 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427513 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427512 _146801) (@lem8427511 _146801 h t P x)). Qed.
Lemma lem8427514 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427515 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427514 _146801 h x t) (@lem8427513 _146801 h t P x)). Qed.
Lemma lem8427516 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8427517 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427516) (@lem8427515 _146801 h t P x)). Qed.
Lemma lem8427518 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427519 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427520 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427519 _146801 h x t) (@lem8427518 _146801 h t P x y)). Qed.
Lemma lem8427521 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427520 _146801 h t P x y)). Qed.
Lemma lem8427522 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427523 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427522 _146801) (@lem8427521 _146801 h t P x)). Qed.
Lemma lem8427524 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8427517 _146801 h t P x) (@lem8427523 _146801 h t P x)). Qed.
Lemma lem8427525 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8427524 _146801 h t P x) (@lem8427509 _146801 h t P x)). Qed.
Lemma lem8427526 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427525 _146801 h t P x)). Qed.
Lemma lem8427527 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427528 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8427527 _146801) (@lem8427526 _146801 h t P)). Qed.
Lemma lem8427545 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8427552 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427553 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427552 _146801 h x t) (@lem8427545 _146801 h t P x y)). Qed.
Lemma lem8427554 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427561 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427568 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8427569 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8427570 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8427569) (@lem8427568 _146801 t h P x y)). Qed.
Lemma lem8427571 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427570 _146801 t h P x y) (@lem8427561 _146801 h t P x y)). Qed.
Lemma lem8427572 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427554 _146801 h t P x y) (@lem8427571 _146801 h t P x y)). Qed.
Lemma lem8427573 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427553 _146801 h t P x y) (@lem8427572 _146801 h t P x y)). Qed.
Lemma lem8427574 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427573 _146801 h t P x y)). Qed.
Lemma lem8427575 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427576 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427575 _146801) (@lem8427574 _146801 h t P x)). Qed.
Lemma lem8427577 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427576 _146801 h t P x)). Qed.
Lemma lem8427578 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427579 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8427578 _146801) (@lem8427577 _146801 h t P)). Qed.
Lemma lem8427580 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8427528 _146801 h t P) (@lem8427579 _146801 h t P)). Qed.
Lemma lem8427581 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8427580 _146801 h t P) (@lem8426257 _146801 h x P t h1)). Qed.
Lemma lem8427589 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8427627 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8427628 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8427627 _146801 P Q). Qed.
Lemma lem8427629 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8427628 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8427630 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427631 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427630 _146801 h t P x y)). Qed.
Lemma lem8427632 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427633 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427632 _146801) (@lem8427631 _146801 h t P x)). Qed.
Lemma lem8427634 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427635 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427634 _146801 h x t) (@lem8427633 _146801 h t P x)). Qed.
Lemma lem8427636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8427637 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427636) (@lem8427635 _146801 h t P x)). Qed.
Lemma lem8427638 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427639 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427640 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427639 _146801 h x t) (@lem8427638 _146801 h t P x y)). Qed.
Lemma lem8427641 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427640 _146801 h t P x y)). Qed.
Lemma lem8427642 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427643 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427642 _146801) (@lem8427641 _146801 h t P x)). Qed.
Lemma lem8427644 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8427637 _146801 h t P x) (@lem8427643 _146801 h t P x)). Qed.
Lemma lem8427645 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8427644 _146801 h t P x) (@lem8427629 _146801 h t P x)). Qed.
Lemma lem8427646 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427645 _146801 h t P x)). Qed.
Lemma lem8427647 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427648 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8427647 _146801) (@lem8427646 _146801 h t P)). Qed.
Lemma lem8427665 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8427672 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427673 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427672 _146801 h x t) (@lem8427665 _146801 h t P x y)). Qed.
Lemma lem8427674 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427681 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427688 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8427689 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8427690 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8427689) (@lem8427688 _146801 t h P x y)). Qed.
Lemma lem8427691 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427690 _146801 t h P x y) (@lem8427681 _146801 h t P x y)). Qed.
Lemma lem8427692 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427674 _146801 h t P x y) (@lem8427691 _146801 h t P x y)). Qed.
Lemma lem8427693 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427673 _146801 h t P x y) (@lem8427692 _146801 h t P x y)). Qed.
Lemma lem8427694 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427693 _146801 h t P x y)). Qed.
Lemma lem8427695 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427696 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427695 _146801) (@lem8427694 _146801 h t P x)). Qed.
Lemma lem8427697 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427696 _146801 h t P x)). Qed.
Lemma lem8427698 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427699 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8427698 _146801) (@lem8427697 _146801 h t P)). Qed.
Lemma lem8427700 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8427648 _146801 h t P) (@lem8427699 _146801 h t P)). Qed.
Lemma lem8427701 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8427700 _146801 h t P) (@lem8426257 _146801 h x P t h1)). Qed.
Lemma lem8427709 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8427747 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8427748 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8427747 _146801 P Q). Qed.
Lemma lem8427749 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8427748 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8427750 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427751 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427750 _146801 h t P x y)). Qed.
Lemma lem8427752 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427753 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427752 _146801) (@lem8427751 _146801 h t P x)). Qed.
Lemma lem8427754 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427755 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427754 _146801 h x t) (@lem8427753 _146801 h t P x)). Qed.
Lemma lem8427756 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8427757 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427756) (@lem8427755 _146801 h t P x)). Qed.
Lemma lem8427758 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427759 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427760 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427759 _146801 h x t) (@lem8427758 _146801 h t P x y)). Qed.
Lemma lem8427761 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427760 _146801 h t P x y)). Qed.
Lemma lem8427762 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427763 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427762 _146801) (@lem8427761 _146801 h t P x)). Qed.
Lemma lem8427764 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8427757 _146801 h t P x) (@lem8427763 _146801 h t P x)). Qed.
Lemma lem8427765 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8427764 _146801 h t P x) (@lem8427749 _146801 h t P x)). Qed.
Lemma lem8427766 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427765 _146801 h t P x)). Qed.
Lemma lem8427767 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427768 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8427767 _146801) (@lem8427766 _146801 h t P)). Qed.
Lemma lem8427785 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8427792 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427793 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427792 _146801 h x t) (@lem8427785 _146801 h t P x y)). Qed.
Lemma lem8427794 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427801 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427808 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8427809 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8427810 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8427809) (@lem8427808 _146801 t h P x y)). Qed.
Lemma lem8427811 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427810 _146801 t h P x y) (@lem8427801 _146801 h t P x y)). Qed.
Lemma lem8427812 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427794 _146801 h t P x y) (@lem8427811 _146801 h t P x y)). Qed.
Lemma lem8427813 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427793 _146801 h t P x y) (@lem8427812 _146801 h t P x y)). Qed.
Lemma lem8427814 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427813 _146801 h t P x y)). Qed.
Lemma lem8427815 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427816 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427815 _146801) (@lem8427814 _146801 h t P x)). Qed.
Lemma lem8427817 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427816 _146801 h t P x)). Qed.
Lemma lem8427818 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427819 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8427818 _146801) (@lem8427817 _146801 h t P)). Qed.
Lemma lem8427820 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8427768 _146801 h t P) (@lem8427819 _146801 h t P)). Qed.
Lemma lem8427821 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8427820 _146801 h t P) (@lem8426257 _146801 h x P t h1)). Qed.
Lemma lem8427867 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8427868 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8427867 _146801 P Q). Qed.
Lemma lem8427869 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8427868 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8427870 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427871 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427870 _146801 h t P x y)). Qed.
Lemma lem8427872 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427873 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427872 _146801) (@lem8427871 _146801 h t P x)). Qed.
Lemma lem8427874 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427875 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427874 _146801 h x t) (@lem8427873 _146801 h t P x)). Qed.
Lemma lem8427876 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8427877 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427876) (@lem8427875 _146801 h t P x)). Qed.
Lemma lem8427878 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8427879 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427880 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427879 _146801 h x t) (@lem8427878 _146801 h t P x y)). Qed.
Lemma lem8427881 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427880 _146801 h t P x y)). Qed.
Lemma lem8427882 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427883 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427882 _146801) (@lem8427881 _146801 h t P x)). Qed.
Lemma lem8427884 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8427877 _146801 h t P x) (@lem8427883 _146801 h t P x)). Qed.
Lemma lem8427885 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8427884 _146801 h t P x) (@lem8427869 _146801 h t P x)). Qed.
Lemma lem8427886 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427885 _146801 h t P x)). Qed.
Lemma lem8427887 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427888 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8427887 _146801) (@lem8427886 _146801 h t P)). Qed.
Lemma lem8427905 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8427912 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8427913 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427912 _146801 h x t) (@lem8427905 _146801 h t P x y)). Qed.
Lemma lem8427914 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427921 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8427928 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8427929 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8427930 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8427929) (@lem8427928 _146801 t h P x y)). Qed.
Lemma lem8427931 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8427930 _146801 t h P x y) (@lem8427921 _146801 h t P x y)). Qed.
Lemma lem8427932 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427914 _146801 h t P x y) (@lem8427931 _146801 h t P x y)). Qed.
Lemma lem8427933 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8427913 _146801 h t P x y) (@lem8427932 _146801 h t P x y)). Qed.
Lemma lem8427934 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8427933 _146801 h t P x y)). Qed.
Lemma lem8427935 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427936 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8427935 _146801) (@lem8427934 _146801 h t P x)). Qed.
Lemma lem8427937 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427936 _146801 h t P x)). Qed.
Lemma lem8427938 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8427939 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8427938 _146801) (@lem8427937 _146801 h t P)). Qed.
Lemma lem8427940 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8427888 _146801 h t P) (@lem8427939 _146801 h t P)). Qed.
Lemma lem8427941 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8427940 _146801 h t P) (@lem8426257 _146801 h x P t h1)). Qed.
Lemma lem8427999 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term588 _146801 h t P x) = (term666 _146801 h t P x).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term587 _146801 P x)). Qed.
Lemma lem8428000 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term589 _146801 h t P) = (term667 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8427999 _146801 h t P x)). Qed.
Lemma lem8428001 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428003 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term590 _146801 h t P) = (term668 _146801 h t P).
Proof. exact (MK_COMB (@lem8428001 _146801) (@lem8428000 _146801 h t P)). Qed.
Lemma lem8428004 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term668 _146801 h t P.
Proof. exact (EQ_MP (@lem8428003 _146801 h t P) (@lem8426271 _146801 x y h P t h1)). Qed.
Lemma lem8428029 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8428033 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8428087 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term588 _146801 h t P x) = (term666 _146801 h t P x).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term587 _146801 P x)). Qed.
Lemma lem8428088 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term589 _146801 h t P) = (term667 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428087 _146801 h t P x)). Qed.
Lemma lem8428089 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428091 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term590 _146801 h t P) = (term668 _146801 h t P).
Proof. exact (MK_COMB (@lem8428089 _146801) (@lem8428088 _146801 h t P)). Qed.
Lemma lem8428092 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term668 _146801 h t P.
Proof. exact (EQ_MP (@lem8428091 _146801 h t P) (@lem8426271 _146801 x y h P t h1)). Qed.
Lemma lem8428188 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) : (term582 _146801 t P h x) = (term582 _146801 t P h x).
Proof. exact (eq_refl (term582 _146801 t P h x)). Qed.
Lemma lem8428189 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term583 _146801 t P h) = (term583 _146801 t P h).
Proof. exact (fun_ext (fun x : _146801 => @lem8428188 _146801 t P h x)). Qed.
Lemma lem8428190 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428192 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) : (term584 _146801 t P h) = (term584 _146801 t P h).
Proof. exact (MK_COMB (@lem8428190 _146801) (@lem8428189 _146801 t P h)). Qed.
Lemma lem8428193 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term584 _146801 t P h.
Proof. exact (EQ_MP (@lem8428192 _146801 t P h) (@lem8426273 _146801 x y h P t h1)). Qed.
Lemma lem8428205 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8428209 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8428263 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term588 _146801 h t P x) = (term666 _146801 h t P x).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term587 _146801 P x)). Qed.
Lemma lem8428264 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term589 _146801 h t P) = (term667 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428263 _146801 h t P x)). Qed.
Lemma lem8428265 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428267 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term590 _146801 h t P) = (term668 _146801 h t P).
Proof. exact (MK_COMB (@lem8428265 _146801) (@lem8428264 _146801 h t P)). Qed.
Lemma lem8428268 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term668 _146801 h t P.
Proof. exact (EQ_MP (@lem8428267 _146801 h t P) (@lem8426271 _146801 x y h P t h1)). Qed.
Lemma lem8428331 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8428332 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8428331 _146801 P Q). Qed.
Lemma lem8428333 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8428332 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8428334 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428335 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428334 _146801 h t P x y)). Qed.
Lemma lem8428336 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428337 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428336 _146801) (@lem8428335 _146801 h t P x)). Qed.
Lemma lem8428338 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428339 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428338 _146801 h x t) (@lem8428337 _146801 h t P x)). Qed.
Lemma lem8428340 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8428341 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428340) (@lem8428339 _146801 h t P x)). Qed.
Lemma lem8428342 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428343 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428344 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428343 _146801 h x t) (@lem8428342 _146801 h t P x y)). Qed.
Lemma lem8428345 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428344 _146801 h t P x y)). Qed.
Lemma lem8428346 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428347 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428346 _146801) (@lem8428345 _146801 h t P x)). Qed.
Lemma lem8428348 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8428341 _146801 h t P x) (@lem8428347 _146801 h t P x)). Qed.
Lemma lem8428349 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8428348 _146801 h t P x) (@lem8428333 _146801 h t P x)). Qed.
Lemma lem8428350 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428349 _146801 h t P x)). Qed.
Lemma lem8428351 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428352 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8428351 _146801) (@lem8428350 _146801 h t P)). Qed.
Lemma lem8428369 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8428376 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428377 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428376 _146801 h x t) (@lem8428369 _146801 h t P x y)). Qed.
Lemma lem8428378 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428385 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428392 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8428393 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8428394 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8428393) (@lem8428392 _146801 t h P x y)). Qed.
Lemma lem8428395 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428394 _146801 t h P x y) (@lem8428385 _146801 h t P x y)). Qed.
Lemma lem8428396 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428378 _146801 h t P x y) (@lem8428395 _146801 h t P x y)). Qed.
Lemma lem8428397 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428377 _146801 h t P x y) (@lem8428396 _146801 h t P x y)). Qed.
Lemma lem8428398 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428397 _146801 h t P x y)). Qed.
Lemma lem8428399 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428400 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428399 _146801) (@lem8428398 _146801 h t P x)). Qed.
Lemma lem8428401 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428400 _146801 h t P x)). Qed.
Lemma lem8428402 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428403 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8428402 _146801) (@lem8428401 _146801 h t P)). Qed.
Lemma lem8428404 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8428352 _146801 h t P) (@lem8428403 _146801 h t P)). Qed.
Lemma lem8428405 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8428404 _146801 h t P) (@lem8426287 _146801 h x P t h1)). Qed.
Lemma lem8428413 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8428447 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8428448 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8428447 _146801 P Q). Qed.
Lemma lem8428449 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8428448 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8428450 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428451 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428450 _146801 h t P x y)). Qed.
Lemma lem8428452 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428453 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428452 _146801) (@lem8428451 _146801 h t P x)). Qed.
Lemma lem8428454 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428455 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428454 _146801 h x t) (@lem8428453 _146801 h t P x)). Qed.
Lemma lem8428456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8428457 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428456) (@lem8428455 _146801 h t P x)). Qed.
Lemma lem8428458 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428459 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428460 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428459 _146801 h x t) (@lem8428458 _146801 h t P x y)). Qed.
Lemma lem8428461 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428460 _146801 h t P x y)). Qed.
Lemma lem8428462 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428463 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428462 _146801) (@lem8428461 _146801 h t P x)). Qed.
Lemma lem8428464 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8428457 _146801 h t P x) (@lem8428463 _146801 h t P x)). Qed.
Lemma lem8428465 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8428464 _146801 h t P x) (@lem8428449 _146801 h t P x)). Qed.
Lemma lem8428466 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428465 _146801 h t P x)). Qed.
Lemma lem8428467 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428468 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8428467 _146801) (@lem8428466 _146801 h t P)). Qed.
Lemma lem8428485 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8428492 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428493 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428492 _146801 h x t) (@lem8428485 _146801 h t P x y)). Qed.
Lemma lem8428494 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428501 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428508 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8428509 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8428510 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8428509) (@lem8428508 _146801 t h P x y)). Qed.
Lemma lem8428511 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428510 _146801 t h P x y) (@lem8428501 _146801 h t P x y)). Qed.
Lemma lem8428512 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428494 _146801 h t P x y) (@lem8428511 _146801 h t P x y)). Qed.
Lemma lem8428513 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428493 _146801 h t P x y) (@lem8428512 _146801 h t P x y)). Qed.
Lemma lem8428514 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428513 _146801 h t P x y)). Qed.
Lemma lem8428515 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428516 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428515 _146801) (@lem8428514 _146801 h t P x)). Qed.
Lemma lem8428517 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428516 _146801 h t P x)). Qed.
Lemma lem8428518 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428519 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8428518 _146801) (@lem8428517 _146801 h t P)). Qed.
Lemma lem8428520 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8428468 _146801 h t P) (@lem8428519 _146801 h t P)). Qed.
Lemma lem8428521 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8428520 _146801 h t P) (@lem8426287 _146801 h x P t h1)). Qed.
Lemma lem8428529 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8428563 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8428564 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8428563 _146801 P Q). Qed.
Lemma lem8428565 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8428564 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8428566 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428567 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428566 _146801 h t P x y)). Qed.
Lemma lem8428568 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428569 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428568 _146801) (@lem8428567 _146801 h t P x)). Qed.
Lemma lem8428570 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428571 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428570 _146801 h x t) (@lem8428569 _146801 h t P x)). Qed.
Lemma lem8428572 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8428573 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428572) (@lem8428571 _146801 h t P x)). Qed.
Lemma lem8428574 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428575 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428576 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428575 _146801 h x t) (@lem8428574 _146801 h t P x y)). Qed.
Lemma lem8428577 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428576 _146801 h t P x y)). Qed.
Lemma lem8428578 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428579 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428578 _146801) (@lem8428577 _146801 h t P x)). Qed.
Lemma lem8428580 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8428573 _146801 h t P x) (@lem8428579 _146801 h t P x)). Qed.
Lemma lem8428581 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8428580 _146801 h t P x) (@lem8428565 _146801 h t P x)). Qed.
Lemma lem8428582 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428581 _146801 h t P x)). Qed.
Lemma lem8428583 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428584 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8428583 _146801) (@lem8428582 _146801 h t P)). Qed.
Lemma lem8428601 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8428608 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428609 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428608 _146801 h x t) (@lem8428601 _146801 h t P x y)). Qed.
Lemma lem8428610 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428617 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428624 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8428625 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8428626 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8428625) (@lem8428624 _146801 t h P x y)). Qed.
Lemma lem8428627 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428626 _146801 t h P x y) (@lem8428617 _146801 h t P x y)). Qed.
Lemma lem8428628 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428610 _146801 h t P x y) (@lem8428627 _146801 h t P x y)). Qed.
Lemma lem8428629 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428609 _146801 h t P x y) (@lem8428628 _146801 h t P x y)). Qed.
Lemma lem8428630 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428629 _146801 h t P x y)). Qed.
Lemma lem8428631 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428632 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428631 _146801) (@lem8428630 _146801 h t P x)). Qed.
Lemma lem8428633 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428632 _146801 h t P x)). Qed.
Lemma lem8428634 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428635 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8428634 _146801) (@lem8428633 _146801 h t P)). Qed.
Lemma lem8428636 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8428584 _146801 h t P) (@lem8428635 _146801 h t P)). Qed.
Lemma lem8428637 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8428636 _146801 h t P) (@lem8426287 _146801 h x P t h1)). Qed.
Lemma lem8428679 {A : Type'} (P : Prop) (Q : A -> Prop) : (term633 A P Q) = (term634 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem8428680 {_146801 : Type'} (P : Prop) (Q : _146801 -> Prop) : (term633 _146801 P Q) = (term634 _146801 P Q).
Proof. exact (@lem8428679 _146801 P Q). Qed.
Lemma lem8428681 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term636 _146801 h t P x).
Proof. exact (@lem8428680 _146801 (term374 _146801 h x t) (term606 _146801 h t P x)). Qed.
Lemma lem8428682 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428683 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term638 _146801 h t P x) = (term606 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428682 _146801 h t P x y)). Qed.
Lemma lem8428684 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428685 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term639 _146801 h t P x) = (term607 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428684 _146801) (@lem8428683 _146801 h t P x)). Qed.
Lemma lem8428686 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428687 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term635 _146801 h t P x) = (term608 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428686 _146801 h x t) (@lem8428685 _146801 h t P x)). Qed.
Lemma lem8428688 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8428689 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term640 _146801 h t P x) = (term641 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428688) (@lem8428687 _146801 h t P x)). Qed.
Lemma lem8428690 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term637 _146801 h t P x y) = (term605 _146801 h t P x y).
Proof. exact (eq_refl (term637 _146801 h t P x y)). Qed.
Lemma lem8428691 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428692 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term642 _146801 h t P x y) = (term643 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428691 _146801 h x t) (@lem8428690 _146801 h t P x y)). Qed.
Lemma lem8428693 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term644 _146801 h t P x) = (term645 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428692 _146801 h t P x y)). Qed.
Lemma lem8428694 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428695 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term636 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428694 _146801) (@lem8428693 _146801 h t P x)). Qed.
Lemma lem8428696 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : ((term635 _146801 h t P x) = (term636 _146801 h t P x)) = ((term608 _146801 h t P x) = (term646 _146801 h t P x)).
Proof. exact (MK_COMB (@lem8428689 _146801 h t P x) (@lem8428695 _146801 h t P x)). Qed.
Lemma lem8428697 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term608 _146801 h t P x) = (term646 _146801 h t P x).
Proof. exact (EQ_MP (@lem8428696 _146801 h t P x) (@lem8428681 _146801 h t P x)). Qed.
Lemma lem8428698 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term609 _146801 h t P) = (term647 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428697 _146801 h t P x)). Qed.
Lemma lem8428699 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428700 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term648 _146801 h t P).
Proof. exact (MK_COMB (@lem8428699 _146801) (@lem8428698 _146801 h t P)). Qed.
Lemma lem8428717 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term605 _146801 h t P x y) = (term649 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 y h) (term651 _146801 y t) (term572 _146801 P x y)). Qed.
Lemma lem8428724 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) : (term378 _146801 h x t) = (term378 _146801 h x t).
Proof. exact (eq_refl (term378 _146801 h x t)). Qed.
Lemma lem8428725 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term652 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428724 _146801 h x t) (@lem8428717 _146801 h t P x y)). Qed.
Lemma lem8428726 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term653 _146801 h t P x y).
Proof. exact (@lem19490 (term654 _146801 h P x y) (term374 _146801 h x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428733 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term655 _146801 h t P x y) = (term656 _146801 h t P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term582 _146801 t P x y)). Qed.
Lemma lem8428740 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term657 _146801 t h P x y) = (term658 _146801 t h P x y).
Proof. exact (@lem19699 (term650 _146801 x h) (term651 _146801 x t) (term654 _146801 h P x y)). Qed.
Lemma lem8428741 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8428742 {_146801 : Type'} (t : list _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term659 _146801 t h P x y) = (term660 _146801 t h P x y).
Proof. exact (MK_COMB (@lem8428741) (@lem8428740 _146801 t h P x y)). Qed.
Lemma lem8428743 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term653 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (MK_COMB (@lem8428742 _146801 t h P x y) (@lem8428733 _146801 h t P x y)). Qed.
Lemma lem8428744 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term652 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428726 _146801 h t P x y) (@lem8428743 _146801 h t P x y)). Qed.
Lemma lem8428745 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (y : _146801) : (term643 _146801 h t P x y) = (term661 _146801 h t P x y).
Proof. exact (TRANS (@lem8428725 _146801 h t P x y) (@lem8428744 _146801 h t P x y)). Qed.
Lemma lem8428746 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term645 _146801 h t P x) = (term662 _146801 h t P x).
Proof. exact (fun_ext (fun y : _146801 => @lem8428745 _146801 h t P x y)). Qed.
Lemma lem8428747 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428748 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) : (term646 _146801 h t P x) = (term663 _146801 h t P x).
Proof. exact (MK_COMB (@lem8428747 _146801) (@lem8428746 _146801 h t P x)). Qed.
Lemma lem8428749 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term647 _146801 h t P) = (term664 _146801 h t P).
Proof. exact (fun_ext (fun x : _146801 => @lem8428748 _146801 h t P x)). Qed.
Lemma lem8428750 {_146801 : Type'} : (@all _146801) = (@all _146801).
Proof. exact (eq_refl (@all _146801)). Qed.
Lemma lem8428751 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term648 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (MK_COMB (@lem8428750 _146801) (@lem8428749 _146801 h t P)). Qed.
Lemma lem8428752 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) : (term610 _146801 h t P) = (term665 _146801 h t P).
Proof. exact (TRANS (@lem8428700 _146801 h t P) (@lem8428751 _146801 h t P)). Qed.
Lemma lem8428753 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term665 _146801 h t P.
Proof. exact (EQ_MP (@lem8428752 _146801 h t P) (@lem8426287 _146801 h x P t h1)). Qed.
Lemma lem8428789 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8428873 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8428957 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8429041 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8429109 {_146801 : Type'} (_116068 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116068.
Proof. exact (@lem8426466 _146801 h x P t h1 _116068). Qed.
Lemma lem8429110 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116068 : _146801) : (term683 _146801 h t P _116068) = (term663 _146801 h t P _116068).
Proof. exact (eq_refl (term683 _146801 h t P _116068)). Qed.
Lemma lem8429111 {_146801 : Type'} (_116068 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116068.
Proof. exact (EQ_MP (@lem8429110 _146801 h t P _116068) (@lem8429109 _146801 _116068 h x P t h1)). Qed.
Lemma lem8429112 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116068 _116069.
Proof. exact (@lem8429111 _146801 _116068 h x P t h1 _116069). Qed.
Lemma lem8429113 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) : (term684 _146801 h t P _116068 _116069) = (term661 _146801 h t P _116068 _116069).
Proof. exact (eq_refl (term684 _146801 h t P _116068 _116069)). Qed.
Lemma lem8429114 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116068 _116069.
Proof. exact (EQ_MP (@lem8429113 _146801 h t P _116068 _116069) (@lem8429112 _146801 _116068 _116069 h x P t h1)). Qed.
Lemma lem8429127 {_146801 : Type'} (_116074 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term685 _146801 t P _116074.
Proof. exact (@lem8426547 _146801 P t h1 _116074). Qed.
Lemma lem8429128 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116074 : _146801) : (term685 _146801 t P _116074) = (term621 _146801 t P _116074).
Proof. exact (eq_refl (term685 _146801 t P _116074)). Qed.
Lemma lem8429151 {_146801 : Type'} (_116082 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116082.
Proof. exact (@lem8426788 _146801 h x P t h1 _116082). Qed.
Lemma lem8429152 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116082 : _146801) : (term683 _146801 h t P _116082) = (term663 _146801 h t P _116082).
Proof. exact (eq_refl (term683 _146801 h t P _116082)). Qed.
Lemma lem8429153 {_146801 : Type'} (_116082 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116082.
Proof. exact (EQ_MP (@lem8429152 _146801 h t P _116082) (@lem8429151 _146801 _116082 h x P t h1)). Qed.
Lemma lem8429154 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116082 _116083.
Proof. exact (@lem8429153 _146801 _116082 h x P t h1 _116083). Qed.
Lemma lem8429155 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) : (term684 _146801 h t P _116082 _116083) = (term661 _146801 h t P _116082 _116083).
Proof. exact (eq_refl (term684 _146801 h t P _116082 _116083)). Qed.
Lemma lem8429156 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116082 _116083.
Proof. exact (EQ_MP (@lem8429155 _146801 h t P _116082 _116083) (@lem8429154 _146801 _116082 _116083 h x P t h1)). Qed.
Lemma lem8429193 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term686 _146801 h t P _116096.
Proof. exact (@lem8427053 _146801 x y h P t h1 _116096). Qed.
Lemma lem8429194 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116096 : _146801) : (term686 _146801 h t P _116096) = (term666 _146801 h t P _116096).
Proof. exact (eq_refl (term686 _146801 h t P _116096)). Qed.
Lemma lem8429195 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term666 _146801 h t P _116096.
Proof. exact (EQ_MP (@lem8429194 _146801 h t P _116096) (@lem8429193 _146801 _116096 x y h P t h1)). Qed.
Lemma lem8429199 {_146801 : Type'} (_116098 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term687 _146801 P _116098.
Proof. exact (@lem8427098 _146801 P h1 _116098). Qed.
Lemma lem8429200 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) : (term687 _146801 P _116098) = (term579 _146801 P _116098).
Proof. exact (eq_refl (term687 _146801 P _116098)). Qed.
Lemma lem8429201 {_146801 : Type'} (_116098 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term579 _146801 P _116098.
Proof. exact (EQ_MP (@lem8429200 _146801 P _116098) (@lem8429199 _146801 _116098 P h1)). Qed.
Lemma lem8429202 {_146801 : Type'} (_116098 : _146801) (_116099 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term688 _146801 P _116098 _116099.
Proof. exact (@lem8429201 _146801 _116098 P h1 _116099). Qed.
Lemma lem8429203 {_146801 : Type'} (P : type1402 _146801) (_116099 : _146801) (_116098 : _146801) : (term688 _146801 P _116098 _116099) = (term577 _146801 P _116099 _116098).
Proof. exact (eq_refl (term688 _146801 P _116098 _116099)). Qed.
Lemma lem8429217 {_146801 : Type'} (_116104 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term671 _146801 t P h _116104.
Proof. exact (@lem8427195 _146801 x y h P t h1 _116104). Qed.
Lemma lem8429218 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116104 : _146801) : (term671 _146801 t P h _116104) = (term582 _146801 t P h _116104).
Proof. exact (eq_refl (term671 _146801 t P h _116104)). Qed.
Lemma lem8429238 {_146801 : Type'} (_116111 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term671 _146801 t P h _116111.
Proof. exact (@lem8427324 _146801 x y h P t h1 _116111). Qed.
Lemma lem8429239 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116111 : _146801) : (term671 _146801 t P h _116111) = (term582 _146801 t P h _116111).
Proof. exact (eq_refl (term671 _146801 t P h _116111)). Qed.
Lemma lem8429247 {_146801 : Type'} (_116114 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term689 _146801 t P _116114.
Proof. exact (@lem8427400 _146801 P t h1 _116114). Qed.
Lemma lem8429248 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116114 : _146801) : (term689 _146801 t P _116114) = (term680 _146801 t P _116114).
Proof. exact (eq_refl (term689 _146801 t P _116114)). Qed.
Lemma lem8429249 {_146801 : Type'} (_116114 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term680 _146801 t P _116114.
Proof. exact (EQ_MP (@lem8429248 _146801 t P _116114) (@lem8429247 _146801 _116114 P t h1)). Qed.
Lemma lem8429250 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term690 _146801 t P _116114 _116115.
Proof. exact (@lem8429249 _146801 _116114 P t h1 _116115). Qed.
Lemma lem8429251 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) : (term690 _146801 t P _116114 _116115) = (term677 _146801 t P _116114 _116115).
Proof. exact (eq_refl (term690 _146801 t P _116114 _116115)). Qed.
Lemma lem8429268 {_146801 : Type'} (_116121 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116121.
Proof. exact (@lem8427581 _146801 h x P t h1 _116121). Qed.
Lemma lem8429269 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116121 : _146801) : (term683 _146801 h t P _116121) = (term663 _146801 h t P _116121).
Proof. exact (eq_refl (term683 _146801 h t P _116121)). Qed.
Lemma lem8429270 {_146801 : Type'} (_116121 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116121.
Proof. exact (EQ_MP (@lem8429269 _146801 h t P _116121) (@lem8429268 _146801 _116121 h x P t h1)). Qed.
Lemma lem8429271 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116121 _116122.
Proof. exact (@lem8429270 _146801 _116121 h x P t h1 _116122). Qed.
Lemma lem8429272 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) : (term684 _146801 h t P _116121 _116122) = (term661 _146801 h t P _116121 _116122).
Proof. exact (eq_refl (term684 _146801 h t P _116121 _116122)). Qed.
Lemma lem8429273 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116121 _116122.
Proof. exact (EQ_MP (@lem8429272 _146801 h t P _116121 _116122) (@lem8429271 _146801 _116121 _116122 h x P t h1)). Qed.
Lemma lem8429280 {_146801 : Type'} (_116125 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116125.
Proof. exact (@lem8427701 _146801 h x P t h1 _116125). Qed.
Lemma lem8429281 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116125 : _146801) : (term683 _146801 h t P _116125) = (term663 _146801 h t P _116125).
Proof. exact (eq_refl (term683 _146801 h t P _116125)). Qed.
Lemma lem8429282 {_146801 : Type'} (_116125 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116125.
Proof. exact (EQ_MP (@lem8429281 _146801 h t P _116125) (@lem8429280 _146801 _116125 h x P t h1)). Qed.
Lemma lem8429283 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116125 _116126.
Proof. exact (@lem8429282 _146801 _116125 h x P t h1 _116126). Qed.
Lemma lem8429284 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) : (term684 _146801 h t P _116125 _116126) = (term661 _146801 h t P _116125 _116126).
Proof. exact (eq_refl (term684 _146801 h t P _116125 _116126)). Qed.
Lemma lem8429285 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116125 _116126.
Proof. exact (EQ_MP (@lem8429284 _146801 h t P _116125 _116126) (@lem8429283 _146801 _116125 _116126 h x P t h1)). Qed.
Lemma lem8429292 {_146801 : Type'} (_116129 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116129.
Proof. exact (@lem8427821 _146801 h x P t h1 _116129). Qed.
Lemma lem8429293 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116129 : _146801) : (term683 _146801 h t P _116129) = (term663 _146801 h t P _116129).
Proof. exact (eq_refl (term683 _146801 h t P _116129)). Qed.
Lemma lem8429294 {_146801 : Type'} (_116129 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116129.
Proof. exact (EQ_MP (@lem8429293 _146801 h t P _116129) (@lem8429292 _146801 _116129 h x P t h1)). Qed.
Lemma lem8429295 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116129 _116130.
Proof. exact (@lem8429294 _146801 _116129 h x P t h1 _116130). Qed.
Lemma lem8429296 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) : (term684 _146801 h t P _116129 _116130) = (term661 _146801 h t P _116129 _116130).
Proof. exact (eq_refl (term684 _146801 h t P _116129 _116130)). Qed.
Lemma lem8429297 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116129 _116130.
Proof. exact (EQ_MP (@lem8429296 _146801 h t P _116129 _116130) (@lem8429295 _146801 _116129 _116130 h x P t h1)). Qed.
Lemma lem8429304 {_146801 : Type'} (_116133 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116133.
Proof. exact (@lem8427941 _146801 h x P t h1 _116133). Qed.
Lemma lem8429305 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116133 : _146801) : (term683 _146801 h t P _116133) = (term663 _146801 h t P _116133).
Proof. exact (eq_refl (term683 _146801 h t P _116133)). Qed.
Lemma lem8429306 {_146801 : Type'} (_116133 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116133.
Proof. exact (EQ_MP (@lem8429305 _146801 h t P _116133) (@lem8429304 _146801 _116133 h x P t h1)). Qed.
Lemma lem8429307 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116133 _116134.
Proof. exact (@lem8429306 _146801 _116133 h x P t h1 _116134). Qed.
Lemma lem8429308 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) : (term684 _146801 h t P _116133 _116134) = (term661 _146801 h t P _116133 _116134).
Proof. exact (eq_refl (term684 _146801 h t P _116133 _116134)). Qed.
Lemma lem8429309 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116133 _116134.
Proof. exact (EQ_MP (@lem8429308 _146801 h t P _116133 _116134) (@lem8429307 _146801 _116133 _116134 h x P t h1)). Qed.
Lemma lem8429316 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term686 _146801 h t P _116137.
Proof. exact (@lem8428004 _146801 x y h P t h1 _116137). Qed.
Lemma lem8429317 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116137 : _146801) : (term686 _146801 h t P _116137) = (term666 _146801 h t P _116137).
Proof. exact (eq_refl (term686 _146801 h t P _116137)). Qed.
Lemma lem8429318 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term666 _146801 h t P _116137.
Proof. exact (EQ_MP (@lem8429317 _146801 h t P _116137) (@lem8429316 _146801 _116137 x y h P t h1)). Qed.
Lemma lem8429328 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term686 _146801 h t P _116141.
Proof. exact (@lem8428092 _146801 x y h P t h1 _116141). Qed.
Lemma lem8429329 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116141 : _146801) : (term686 _146801 h t P _116141) = (term666 _146801 h t P _116141).
Proof. exact (eq_refl (term686 _146801 h t P _116141)). Qed.
Lemma lem8429330 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term666 _146801 h t P _116141.
Proof. exact (EQ_MP (@lem8429329 _146801 h t P _116141) (@lem8429328 _146801 _116141 x y h P t h1)). Qed.
Lemma lem8429343 {_146801 : Type'} (_116146 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term671 _146801 t P h _116146.
Proof. exact (@lem8428193 _146801 x y h P t h1 _116146). Qed.
Lemma lem8429344 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116146 : _146801) : (term671 _146801 t P h _116146) = (term582 _146801 t P h _116146).
Proof. exact (eq_refl (term671 _146801 t P h _116146)). Qed.
Lemma lem8429352 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term686 _146801 h t P _116149.
Proof. exact (@lem8428268 _146801 x y h P t h1 _116149). Qed.
Lemma lem8429353 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116149 : _146801) : (term686 _146801 h t P _116149) = (term666 _146801 h t P _116149).
Proof. exact (eq_refl (term686 _146801 h t P _116149)). Qed.
Lemma lem8429354 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term666 _146801 h t P _116149.
Proof. exact (EQ_MP (@lem8429353 _146801 h t P _116149) (@lem8429352 _146801 _116149 x y h P t h1)). Qed.
Lemma lem8429364 {_146801 : Type'} (_116153 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116153.
Proof. exact (@lem8428405 _146801 h x P t h1 _116153). Qed.
Lemma lem8429365 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116153 : _146801) : (term683 _146801 h t P _116153) = (term663 _146801 h t P _116153).
Proof. exact (eq_refl (term683 _146801 h t P _116153)). Qed.
Lemma lem8429366 {_146801 : Type'} (_116153 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116153.
Proof. exact (EQ_MP (@lem8429365 _146801 h t P _116153) (@lem8429364 _146801 _116153 h x P t h1)). Qed.
Lemma lem8429367 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116153 _116154.
Proof. exact (@lem8429366 _146801 _116153 h x P t h1 _116154). Qed.
Lemma lem8429368 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) : (term684 _146801 h t P _116153 _116154) = (term661 _146801 h t P _116153 _116154).
Proof. exact (eq_refl (term684 _146801 h t P _116153 _116154)). Qed.
Lemma lem8429369 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116153 _116154.
Proof. exact (EQ_MP (@lem8429368 _146801 h t P _116153 _116154) (@lem8429367 _146801 _116153 _116154 h x P t h1)). Qed.
Lemma lem8429376 {_146801 : Type'} (_116157 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116157.
Proof. exact (@lem8428521 _146801 h x P t h1 _116157). Qed.
Lemma lem8429377 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116157 : _146801) : (term683 _146801 h t P _116157) = (term663 _146801 h t P _116157).
Proof. exact (eq_refl (term683 _146801 h t P _116157)). Qed.
Lemma lem8429378 {_146801 : Type'} (_116157 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116157.
Proof. exact (EQ_MP (@lem8429377 _146801 h t P _116157) (@lem8429376 _146801 _116157 h x P t h1)). Qed.
Lemma lem8429379 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116157 _116158.
Proof. exact (@lem8429378 _146801 _116157 h x P t h1 _116158). Qed.
Lemma lem8429380 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) : (term684 _146801 h t P _116157 _116158) = (term661 _146801 h t P _116157 _116158).
Proof. exact (eq_refl (term684 _146801 h t P _116157 _116158)). Qed.
Lemma lem8429381 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116157 _116158.
Proof. exact (EQ_MP (@lem8429380 _146801 h t P _116157 _116158) (@lem8429379 _146801 _116157 _116158 h x P t h1)). Qed.
Lemma lem8429388 {_146801 : Type'} (_116161 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116161.
Proof. exact (@lem8428637 _146801 h x P t h1 _116161). Qed.
Lemma lem8429389 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116161 : _146801) : (term683 _146801 h t P _116161) = (term663 _146801 h t P _116161).
Proof. exact (eq_refl (term683 _146801 h t P _116161)). Qed.
Lemma lem8429390 {_146801 : Type'} (_116161 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116161.
Proof. exact (EQ_MP (@lem8429389 _146801 h t P _116161) (@lem8429388 _146801 _116161 h x P t h1)). Qed.
Lemma lem8429391 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116161 _116162.
Proof. exact (@lem8429390 _146801 _116161 h x P t h1 _116162). Qed.
Lemma lem8429392 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) : (term684 _146801 h t P _116161 _116162) = (term661 _146801 h t P _116161 _116162).
Proof. exact (eq_refl (term684 _146801 h t P _116161 _116162)). Qed.
Lemma lem8429393 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116161 _116162.
Proof. exact (EQ_MP (@lem8429392 _146801 h t P _116161 _116162) (@lem8429391 _146801 _116161 _116162 h x P t h1)). Qed.
Lemma lem8429400 {_146801 : Type'} (_116165 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term683 _146801 h t P _116165.
Proof. exact (@lem8428753 _146801 h x P t h1 _116165). Qed.
Lemma lem8429401 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116165 : _146801) : (term683 _146801 h t P _116165) = (term663 _146801 h t P _116165).
Proof. exact (eq_refl (term683 _146801 h t P _116165)). Qed.
Lemma lem8429402 {_146801 : Type'} (_116165 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term663 _146801 h t P _116165.
Proof. exact (EQ_MP (@lem8429401 _146801 h t P _116165) (@lem8429400 _146801 _116165 h x P t h1)). Qed.
Lemma lem8429403 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term684 _146801 h t P _116165 _116166.
Proof. exact (@lem8429402 _146801 _116165 h x P t h1 _116166). Qed.
Lemma lem8429404 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) : (term684 _146801 h t P _116165 _116166) = (term661 _146801 h t P _116165 _116166).
Proof. exact (eq_refl (term684 _146801 h t P _116165 _116166)). Qed.
Lemma lem8429405 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term661 _146801 h t P _116165 _116166.
Proof. exact (EQ_MP (@lem8429404 _146801 h t P _116165 _116166) (@lem8429403 _146801 _116165 _116166 h x P t h1)). Qed.
Lemma lem8429455 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term658 _146801 t h P _116068 _116069.
Proof. exact (proj1 (@lem8429114 _146801 _116068 _116069 h x P t h1)). Qed.
Lemma lem8429466 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116082 _116083.
Proof. exact (proj2 (@lem8429156 _146801 _116082 _116083 h x P t h1)). Qed.
Lemma lem8429487 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term658 _146801 t h P _116121 _116122.
Proof. exact (proj1 (@lem8429273 _146801 _116121 _116122 h x P t h1)). Qed.
Lemma lem8429492 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116125 _116126.
Proof. exact (proj2 (@lem8429285 _146801 _116125 _116126 h x P t h1)). Qed.
Lemma lem8429498 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116129 _116130.
Proof. exact (proj2 (@lem8429297 _146801 _116129 _116130 h x P t h1)). Qed.
Lemma lem8429504 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116133 _116134.
Proof. exact (proj2 (@lem8429309 _146801 _116133 _116134 h x P t h1)). Qed.
Lemma lem8429519 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term658 _146801 t h P _116153 _116154.
Proof. exact (proj1 (@lem8429369 _146801 _116153 _116154 h x P t h1)). Qed.
Lemma lem8429524 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116157 _116158.
Proof. exact (proj2 (@lem8429381 _146801 _116157 _116158 h x P t h1)). Qed.
Lemma lem8429530 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116161 _116162.
Proof. exact (proj2 (@lem8429393 _146801 _116161 _116162 h x P t h1)). Qed.
Lemma lem8429536 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term656 _146801 h t P _116165 _116166.
Proof. exact (proj2 (@lem8429405 _146801 _116165 _116166 h x P t h1)). Qed.
Lemma lem8429575 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426218 _146801 h t P x h1)). Qed.
Lemma lem8429577 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8429639 {_146801 : Type'} (_116074 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term621 _146801 t P _116074.
Proof. exact (EQ_MP (@lem8429128 _146801 t P _116074) (@lem8429127 _146801 _116074 P t h1)). Qed.
Lemma lem8429643 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426218 _146801 h t P x h1)). Qed.
Lemma lem8429645 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8429713 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term574 _146801 P h x.
Proof. exact (proj2 (@lem8426224 _146801 t P h x h1)). Qed.
Lemma lem8429723 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term691 _146801 h t P _116082 _116083.
Proof. exact (proj1 (@lem8429466 _146801 _116082 _116083 h x P t h1)). Qed.
Lemma lem8429779 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8429853 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426234 _146801 x y h P t h1)). Qed.
Lemma lem8429855 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8429857 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8429903 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426234 _146801 x y h P t h1)). Qed.
Lemma lem8429905 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8429907 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8429953 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426234 _146801 x y h P t h1)). Qed.
Lemma lem8429955 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8429957 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8429985 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term677 _146801 t P _116114 _116115.
Proof. exact (EQ_MP (@lem8429251 _146801 t P _116114 _116115) (@lem8429250 _146801 _116114 _116115 P t h1)). Qed.
Lemma lem8430003 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426234 _146801 x y h P t h1)). Qed.
Lemma lem8430005 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8430007 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8430037 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426258 _146801 h t P x h1)). Qed.
Lemma lem8430039 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8430097 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426258 _146801 h t P x h1)). Qed.
Lemma lem8430099 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8430119 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term677 _146801 t P _116125 _116126.
Proof. exact (proj2 (@lem8429492 _146801 _116125 _116126 h x P t h1)). Qed.
Lemma lem8430159 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term574 _146801 P h x.
Proof. exact (proj2 (@lem8426264 _146801 t P h x h1)). Qed.
Lemma lem8430169 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term691 _146801 h t P _116129 _116130.
Proof. exact (proj1 (@lem8429498 _146801 _116129 _116130 h x P t h1)). Qed.
Lemma lem8430215 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term601 _146801 P x''.
Proof. exact (proj2 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8430237 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term677 _146801 t P _116133 _116134.
Proof. exact (proj2 (@lem8429504 _146801 _116133 _116134 h x P t h1)). Qed.
Lemma lem8430283 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426274 _146801 x y h P t h1)). Qed.
Lemma lem8430285 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8430287 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8430367 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term574 _146801 P x y.
Proof. exact (proj2 (@lem8426274 _146801 x y h P t h1)). Qed.
Lemma lem8430369 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8430371 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8430399 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term601 _146801 P x''.
Proof. exact (proj2 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8430425 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term621 _146801 t P _116149.
Proof. exact (proj2 (@lem8429354 _146801 _116149 x y h P t h1)). Qed.
Lemma lem8430441 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426288 _146801 h t P x h1)). Qed.
Lemma lem8430443 {_146801 : Type'} (x : _146801) (h : _146801) (h1 : x = h) : x = h.
Proof. exact (h1). Qed.
Lemma lem8430499 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term601 _146801 P x.
Proof. exact (proj2 (@lem8426288 _146801 h t P x h1)). Qed.
Lemma lem8430501 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8430521 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term677 _146801 t P _116157 _116158.
Proof. exact (proj2 (@lem8429524 _146801 _116157 _116158 h x P t h1)). Qed.
Lemma lem8430559 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term574 _146801 P h x.
Proof. exact (proj2 (@lem8426294 _146801 t P h x h1)). Qed.
Lemma lem8430569 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term691 _146801 h t P _116161 _116162.
Proof. exact (proj1 (@lem8429530 _146801 _116161 _116162 h x P t h1)). Qed.
Lemma lem8430611 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term574 _146801 P x' y'.
Proof. exact (proj2 (@lem8426246 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8430635 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term677 _146801 t P _116165 _116166.
Proof. exact (proj2 (@lem8429536 _146801 _116165 _116166 h x P t h1)). Qed.
Lemma lem8430669 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8430709 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8430749 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8430789 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8430886 {_146801 : Type'} (P : type1402 _146801) : (term692 _146801 P) = (term692 _146801 P).
Proof. exact (eq_refl (term692 _146801 P)). Qed.
Lemma lem8430887 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term693 _146801 P x) = (term693 _146801 P h).
Proof. exact (MK_COMB (@lem8430886 _146801 P) (@lem8429577 _146801 x h h1)). Qed.
Lemma lem8430888 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term693 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term693 _146801 P h)). Qed.
Lemma lem8430889 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term694 _146801 P x).
Proof. exact (eq_refl (term694 _146801 P x)). Qed.
Lemma lem8430890 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term693 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8430889 _146801 P x) (@lem8430888 _146801 P h)). Qed.
Lemma lem8430891 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term693 _146801 P x) = (term601 _146801 P x).
Proof. exact (eq_refl (term693 _146801 P x)). Qed.
Lemma lem8430892 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8430893 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term695 _146801 P x).
Proof. exact (MK_COMB (@lem8430892) (@lem8430891 _146801 P x)). Qed.
Lemma lem8430894 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term601 _146801 P h)). Qed.
Lemma lem8430895 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term601 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8430893 _146801 P x) (@lem8430894 _146801 P h)). Qed.
Lemma lem8430896 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (TRANS (@lem8430890 _146801 x P h) (@lem8430895 _146801 x P h)). Qed.
Lemma lem8430897 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term601 _146801 P x) = (term601 _146801 P h).
Proof. exact (EQ_MP (@lem8430896 _146801 x P h) (@lem8430887 _146801 P x h h1)). Qed.
Lemma lem8430898 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term601 _146801 P h.
Proof. exact (EQ_MP (@lem8430897 _146801 P x h h2) (@lem8429575 _146801 h t P x h1)). Qed.
Lemma lem8430940 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term696 _146801 h P _116068 _116069.
Proof. exact (proj1 (@lem8429455 _146801 _116068 _116069 h x P t h1)). Qed.
Lemma lem8431053 {_146801 : Type'} (P : type1402 _146801) (y : _146801) : (term697 _146801 P y) = (term697 _146801 P y).
Proof. exact (eq_refl (term697 _146801 P y)). Qed.
Lemma lem8431054 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term698 _146801 P y x) = (term698 _146801 P y h).
Proof. exact (MK_COMB (@lem8431053 _146801 P y) (@lem8429857 _146801 x h h1)). Qed.
Lemma lem8431055 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term698 _146801 P y h) = (term574 _146801 P h y).
Proof. exact (eq_refl (term698 _146801 P y h)). Qed.
Lemma lem8431056 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term699 _146801 P y x) = (term699 _146801 P y x).
Proof. exact (eq_refl (term699 _146801 P y x)). Qed.
Lemma lem8431057 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term698 _146801 P y x) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431056 _146801 P y x) (@lem8431055 _146801 P h y)). Qed.
Lemma lem8431058 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term698 _146801 P y x) = (term574 _146801 P x y).
Proof. exact (eq_refl (term698 _146801 P y x)). Qed.
Lemma lem8431059 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431060 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term699 _146801 P y x) = (term700 _146801 P x y).
Proof. exact (MK_COMB (@lem8431059) (@lem8431058 _146801 P x y)). Qed.
Lemma lem8431061 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term574 _146801 P h y)). Qed.
Lemma lem8431062 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term574 _146801 P h y)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431060 _146801 P x y) (@lem8431061 _146801 P h y)). Qed.
Lemma lem8431063 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (TRANS (@lem8431057 _146801 x P h y) (@lem8431062 _146801 x P h y)). Qed.
Lemma lem8431064 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term574 _146801 P x y) = (term574 _146801 P h y).
Proof. exact (EQ_MP (@lem8431063 _146801 x P h y) (@lem8431054 _146801 P y x h h1)). Qed.
Lemma lem8431065 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term574 _146801 P h y.
Proof. exact (EQ_MP (@lem8431064 _146801 P y x h h2) (@lem8429853 _146801 x y h P t h1)). Qed.
Lemma lem8431079 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8431206 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term701 _146801 P h) = (term701 _146801 P h).
Proof. exact (eq_refl (term701 _146801 P h)). Qed.
Lemma lem8431207 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term702 _146801 P h y) = (term703 _146801 P h).
Proof. exact (MK_COMB (@lem8431206 _146801 P h) (@lem8431079 _146801 y h h1)). Qed.
Lemma lem8431208 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term703 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term703 _146801 P h)). Qed.
Lemma lem8431209 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term704 _146801 P h y) = (term704 _146801 P h y).
Proof. exact (eq_refl (term704 _146801 P h y)). Qed.
Lemma lem8431210 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term703 _146801 P h)) = ((term702 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8431209 _146801 P h y) (@lem8431208 _146801 P h)). Qed.
Lemma lem8431211 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term702 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term702 _146801 P h y)). Qed.
Lemma lem8431212 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431213 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term704 _146801 P h y) = (term700 _146801 P h y).
Proof. exact (MK_COMB (@lem8431212) (@lem8431211 _146801 P h y)). Qed.
Lemma lem8431214 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term601 _146801 P h)). Qed.
Lemma lem8431215 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term601 _146801 P h)) = ((term574 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8431213 _146801 P h y) (@lem8431214 _146801 P h)). Qed.
Lemma lem8431216 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term703 _146801 P h)) = ((term574 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (TRANS (@lem8431210 _146801 y P h) (@lem8431215 _146801 y P h)). Qed.
Lemma lem8431217 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term574 _146801 P h y) = (term601 _146801 P h).
Proof. exact (EQ_MP (@lem8431216 _146801 y P h) (@lem8431207 _146801 P y h h1)). Qed.
Lemma lem8431218 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term601 _146801 P h.
Proof. exact (EQ_MP (@lem8431217 _146801 P y h h3) (@lem8431065 _146801 y P t x h h1 h2)). Qed.
Lemma lem8431232 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term705 _146801 h P _116096.
Proof. exact (proj1 (@lem8429195 _146801 _116096 x y h P t h1)). Qed.
Lemma lem8431274 {_146801 : Type'} (_116099 : _146801) (_116098 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term577 _146801 P _116099 _116098.
Proof. exact (EQ_MP (@lem8429203 _146801 P _116099 _116098) (@lem8429202 _146801 _116098 _116099 P h1)). Qed.
Lemma lem8431330 {_146801 : Type'} (_116104 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term582 _146801 t P h _116104.
Proof. exact (EQ_MP (@lem8429218 _146801 t P h _116104) (@lem8429217 _146801 _116104 x y h P t h1)). Qed.
Lemma lem8431345 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term701 _146801 P x) = (term701 _146801 P x).
Proof. exact (eq_refl (term701 _146801 P x)). Qed.
Lemma lem8431346 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term702 _146801 P x y) = (term702 _146801 P x h).
Proof. exact (MK_COMB (@lem8431345 _146801 P x) (@lem8429905 _146801 y h h1)). Qed.
Lemma lem8431347 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) : (term702 _146801 P x h) = (term574 _146801 P x h).
Proof. exact (eq_refl (term702 _146801 P x h)). Qed.
Lemma lem8431348 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term704 _146801 P x y) = (term704 _146801 P x y).
Proof. exact (eq_refl (term704 _146801 P x y)). Qed.
Lemma lem8431349 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (x : _146801) (h : _146801) : ((term702 _146801 P x y) = (term702 _146801 P x h)) = ((term702 _146801 P x y) = (term574 _146801 P x h)).
Proof. exact (MK_COMB (@lem8431348 _146801 P x y) (@lem8431347 _146801 P x h)). Qed.
Lemma lem8431350 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term702 _146801 P x y) = (term574 _146801 P x y).
Proof. exact (eq_refl (term702 _146801 P x y)). Qed.
Lemma lem8431351 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431352 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term704 _146801 P x y) = (term700 _146801 P x y).
Proof. exact (MK_COMB (@lem8431351) (@lem8431350 _146801 P x y)). Qed.
Lemma lem8431353 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) : (term574 _146801 P x h) = (term574 _146801 P x h).
Proof. exact (eq_refl (term574 _146801 P x h)). Qed.
Lemma lem8431354 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (x : _146801) (h : _146801) : ((term702 _146801 P x y) = (term574 _146801 P x h)) = ((term574 _146801 P x y) = (term574 _146801 P x h)).
Proof. exact (MK_COMB (@lem8431352 _146801 P x y) (@lem8431353 _146801 P x h)). Qed.
Lemma lem8431355 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (x : _146801) (h : _146801) : ((term702 _146801 P x y) = (term702 _146801 P x h)) = ((term574 _146801 P x y) = (term574 _146801 P x h)).
Proof. exact (TRANS (@lem8431349 _146801 y P x h) (@lem8431354 _146801 y P x h)). Qed.
Lemma lem8431356 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term574 _146801 P x y) = (term574 _146801 P x h).
Proof. exact (EQ_MP (@lem8431355 _146801 y P x h) (@lem8431346 _146801 P x y h h1)). Qed.
Lemma lem8431357 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : y = h) : term574 _146801 P x h.
Proof. exact (EQ_MP (@lem8431356 _146801 P x y h h2) (@lem8429903 _146801 x y h P t h1)). Qed.
Lemma lem8431371 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8431483 {_146801 : Type'} (_116111 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term582 _146801 t P h _116111.
Proof. exact (EQ_MP (@lem8429239 _146801 t P h _116111) (@lem8429238 _146801 _116111 x y h P t h1)). Qed.
Lemma lem8431498 {_146801 : Type'} (P : type1402 _146801) (y : _146801) : (term697 _146801 P y) = (term697 _146801 P y).
Proof. exact (eq_refl (term697 _146801 P y)). Qed.
Lemma lem8431499 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term698 _146801 P y x) = (term698 _146801 P y h).
Proof. exact (MK_COMB (@lem8431498 _146801 P y) (@lem8429957 _146801 x h h1)). Qed.
Lemma lem8431500 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term698 _146801 P y h) = (term574 _146801 P h y).
Proof. exact (eq_refl (term698 _146801 P y h)). Qed.
Lemma lem8431501 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term699 _146801 P y x) = (term699 _146801 P y x).
Proof. exact (eq_refl (term699 _146801 P y x)). Qed.
Lemma lem8431502 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term698 _146801 P y x) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431501 _146801 P y x) (@lem8431500 _146801 P h y)). Qed.
Lemma lem8431503 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term698 _146801 P y x) = (term574 _146801 P x y).
Proof. exact (eq_refl (term698 _146801 P y x)). Qed.
Lemma lem8431504 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431505 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term699 _146801 P y x) = (term700 _146801 P x y).
Proof. exact (MK_COMB (@lem8431504) (@lem8431503 _146801 P x y)). Qed.
Lemma lem8431506 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term574 _146801 P h y)). Qed.
Lemma lem8431507 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term574 _146801 P h y)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431505 _146801 P x y) (@lem8431506 _146801 P h y)). Qed.
Lemma lem8431508 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (TRANS (@lem8431502 _146801 x P h y) (@lem8431507 _146801 x P h y)). Qed.
Lemma lem8431509 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term574 _146801 P x y) = (term574 _146801 P h y).
Proof. exact (EQ_MP (@lem8431508 _146801 x P h y) (@lem8431499 _146801 P y x h h1)). Qed.
Lemma lem8431510 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term574 _146801 P h y.
Proof. exact (EQ_MP (@lem8431509 _146801 P y x h h2) (@lem8429953 _146801 x y h P t h1)). Qed.
Lemma lem8431524 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8431651 {_146801 : Type'} (P : type1402 _146801) : (term692 _146801 P) = (term692 _146801 P).
Proof. exact (eq_refl (term692 _146801 P)). Qed.
Lemma lem8431652 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term693 _146801 P x) = (term693 _146801 P h).
Proof. exact (MK_COMB (@lem8431651 _146801 P) (@lem8430039 _146801 x h h1)). Qed.
Lemma lem8431653 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term693 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term693 _146801 P h)). Qed.
Lemma lem8431654 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term694 _146801 P x).
Proof. exact (eq_refl (term694 _146801 P x)). Qed.
Lemma lem8431655 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term693 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8431654 _146801 P x) (@lem8431653 _146801 P h)). Qed.
Lemma lem8431656 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term693 _146801 P x) = (term601 _146801 P x).
Proof. exact (eq_refl (term693 _146801 P x)). Qed.
Lemma lem8431657 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431658 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term695 _146801 P x).
Proof. exact (MK_COMB (@lem8431657) (@lem8431656 _146801 P x)). Qed.
Lemma lem8431659 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term601 _146801 P h)). Qed.
Lemma lem8431660 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term601 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8431658 _146801 P x) (@lem8431659 _146801 P h)). Qed.
Lemma lem8431661 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (TRANS (@lem8431655 _146801 x P h) (@lem8431660 _146801 x P h)). Qed.
Lemma lem8431662 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term601 _146801 P x) = (term601 _146801 P h).
Proof. exact (EQ_MP (@lem8431661 _146801 x P h) (@lem8431652 _146801 P x h h1)). Qed.
Lemma lem8431663 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term601 _146801 P h.
Proof. exact (EQ_MP (@lem8431662 _146801 P x h h2) (@lem8430037 _146801 h t P x h1)). Qed.
Lemma lem8431705 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term696 _146801 h P _116121 _116122.
Proof. exact (proj1 (@lem8429487 _146801 _116121 _116122 h x P t h1)). Qed.
Lemma lem8431846 {_146801 : Type'} (P : type1402 _146801) (y : _146801) : (term697 _146801 P y) = (term697 _146801 P y).
Proof. exact (eq_refl (term697 _146801 P y)). Qed.
Lemma lem8431847 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term698 _146801 P y x) = (term698 _146801 P y h).
Proof. exact (MK_COMB (@lem8431846 _146801 P y) (@lem8430287 _146801 x h h1)). Qed.
Lemma lem8431848 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term698 _146801 P y h) = (term574 _146801 P h y).
Proof. exact (eq_refl (term698 _146801 P y h)). Qed.
Lemma lem8431849 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term699 _146801 P y x) = (term699 _146801 P y x).
Proof. exact (eq_refl (term699 _146801 P y x)). Qed.
Lemma lem8431850 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term698 _146801 P y x) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431849 _146801 P y x) (@lem8431848 _146801 P h y)). Qed.
Lemma lem8431851 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term698 _146801 P y x) = (term574 _146801 P x y).
Proof. exact (eq_refl (term698 _146801 P y x)). Qed.
Lemma lem8431852 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8431853 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term699 _146801 P y x) = (term700 _146801 P x y).
Proof. exact (MK_COMB (@lem8431852) (@lem8431851 _146801 P x y)). Qed.
Lemma lem8431854 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term574 _146801 P h y)). Qed.
Lemma lem8431855 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term574 _146801 P h y)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8431853 _146801 P x y) (@lem8431854 _146801 P h y)). Qed.
Lemma lem8431856 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (TRANS (@lem8431850 _146801 x P h y) (@lem8431855 _146801 x P h y)). Qed.
Lemma lem8431857 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term574 _146801 P x y) = (term574 _146801 P h y).
Proof. exact (EQ_MP (@lem8431856 _146801 x P h y) (@lem8431847 _146801 P y x h h1)). Qed.
Lemma lem8431858 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term574 _146801 P h y.
Proof. exact (EQ_MP (@lem8431857 _146801 P y x h h2) (@lem8430283 _146801 x y h P t h1)). Qed.
Lemma lem8431872 {_146801 : Type'} (y : _146801) (h : _146801) (h1 : y = h) : y = h.
Proof. exact (h1). Qed.
Lemma lem8432027 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term701 _146801 P h) = (term701 _146801 P h).
Proof. exact (eq_refl (term701 _146801 P h)). Qed.
Lemma lem8432028 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term702 _146801 P h y) = (term703 _146801 P h).
Proof. exact (MK_COMB (@lem8432027 _146801 P h) (@lem8431872 _146801 y h h1)). Qed.
Lemma lem8432029 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term703 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term703 _146801 P h)). Qed.
Lemma lem8432030 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term704 _146801 P h y) = (term704 _146801 P h y).
Proof. exact (eq_refl (term704 _146801 P h y)). Qed.
Lemma lem8432031 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term703 _146801 P h)) = ((term702 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8432030 _146801 P h y) (@lem8432029 _146801 P h)). Qed.
Lemma lem8432032 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term702 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term702 _146801 P h y)). Qed.
Lemma lem8432033 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8432034 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term704 _146801 P h y) = (term700 _146801 P h y).
Proof. exact (MK_COMB (@lem8432033) (@lem8432032 _146801 P h y)). Qed.
Lemma lem8432035 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term601 _146801 P h)). Qed.
Lemma lem8432036 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term601 _146801 P h)) = ((term574 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8432034 _146801 P h y) (@lem8432035 _146801 P h)). Qed.
Lemma lem8432037 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (h : _146801) : ((term702 _146801 P h y) = (term703 _146801 P h)) = ((term574 _146801 P h y) = (term601 _146801 P h)).
Proof. exact (TRANS (@lem8432031 _146801 y P h) (@lem8432036 _146801 y P h)). Qed.
Lemma lem8432038 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (h1 : y = h) : (term574 _146801 P h y) = (term601 _146801 P h).
Proof. exact (EQ_MP (@lem8432037 _146801 y P h) (@lem8432028 _146801 P y h h1)). Qed.
Lemma lem8432039 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term601 _146801 P h.
Proof. exact (EQ_MP (@lem8432038 _146801 P y h h3) (@lem8431858 _146801 y P t x h h1 h2)). Qed.
Lemma lem8432053 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term705 _146801 h P _116137.
Proof. exact (proj1 (@lem8429318 _146801 _116137 x y h P t h1)). Qed.
Lemma lem8432165 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term601 _146801 P x''.
Proof. exact (proj2 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8432248 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term621 _146801 t P _116141.
Proof. exact (proj2 (@lem8429330 _146801 _116141 x y h P t h1)). Qed.
Lemma lem8432360 {_146801 : Type'} (_116146 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term582 _146801 t P h _116146.
Proof. exact (EQ_MP (@lem8429344 _146801 t P h _116146) (@lem8429343 _146801 _116146 x y h P t h1)). Qed.
Lemma lem8432375 {_146801 : Type'} (P : type1402 _146801) (y : _146801) : (term697 _146801 P y) = (term697 _146801 P y).
Proof. exact (eq_refl (term697 _146801 P y)). Qed.
Lemma lem8432376 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term698 _146801 P y x) = (term698 _146801 P y h).
Proof. exact (MK_COMB (@lem8432375 _146801 P y) (@lem8430371 _146801 x h h1)). Qed.
Lemma lem8432377 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term698 _146801 P y h) = (term574 _146801 P h y).
Proof. exact (eq_refl (term698 _146801 P y h)). Qed.
Lemma lem8432378 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) : (term699 _146801 P y x) = (term699 _146801 P y x).
Proof. exact (eq_refl (term699 _146801 P y x)). Qed.
Lemma lem8432379 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term698 _146801 P y x) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8432378 _146801 P y x) (@lem8432377 _146801 P h y)). Qed.
Lemma lem8432380 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term698 _146801 P y x) = (term574 _146801 P x y).
Proof. exact (eq_refl (term698 _146801 P y x)). Qed.
Lemma lem8432381 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8432382 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term699 _146801 P y x) = (term700 _146801 P x y).
Proof. exact (MK_COMB (@lem8432381) (@lem8432380 _146801 P x y)). Qed.
Lemma lem8432383 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term574 _146801 P h y).
Proof. exact (eq_refl (term574 _146801 P h y)). Qed.
Lemma lem8432384 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term574 _146801 P h y)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (MK_COMB (@lem8432382 _146801 P x y) (@lem8432383 _146801 P h y)). Qed.
Lemma lem8432385 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) (y : _146801) : ((term698 _146801 P y x) = (term698 _146801 P y h)) = ((term574 _146801 P x y) = (term574 _146801 P h y)).
Proof. exact (TRANS (@lem8432379 _146801 x P h y) (@lem8432384 _146801 x P h y)). Qed.
Lemma lem8432386 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term574 _146801 P x y) = (term574 _146801 P h y).
Proof. exact (EQ_MP (@lem8432385 _146801 x P h y) (@lem8432376 _146801 P y x h h1)). Qed.
Lemma lem8432387 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term574 _146801 P h y.
Proof. exact (EQ_MP (@lem8432386 _146801 P y x h h2) (@lem8430367 _146801 x y h P t h1)). Qed.
Lemma lem8432401 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8432514 {_146801 : Type'} (P : type1402 _146801) : (term692 _146801 P) = (term692 _146801 P).
Proof. exact (eq_refl (term692 _146801 P)). Qed.
Lemma lem8432515 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term693 _146801 P x) = (term693 _146801 P h).
Proof. exact (MK_COMB (@lem8432514 _146801 P) (@lem8430443 _146801 x h h1)). Qed.
Lemma lem8432516 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term693 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term693 _146801 P h)). Qed.
Lemma lem8432517 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term694 _146801 P x).
Proof. exact (eq_refl (term694 _146801 P x)). Qed.
Lemma lem8432518 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term693 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8432517 _146801 P x) (@lem8432516 _146801 P h)). Qed.
Lemma lem8432519 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term693 _146801 P x) = (term601 _146801 P x).
Proof. exact (eq_refl (term693 _146801 P x)). Qed.
Lemma lem8432520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8432521 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term694 _146801 P x) = (term695 _146801 P x).
Proof. exact (MK_COMB (@lem8432520) (@lem8432519 _146801 P x)). Qed.
Lemma lem8432522 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term601 _146801 P h).
Proof. exact (eq_refl (term601 _146801 P h)). Qed.
Lemma lem8432523 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term601 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (MK_COMB (@lem8432521 _146801 P x) (@lem8432522 _146801 P h)). Qed.
Lemma lem8432524 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (h : _146801) : ((term693 _146801 P x) = (term693 _146801 P h)) = ((term601 _146801 P x) = (term601 _146801 P h)).
Proof. exact (TRANS (@lem8432518 _146801 x P h) (@lem8432523 _146801 x P h)). Qed.
Lemma lem8432525 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : x = h) : (term601 _146801 P x) = (term601 _146801 P h).
Proof. exact (EQ_MP (@lem8432524 _146801 x P h) (@lem8432515 _146801 P x h h1)). Qed.
Lemma lem8432526 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term601 _146801 P h.
Proof. exact (EQ_MP (@lem8432525 _146801 P x h h2) (@lem8430441 _146801 h t P x h1)). Qed.
Lemma lem8432568 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term696 _146801 h P _116153 _116154.
Proof. exact (proj1 (@lem8429519 _146801 _116153 _116154 h x P t h1)). Qed.
Lemma lem8432666 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8432833 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8432986 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8433153 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term227 _146801 P t.
Proof. exact (h1). Qed.
Lemma lem8433318 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8433319 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8433318 _146801 x). Qed.
Lemma lem8433320 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8433319 _146801 h). Qed.
Lemma lem8433321 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8433320 _146801 h). Qed.
Lemma lem8433323 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433324 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8433323 (h = h)). Qed.
Lemma lem8433325 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8433324 _146801 h) (@lem8433321 _146801 h)). Qed.
Lemma lem8433327 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8433328 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8433327 _146801 x). Qed.
Lemma lem8433329 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8433328 _146801 h). Qed.
Lemma lem8433330 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8433329 _146801 h). Qed.
Lemma lem8433332 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433333 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8433332 (h = h)). Qed.
Lemma lem8433334 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8433333 _146801 h) (@lem8433330 _146801 h)). Qed.
Lemma lem8433352 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8433353 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term654 _146801 h P _116068 _116069) = (term709 _146801 P _116068 _116069 h).
Proof. exact (@lem8433352 (term572 _146801 P _116068 _116069) (term650 _146801 _116069 h)). Qed.
Lemma lem8433361 {_146801 : Type'} (_116068 : _146801) (h : _146801) : (term710 _146801 _116068 h) = (term710 _146801 _116068 h).
Proof. exact (eq_refl (term710 _146801 _116068 h)). Qed.
Lemma lem8433362 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term696 _146801 h P _116068 _116069) = (term711 _146801 P _116068 _116069 h).
Proof. exact (MK_COMB (@lem8433361 _146801 _116068 h) (@lem8433353 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433366 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8433367 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term711 _146801 P _116068 _116069 h) = (term713 _146801 P _116068 _116069 h).
Proof. exact (@lem8433366 (term572 _146801 P _116068 _116069) (term650 _146801 _116068 h) (term650 _146801 _116069 h)). Qed.
Lemma lem8433387 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term696 _146801 h P _116068 _116069) = (term713 _146801 P _116068 _116069 h).
Proof. exact (TRANS (@lem8433362 _146801 P _116068 _116069 h) (@lem8433367 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433388 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8433389 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term714 _146801 h P _116068 _116069) = (term715 _146801 P _116068 _116069 h).
Proof. exact (MK_COMB (@lem8433388) (@lem8433387 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433409 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term713 _146801 P _116068 _116069 h) = (term713 _146801 P _116068 _116069 h).
Proof. exact (eq_refl (term713 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433410 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : ((term696 _146801 h P _116068 _116069) = (term713 _146801 P _116068 _116069 h)) = ((term713 _146801 P _116068 _116069 h) = (term713 _146801 P _116068 _116069 h)).
Proof. exact (MK_COMB (@lem8433389 _146801 P _116068 _116069 h) (@lem8433409 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433412 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8433413 (x : Prop) : (x = x) = True.
Proof. exact (@lem8433412 Prop x). Qed.
Lemma lem8433414 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : ((term713 _146801 P _116068 _116069 h) = (term713 _146801 P _116068 _116069 h)) = True.
Proof. exact (@lem8433413 (term713 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433415 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : ((term696 _146801 h P _116068 _116069) = (term713 _146801 P _116068 _116069 h)) = True.
Proof. exact (TRANS (@lem8433410 _146801 P _116068 _116069 h) (@lem8433414 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433416 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : True = ((term696 _146801 h P _116068 _116069) = (term713 _146801 P _116068 _116069 h)).
Proof. exact (SYM (@lem8433415 _146801 P _116068 _116069 h)). Qed.
Lemma lem8433417 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term696 _146801 h P _116068 _116069) = (term713 _146801 P _116068 _116069 h).
Proof. exact (EQ_MP (@lem8433416 _146801 P _116068 _116069 h) (@lem0)). Qed.
Lemma lem8433418 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term713 _146801 P _116068 _116069 h.
Proof. exact (EQ_MP (@lem8433417 _146801 P _116068 _116069 h) (@lem8430940 _146801 _116068 _116069 h x P t h1)). Qed.
Lemma lem8433420 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8433421 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) : (term713 _146801 P _116068 _116069 h) = (term717 _146801 h P _116068 _116069).
Proof. exact (@lem8433420 (term718 _146801 _116068 _116069 h) (term572 _146801 P _116068 _116069)). Qed.
Lemma lem8433423 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8433424 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term721 _146801 _116068 _116069 h) = (term722 _146801 _116068 _116069 h).
Proof. exact (@lem8433423 (term650 _146801 _116068 h) (term650 _146801 _116069 h)). Qed.
Lemma lem8433426 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8433427 {_146801 : Type'} (_116068 : _146801) (h : _146801) : (term723 _146801 _116068 h) = (_116068 = h).
Proof. exact (@lem8433426 (_116068 = h)). Qed.
Lemma lem8433428 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8433429 {_146801 : Type'} (_116068 : _146801) (h : _146801) : (term724 _146801 _116068 h) = (term725 _146801 _116068 h).
Proof. exact (MK_COMB (@lem8433428) (@lem8433427 _146801 _116068 h)). Qed.
Lemma lem8433431 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8433432 {_146801 : Type'} (_116069 : _146801) (h : _146801) : (term723 _146801 _116069 h) = (_116069 = h).
Proof. exact (@lem8433431 (_116069 = h)). Qed.
Lemma lem8433433 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term722 _146801 _116068 _116069 h) = (term726 _146801 _116068 _116069 h).
Proof. exact (MK_COMB (@lem8433429 _146801 _116068 h) (@lem8433432 _146801 _116069 h)). Qed.
Lemma lem8433434 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term721 _146801 _116068 _116069 h) = (term726 _146801 _116068 _116069 h).
Proof. exact (TRANS (@lem8433424 _146801 _116068 _116069 h) (@lem8433433 _146801 _116068 _116069 h)). Qed.
Lemma lem8433435 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8433436 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) : (term727 _146801 _116068 _116069 h) = (term728 _146801 _116068 _116069 h).
Proof. exact (MK_COMB (@lem8433435) (@lem8433434 _146801 _116068 _116069 h)). Qed.
Lemma lem8433437 {_146801 : Type'} (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) : (term572 _146801 P _116068 _116069) = (term572 _146801 P _116068 _116069).
Proof. exact (eq_refl (term572 _146801 P _116068 _116069)). Qed.
Lemma lem8433438 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) : (term717 _146801 h P _116068 _116069) = (term729 _146801 h P _116068 _116069).
Proof. exact (MK_COMB (@lem8433436 _146801 _116068 _116069 h) (@lem8433437 _146801 P _116068 _116069)). Qed.
Lemma lem8433439 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116068 : _146801) (_116069 : _146801) : (term713 _146801 P _116068 _116069 h) = (term729 _146801 h P _116068 _116069).
Proof. exact (TRANS (@lem8433421 _146801 h P _116068 _116069) (@lem8433438 _146801 h P _116068 _116069)). Qed.
Lemma lem8433441 {_146801 : Type'} (h : _146801) : term730 _146801 h.
Proof. exact (conj (@lem8433325 _146801 h) (@lem8433334 _146801 h)). Qed.
Lemma lem8433443 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116068 _116069.
Proof. exact (EQ_MP (@lem8433439 _146801 h P _116068 _116069) (@lem8433418 _146801 _116068 _116069 h x P t h1)). Qed.
Lemma lem8433444 {_146801 : Type'} (_116068 : _146801) (_116069 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116068 _116069.
Proof. exact (@lem8433443 _146801 _116068 _116069 h x P t h1). Qed.
Lemma lem8433445 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term731 _146801 P h.
Proof. exact (@lem8433444 _146801 h h h x P t h1). Qed.
Lemma lem8433448 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (@lem8433445 _146801 h x P t h1 (@lem8433441 _146801 h)). Qed.
Lemma lem8433449 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term732 _146801 P h.
Proof. exact (fun h0 : term601 _146801 P h => @lem8433448 _146801 h x P t h1). Qed.
Lemma lem8433451 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433452 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term732 _146801 P h) = (term587 _146801 P h).
Proof. exact (@lem8433451 (term587 _146801 P h)). Qed.
Lemma lem8433453 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (EQ_MP (@lem8433452 _146801 P h) (@lem8433449 _146801 h x P t h1)). Qed.
Lemma lem8433456 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8433458 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term733 _146801 P h).
Proof. exact (@lem8433456 (term587 _146801 P h)). Qed.
Lemma lem8433461 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term733 _146801 P h.
Proof. exact (EQ_MP (@lem8433458 _146801 P h) (@lem8430898 _146801 t P x h h1 h2)). Qed.
Lemma lem8433464 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (@lem8433461 _146801 t P x h h2 h3 (@lem8433453 _146801 h x P t h1)). Qed.
Lemma lem8433465 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : term734.
Proof. exact (fun h0 : ~ False => @lem8433464 _146801 t P x h h1 h2 h3). Qed.
Lemma lem8433467 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433468 : term734 = False.
Proof. exact (@lem8433467 False). Qed.
Lemma lem8433551 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8433552 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8433551 _146801 x t h1). Qed.
Lemma lem8433554 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433555 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8433554 (@List.In _146801 x t)). Qed.
Lemma lem8433556 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8433555 _146801 x t) (@lem8433552 _146801 x t h1)). Qed.
Lemma lem8433562 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8433563 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : (term621 _146801 t P _116074) = (term736 _146801 P _116074 t).
Proof. exact (@lem8433562 (term587 _146801 P _116074) (term651 _146801 _116074 t)). Qed.
Lemma lem8433569 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8433570 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : (term737 _146801 t P _116074) = (term738 _146801 P _116074 t).
Proof. exact (MK_COMB (@lem8433569) (@lem8433563 _146801 P _116074 t)). Qed.
Lemma lem8433576 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : (term736 _146801 P _116074 t) = (term736 _146801 P _116074 t).
Proof. exact (eq_refl (term736 _146801 P _116074 t)). Qed.
Lemma lem8433577 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : ((term621 _146801 t P _116074) = (term736 _146801 P _116074 t)) = ((term736 _146801 P _116074 t) = (term736 _146801 P _116074 t)).
Proof. exact (MK_COMB (@lem8433570 _146801 P _116074 t) (@lem8433576 _146801 P _116074 t)). Qed.
Lemma lem8433579 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8433580 (x : Prop) : (x = x) = True.
Proof. exact (@lem8433579 Prop x). Qed.
Lemma lem8433581 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : ((term736 _146801 P _116074 t) = (term736 _146801 P _116074 t)) = True.
Proof. exact (@lem8433580 (term736 _146801 P _116074 t)). Qed.
Lemma lem8433582 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : ((term621 _146801 t P _116074) = (term736 _146801 P _116074 t)) = True.
Proof. exact (TRANS (@lem8433577 _146801 P _116074 t) (@lem8433581 _146801 P _116074 t)). Qed.
Lemma lem8433583 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : True = ((term621 _146801 t P _116074) = (term736 _146801 P _116074 t)).
Proof. exact (SYM (@lem8433582 _146801 P _116074 t)). Qed.
Lemma lem8433584 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) (t : list _146801) : (term621 _146801 t P _116074) = (term736 _146801 P _116074 t).
Proof. exact (EQ_MP (@lem8433583 _146801 P _116074 t) (@lem0)). Qed.
Lemma lem8433585 {_146801 : Type'} (_116074 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term736 _146801 P _116074 t.
Proof. exact (EQ_MP (@lem8433584 _146801 P _116074 t) (@lem8429639 _146801 _116074 P t h1)). Qed.
Lemma lem8433587 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8433588 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116074 : _146801) : (term736 _146801 P _116074 t) = (term739 _146801 t P _116074).
Proof. exact (@lem8433587 (term651 _146801 _116074 t) (term587 _146801 P _116074)). Qed.
Lemma lem8433590 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8433591 {_146801 : Type'} (_116074 : _146801) (t : list _146801) : (term740 _146801 _116074 t) = (@List.In _146801 _116074 t).
Proof. exact (@lem8433590 (@List.In _146801 _116074 t)). Qed.
Lemma lem8433592 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8433593 {_146801 : Type'} (_116074 : _146801) (t : list _146801) : (term741 _146801 _116074 t) = (term29 _146801 _116074 t).
Proof. exact (MK_COMB (@lem8433592) (@lem8433591 _146801 _116074 t)). Qed.
Lemma lem8433594 {_146801 : Type'} (P : type1402 _146801) (_116074 : _146801) : (term587 _146801 P _116074) = (term587 _146801 P _116074).
Proof. exact (eq_refl (term587 _146801 P _116074)). Qed.
Lemma lem8433595 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116074 : _146801) : (term739 _146801 t P _116074) = (term742 _146801 t P _116074).
Proof. exact (MK_COMB (@lem8433593 _146801 _116074 t) (@lem8433594 _146801 P _116074)). Qed.
Lemma lem8433596 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116074 : _146801) : (term736 _146801 P _116074 t) = (term742 _146801 t P _116074).
Proof. exact (TRANS (@lem8433588 _146801 t P _116074) (@lem8433595 _146801 t P _116074)). Qed.
Lemma lem8433599 {_146801 : Type'} (_116074 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term742 _146801 t P _116074.
Proof. exact (EQ_MP (@lem8433596 _146801 t P _116074) (@lem8433585 _146801 _116074 P t h1)). Qed.
Lemma lem8433600 {_146801 : Type'} (_116074 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term742 _146801 t P _116074.
Proof. exact (@lem8433599 _146801 _116074 P t h1). Qed.
Lemma lem8433601 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term742 _146801 t P x.
Proof. exact (@lem8433600 _146801 x P t h1). Qed.
Lemma lem8433604 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (@lem8433601 _146801 x P t h1 (@lem8433556 _146801 x t h2)). Qed.
Lemma lem8433605 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) : term732 _146801 P x.
Proof. exact (fun h0 : term601 _146801 P x => @lem8433604 _146801 P x t h1 h2). Qed.
Lemma lem8433607 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433608 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term732 _146801 P x) = (term587 _146801 P x).
Proof. exact (@lem8433607 (term587 _146801 P x)). Qed.
Lemma lem8433609 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (EQ_MP (@lem8433608 _146801 P x) (@lem8433605 _146801 P x t h1 h2)). Qed.
Lemma lem8433612 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8433614 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term601 _146801 P x) = (term733 _146801 P x).
Proof. exact (@lem8433612 (term587 _146801 P x)). Qed.
Lemma lem8433617 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term733 _146801 P x.
Proof. exact (EQ_MP (@lem8433614 _146801 P x) (@lem8429643 _146801 h t P x h1)). Qed.
Lemma lem8433620 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (@lem8433617 _146801 h t P x h2 (@lem8433609 _146801 P x t h1 h3)). Qed.
Lemma lem8433621 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : term734.
Proof. exact (fun h0 : ~ False => @lem8433620 _146801 h P x t h1 h2 h3). Qed.
Lemma lem8433623 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433624 : term734 = False.
Proof. exact (@lem8433623 False). Qed.
Lemma lem8433625 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8433624) (@lem8433621 _146801 h P x t h1 h2 h3)). Qed.
Lemma lem8433707 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8433708 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8433707 _146801 x). Qed.
Lemma lem8433709 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8433708 _146801 h). Qed.
Lemma lem8433710 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8433709 _146801 h). Qed.
Lemma lem8433712 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433713 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8433712 (h = h)). Qed.
Lemma lem8433714 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8433713 _146801 h) (@lem8433710 _146801 h)). Qed.
Lemma lem8433716 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (proj1 (@lem8426224 _146801 t P h x h1)). Qed.
Lemma lem8433717 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8433716 _146801 t P h x h1). Qed.
Lemma lem8433719 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433720 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8433719 (@List.In _146801 x t)). Qed.
Lemma lem8433721 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8433720 _146801 x t) (@lem8433717 _146801 t P h x h1)). Qed.
Lemma lem8433739 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8433740 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) (t : list _146801) : (term582 _146801 t P _116082 _116083) = (term743 _146801 P _116082 _116083 t).
Proof. exact (@lem8433739 (term572 _146801 P _116082 _116083) (term651 _146801 _116083 t)). Qed.
Lemma lem8433746 {_146801 : Type'} (_116082 : _146801) (h : _146801) : (term710 _146801 _116082 h) = (term710 _146801 _116082 h).
Proof. exact (eq_refl (term710 _146801 _116082 h)). Qed.
Lemma lem8433747 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) (t : list _146801) : (term691 _146801 h t P _116082 _116083) = (term744 _146801 h P _116082 _116083 t).
Proof. exact (MK_COMB (@lem8433746 _146801 _116082 h) (@lem8433740 _146801 P _116082 _116083 t)). Qed.
Lemma lem8433751 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8433752 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term744 _146801 h P _116082 _116083 t) = (term745 _146801 P _116082 h _116083 t).
Proof. exact (@lem8433751 (term572 _146801 P _116082 _116083) (term650 _146801 _116082 h) (term651 _146801 _116083 t)). Qed.
Lemma lem8433770 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term691 _146801 h t P _116082 _116083) = (term745 _146801 P _116082 h _116083 t).
Proof. exact (TRANS (@lem8433747 _146801 h P _116082 _116083 t) (@lem8433752 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433771 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8433772 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term746 _146801 h t P _116082 _116083) = (term747 _146801 P _116082 h _116083 t).
Proof. exact (MK_COMB (@lem8433771) (@lem8433770 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433790 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term745 _146801 P _116082 h _116083 t) = (term745 _146801 P _116082 h _116083 t).
Proof. exact (eq_refl (term745 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433791 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : ((term691 _146801 h t P _116082 _116083) = (term745 _146801 P _116082 h _116083 t)) = ((term745 _146801 P _116082 h _116083 t) = (term745 _146801 P _116082 h _116083 t)).
Proof. exact (MK_COMB (@lem8433772 _146801 P _116082 h _116083 t) (@lem8433790 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433793 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8433794 (x : Prop) : (x = x) = True.
Proof. exact (@lem8433793 Prop x). Qed.
Lemma lem8433795 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : ((term745 _146801 P _116082 h _116083 t) = (term745 _146801 P _116082 h _116083 t)) = True.
Proof. exact (@lem8433794 (term745 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433796 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : ((term691 _146801 h t P _116082 _116083) = (term745 _146801 P _116082 h _116083 t)) = True.
Proof. exact (TRANS (@lem8433791 _146801 P _116082 h _116083 t) (@lem8433795 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433797 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : True = ((term691 _146801 h t P _116082 _116083) = (term745 _146801 P _116082 h _116083 t)).
Proof. exact (SYM (@lem8433796 _146801 P _116082 h _116083 t)). Qed.
Lemma lem8433798 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term691 _146801 h t P _116082 _116083) = (term745 _146801 P _116082 h _116083 t).
Proof. exact (EQ_MP (@lem8433797 _146801 P _116082 h _116083 t) (@lem0)). Qed.
Lemma lem8433799 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term745 _146801 P _116082 h _116083 t.
Proof. exact (EQ_MP (@lem8433798 _146801 P _116082 h _116083 t) (@lem8429723 _146801 _116082 _116083 h x P t h1)). Qed.
Lemma lem8433801 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8433802 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) : (term745 _146801 P _116082 h _116083 t) = (term748 _146801 h t P _116082 _116083).
Proof. exact (@lem8433801 (term749 _146801 _116082 h _116083 t) (term572 _146801 P _116082 _116083)). Qed.
Lemma lem8433804 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8433805 {_146801 : Type'} (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term750 _146801 _116082 h _116083 t) = (term751 _146801 _116082 h _116083 t).
Proof. exact (@lem8433804 (term650 _146801 _116082 h) (term651 _146801 _116083 t)). Qed.
Lemma lem8433807 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8433808 {_146801 : Type'} (_116082 : _146801) (h : _146801) : (term723 _146801 _116082 h) = (_116082 = h).
Proof. exact (@lem8433807 (_116082 = h)). Qed.
Lemma lem8433809 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8433810 {_146801 : Type'} (_116082 : _146801) (h : _146801) : (term724 _146801 _116082 h) = (term725 _146801 _116082 h).
Proof. exact (MK_COMB (@lem8433809) (@lem8433808 _146801 _116082 h)). Qed.
Lemma lem8433812 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8433813 {_146801 : Type'} (_116083 : _146801) (t : list _146801) : (term740 _146801 _116083 t) = (@List.In _146801 _116083 t).
Proof. exact (@lem8433812 (@List.In _146801 _116083 t)). Qed.
Lemma lem8433814 {_146801 : Type'} (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term751 _146801 _116082 h _116083 t) = (term752 _146801 _116082 h _116083 t).
Proof. exact (MK_COMB (@lem8433810 _146801 _116082 h) (@lem8433813 _146801 _116083 t)). Qed.
Lemma lem8433815 {_146801 : Type'} (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term750 _146801 _116082 h _116083 t) = (term752 _146801 _116082 h _116083 t).
Proof. exact (TRANS (@lem8433805 _146801 _116082 h _116083 t) (@lem8433814 _146801 _116082 h _116083 t)). Qed.
Lemma lem8433816 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8433817 {_146801 : Type'} (_116082 : _146801) (h : _146801) (_116083 : _146801) (t : list _146801) : (term753 _146801 _116082 h _116083 t) = (term754 _146801 _116082 h _116083 t).
Proof. exact (MK_COMB (@lem8433816) (@lem8433815 _146801 _116082 h _116083 t)). Qed.
Lemma lem8433818 {_146801 : Type'} (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) : (term572 _146801 P _116082 _116083) = (term572 _146801 P _116082 _116083).
Proof. exact (eq_refl (term572 _146801 P _116082 _116083)). Qed.
Lemma lem8433819 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) : (term748 _146801 h t P _116082 _116083) = (term755 _146801 h t P _116082 _116083).
Proof. exact (MK_COMB (@lem8433817 _146801 _116082 h _116083 t) (@lem8433818 _146801 P _116082 _116083)). Qed.
Lemma lem8433820 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116082 : _146801) (_116083 : _146801) : (term745 _146801 P _116082 h _116083 t) = (term755 _146801 h t P _116082 _116083).
Proof. exact (TRANS (@lem8433802 _146801 h t P _116082 _116083) (@lem8433819 _146801 h t P _116082 _116083)). Qed.
Lemma lem8433822 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term756 _146801 h x t.
Proof. exact (conj (@lem8433714 _146801 h) (@lem8433721 _146801 t P h x h1)). Qed.
Lemma lem8433824 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116082 _116083.
Proof. exact (EQ_MP (@lem8433820 _146801 h t P _116082 _116083) (@lem8433799 _146801 _116082 _116083 h x P t h1)). Qed.
Lemma lem8433825 {_146801 : Type'} (_116082 : _146801) (_116083 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116082 _116083.
Proof. exact (@lem8433824 _146801 _116082 _116083 h x P t h1). Qed.
Lemma lem8433826 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term757 _146801 t P h x.
Proof. exact (@lem8433825 _146801 h x h x P t h1). Qed.
Lemma lem8433829 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (@lem8433826 _146801 h x P t h1 (@lem8433822 _146801 t P h x h2)). Qed.
Lemma lem8433830 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term758 _146801 P h x.
Proof. exact (fun h0 : term574 _146801 P h x => @lem8433829 _146801 t P h x h1 h2). Qed.
Lemma lem8433832 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433833 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term758 _146801 P h x) = (term572 _146801 P h x).
Proof. exact (@lem8433832 (term572 _146801 P h x)). Qed.
Lemma lem8433834 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (EQ_MP (@lem8433833 _146801 P h x) (@lem8433830 _146801 t P h x h1 h2)). Qed.
Lemma lem8433837 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8433839 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term574 _146801 P h x) = (term759 _146801 P h x).
Proof. exact (@lem8433837 (term572 _146801 P h x)). Qed.
Lemma lem8433842 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term759 _146801 P h x.
Proof. exact (EQ_MP (@lem8433839 _146801 P h x) (@lem8429713 _146801 t P h x h1)). Qed.
Lemma lem8433845 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (@lem8433842 _146801 t P h x h2 (@lem8433834 _146801 t P h x h1 h2)). Qed.
Lemma lem8433846 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term734.
Proof. exact (fun h0 : ~ False => @lem8433845 _146801 t P h x h1 h2). Qed.
Lemma lem8433848 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433849 : term734 = False.
Proof. exact (@lem8433848 False). Qed.
Lemma lem8433850 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (EQ_MP (@lem8433849) (@lem8433846 _146801 t P h x h1 h2)). Qed.
Lemma lem8433932 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (proj2 (@lem8426210 _146801 P t h1)). Qed.
Lemma lem8433933 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term760 _146801 P t.
Proof. exact (fun h0 : term227 _146801 P t => @lem8433932 _146801 P t h1). Qed.
Lemma lem8433935 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433936 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term760 _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (@lem8433935 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8433937 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (EQ_MP (@lem8433936 _146801 P t) (@lem8433933 _146801 P t h1)). Qed.
Lemma lem8433940 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8433942 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term761 _146801 P t).
Proof. exact (@lem8433940 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8433945 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term761 _146801 P t.
Proof. exact (EQ_MP (@lem8433942 _146801 P t) (@lem8429779 _146801 P t h1)). Qed.
Lemma lem8433948 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : False.
Proof. exact (@lem8433945 _146801 P t h1 (@lem8433937 _146801 P t h2)). Qed.
Lemma lem8433949 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8433948 _146801 P t h1 h2). Qed.
Lemma lem8433951 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8433952 : term734 = False.
Proof. exact (@lem8433951 False). Qed.
Lemma lem8433953 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : False.
Proof. exact (EQ_MP (@lem8433952) (@lem8433949 _146801 P t h1 h2)). Qed.
Lemma lem8434035 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8434036 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8434035 _146801 x). Qed.
Lemma lem8434037 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8434036 _146801 h). Qed.
Lemma lem8434038 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8434037 _146801 h). Qed.
Lemma lem8434040 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434041 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8434040 (h = h)). Qed.
Lemma lem8434042 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8434041 _146801 h) (@lem8434038 _146801 h)). Qed.
Lemma lem8434048 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434049 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : (term705 _146801 h P _116096) = (term762 _146801 P _116096 h).
Proof. exact (@lem8434048 (term587 _146801 P _116096) (term650 _146801 _116096 h)). Qed.
Lemma lem8434057 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434058 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : (term763 _146801 h P _116096) = (term764 _146801 P _116096 h).
Proof. exact (MK_COMB (@lem8434057) (@lem8434049 _146801 P _116096 h)). Qed.
Lemma lem8434066 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : (term762 _146801 P _116096 h) = (term762 _146801 P _116096 h).
Proof. exact (eq_refl (term762 _146801 P _116096 h)). Qed.
Lemma lem8434067 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : ((term705 _146801 h P _116096) = (term762 _146801 P _116096 h)) = ((term762 _146801 P _116096 h) = (term762 _146801 P _116096 h)).
Proof. exact (MK_COMB (@lem8434058 _146801 P _116096 h) (@lem8434066 _146801 P _116096 h)). Qed.
Lemma lem8434069 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434070 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434069 Prop x). Qed.
Lemma lem8434071 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : ((term762 _146801 P _116096 h) = (term762 _146801 P _116096 h)) = True.
Proof. exact (@lem8434070 (term762 _146801 P _116096 h)). Qed.
Lemma lem8434072 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : ((term705 _146801 h P _116096) = (term762 _146801 P _116096 h)) = True.
Proof. exact (TRANS (@lem8434067 _146801 P _116096 h) (@lem8434071 _146801 P _116096 h)). Qed.
Lemma lem8434073 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : True = ((term705 _146801 h P _116096) = (term762 _146801 P _116096 h)).
Proof. exact (SYM (@lem8434072 _146801 P _116096 h)). Qed.
Lemma lem8434074 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) (h : _146801) : (term705 _146801 h P _116096) = (term762 _146801 P _116096 h).
Proof. exact (EQ_MP (@lem8434073 _146801 P _116096 h) (@lem0)). Qed.
Lemma lem8434075 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term762 _146801 P _116096 h.
Proof. exact (EQ_MP (@lem8434074 _146801 P _116096 h) (@lem8431232 _146801 _116096 x y h P t h1)). Qed.
Lemma lem8434077 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434078 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116096 : _146801) : (term762 _146801 P _116096 h) = (term765 _146801 h P _116096).
Proof. exact (@lem8434077 (term650 _146801 _116096 h) (term587 _146801 P _116096)). Qed.
Lemma lem8434080 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434081 {_146801 : Type'} (_116096 : _146801) (h : _146801) : (term723 _146801 _116096 h) = (_116096 = h).
Proof. exact (@lem8434080 (_116096 = h)). Qed.
Lemma lem8434082 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434083 {_146801 : Type'} (_116096 : _146801) (h : _146801) : (term766 _146801 _116096 h) = (term767 _146801 _116096 h).
Proof. exact (MK_COMB (@lem8434082) (@lem8434081 _146801 _116096 h)). Qed.
Lemma lem8434084 {_146801 : Type'} (P : type1402 _146801) (_116096 : _146801) : (term587 _146801 P _116096) = (term587 _146801 P _116096).
Proof. exact (eq_refl (term587 _146801 P _116096)). Qed.
Lemma lem8434085 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116096 : _146801) : (term765 _146801 h P _116096) = (term768 _146801 h P _116096).
Proof. exact (MK_COMB (@lem8434083 _146801 _116096 h) (@lem8434084 _146801 P _116096)). Qed.
Lemma lem8434086 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116096 : _146801) : (term762 _146801 P _116096 h) = (term768 _146801 h P _116096).
Proof. exact (TRANS (@lem8434078 _146801 h P _116096) (@lem8434085 _146801 h P _116096)). Qed.
Lemma lem8434089 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term768 _146801 h P _116096.
Proof. exact (EQ_MP (@lem8434086 _146801 h P _116096) (@lem8434075 _146801 _116096 x y h P t h1)). Qed.
Lemma lem8434090 {_146801 : Type'} (_116096 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term768 _146801 h P _116096.
Proof. exact (@lem8434089 _146801 _116096 x y h P t h1). Qed.
Lemma lem8434091 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term769 _146801 P h.
Proof. exact (@lem8434090 _146801 h x y h P t h1). Qed.
Lemma lem8434094 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term587 _146801 P h.
Proof. exact (@lem8434091 _146801 x y h P t h1 (@lem8434042 _146801 h)). Qed.
Lemma lem8434095 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term732 _146801 P h.
Proof. exact (fun h0 : term601 _146801 P h => @lem8434094 _146801 x y h P t h1). Qed.
Lemma lem8434097 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434098 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term732 _146801 P h) = (term587 _146801 P h).
Proof. exact (@lem8434097 (term587 _146801 P h)). Qed.
Lemma lem8434099 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term587 _146801 P h.
Proof. exact (EQ_MP (@lem8434098 _146801 P h) (@lem8434095 _146801 x y h P t h1)). Qed.
Lemma lem8434102 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8434104 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term733 _146801 P h).
Proof. exact (@lem8434102 (term587 _146801 P h)). Qed.
Lemma lem8434107 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term733 _146801 P h.
Proof. exact (EQ_MP (@lem8434104 _146801 P h) (@lem8431218 _146801 P t x y h h1 h2 h3)). Qed.
Lemma lem8434110 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (@lem8434107 _146801 P t x y h h1 h2 h3 (@lem8434099 _146801 x y h P t h1)). Qed.
Lemma lem8434111 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term734.
Proof. exact (fun h0 : ~ False => @lem8434110 _146801 P t x y h h1 h2 h3). Qed.
Lemma lem8434113 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434114 : term734 = False.
Proof. exact (@lem8434113 False). Qed.
Lemma lem8434197 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8434198 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8434197 _146801 x t h1). Qed.
Lemma lem8434200 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434201 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8434200 (@List.In _146801 x t)). Qed.
Lemma lem8434202 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8434201 _146801 x t) (@lem8434198 _146801 x t h1)). Qed.
Lemma lem8434208 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434209 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : (term582 _146801 t P h _116104) = (term743 _146801 P h _116104 t).
Proof. exact (@lem8434208 (term572 _146801 P h _116104) (term651 _146801 _116104 t)). Qed.
Lemma lem8434215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434216 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : (term770 _146801 t P h _116104) = (term771 _146801 P h _116104 t).
Proof. exact (MK_COMB (@lem8434215) (@lem8434209 _146801 P h _116104 t)). Qed.
Lemma lem8434222 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : (term743 _146801 P h _116104 t) = (term743 _146801 P h _116104 t).
Proof. exact (eq_refl (term743 _146801 P h _116104 t)). Qed.
Lemma lem8434223 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : ((term582 _146801 t P h _116104) = (term743 _146801 P h _116104 t)) = ((term743 _146801 P h _116104 t) = (term743 _146801 P h _116104 t)).
Proof. exact (MK_COMB (@lem8434216 _146801 P h _116104 t) (@lem8434222 _146801 P h _116104 t)). Qed.
Lemma lem8434225 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434226 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434225 Prop x). Qed.
Lemma lem8434227 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : ((term743 _146801 P h _116104 t) = (term743 _146801 P h _116104 t)) = True.
Proof. exact (@lem8434226 (term743 _146801 P h _116104 t)). Qed.
Lemma lem8434228 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : ((term582 _146801 t P h _116104) = (term743 _146801 P h _116104 t)) = True.
Proof. exact (TRANS (@lem8434223 _146801 P h _116104 t) (@lem8434227 _146801 P h _116104 t)). Qed.
Lemma lem8434229 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : True = ((term582 _146801 t P h _116104) = (term743 _146801 P h _116104 t)).
Proof. exact (SYM (@lem8434228 _146801 P h _116104 t)). Qed.
Lemma lem8434230 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) (t : list _146801) : (term582 _146801 t P h _116104) = (term743 _146801 P h _116104 t).
Proof. exact (EQ_MP (@lem8434229 _146801 P h _116104 t) (@lem0)). Qed.
Lemma lem8434231 {_146801 : Type'} (_116104 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term743 _146801 P h _116104 t.
Proof. exact (EQ_MP (@lem8434230 _146801 P h _116104 t) (@lem8431330 _146801 _116104 x y h P t h1)). Qed.
Lemma lem8434233 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434234 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116104 : _146801) : (term743 _146801 P h _116104 t) = (term772 _146801 t P h _116104).
Proof. exact (@lem8434233 (term651 _146801 _116104 t) (term572 _146801 P h _116104)). Qed.
Lemma lem8434236 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434237 {_146801 : Type'} (_116104 : _146801) (t : list _146801) : (term740 _146801 _116104 t) = (@List.In _146801 _116104 t).
Proof. exact (@lem8434236 (@List.In _146801 _116104 t)). Qed.
Lemma lem8434238 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434239 {_146801 : Type'} (_116104 : _146801) (t : list _146801) : (term741 _146801 _116104 t) = (term29 _146801 _116104 t).
Proof. exact (MK_COMB (@lem8434238) (@lem8434237 _146801 _116104 t)). Qed.
Lemma lem8434240 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116104 : _146801) : (term572 _146801 P h _116104) = (term572 _146801 P h _116104).
Proof. exact (eq_refl (term572 _146801 P h _116104)). Qed.
Lemma lem8434241 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116104 : _146801) : (term772 _146801 t P h _116104) = (term773 _146801 t P h _116104).
Proof. exact (MK_COMB (@lem8434239 _146801 _116104 t) (@lem8434240 _146801 P h _116104)). Qed.
Lemma lem8434242 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116104 : _146801) : (term743 _146801 P h _116104 t) = (term773 _146801 t P h _116104).
Proof. exact (TRANS (@lem8434234 _146801 t P h _116104) (@lem8434241 _146801 t P h _116104)). Qed.
Lemma lem8434245 {_146801 : Type'} (_116104 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116104.
Proof. exact (EQ_MP (@lem8434242 _146801 t P h _116104) (@lem8434231 _146801 _116104 x y h P t h1)). Qed.
Lemma lem8434246 {_146801 : Type'} (_116104 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116104.
Proof. exact (@lem8434245 _146801 _116104 x y h P t h1). Qed.
Lemma lem8434247 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h x.
Proof. exact (@lem8434246 _146801 x x y h P t h1). Qed.
Lemma lem8434250 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 x t) : term572 _146801 P h x.
Proof. exact (@lem8434247 _146801 x y h P t h1 (@lem8434202 _146801 x t h2)). Qed.
Lemma lem8434251 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 x t) : term758 _146801 P h x.
Proof. exact (fun h0 : term574 _146801 P h x => @lem8434250 _146801 y h P x t h1 h2). Qed.
Lemma lem8434253 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434254 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term758 _146801 P h x) = (term572 _146801 P h x).
Proof. exact (@lem8434253 (term572 _146801 P h x)). Qed.
Lemma lem8434255 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 x t) : term572 _146801 P h x.
Proof. exact (EQ_MP (@lem8434254 _146801 P h x) (@lem8434251 _146801 y h P x t h1 h2)). Qed.
Lemma lem8434261 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434262 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term577 _146801 P _116099 _116098) = (term774 _146801 P _116098 _116099).
Proof. exact (@lem8434261 (term572 _146801 P _116099 _116098) (term574 _146801 P _116098 _116099)). Qed.
Lemma lem8434268 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434269 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term775 _146801 P _116099 _116098) = (term776 _146801 P _116098 _116099).
Proof. exact (MK_COMB (@lem8434268) (@lem8434262 _146801 P _116098 _116099)). Qed.
Lemma lem8434275 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term774 _146801 P _116098 _116099) = (term774 _146801 P _116098 _116099).
Proof. exact (eq_refl (term774 _146801 P _116098 _116099)). Qed.
Lemma lem8434276 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : ((term577 _146801 P _116099 _116098) = (term774 _146801 P _116098 _116099)) = ((term774 _146801 P _116098 _116099) = (term774 _146801 P _116098 _116099)).
Proof. exact (MK_COMB (@lem8434269 _146801 P _116098 _116099) (@lem8434275 _146801 P _116098 _116099)). Qed.
Lemma lem8434278 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434279 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434278 Prop x). Qed.
Lemma lem8434280 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : ((term774 _146801 P _116098 _116099) = (term774 _146801 P _116098 _116099)) = True.
Proof. exact (@lem8434279 (term774 _146801 P _116098 _116099)). Qed.
Lemma lem8434281 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : ((term577 _146801 P _116099 _116098) = (term774 _146801 P _116098 _116099)) = True.
Proof. exact (TRANS (@lem8434276 _146801 P _116098 _116099) (@lem8434280 _146801 P _116098 _116099)). Qed.
Lemma lem8434282 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : True = ((term577 _146801 P _116099 _116098) = (term774 _146801 P _116098 _116099)).
Proof. exact (SYM (@lem8434281 _146801 P _116098 _116099)). Qed.
Lemma lem8434283 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term577 _146801 P _116099 _116098) = (term774 _146801 P _116098 _116099).
Proof. exact (EQ_MP (@lem8434282 _146801 P _116098 _116099) (@lem0)). Qed.
Lemma lem8434284 {_146801 : Type'} (_116098 : _146801) (_116099 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term774 _146801 P _116098 _116099.
Proof. exact (EQ_MP (@lem8434283 _146801 P _116098 _116099) (@lem8431274 _146801 _116099 _116098 P h1)). Qed.
Lemma lem8434286 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434287 {_146801 : Type'} (P : type1402 _146801) (_116099 : _146801) (_116098 : _146801) : (term774 _146801 P _116098 _116099) = (term777 _146801 P _116099 _116098).
Proof. exact (@lem8434286 (term574 _146801 P _116098 _116099) (term572 _146801 P _116099 _116098)). Qed.
Lemma lem8434289 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434290 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term778 _146801 P _116098 _116099) = (term572 _146801 P _116098 _116099).
Proof. exact (@lem8434289 (term572 _146801 P _116098 _116099)). Qed.
Lemma lem8434291 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434292 {_146801 : Type'} (P : type1402 _146801) (_116098 : _146801) (_116099 : _146801) : (term779 _146801 P _116098 _116099) = (term780 _146801 P _116098 _116099).
Proof. exact (MK_COMB (@lem8434291) (@lem8434290 _146801 P _116098 _116099)). Qed.
Lemma lem8434293 {_146801 : Type'} (P : type1402 _146801) (_116099 : _146801) (_116098 : _146801) : (term572 _146801 P _116099 _116098) = (term572 _146801 P _116099 _116098).
Proof. exact (eq_refl (term572 _146801 P _116099 _116098)). Qed.
Lemma lem8434294 {_146801 : Type'} (P : type1402 _146801) (_116099 : _146801) (_116098 : _146801) : (term777 _146801 P _116099 _116098) = (term781 _146801 P _116099 _116098).
Proof. exact (MK_COMB (@lem8434292 _146801 P _116098 _116099) (@lem8434293 _146801 P _116099 _116098)). Qed.
Lemma lem8434295 {_146801 : Type'} (P : type1402 _146801) (_116099 : _146801) (_116098 : _146801) : (term774 _146801 P _116098 _116099) = (term781 _146801 P _116099 _116098).
Proof. exact (TRANS (@lem8434287 _146801 P _116099 _116098) (@lem8434294 _146801 P _116099 _116098)). Qed.
Lemma lem8434298 {_146801 : Type'} (_116099 : _146801) (_116098 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term781 _146801 P _116099 _116098.
Proof. exact (EQ_MP (@lem8434295 _146801 P _116099 _116098) (@lem8434284 _146801 _116098 _116099 P h1)). Qed.
Lemma lem8434299 {_146801 : Type'} (_116099 : _146801) (_116098 : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term781 _146801 P _116099 _116098.
Proof. exact (@lem8434298 _146801 _116099 _116098 P h1). Qed.
Lemma lem8434300 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term781 _146801 P x h.
Proof. exact (@lem8434299 _146801 x h P h1). Qed.
Lemma lem8434303 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) : term572 _146801 P x h.
Proof. exact (@lem8434300 _146801 x h P h1 (@lem8434255 _146801 y h P x t h2 h3)). Qed.
Lemma lem8434304 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) : term758 _146801 P x h.
Proof. exact (fun h0 : term574 _146801 P x h => @lem8434303 _146801 y h P x t h1 h2 h3). Qed.
Lemma lem8434306 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434307 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) : (term758 _146801 P x h) = (term572 _146801 P x h).
Proof. exact (@lem8434306 (term572 _146801 P x h)). Qed.
Lemma lem8434308 {_146801 : Type'} (y : _146801) (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) : term572 _146801 P x h.
Proof. exact (EQ_MP (@lem8434307 _146801 P x h) (@lem8434304 _146801 y h P x t h1 h2 h3)). Qed.
Lemma lem8434311 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8434313 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) : (term574 _146801 P x h) = (term759 _146801 P x h).
Proof. exact (@lem8434311 (term572 _146801 P x h)). Qed.
Lemma lem8434316 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : y = h) : term759 _146801 P x h.
Proof. exact (EQ_MP (@lem8434313 _146801 P x h) (@lem8431357 _146801 x P t y h h1 h2)). Qed.
Lemma lem8434319 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (@lem8434316 _146801 x P t y h h2 h3 (@lem8434308 _146801 y h P x t h1 h2 h4)). Qed.
Lemma lem8434320 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : term734.
Proof. exact (fun h0 : ~ False => @lem8434319 _146801 P y h x t h1 h2 h3 h4). Qed.
Lemma lem8434322 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434323 : term734 = False.
Proof. exact (@lem8434322 False). Qed.
Lemma lem8434324 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8434323) (@lem8434320 _146801 P y h x t h1 h2 h3 h4)). Qed.
Lemma lem8434406 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8434407 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : term735 _146801 y t.
Proof. exact (fun h0 : term651 _146801 y t => @lem8434406 _146801 y t h1). Qed.
Lemma lem8434409 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434410 {_146801 : Type'} (y : _146801) (t : list _146801) : (term735 _146801 y t) = (@List.In _146801 y t).
Proof. exact (@lem8434409 (@List.In _146801 y t)). Qed.
Lemma lem8434411 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (EQ_MP (@lem8434410 _146801 y t) (@lem8434407 _146801 y t h1)). Qed.
Lemma lem8434417 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434418 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : (term582 _146801 t P h _116111) = (term743 _146801 P h _116111 t).
Proof. exact (@lem8434417 (term572 _146801 P h _116111) (term651 _146801 _116111 t)). Qed.
Lemma lem8434424 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434425 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : (term770 _146801 t P h _116111) = (term771 _146801 P h _116111 t).
Proof. exact (MK_COMB (@lem8434424) (@lem8434418 _146801 P h _116111 t)). Qed.
Lemma lem8434431 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : (term743 _146801 P h _116111 t) = (term743 _146801 P h _116111 t).
Proof. exact (eq_refl (term743 _146801 P h _116111 t)). Qed.
Lemma lem8434432 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : ((term582 _146801 t P h _116111) = (term743 _146801 P h _116111 t)) = ((term743 _146801 P h _116111 t) = (term743 _146801 P h _116111 t)).
Proof. exact (MK_COMB (@lem8434425 _146801 P h _116111 t) (@lem8434431 _146801 P h _116111 t)). Qed.
Lemma lem8434434 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434435 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434434 Prop x). Qed.
Lemma lem8434436 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : ((term743 _146801 P h _116111 t) = (term743 _146801 P h _116111 t)) = True.
Proof. exact (@lem8434435 (term743 _146801 P h _116111 t)). Qed.
Lemma lem8434437 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : ((term582 _146801 t P h _116111) = (term743 _146801 P h _116111 t)) = True.
Proof. exact (TRANS (@lem8434432 _146801 P h _116111 t) (@lem8434436 _146801 P h _116111 t)). Qed.
Lemma lem8434438 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : True = ((term582 _146801 t P h _116111) = (term743 _146801 P h _116111 t)).
Proof. exact (SYM (@lem8434437 _146801 P h _116111 t)). Qed.
Lemma lem8434439 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) (t : list _146801) : (term582 _146801 t P h _116111) = (term743 _146801 P h _116111 t).
Proof. exact (EQ_MP (@lem8434438 _146801 P h _116111 t) (@lem0)). Qed.
Lemma lem8434440 {_146801 : Type'} (_116111 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term743 _146801 P h _116111 t.
Proof. exact (EQ_MP (@lem8434439 _146801 P h _116111 t) (@lem8431483 _146801 _116111 x y h P t h1)). Qed.
Lemma lem8434442 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434443 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116111 : _146801) : (term743 _146801 P h _116111 t) = (term772 _146801 t P h _116111).
Proof. exact (@lem8434442 (term651 _146801 _116111 t) (term572 _146801 P h _116111)). Qed.
Lemma lem8434445 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434446 {_146801 : Type'} (_116111 : _146801) (t : list _146801) : (term740 _146801 _116111 t) = (@List.In _146801 _116111 t).
Proof. exact (@lem8434445 (@List.In _146801 _116111 t)). Qed.
Lemma lem8434447 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434448 {_146801 : Type'} (_116111 : _146801) (t : list _146801) : (term741 _146801 _116111 t) = (term29 _146801 _116111 t).
Proof. exact (MK_COMB (@lem8434447) (@lem8434446 _146801 _116111 t)). Qed.
Lemma lem8434449 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116111 : _146801) : (term572 _146801 P h _116111) = (term572 _146801 P h _116111).
Proof. exact (eq_refl (term572 _146801 P h _116111)). Qed.
Lemma lem8434450 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116111 : _146801) : (term772 _146801 t P h _116111) = (term773 _146801 t P h _116111).
Proof. exact (MK_COMB (@lem8434448 _146801 _116111 t) (@lem8434449 _146801 P h _116111)). Qed.
Lemma lem8434451 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116111 : _146801) : (term743 _146801 P h _116111 t) = (term773 _146801 t P h _116111).
Proof. exact (TRANS (@lem8434443 _146801 t P h _116111) (@lem8434450 _146801 t P h _116111)). Qed.
Lemma lem8434454 {_146801 : Type'} (_116111 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116111.
Proof. exact (EQ_MP (@lem8434451 _146801 t P h _116111) (@lem8434440 _146801 _116111 x y h P t h1)). Qed.
Lemma lem8434455 {_146801 : Type'} (_116111 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116111.
Proof. exact (@lem8434454 _146801 _116111 x y h P t h1). Qed.
Lemma lem8434456 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h y.
Proof. exact (@lem8434455 _146801 y x y h P t h1). Qed.
Lemma lem8434459 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term572 _146801 P h y.
Proof. exact (@lem8434456 _146801 x y h P t h1 (@lem8434411 _146801 y t h2)). Qed.
Lemma lem8434460 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term758 _146801 P h y.
Proof. exact (fun h0 : term574 _146801 P h y => @lem8434459 _146801 x h P y t h1 h2). Qed.
Lemma lem8434462 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434463 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term758 _146801 P h y) = (term572 _146801 P h y).
Proof. exact (@lem8434462 (term572 _146801 P h y)). Qed.
Lemma lem8434464 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term572 _146801 P h y.
Proof. exact (EQ_MP (@lem8434463 _146801 P h y) (@lem8434460 _146801 x h P y t h1 h2)). Qed.
Lemma lem8434467 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8434469 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term759 _146801 P h y).
Proof. exact (@lem8434467 (term572 _146801 P h y)). Qed.
Lemma lem8434472 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term759 _146801 P h y.
Proof. exact (EQ_MP (@lem8434469 _146801 P h y) (@lem8431510 _146801 y P t x h h1 h2)). Qed.
Lemma lem8434475 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (@lem8434472 _146801 y P t x h h1 h2 (@lem8434464 _146801 x h P y t h1 h3)). Qed.
Lemma lem8434476 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : term734.
Proof. exact (fun h0 : ~ False => @lem8434475 _146801 P x h y t h1 h2 h3). Qed.
Lemma lem8434478 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434479 : term734 = False.
Proof. exact (@lem8434478 False). Qed.
Lemma lem8434480 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8434479) (@lem8434476 _146801 P x h y t h1 h2 h3)). Qed.
Lemma lem8434562 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8434563 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8434562 _146801 x t h1). Qed.
Lemma lem8434565 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434566 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8434565 (@List.In _146801 x t)). Qed.
Lemma lem8434567 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8434566 _146801 x t) (@lem8434563 _146801 x t h1)). Qed.
Lemma lem8434569 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8434570 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : term735 _146801 y t.
Proof. exact (fun h0 : term651 _146801 y t => @lem8434569 _146801 y t h1). Qed.
Lemma lem8434572 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434573 {_146801 : Type'} (y : _146801) (t : list _146801) : (term735 _146801 y t) = (@List.In _146801 y t).
Proof. exact (@lem8434572 (@List.In _146801 y t)). Qed.
Lemma lem8434574 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (EQ_MP (@lem8434573 _146801 y t) (@lem8434570 _146801 y t h1)). Qed.
Lemma lem8434590 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434591 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term582 _146801 t P _116114 _116115) = (term743 _146801 P _116114 _116115 t).
Proof. exact (@lem8434590 (term572 _146801 P _116114 _116115) (term651 _146801 _116115 t)). Qed.
Lemma lem8434597 {_146801 : Type'} (_116114 : _146801) (t : list _146801) : (term203 _146801 _116114 t) = (term203 _146801 _116114 t).
Proof. exact (eq_refl (term203 _146801 _116114 t)). Qed.
Lemma lem8434598 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term677 _146801 t P _116114 _116115) = (term782 _146801 P _116114 _116115 t).
Proof. exact (MK_COMB (@lem8434597 _146801 _116114 t) (@lem8434591 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434602 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8434603 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term782 _146801 P _116114 _116115 t) = (term783 _146801 P _116114 _116115 t).
Proof. exact (@lem8434602 (term572 _146801 P _116114 _116115) (term651 _146801 _116114 t) (term651 _146801 _116115 t)). Qed.
Lemma lem8434619 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term677 _146801 t P _116114 _116115) = (term783 _146801 P _116114 _116115 t).
Proof. exact (TRANS (@lem8434598 _146801 P _116114 _116115 t) (@lem8434603 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434620 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434621 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term784 _146801 t P _116114 _116115) = (term785 _146801 P _116114 _116115 t).
Proof. exact (MK_COMB (@lem8434620) (@lem8434619 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434637 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term783 _146801 P _116114 _116115 t) = (term783 _146801 P _116114 _116115 t).
Proof. exact (eq_refl (term783 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434638 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : ((term677 _146801 t P _116114 _116115) = (term783 _146801 P _116114 _116115 t)) = ((term783 _146801 P _116114 _116115 t) = (term783 _146801 P _116114 _116115 t)).
Proof. exact (MK_COMB (@lem8434621 _146801 P _116114 _116115 t) (@lem8434637 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434640 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434641 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434640 Prop x). Qed.
Lemma lem8434642 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : ((term783 _146801 P _116114 _116115 t) = (term783 _146801 P _116114 _116115 t)) = True.
Proof. exact (@lem8434641 (term783 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434643 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : ((term677 _146801 t P _116114 _116115) = (term783 _146801 P _116114 _116115 t)) = True.
Proof. exact (TRANS (@lem8434638 _146801 P _116114 _116115 t) (@lem8434642 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434644 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : True = ((term677 _146801 t P _116114 _116115) = (term783 _146801 P _116114 _116115 t)).
Proof. exact (SYM (@lem8434643 _146801 P _116114 _116115 t)). Qed.
Lemma lem8434645 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term677 _146801 t P _116114 _116115) = (term783 _146801 P _116114 _116115 t).
Proof. exact (EQ_MP (@lem8434644 _146801 P _116114 _116115 t) (@lem0)). Qed.
Lemma lem8434646 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term783 _146801 P _116114 _116115 t.
Proof. exact (EQ_MP (@lem8434645 _146801 P _116114 _116115 t) (@lem8429985 _146801 _116114 _116115 P t h1)). Qed.
Lemma lem8434648 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434649 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) : (term783 _146801 P _116114 _116115 t) = (term786 _146801 t P _116114 _116115).
Proof. exact (@lem8434648 (term787 _146801 _116114 _116115 t) (term572 _146801 P _116114 _116115)). Qed.
Lemma lem8434651 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8434652 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term788 _146801 _116114 _116115 t) = (term789 _146801 _116114 _116115 t).
Proof. exact (@lem8434651 (term651 _146801 _116114 t) (term651 _146801 _116115 t)). Qed.
Lemma lem8434654 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434655 {_146801 : Type'} (_116114 : _146801) (t : list _146801) : (term740 _146801 _116114 t) = (@List.In _146801 _116114 t).
Proof. exact (@lem8434654 (@List.In _146801 _116114 t)). Qed.
Lemma lem8434656 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8434657 {_146801 : Type'} (_116114 : _146801) (t : list _146801) : (term790 _146801 _116114 t) = (term199 _146801 _116114 t).
Proof. exact (MK_COMB (@lem8434656) (@lem8434655 _146801 _116114 t)). Qed.
Lemma lem8434659 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434660 {_146801 : Type'} (_116115 : _146801) (t : list _146801) : (term740 _146801 _116115 t) = (@List.In _146801 _116115 t).
Proof. exact (@lem8434659 (@List.In _146801 _116115 t)). Qed.
Lemma lem8434661 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term789 _146801 _116114 _116115 t) = (term791 _146801 _116114 _116115 t).
Proof. exact (MK_COMB (@lem8434657 _146801 _116114 t) (@lem8434660 _146801 _116115 t)). Qed.
Lemma lem8434662 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term788 _146801 _116114 _116115 t) = (term791 _146801 _116114 _116115 t).
Proof. exact (TRANS (@lem8434652 _146801 _116114 _116115 t) (@lem8434661 _146801 _116114 _116115 t)). Qed.
Lemma lem8434663 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434664 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (t : list _146801) : (term792 _146801 _116114 _116115 t) = (term793 _146801 _116114 _116115 t).
Proof. exact (MK_COMB (@lem8434663) (@lem8434662 _146801 _116114 _116115 t)). Qed.
Lemma lem8434665 {_146801 : Type'} (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) : (term572 _146801 P _116114 _116115) = (term572 _146801 P _116114 _116115).
Proof. exact (eq_refl (term572 _146801 P _116114 _116115)). Qed.
Lemma lem8434666 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) : (term786 _146801 t P _116114 _116115) = (term794 _146801 t P _116114 _116115).
Proof. exact (MK_COMB (@lem8434664 _146801 _116114 _116115 t) (@lem8434665 _146801 P _116114 _116115)). Qed.
Lemma lem8434667 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116114 : _146801) (_116115 : _146801) : (term783 _146801 P _116114 _116115 t) = (term794 _146801 t P _116114 _116115).
Proof. exact (TRANS (@lem8434649 _146801 t P _116114 _116115) (@lem8434666 _146801 t P _116114 _116115)). Qed.
Lemma lem8434669 {_146801 : Type'} (x : _146801) (y : _146801) (t : list _146801) (h1 : @List.In _146801 x t) (h2 : @List.In _146801 y t) : term791 _146801 x y t.
Proof. exact (conj (@lem8434567 _146801 x t h1) (@lem8434574 _146801 y t h2)). Qed.
Lemma lem8434671 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term794 _146801 t P _116114 _116115.
Proof. exact (EQ_MP (@lem8434667 _146801 t P _116114 _116115) (@lem8434646 _146801 _116114 _116115 P t h1)). Qed.
Lemma lem8434672 {_146801 : Type'} (_116114 : _146801) (_116115 : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term794 _146801 t P _116114 _116115.
Proof. exact (@lem8434671 _146801 _116114 _116115 P t h1). Qed.
Lemma lem8434673 {_146801 : Type'} (x : _146801) (y : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) : term794 _146801 t P x y.
Proof. exact (@lem8434672 _146801 x y P t h1). Qed.
Lemma lem8434676 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) (h3 : @List.In _146801 y t) : term572 _146801 P x y.
Proof. exact (@lem8434673 _146801 x y P t h1 (@lem8434669 _146801 x y t h2 h3)). Qed.
Lemma lem8434677 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) (h3 : @List.In _146801 y t) : term758 _146801 P x y.
Proof. exact (fun h0 : term574 _146801 P x y => @lem8434676 _146801 P x y t h1 h2 h3). Qed.
Lemma lem8434679 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434680 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term758 _146801 P x y) = (term572 _146801 P x y).
Proof. exact (@lem8434679 (term572 _146801 P x y)). Qed.
Lemma lem8434681 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : @List.In _146801 x t) (h3 : @List.In _146801 y t) : term572 _146801 P x y.
Proof. exact (EQ_MP (@lem8434680 _146801 P x y) (@lem8434677 _146801 P x y t h1 h2 h3)). Qed.
Lemma lem8434684 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8434686 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (y : _146801) : (term574 _146801 P x y) = (term759 _146801 P x y).
Proof. exact (@lem8434684 (term572 _146801 P x y)). Qed.
Lemma lem8434689 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term759 _146801 P x y.
Proof. exact (EQ_MP (@lem8434686 _146801 P x y) (@lem8430003 _146801 x y h P t h1)). Qed.
Lemma lem8434692 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (@lem8434689 _146801 x y h P t h2 (@lem8434681 _146801 P x y t h1 h3 h4)). Qed.
Lemma lem8434693 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : term734.
Proof. exact (fun h0 : ~ False => @lem8434692 _146801 h P x y t h1 h2 h3 h4). Qed.
Lemma lem8434695 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434696 : term734 = False.
Proof. exact (@lem8434695 False). Qed.
Lemma lem8434697 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8434696) (@lem8434693 _146801 h P x y t h1 h2 h3 h4)). Qed.
Lemma lem8434760 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8434761 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8434760 _146801 x). Qed.
Lemma lem8434762 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8434761 _146801 h). Qed.
Lemma lem8434763 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8434762 _146801 h). Qed.
Lemma lem8434765 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434766 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8434765 (h = h)). Qed.
Lemma lem8434767 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8434766 _146801 h) (@lem8434763 _146801 h)). Qed.
Lemma lem8434769 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8434770 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8434769 _146801 x). Qed.
Lemma lem8434771 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8434770 _146801 h). Qed.
Lemma lem8434772 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8434771 _146801 h). Qed.
Lemma lem8434774 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434775 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8434774 (h = h)). Qed.
Lemma lem8434776 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8434775 _146801 h) (@lem8434772 _146801 h)). Qed.
Lemma lem8434794 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8434795 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term654 _146801 h P _116121 _116122) = (term709 _146801 P _116121 _116122 h).
Proof. exact (@lem8434794 (term572 _146801 P _116121 _116122) (term650 _146801 _116122 h)). Qed.
Lemma lem8434803 {_146801 : Type'} (_116121 : _146801) (h : _146801) : (term710 _146801 _116121 h) = (term710 _146801 _116121 h).
Proof. exact (eq_refl (term710 _146801 _116121 h)). Qed.
Lemma lem8434804 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term696 _146801 h P _116121 _116122) = (term711 _146801 P _116121 _116122 h).
Proof. exact (MK_COMB (@lem8434803 _146801 _116121 h) (@lem8434795 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434808 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8434809 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term711 _146801 P _116121 _116122 h) = (term713 _146801 P _116121 _116122 h).
Proof. exact (@lem8434808 (term572 _146801 P _116121 _116122) (term650 _146801 _116121 h) (term650 _146801 _116122 h)). Qed.
Lemma lem8434829 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term696 _146801 h P _116121 _116122) = (term713 _146801 P _116121 _116122 h).
Proof. exact (TRANS (@lem8434804 _146801 P _116121 _116122 h) (@lem8434809 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434830 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8434831 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term714 _146801 h P _116121 _116122) = (term715 _146801 P _116121 _116122 h).
Proof. exact (MK_COMB (@lem8434830) (@lem8434829 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434851 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term713 _146801 P _116121 _116122 h) = (term713 _146801 P _116121 _116122 h).
Proof. exact (eq_refl (term713 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434852 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : ((term696 _146801 h P _116121 _116122) = (term713 _146801 P _116121 _116122 h)) = ((term713 _146801 P _116121 _116122 h) = (term713 _146801 P _116121 _116122 h)).
Proof. exact (MK_COMB (@lem8434831 _146801 P _116121 _116122 h) (@lem8434851 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434854 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8434855 (x : Prop) : (x = x) = True.
Proof. exact (@lem8434854 Prop x). Qed.
Lemma lem8434856 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : ((term713 _146801 P _116121 _116122 h) = (term713 _146801 P _116121 _116122 h)) = True.
Proof. exact (@lem8434855 (term713 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434857 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : ((term696 _146801 h P _116121 _116122) = (term713 _146801 P _116121 _116122 h)) = True.
Proof. exact (TRANS (@lem8434852 _146801 P _116121 _116122 h) (@lem8434856 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434858 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : True = ((term696 _146801 h P _116121 _116122) = (term713 _146801 P _116121 _116122 h)).
Proof. exact (SYM (@lem8434857 _146801 P _116121 _116122 h)). Qed.
Lemma lem8434859 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term696 _146801 h P _116121 _116122) = (term713 _146801 P _116121 _116122 h).
Proof. exact (EQ_MP (@lem8434858 _146801 P _116121 _116122 h) (@lem0)). Qed.
Lemma lem8434860 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term713 _146801 P _116121 _116122 h.
Proof. exact (EQ_MP (@lem8434859 _146801 P _116121 _116122 h) (@lem8431705 _146801 _116121 _116122 h x P t h1)). Qed.
Lemma lem8434862 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8434863 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) : (term713 _146801 P _116121 _116122 h) = (term717 _146801 h P _116121 _116122).
Proof. exact (@lem8434862 (term718 _146801 _116121 _116122 h) (term572 _146801 P _116121 _116122)). Qed.
Lemma lem8434865 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8434866 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term721 _146801 _116121 _116122 h) = (term722 _146801 _116121 _116122 h).
Proof. exact (@lem8434865 (term650 _146801 _116121 h) (term650 _146801 _116122 h)). Qed.
Lemma lem8434868 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434869 {_146801 : Type'} (_116121 : _146801) (h : _146801) : (term723 _146801 _116121 h) = (_116121 = h).
Proof. exact (@lem8434868 (_116121 = h)). Qed.
Lemma lem8434870 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8434871 {_146801 : Type'} (_116121 : _146801) (h : _146801) : (term724 _146801 _116121 h) = (term725 _146801 _116121 h).
Proof. exact (MK_COMB (@lem8434870) (@lem8434869 _146801 _116121 h)). Qed.
Lemma lem8434873 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8434874 {_146801 : Type'} (_116122 : _146801) (h : _146801) : (term723 _146801 _116122 h) = (_116122 = h).
Proof. exact (@lem8434873 (_116122 = h)). Qed.
Lemma lem8434875 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term722 _146801 _116121 _116122 h) = (term726 _146801 _116121 _116122 h).
Proof. exact (MK_COMB (@lem8434871 _146801 _116121 h) (@lem8434874 _146801 _116122 h)). Qed.
Lemma lem8434876 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term721 _146801 _116121 _116122 h) = (term726 _146801 _116121 _116122 h).
Proof. exact (TRANS (@lem8434866 _146801 _116121 _116122 h) (@lem8434875 _146801 _116121 _116122 h)). Qed.
Lemma lem8434877 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8434878 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) : (term727 _146801 _116121 _116122 h) = (term728 _146801 _116121 _116122 h).
Proof. exact (MK_COMB (@lem8434877) (@lem8434876 _146801 _116121 _116122 h)). Qed.
Lemma lem8434879 {_146801 : Type'} (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) : (term572 _146801 P _116121 _116122) = (term572 _146801 P _116121 _116122).
Proof. exact (eq_refl (term572 _146801 P _116121 _116122)). Qed.
Lemma lem8434880 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) : (term717 _146801 h P _116121 _116122) = (term729 _146801 h P _116121 _116122).
Proof. exact (MK_COMB (@lem8434878 _146801 _116121 _116122 h) (@lem8434879 _146801 P _116121 _116122)). Qed.
Lemma lem8434881 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116121 : _146801) (_116122 : _146801) : (term713 _146801 P _116121 _116122 h) = (term729 _146801 h P _116121 _116122).
Proof. exact (TRANS (@lem8434863 _146801 h P _116121 _116122) (@lem8434880 _146801 h P _116121 _116122)). Qed.
Lemma lem8434883 {_146801 : Type'} (h : _146801) : term730 _146801 h.
Proof. exact (conj (@lem8434767 _146801 h) (@lem8434776 _146801 h)). Qed.
Lemma lem8434885 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116121 _116122.
Proof. exact (EQ_MP (@lem8434881 _146801 h P _116121 _116122) (@lem8434860 _146801 _116121 _116122 h x P t h1)). Qed.
Lemma lem8434886 {_146801 : Type'} (_116121 : _146801) (_116122 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116121 _116122.
Proof. exact (@lem8434885 _146801 _116121 _116122 h x P t h1). Qed.
Lemma lem8434887 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term731 _146801 P h.
Proof. exact (@lem8434886 _146801 h h h x P t h1). Qed.
Lemma lem8434890 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (@lem8434887 _146801 h x P t h1 (@lem8434883 _146801 h)). Qed.
Lemma lem8434891 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term732 _146801 P h.
Proof. exact (fun h0 : term601 _146801 P h => @lem8434890 _146801 h x P t h1). Qed.
Lemma lem8434893 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434894 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term732 _146801 P h) = (term587 _146801 P h).
Proof. exact (@lem8434893 (term587 _146801 P h)). Qed.
Lemma lem8434895 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (EQ_MP (@lem8434894 _146801 P h) (@lem8434891 _146801 h x P t h1)). Qed.
Lemma lem8434898 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8434900 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term733 _146801 P h).
Proof. exact (@lem8434898 (term587 _146801 P h)). Qed.
Lemma lem8434903 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term733 _146801 P h.
Proof. exact (EQ_MP (@lem8434900 _146801 P h) (@lem8431663 _146801 t P x h h1 h2)). Qed.
Lemma lem8434906 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (@lem8434903 _146801 t P x h h2 h3 (@lem8434895 _146801 h x P t h1)). Qed.
Lemma lem8434907 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : term734.
Proof. exact (fun h0 : ~ False => @lem8434906 _146801 t P x h h1 h2 h3). Qed.
Lemma lem8434909 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434910 : term734 = False.
Proof. exact (@lem8434909 False). Qed.
Lemma lem8434974 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8434975 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8434974 _146801 x t h1). Qed.
Lemma lem8434977 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434978 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8434977 (@List.In _146801 x t)). Qed.
Lemma lem8434979 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8434978 _146801 x t) (@lem8434975 _146801 x t h1)). Qed.
Lemma lem8434981 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8434982 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8434981 _146801 x t h1). Qed.
Lemma lem8434984 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8434985 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8434984 (@List.In _146801 x t)). Qed.
Lemma lem8434986 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8434985 _146801 x t) (@lem8434982 _146801 x t h1)). Qed.
Lemma lem8435002 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435003 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term582 _146801 t P _116125 _116126) = (term743 _146801 P _116125 _116126 t).
Proof. exact (@lem8435002 (term572 _146801 P _116125 _116126) (term651 _146801 _116126 t)). Qed.
Lemma lem8435009 {_146801 : Type'} (_116125 : _146801) (t : list _146801) : (term203 _146801 _116125 t) = (term203 _146801 _116125 t).
Proof. exact (eq_refl (term203 _146801 _116125 t)). Qed.
Lemma lem8435010 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term677 _146801 t P _116125 _116126) = (term782 _146801 P _116125 _116126 t).
Proof. exact (MK_COMB (@lem8435009 _146801 _116125 t) (@lem8435003 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435014 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8435015 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term782 _146801 P _116125 _116126 t) = (term783 _146801 P _116125 _116126 t).
Proof. exact (@lem8435014 (term572 _146801 P _116125 _116126) (term651 _146801 _116125 t) (term651 _146801 _116126 t)). Qed.
Lemma lem8435031 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term677 _146801 t P _116125 _116126) = (term783 _146801 P _116125 _116126 t).
Proof. exact (TRANS (@lem8435010 _146801 P _116125 _116126 t) (@lem8435015 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435032 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435033 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term784 _146801 t P _116125 _116126) = (term785 _146801 P _116125 _116126 t).
Proof. exact (MK_COMB (@lem8435032) (@lem8435031 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435049 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term783 _146801 P _116125 _116126 t) = (term783 _146801 P _116125 _116126 t).
Proof. exact (eq_refl (term783 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435050 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : ((term677 _146801 t P _116125 _116126) = (term783 _146801 P _116125 _116126 t)) = ((term783 _146801 P _116125 _116126 t) = (term783 _146801 P _116125 _116126 t)).
Proof. exact (MK_COMB (@lem8435033 _146801 P _116125 _116126 t) (@lem8435049 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435052 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435053 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435052 Prop x). Qed.
Lemma lem8435054 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : ((term783 _146801 P _116125 _116126 t) = (term783 _146801 P _116125 _116126 t)) = True.
Proof. exact (@lem8435053 (term783 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435055 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : ((term677 _146801 t P _116125 _116126) = (term783 _146801 P _116125 _116126 t)) = True.
Proof. exact (TRANS (@lem8435050 _146801 P _116125 _116126 t) (@lem8435054 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435056 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : True = ((term677 _146801 t P _116125 _116126) = (term783 _146801 P _116125 _116126 t)).
Proof. exact (SYM (@lem8435055 _146801 P _116125 _116126 t)). Qed.
Lemma lem8435057 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term677 _146801 t P _116125 _116126) = (term783 _146801 P _116125 _116126 t).
Proof. exact (EQ_MP (@lem8435056 _146801 P _116125 _116126 t) (@lem0)). Qed.
Lemma lem8435058 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term783 _146801 P _116125 _116126 t.
Proof. exact (EQ_MP (@lem8435057 _146801 P _116125 _116126 t) (@lem8430119 _146801 _116125 _116126 h x P t h1)). Qed.
Lemma lem8435060 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435061 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) : (term783 _146801 P _116125 _116126 t) = (term786 _146801 t P _116125 _116126).
Proof. exact (@lem8435060 (term787 _146801 _116125 _116126 t) (term572 _146801 P _116125 _116126)). Qed.
Lemma lem8435063 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8435064 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term788 _146801 _116125 _116126 t) = (term789 _146801 _116125 _116126 t).
Proof. exact (@lem8435063 (term651 _146801 _116125 t) (term651 _146801 _116126 t)). Qed.
Lemma lem8435066 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435067 {_146801 : Type'} (_116125 : _146801) (t : list _146801) : (term740 _146801 _116125 t) = (@List.In _146801 _116125 t).
Proof. exact (@lem8435066 (@List.In _146801 _116125 t)). Qed.
Lemma lem8435068 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8435069 {_146801 : Type'} (_116125 : _146801) (t : list _146801) : (term790 _146801 _116125 t) = (term199 _146801 _116125 t).
Proof. exact (MK_COMB (@lem8435068) (@lem8435067 _146801 _116125 t)). Qed.
Lemma lem8435071 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435072 {_146801 : Type'} (_116126 : _146801) (t : list _146801) : (term740 _146801 _116126 t) = (@List.In _146801 _116126 t).
Proof. exact (@lem8435071 (@List.In _146801 _116126 t)). Qed.
Lemma lem8435073 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term789 _146801 _116125 _116126 t) = (term791 _146801 _116125 _116126 t).
Proof. exact (MK_COMB (@lem8435069 _146801 _116125 t) (@lem8435072 _146801 _116126 t)). Qed.
Lemma lem8435074 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term788 _146801 _116125 _116126 t) = (term791 _146801 _116125 _116126 t).
Proof. exact (TRANS (@lem8435064 _146801 _116125 _116126 t) (@lem8435073 _146801 _116125 _116126 t)). Qed.
Lemma lem8435075 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435076 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (t : list _146801) : (term792 _146801 _116125 _116126 t) = (term793 _146801 _116125 _116126 t).
Proof. exact (MK_COMB (@lem8435075) (@lem8435074 _146801 _116125 _116126 t)). Qed.
Lemma lem8435077 {_146801 : Type'} (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) : (term572 _146801 P _116125 _116126) = (term572 _146801 P _116125 _116126).
Proof. exact (eq_refl (term572 _146801 P _116125 _116126)). Qed.
Lemma lem8435078 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) : (term786 _146801 t P _116125 _116126) = (term794 _146801 t P _116125 _116126).
Proof. exact (MK_COMB (@lem8435076 _146801 _116125 _116126 t) (@lem8435077 _146801 P _116125 _116126)). Qed.
Lemma lem8435079 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116125 : _146801) (_116126 : _146801) : (term783 _146801 P _116125 _116126 t) = (term794 _146801 t P _116125 _116126).
Proof. exact (TRANS (@lem8435061 _146801 t P _116125 _116126) (@lem8435078 _146801 t P _116125 _116126)). Qed.
Lemma lem8435081 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term795 _146801 x t.
Proof. exact (conj (@lem8434979 _146801 x t h1) (@lem8434986 _146801 x t h1)). Qed.
Lemma lem8435083 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116125 _116126.
Proof. exact (EQ_MP (@lem8435079 _146801 t P _116125 _116126) (@lem8435058 _146801 _116125 _116126 h x P t h1)). Qed.
Lemma lem8435084 {_146801 : Type'} (_116125 : _146801) (_116126 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116125 _116126.
Proof. exact (@lem8435083 _146801 _116125 _116126 h x P t h1). Qed.
Lemma lem8435085 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term796 _146801 t P x.
Proof. exact (@lem8435084 _146801 x x h x P t h1). Qed.
Lemma lem8435088 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (@lem8435085 _146801 h x P t h1 (@lem8435081 _146801 x t h2)). Qed.
Lemma lem8435089 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term732 _146801 P x.
Proof. exact (fun h0 : term601 _146801 P x => @lem8435088 _146801 h P x t h1 h2). Qed.
Lemma lem8435091 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435092 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term732 _146801 P x) = (term587 _146801 P x).
Proof. exact (@lem8435091 (term587 _146801 P x)). Qed.
Lemma lem8435093 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (EQ_MP (@lem8435092 _146801 P x) (@lem8435089 _146801 h P x t h1 h2)). Qed.
Lemma lem8435096 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435098 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term601 _146801 P x) = (term733 _146801 P x).
Proof. exact (@lem8435096 (term587 _146801 P x)). Qed.
Lemma lem8435101 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term733 _146801 P x.
Proof. exact (EQ_MP (@lem8435098 _146801 P x) (@lem8430097 _146801 h t P x h1)). Qed.
Lemma lem8435104 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (@lem8435101 _146801 h t P x h2 (@lem8435093 _146801 h P x t h1 h3)). Qed.
Lemma lem8435105 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : term734.
Proof. exact (fun h0 : ~ False => @lem8435104 _146801 h P x t h1 h2 h3). Qed.
Lemma lem8435107 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435108 : term734 = False.
Proof. exact (@lem8435107 False). Qed.
Lemma lem8435109 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8435108) (@lem8435105 _146801 h P x t h1 h2 h3)). Qed.
Lemma lem8435172 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8435173 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8435172 _146801 x). Qed.
Lemma lem8435174 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8435173 _146801 h). Qed.
Lemma lem8435175 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8435174 _146801 h). Qed.
Lemma lem8435177 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435178 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8435177 (h = h)). Qed.
Lemma lem8435179 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8435178 _146801 h) (@lem8435175 _146801 h)). Qed.
Lemma lem8435181 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (proj1 (@lem8426264 _146801 t P h x h1)). Qed.
Lemma lem8435182 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8435181 _146801 t P h x h1). Qed.
Lemma lem8435184 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435185 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8435184 (@List.In _146801 x t)). Qed.
Lemma lem8435186 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8435185 _146801 x t) (@lem8435182 _146801 t P h x h1)). Qed.
Lemma lem8435204 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435205 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) (t : list _146801) : (term582 _146801 t P _116129 _116130) = (term743 _146801 P _116129 _116130 t).
Proof. exact (@lem8435204 (term572 _146801 P _116129 _116130) (term651 _146801 _116130 t)). Qed.
Lemma lem8435211 {_146801 : Type'} (_116129 : _146801) (h : _146801) : (term710 _146801 _116129 h) = (term710 _146801 _116129 h).
Proof. exact (eq_refl (term710 _146801 _116129 h)). Qed.
Lemma lem8435212 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) (t : list _146801) : (term691 _146801 h t P _116129 _116130) = (term744 _146801 h P _116129 _116130 t).
Proof. exact (MK_COMB (@lem8435211 _146801 _116129 h) (@lem8435205 _146801 P _116129 _116130 t)). Qed.
Lemma lem8435216 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8435217 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term744 _146801 h P _116129 _116130 t) = (term745 _146801 P _116129 h _116130 t).
Proof. exact (@lem8435216 (term572 _146801 P _116129 _116130) (term650 _146801 _116129 h) (term651 _146801 _116130 t)). Qed.
Lemma lem8435235 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term691 _146801 h t P _116129 _116130) = (term745 _146801 P _116129 h _116130 t).
Proof. exact (TRANS (@lem8435212 _146801 h P _116129 _116130 t) (@lem8435217 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435236 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435237 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term746 _146801 h t P _116129 _116130) = (term747 _146801 P _116129 h _116130 t).
Proof. exact (MK_COMB (@lem8435236) (@lem8435235 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435255 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term745 _146801 P _116129 h _116130 t) = (term745 _146801 P _116129 h _116130 t).
Proof. exact (eq_refl (term745 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435256 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : ((term691 _146801 h t P _116129 _116130) = (term745 _146801 P _116129 h _116130 t)) = ((term745 _146801 P _116129 h _116130 t) = (term745 _146801 P _116129 h _116130 t)).
Proof. exact (MK_COMB (@lem8435237 _146801 P _116129 h _116130 t) (@lem8435255 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435258 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435259 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435258 Prop x). Qed.
Lemma lem8435260 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : ((term745 _146801 P _116129 h _116130 t) = (term745 _146801 P _116129 h _116130 t)) = True.
Proof. exact (@lem8435259 (term745 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435261 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : ((term691 _146801 h t P _116129 _116130) = (term745 _146801 P _116129 h _116130 t)) = True.
Proof. exact (TRANS (@lem8435256 _146801 P _116129 h _116130 t) (@lem8435260 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435262 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : True = ((term691 _146801 h t P _116129 _116130) = (term745 _146801 P _116129 h _116130 t)).
Proof. exact (SYM (@lem8435261 _146801 P _116129 h _116130 t)). Qed.
Lemma lem8435263 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term691 _146801 h t P _116129 _116130) = (term745 _146801 P _116129 h _116130 t).
Proof. exact (EQ_MP (@lem8435262 _146801 P _116129 h _116130 t) (@lem0)). Qed.
Lemma lem8435264 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term745 _146801 P _116129 h _116130 t.
Proof. exact (EQ_MP (@lem8435263 _146801 P _116129 h _116130 t) (@lem8430169 _146801 _116129 _116130 h x P t h1)). Qed.
Lemma lem8435266 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435267 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) : (term745 _146801 P _116129 h _116130 t) = (term748 _146801 h t P _116129 _116130).
Proof. exact (@lem8435266 (term749 _146801 _116129 h _116130 t) (term572 _146801 P _116129 _116130)). Qed.
Lemma lem8435269 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8435270 {_146801 : Type'} (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term750 _146801 _116129 h _116130 t) = (term751 _146801 _116129 h _116130 t).
Proof. exact (@lem8435269 (term650 _146801 _116129 h) (term651 _146801 _116130 t)). Qed.
Lemma lem8435272 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435273 {_146801 : Type'} (_116129 : _146801) (h : _146801) : (term723 _146801 _116129 h) = (_116129 = h).
Proof. exact (@lem8435272 (_116129 = h)). Qed.
Lemma lem8435274 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8435275 {_146801 : Type'} (_116129 : _146801) (h : _146801) : (term724 _146801 _116129 h) = (term725 _146801 _116129 h).
Proof. exact (MK_COMB (@lem8435274) (@lem8435273 _146801 _116129 h)). Qed.
Lemma lem8435277 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435278 {_146801 : Type'} (_116130 : _146801) (t : list _146801) : (term740 _146801 _116130 t) = (@List.In _146801 _116130 t).
Proof. exact (@lem8435277 (@List.In _146801 _116130 t)). Qed.
Lemma lem8435279 {_146801 : Type'} (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term751 _146801 _116129 h _116130 t) = (term752 _146801 _116129 h _116130 t).
Proof. exact (MK_COMB (@lem8435275 _146801 _116129 h) (@lem8435278 _146801 _116130 t)). Qed.
Lemma lem8435280 {_146801 : Type'} (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term750 _146801 _116129 h _116130 t) = (term752 _146801 _116129 h _116130 t).
Proof. exact (TRANS (@lem8435270 _146801 _116129 h _116130 t) (@lem8435279 _146801 _116129 h _116130 t)). Qed.
Lemma lem8435281 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435282 {_146801 : Type'} (_116129 : _146801) (h : _146801) (_116130 : _146801) (t : list _146801) : (term753 _146801 _116129 h _116130 t) = (term754 _146801 _116129 h _116130 t).
Proof. exact (MK_COMB (@lem8435281) (@lem8435280 _146801 _116129 h _116130 t)). Qed.
Lemma lem8435283 {_146801 : Type'} (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) : (term572 _146801 P _116129 _116130) = (term572 _146801 P _116129 _116130).
Proof. exact (eq_refl (term572 _146801 P _116129 _116130)). Qed.
Lemma lem8435284 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) : (term748 _146801 h t P _116129 _116130) = (term755 _146801 h t P _116129 _116130).
Proof. exact (MK_COMB (@lem8435282 _146801 _116129 h _116130 t) (@lem8435283 _146801 P _116129 _116130)). Qed.
Lemma lem8435285 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116129 : _146801) (_116130 : _146801) : (term745 _146801 P _116129 h _116130 t) = (term755 _146801 h t P _116129 _116130).
Proof. exact (TRANS (@lem8435267 _146801 h t P _116129 _116130) (@lem8435284 _146801 h t P _116129 _116130)). Qed.
Lemma lem8435287 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term756 _146801 h x t.
Proof. exact (conj (@lem8435179 _146801 h) (@lem8435186 _146801 t P h x h1)). Qed.
Lemma lem8435289 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116129 _116130.
Proof. exact (EQ_MP (@lem8435285 _146801 h t P _116129 _116130) (@lem8435264 _146801 _116129 _116130 h x P t h1)). Qed.
Lemma lem8435290 {_146801 : Type'} (_116129 : _146801) (_116130 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116129 _116130.
Proof. exact (@lem8435289 _146801 _116129 _116130 h x P t h1). Qed.
Lemma lem8435291 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term757 _146801 t P h x.
Proof. exact (@lem8435290 _146801 h x h x P t h1). Qed.
Lemma lem8435294 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (@lem8435291 _146801 h x P t h1 (@lem8435287 _146801 t P h x h2)). Qed.
Lemma lem8435295 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term758 _146801 P h x.
Proof. exact (fun h0 : term574 _146801 P h x => @lem8435294 _146801 t P h x h1 h2). Qed.
Lemma lem8435297 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435298 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term758 _146801 P h x) = (term572 _146801 P h x).
Proof. exact (@lem8435297 (term572 _146801 P h x)). Qed.
Lemma lem8435299 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (EQ_MP (@lem8435298 _146801 P h x) (@lem8435295 _146801 t P h x h1 h2)). Qed.
Lemma lem8435302 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435304 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term574 _146801 P h x) = (term759 _146801 P h x).
Proof. exact (@lem8435302 (term572 _146801 P h x)). Qed.
Lemma lem8435307 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term759 _146801 P h x.
Proof. exact (EQ_MP (@lem8435304 _146801 P h x) (@lem8430159 _146801 t P h x h1)). Qed.
Lemma lem8435310 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (@lem8435307 _146801 t P h x h2 (@lem8435299 _146801 t P h x h1 h2)). Qed.
Lemma lem8435311 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term734.
Proof. exact (fun h0 : ~ False => @lem8435310 _146801 t P h x h1 h2). Qed.
Lemma lem8435313 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435314 : term734 = False.
Proof. exact (@lem8435313 False). Qed.
Lemma lem8435315 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (EQ_MP (@lem8435314) (@lem8435311 _146801 t P h x h1 h2)). Qed.
Lemma lem8435397 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (proj1 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8435398 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term735 _146801 x'' t.
Proof. exact (fun h0 : term651 _146801 x'' t => @lem8435397 _146801 t P x'' h1). Qed.
Lemma lem8435400 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435401 {_146801 : Type'} (x'' : _146801) (t : list _146801) : (term735 _146801 x'' t) = (@List.In _146801 x'' t).
Proof. exact (@lem8435400 (@List.In _146801 x'' t)). Qed.
Lemma lem8435402 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (EQ_MP (@lem8435401 _146801 x'' t) (@lem8435398 _146801 t P x'' h1)). Qed.
Lemma lem8435404 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (proj1 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8435405 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term735 _146801 x'' t.
Proof. exact (fun h0 : term651 _146801 x'' t => @lem8435404 _146801 t P x'' h1). Qed.
Lemma lem8435407 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435408 {_146801 : Type'} (x'' : _146801) (t : list _146801) : (term735 _146801 x'' t) = (@List.In _146801 x'' t).
Proof. exact (@lem8435407 (@List.In _146801 x'' t)). Qed.
Lemma lem8435409 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (EQ_MP (@lem8435408 _146801 x'' t) (@lem8435405 _146801 t P x'' h1)). Qed.
Lemma lem8435425 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435426 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term582 _146801 t P _116133 _116134) = (term743 _146801 P _116133 _116134 t).
Proof. exact (@lem8435425 (term572 _146801 P _116133 _116134) (term651 _146801 _116134 t)). Qed.
Lemma lem8435432 {_146801 : Type'} (_116133 : _146801) (t : list _146801) : (term203 _146801 _116133 t) = (term203 _146801 _116133 t).
Proof. exact (eq_refl (term203 _146801 _116133 t)). Qed.
Lemma lem8435433 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term677 _146801 t P _116133 _116134) = (term782 _146801 P _116133 _116134 t).
Proof. exact (MK_COMB (@lem8435432 _146801 _116133 t) (@lem8435426 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435437 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8435438 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term782 _146801 P _116133 _116134 t) = (term783 _146801 P _116133 _116134 t).
Proof. exact (@lem8435437 (term572 _146801 P _116133 _116134) (term651 _146801 _116133 t) (term651 _146801 _116134 t)). Qed.
Lemma lem8435454 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term677 _146801 t P _116133 _116134) = (term783 _146801 P _116133 _116134 t).
Proof. exact (TRANS (@lem8435433 _146801 P _116133 _116134 t) (@lem8435438 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435455 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435456 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term784 _146801 t P _116133 _116134) = (term785 _146801 P _116133 _116134 t).
Proof. exact (MK_COMB (@lem8435455) (@lem8435454 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435472 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term783 _146801 P _116133 _116134 t) = (term783 _146801 P _116133 _116134 t).
Proof. exact (eq_refl (term783 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435473 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : ((term677 _146801 t P _116133 _116134) = (term783 _146801 P _116133 _116134 t)) = ((term783 _146801 P _116133 _116134 t) = (term783 _146801 P _116133 _116134 t)).
Proof. exact (MK_COMB (@lem8435456 _146801 P _116133 _116134 t) (@lem8435472 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435475 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435476 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435475 Prop x). Qed.
Lemma lem8435477 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : ((term783 _146801 P _116133 _116134 t) = (term783 _146801 P _116133 _116134 t)) = True.
Proof. exact (@lem8435476 (term783 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435478 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : ((term677 _146801 t P _116133 _116134) = (term783 _146801 P _116133 _116134 t)) = True.
Proof. exact (TRANS (@lem8435473 _146801 P _116133 _116134 t) (@lem8435477 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435479 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : True = ((term677 _146801 t P _116133 _116134) = (term783 _146801 P _116133 _116134 t)).
Proof. exact (SYM (@lem8435478 _146801 P _116133 _116134 t)). Qed.
Lemma lem8435480 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term677 _146801 t P _116133 _116134) = (term783 _146801 P _116133 _116134 t).
Proof. exact (EQ_MP (@lem8435479 _146801 P _116133 _116134 t) (@lem0)). Qed.
Lemma lem8435481 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term783 _146801 P _116133 _116134 t.
Proof. exact (EQ_MP (@lem8435480 _146801 P _116133 _116134 t) (@lem8430237 _146801 _116133 _116134 h x P t h1)). Qed.
Lemma lem8435483 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435484 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) : (term783 _146801 P _116133 _116134 t) = (term786 _146801 t P _116133 _116134).
Proof. exact (@lem8435483 (term787 _146801 _116133 _116134 t) (term572 _146801 P _116133 _116134)). Qed.
Lemma lem8435486 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8435487 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term788 _146801 _116133 _116134 t) = (term789 _146801 _116133 _116134 t).
Proof. exact (@lem8435486 (term651 _146801 _116133 t) (term651 _146801 _116134 t)). Qed.
Lemma lem8435489 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435490 {_146801 : Type'} (_116133 : _146801) (t : list _146801) : (term740 _146801 _116133 t) = (@List.In _146801 _116133 t).
Proof. exact (@lem8435489 (@List.In _146801 _116133 t)). Qed.
Lemma lem8435491 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8435492 {_146801 : Type'} (_116133 : _146801) (t : list _146801) : (term790 _146801 _116133 t) = (term199 _146801 _116133 t).
Proof. exact (MK_COMB (@lem8435491) (@lem8435490 _146801 _116133 t)). Qed.
Lemma lem8435494 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435495 {_146801 : Type'} (_116134 : _146801) (t : list _146801) : (term740 _146801 _116134 t) = (@List.In _146801 _116134 t).
Proof. exact (@lem8435494 (@List.In _146801 _116134 t)). Qed.
Lemma lem8435496 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term789 _146801 _116133 _116134 t) = (term791 _146801 _116133 _116134 t).
Proof. exact (MK_COMB (@lem8435492 _146801 _116133 t) (@lem8435495 _146801 _116134 t)). Qed.
Lemma lem8435497 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term788 _146801 _116133 _116134 t) = (term791 _146801 _116133 _116134 t).
Proof. exact (TRANS (@lem8435487 _146801 _116133 _116134 t) (@lem8435496 _146801 _116133 _116134 t)). Qed.
Lemma lem8435498 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435499 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (t : list _146801) : (term792 _146801 _116133 _116134 t) = (term793 _146801 _116133 _116134 t).
Proof. exact (MK_COMB (@lem8435498) (@lem8435497 _146801 _116133 _116134 t)). Qed.
Lemma lem8435500 {_146801 : Type'} (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) : (term572 _146801 P _116133 _116134) = (term572 _146801 P _116133 _116134).
Proof. exact (eq_refl (term572 _146801 P _116133 _116134)). Qed.
Lemma lem8435501 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) : (term786 _146801 t P _116133 _116134) = (term794 _146801 t P _116133 _116134).
Proof. exact (MK_COMB (@lem8435499 _146801 _116133 _116134 t) (@lem8435500 _146801 P _116133 _116134)). Qed.
Lemma lem8435502 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116133 : _146801) (_116134 : _146801) : (term783 _146801 P _116133 _116134 t) = (term794 _146801 t P _116133 _116134).
Proof. exact (TRANS (@lem8435484 _146801 t P _116133 _116134) (@lem8435501 _146801 t P _116133 _116134)). Qed.
Lemma lem8435504 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term795 _146801 x'' t.
Proof. exact (conj (@lem8435402 _146801 t P x'' h1) (@lem8435409 _146801 t P x'' h1)). Qed.
Lemma lem8435506 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116133 _116134.
Proof. exact (EQ_MP (@lem8435502 _146801 t P _116133 _116134) (@lem8435481 _146801 _116133 _116134 h x P t h1)). Qed.
Lemma lem8435507 {_146801 : Type'} (_116133 : _146801) (_116134 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116133 _116134.
Proof. exact (@lem8435506 _146801 _116133 _116134 h x P t h1). Qed.
Lemma lem8435508 {_146801 : Type'} (x'' : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term796 _146801 t P x''.
Proof. exact (@lem8435507 _146801 x'' x'' h x P t h1). Qed.
Lemma lem8435511 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (@lem8435508 _146801 x'' h x P t h1 (@lem8435504 _146801 t P x'' h2)). Qed.
Lemma lem8435512 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : term732 _146801 P x''.
Proof. exact (fun h0 : term601 _146801 P x'' => @lem8435511 _146801 h x t P x'' h1 h2). Qed.
Lemma lem8435514 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435515 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term732 _146801 P x'') = (term587 _146801 P x'').
Proof. exact (@lem8435514 (term587 _146801 P x'')). Qed.
Lemma lem8435516 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (EQ_MP (@lem8435515 _146801 P x'') (@lem8435512 _146801 h x t P x'' h1 h2)). Qed.
Lemma lem8435519 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435521 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term601 _146801 P x'') = (term733 _146801 P x'').
Proof. exact (@lem8435519 (term587 _146801 P x'')). Qed.
Lemma lem8435524 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term733 _146801 P x''.
Proof. exact (EQ_MP (@lem8435521 _146801 P x'') (@lem8430215 _146801 t P x'' h1)). Qed.
Lemma lem8435527 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (@lem8435524 _146801 t P x'' h2 (@lem8435516 _146801 h x t P x'' h1 h2)). Qed.
Lemma lem8435528 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : term734.
Proof. exact (fun h0 : ~ False => @lem8435527 _146801 h x t P x'' h1 h2). Qed.
Lemma lem8435530 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435531 : term734 = False.
Proof. exact (@lem8435530 False). Qed.
Lemma lem8435532 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (EQ_MP (@lem8435531) (@lem8435528 _146801 h x t P x'' h1 h2)). Qed.
Lemma lem8435614 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8435615 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8435614 _146801 x). Qed.
Lemma lem8435616 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8435615 _146801 h). Qed.
Lemma lem8435617 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8435616 _146801 h). Qed.
Lemma lem8435619 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435620 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8435619 (h = h)). Qed.
Lemma lem8435621 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8435620 _146801 h) (@lem8435617 _146801 h)). Qed.
Lemma lem8435627 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435628 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : (term705 _146801 h P _116137) = (term762 _146801 P _116137 h).
Proof. exact (@lem8435627 (term587 _146801 P _116137) (term650 _146801 _116137 h)). Qed.
Lemma lem8435636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435637 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : (term763 _146801 h P _116137) = (term764 _146801 P _116137 h).
Proof. exact (MK_COMB (@lem8435636) (@lem8435628 _146801 P _116137 h)). Qed.
Lemma lem8435645 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : (term762 _146801 P _116137 h) = (term762 _146801 P _116137 h).
Proof. exact (eq_refl (term762 _146801 P _116137 h)). Qed.
Lemma lem8435646 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : ((term705 _146801 h P _116137) = (term762 _146801 P _116137 h)) = ((term762 _146801 P _116137 h) = (term762 _146801 P _116137 h)).
Proof. exact (MK_COMB (@lem8435637 _146801 P _116137 h) (@lem8435645 _146801 P _116137 h)). Qed.
Lemma lem8435648 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435649 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435648 Prop x). Qed.
Lemma lem8435650 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : ((term762 _146801 P _116137 h) = (term762 _146801 P _116137 h)) = True.
Proof. exact (@lem8435649 (term762 _146801 P _116137 h)). Qed.
Lemma lem8435651 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : ((term705 _146801 h P _116137) = (term762 _146801 P _116137 h)) = True.
Proof. exact (TRANS (@lem8435646 _146801 P _116137 h) (@lem8435650 _146801 P _116137 h)). Qed.
Lemma lem8435652 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : True = ((term705 _146801 h P _116137) = (term762 _146801 P _116137 h)).
Proof. exact (SYM (@lem8435651 _146801 P _116137 h)). Qed.
Lemma lem8435653 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) (h : _146801) : (term705 _146801 h P _116137) = (term762 _146801 P _116137 h).
Proof. exact (EQ_MP (@lem8435652 _146801 P _116137 h) (@lem0)). Qed.
Lemma lem8435654 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term762 _146801 P _116137 h.
Proof. exact (EQ_MP (@lem8435653 _146801 P _116137 h) (@lem8432053 _146801 _116137 x y h P t h1)). Qed.
Lemma lem8435656 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435657 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116137 : _146801) : (term762 _146801 P _116137 h) = (term765 _146801 h P _116137).
Proof. exact (@lem8435656 (term650 _146801 _116137 h) (term587 _146801 P _116137)). Qed.
Lemma lem8435659 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435660 {_146801 : Type'} (_116137 : _146801) (h : _146801) : (term723 _146801 _116137 h) = (_116137 = h).
Proof. exact (@lem8435659 (_116137 = h)). Qed.
Lemma lem8435661 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435662 {_146801 : Type'} (_116137 : _146801) (h : _146801) : (term766 _146801 _116137 h) = (term767 _146801 _116137 h).
Proof. exact (MK_COMB (@lem8435661) (@lem8435660 _146801 _116137 h)). Qed.
Lemma lem8435663 {_146801 : Type'} (P : type1402 _146801) (_116137 : _146801) : (term587 _146801 P _116137) = (term587 _146801 P _116137).
Proof. exact (eq_refl (term587 _146801 P _116137)). Qed.
Lemma lem8435664 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116137 : _146801) : (term765 _146801 h P _116137) = (term768 _146801 h P _116137).
Proof. exact (MK_COMB (@lem8435662 _146801 _116137 h) (@lem8435663 _146801 P _116137)). Qed.
Lemma lem8435665 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116137 : _146801) : (term762 _146801 P _116137 h) = (term768 _146801 h P _116137).
Proof. exact (TRANS (@lem8435657 _146801 h P _116137) (@lem8435664 _146801 h P _116137)). Qed.
Lemma lem8435668 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term768 _146801 h P _116137.
Proof. exact (EQ_MP (@lem8435665 _146801 h P _116137) (@lem8435654 _146801 _116137 x y h P t h1)). Qed.
Lemma lem8435669 {_146801 : Type'} (_116137 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term768 _146801 h P _116137.
Proof. exact (@lem8435668 _146801 _116137 x y h P t h1). Qed.
Lemma lem8435670 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term769 _146801 P h.
Proof. exact (@lem8435669 _146801 h x y h P t h1). Qed.
Lemma lem8435673 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term587 _146801 P h.
Proof. exact (@lem8435670 _146801 x y h P t h1 (@lem8435621 _146801 h)). Qed.
Lemma lem8435674 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term732 _146801 P h.
Proof. exact (fun h0 : term601 _146801 P h => @lem8435673 _146801 x y h P t h1). Qed.
Lemma lem8435676 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435677 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term732 _146801 P h) = (term587 _146801 P h).
Proof. exact (@lem8435676 (term587 _146801 P h)). Qed.
Lemma lem8435678 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term587 _146801 P h.
Proof. exact (EQ_MP (@lem8435677 _146801 P h) (@lem8435674 _146801 x y h P t h1)). Qed.
Lemma lem8435681 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435683 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term733 _146801 P h).
Proof. exact (@lem8435681 (term587 _146801 P h)). Qed.
Lemma lem8435686 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term733 _146801 P h.
Proof. exact (EQ_MP (@lem8435683 _146801 P h) (@lem8432039 _146801 P t x y h h1 h2 h3)). Qed.
Lemma lem8435689 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (@lem8435686 _146801 P t x y h h1 h2 h3 (@lem8435678 _146801 x y h P t h1)). Qed.
Lemma lem8435690 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : term734.
Proof. exact (fun h0 : ~ False => @lem8435689 _146801 P t x y h h1 h2 h3). Qed.
Lemma lem8435692 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435693 : term734 = False.
Proof. exact (@lem8435692 False). Qed.
Lemma lem8435776 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (proj1 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8435777 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term735 _146801 x'' t.
Proof. exact (fun h0 : term651 _146801 x'' t => @lem8435776 _146801 t P x'' h1). Qed.
Lemma lem8435779 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435780 {_146801 : Type'} (x'' : _146801) (t : list _146801) : (term735 _146801 x'' t) = (@List.In _146801 x'' t).
Proof. exact (@lem8435779 (@List.In _146801 x'' t)). Qed.
Lemma lem8435781 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (EQ_MP (@lem8435780 _146801 x'' t) (@lem8435777 _146801 t P x'' h1)). Qed.
Lemma lem8435787 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435788 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : (term621 _146801 t P _116141) = (term736 _146801 P _116141 t).
Proof. exact (@lem8435787 (term587 _146801 P _116141) (term651 _146801 _116141 t)). Qed.
Lemma lem8435794 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435795 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : (term737 _146801 t P _116141) = (term738 _146801 P _116141 t).
Proof. exact (MK_COMB (@lem8435794) (@lem8435788 _146801 P _116141 t)). Qed.
Lemma lem8435801 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : (term736 _146801 P _116141 t) = (term736 _146801 P _116141 t).
Proof. exact (eq_refl (term736 _146801 P _116141 t)). Qed.
Lemma lem8435802 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : ((term621 _146801 t P _116141) = (term736 _146801 P _116141 t)) = ((term736 _146801 P _116141 t) = (term736 _146801 P _116141 t)).
Proof. exact (MK_COMB (@lem8435795 _146801 P _116141 t) (@lem8435801 _146801 P _116141 t)). Qed.
Lemma lem8435804 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435805 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435804 Prop x). Qed.
Lemma lem8435806 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : ((term736 _146801 P _116141 t) = (term736 _146801 P _116141 t)) = True.
Proof. exact (@lem8435805 (term736 _146801 P _116141 t)). Qed.
Lemma lem8435807 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : ((term621 _146801 t P _116141) = (term736 _146801 P _116141 t)) = True.
Proof. exact (TRANS (@lem8435802 _146801 P _116141 t) (@lem8435806 _146801 P _116141 t)). Qed.
Lemma lem8435808 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : True = ((term621 _146801 t P _116141) = (term736 _146801 P _116141 t)).
Proof. exact (SYM (@lem8435807 _146801 P _116141 t)). Qed.
Lemma lem8435809 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) (t : list _146801) : (term621 _146801 t P _116141) = (term736 _146801 P _116141 t).
Proof. exact (EQ_MP (@lem8435808 _146801 P _116141 t) (@lem0)). Qed.
Lemma lem8435810 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term736 _146801 P _116141 t.
Proof. exact (EQ_MP (@lem8435809 _146801 P _116141 t) (@lem8432248 _146801 _116141 x y h P t h1)). Qed.
Lemma lem8435812 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435813 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116141 : _146801) : (term736 _146801 P _116141 t) = (term739 _146801 t P _116141).
Proof. exact (@lem8435812 (term651 _146801 _116141 t) (term587 _146801 P _116141)). Qed.
Lemma lem8435815 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435816 {_146801 : Type'} (_116141 : _146801) (t : list _146801) : (term740 _146801 _116141 t) = (@List.In _146801 _116141 t).
Proof. exact (@lem8435815 (@List.In _146801 _116141 t)). Qed.
Lemma lem8435817 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435818 {_146801 : Type'} (_116141 : _146801) (t : list _146801) : (term741 _146801 _116141 t) = (term29 _146801 _116141 t).
Proof. exact (MK_COMB (@lem8435817) (@lem8435816 _146801 _116141 t)). Qed.
Lemma lem8435819 {_146801 : Type'} (P : type1402 _146801) (_116141 : _146801) : (term587 _146801 P _116141) = (term587 _146801 P _116141).
Proof. exact (eq_refl (term587 _146801 P _116141)). Qed.
Lemma lem8435820 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116141 : _146801) : (term739 _146801 t P _116141) = (term742 _146801 t P _116141).
Proof. exact (MK_COMB (@lem8435818 _146801 _116141 t) (@lem8435819 _146801 P _116141)). Qed.
Lemma lem8435821 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116141 : _146801) : (term736 _146801 P _116141 t) = (term742 _146801 t P _116141).
Proof. exact (TRANS (@lem8435813 _146801 t P _116141) (@lem8435820 _146801 t P _116141)). Qed.
Lemma lem8435824 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P _116141.
Proof. exact (EQ_MP (@lem8435821 _146801 t P _116141) (@lem8435810 _146801 _116141 x y h P t h1)). Qed.
Lemma lem8435825 {_146801 : Type'} (_116141 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P _116141.
Proof. exact (@lem8435824 _146801 _116141 x y h P t h1). Qed.
Lemma lem8435826 {_146801 : Type'} (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P x''.
Proof. exact (@lem8435825 _146801 x'' x y h P t h1). Qed.
Lemma lem8435829 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (@lem8435826 _146801 x'' x y h P t h1 (@lem8435781 _146801 t P x'' h2)). Qed.
Lemma lem8435830 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term732 _146801 P x''.
Proof. exact (fun h0 : term601 _146801 P x'' => @lem8435829 _146801 x y h t P x'' h1 h2). Qed.
Lemma lem8435832 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435833 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term732 _146801 P x'') = (term587 _146801 P x'').
Proof. exact (@lem8435832 (term587 _146801 P x'')). Qed.
Lemma lem8435834 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (EQ_MP (@lem8435833 _146801 P x'') (@lem8435830 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8435837 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435839 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term601 _146801 P x'') = (term733 _146801 P x'').
Proof. exact (@lem8435837 (term587 _146801 P x'')). Qed.
Lemma lem8435842 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term733 _146801 P x''.
Proof. exact (EQ_MP (@lem8435839 _146801 P x'') (@lem8432165 _146801 t P x'' h1)). Qed.
Lemma lem8435845 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (@lem8435842 _146801 t P x'' h2 (@lem8435834 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8435846 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term734.
Proof. exact (fun h0 : ~ False => @lem8435845 _146801 x y h t P x'' h1 h2). Qed.
Lemma lem8435848 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435849 : term734 = False.
Proof. exact (@lem8435848 False). Qed.
Lemma lem8435932 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (h1). Qed.
Lemma lem8435933 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : term735 _146801 y t.
Proof. exact (fun h0 : term651 _146801 y t => @lem8435932 _146801 y t h1). Qed.
Lemma lem8435935 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435936 {_146801 : Type'} (y : _146801) (t : list _146801) : (term735 _146801 y t) = (@List.In _146801 y t).
Proof. exact (@lem8435935 (@List.In _146801 y t)). Qed.
Lemma lem8435937 {_146801 : Type'} (y : _146801) (t : list _146801) (h1 : @List.In _146801 y t) : @List.In _146801 y t.
Proof. exact (EQ_MP (@lem8435936 _146801 y t) (@lem8435933 _146801 y t h1)). Qed.
Lemma lem8435943 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8435944 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : (term582 _146801 t P h _116146) = (term743 _146801 P h _116146 t).
Proof. exact (@lem8435943 (term572 _146801 P h _116146) (term651 _146801 _116146 t)). Qed.
Lemma lem8435950 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8435951 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : (term770 _146801 t P h _116146) = (term771 _146801 P h _116146 t).
Proof. exact (MK_COMB (@lem8435950) (@lem8435944 _146801 P h _116146 t)). Qed.
Lemma lem8435957 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : (term743 _146801 P h _116146 t) = (term743 _146801 P h _116146 t).
Proof. exact (eq_refl (term743 _146801 P h _116146 t)). Qed.
Lemma lem8435958 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : ((term582 _146801 t P h _116146) = (term743 _146801 P h _116146 t)) = ((term743 _146801 P h _116146 t) = (term743 _146801 P h _116146 t)).
Proof. exact (MK_COMB (@lem8435951 _146801 P h _116146 t) (@lem8435957 _146801 P h _116146 t)). Qed.
Lemma lem8435960 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8435961 (x : Prop) : (x = x) = True.
Proof. exact (@lem8435960 Prop x). Qed.
Lemma lem8435962 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : ((term743 _146801 P h _116146 t) = (term743 _146801 P h _116146 t)) = True.
Proof. exact (@lem8435961 (term743 _146801 P h _116146 t)). Qed.
Lemma lem8435963 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : ((term582 _146801 t P h _116146) = (term743 _146801 P h _116146 t)) = True.
Proof. exact (TRANS (@lem8435958 _146801 P h _116146 t) (@lem8435962 _146801 P h _116146 t)). Qed.
Lemma lem8435964 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : True = ((term582 _146801 t P h _116146) = (term743 _146801 P h _116146 t)).
Proof. exact (SYM (@lem8435963 _146801 P h _116146 t)). Qed.
Lemma lem8435965 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) (t : list _146801) : (term582 _146801 t P h _116146) = (term743 _146801 P h _116146 t).
Proof. exact (EQ_MP (@lem8435964 _146801 P h _116146 t) (@lem0)). Qed.
Lemma lem8435966 {_146801 : Type'} (_116146 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term743 _146801 P h _116146 t.
Proof. exact (EQ_MP (@lem8435965 _146801 P h _116146 t) (@lem8432360 _146801 _116146 x y h P t h1)). Qed.
Lemma lem8435968 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8435969 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116146 : _146801) : (term743 _146801 P h _116146 t) = (term772 _146801 t P h _116146).
Proof. exact (@lem8435968 (term651 _146801 _116146 t) (term572 _146801 P h _116146)). Qed.
Lemma lem8435971 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8435972 {_146801 : Type'} (_116146 : _146801) (t : list _146801) : (term740 _146801 _116146 t) = (@List.In _146801 _116146 t).
Proof. exact (@lem8435971 (@List.In _146801 _116146 t)). Qed.
Lemma lem8435973 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8435974 {_146801 : Type'} (_116146 : _146801) (t : list _146801) : (term741 _146801 _116146 t) = (term29 _146801 _116146 t).
Proof. exact (MK_COMB (@lem8435973) (@lem8435972 _146801 _116146 t)). Qed.
Lemma lem8435975 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (_116146 : _146801) : (term572 _146801 P h _116146) = (term572 _146801 P h _116146).
Proof. exact (eq_refl (term572 _146801 P h _116146)). Qed.
Lemma lem8435976 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116146 : _146801) : (term772 _146801 t P h _116146) = (term773 _146801 t P h _116146).
Proof. exact (MK_COMB (@lem8435974 _146801 _116146 t) (@lem8435975 _146801 P h _116146)). Qed.
Lemma lem8435977 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (_116146 : _146801) : (term743 _146801 P h _116146 t) = (term773 _146801 t P h _116146).
Proof. exact (TRANS (@lem8435969 _146801 t P h _116146) (@lem8435976 _146801 t P h _116146)). Qed.
Lemma lem8435980 {_146801 : Type'} (_116146 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116146.
Proof. exact (EQ_MP (@lem8435977 _146801 t P h _116146) (@lem8435966 _146801 _116146 x y h P t h1)). Qed.
Lemma lem8435981 {_146801 : Type'} (_116146 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h _116146.
Proof. exact (@lem8435980 _146801 _116146 x y h P t h1). Qed.
Lemma lem8435982 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term773 _146801 t P h y.
Proof. exact (@lem8435981 _146801 y x y h P t h1). Qed.
Lemma lem8435985 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term572 _146801 P h y.
Proof. exact (@lem8435982 _146801 x y h P t h1 (@lem8435937 _146801 y t h2)). Qed.
Lemma lem8435986 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term758 _146801 P h y.
Proof. exact (fun h0 : term574 _146801 P h y => @lem8435985 _146801 x h P y t h1 h2). Qed.
Lemma lem8435988 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8435989 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term758 _146801 P h y) = (term572 _146801 P h y).
Proof. exact (@lem8435988 (term572 _146801 P h y)). Qed.
Lemma lem8435990 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : @List.In _146801 y t) : term572 _146801 P h y.
Proof. exact (EQ_MP (@lem8435989 _146801 P h y) (@lem8435986 _146801 x h P y t h1 h2)). Qed.
Lemma lem8435993 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8435995 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (y : _146801) : (term574 _146801 P h y) = (term759 _146801 P h y).
Proof. exact (@lem8435993 (term572 _146801 P h y)). Qed.
Lemma lem8435998 {_146801 : Type'} (y : _146801) (P : type1402 _146801) (t : list _146801) (x : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) : term759 _146801 P h y.
Proof. exact (EQ_MP (@lem8435995 _146801 P h y) (@lem8432387 _146801 y P t x h h1 h2)). Qed.
Lemma lem8436001 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (@lem8435998 _146801 y P t x h h1 h2 (@lem8435990 _146801 x h P y t h1 h3)). Qed.
Lemma lem8436002 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : term734.
Proof. exact (fun h0 : ~ False => @lem8436001 _146801 P x h y t h1 h2 h3). Qed.
Lemma lem8436004 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436005 : term734 = False.
Proof. exact (@lem8436004 False). Qed.
Lemma lem8436006 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8436005) (@lem8436002 _146801 P x h y t h1 h2 h3)). Qed.
Lemma lem8436088 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (proj1 (@lem8426250 _146801 t P x'' h1)). Qed.
Lemma lem8436089 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term735 _146801 x'' t.
Proof. exact (fun h0 : term651 _146801 x'' t => @lem8436088 _146801 t P x'' h1). Qed.
Lemma lem8436091 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436092 {_146801 : Type'} (x'' : _146801) (t : list _146801) : (term735 _146801 x'' t) = (@List.In _146801 x'' t).
Proof. exact (@lem8436091 (@List.In _146801 x'' t)). Qed.
Lemma lem8436093 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : @List.In _146801 x'' t.
Proof. exact (EQ_MP (@lem8436092 _146801 x'' t) (@lem8436089 _146801 t P x'' h1)). Qed.
Lemma lem8436099 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8436100 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : (term621 _146801 t P _116149) = (term736 _146801 P _116149 t).
Proof. exact (@lem8436099 (term587 _146801 P _116149) (term651 _146801 _116149 t)). Qed.
Lemma lem8436106 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8436107 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : (term737 _146801 t P _116149) = (term738 _146801 P _116149 t).
Proof. exact (MK_COMB (@lem8436106) (@lem8436100 _146801 P _116149 t)). Qed.
Lemma lem8436113 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : (term736 _146801 P _116149 t) = (term736 _146801 P _116149 t).
Proof. exact (eq_refl (term736 _146801 P _116149 t)). Qed.
Lemma lem8436114 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : ((term621 _146801 t P _116149) = (term736 _146801 P _116149 t)) = ((term736 _146801 P _116149 t) = (term736 _146801 P _116149 t)).
Proof. exact (MK_COMB (@lem8436107 _146801 P _116149 t) (@lem8436113 _146801 P _116149 t)). Qed.
Lemma lem8436116 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8436117 (x : Prop) : (x = x) = True.
Proof. exact (@lem8436116 Prop x). Qed.
Lemma lem8436118 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : ((term736 _146801 P _116149 t) = (term736 _146801 P _116149 t)) = True.
Proof. exact (@lem8436117 (term736 _146801 P _116149 t)). Qed.
Lemma lem8436119 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : ((term621 _146801 t P _116149) = (term736 _146801 P _116149 t)) = True.
Proof. exact (TRANS (@lem8436114 _146801 P _116149 t) (@lem8436118 _146801 P _116149 t)). Qed.
Lemma lem8436120 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : True = ((term621 _146801 t P _116149) = (term736 _146801 P _116149 t)).
Proof. exact (SYM (@lem8436119 _146801 P _116149 t)). Qed.
Lemma lem8436121 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) (t : list _146801) : (term621 _146801 t P _116149) = (term736 _146801 P _116149 t).
Proof. exact (EQ_MP (@lem8436120 _146801 P _116149 t) (@lem0)). Qed.
Lemma lem8436122 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term736 _146801 P _116149 t.
Proof. exact (EQ_MP (@lem8436121 _146801 P _116149 t) (@lem8430425 _146801 _116149 x y h P t h1)). Qed.
Lemma lem8436124 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8436125 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116149 : _146801) : (term736 _146801 P _116149 t) = (term739 _146801 t P _116149).
Proof. exact (@lem8436124 (term651 _146801 _116149 t) (term587 _146801 P _116149)). Qed.
Lemma lem8436127 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436128 {_146801 : Type'} (_116149 : _146801) (t : list _146801) : (term740 _146801 _116149 t) = (@List.In _146801 _116149 t).
Proof. exact (@lem8436127 (@List.In _146801 _116149 t)). Qed.
Lemma lem8436129 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8436130 {_146801 : Type'} (_116149 : _146801) (t : list _146801) : (term741 _146801 _116149 t) = (term29 _146801 _116149 t).
Proof. exact (MK_COMB (@lem8436129) (@lem8436128 _146801 _116149 t)). Qed.
Lemma lem8436131 {_146801 : Type'} (P : type1402 _146801) (_116149 : _146801) : (term587 _146801 P _116149) = (term587 _146801 P _116149).
Proof. exact (eq_refl (term587 _146801 P _116149)). Qed.
Lemma lem8436132 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116149 : _146801) : (term739 _146801 t P _116149) = (term742 _146801 t P _116149).
Proof. exact (MK_COMB (@lem8436130 _146801 _116149 t) (@lem8436131 _146801 P _116149)). Qed.
Lemma lem8436133 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116149 : _146801) : (term736 _146801 P _116149 t) = (term742 _146801 t P _116149).
Proof. exact (TRANS (@lem8436125 _146801 t P _116149) (@lem8436132 _146801 t P _116149)). Qed.
Lemma lem8436136 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P _116149.
Proof. exact (EQ_MP (@lem8436133 _146801 t P _116149) (@lem8436122 _146801 _116149 x y h P t h1)). Qed.
Lemma lem8436137 {_146801 : Type'} (_116149 : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P _116149.
Proof. exact (@lem8436136 _146801 _116149 x y h P t h1). Qed.
Lemma lem8436138 {_146801 : Type'} (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term742 _146801 t P x''.
Proof. exact (@lem8436137 _146801 x'' x y h P t h1). Qed.
Lemma lem8436141 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (@lem8436138 _146801 x'' x y h P t h1 (@lem8436093 _146801 t P x'' h2)). Qed.
Lemma lem8436142 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term732 _146801 P x''.
Proof. exact (fun h0 : term601 _146801 P x'' => @lem8436141 _146801 x y h t P x'' h1 h2). Qed.
Lemma lem8436144 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436145 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term732 _146801 P x'') = (term587 _146801 P x'').
Proof. exact (@lem8436144 (term587 _146801 P x'')). Qed.
Lemma lem8436146 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term587 _146801 P x''.
Proof. exact (EQ_MP (@lem8436145 _146801 P x'') (@lem8436142 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8436149 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8436151 {_146801 : Type'} (P : type1402 _146801) (x'' : _146801) : (term601 _146801 P x'') = (term733 _146801 P x'').
Proof. exact (@lem8436149 (term587 _146801 P x'')). Qed.
Lemma lem8436154 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term615 _146801 t P x'') : term733 _146801 P x''.
Proof. exact (EQ_MP (@lem8436151 _146801 P x'') (@lem8430399 _146801 t P x'' h1)). Qed.
Lemma lem8436157 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (@lem8436154 _146801 t P x'' h2 (@lem8436146 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8436158 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : term734.
Proof. exact (fun h0 : ~ False => @lem8436157 _146801 x y h t P x'' h1 h2). Qed.
Lemma lem8436160 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436161 : term734 = False.
Proof. exact (@lem8436160 False). Qed.
Lemma lem8436162 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (EQ_MP (@lem8436161) (@lem8436158 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8436244 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8436245 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8436244 _146801 x). Qed.
Lemma lem8436246 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8436245 _146801 h). Qed.
Lemma lem8436247 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8436246 _146801 h). Qed.
Lemma lem8436249 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436250 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8436249 (h = h)). Qed.
Lemma lem8436251 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8436250 _146801 h) (@lem8436247 _146801 h)). Qed.
Lemma lem8436253 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8436254 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8436253 _146801 x). Qed.
Lemma lem8436255 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8436254 _146801 h). Qed.
Lemma lem8436256 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8436255 _146801 h). Qed.
Lemma lem8436258 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436259 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8436258 (h = h)). Qed.
Lemma lem8436260 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8436259 _146801 h) (@lem8436256 _146801 h)). Qed.
Lemma lem8436278 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8436279 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term654 _146801 h P _116153 _116154) = (term709 _146801 P _116153 _116154 h).
Proof. exact (@lem8436278 (term572 _146801 P _116153 _116154) (term650 _146801 _116154 h)). Qed.
Lemma lem8436287 {_146801 : Type'} (_116153 : _146801) (h : _146801) : (term710 _146801 _116153 h) = (term710 _146801 _116153 h).
Proof. exact (eq_refl (term710 _146801 _116153 h)). Qed.
Lemma lem8436288 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term696 _146801 h P _116153 _116154) = (term711 _146801 P _116153 _116154 h).
Proof. exact (MK_COMB (@lem8436287 _146801 _116153 h) (@lem8436279 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436292 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8436293 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term711 _146801 P _116153 _116154 h) = (term713 _146801 P _116153 _116154 h).
Proof. exact (@lem8436292 (term572 _146801 P _116153 _116154) (term650 _146801 _116153 h) (term650 _146801 _116154 h)). Qed.
Lemma lem8436313 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term696 _146801 h P _116153 _116154) = (term713 _146801 P _116153 _116154 h).
Proof. exact (TRANS (@lem8436288 _146801 P _116153 _116154 h) (@lem8436293 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436314 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8436315 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term714 _146801 h P _116153 _116154) = (term715 _146801 P _116153 _116154 h).
Proof. exact (MK_COMB (@lem8436314) (@lem8436313 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436335 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term713 _146801 P _116153 _116154 h) = (term713 _146801 P _116153 _116154 h).
Proof. exact (eq_refl (term713 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436336 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : ((term696 _146801 h P _116153 _116154) = (term713 _146801 P _116153 _116154 h)) = ((term713 _146801 P _116153 _116154 h) = (term713 _146801 P _116153 _116154 h)).
Proof. exact (MK_COMB (@lem8436315 _146801 P _116153 _116154 h) (@lem8436335 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436338 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8436339 (x : Prop) : (x = x) = True.
Proof. exact (@lem8436338 Prop x). Qed.
Lemma lem8436340 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : ((term713 _146801 P _116153 _116154 h) = (term713 _146801 P _116153 _116154 h)) = True.
Proof. exact (@lem8436339 (term713 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436341 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : ((term696 _146801 h P _116153 _116154) = (term713 _146801 P _116153 _116154 h)) = True.
Proof. exact (TRANS (@lem8436336 _146801 P _116153 _116154 h) (@lem8436340 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436342 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : True = ((term696 _146801 h P _116153 _116154) = (term713 _146801 P _116153 _116154 h)).
Proof. exact (SYM (@lem8436341 _146801 P _116153 _116154 h)). Qed.
Lemma lem8436343 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term696 _146801 h P _116153 _116154) = (term713 _146801 P _116153 _116154 h).
Proof. exact (EQ_MP (@lem8436342 _146801 P _116153 _116154 h) (@lem0)). Qed.
Lemma lem8436344 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term713 _146801 P _116153 _116154 h.
Proof. exact (EQ_MP (@lem8436343 _146801 P _116153 _116154 h) (@lem8432568 _146801 _116153 _116154 h x P t h1)). Qed.
Lemma lem8436346 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8436347 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) : (term713 _146801 P _116153 _116154 h) = (term717 _146801 h P _116153 _116154).
Proof. exact (@lem8436346 (term718 _146801 _116153 _116154 h) (term572 _146801 P _116153 _116154)). Qed.
Lemma lem8436349 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8436350 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term721 _146801 _116153 _116154 h) = (term722 _146801 _116153 _116154 h).
Proof. exact (@lem8436349 (term650 _146801 _116153 h) (term650 _146801 _116154 h)). Qed.
Lemma lem8436352 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436353 {_146801 : Type'} (_116153 : _146801) (h : _146801) : (term723 _146801 _116153 h) = (_116153 = h).
Proof. exact (@lem8436352 (_116153 = h)). Qed.
Lemma lem8436354 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8436355 {_146801 : Type'} (_116153 : _146801) (h : _146801) : (term724 _146801 _116153 h) = (term725 _146801 _116153 h).
Proof. exact (MK_COMB (@lem8436354) (@lem8436353 _146801 _116153 h)). Qed.
Lemma lem8436357 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436358 {_146801 : Type'} (_116154 : _146801) (h : _146801) : (term723 _146801 _116154 h) = (_116154 = h).
Proof. exact (@lem8436357 (_116154 = h)). Qed.
Lemma lem8436359 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term722 _146801 _116153 _116154 h) = (term726 _146801 _116153 _116154 h).
Proof. exact (MK_COMB (@lem8436355 _146801 _116153 h) (@lem8436358 _146801 _116154 h)). Qed.
Lemma lem8436360 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term721 _146801 _116153 _116154 h) = (term726 _146801 _116153 _116154 h).
Proof. exact (TRANS (@lem8436350 _146801 _116153 _116154 h) (@lem8436359 _146801 _116153 _116154 h)). Qed.
Lemma lem8436361 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8436362 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) : (term727 _146801 _116153 _116154 h) = (term728 _146801 _116153 _116154 h).
Proof. exact (MK_COMB (@lem8436361) (@lem8436360 _146801 _116153 _116154 h)). Qed.
Lemma lem8436363 {_146801 : Type'} (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) : (term572 _146801 P _116153 _116154) = (term572 _146801 P _116153 _116154).
Proof. exact (eq_refl (term572 _146801 P _116153 _116154)). Qed.
Lemma lem8436364 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) : (term717 _146801 h P _116153 _116154) = (term729 _146801 h P _116153 _116154).
Proof. exact (MK_COMB (@lem8436362 _146801 _116153 _116154 h) (@lem8436363 _146801 P _116153 _116154)). Qed.
Lemma lem8436365 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116153 : _146801) (_116154 : _146801) : (term713 _146801 P _116153 _116154 h) = (term729 _146801 h P _116153 _116154).
Proof. exact (TRANS (@lem8436347 _146801 h P _116153 _116154) (@lem8436364 _146801 h P _116153 _116154)). Qed.
Lemma lem8436367 {_146801 : Type'} (h : _146801) : term730 _146801 h.
Proof. exact (conj (@lem8436251 _146801 h) (@lem8436260 _146801 h)). Qed.
Lemma lem8436369 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116153 _116154.
Proof. exact (EQ_MP (@lem8436365 _146801 h P _116153 _116154) (@lem8436344 _146801 _116153 _116154 h x P t h1)). Qed.
Lemma lem8436370 {_146801 : Type'} (_116153 : _146801) (_116154 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term729 _146801 h P _116153 _116154.
Proof. exact (@lem8436369 _146801 _116153 _116154 h x P t h1). Qed.
Lemma lem8436371 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term731 _146801 P h.
Proof. exact (@lem8436370 _146801 h h h x P t h1). Qed.
Lemma lem8436374 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (@lem8436371 _146801 h x P t h1 (@lem8436367 _146801 h)). Qed.
Lemma lem8436375 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term732 _146801 P h.
Proof. exact (fun h0 : term601 _146801 P h => @lem8436374 _146801 h x P t h1). Qed.
Lemma lem8436377 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436378 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term732 _146801 P h) = (term587 _146801 P h).
Proof. exact (@lem8436377 (term587 _146801 P h)). Qed.
Lemma lem8436379 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term587 _146801 P h.
Proof. exact (EQ_MP (@lem8436378 _146801 P h) (@lem8436375 _146801 h x P t h1)). Qed.
Lemma lem8436382 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8436384 {_146801 : Type'} (P : type1402 _146801) (h : _146801) : (term601 _146801 P h) = (term733 _146801 P h).
Proof. exact (@lem8436382 (term587 _146801 P h)). Qed.
Lemma lem8436387 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term602 _146801 h t P x) (h2 : x = h) : term733 _146801 P h.
Proof. exact (EQ_MP (@lem8436384 _146801 P h) (@lem8432526 _146801 t P x h h1 h2)). Qed.
Lemma lem8436390 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (@lem8436387 _146801 t P x h h2 h3 (@lem8436379 _146801 h x P t h1)). Qed.
Lemma lem8436391 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : term734.
Proof. exact (fun h0 : ~ False => @lem8436390 _146801 t P x h h1 h2 h3). Qed.
Lemma lem8436393 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436394 : term734 = False.
Proof. exact (@lem8436393 False). Qed.
Lemma lem8436477 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8436478 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8436477 _146801 x t h1). Qed.
Lemma lem8436480 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436481 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8436480 (@List.In _146801 x t)). Qed.
Lemma lem8436482 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8436481 _146801 x t) (@lem8436478 _146801 x t h1)). Qed.
Lemma lem8436484 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (h1). Qed.
Lemma lem8436485 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8436484 _146801 x t h1). Qed.
Lemma lem8436487 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436488 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8436487 (@List.In _146801 x t)). Qed.
Lemma lem8436489 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8436488 _146801 x t) (@lem8436485 _146801 x t h1)). Qed.
Lemma lem8436505 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8436506 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term582 _146801 t P _116157 _116158) = (term743 _146801 P _116157 _116158 t).
Proof. exact (@lem8436505 (term572 _146801 P _116157 _116158) (term651 _146801 _116158 t)). Qed.
Lemma lem8436512 {_146801 : Type'} (_116157 : _146801) (t : list _146801) : (term203 _146801 _116157 t) = (term203 _146801 _116157 t).
Proof. exact (eq_refl (term203 _146801 _116157 t)). Qed.
Lemma lem8436513 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term677 _146801 t P _116157 _116158) = (term782 _146801 P _116157 _116158 t).
Proof. exact (MK_COMB (@lem8436512 _146801 _116157 t) (@lem8436506 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436517 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8436518 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term782 _146801 P _116157 _116158 t) = (term783 _146801 P _116157 _116158 t).
Proof. exact (@lem8436517 (term572 _146801 P _116157 _116158) (term651 _146801 _116157 t) (term651 _146801 _116158 t)). Qed.
Lemma lem8436534 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term677 _146801 t P _116157 _116158) = (term783 _146801 P _116157 _116158 t).
Proof. exact (TRANS (@lem8436513 _146801 P _116157 _116158 t) (@lem8436518 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436535 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8436536 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term784 _146801 t P _116157 _116158) = (term785 _146801 P _116157 _116158 t).
Proof. exact (MK_COMB (@lem8436535) (@lem8436534 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436552 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term783 _146801 P _116157 _116158 t) = (term783 _146801 P _116157 _116158 t).
Proof. exact (eq_refl (term783 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436553 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : ((term677 _146801 t P _116157 _116158) = (term783 _146801 P _116157 _116158 t)) = ((term783 _146801 P _116157 _116158 t) = (term783 _146801 P _116157 _116158 t)).
Proof. exact (MK_COMB (@lem8436536 _146801 P _116157 _116158 t) (@lem8436552 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436555 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8436556 (x : Prop) : (x = x) = True.
Proof. exact (@lem8436555 Prop x). Qed.
Lemma lem8436557 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : ((term783 _146801 P _116157 _116158 t) = (term783 _146801 P _116157 _116158 t)) = True.
Proof. exact (@lem8436556 (term783 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436558 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : ((term677 _146801 t P _116157 _116158) = (term783 _146801 P _116157 _116158 t)) = True.
Proof. exact (TRANS (@lem8436553 _146801 P _116157 _116158 t) (@lem8436557 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436559 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : True = ((term677 _146801 t P _116157 _116158) = (term783 _146801 P _116157 _116158 t)).
Proof. exact (SYM (@lem8436558 _146801 P _116157 _116158 t)). Qed.
Lemma lem8436560 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term677 _146801 t P _116157 _116158) = (term783 _146801 P _116157 _116158 t).
Proof. exact (EQ_MP (@lem8436559 _146801 P _116157 _116158 t) (@lem0)). Qed.
Lemma lem8436561 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term783 _146801 P _116157 _116158 t.
Proof. exact (EQ_MP (@lem8436560 _146801 P _116157 _116158 t) (@lem8430521 _146801 _116157 _116158 h x P t h1)). Qed.
Lemma lem8436563 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8436564 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) : (term783 _146801 P _116157 _116158 t) = (term786 _146801 t P _116157 _116158).
Proof. exact (@lem8436563 (term787 _146801 _116157 _116158 t) (term572 _146801 P _116157 _116158)). Qed.
Lemma lem8436566 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8436567 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term788 _146801 _116157 _116158 t) = (term789 _146801 _116157 _116158 t).
Proof. exact (@lem8436566 (term651 _146801 _116157 t) (term651 _146801 _116158 t)). Qed.
Lemma lem8436569 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436570 {_146801 : Type'} (_116157 : _146801) (t : list _146801) : (term740 _146801 _116157 t) = (@List.In _146801 _116157 t).
Proof. exact (@lem8436569 (@List.In _146801 _116157 t)). Qed.
Lemma lem8436571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8436572 {_146801 : Type'} (_116157 : _146801) (t : list _146801) : (term790 _146801 _116157 t) = (term199 _146801 _116157 t).
Proof. exact (MK_COMB (@lem8436571) (@lem8436570 _146801 _116157 t)). Qed.
Lemma lem8436574 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436575 {_146801 : Type'} (_116158 : _146801) (t : list _146801) : (term740 _146801 _116158 t) = (@List.In _146801 _116158 t).
Proof. exact (@lem8436574 (@List.In _146801 _116158 t)). Qed.
Lemma lem8436576 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term789 _146801 _116157 _116158 t) = (term791 _146801 _116157 _116158 t).
Proof. exact (MK_COMB (@lem8436572 _146801 _116157 t) (@lem8436575 _146801 _116158 t)). Qed.
Lemma lem8436577 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term788 _146801 _116157 _116158 t) = (term791 _146801 _116157 _116158 t).
Proof. exact (TRANS (@lem8436567 _146801 _116157 _116158 t) (@lem8436576 _146801 _116157 _116158 t)). Qed.
Lemma lem8436578 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8436579 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (t : list _146801) : (term792 _146801 _116157 _116158 t) = (term793 _146801 _116157 _116158 t).
Proof. exact (MK_COMB (@lem8436578) (@lem8436577 _146801 _116157 _116158 t)). Qed.
Lemma lem8436580 {_146801 : Type'} (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) : (term572 _146801 P _116157 _116158) = (term572 _146801 P _116157 _116158).
Proof. exact (eq_refl (term572 _146801 P _116157 _116158)). Qed.
Lemma lem8436581 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) : (term786 _146801 t P _116157 _116158) = (term794 _146801 t P _116157 _116158).
Proof. exact (MK_COMB (@lem8436579 _146801 _116157 _116158 t) (@lem8436580 _146801 P _116157 _116158)). Qed.
Lemma lem8436582 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116157 : _146801) (_116158 : _146801) : (term783 _146801 P _116157 _116158 t) = (term794 _146801 t P _116157 _116158).
Proof. exact (TRANS (@lem8436564 _146801 t P _116157 _116158) (@lem8436581 _146801 t P _116157 _116158)). Qed.
Lemma lem8436584 {_146801 : Type'} (x : _146801) (t : list _146801) (h1 : @List.In _146801 x t) : term795 _146801 x t.
Proof. exact (conj (@lem8436482 _146801 x t h1) (@lem8436489 _146801 x t h1)). Qed.
Lemma lem8436586 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116157 _116158.
Proof. exact (EQ_MP (@lem8436582 _146801 t P _116157 _116158) (@lem8436561 _146801 _116157 _116158 h x P t h1)). Qed.
Lemma lem8436587 {_146801 : Type'} (_116157 : _146801) (_116158 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116157 _116158.
Proof. exact (@lem8436586 _146801 _116157 _116158 h x P t h1). Qed.
Lemma lem8436588 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term796 _146801 t P x.
Proof. exact (@lem8436587 _146801 x x h x P t h1). Qed.
Lemma lem8436591 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (@lem8436588 _146801 h x P t h1 (@lem8436584 _146801 x t h2)). Qed.
Lemma lem8436592 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term732 _146801 P x.
Proof. exact (fun h0 : term601 _146801 P x => @lem8436591 _146801 h P x t h1 h2). Qed.
Lemma lem8436594 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436595 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term732 _146801 P x) = (term587 _146801 P x).
Proof. exact (@lem8436594 (term587 _146801 P x)). Qed.
Lemma lem8436596 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : @List.In _146801 x t) : term587 _146801 P x.
Proof. exact (EQ_MP (@lem8436595 _146801 P x) (@lem8436592 _146801 h P x t h1 h2)). Qed.
Lemma lem8436599 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8436601 {_146801 : Type'} (P : type1402 _146801) (x : _146801) : (term601 _146801 P x) = (term733 _146801 P x).
Proof. exact (@lem8436599 (term587 _146801 P x)). Qed.
Lemma lem8436604 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term602 _146801 h t P x) : term733 _146801 P x.
Proof. exact (EQ_MP (@lem8436601 _146801 P x) (@lem8430499 _146801 h t P x h1)). Qed.
Lemma lem8436607 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (@lem8436604 _146801 h t P x h2 (@lem8436596 _146801 h P x t h1 h3)). Qed.
Lemma lem8436608 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : term734.
Proof. exact (fun h0 : ~ False => @lem8436607 _146801 h P x t h1 h2 h3). Qed.
Lemma lem8436610 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436611 : term734 = False.
Proof. exact (@lem8436610 False). Qed.
Lemma lem8436612 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8436611) (@lem8436608 _146801 h P x t h1 h2 h3)). Qed.
Lemma lem8436694 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem21386 _146801 x). Qed.
Lemma lem8436695 {_146801 : Type'} (x : _146801) : x = x.
Proof. exact (@lem8436694 _146801 x). Qed.
Lemma lem8436696 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (@lem8436695 _146801 h). Qed.
Lemma lem8436697 {_146801 : Type'} (h : _146801) : term706 _146801 h.
Proof. exact (fun h0 : term707 _146801 h => @lem8436696 _146801 h). Qed.
Lemma lem8436699 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436700 {_146801 : Type'} (h : _146801) : (term706 _146801 h) = (h = h).
Proof. exact (@lem8436699 (h = h)). Qed.
Lemma lem8436701 {_146801 : Type'} (h : _146801) : h = h.
Proof. exact (EQ_MP (@lem8436700 _146801 h) (@lem8436697 _146801 h)). Qed.
Lemma lem8436703 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (proj1 (@lem8426294 _146801 t P h x h1)). Qed.
Lemma lem8436704 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term735 _146801 x t.
Proof. exact (fun h0 : term651 _146801 x t => @lem8436703 _146801 t P h x h1). Qed.
Lemma lem8436706 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436707 {_146801 : Type'} (x : _146801) (t : list _146801) : (term735 _146801 x t) = (@List.In _146801 x t).
Proof. exact (@lem8436706 (@List.In _146801 x t)). Qed.
Lemma lem8436708 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : @List.In _146801 x t.
Proof. exact (EQ_MP (@lem8436707 _146801 x t) (@lem8436704 _146801 t P h x h1)). Qed.
Lemma lem8436726 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8436727 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) (t : list _146801) : (term582 _146801 t P _116161 _116162) = (term743 _146801 P _116161 _116162 t).
Proof. exact (@lem8436726 (term572 _146801 P _116161 _116162) (term651 _146801 _116162 t)). Qed.
Lemma lem8436733 {_146801 : Type'} (_116161 : _146801) (h : _146801) : (term710 _146801 _116161 h) = (term710 _146801 _116161 h).
Proof. exact (eq_refl (term710 _146801 _116161 h)). Qed.
Lemma lem8436734 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) (t : list _146801) : (term691 _146801 h t P _116161 _116162) = (term744 _146801 h P _116161 _116162 t).
Proof. exact (MK_COMB (@lem8436733 _146801 _116161 h) (@lem8436727 _146801 P _116161 _116162 t)). Qed.
Lemma lem8436738 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8436739 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term744 _146801 h P _116161 _116162 t) = (term745 _146801 P _116161 h _116162 t).
Proof. exact (@lem8436738 (term572 _146801 P _116161 _116162) (term650 _146801 _116161 h) (term651 _146801 _116162 t)). Qed.
Lemma lem8436757 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term691 _146801 h t P _116161 _116162) = (term745 _146801 P _116161 h _116162 t).
Proof. exact (TRANS (@lem8436734 _146801 h P _116161 _116162 t) (@lem8436739 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436758 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8436759 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term746 _146801 h t P _116161 _116162) = (term747 _146801 P _116161 h _116162 t).
Proof. exact (MK_COMB (@lem8436758) (@lem8436757 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436777 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term745 _146801 P _116161 h _116162 t) = (term745 _146801 P _116161 h _116162 t).
Proof. exact (eq_refl (term745 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436778 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : ((term691 _146801 h t P _116161 _116162) = (term745 _146801 P _116161 h _116162 t)) = ((term745 _146801 P _116161 h _116162 t) = (term745 _146801 P _116161 h _116162 t)).
Proof. exact (MK_COMB (@lem8436759 _146801 P _116161 h _116162 t) (@lem8436777 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436780 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8436781 (x : Prop) : (x = x) = True.
Proof. exact (@lem8436780 Prop x). Qed.
Lemma lem8436782 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : ((term745 _146801 P _116161 h _116162 t) = (term745 _146801 P _116161 h _116162 t)) = True.
Proof. exact (@lem8436781 (term745 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436783 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : ((term691 _146801 h t P _116161 _116162) = (term745 _146801 P _116161 h _116162 t)) = True.
Proof. exact (TRANS (@lem8436778 _146801 P _116161 h _116162 t) (@lem8436782 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436784 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : True = ((term691 _146801 h t P _116161 _116162) = (term745 _146801 P _116161 h _116162 t)).
Proof. exact (SYM (@lem8436783 _146801 P _116161 h _116162 t)). Qed.
Lemma lem8436785 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term691 _146801 h t P _116161 _116162) = (term745 _146801 P _116161 h _116162 t).
Proof. exact (EQ_MP (@lem8436784 _146801 P _116161 h _116162 t) (@lem0)). Qed.
Lemma lem8436786 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term745 _146801 P _116161 h _116162 t.
Proof. exact (EQ_MP (@lem8436785 _146801 P _116161 h _116162 t) (@lem8430569 _146801 _116161 _116162 h x P t h1)). Qed.
Lemma lem8436788 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8436789 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) : (term745 _146801 P _116161 h _116162 t) = (term748 _146801 h t P _116161 _116162).
Proof. exact (@lem8436788 (term749 _146801 _116161 h _116162 t) (term572 _146801 P _116161 _116162)). Qed.
Lemma lem8436791 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8436792 {_146801 : Type'} (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term750 _146801 _116161 h _116162 t) = (term751 _146801 _116161 h _116162 t).
Proof. exact (@lem8436791 (term650 _146801 _116161 h) (term651 _146801 _116162 t)). Qed.
Lemma lem8436794 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436795 {_146801 : Type'} (_116161 : _146801) (h : _146801) : (term723 _146801 _116161 h) = (_116161 = h).
Proof. exact (@lem8436794 (_116161 = h)). Qed.
Lemma lem8436796 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8436797 {_146801 : Type'} (_116161 : _146801) (h : _146801) : (term724 _146801 _116161 h) = (term725 _146801 _116161 h).
Proof. exact (MK_COMB (@lem8436796) (@lem8436795 _146801 _116161 h)). Qed.
Lemma lem8436799 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8436800 {_146801 : Type'} (_116162 : _146801) (t : list _146801) : (term740 _146801 _116162 t) = (@List.In _146801 _116162 t).
Proof. exact (@lem8436799 (@List.In _146801 _116162 t)). Qed.
Lemma lem8436801 {_146801 : Type'} (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term751 _146801 _116161 h _116162 t) = (term752 _146801 _116161 h _116162 t).
Proof. exact (MK_COMB (@lem8436797 _146801 _116161 h) (@lem8436800 _146801 _116162 t)). Qed.
Lemma lem8436802 {_146801 : Type'} (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term750 _146801 _116161 h _116162 t) = (term752 _146801 _116161 h _116162 t).
Proof. exact (TRANS (@lem8436792 _146801 _116161 h _116162 t) (@lem8436801 _146801 _116161 h _116162 t)). Qed.
Lemma lem8436803 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8436804 {_146801 : Type'} (_116161 : _146801) (h : _146801) (_116162 : _146801) (t : list _146801) : (term753 _146801 _116161 h _116162 t) = (term754 _146801 _116161 h _116162 t).
Proof. exact (MK_COMB (@lem8436803) (@lem8436802 _146801 _116161 h _116162 t)). Qed.
Lemma lem8436805 {_146801 : Type'} (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) : (term572 _146801 P _116161 _116162) = (term572 _146801 P _116161 _116162).
Proof. exact (eq_refl (term572 _146801 P _116161 _116162)). Qed.
Lemma lem8436806 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) : (term748 _146801 h t P _116161 _116162) = (term755 _146801 h t P _116161 _116162).
Proof. exact (MK_COMB (@lem8436804 _146801 _116161 h _116162 t) (@lem8436805 _146801 P _116161 _116162)). Qed.
Lemma lem8436807 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (_116161 : _146801) (_116162 : _146801) : (term745 _146801 P _116161 h _116162 t) = (term755 _146801 h t P _116161 _116162).
Proof. exact (TRANS (@lem8436789 _146801 h t P _116161 _116162) (@lem8436806 _146801 h t P _116161 _116162)). Qed.
Lemma lem8436809 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term756 _146801 h x t.
Proof. exact (conj (@lem8436701 _146801 h) (@lem8436708 _146801 t P h x h1)). Qed.
Lemma lem8436811 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116161 _116162.
Proof. exact (EQ_MP (@lem8436807 _146801 h t P _116161 _116162) (@lem8436786 _146801 _116161 _116162 h x P t h1)). Qed.
Lemma lem8436812 {_146801 : Type'} (_116161 : _146801) (_116162 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term755 _146801 h t P _116161 _116162.
Proof. exact (@lem8436811 _146801 _116161 _116162 h x P t h1). Qed.
Lemma lem8436813 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term757 _146801 t P h x.
Proof. exact (@lem8436812 _146801 h x h x P t h1). Qed.
Lemma lem8436816 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (@lem8436813 _146801 h x P t h1 (@lem8436809 _146801 t P h x h2)). Qed.
Lemma lem8436817 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term758 _146801 P h x.
Proof. exact (fun h0 : term574 _146801 P h x => @lem8436816 _146801 t P h x h1 h2). Qed.
Lemma lem8436819 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436820 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term758 _146801 P h x) = (term572 _146801 P h x).
Proof. exact (@lem8436819 (term572 _146801 P h x)). Qed.
Lemma lem8436821 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term572 _146801 P h x.
Proof. exact (EQ_MP (@lem8436820 _146801 P h x) (@lem8436817 _146801 t P h x h1 h2)). Qed.
Lemma lem8436824 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8436826 {_146801 : Type'} (P : type1402 _146801) (h : _146801) (x : _146801) : (term574 _146801 P h x) = (term759 _146801 P h x).
Proof. exact (@lem8436824 (term572 _146801 P h x)). Qed.
Lemma lem8436829 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term597 _146801 t P h x) : term759 _146801 P h x.
Proof. exact (EQ_MP (@lem8436826 _146801 P h x) (@lem8430559 _146801 t P h x h1)). Qed.
Lemma lem8436832 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (@lem8436829 _146801 t P h x h2 (@lem8436821 _146801 t P h x h1 h2)). Qed.
Lemma lem8436833 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : term734.
Proof. exact (fun h0 : ~ False => @lem8436832 _146801 t P h x h1 h2). Qed.
Lemma lem8436835 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436836 : term734 = False.
Proof. exact (@lem8436835 False). Qed.
Lemma lem8436837 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (h : _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term597 _146801 t P h x) : False.
Proof. exact (EQ_MP (@lem8436836) (@lem8436833 _146801 t P h x h1 h2)). Qed.
Lemma lem8436919 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : @List.In _146801 x' t.
Proof. exact (proj1 (@lem8426245 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8436920 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term735 _146801 x' t.
Proof. exact (fun h0 : term651 _146801 x' t => @lem8436919 _146801 x' y' x'' P t h1). Qed.
Lemma lem8436922 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436923 {_146801 : Type'} (x' : _146801) (t : list _146801) : (term735 _146801 x' t) = (@List.In _146801 x' t).
Proof. exact (@lem8436922 (@List.In _146801 x' t)). Qed.
Lemma lem8436924 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : @List.In _146801 x' t.
Proof. exact (EQ_MP (@lem8436923 _146801 x' t) (@lem8436920 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8436926 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : @List.In _146801 y' t.
Proof. exact (proj1 (@lem8426246 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8436927 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term735 _146801 y' t.
Proof. exact (fun h0 : term651 _146801 y' t => @lem8436926 _146801 x' y' x'' P t h1). Qed.
Lemma lem8436929 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8436930 {_146801 : Type'} (y' : _146801) (t : list _146801) : (term735 _146801 y' t) = (@List.In _146801 y' t).
Proof. exact (@lem8436929 (@List.In _146801 y' t)). Qed.
Lemma lem8436931 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : @List.In _146801 y' t.
Proof. exact (EQ_MP (@lem8436930 _146801 y' t) (@lem8436927 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8436947 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8436948 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term582 _146801 t P _116165 _116166) = (term743 _146801 P _116165 _116166 t).
Proof. exact (@lem8436947 (term572 _146801 P _116165 _116166) (term651 _146801 _116166 t)). Qed.
Lemma lem8436954 {_146801 : Type'} (_116165 : _146801) (t : list _146801) : (term203 _146801 _116165 t) = (term203 _146801 _116165 t).
Proof. exact (eq_refl (term203 _146801 _116165 t)). Qed.
Lemma lem8436955 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term677 _146801 t P _116165 _116166) = (term782 _146801 P _116165 _116166 t).
Proof. exact (MK_COMB (@lem8436954 _146801 _116165 t) (@lem8436948 _146801 P _116165 _116166 t)). Qed.
Lemma lem8436959 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8436960 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term782 _146801 P _116165 _116166 t) = (term783 _146801 P _116165 _116166 t).
Proof. exact (@lem8436959 (term572 _146801 P _116165 _116166) (term651 _146801 _116165 t) (term651 _146801 _116166 t)). Qed.
Lemma lem8436976 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term677 _146801 t P _116165 _116166) = (term783 _146801 P _116165 _116166 t).
Proof. exact (TRANS (@lem8436955 _146801 P _116165 _116166 t) (@lem8436960 _146801 P _116165 _116166 t)). Qed.
Lemma lem8436977 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8436978 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term784 _146801 t P _116165 _116166) = (term785 _146801 P _116165 _116166 t).
Proof. exact (MK_COMB (@lem8436977) (@lem8436976 _146801 P _116165 _116166 t)). Qed.
Lemma lem8436994 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term783 _146801 P _116165 _116166 t) = (term783 _146801 P _116165 _116166 t).
Proof. exact (eq_refl (term783 _146801 P _116165 _116166 t)). Qed.
Lemma lem8436995 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : ((term677 _146801 t P _116165 _116166) = (term783 _146801 P _116165 _116166 t)) = ((term783 _146801 P _116165 _116166 t) = (term783 _146801 P _116165 _116166 t)).
Proof. exact (MK_COMB (@lem8436978 _146801 P _116165 _116166 t) (@lem8436994 _146801 P _116165 _116166 t)). Qed.
Lemma lem8436997 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8436998 (x : Prop) : (x = x) = True.
Proof. exact (@lem8436997 Prop x). Qed.
Lemma lem8436999 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : ((term783 _146801 P _116165 _116166 t) = (term783 _146801 P _116165 _116166 t)) = True.
Proof. exact (@lem8436998 (term783 _146801 P _116165 _116166 t)). Qed.
Lemma lem8437000 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : ((term677 _146801 t P _116165 _116166) = (term783 _146801 P _116165 _116166 t)) = True.
Proof. exact (TRANS (@lem8436995 _146801 P _116165 _116166 t) (@lem8436999 _146801 P _116165 _116166 t)). Qed.
Lemma lem8437001 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : True = ((term677 _146801 t P _116165 _116166) = (term783 _146801 P _116165 _116166 t)).
Proof. exact (SYM (@lem8437000 _146801 P _116165 _116166 t)). Qed.
Lemma lem8437002 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term677 _146801 t P _116165 _116166) = (term783 _146801 P _116165 _116166 t).
Proof. exact (EQ_MP (@lem8437001 _146801 P _116165 _116166 t) (@lem0)). Qed.
Lemma lem8437003 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term783 _146801 P _116165 _116166 t.
Proof. exact (EQ_MP (@lem8437002 _146801 P _116165 _116166 t) (@lem8430635 _146801 _116165 _116166 h x P t h1)). Qed.
Lemma lem8437005 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8437006 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) : (term783 _146801 P _116165 _116166 t) = (term786 _146801 t P _116165 _116166).
Proof. exact (@lem8437005 (term787 _146801 _116165 _116166 t) (term572 _146801 P _116165 _116166)). Qed.
Lemma lem8437008 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8437009 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term788 _146801 _116165 _116166 t) = (term789 _146801 _116165 _116166 t).
Proof. exact (@lem8437008 (term651 _146801 _116165 t) (term651 _146801 _116166 t)). Qed.
Lemma lem8437011 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8437012 {_146801 : Type'} (_116165 : _146801) (t : list _146801) : (term740 _146801 _116165 t) = (@List.In _146801 _116165 t).
Proof. exact (@lem8437011 (@List.In _146801 _116165 t)). Qed.
Lemma lem8437013 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8437014 {_146801 : Type'} (_116165 : _146801) (t : list _146801) : (term790 _146801 _116165 t) = (term199 _146801 _116165 t).
Proof. exact (MK_COMB (@lem8437013) (@lem8437012 _146801 _116165 t)). Qed.
Lemma lem8437016 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8437017 {_146801 : Type'} (_116166 : _146801) (t : list _146801) : (term740 _146801 _116166 t) = (@List.In _146801 _116166 t).
Proof. exact (@lem8437016 (@List.In _146801 _116166 t)). Qed.
Lemma lem8437018 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term789 _146801 _116165 _116166 t) = (term791 _146801 _116165 _116166 t).
Proof. exact (MK_COMB (@lem8437014 _146801 _116165 t) (@lem8437017 _146801 _116166 t)). Qed.
Lemma lem8437019 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term788 _146801 _116165 _116166 t) = (term791 _146801 _116165 _116166 t).
Proof. exact (TRANS (@lem8437009 _146801 _116165 _116166 t) (@lem8437018 _146801 _116165 _116166 t)). Qed.
Lemma lem8437020 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8437021 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (t : list _146801) : (term792 _146801 _116165 _116166 t) = (term793 _146801 _116165 _116166 t).
Proof. exact (MK_COMB (@lem8437020) (@lem8437019 _146801 _116165 _116166 t)). Qed.
Lemma lem8437022 {_146801 : Type'} (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) : (term572 _146801 P _116165 _116166) = (term572 _146801 P _116165 _116166).
Proof. exact (eq_refl (term572 _146801 P _116165 _116166)). Qed.
Lemma lem8437023 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) : (term786 _146801 t P _116165 _116166) = (term794 _146801 t P _116165 _116166).
Proof. exact (MK_COMB (@lem8437021 _146801 _116165 _116166 t) (@lem8437022 _146801 P _116165 _116166)). Qed.
Lemma lem8437024 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (_116165 : _146801) (_116166 : _146801) : (term783 _146801 P _116165 _116166 t) = (term794 _146801 t P _116165 _116166).
Proof. exact (TRANS (@lem8437006 _146801 t P _116165 _116166) (@lem8437023 _146801 t P _116165 _116166)). Qed.
Lemma lem8437026 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term791 _146801 x' y' t.
Proof. exact (conj (@lem8436924 _146801 x' y' x'' P t h1) (@lem8436931 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8437028 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116165 _116166.
Proof. exact (EQ_MP (@lem8437024 _146801 t P _116165 _116166) (@lem8437003 _146801 _116165 _116166 h x P t h1)). Qed.
Lemma lem8437029 {_146801 : Type'} (_116165 : _146801) (_116166 : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P _116165 _116166.
Proof. exact (@lem8437028 _146801 _116165 _116166 h x P t h1). Qed.
Lemma lem8437030 {_146801 : Type'} (x' : _146801) (y' : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) : term794 _146801 t P x' y'.
Proof. exact (@lem8437029 _146801 x' y' h x P t h1). Qed.
Lemma lem8437033 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : term572 _146801 P x' y'.
Proof. exact (@lem8437030 _146801 x' y' h x P t h1 (@lem8437026 _146801 x' y' x'' P t h2)). Qed.
Lemma lem8437034 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : term758 _146801 P x' y'.
Proof. exact (fun h0 : term574 _146801 P x' y' => @lem8437033 _146801 h x x' y' x'' P t h1 h2). Qed.
Lemma lem8437036 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437037 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term758 _146801 P x' y') = (term572 _146801 P x' y').
Proof. exact (@lem8437036 (term572 _146801 P x' y')). Qed.
Lemma lem8437038 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : term572 _146801 P x' y'.
Proof. exact (EQ_MP (@lem8437037 _146801 P x' y') (@lem8437034 _146801 h x x' y' x'' P t h1 h2)). Qed.
Lemma lem8437041 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8437043 {_146801 : Type'} (P : type1402 _146801) (x' : _146801) (y' : _146801) : (term574 _146801 P x' y') = (term759 _146801 P x' y').
Proof. exact (@lem8437041 (term572 _146801 P x' y')). Qed.
Lemma lem8437046 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) : term759 _146801 P x' y'.
Proof. exact (EQ_MP (@lem8437043 _146801 P x' y') (@lem8430611 _146801 x' y' x'' P t h1)). Qed.
Lemma lem8437049 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : False.
Proof. exact (@lem8437046 _146801 x' y' x'' P t h2 (@lem8437038 _146801 h x x' y' x'' P t h1 h2)). Qed.
Lemma lem8437050 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8437049 _146801 h x x' y' x'' P t h1 h2). Qed.
Lemma lem8437052 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437053 : term734 = False.
Proof. exact (@lem8437052 False). Qed.
Lemma lem8437054 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : False.
Proof. exact (EQ_MP (@lem8437053) (@lem8437050 _146801 h x x' y' x'' P t h1 h2)). Qed.
Lemma lem8437136 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (proj2 (@lem8426300 _146801 x y h P t h1)). Qed.
Lemma lem8437137 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term760 _146801 P t.
Proof. exact (fun h0 : term227 _146801 P t => @lem8437136 _146801 x y h P t h1). Qed.
Lemma lem8437139 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437140 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term760 _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (@lem8437139 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437141 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (EQ_MP (@lem8437140 _146801 P t) (@lem8437137 _146801 x y h P t h1)). Qed.
Lemma lem8437144 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8437146 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term761 _146801 P t).
Proof. exact (@lem8437144 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437149 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term761 _146801 P t.
Proof. exact (EQ_MP (@lem8437146 _146801 P t) (@lem8432833 _146801 P t h1)). Qed.
Lemma lem8437152 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (@lem8437149 _146801 P t h1 (@lem8437141 _146801 x y h P t h2)). Qed.
Lemma lem8437153 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8437152 _146801 x y h P t h1 h2). Qed.
Lemma lem8437155 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437156 : term734 = False.
Proof. exact (@lem8437155 False). Qed.
Lemma lem8437157 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437156) (@lem8437153 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437239 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (proj2 (@lem8426300 _146801 x y h P t h1)). Qed.
Lemma lem8437240 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term760 _146801 P t.
Proof. exact (fun h0 : term227 _146801 P t => @lem8437239 _146801 x y h P t h1). Qed.
Lemma lem8437242 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437243 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term760 _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (@lem8437242 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437244 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (EQ_MP (@lem8437243 _146801 P t) (@lem8437240 _146801 x y h P t h1)). Qed.
Lemma lem8437247 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8437249 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term761 _146801 P t).
Proof. exact (@lem8437247 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437252 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term761 _146801 P t.
Proof. exact (EQ_MP (@lem8437249 _146801 P t) (@lem8432986 _146801 P t h1)). Qed.
Lemma lem8437255 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (@lem8437252 _146801 P t h1 (@lem8437244 _146801 x y h P t h2)). Qed.
Lemma lem8437256 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8437255 _146801 x y h P t h1 h2). Qed.
Lemma lem8437258 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437259 : term734 = False.
Proof. exact (@lem8437258 False). Qed.
Lemma lem8437260 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437259) (@lem8437256 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437342 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (proj2 (@lem8426300 _146801 x y h P t h1)). Qed.
Lemma lem8437343 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term760 _146801 P t.
Proof. exact (fun h0 : term227 _146801 P t => @lem8437342 _146801 x y h P t h1). Qed.
Lemma lem8437345 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437346 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term760 _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (@lem8437345 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437347 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (EQ_MP (@lem8437346 _146801 P t) (@lem8437343 _146801 x y h P t h1)). Qed.
Lemma lem8437350 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8437352 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term761 _146801 P t).
Proof. exact (@lem8437350 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437355 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term761 _146801 P t.
Proof. exact (EQ_MP (@lem8437352 _146801 P t) (@lem8433153 _146801 P t h1)). Qed.
Lemma lem8437358 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (@lem8437355 _146801 P t h1 (@lem8437347 _146801 x y h P t h2)). Qed.
Lemma lem8437359 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8437358 _146801 x y h P t h1 h2). Qed.
Lemma lem8437361 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437362 : term734 = False.
Proof. exact (@lem8437361 False). Qed.
Lemma lem8437363 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437362) (@lem8437359 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437445 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (proj2 (@lem8426300 _146801 x y h P t h1)). Qed.
Lemma lem8437446 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : term760 _146801 P t.
Proof. exact (fun h0 : term227 _146801 P t => @lem8437445 _146801 x y h P t h1). Qed.
Lemma lem8437448 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437449 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term760 _146801 P t) = (@List.ForallOrdPairs _146801 P t).
Proof. exact (@lem8437448 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437450 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) : @List.ForallOrdPairs _146801 P t.
Proof. exact (EQ_MP (@lem8437449 _146801 P t) (@lem8437446 _146801 x y h P t h1)). Qed.
Lemma lem8437453 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8437455 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term227 _146801 P t) = (term761 _146801 P t).
Proof. exact (@lem8437453 (@List.ForallOrdPairs _146801 P t)). Qed.
Lemma lem8437458 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) : term761 _146801 P t.
Proof. exact (EQ_MP (@lem8437455 _146801 P t) (@lem8430789 _146801 P t h1)). Qed.
Lemma lem8437461 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (@lem8437458 _146801 P t h1 (@lem8437450 _146801 x y h P t h2)). Qed.
Lemma lem8437462 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : term734.
Proof. exact (fun h0 : ~ False => @lem8437461 _146801 x y h P t h1 h2). Qed.
Lemma lem8437464 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8437465 : term734 = False.
Proof. exact (@lem8437464 False). Qed.
Lemma lem8437466 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437465) (@lem8437462 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437467 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437363 _146801 x y h P t h1 h2) (fun h3 : False => @lem8433153 _146801 P t h1)). Qed.
Lemma lem8437469 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437467 _146801 x y h P t h1 h2) (@lem8433153 _146801 P t h1)). Qed.
Lemma lem8437470 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437260 _146801 x y h P t h1 h2) (fun h3 : False => @lem8432986 _146801 P t h1)). Qed.
Lemma lem8437472 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437470 _146801 x y h P t h1 h2) (@lem8432986 _146801 P t h1)). Qed.
Lemma lem8437473 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437157 _146801 x y h P t h1 h2) (fun h3 : False => @lem8432833 _146801 P t h1)). Qed.
Lemma lem8437475 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437473 _146801 x y h P t h1 h2) (@lem8432833 _146801 P t h1)). Qed.
Lemma lem8437476 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437475 _146801 x y h P t h1 h2) (fun h3 : False => @lem8432666 _146801 P t h1)). Qed.
Lemma lem8437478 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437476 _146801 x y h P t h1 h2) (@lem8432666 _146801 P t h1)). Qed.
Lemma lem8437479 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8436394) (@lem8436391 _146801 t P x h h1 h2 h3)). Qed.
Lemma lem8437480 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8436006 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8432401 _146801 y t h3)). Qed.
Lemma lem8437482 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437480 _146801 P x h y t h1 h2 h3) (@lem8432401 _146801 y t h3)). Qed.
Lemma lem8437483 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (EQ_MP (@lem8435849) (@lem8435846 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8437484 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8435693) (@lem8435690 _146801 P t x y h h1 h2 h3)). Qed.
Lemma lem8437485 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437484 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8431872 _146801 y h h3)). Qed.
Lemma lem8437487 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437485 _146801 P t x y h h1 h2 h3) (@lem8431872 _146801 y h h3)). Qed.
Lemma lem8437488 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8434910) (@lem8434907 _146801 t P x h h1 h2 h3)). Qed.
Lemma lem8437489 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8434480 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8431524 _146801 y t h3)). Qed.
Lemma lem8437491 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437489 _146801 P x h y t h1 h2 h3) (@lem8431524 _146801 y t h3)). Qed.
Lemma lem8437492 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8434324 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8431371 _146801 x t h4)). Qed.
Lemma lem8437494 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437492 _146801 P y h x t h1 h2 h3 h4) (@lem8431371 _146801 x t h4)). Qed.
Lemma lem8437495 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8434114) (@lem8434111 _146801 P t x y h h1 h2 h3)). Qed.
Lemma lem8437496 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437495 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8431079 _146801 y h h3)). Qed.
Lemma lem8437498 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437496 _146801 P t x y h h1 h2 h3) (@lem8431079 _146801 y h h3)). Qed.
Lemma lem8437499 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8433468) (@lem8433465 _146801 t P x h h1 h2 h3)). Qed.
Lemma lem8437500 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437466 _146801 x y h P t h1 h2) (fun h3 : False => @lem8430789 _146801 P t h1)). Qed.
Lemma lem8437501 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437500 _146801 x y h P t h1 h2) (@lem8430789 _146801 P t h1)). Qed.
Lemma lem8437502 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437469 _146801 x y h P t h1 h2) (fun h3 : False => @lem8430749 _146801 P t h1)). Qed.
Lemma lem8437503 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437502 _146801 x y h P t h1 h2) (@lem8430749 _146801 P t h1)). Qed.
Lemma lem8437504 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437472 _146801 x y h P t h1 h2) (fun h3 : False => @lem8430709 _146801 P t h1)). Qed.
Lemma lem8437505 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437504 _146801 x y h P t h1 h2) (@lem8430709 _146801 P t h1)). Qed.
Lemma lem8437506 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437478 _146801 x y h P t h1 h2) (fun h3 : False => @lem8430669 _146801 P t h1)). Qed.
Lemma lem8437507 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437506 _146801 x y h P t h1 h2) (@lem8430669 _146801 P t h1)). Qed.
Lemma lem8437508 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8436612 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8430501 _146801 x t h3)). Qed.
Lemma lem8437509 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437508 _146801 h P x t h1 h2 h3) (@lem8430501 _146801 x t h3)). Qed.
Lemma lem8437510 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437479 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8430443 _146801 x h h3)). Qed.
Lemma lem8437511 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437510 _146801 t P x h h1 h2 h3) (@lem8430443 _146801 x h h3)). Qed.
Lemma lem8437512 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437482 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8430371 _146801 x h h2)). Qed.
Lemma lem8437513 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437512 _146801 P x h y t h1 h2 h3) (@lem8430371 _146801 x h h2)). Qed.
Lemma lem8437514 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437513 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8430369 _146801 y t h3)). Qed.
Lemma lem8437515 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437514 _146801 P x h y t h1 h2 h3) (@lem8430369 _146801 y t h3)). Qed.
Lemma lem8437516 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437487 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8430287 _146801 x h h2)). Qed.
Lemma lem8437517 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437516 _146801 P t x y h h1 h2 h3) (@lem8430287 _146801 x h h2)). Qed.
Lemma lem8437518 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437517 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8430285 _146801 y h h3)). Qed.
Lemma lem8437519 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437518 _146801 P t x y h h1 h2 h3) (@lem8430285 _146801 y h h3)). Qed.
Lemma lem8437520 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8435109 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8430099 _146801 x t h3)). Qed.
Lemma lem8437521 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437520 _146801 h P x t h1 h2 h3) (@lem8430099 _146801 x t h3)). Qed.
Lemma lem8437522 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437488 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8430039 _146801 x h h3)). Qed.
Lemma lem8437523 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437522 _146801 t P x h h1 h2 h3) (@lem8430039 _146801 x h h3)). Qed.
Lemma lem8437524 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8434697 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8430007 _146801 x t h3)). Qed.
Lemma lem8437525 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437524 _146801 h P x y t h1 h2 h3 h4) (@lem8430007 _146801 x t h3)). Qed.
Lemma lem8437526 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 y t => @lem8437525 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8430005 _146801 y t h4)). Qed.
Lemma lem8437527 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437526 _146801 h P x y t h1 h2 h3 h4) (@lem8430005 _146801 y t h4)). Qed.
Lemma lem8437528 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437491 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8429957 _146801 x h h2)). Qed.
Lemma lem8437529 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437528 _146801 P x h y t h1 h2 h3) (@lem8429957 _146801 x h h2)). Qed.
Lemma lem8437530 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437529 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8429955 _146801 y t h3)). Qed.
Lemma lem8437531 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437530 _146801 P x h y t h1 h2 h3) (@lem8429955 _146801 y t h3)). Qed.
Lemma lem8437532 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8437494 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8429907 _146801 x t h4)). Qed.
Lemma lem8437533 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437532 _146801 P y h x t h1 h2 h3 h4) (@lem8429907 _146801 x t h4)). Qed.
Lemma lem8437534 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (y = h) = False.
Proof. exact (prop_ext (fun h5 : y = h => @lem8437533 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8429905 _146801 y h h3)). Qed.
Lemma lem8437535 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437534 _146801 P y h x t h1 h2 h3 h4) (@lem8429905 _146801 y h h3)). Qed.
Lemma lem8437536 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437498 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8429857 _146801 x h h2)). Qed.
Lemma lem8437537 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437536 _146801 P t x y h h1 h2 h3) (@lem8429857 _146801 x h h2)). Qed.
Lemma lem8437538 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437537 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8429855 _146801 y h h3)). Qed.
Lemma lem8437539 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437538 _146801 P t x y h h1 h2 h3) (@lem8429855 _146801 y h h3)). Qed.
Lemma lem8437540 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8433953 _146801 P t h1 h2) (fun h3 : False => @lem8429779 _146801 P t h1)). Qed.
Lemma lem8437541 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : False.
Proof. exact (EQ_MP (@lem8437540 _146801 P t h1 h2) (@lem8429779 _146801 P t h1)). Qed.
Lemma lem8437542 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8433625 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8429645 _146801 x t h3)). Qed.
Lemma lem8437543 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437542 _146801 h P x t h1 h2 h3) (@lem8429645 _146801 x t h3)). Qed.
Lemma lem8437544 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437499 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8429577 _146801 x h h3)). Qed.
Lemma lem8437545 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437544 _146801 t P x h h1 h2 h3) (@lem8429577 _146801 x h h3)). Qed.
Lemma lem8437546 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437501 _146801 x y h P t h1 h2) (fun h3 : False => @lem8429041 _146801 P t h1)). Qed.
Lemma lem8437547 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437546 _146801 x y h P t h1 h2) (@lem8429041 _146801 P t h1)). Qed.
Lemma lem8437548 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437503 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428957 _146801 P t h1)). Qed.
Lemma lem8437549 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437548 _146801 x y h P t h1 h2) (@lem8428957 _146801 P t h1)). Qed.
Lemma lem8437550 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437505 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428873 _146801 P t h1)). Qed.
Lemma lem8437551 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437550 _146801 x y h P t h1 h2) (@lem8428873 _146801 P t h1)). Qed.
Lemma lem8437552 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437507 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428789 _146801 P t h1)). Qed.
Lemma lem8437553 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437552 _146801 x y h P t h1 h2) (@lem8428789 _146801 P t h1)). Qed.
Lemma lem8437554 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437509 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8428529 _146801 x t h3)). Qed.
Lemma lem8437555 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437554 _146801 h P x t h1 h2 h3) (@lem8428529 _146801 x t h3)). Qed.
Lemma lem8437556 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437511 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8428413 _146801 x h h3)). Qed.
Lemma lem8437557 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437556 _146801 t P x h h1 h2 h3) (@lem8428413 _146801 x h h3)). Qed.
Lemma lem8437558 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437515 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8428209 _146801 x h h2)). Qed.
Lemma lem8437559 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437558 _146801 P x h y t h1 h2 h3) (@lem8428209 _146801 x h h2)). Qed.
Lemma lem8437560 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437559 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8428205 _146801 y t h3)). Qed.
Lemma lem8437561 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437560 _146801 P x h y t h1 h2 h3) (@lem8428205 _146801 y t h3)). Qed.
Lemma lem8437562 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437519 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8428033 _146801 x h h2)). Qed.
Lemma lem8437563 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437562 _146801 P t x y h h1 h2 h3) (@lem8428033 _146801 x h h2)). Qed.
Lemma lem8437564 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437563 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8428029 _146801 y h h3)). Qed.
Lemma lem8437565 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437564 _146801 P t x y h h1 h2 h3) (@lem8428029 _146801 y h h3)). Qed.
Lemma lem8437566 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437521 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8427709 _146801 x t h3)). Qed.
Lemma lem8437567 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437566 _146801 h P x t h1 h2 h3) (@lem8427709 _146801 x t h3)). Qed.
Lemma lem8437568 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437523 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8427589 _146801 x h h3)). Qed.
Lemma lem8437569 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437568 _146801 t P x h h1 h2 h3) (@lem8427589 _146801 x h h3)). Qed.
Lemma lem8437570 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8437527 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8427469 _146801 x t h3)). Qed.
Lemma lem8437571 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437570 _146801 h P x y t h1 h2 h3 h4) (@lem8427469 _146801 x t h3)). Qed.
Lemma lem8437572 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 y t => @lem8437571 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8427465 _146801 y t h4)). Qed.
Lemma lem8437573 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437572 _146801 h P x y t h1 h2 h3 h4) (@lem8427465 _146801 y t h4)). Qed.
Lemma lem8437574 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437531 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8427340 _146801 x h h2)). Qed.
Lemma lem8437575 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437574 _146801 P x h y t h1 h2 h3) (@lem8427340 _146801 x h h2)). Qed.
Lemma lem8437576 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437575 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8427336 _146801 y t h3)). Qed.
Lemma lem8437577 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437576 _146801 P x h y t h1 h2 h3) (@lem8427336 _146801 y t h3)). Qed.
Lemma lem8437578 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8437535 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8427211 _146801 x t h4)). Qed.
Lemma lem8437579 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437578 _146801 P y h x t h1 h2 h3 h4) (@lem8427211 _146801 x t h4)). Qed.
Lemma lem8437580 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (y = h) = False.
Proof. exact (prop_ext (fun h5 : y = h => @lem8437579 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8427207 _146801 y h h3)). Qed.
Lemma lem8437581 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437580 _146801 P y h x t h1 h2 h3 h4) (@lem8427207 _146801 y h h3)). Qed.
Lemma lem8437582 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437539 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8427082 _146801 x h h2)). Qed.
Lemma lem8437583 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437582 _146801 P t x y h h1 h2 h3) (@lem8427082 _146801 x h h2)). Qed.
Lemma lem8437584 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437583 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8427078 _146801 y h h3)). Qed.
Lemma lem8437585 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437584 _146801 P t x y h h1 h2 h3) (@lem8427078 _146801 y h h3)). Qed.
Lemma lem8437586 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437541 _146801 P t h1 h2) (fun h3 : False => @lem8426953 _146801 P t h1)). Qed.
Lemma lem8437587 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : False.
Proof. exact (EQ_MP (@lem8437586 _146801 P t h1 h2) (@lem8426953 _146801 P t h1)). Qed.
Lemma lem8437588 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437543 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8426635 _146801 x t h3)). Qed.
Lemma lem8437589 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437588 _146801 h P x t h1 h2 h3) (@lem8426635 _146801 x t h3)). Qed.
Lemma lem8437590 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437545 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8426474 _146801 x h h3)). Qed.
Lemma lem8437591 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437590 _146801 t P x h h1 h2 h3) (@lem8426474 _146801 x h h3)). Qed.
Lemma lem8437592 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437547 _146801 x y h P t h1 h2) (fun h3 : False => @lem8429041 _146801 P t h1)). Qed.
Lemma lem8437593 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437592 _146801 x y h P t h1 h2) (@lem8429041 _146801 P t h1)). Qed.
Lemma lem8437594 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437549 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428957 _146801 P t h1)). Qed.
Lemma lem8437595 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437594 _146801 x y h P t h1 h2) (@lem8428957 _146801 P t h1)). Qed.
Lemma lem8437596 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437551 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428873 _146801 P t h1)). Qed.
Lemma lem8437597 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437596 _146801 x y h P t h1 h2) (@lem8428873 _146801 P t h1)). Qed.
Lemma lem8437598 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437553 _146801 x y h P t h1 h2) (fun h3 : False => @lem8428789 _146801 P t h1)). Qed.
Lemma lem8437599 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (EQ_MP (@lem8437598 _146801 x y h P t h1 h2) (@lem8428789 _146801 P t h1)). Qed.
Lemma lem8437600 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437555 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8428529 _146801 x t h3)). Qed.
Lemma lem8437601 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437600 _146801 h P x t h1 h2 h3) (@lem8428529 _146801 x t h3)). Qed.
Lemma lem8437602 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437557 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8428413 _146801 x h h3)). Qed.
Lemma lem8437603 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437602 _146801 t P x h h1 h2 h3) (@lem8428413 _146801 x h h3)). Qed.
Lemma lem8437604 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437561 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8428209 _146801 x h h2)). Qed.
Lemma lem8437605 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437604 _146801 P x h y t h1 h2 h3) (@lem8428209 _146801 x h h2)). Qed.
Lemma lem8437606 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437605 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8428205 _146801 y t h3)). Qed.
Lemma lem8437607 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437606 _146801 P x h y t h1 h2 h3) (@lem8428205 _146801 y t h3)). Qed.
Lemma lem8437608 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437565 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8428033 _146801 x h h2)). Qed.
Lemma lem8437609 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437608 _146801 P t x y h h1 h2 h3) (@lem8428033 _146801 x h h2)). Qed.
Lemma lem8437610 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437609 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8428029 _146801 y h h3)). Qed.
Lemma lem8437611 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437610 _146801 P t x y h h1 h2 h3) (@lem8428029 _146801 y h h3)). Qed.
Lemma lem8437612 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437567 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8427709 _146801 x t h3)). Qed.
Lemma lem8437613 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437612 _146801 h P x t h1 h2 h3) (@lem8427709 _146801 x t h3)). Qed.
Lemma lem8437614 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437569 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8427589 _146801 x h h3)). Qed.
Lemma lem8437615 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437614 _146801 t P x h h1 h2 h3) (@lem8427589 _146801 x h h3)). Qed.
Lemma lem8437616 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8437573 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8427469 _146801 x t h3)). Qed.
Lemma lem8437617 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437616 _146801 h P x y t h1 h2 h3 h4) (@lem8427469 _146801 x t h3)). Qed.
Lemma lem8437618 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 y t => @lem8437617 _146801 h P x y t h1 h2 h3 h4) (fun h5 : False => @lem8427465 _146801 y t h4)). Qed.
Lemma lem8437619 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 x t) (h4 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437618 _146801 h P x y t h1 h2 h3 h4) (@lem8427465 _146801 y t h4)). Qed.
Lemma lem8437620 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437577 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8427340 _146801 x h h2)). Qed.
Lemma lem8437621 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437620 _146801 P x h y t h1 h2 h3) (@lem8427340 _146801 x h h2)). Qed.
Lemma lem8437622 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : (@List.In _146801 y t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 y t => @lem8437621 _146801 P x h y t h1 h2 h3) (fun h4 : False => @lem8427336 _146801 y t h3)). Qed.
Lemma lem8437623 {_146801 : Type'} (P : type1402 _146801) (x : _146801) (h : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : @List.In _146801 y t) : False.
Proof. exact (EQ_MP (@lem8437622 _146801 P x h y t h1 h2 h3) (@lem8427336 _146801 y t h3)). Qed.
Lemma lem8437624 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h5 : @List.In _146801 x t => @lem8437581 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8427211 _146801 x t h4)). Qed.
Lemma lem8437625 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437624 _146801 P y h x t h1 h2 h3 h4) (@lem8427211 _146801 x t h4)). Qed.
Lemma lem8437626 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : (y = h) = False.
Proof. exact (prop_ext (fun h5 : y = h => @lem8437625 _146801 P y h x t h1 h2 h3 h4) (fun h5 : False => @lem8427207 _146801 y h h3)). Qed.
Lemma lem8437627 {_146801 : Type'} (P : type1402 _146801) (y : _146801) (h : _146801) (x : _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) (h4 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437626 _146801 P y h x t h1 h2 h3 h4) (@lem8427207 _146801 y h h3)). Qed.
Lemma lem8437628 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437585 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8427082 _146801 x h h2)). Qed.
Lemma lem8437629 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437628 _146801 P t x y h h1 h2 h3) (@lem8427082 _146801 x h h2)). Qed.
Lemma lem8437630 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : (y = h) = False.
Proof. exact (prop_ext (fun h4 : y = h => @lem8437629 _146801 P t x y h h1 h2 h3) (fun h4 : False => @lem8427078 _146801 y h h3)). Qed.
Lemma lem8437631 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (x : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : x = h) (h3 : y = h) : False.
Proof. exact (EQ_MP (@lem8437630 _146801 P t x y h h1 h2 h3) (@lem8427078 _146801 y h h3)). Qed.
Lemma lem8437632 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : (term227 _146801 P t) = False.
Proof. exact (prop_ext (fun h3 : term227 _146801 P t => @lem8437587 _146801 P t h1 h2) (fun h3 : False => @lem8426953 _146801 P t h1)). Qed.
Lemma lem8437633 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term630 _146801 P t) : False.
Proof. exact (EQ_MP (@lem8437632 _146801 P t h1 h2) (@lem8426953 _146801 P t h1)). Qed.
Lemma lem8437634 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : (@List.In _146801 x t) = False.
Proof. exact (prop_ext (fun h4 : @List.In _146801 x t => @lem8437589 _146801 h P x t h1 h2 h3) (fun h4 : False => @lem8426635 _146801 x t h3)). Qed.
Lemma lem8437635 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (x : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term602 _146801 h t P x) (h3 : @List.In _146801 x t) : False.
Proof. exact (EQ_MP (@lem8437634 _146801 h P x t h1 h2 h3) (@lem8426635 _146801 x t h3)). Qed.
Lemma lem8437636 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : (x = h) = False.
Proof. exact (prop_ext (fun h4 : x = h => @lem8437591 _146801 t P x h h1 h2 h3) (fun h4 : False => @lem8426474 _146801 x h h3)). Qed.
Lemma lem8437637 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) (x : _146801) (h : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) (h3 : x = h) : False.
Proof. exact (EQ_MP (@lem8437636 _146801 t P x h h1 h2 h3) (@lem8426474 _146801 x h h3)). Qed.
Lemma lem8437638 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426305 _146801 x y h P t h2) (fun h0 : x = h => @lem8437595 _146801 x y h P t h1 h2) (fun h0 : @List.In _146801 x t => @lem8437593 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437639 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426305 _146801 x y h P t h2) (fun h0 : x = h => @lem8437599 _146801 x y h P t h1 h2) (fun h0 : @List.In _146801 x t => @lem8437597 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437640 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term596 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426307 _146801 x y h P t h2) (fun h0 : y = h => @lem8437639 _146801 x y h P t h1 h2) (fun h0 : @List.In _146801 y t => @lem8437638 _146801 x y h P t h1 h2)). Qed.
Lemma lem8437641 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) (h3 : term599 _146801 h x P t) : False.
Proof. exact (or_elim (@lem8426289 _146801 h x P t h3) (fun h0 : term597 _146801 t P h x => @lem8436837 _146801 t P h x h1 h0) (fun h0 : term227 _146801 P t => @lem8437054 _146801 h x x' y' x'' P t h1 h2)). Qed.
Lemma lem8437642 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) : False.
Proof. exact (or_elim (@lem8426291 _146801 h t P x h2) (fun h0 : x = h => @lem8437603 _146801 t P x h h1 h2 h0) (fun h0 : @List.In _146801 x t => @lem8437601 _146801 h P x t h1 h2 h0)). Qed.
Lemma lem8437643 {_146801 : Type'} (h : _146801) (x : _146801) (x' : _146801) (y' : _146801) (x'' : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term620 _146801 x' y' x'' P t) : False.
Proof. exact (or_elim (@lem8426286 _146801 h x P t h1) (fun h0 : term602 _146801 h t P x => @lem8437642 _146801 h t P x h1 h0) (fun h0 : term599 _146801 h x P t => @lem8437641 _146801 x' y' x'' h x P t h1 h2 h0)). Qed.
Lemma lem8437644 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term227 _146801 P t) (h2 : term620 _146801 x' y' x'' P t) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426044 _146801 x y h P t h3) (fun h0 : term612 _146801 h x P t => @lem8437643 _146801 h x x' y' x'' P t h0 h2) (fun h0 : term596 _146801 x y h P t => @lem8437640 _146801 x y h P t h1 h0)). Qed.
Lemma lem8437645 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (x'' : _146801) (y : _146801) (t : list _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') (h3 : @List.In _146801 y t) : False.
Proof. exact (or_elim (@lem8426275 _146801 x y h P t h1) (fun h0 : x = h => @lem8437607 _146801 P x h y t h1 h0 h3) (fun h0 : @List.In _146801 x t => @lem8436162 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8437646 {_146801 : Type'} (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (y : _146801) (h : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') (h3 : y = h) : False.
Proof. exact (or_elim (@lem8426275 _146801 x y h P t h1) (fun h0 : x = h => @lem8437611 _146801 P t x y h h1 h0 h3) (fun h0 : @List.In _146801 x t => @lem8437483 _146801 x y h t P x'' h1 h2)). Qed.
Lemma lem8437647 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term596 _146801 x y h P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (or_elim (@lem8426277 _146801 x y h P t h1) (fun h0 : y = h => @lem8437646 _146801 x t P x'' y h h1 h2 h0) (fun h0 : @List.In _146801 y t => @lem8437645 _146801 x h P x'' y t h1 h2 h0)). Qed.
Lemma lem8437648 {_146801 : Type'} (x'' : _146801) (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') (h3 : term599 _146801 h x P t) : False.
Proof. exact (or_elim (@lem8426259 _146801 h x P t h3) (fun h0 : term597 _146801 t P h x => @lem8435315 _146801 t P h x h1 h0) (fun h0 : term227 _146801 P t => @lem8435532 _146801 h x t P x'' h1 h2)). Qed.
Lemma lem8437649 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term612 _146801 h x P t) (h2 : term602 _146801 h t P x) : False.
Proof. exact (or_elim (@lem8426261 _146801 h t P x h2) (fun h0 : x = h => @lem8437615 _146801 t P x h h1 h2 h0) (fun h0 : @List.In _146801 x t => @lem8437613 _146801 h P x t h1 h2 h0)). Qed.
Lemma lem8437650 {_146801 : Type'} (h : _146801) (x : _146801) (t : list _146801) (P : type1402 _146801) (x'' : _146801) (h1 : term612 _146801 h x P t) (h2 : term615 _146801 t P x'') : False.
Proof. exact (or_elim (@lem8426256 _146801 h x P t h1) (fun h0 : term602 _146801 h t P x => @lem8437649 _146801 h t P x h1 h0) (fun h0 : term599 _146801 h x P t => @lem8437648 _146801 x'' h x P t h1 h2 h0)). Qed.
Lemma lem8437651 {_146801 : Type'} (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term615 _146801 t P x'') (h2 : term566 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426044 _146801 x y h P t h2) (fun h0 : term612 _146801 h x P t => @lem8437650 _146801 h x t P x'' h0 h1) (fun h0 : term596 _146801 x y h P t => @lem8437647 _146801 x y h t P x'' h0 h1)). Qed.
Lemma lem8437652 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term620 _146801 x' y' x'' P t) (h2 : term566 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426244 _146801 x' y' x'' P t h1) (fun h0 : term615 _146801 t P x'' => @lem8437651 _146801 x'' x y h P t h0 h2) (fun h0 : term227 _146801 P t => @lem8437644 _146801 x' y' x'' x y h P t h0 h1 h2)). Qed.
Lemma lem8437653 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (y : _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term596 _146801 x y h P t) (h3 : @List.In _146801 y t) : False.
Proof. exact (or_elim (@lem8426235 _146801 x y h P t h2) (fun h0 : x = h => @lem8437623 _146801 P x h y t h2 h0 h3) (fun h0 : @List.In _146801 x t => @lem8437619 _146801 h P x y t h1 h2 h0 h3)). Qed.
Lemma lem8437654 {_146801 : Type'} (x : _146801) (P : type1402 _146801) (t : list _146801) (y : _146801) (h : _146801) (h1 : term74 _146801 P) (h2 : term596 _146801 x y h P t) (h3 : y = h) : False.
Proof. exact (or_elim (@lem8426235 _146801 x y h P t h2) (fun h0 : x = h => @lem8437631 _146801 P t x y h h2 h0 h3) (fun h0 : @List.In _146801 x t => @lem8437627 _146801 P y h x t h1 h2 h3 h0)). Qed.
Lemma lem8437655 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term630 _146801 P t) (h3 : term596 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426237 _146801 x y h P t h3) (fun h0 : y = h => @lem8437654 _146801 x P t y h h1 h3 h0) (fun h0 : @List.In _146801 y t => @lem8437653 _146801 x h P y t h2 h3 h0)). Qed.
Lemma lem8437656 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term612 _146801 h x P t) (h3 : term599 _146801 h x P t) : False.
Proof. exact (or_elim (@lem8426219 _146801 h x P t h3) (fun h0 : term597 _146801 t P h x => @lem8433850 _146801 t P h x h2 h0) (fun h0 : term227 _146801 P t => @lem8437633 _146801 P t h0 h1)). Qed.
Lemma lem8437657 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (x : _146801) (h1 : term630 _146801 P t) (h2 : term612 _146801 h x P t) (h3 : term602 _146801 h t P x) : False.
Proof. exact (or_elim (@lem8426221 _146801 h t P x h3) (fun h0 : x = h => @lem8437637 _146801 t P x h h2 h3 h0) (fun h0 : @List.In _146801 x t => @lem8437635 _146801 h P x t h1 h3 h0)). Qed.
Lemma lem8437658 {_146801 : Type'} (h : _146801) (x : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term630 _146801 P t) (h2 : term612 _146801 h x P t) : False.
Proof. exact (or_elim (@lem8426216 _146801 h x P t h2) (fun h0 : term602 _146801 h t P x => @lem8437657 _146801 h t P x h1 h2 h0) (fun h0 : term599 _146801 h x P t => @lem8437656 _146801 h x P t h1 h2 h0)). Qed.
Lemma lem8437659 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term630 _146801 P t) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426044 _146801 x y h P t h3) (fun h0 : term612 _146801 h x P t => @lem8437658 _146801 h x P t h2 h0) (fun h0 : term596 _146801 x y h P t => @lem8437655 _146801 x y h P t h1 h2 h0)). Qed.
Lemma lem8437660 {_146801 : Type'} (x' : _146801) (y' : _146801) (x'' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term365 _146801 x' y' x'' P t) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (or_elim (@lem8426207 _146801 x' y' x'' P t h2) (fun h0 : term630 _146801 P t => @lem8437659 _146801 x y h P t h1 h0 h3) (fun h0 : term620 _146801 x' y' x'' P t => @lem8437652 _146801 x' y' x'' x y h P t h0 h3)). Qed.
Lemma lem8437661 {_146801 : Type'} (x' : _146801) (y' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term368 _146801 x' y' P t) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (ex_elim (@lem8425717 _146801 x' y' P t h2) (fun x'' : _146801 => fun h0 : term367 _146801 x' y' P t x'' => @lem8437660 _146801 x' y' x'' x y h P t h1 h0 h3)). Qed.
Lemma lem8437662 {_146801 : Type'} (x' : _146801) (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term370 _146801 x' P t) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (ex_elim (@lem8425716 _146801 x' P t h2) (fun y' : _146801 => fun h0 : term369 _146801 x' P t y' => @lem8437661 _146801 x' y' x y h P t h1 h0 h3)). Qed.
Lemma lem8437663 {_146801 : Type'} (x : _146801) (y : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) (h3 : term566 _146801 x y h P t) : False.
Proof. exact (ex_elim (@lem8424948 _146801 P t h2) (fun x' : _146801 => fun h0 : term371 _146801 P t x' => @lem8437662 _146801 x' x y h P t h1 h0 h3)). Qed.
Lemma lem8437664 {_146801 : Type'} (x : _146801) (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term569 _146801 x h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : False.
Proof. exact (ex_elim (@lem8425714 _146801 x h P t h2) (fun y : _146801 => fun h0 : term568 _146801 x h P t y => @lem8437663 _146801 x y h P t h1 h3 h0)). Qed.
Lemma lem8437665 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : False.
Proof. exact (ex_elim (@lem8425713 _146801 h P t h2) (fun x : _146801 => fun h0 : term570 _146801 h P t x => @lem8437664 _146801 x h P t h1 h0 h3)). Qed.
Lemma lem8437666 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : (term155 _146801 h P t) = False.
Proof. exact (prop_ext (fun h4 : term155 _146801 h P t => @lem8437665 _146801 h P t h1 h2 h3) (fun h4 : False => @lem8424288 _146801 h P t h2)). Qed.
Lemma lem8437667 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : False.
Proof. exact (EQ_MP (@lem8437666 _146801 h P t h1 h2 h3) (@lem8424288 _146801 h P t h2)). Qed.
Lemma lem8437668 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : term154 _146801 h P t.
Proof. exact (fun h0 : term155 _146801 h P t => @lem8437667 _146801 h P t h1 h0 h2). Qed.
Lemma lem8437669 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : (term135 _146801 h t P) = (term152 _146801 h P t).
Proof. exact (EQ_MP (@lem8424287 _146801 h P t) (@lem8437668 _146801 h P t h1 h2)). Qed.
Lemma lem8437670 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term163 _146801 h P t.
Proof. exact (fun h0 : (term41 _146801 t P) = (term62 _146801 P t) => @lem8437669 _146801 h P t h1 h0). Qed.
Lemma lem8437671 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term164 _146801 h P t.
Proof. exact (fun h0 : term74 _146801 P => @lem8437670 _146801 h t P h0). Qed.
Lemma lem8437676 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : term168 _146801 P t.
Proof. exact (fun h : _146801 => @lem8437671 _146801 h P t). Qed.
Lemma lem8437681 {_146801 : Type'} (t : list _146801) : term172 _146801 t.
Proof. exact (fun P : type1402 _146801 => @lem8437676 _146801 P t). Qed.
Lemma lem8437686 {_146801 : Type'} : term176 _146801.
Proof. exact (fun t : list _146801 => @lem8437681 _146801 t). Qed.
Lemma lem8437687 {_146801 : Type'} : term175 _146801.
Proof. exact (EQ_MP (@lem8424281 _146801) (@lem8437686 _146801)). Qed.
Lemma lem8437688 {_146801 : Type'} (t : list _146801) : term797 _146801 t.
Proof. exact (@lem8437687 _146801 t). Qed.
Lemma lem8437689 {_146801 : Type'} (t : list _146801) : (term797 _146801 t) = (term171 _146801 t).
Proof. exact (eq_refl (term797 _146801 t)). Qed.
Lemma lem8437690 {_146801 : Type'} (t : list _146801) : term171 _146801 t.
Proof. exact (EQ_MP (@lem8437689 _146801 t) (@lem8437688 _146801 t)). Qed.
Lemma lem8437691 {_146801 : Type'} (t : list _146801) (P : type1402 _146801) : term798 _146801 t P.
Proof. exact (@lem8437690 _146801 t P). Qed.
Lemma lem8437692 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : (term798 _146801 t P) = (term167 _146801 P t).
Proof. exact (eq_refl (term798 _146801 t P)). Qed.
Lemma lem8437693 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) : term167 _146801 P t.
Proof. exact (EQ_MP (@lem8437692 _146801 P t) (@lem8437691 _146801 t P)). Qed.
Lemma lem8437694 {_146801 : Type'} (P : type1402 _146801) (t : list _146801) (h : _146801) : term799 _146801 P t h.
Proof. exact (@lem8437693 _146801 P t h). Qed.
Lemma lem8437695 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : (term799 _146801 P t h) = (term156 _146801 h P t).
Proof. exact (eq_refl (term799 _146801 P t h)). Qed.
Lemma lem8437696 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term156 _146801 h P t.
Proof. exact (EQ_MP (@lem8437695 _146801 h P t) (@lem8437694 _146801 P t h)). Qed.
Lemma lem8437698 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) : term156 _146801 h P t.
Proof. exact (@lem8423944 _146801 h P t (@lem8437696 _146801 h P t)). Qed.
Lemma lem8437699 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term162 _146801 h P t.
Proof. exact (@lem8437698 _146801 h P t (@lem8423680 _146801 P h1)). Qed.
Lemma lem8437700 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : term154 _146801 h P t.
Proof. exact (@lem8437699 _146801 h t P h1 (@lem8423708 _146801 P t h2)). Qed.
Lemma lem8437701 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : False.
Proof. exact (@lem8437700 _146801 h P t h1 h3 (@lem8423928 _146801 h P t h2)). Qed.
Lemma lem8437702 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : (term155 _146801 h P t) = False.
Proof. exact (prop_ext (fun h4 : term155 _146801 h P t => @lem8437701 _146801 h P t h1 h2 h3) (fun h4 : False => @lem8423928 _146801 h P t h2)). Qed.
Lemma lem8437703 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : term155 _146801 h P t) (h3 : (term41 _146801 t P) = (term62 _146801 P t)) : False.
Proof. exact (EQ_MP (@lem8437702 _146801 h P t h1 h2 h3) (@lem8423928 _146801 h P t h2)). Qed.
Lemma lem8437704 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : term154 _146801 h P t.
Proof. exact (fun h0 : term155 _146801 h P t => @lem8437703 _146801 h P t h1 h0 h2). Qed.
Lemma lem8437705 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : (term135 _146801 h t P) = (term152 _146801 h P t).
Proof. exact (EQ_MP (@lem8423927 _146801 h P t) (@lem8437704 _146801 h P t h1 h2)). Qed.
Lemma lem8437706 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (t : list _146801) (h1 : term74 _146801 P) (h2 : (term41 _146801 t P) = (term62 _146801 P t)) : (term86 _146801 h t P) = (term87 _146801 P h t).
Proof. exact (EQ_MP (@lem8423923 _146801 P h t) (@lem8437705 _146801 h P t h1 h2)). Qed.
Lemma lem8437707 {_146801 : Type'} (h : _146801) (t : list _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term89 _146801 P h t.
Proof. exact (fun h0 : (term41 _146801 t P) = (term62 _146801 P t) => @lem8437706 _146801 h P t h1 h0). Qed.
Lemma lem8437712 {_146801 : Type'} (h : _146801) (P : type1402 _146801) (h1 : term74 _146801 P) : term93 _146801 P h.
Proof. exact (fun t : list _146801 => @lem8437707 _146801 h t P h1). Qed.
Lemma lem8437717 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term97 _146801 P.
Proof. exact (fun h : _146801 => @lem8437712 _146801 h P h1). Qed.
Lemma lem8437718 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term99 _146801 P.
Proof. exact (conj (@lem8423807 _146801 P) (@lem8437717 _146801 P h1)). Qed.
Lemma lem8437719 {_146801 : Type'} (P : type1402 _146801) (h1 : term74 _146801 P) : term66 _146801 P.
Proof. exact (@lem8423707 _146801 P (@lem8437718 _146801 P h1)). Qed.
Lemma lem8437720 {_146801 : Type'} (P : type1402 _146801) : term69 _146801 P.
Proof. exact (fun h0 : term74 _146801 P => @lem8437719 _146801 P h0). Qed.
Lemma lem8437725 {_146801 : Type'} : term73 _146801.
Proof. exact (fun P : type1402 _146801 => @lem8437720 _146801 P). Qed.
Lemma lem8437726 {_146801 : Type'} : term72 _146801.
Proof. exact (EQ_MP (@lem8423679 _146801) (@lem8437725 _146801)). Qed.
Lemma lem8437727 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : term800 _5106 _5107 P.
Proof. exact (@lem49909 _5106 _5107 P). Qed.
Lemma lem8437728 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term800 _5106 _5107 P) = ((term801 _5106 _5107 P) = (term802 _5106 _5107 P)).
Proof. exact (eq_refl (term800 _5106 _5107 P)). Qed.
Lemma lem8437730 {A B : Type'} (f : A -> B) : term803 A B f.
Proof. exact (@lem9220 A B f). Qed.
Lemma lem8437731 {A B : Type'} (f : A -> B) : (term803 A B f) = (term804 A B f).
Proof. exact (eq_refl (term803 A B f)). Qed.
Lemma lem8437732 {A B : Type'} (f : A -> B) : term804 A B f.
Proof. exact (EQ_MP (@lem8437731 A B f) (@lem8437730 A B f)). Qed.
Lemma lem8437733 {A B : Type'} (f : A -> B) (g : A -> B) : term805 A B f g.
Proof. exact (@lem8437732 A B f g). Qed.
Lemma lem8437734 {A B : Type'} (f : A -> B) (g : A -> B) : (term805 A B f g) = ((f = g) = (term806 A B f g)).
Proof. exact (eq_refl (term805 A B f g)). Qed.
Lemma lem8437739 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term806 A B f g).
Proof. exact (EQ_MP (@lem8437734 A B f g) (@lem8437733 A B f g)). Qed.
Lemma lem8437740 {_146813 _146820 _146821 : Type'} (f : type1228 _146813 _146820 _146821) (g : type1228 _146813 _146820 _146821) : (f = g) = (term807 _146813 _146820 _146821 f g).
Proof. exact (@lem8437739 (prod _146821 _146820) _146813 f g). Qed.
Lemma lem8437741 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : ((term808 _146813 _146820 _146821 P) = (term809 _146813 _146820 _146821 P)) = (term810 _146813 _146820 _146821 P).
Proof. exact (@lem8437740 _146813 _146820 _146821 (term808 _146813 _146820 _146821 P) (term809 _146813 _146820 _146821 P)). Qed.
Lemma lem8437747 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term801 _5106 _5107 P) = (term802 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8437728 _5106 _5107 P) (@lem8437727 _5106 _5107 P)). Qed.
Lemma lem8437748 {_146820 _146821 : Type'} (P : type1223 _146820 _146821) : (term801 _146820 _146821 P) = (term802 _146820 _146821 P).
Proof. exact (@lem8437747 _146820 _146821 P). Qed.
Lemma lem8437749 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term811 _146813 _146820 _146821 P) = (term812 _146813 _146820 _146821 P).
Proof. exact (@lem8437748 _146820 _146821 (term813 _146813 _146820 _146821 P)). Qed.
Lemma lem8437750 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (x : prod _146821 _146820) : (term814 _146813 _146820 _146821 P x) = ((term815 _146813 _146820 _146821 P x) = (term816 _146813 _146820 _146821 P x)).
Proof. exact (eq_refl (term814 _146813 _146820 _146821 P x)). Qed.
Lemma lem8437751 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term817 _146813 _146820 _146821 P) = (term813 _146813 _146820 _146821 P).
Proof. exact (fun_ext (fun x : prod _146821 _146820 => @lem8437750 _146813 _146820 _146821 P x)). Qed.
Lemma lem8437752 {_146820 _146821 : Type'} : (@all (prod _146821 _146820)) = (@all (prod _146821 _146820)).
Proof. exact (eq_refl (@all (prod _146821 _146820))). Qed.
Lemma lem8437753 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term811 _146813 _146820 _146821 P) = (term810 _146813 _146820 _146821 P).
Proof. exact (MK_COMB (@lem8437752 _146820 _146821) (@lem8437751 _146813 _146820 _146821 P)). Qed.
Lemma lem8437754 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8437755 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term818 _146813 _146820 _146821 P) = (term819 _146813 _146820 _146821 P).
Proof. exact (MK_COMB (@lem8437754) (@lem8437753 _146813 _146820 _146821 P)). Qed.
Lemma lem8437756 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : (term820 _146813 _146820 _146821 P p1 p2) = ((term821 _146813 _146820 _146821 P p1 p2) = (term822 _146813 _146820 _146821 P p1 p2)).
Proof. exact (eq_refl (term820 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437757 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) : (term823 _146813 _146820 _146821 P p1) = (term824 _146813 _146820 _146821 P p1).
Proof. exact (fun_ext (fun p2 : _146820 => @lem8437756 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437758 {_146820 : Type'} : (@all _146820) = (@all _146820).
Proof. exact (eq_refl (@all _146820)). Qed.
Lemma lem8437759 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) : (term825 _146813 _146820 _146821 P p1) = (term826 _146813 _146820 _146821 P p1).
Proof. exact (MK_COMB (@lem8437758 _146820) (@lem8437757 _146813 _146820 _146821 P p1)). Qed.
Lemma lem8437760 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term827 _146813 _146820 _146821 P) = (term828 _146813 _146820 _146821 P).
Proof. exact (fun_ext (fun p1 : _146821 => @lem8437759 _146813 _146820 _146821 P p1)). Qed.
Lemma lem8437761 {_146821 : Type'} : (@all _146821) = (@all _146821).
Proof. exact (eq_refl (@all _146821)). Qed.
Lemma lem8437762 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term812 _146813 _146820 _146821 P) = (term829 _146813 _146820 _146821 P).
Proof. exact (MK_COMB (@lem8437761 _146821) (@lem8437760 _146813 _146820 _146821 P)). Qed.
Lemma lem8437763 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : ((term811 _146813 _146820 _146821 P) = (term812 _146813 _146820 _146821 P)) = ((term810 _146813 _146820 _146821 P) = (term829 _146813 _146820 _146821 P)).
Proof. exact (MK_COMB (@lem8437755 _146813 _146820 _146821 P) (@lem8437762 _146813 _146820 _146821 P)). Qed.
Lemma lem8437764 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term810 _146813 _146820 _146821 P) = (term829 _146813 _146820 _146821 P).
Proof. exact (EQ_MP (@lem8437763 _146813 _146820 _146821 P) (@lem8437749 _146813 _146820 _146821 P)). Qed.
Lemma lem8437771 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : ((term808 _146813 _146820 _146821 P) = (term809 _146813 _146820 _146821 P)) = (term829 _146813 _146820 _146821 P).
Proof. exact (TRANS (@lem8437741 _146813 _146820 _146821 P) (@lem8437764 _146813 _146820 _146821 P)). Qed.
Lemma lem8437783 {A B : Type'} (f : A -> B) (y : A) : (term47 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8437784 {_146813 _146820 _146821 : Type'} (f : type1228 _146813 _146820 _146821) (y : prod _146821 _146820) : (term815 _146813 _146820 _146821 f y) = (f y).
Proof. exact (@lem8437783 (prod _146821 _146820) _146813 f y). Qed.
Lemma lem8437785 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : (term821 _146813 _146820 _146821 P p1 p2) = (term830 _146813 _146820 _146821 P p1 p2).
Proof. exact (@lem8437784 _146813 _146820 _146821 P (@pair _146821 _146820 p1 p2)). Qed.
Lemma lem8437786 {_146813 : Type'} : (@eq _146813) = (@eq _146813).
Proof. exact (eq_refl (@eq _146813)). Qed.
Lemma lem8437787 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : (term831 _146813 _146820 _146821 P p1 p2) = (term832 _146813 _146820 _146821 P p1 p2).
Proof. exact (MK_COMB (@lem8437786 _146813) (@lem8437785 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437788 {_146820 _146821 : Type'} (a0 : _146821) (a1 : _146820) : a0 = (term833 _146820 _146821 a0 a1).
Proof. exact (@lem51128 _146821 _146820 a0 a1). Qed.
Lemma lem8437789 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : a = (term833 _146820 _146821 a b).
Proof. exact (@lem8437788 _146820 _146821 a b). Qed.
Lemma lem8437790 {_146820 _146821 : Type'} (a0 : _146821) (a1 : _146820) : a1 = (term834 _146820 _146821 a0 a1).
Proof. exact (@lem51159 _146821 _146820 a0 a1). Qed.
Lemma lem8437791 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : b = (term834 _146820 _146821 a b).
Proof. exact (@lem8437790 _146820 _146821 a b). Qed.
Lemma lem8437792 {_146821 : Type'} (a : _146821) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8437793 {_146821 : Type'} : (term835 _146821) = (term835 _146821).
Proof. exact (eq_refl (term835 _146821)). Qed.
Lemma lem8437794 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term836 _146821 a) = (term837 _146820 _146821 a b).
Proof. exact (MK_COMB (@lem8437793 _146821) (@lem8437789 _146820 _146821 a b)). Qed.
Lemma lem8437795 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term837 _146820 _146821 a b) = (term833 _146820 _146821 a b).
Proof. exact (eq_refl (term837 _146820 _146821 a b)). Qed.
Lemma lem8437796 {_146821 : Type'} (a : _146821) : (term838 _146821 a) = (term838 _146821 a).
Proof. exact (eq_refl (term838 _146821 a)). Qed.
Lemma lem8437797 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146821 a) = (term837 _146820 _146821 a b)) = ((term836 _146821 a) = (term833 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437796 _146821 a) (@lem8437795 _146820 _146821 a b)). Qed.
Lemma lem8437798 {_146821 : Type'} (a : _146821) : (term836 _146821 a) = a.
Proof. exact (eq_refl (term836 _146821 a)). Qed.
Lemma lem8437799 {_146821 : Type'} : (@eq _146821) = (@eq _146821).
Proof. exact (eq_refl (@eq _146821)). Qed.
Lemma lem8437800 {_146821 : Type'} (a : _146821) : (term838 _146821 a) = (@eq _146821 a).
Proof. exact (MK_COMB (@lem8437799 _146821) (@lem8437798 _146821 a)). Qed.
Lemma lem8437801 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term833 _146820 _146821 a b) = (term833 _146820 _146821 a b).
Proof. exact (eq_refl (term833 _146820 _146821 a b)). Qed.
Lemma lem8437802 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146821 a) = (term833 _146820 _146821 a b)) = (a = (term833 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437800 _146821 a) (@lem8437801 _146820 _146821 a b)). Qed.
Lemma lem8437803 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146821 a) = (term837 _146820 _146821 a b)) = (a = (term833 _146820 _146821 a b)).
Proof. exact (TRANS (@lem8437797 _146820 _146821 a b) (@lem8437802 _146820 _146821 a b)). Qed.
Lemma lem8437804 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : a = (term833 _146820 _146821 a b).
Proof. exact (EQ_MP (@lem8437803 _146820 _146821 a b) (@lem8437794 _146820 _146821 a b)). Qed.
Lemma lem8437805 {_146821 : Type'} (a : _146821) : (@eq _146821 a) = (@eq _146821 a).
Proof. exact (eq_refl (@eq _146821 a)). Qed.
Lemma lem8437806 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (a = a) = (a = (term833 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437805 _146821 a) (@lem8437804 _146820 _146821 a b)). Qed.
Lemma lem8437807 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : a = (term833 _146820 _146821 a b).
Proof. exact (EQ_MP (@lem8437806 _146820 _146821 a b) (@lem8437792 _146821 a)). Qed.
Lemma lem8437808 {_146820 : Type'} (b : _146820) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem8437809 {_146820 : Type'} : (term835 _146820) = (term835 _146820).
Proof. exact (eq_refl (term835 _146820)). Qed.
Lemma lem8437810 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term836 _146820 b) = (term839 _146820 _146821 a b).
Proof. exact (MK_COMB (@lem8437809 _146820) (@lem8437791 _146820 _146821 a b)). Qed.
Lemma lem8437811 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term839 _146820 _146821 a b) = (term834 _146820 _146821 a b).
Proof. exact (eq_refl (term839 _146820 _146821 a b)). Qed.
Lemma lem8437812 {_146820 : Type'} (b : _146820) : (term838 _146820 b) = (term838 _146820 b).
Proof. exact (eq_refl (term838 _146820 b)). Qed.
Lemma lem8437813 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146820 b) = (term839 _146820 _146821 a b)) = ((term836 _146820 b) = (term834 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437812 _146820 b) (@lem8437811 _146820 _146821 a b)). Qed.
Lemma lem8437814 {_146820 : Type'} (b : _146820) : (term836 _146820 b) = b.
Proof. exact (eq_refl (term836 _146820 b)). Qed.
Lemma lem8437815 {_146820 : Type'} : (@eq _146820) = (@eq _146820).
Proof. exact (eq_refl (@eq _146820)). Qed.
Lemma lem8437816 {_146820 : Type'} (b : _146820) : (term838 _146820 b) = (@eq _146820 b).
Proof. exact (MK_COMB (@lem8437815 _146820) (@lem8437814 _146820 b)). Qed.
Lemma lem8437817 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (term834 _146820 _146821 a b) = (term834 _146820 _146821 a b).
Proof. exact (eq_refl (term834 _146820 _146821 a b)). Qed.
Lemma lem8437818 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146820 b) = (term834 _146820 _146821 a b)) = (b = (term834 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437816 _146820 b) (@lem8437817 _146820 _146821 a b)). Qed.
Lemma lem8437819 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : ((term836 _146820 b) = (term839 _146820 _146821 a b)) = (b = (term834 _146820 _146821 a b)).
Proof. exact (TRANS (@lem8437813 _146820 _146821 a b) (@lem8437818 _146820 _146821 a b)). Qed.
Lemma lem8437820 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : b = (term834 _146820 _146821 a b).
Proof. exact (EQ_MP (@lem8437819 _146820 _146821 a b) (@lem8437810 _146820 _146821 a b)). Qed.
Lemma lem8437821 {_146820 : Type'} (b : _146820) : (@eq _146820 b) = (@eq _146820 b).
Proof. exact (eq_refl (@eq _146820 b)). Qed.
Lemma lem8437822 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : (b = b) = (b = (term834 _146820 _146821 a b)).
Proof. exact (MK_COMB (@lem8437821 _146820 b) (@lem8437820 _146820 _146821 a b)). Qed.
Lemma lem8437823 {_146820 _146821 : Type'} (a : _146821) (b : _146820) : b = (term834 _146820 _146821 a b).
Proof. exact (EQ_MP (@lem8437822 _146820 _146821 a b) (@lem8437808 _146820 b)). Qed.
Lemma lem8437824 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term840 _146813 _146820 _146821 P) = (term840 _146813 _146820 _146821 P).
Proof. exact (eq_refl (term840 _146813 _146820 _146821 P)). Qed.
Lemma lem8437825 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term841 _146813 _146820 _146821 P a) = (term842 _146813 _146820 _146821 P a b).
Proof. exact (MK_COMB (@lem8437824 _146813 _146820 _146821 P) (@lem8437807 _146820 _146821 a b)). Qed.
Lemma lem8437826 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term842 _146813 _146820 _146821 P a b) = (term843 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term842 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437827 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : (term844 _146813 _146820 _146821 P a) = (term844 _146813 _146820 _146821 P a).
Proof. exact (eq_refl (term844 _146813 _146820 _146821 P a)). Qed.
Lemma lem8437828 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term841 _146813 _146820 _146821 P a) = (term842 _146813 _146820 _146821 P a b)) = ((term841 _146813 _146820 _146821 P a) = (term843 _146813 _146820 _146821 P a b)).
Proof. exact (MK_COMB (@lem8437827 _146813 _146820 _146821 P a) (@lem8437826 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437829 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : (term841 _146813 _146820 _146821 P a) = (term845 _146813 _146820 _146821 P a).
Proof. exact (eq_refl (term841 _146813 _146820 _146821 P a)). Qed.
Lemma lem8437830 {_146813 _146820 : Type'} : (@eq (_146820 -> _146813)) = (@eq (_146820 -> _146813)).
Proof. exact (eq_refl (@eq (_146820 -> _146813))). Qed.
Lemma lem8437831 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : (term844 _146813 _146820 _146821 P a) = (term846 _146813 _146820 _146821 P a).
Proof. exact (MK_COMB (@lem8437830 _146813 _146820) (@lem8437829 _146813 _146820 _146821 P a)). Qed.
Lemma lem8437832 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term843 _146813 _146820 _146821 P a b) = (term843 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term843 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437833 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term841 _146813 _146820 _146821 P a) = (term843 _146813 _146820 _146821 P a b)) = ((term845 _146813 _146820 _146821 P a) = (term843 _146813 _146820 _146821 P a b)).
Proof. exact (MK_COMB (@lem8437831 _146813 _146820 _146821 P a) (@lem8437832 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437834 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term841 _146813 _146820 _146821 P a) = (term842 _146813 _146820 _146821 P a b)) = ((term845 _146813 _146820 _146821 P a) = (term843 _146813 _146820 _146821 P a b)).
Proof. exact (TRANS (@lem8437828 _146813 _146820 _146821 P a b) (@lem8437833 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437835 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term845 _146813 _146820 _146821 P a) = (term843 _146813 _146820 _146821 P a b).
Proof. exact (EQ_MP (@lem8437834 _146813 _146820 _146821 P a b) (@lem8437825 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437836 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term847 _146813 _146820 _146821 P a b) = (term848 _146813 _146820 _146821 P a b).
Proof. exact (MK_COMB (@lem8437835 _146813 _146820 _146821 P a b) (@lem8437823 _146820 _146821 a b)). Qed.
Lemma lem8437837 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term848 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term848 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437838 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term850 _146813 _146820 _146821 P a b) = (term850 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term850 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437839 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term847 _146813 _146820 _146821 P a b) = (term848 _146813 _146820 _146821 P a b)) = ((term847 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b)).
Proof. exact (MK_COMB (@lem8437838 _146813 _146820 _146821 P a b) (@lem8437837 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437840 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term847 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term847 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437841 {_146813 : Type'} : (@eq _146813) = (@eq _146813).
Proof. exact (eq_refl (@eq _146813)). Qed.
Lemma lem8437842 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term850 _146813 _146820 _146821 P a b) = (term832 _146813 _146820 _146821 P a b).
Proof. exact (MK_COMB (@lem8437841 _146813) (@lem8437840 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437843 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term849 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term849 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437844 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term847 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b)) = ((term830 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b)).
Proof. exact (MK_COMB (@lem8437842 _146813 _146820 _146821 P a b) (@lem8437843 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437845 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term847 _146813 _146820 _146821 P a b) = (term848 _146813 _146820 _146821 P a b)) = ((term830 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b)).
Proof. exact (TRANS (@lem8437839 _146813 _146820 _146821 P a b) (@lem8437844 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437846 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term830 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b).
Proof. exact (EQ_MP (@lem8437845 _146813 _146820 _146821 P a b) (@lem8437836 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437847 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term849 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b).
Proof. exact (SYM (@lem8437846 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437848 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term851 _146813 _146820 _146821 P a b) = (term849 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term851 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437849 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term851 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b).
Proof. exact (TRANS (@lem8437848 _146813 _146820 _146821 P a b) (@lem8437847 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437850 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : term852 _146813 _146820 _146821 P a.
Proof. exact (fun b : _146820 => @lem8437849 _146813 _146820 _146821 P a b). Qed.
Lemma lem8437851 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term853 _146813 _146820 _146821 P.
Proof. exact (fun a : _146821 => @lem8437850 _146813 _146820 _146821 P a). Qed.
Lemma lem8437852 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term854 _146813 _146820 _146821 P.
Proof. exact (ex_intro (term855 _146813 _146820 _146821 P) (term856 _146813 _146820 _146821 P) (@lem8437851 _146813 _146820 _146821 P)). Qed.
Lemma lem8437854 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8437855 {_146813 : Type'} (a : _146813) (b : _146813) : (a = b) = (@GEQ _146813 a b).
Proof. exact (@lem8437854 _146813 a b). Qed.
Lemma lem8437856 {_146813 _146820 _146821 : Type'} (_116913 : type1228 _146813 _146820 _146821) (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : ((term830 _146813 _146820 _146821 _116913 a b) = (term830 _146813 _146820 _146821 P a b)) = (term857 _146813 _146820 _146821 _116913 P a b).
Proof. exact (@lem8437855 _146813 (term830 _146813 _146820 _146821 _116913 a b) (term830 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437857 {_146813 _146820 _146821 : Type'} (_116913 : type1228 _146813 _146820 _146821) (P : type1228 _146813 _146820 _146821) (a : _146821) : (term858 _146813 _146820 _146821 _116913 P a) = (term859 _146813 _146820 _146821 _116913 P a).
Proof. exact (fun_ext (fun b : _146820 => @lem8437856 _146813 _146820 _146821 _116913 P a b)). Qed.
Lemma lem8437858 {_146820 : Type'} : (@all _146820) = (@all _146820).
Proof. exact (eq_refl (@all _146820)). Qed.
Lemma lem8437859 {_146813 _146820 _146821 : Type'} (_116913 : type1228 _146813 _146820 _146821) (P : type1228 _146813 _146820 _146821) (a : _146821) : (term860 _146813 _146820 _146821 _116913 P a) = (term861 _146813 _146820 _146821 _116913 P a).
Proof. exact (MK_COMB (@lem8437858 _146820) (@lem8437857 _146813 _146820 _146821 _116913 P a)). Qed.
Lemma lem8437860 {_146813 _146820 _146821 : Type'} (_116913 : type1228 _146813 _146820 _146821) (P : type1228 _146813 _146820 _146821) : (term862 _146813 _146820 _146821 _116913 P) = (term863 _146813 _146820 _146821 _116913 P).
Proof. exact (fun_ext (fun a : _146821 => @lem8437859 _146813 _146820 _146821 _116913 P a)). Qed.
Lemma lem8437861 {_146821 : Type'} : (@all _146821) = (@all _146821).
Proof. exact (eq_refl (@all _146821)). Qed.
Lemma lem8437862 {_146813 _146820 _146821 : Type'} (_116913 : type1228 _146813 _146820 _146821) (P : type1228 _146813 _146820 _146821) : (term864 _146813 _146820 _146821 _116913 P) = (term865 _146813 _146820 _146821 _116913 P).
Proof. exact (MK_COMB (@lem8437861 _146821) (@lem8437860 _146813 _146820 _146821 _116913 P)). Qed.
Lemma lem8437863 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term855 _146813 _146820 _146821 P) = (term866 _146813 _146820 _146821 P).
Proof. exact (fun_ext (fun _116913 : type1228 _146813 _146820 _146821 => @lem8437862 _146813 _146820 _146821 _116913 P)). Qed.
Lemma lem8437864 {_146813 _146820 _146821 : Type'} : (@ex ((prod _146821 _146820) -> _146813)) = (@ex ((prod _146821 _146820) -> _146813)).
Proof. exact (eq_refl (@ex ((prod _146821 _146820) -> _146813))). Qed.
Lemma lem8437865 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term854 _146813 _146820 _146821 P) = (term867 _146813 _146820 _146821 P).
Proof. exact (MK_COMB (@lem8437864 _146813 _146820 _146821) (@lem8437863 _146813 _146820 _146821 P)). Qed.
Lemma lem8437866 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term867 _146813 _146820 _146821 P.
Proof. exact (EQ_MP (@lem8437865 _146813 _146820 _146821 P) (@lem8437852 _146813 _146820 _146821 P)). Qed.
Lemma lem8437868 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8437869 {_146813 _146820 _146821 : Type'} (P : type333 _146813 _146820 _146821) : term869 _146813 _146820 _146821 P.
Proof. exact (@lem8437868 (type1228 _146813 _146820 _146821) P). Qed.
Lemma lem8437870 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term870 _146813 _146820 _146821 P.
Proof. exact (@lem8437869 _146813 _146820 _146821 (term866 _146813 _146820 _146821 P)). Qed.
Lemma lem8437871 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term871 _146813 _146820 _146821 P.
Proof. exact (@lem8437870 _146813 _146820 _146821 P (@lem8437866 _146813 _146820 _146821 P)). Qed.
Lemma lem8437872 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term871 _146813 _146820 _146821 P) = (term872 _146813 _146820 _146821 P).
Proof. exact (eq_refl (term871 _146813 _146820 _146821 P)). Qed.
Lemma lem8437873 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : term872 _146813 _146820 _146821 P.
Proof. exact (EQ_MP (@lem8437872 _146813 _146820 _146821 P) (@lem8437871 _146813 _146820 _146821 P)). Qed.
Lemma lem8437874 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : term873 _146813 _146820 _146821 P a.
Proof. exact (@lem8437873 _146813 _146820 _146821 P a). Qed.
Lemma lem8437875 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : (term873 _146813 _146820 _146821 P a) = (term874 _146813 _146820 _146821 P a).
Proof. exact (eq_refl (term873 _146813 _146820 _146821 P a)). Qed.
Lemma lem8437876 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) : term874 _146813 _146820 _146821 P a.
Proof. exact (EQ_MP (@lem8437875 _146813 _146820 _146821 P a) (@lem8437874 _146813 _146820 _146821 P a)). Qed.
Lemma lem8437877 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : term875 _146813 _146820 _146821 P a b.
Proof. exact (@lem8437876 _146813 _146820 _146821 P a b). Qed.
Lemma lem8437878 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term875 _146813 _146820 _146821 P a b) = (term876 _146813 _146820 _146821 P a b).
Proof. exact (eq_refl (term875 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437879 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : term876 _146813 _146820 _146821 P a b.
Proof. exact (EQ_MP (@lem8437878 _146813 _146820 _146821 P a b) (@lem8437877 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437881 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8437882 {_146813 : Type'} (a : _146813) (b : _146813) : (@GEQ _146813 a b) = (a = b).
Proof. exact (@lem8437881 _146813 a b). Qed.
Lemma lem8437883 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term876 _146813 _146820 _146821 P a b) = ((term822 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b)).
Proof. exact (@lem8437882 _146813 (term822 _146813 _146820 _146821 P a b) (term830 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437884 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term822 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b).
Proof. exact (EQ_MP (@lem8437883 _146813 _146820 _146821 P a b) (@lem8437879 _146813 _146820 _146821 P a b)). Qed.
Lemma lem8437885 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (a : _146821) (b : _146820) : (term822 _146813 _146820 _146821 P a b) = (term830 _146813 _146820 _146821 P a b).
Proof. exact (@lem8437884 _146813 _146820 _146821 P a b). Qed.
Lemma lem8437886 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : (term822 _146813 _146820 _146821 P p1 p2) = (term830 _146813 _146820 _146821 P p1 p2).
Proof. exact (@lem8437885 _146813 _146820 _146821 P p1 p2). Qed.
Lemma lem8437887 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : ((term821 _146813 _146820 _146821 P p1 p2) = (term822 _146813 _146820 _146821 P p1 p2)) = ((term830 _146813 _146820 _146821 P p1 p2) = (term830 _146813 _146820 _146821 P p1 p2)).
Proof. exact (MK_COMB (@lem8437787 _146813 _146820 _146821 P p1 p2) (@lem8437886 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437889 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8437890 {_146813 : Type'} (x : _146813) : (x = x) = True.
Proof. exact (@lem8437889 _146813 x). Qed.
Lemma lem8437891 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : ((term830 _146813 _146820 _146821 P p1 p2) = (term830 _146813 _146820 _146821 P p1 p2)) = True.
Proof. exact (@lem8437890 _146813 (term830 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437892 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) (p2 : _146820) : ((term821 _146813 _146820 _146821 P p1 p2) = (term822 _146813 _146820 _146821 P p1 p2)) = True.
Proof. exact (TRANS (@lem8437887 _146813 _146820 _146821 P p1 p2) (@lem8437891 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437893 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) : (term824 _146813 _146820 _146821 P p1) = (term109 _146820).
Proof. exact (fun_ext (fun p2 : _146820 => @lem8437892 _146813 _146820 _146821 P p1 p2)). Qed.
Lemma lem8437894 {_146820 : Type'} : (@all _146820) = (@all _146820).
Proof. exact (eq_refl (@all _146820)). Qed.
Lemma lem8437895 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) : (term826 _146813 _146820 _146821 P p1) = (term111 _146820).
Proof. exact (MK_COMB (@lem8437894 _146820) (@lem8437893 _146813 _146820 _146821 P p1)). Qed.
Lemma lem8437897 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8437898 {_146820 : Type'} (t : Prop) : (term112 _146820 t) = t.
Proof. exact (@lem8437897 _146820 t). Qed.
Lemma lem8437899 {_146820 : Type'} : (term111 _146820) = True.
Proof. exact (@lem8437898 _146820 True). Qed.
Lemma lem8437900 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) (p1 : _146821) : (term826 _146813 _146820 _146821 P p1) = True.
Proof. exact (TRANS (@lem8437895 _146813 _146820 _146821 P p1) (@lem8437899 _146820)). Qed.
Lemma lem8437901 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term828 _146813 _146820 _146821 P) = (term109 _146821).
Proof. exact (fun_ext (fun p1 : _146821 => @lem8437900 _146813 _146820 _146821 P p1)). Qed.
Lemma lem8437902 {_146821 : Type'} : (@all _146821) = (@all _146821).
Proof. exact (eq_refl (@all _146821)). Qed.
Lemma lem8437903 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term829 _146813 _146820 _146821 P) = (term111 _146821).
Proof. exact (MK_COMB (@lem8437902 _146821) (@lem8437901 _146813 _146820 _146821 P)). Qed.
Lemma lem8437905 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8437906 {_146821 : Type'} (t : Prop) : (term112 _146821 t) = t.
Proof. exact (@lem8437905 _146821 t). Qed.
Lemma lem8437907 {_146821 : Type'} : (term111 _146821) = True.
Proof. exact (@lem8437906 _146821 True). Qed.
Lemma lem8437908 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term829 _146813 _146820 _146821 P) = True.
Proof. exact (TRANS (@lem8437903 _146813 _146820 _146821 P) (@lem8437907 _146821)). Qed.
Lemma lem8437909 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : ((term808 _146813 _146820 _146821 P) = (term809 _146813 _146820 _146821 P)) = True.
Proof. exact (TRANS (@lem8437771 _146813 _146820 _146821 P) (@lem8437908 _146813 _146820 _146821 P)). Qed.
Lemma lem8437910 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : True = ((term808 _146813 _146820 _146821 P) = (term809 _146813 _146820 _146821 P)).
Proof. exact (SYM (@lem8437909 _146813 _146820 _146821 P)). Qed.
Lemma lem8437912 {_146851 _146856 _146862 A : Type'} : term877 _146851 _146856 _146862 A.
Proof. exact (@lem8437726 (type1647 _146851 _146856 _146862 A)). Qed.
Lemma lem8437913 {_146851 _146856 _146862 A : Type'} : term878 _146851 _146856 _146862 A.
Proof. exact (@lem8437912 _146851 _146856 _146862 A (term879 _146851 _146856 _146862 A)). Qed.
Lemma lem8437914 {_146851 _146856 _146862 A : Type'} : (term878 _146851 _146856 _146862 A) = (term880 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term878 _146851 _146856 _146862 A)). Qed.
Lemma lem8437915 {_146851 _146856 _146862 A : Type'} : term880 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8437914 _146851 _146856 _146862 A) (@lem8437913 _146851 _146856 _146862 A)). Qed.
Lemma lem8437916 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : term800 _5106 _5107 P.
Proof. exact (@lem49909 _5106 _5107 P). Qed.
Lemma lem8437917 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term800 _5106 _5107 P) = ((term801 _5106 _5107 P) = (term802 _5106 _5107 P)).
Proof. exact (eq_refl (term800 _5106 _5107 P)). Qed.
Lemma lem8437926 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term801 _5106 _5107 P) = (term802 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8437917 _5106 _5107 P) (@lem8437916 _5106 _5107 P)). Qed.
Lemma lem8437927 {_146851 _146856 _146862 A : Type'} (P : type1185 _146851 _146856 _146862 A) : (term881 _146851 _146856 _146862 A P) = (term882 _146851 _146856 _146862 A P).
Proof. exact (@lem8437926 (type1475 _146856 _146862 A) (A -> _146851) P). Qed.
Lemma lem8437928 {_146851 _146856 _146862 A : Type'} : (term883 _146851 _146856 _146862 A) = (term884 _146851 _146856 _146862 A).
Proof. exact (@lem8437927 _146851 _146856 _146862 A (term885 _146851 _146856 _146862 A)). Qed.
Lemma lem8437929 {_146851 _146856 _146862 A : Type'} (x : type1647 _146851 _146856 _146862 A) : (term886 _146851 _146856 _146862 A x) = (term887 _146851 _146856 _146862 A x).
Proof. exact (eq_refl (term886 _146851 _146856 _146862 A x)). Qed.
Lemma lem8437930 {_146851 _146856 _146862 A : Type'} : (term888 _146851 _146856 _146862 A) = (term885 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun x : type1647 _146851 _146856 _146862 A => @lem8437929 _146851 _146856 _146862 A x)). Qed.
Lemma lem8437931 {_146851 _146856 _146862 A : Type'} : (@all (prod (A -> _146851) (_146862 -> A -> _146856))) = (@all (prod (A -> _146851) (_146862 -> A -> _146856))).
Proof. exact (eq_refl (@all (prod (A -> _146851) (_146862 -> A -> _146856)))). Qed.
Lemma lem8437932 {_146851 _146856 _146862 A : Type'} : (term883 _146851 _146856 _146862 A) = (term889 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8437931 _146851 _146856 _146862 A) (@lem8437930 _146851 _146856 _146862 A)). Qed.
Lemma lem8437933 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8437934 {_146851 _146856 _146862 A : Type'} : (term890 _146851 _146856 _146862 A) = (term891 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8437933) (@lem8437932 _146851 _146856 _146862 A)). Qed.
Lemma lem8437935 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term892 _146851 _146856 _146862 A p1 p2) = (term893 _146851 _146856 _146862 A p1 p2).
Proof. exact (eq_refl (term892 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437936 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term894 _146851 _146856 _146862 A p1) = (term895 _146851 _146856 _146862 A p1).
Proof. exact (fun_ext (fun p2 : type1475 _146856 _146862 A => @lem8437935 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437937 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8437938 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term896 _146851 _146856 _146862 A p1) = (term897 _146851 _146856 _146862 A p1).
Proof. exact (MK_COMB (@lem8437937 _146856 _146862 A) (@lem8437936 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8437939 {_146851 _146856 _146862 A : Type'} : (term898 _146851 _146856 _146862 A) = (term899 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun p1 : A -> _146851 => @lem8437938 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8437940 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8437941 {_146851 _146856 _146862 A : Type'} : (term884 _146851 _146856 _146862 A) = (term900 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8437940 _146851 A) (@lem8437939 _146851 _146856 _146862 A)). Qed.
Lemma lem8437942 {_146851 _146856 _146862 A : Type'} : ((term883 _146851 _146856 _146862 A) = (term884 _146851 _146856 _146862 A)) = ((term889 _146851 _146856 _146862 A) = (term900 _146851 _146856 _146862 A)).
Proof. exact (MK_COMB (@lem8437934 _146851 _146856 _146862 A) (@lem8437941 _146851 _146856 _146862 A)). Qed.
Lemma lem8437943 {_146851 _146856 _146862 A : Type'} : (term889 _146851 _146856 _146862 A) = (term900 _146851 _146856 _146862 A).
Proof. exact (EQ_MP (@lem8437942 _146851 _146856 _146862 A) (@lem8437928 _146851 _146856 _146862 A)). Qed.
Lemma lem8437965 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term801 _5106 _5107 P) = (term802 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8437917 _5106 _5107 P) (@lem8437916 _5106 _5107 P)). Qed.
Lemma lem8437966 {_146851 _146856 _146862 A : Type'} (P : type1185 _146851 _146856 _146862 A) : (term881 _146851 _146856 _146862 A P) = (term882 _146851 _146856 _146862 A P).
Proof. exact (@lem8437965 (type1475 _146856 _146862 A) (A -> _146851) P). Qed.
Lemma lem8437967 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term901 _146851 _146856 _146862 A p1 p2) = (term902 _146851 _146856 _146862 A p1 p2).
Proof. exact (@lem8437966 _146851 _146856 _146862 A (term903 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437968 {_146851 _146856 _146862 A : Type'} (y : type1647 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term904 _146851 _146856 _146862 A p1 p2 y) = (term905 _146851 _146856 _146862 A y p1 p2).
Proof. exact (eq_refl (term904 _146851 _146856 _146862 A p1 p2 y)). Qed.
Lemma lem8437969 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term906 _146851 _146856 _146862 A p1 p2) = (term903 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun y : type1647 _146851 _146856 _146862 A => @lem8437968 _146851 _146856 _146862 A y p1 p2)). Qed.
Lemma lem8437970 {_146851 _146856 _146862 A : Type'} : (@all (prod (A -> _146851) (_146862 -> A -> _146856))) = (@all (prod (A -> _146851) (_146862 -> A -> _146856))).
Proof. exact (eq_refl (@all (prod (A -> _146851) (_146862 -> A -> _146856)))). Qed.
Lemma lem8437971 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term901 _146851 _146856 _146862 A p1 p2) = (term893 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8437970 _146851 _146856 _146862 A) (@lem8437969 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437972 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8437973 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term907 _146851 _146856 _146862 A p1 p2) = (term908 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8437972) (@lem8437971 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437974 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term909 _146851 _146856 _146862 A p1 p2 p1' p2') = (term910 _146851 _146856 _146862 A p1' p2' p1 p2).
Proof. exact (eq_refl (term909 _146851 _146856 _146862 A p1 p2 p1' p2')). Qed.
Lemma lem8437975 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term911 _146851 _146856 _146862 A p1 p2 p1') = (term912 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (fun_ext (fun p2' : type1475 _146856 _146862 A => @lem8437974 _146851 _146856 _146862 A p1' p2' p1 p2)). Qed.
Lemma lem8437976 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8437977 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term913 _146851 _146856 _146862 A p1 p2 p1') = (term914 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (MK_COMB (@lem8437976 _146856 _146862 A) (@lem8437975 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8437978 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term915 _146851 _146856 _146862 A p1 p2) = (term916 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun p1' : A -> _146851 => @lem8437977 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8437979 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8437980 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term902 _146851 _146856 _146862 A p1 p2) = (term917 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8437979 _146851 A) (@lem8437978 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437981 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : ((term901 _146851 _146856 _146862 A p1 p2) = (term902 _146851 _146856 _146862 A p1 p2)) = ((term893 _146851 _146856 _146862 A p1 p2) = (term917 _146851 _146856 _146862 A p1 p2)).
Proof. exact (MK_COMB (@lem8437973 _146851 _146856 _146862 A p1 p2) (@lem8437980 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8437982 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term893 _146851 _146856 _146862 A p1 p2) = (term917 _146851 _146856 _146862 A p1 p2).
Proof. exact (EQ_MP (@lem8437981 _146851 _146856 _146862 A p1 p2) (@lem8437967 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438001 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438002 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438001 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438003 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438004 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438003 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438005 {_146851 A : Type'} (s : A -> _146851) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8438006 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438007 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438006 _146851 A) (@lem8438002 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438008 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438009 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (term923 _146851 A s).
Proof. exact (eq_refl (term923 _146851 A s)). Qed.
Lemma lem8438010 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438009 _146851 A s) (@lem8438008 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438011 {_146851 A : Type'} (s : A -> _146851) : (term921 _146851 A s) = s.
Proof. exact (eq_refl (term921 _146851 A s)). Qed.
Lemma lem8438012 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438013 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (@eq (A -> _146851) s).
Proof. exact (MK_COMB (@lem8438012 _146851 A) (@lem8438011 _146851 A s)). Qed.
Lemma lem8438014 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438015 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438013 _146851 A s) (@lem8438014 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438016 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438010 _146851 _146856 _146862 A s t) (@lem8438015 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438017 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438016 _146851 _146856 _146862 A s t) (@lem8438007 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438018 {_146851 A : Type'} (s : A -> _146851) : (@eq (A -> _146851) s) = (@eq (A -> _146851) s).
Proof. exact (eq_refl (@eq (A -> _146851) s)). Qed.
Lemma lem8438019 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (s = s) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438018 _146851 A s) (@lem8438017 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438020 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438019 _146851 _146856 _146862 A s t) (@lem8438005 _146851 A s)). Qed.
Lemma lem8438021 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8438022 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438023 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438022 _146856 _146862 A) (@lem8438004 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438024 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438025 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (term927 _146856 _146862 A t).
Proof. exact (eq_refl (term927 _146856 _146862 A t)). Qed.
Lemma lem8438026 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438025 _146856 _146862 A t) (@lem8438024 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438027 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = t.
Proof. exact (eq_refl (term925 _146856 _146862 A t)). Qed.
Lemma lem8438028 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438029 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (MK_COMB (@lem8438028 _146856 _146862 A) (@lem8438027 _146856 _146862 A t)). Qed.
Lemma lem8438030 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438031 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438029 _146856 _146862 A t) (@lem8438030 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438032 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438026 _146851 _146856 _146862 A s t) (@lem8438031 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438033 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438032 _146851 _146856 _146862 A s t) (@lem8438023 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438034 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t)). Qed.
Lemma lem8438035 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (t = t) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438034 _146856 _146862 A t) (@lem8438033 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438036 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438035 _146851 _146856 _146862 A s t) (@lem8438021 _146856 _146862 A t)). Qed.
Lemma lem8438037 {_146851 _146856 _146862 A : Type'} : (term928 _146851 _146856 _146862 A) = (term928 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term928 _146851 _146856 _146862 A)). Qed.
Lemma lem8438038 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438037 _146851 _146856 _146862 A) (@lem8438020 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438039 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term930 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term930 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438040 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term932 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term932 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438041 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438040 _146851 _146856 _146862 A s) (@lem8438039 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438042 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term929 _146851 _146856 _146862 A s) = (term933 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term929 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438043 {_146851 _146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438044 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term934 _146851 _146856 _146862 A s).
Proof. exact (MK_COMB (@lem8438043 _146851 _146856 _146862 A) (@lem8438042 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438045 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term931 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term931 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438046 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438044 _146851 _146856 _146862 A s) (@lem8438045 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438047 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438041 _146851 _146856 _146862 A s t) (@lem8438046 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438048 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438047 _146851 _146856 _146862 A s t) (@lem8438038 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438049 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438048 _146851 _146856 _146862 A s t) (@lem8438036 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438050 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term936 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term936 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438051 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term938 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term938 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438052 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438051 _146851 _146856 _146862 A s t) (@lem8438050 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438053 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term935 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438054 {_146851 _146856 _146862 A : Type'} : (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438055 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term940 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438054 _146851 _146856 _146862 A) (@lem8438053 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438056 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term937 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438057 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438055 _146851 _146856 _146862 A s t) (@lem8438056 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438058 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438052 _146851 _146856 _146862 A s t) (@lem8438057 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438059 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438058 _146851 _146856 _146862 A s t) (@lem8438049 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438060 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (SYM (@lem8438059 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438061 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term941 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438062 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (TRANS (@lem8438061 _146851 _146856 _146862 A s t) (@lem8438060 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438063 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term942 _146851 _146856 _146862 A s.
Proof. exact (fun t : type1475 _146856 _146862 A => @lem8438062 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438064 {_146851 _146856 _146862 A : Type'} : term943 _146851 _146856 _146862 A.
Proof. exact (fun s : A -> _146851 => @lem8438063 _146851 _146856 _146862 A s). Qed.
Lemma lem8438065 {_146851 _146856 _146862 A : Type'} : term944 _146851 _146856 _146862 A.
Proof. exact (ex_intro (term945 _146851 _146856 _146862 A) (term946 _146851 _146856 _146862 A) (@lem8438064 _146851 _146856 _146862 A)). Qed.
Lemma lem8438067 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438068 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (a = b) = (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b).
Proof. exact (@lem8438067 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438069 {_146851 _146856 _146862 A : Type'} (_116925 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term947 _146851 _146856 _146862 A _116925 s t) = (term939 _146851 _146856 _146862 A s t)) = (term948 _146851 _146856 _146862 A _116925 s t).
Proof. exact (@lem8438068 _146851 _146856 _146862 A (term947 _146851 _146856 _146862 A _116925 s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438070 {_146851 _146856 _146862 A : Type'} (_116925 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term949 _146851 _146856 _146862 A _116925 s) = (term950 _146851 _146856 _146862 A _116925 s).
Proof. exact (fun_ext (fun t : type1475 _146856 _146862 A => @lem8438069 _146851 _146856 _146862 A _116925 s t)). Qed.
Lemma lem8438071 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438072 {_146851 _146856 _146862 A : Type'} (_116925 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term951 _146851 _146856 _146862 A _116925 s) = (term952 _146851 _146856 _146862 A _116925 s).
Proof. exact (MK_COMB (@lem8438071 _146856 _146862 A) (@lem8438070 _146851 _146856 _146862 A _116925 s)). Qed.
Lemma lem8438073 {_146851 _146856 _146862 A : Type'} (_116925 : type1182 _146851 _146856 _146862 A) : (term953 _146851 _146856 _146862 A _116925) = (term954 _146851 _146856 _146862 A _116925).
Proof. exact (fun_ext (fun s : A -> _146851 => @lem8438072 _146851 _146856 _146862 A _116925 s)). Qed.
Lemma lem8438074 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438075 {_146851 _146856 _146862 A : Type'} (_116925 : type1182 _146851 _146856 _146862 A) : (term955 _146851 _146856 _146862 A _116925) = (term956 _146851 _146856 _146862 A _116925).
Proof. exact (MK_COMB (@lem8438074 _146851 A) (@lem8438073 _146851 _146856 _146862 A _116925)). Qed.
Lemma lem8438076 {_146851 _146856 _146862 A : Type'} : (term945 _146851 _146856 _146862 A) = (term957 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun _116925 : type1182 _146851 _146856 _146862 A => @lem8438075 _146851 _146856 _146862 A _116925)). Qed.
Lemma lem8438077 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438078 {_146851 _146856 _146862 A : Type'} : (term944 _146851 _146856 _146862 A) = (term958 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438077 _146851 _146856 _146862 A) (@lem8438076 _146851 _146856 _146862 A)). Qed.
Lemma lem8438079 {_146851 _146856 _146862 A : Type'} : term958 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438078 _146851 _146856 _146862 A) (@lem8438065 _146851 _146856 _146862 A)). Qed.
Lemma lem8438081 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438082 {_146851 _146856 _146862 A : Type'} (P : type307 _146851 _146856 _146862 A) : term959 _146851 _146856 _146862 A P.
Proof. exact (@lem8438081 (type1182 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438083 {_146851 _146856 _146862 A : Type'} : term960 _146851 _146856 _146862 A.
Proof. exact (@lem8438082 _146851 _146856 _146862 A (term957 _146851 _146856 _146862 A)). Qed.
Lemma lem8438084 {_146851 _146856 _146862 A : Type'} : term961 _146851 _146856 _146862 A.
Proof. exact (@lem8438083 _146851 _146856 _146862 A (@lem8438079 _146851 _146856 _146862 A)). Qed.
Lemma lem8438085 {_146851 _146856 _146862 A : Type'} : (term961 _146851 _146856 _146862 A) = (term962 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term961 _146851 _146856 _146862 A)). Qed.
Lemma lem8438086 {_146851 _146856 _146862 A : Type'} : term962 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438085 _146851 _146856 _146862 A) (@lem8438084 _146851 _146856 _146862 A)). Qed.
Lemma lem8438087 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term963 _146851 _146856 _146862 A s.
Proof. exact (@lem8438086 _146851 _146856 _146862 A s). Qed.
Lemma lem8438088 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term963 _146851 _146856 _146862 A s) = (term964 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term963 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438089 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term964 _146851 _146856 _146862 A s.
Proof. exact (EQ_MP (@lem8438088 _146851 _146856 _146862 A s) (@lem8438087 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438090 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term965 _146851 _146856 _146862 A s t.
Proof. exact (@lem8438089 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438091 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term965 _146851 _146856 _146862 A s t) = (term966 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term965 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438092 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term966 _146851 _146856 _146862 A s t.
Proof. exact (EQ_MP (@lem8438091 _146851 _146856 _146862 A s t) (@lem8438090 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438094 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438095 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b) = (a = b).
Proof. exact (@lem8438094 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438096 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term966 _146851 _146856 _146862 A s t) = ((term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t)).
Proof. exact (@lem8438095 _146851 _146856 _146862 A (term967 _146851 _146856 _146862 A s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438097 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438096 _146851 _146856 _146862 A s t) (@lem8438092 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438098 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438097 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438099 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A p1 p2) = (term939 _146851 _146856 _146862 A p1 p2).
Proof. exact (@lem8438098 _146851 _146856 _146862 A p1 p2). Qed.
Lemma lem8438150 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2') = (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2').
Proof. exact (eq_refl (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2')). Qed.
Lemma lem8438151 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1 p2 p1' p2') = (term969 _146851 _146856 _146862 A p1 p2 p1' p2').
Proof. exact (MK_COMB (@lem8438099 _146851 _146856 _146862 A p1 p2) (@lem8438150 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438152 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438153 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438152 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438154 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438155 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438154 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438156 {_146851 A : Type'} (s' : A -> _146851) : s' = s'.
Proof. exact (eq_refl s'). Qed.
Lemma lem8438157 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438158 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438157 _146851 A) (@lem8438153 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438159 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438160 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (term923 _146851 A s').
Proof. exact (eq_refl (term923 _146851 A s')). Qed.
Lemma lem8438161 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438160 _146851 A s') (@lem8438159 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438162 {_146851 A : Type'} (s' : A -> _146851) : (term921 _146851 A s') = s'.
Proof. exact (eq_refl (term921 _146851 A s')). Qed.
Lemma lem8438163 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438164 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (@eq (A -> _146851) s').
Proof. exact (MK_COMB (@lem8438163 _146851 A) (@lem8438162 _146851 A s')). Qed.
Lemma lem8438165 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438166 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438164 _146851 A s') (@lem8438165 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438167 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438161 _146851 _146856 _146862 A s' t') (@lem8438166 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438168 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438167 _146851 _146856 _146862 A s' t') (@lem8438158 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438169 {_146851 A : Type'} (s' : A -> _146851) : (@eq (A -> _146851) s') = (@eq (A -> _146851) s').
Proof. exact (eq_refl (@eq (A -> _146851) s')). Qed.
Lemma lem8438170 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (s' = s') = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438169 _146851 A s') (@lem8438168 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438171 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438170 _146851 _146856 _146862 A s' t') (@lem8438156 _146851 A s')). Qed.
Lemma lem8438172 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8438173 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438174 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438173 _146856 _146862 A) (@lem8438155 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438175 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438176 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (term927 _146856 _146862 A t').
Proof. exact (eq_refl (term927 _146856 _146862 A t')). Qed.
Lemma lem8438177 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438176 _146856 _146862 A t') (@lem8438175 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438178 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = t'.
Proof. exact (eq_refl (term925 _146856 _146862 A t')). Qed.
Lemma lem8438179 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438180 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (MK_COMB (@lem8438179 _146856 _146862 A) (@lem8438178 _146856 _146862 A t')). Qed.
Lemma lem8438181 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438182 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438180 _146856 _146862 A t') (@lem8438181 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438183 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438177 _146851 _146856 _146862 A s' t') (@lem8438182 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438184 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438183 _146851 _146856 _146862 A s' t') (@lem8438174 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438185 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t')). Qed.
Lemma lem8438186 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (t' = t') = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438185 _146856 _146862 A t') (@lem8438184 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438187 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438186 _146851 _146856 _146862 A s' t') (@lem8438172 _146856 _146862 A t')). Qed.
Lemma lem8438188 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term970 _146851 _146856 _146862 A p1 p2) = (term970 _146851 _146856 _146862 A p1 p2).
Proof. exact (eq_refl (term970 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438189 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (MK_COMB (@lem8438188 _146851 _146856 _146862 A p1 p2) (@lem8438171 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438190 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term972 _146851 _146856 _146862 A p1 p2 s' t') = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (eq_refl (term972 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438191 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) : (term974 _146851 _146856 _146862 A p1 p2 s') = (term974 _146851 _146856 _146862 A p1 p2 s').
Proof. exact (eq_refl (term974 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438192 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t')) = ((term971 _146851 _146856 _146862 A p1 p2 s') = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (MK_COMB (@lem8438191 _146851 _146856 _146862 A p1 p2 s') (@lem8438190 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438193 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1 p2 s') = (term975 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (eq_refl (term971 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438194 {_146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> Prop))). Qed.
Lemma lem8438195 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term974 _146851 _146856 _146862 A p1 p2 s') = (term976 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (MK_COMB (@lem8438194 _146856 _146862 A) (@lem8438193 _146851 _146856 _146862 A p1 s' p2)). Qed.
Lemma lem8438196 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term973 _146851 _146856 _146862 A p1 s' t' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (eq_refl (term973 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438197 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term973 _146851 _146856 _146862 A p1 s' t' p2)) = ((term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (MK_COMB (@lem8438195 _146851 _146856 _146862 A p1 s' p2) (@lem8438196 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438198 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t')) = ((term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (TRANS (@lem8438192 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438197 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438199 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (EQ_MP (@lem8438198 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438189 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438200 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (MK_COMB (@lem8438199 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438187 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438201 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term978 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term978 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438202 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1 s' p2 t') = (term980 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term980 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438203 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t')) = ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (MK_COMB (@lem8438202 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438201 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438204 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1 s' p2 t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term977 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438205 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8438206 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1 s' p2 t') = (term982 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (MK_COMB (@lem8438205) (@lem8438204 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438207 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term979 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438208 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')) = ((term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (MK_COMB (@lem8438206 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438207 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438209 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t')) = ((term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (TRANS (@lem8438203 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438208 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438210 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (EQ_MP (@lem8438209 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438200 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438211 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (SYM (@lem8438210 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438212 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term983 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438213 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (TRANS (@lem8438212 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438211 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438214 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : term984 _146851 _146856 _146862 A p1 s' p2.
Proof. exact (fun t' : type1475 _146856 _146862 A => @lem8438213 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438215 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term985 _146851 _146856 _146862 A p1 p2.
Proof. exact (fun s' : A -> _146851 => @lem8438214 _146851 _146856 _146862 A p1 s' p2). Qed.
Lemma lem8438216 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term986 _146851 _146856 _146862 A p1 p2.
Proof. exact (ex_intro (term987 _146851 _146856 _146862 A p1 p2) (term988 _146851 _146856 _146862 A p1 p2) (@lem8438215 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438218 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438219 (a : Prop) (b : Prop) : (a = b) = (@GEQ Prop a b).
Proof. exact (@lem8438218 Prop a b). Qed.
Lemma lem8438220 {_146851 _146856 _146862 A : Type'} (_116937 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : ((term989 _146851 _146856 _146862 A _116937 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t')) = (term990 _146851 _146856 _146862 A _116937 p1 s' p2 t').
Proof. exact (@lem8438219 (term989 _146851 _146856 _146862 A _116937 s' t') (term981 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438221 {_146851 _146856 _146862 A : Type'} (_116937 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term991 _146851 _146856 _146862 A _116937 p1 s' p2) = (term992 _146851 _146856 _146862 A _116937 p1 s' p2).
Proof. exact (fun_ext (fun t' : type1475 _146856 _146862 A => @lem8438220 _146851 _146856 _146862 A _116937 p1 s' p2 t')). Qed.
Lemma lem8438222 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438223 {_146851 _146856 _146862 A : Type'} (_116937 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term993 _146851 _146856 _146862 A _116937 p1 s' p2) = (term994 _146851 _146856 _146862 A _116937 p1 s' p2).
Proof. exact (MK_COMB (@lem8438222 _146856 _146862 A) (@lem8438221 _146851 _146856 _146862 A _116937 p1 s' p2)). Qed.
Lemma lem8438224 {_146851 _146856 _146862 A : Type'} (_116937 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term995 _146851 _146856 _146862 A _116937 p1 p2) = (term996 _146851 _146856 _146862 A _116937 p1 p2).
Proof. exact (fun_ext (fun s' : A -> _146851 => @lem8438223 _146851 _146856 _146862 A _116937 p1 s' p2)). Qed.
Lemma lem8438225 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438226 {_146851 _146856 _146862 A : Type'} (_116937 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term997 _146851 _146856 _146862 A _116937 p1 p2) = (term998 _146851 _146856 _146862 A _116937 p1 p2).
Proof. exact (MK_COMB (@lem8438225 _146851 A) (@lem8438224 _146851 _146856 _146862 A _116937 p1 p2)). Qed.
Lemma lem8438227 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term987 _146851 _146856 _146862 A p1 p2) = (term999 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun _116937 : type1185 _146851 _146856 _146862 A => @lem8438226 _146851 _146856 _146862 A _116937 p1 p2)). Qed.
Lemma lem8438228 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438229 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term986 _146851 _146856 _146862 A p1 p2) = (term1000 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8438228 _146851 _146856 _146862 A) (@lem8438227 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438230 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1000 _146851 _146856 _146862 A p1 p2.
Proof. exact (EQ_MP (@lem8438229 _146851 _146856 _146862 A p1 p2) (@lem8438216 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438232 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438233 {_146851 _146856 _146862 A : Type'} (P : type312 _146851 _146856 _146862 A) : term1001 _146851 _146856 _146862 A P.
Proof. exact (@lem8438232 (type1185 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438234 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1002 _146851 _146856 _146862 A p1 p2.
Proof. exact (@lem8438233 _146851 _146856 _146862 A (term999 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438235 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1003 _146851 _146856 _146862 A p1 p2.
Proof. exact (@lem8438234 _146851 _146856 _146862 A p1 p2 (@lem8438230 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438236 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1003 _146851 _146856 _146862 A p1 p2) = (term1004 _146851 _146856 _146862 A p1 p2).
Proof. exact (eq_refl (term1003 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438237 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1004 _146851 _146856 _146862 A p1 p2.
Proof. exact (EQ_MP (@lem8438236 _146851 _146856 _146862 A p1 p2) (@lem8438235 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438238 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) : term1005 _146851 _146856 _146862 A p1 p2 s'.
Proof. exact (@lem8438237 _146851 _146856 _146862 A p1 p2 s'). Qed.
Lemma lem8438239 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1005 _146851 _146856 _146862 A p1 p2 s') = (term1006 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (eq_refl (term1005 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438240 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1006 _146851 _146856 _146862 A p1 s' p2.
Proof. exact (EQ_MP (@lem8438239 _146851 _146856 _146862 A p1 s' p2) (@lem8438238 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438241 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1007 _146851 _146856 _146862 A p1 s' p2 t'.
Proof. exact (@lem8438240 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438242 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1007 _146851 _146856 _146862 A p1 s' p2 t') = (term1008 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term1007 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438243 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1008 _146851 _146856 _146862 A p1 s' p2 t'.
Proof. exact (EQ_MP (@lem8438242 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438241 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438245 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438246 (a : Prop) (b : Prop) : (@GEQ Prop a b) = (a = b).
Proof. exact (@lem8438245 Prop a b). Qed.
Lemma lem8438247 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1008 _146851 _146856 _146862 A p1 s' p2 t') = ((term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t')).
Proof. exact (@lem8438246 (term969 _146851 _146856 _146862 A p1 p2 s' t') (term981 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438248 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (EQ_MP (@lem8438247 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438243 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438249 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (@lem8438248 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438250 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 p1' p2') = (term981 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (@lem8438249 _146851 _146856 _146862 A p1 p1' p2 p2'). Qed.
Lemma lem8438283 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1 p2 p1' p2') = (term981 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (TRANS (@lem8438151 _146851 _146856 _146862 A p1 p2 p1' p2') (@lem8438250 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8438284 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8438285 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1009 _146851 _146856 _146862 A p1 p2 p1' p2') = (term1010 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8438284) (@lem8438283 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8438286 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438287 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438286 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438288 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438289 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438288 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438290 {_146851 A : Type'} (s : A -> _146851) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8438291 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438292 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438291 _146851 A) (@lem8438287 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438293 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438294 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (term923 _146851 A s).
Proof. exact (eq_refl (term923 _146851 A s)). Qed.
Lemma lem8438295 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438294 _146851 A s) (@lem8438293 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438296 {_146851 A : Type'} (s : A -> _146851) : (term921 _146851 A s) = s.
Proof. exact (eq_refl (term921 _146851 A s)). Qed.
Lemma lem8438297 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438298 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (@eq (A -> _146851) s).
Proof. exact (MK_COMB (@lem8438297 _146851 A) (@lem8438296 _146851 A s)). Qed.
Lemma lem8438299 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438300 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438298 _146851 A s) (@lem8438299 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438301 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438295 _146851 _146856 _146862 A s t) (@lem8438300 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438302 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438301 _146851 _146856 _146862 A s t) (@lem8438292 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438303 {_146851 A : Type'} (s : A -> _146851) : (@eq (A -> _146851) s) = (@eq (A -> _146851) s).
Proof. exact (eq_refl (@eq (A -> _146851) s)). Qed.
Lemma lem8438304 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (s = s) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438303 _146851 A s) (@lem8438302 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438305 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438304 _146851 _146856 _146862 A s t) (@lem8438290 _146851 A s)). Qed.
Lemma lem8438306 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8438307 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438308 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438307 _146856 _146862 A) (@lem8438289 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438309 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438310 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (term927 _146856 _146862 A t).
Proof. exact (eq_refl (term927 _146856 _146862 A t)). Qed.
Lemma lem8438311 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438310 _146856 _146862 A t) (@lem8438309 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438312 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = t.
Proof. exact (eq_refl (term925 _146856 _146862 A t)). Qed.
Lemma lem8438313 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438314 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (MK_COMB (@lem8438313 _146856 _146862 A) (@lem8438312 _146856 _146862 A t)). Qed.
Lemma lem8438315 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438316 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438314 _146856 _146862 A t) (@lem8438315 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438317 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438311 _146851 _146856 _146862 A s t) (@lem8438316 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438318 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438317 _146851 _146856 _146862 A s t) (@lem8438308 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438319 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t)). Qed.
Lemma lem8438320 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (t = t) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438319 _146856 _146862 A t) (@lem8438318 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438321 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438320 _146851 _146856 _146862 A s t) (@lem8438306 _146856 _146862 A t)). Qed.
Lemma lem8438322 {_146851 _146856 _146862 A : Type'} : (term928 _146851 _146856 _146862 A) = (term928 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term928 _146851 _146856 _146862 A)). Qed.
Lemma lem8438323 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438322 _146851 _146856 _146862 A) (@lem8438305 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438324 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term930 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term930 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438325 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term932 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term932 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438326 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438325 _146851 _146856 _146862 A s) (@lem8438324 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438327 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term929 _146851 _146856 _146862 A s) = (term933 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term929 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438328 {_146851 _146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438329 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term934 _146851 _146856 _146862 A s).
Proof. exact (MK_COMB (@lem8438328 _146851 _146856 _146862 A) (@lem8438327 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438330 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term931 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term931 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438331 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438329 _146851 _146856 _146862 A s) (@lem8438330 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438332 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438326 _146851 _146856 _146862 A s t) (@lem8438331 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438333 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438332 _146851 _146856 _146862 A s t) (@lem8438323 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438334 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438333 _146851 _146856 _146862 A s t) (@lem8438321 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438335 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term936 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term936 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438336 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term938 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term938 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438337 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438336 _146851 _146856 _146862 A s t) (@lem8438335 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438338 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term935 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438339 {_146851 _146856 _146862 A : Type'} : (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438340 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term940 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438339 _146851 _146856 _146862 A) (@lem8438338 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438341 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term937 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438342 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438340 _146851 _146856 _146862 A s t) (@lem8438341 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438343 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438337 _146851 _146856 _146862 A s t) (@lem8438342 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438344 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438343 _146851 _146856 _146862 A s t) (@lem8438334 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438345 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (SYM (@lem8438344 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438346 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term941 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438347 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (TRANS (@lem8438346 _146851 _146856 _146862 A s t) (@lem8438345 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438348 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term942 _146851 _146856 _146862 A s.
Proof. exact (fun t : type1475 _146856 _146862 A => @lem8438347 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438349 {_146851 _146856 _146862 A : Type'} : term943 _146851 _146856 _146862 A.
Proof. exact (fun s : A -> _146851 => @lem8438348 _146851 _146856 _146862 A s). Qed.
Lemma lem8438350 {_146851 _146856 _146862 A : Type'} : term944 _146851 _146856 _146862 A.
Proof. exact (ex_intro (term945 _146851 _146856 _146862 A) (term946 _146851 _146856 _146862 A) (@lem8438349 _146851 _146856 _146862 A)). Qed.
Lemma lem8438352 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438353 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (a = b) = (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b).
Proof. exact (@lem8438352 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438354 {_146851 _146856 _146862 A : Type'} (_116949 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term947 _146851 _146856 _146862 A _116949 s t) = (term939 _146851 _146856 _146862 A s t)) = (term948 _146851 _146856 _146862 A _116949 s t).
Proof. exact (@lem8438353 _146851 _146856 _146862 A (term947 _146851 _146856 _146862 A _116949 s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438355 {_146851 _146856 _146862 A : Type'} (_116949 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term949 _146851 _146856 _146862 A _116949 s) = (term950 _146851 _146856 _146862 A _116949 s).
Proof. exact (fun_ext (fun t : type1475 _146856 _146862 A => @lem8438354 _146851 _146856 _146862 A _116949 s t)). Qed.
Lemma lem8438356 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438357 {_146851 _146856 _146862 A : Type'} (_116949 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term951 _146851 _146856 _146862 A _116949 s) = (term952 _146851 _146856 _146862 A _116949 s).
Proof. exact (MK_COMB (@lem8438356 _146856 _146862 A) (@lem8438355 _146851 _146856 _146862 A _116949 s)). Qed.
Lemma lem8438358 {_146851 _146856 _146862 A : Type'} (_116949 : type1182 _146851 _146856 _146862 A) : (term953 _146851 _146856 _146862 A _116949) = (term954 _146851 _146856 _146862 A _116949).
Proof. exact (fun_ext (fun s : A -> _146851 => @lem8438357 _146851 _146856 _146862 A _116949 s)). Qed.
Lemma lem8438359 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438360 {_146851 _146856 _146862 A : Type'} (_116949 : type1182 _146851 _146856 _146862 A) : (term955 _146851 _146856 _146862 A _116949) = (term956 _146851 _146856 _146862 A _116949).
Proof. exact (MK_COMB (@lem8438359 _146851 A) (@lem8438358 _146851 _146856 _146862 A _116949)). Qed.
Lemma lem8438361 {_146851 _146856 _146862 A : Type'} : (term945 _146851 _146856 _146862 A) = (term957 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun _116949 : type1182 _146851 _146856 _146862 A => @lem8438360 _146851 _146856 _146862 A _116949)). Qed.
Lemma lem8438362 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438363 {_146851 _146856 _146862 A : Type'} : (term944 _146851 _146856 _146862 A) = (term958 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438362 _146851 _146856 _146862 A) (@lem8438361 _146851 _146856 _146862 A)). Qed.
Lemma lem8438364 {_146851 _146856 _146862 A : Type'} : term958 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438363 _146851 _146856 _146862 A) (@lem8438350 _146851 _146856 _146862 A)). Qed.
Lemma lem8438366 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438367 {_146851 _146856 _146862 A : Type'} (P : type307 _146851 _146856 _146862 A) : term959 _146851 _146856 _146862 A P.
Proof. exact (@lem8438366 (type1182 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438368 {_146851 _146856 _146862 A : Type'} : term960 _146851 _146856 _146862 A.
Proof. exact (@lem8438367 _146851 _146856 _146862 A (term957 _146851 _146856 _146862 A)). Qed.
Lemma lem8438369 {_146851 _146856 _146862 A : Type'} : term961 _146851 _146856 _146862 A.
Proof. exact (@lem8438368 _146851 _146856 _146862 A (@lem8438364 _146851 _146856 _146862 A)). Qed.
Lemma lem8438370 {_146851 _146856 _146862 A : Type'} : (term961 _146851 _146856 _146862 A) = (term962 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term961 _146851 _146856 _146862 A)). Qed.
Lemma lem8438371 {_146851 _146856 _146862 A : Type'} : term962 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438370 _146851 _146856 _146862 A) (@lem8438369 _146851 _146856 _146862 A)). Qed.
Lemma lem8438372 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term963 _146851 _146856 _146862 A s.
Proof. exact (@lem8438371 _146851 _146856 _146862 A s). Qed.
Lemma lem8438373 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term963 _146851 _146856 _146862 A s) = (term964 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term963 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438374 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term964 _146851 _146856 _146862 A s.
Proof. exact (EQ_MP (@lem8438373 _146851 _146856 _146862 A s) (@lem8438372 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438375 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term965 _146851 _146856 _146862 A s t.
Proof. exact (@lem8438374 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438376 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term965 _146851 _146856 _146862 A s t) = (term966 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term965 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438377 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term966 _146851 _146856 _146862 A s t.
Proof. exact (EQ_MP (@lem8438376 _146851 _146856 _146862 A s t) (@lem8438375 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438379 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438380 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b) = (a = b).
Proof. exact (@lem8438379 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438381 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term966 _146851 _146856 _146862 A s t) = ((term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t)).
Proof. exact (@lem8438380 _146851 _146856 _146862 A (term967 _146851 _146856 _146862 A s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438382 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438381 _146851 _146856 _146862 A s t) (@lem8438377 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438383 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438382 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438384 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A p1' p2') = (term939 _146851 _146856 _146862 A p1' p2').
Proof. exact (@lem8438383 _146851 _146856 _146862 A p1' p2'). Qed.
Lemma lem8438435 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (@pair (A -> _146851) (_146862 -> A -> _146856) p1 p2) = (@pair (A -> _146851) (_146862 -> A -> _146856) p1 p2).
Proof. exact (eq_refl (@pair (A -> _146851) (_146862 -> A -> _146856) p1 p2)). Qed.
Lemma lem8438436 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1' p2' p1 p2) = (term969 _146851 _146856 _146862 A p1' p2' p1 p2).
Proof. exact (MK_COMB (@lem8438384 _146851 _146856 _146862 A p1' p2') (@lem8438435 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438437 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438438 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438437 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438439 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438440 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438439 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438441 {_146851 A : Type'} (s' : A -> _146851) : s' = s'.
Proof. exact (eq_refl s'). Qed.
Lemma lem8438442 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438443 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438442 _146851 A) (@lem8438438 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438444 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438445 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (term923 _146851 A s').
Proof. exact (eq_refl (term923 _146851 A s')). Qed.
Lemma lem8438446 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438445 _146851 A s') (@lem8438444 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438447 {_146851 A : Type'} (s' : A -> _146851) : (term921 _146851 A s') = s'.
Proof. exact (eq_refl (term921 _146851 A s')). Qed.
Lemma lem8438448 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438449 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (@eq (A -> _146851) s').
Proof. exact (MK_COMB (@lem8438448 _146851 A) (@lem8438447 _146851 A s')). Qed.
Lemma lem8438450 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438451 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438449 _146851 A s') (@lem8438450 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438452 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438446 _146851 _146856 _146862 A s' t') (@lem8438451 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438453 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438452 _146851 _146856 _146862 A s' t') (@lem8438443 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438454 {_146851 A : Type'} (s' : A -> _146851) : (@eq (A -> _146851) s') = (@eq (A -> _146851) s').
Proof. exact (eq_refl (@eq (A -> _146851) s')). Qed.
Lemma lem8438455 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (s' = s') = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438454 _146851 A s') (@lem8438453 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438456 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438455 _146851 _146856 _146862 A s' t') (@lem8438441 _146851 A s')). Qed.
Lemma lem8438457 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8438458 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438459 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438458 _146856 _146862 A) (@lem8438440 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438460 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438461 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (term927 _146856 _146862 A t').
Proof. exact (eq_refl (term927 _146856 _146862 A t')). Qed.
Lemma lem8438462 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438461 _146856 _146862 A t') (@lem8438460 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438463 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = t'.
Proof. exact (eq_refl (term925 _146856 _146862 A t')). Qed.
Lemma lem8438464 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438465 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (MK_COMB (@lem8438464 _146856 _146862 A) (@lem8438463 _146856 _146862 A t')). Qed.
Lemma lem8438466 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438467 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438465 _146856 _146862 A t') (@lem8438466 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438468 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438462 _146851 _146856 _146862 A s' t') (@lem8438467 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438469 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438468 _146851 _146856 _146862 A s' t') (@lem8438459 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438470 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t')). Qed.
Lemma lem8438471 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (t' = t') = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438470 _146856 _146862 A t') (@lem8438469 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438472 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438471 _146851 _146856 _146862 A s' t') (@lem8438457 _146856 _146862 A t')). Qed.
Lemma lem8438473 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term970 _146851 _146856 _146862 A p1' p2') = (term970 _146851 _146856 _146862 A p1' p2').
Proof. exact (eq_refl (term970 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438474 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1' p2' s') = (term972 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (MK_COMB (@lem8438473 _146851 _146856 _146862 A p1' p2') (@lem8438456 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438475 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term972 _146851 _146856 _146862 A p1' p2' s' t') = (term973 _146851 _146856 _146862 A p1' s' t' p2').
Proof. exact (eq_refl (term972 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438476 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) : (term974 _146851 _146856 _146862 A p1' p2' s') = (term974 _146851 _146856 _146862 A p1' p2' s').
Proof. exact (eq_refl (term974 _146851 _146856 _146862 A p1' p2' s')). Qed.
Lemma lem8438477 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1' p2' s') = (term972 _146851 _146856 _146862 A p1' p2' s' t')) = ((term971 _146851 _146856 _146862 A p1' p2' s') = (term973 _146851 _146856 _146862 A p1' s' t' p2')).
Proof. exact (MK_COMB (@lem8438476 _146851 _146856 _146862 A p1' p2' s') (@lem8438475 _146851 _146856 _146862 A p1' s' t' p2')). Qed.
Lemma lem8438478 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1' p2' s') = (term975 _146851 _146856 _146862 A p1' s' p2').
Proof. exact (eq_refl (term971 _146851 _146856 _146862 A p1' p2' s')). Qed.
Lemma lem8438479 {_146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> Prop))). Qed.
Lemma lem8438480 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term974 _146851 _146856 _146862 A p1' p2' s') = (term976 _146851 _146856 _146862 A p1' s' p2').
Proof. exact (MK_COMB (@lem8438479 _146856 _146862 A) (@lem8438478 _146851 _146856 _146862 A p1' s' p2')). Qed.
Lemma lem8438481 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term973 _146851 _146856 _146862 A p1' s' t' p2') = (term973 _146851 _146856 _146862 A p1' s' t' p2').
Proof. exact (eq_refl (term973 _146851 _146856 _146862 A p1' s' t' p2')). Qed.
Lemma lem8438482 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1' p2' s') = (term973 _146851 _146856 _146862 A p1' s' t' p2')) = ((term975 _146851 _146856 _146862 A p1' s' p2') = (term973 _146851 _146856 _146862 A p1' s' t' p2')).
Proof. exact (MK_COMB (@lem8438480 _146851 _146856 _146862 A p1' s' p2') (@lem8438481 _146851 _146856 _146862 A p1' s' t' p2')). Qed.
Lemma lem8438483 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1' p2' s') = (term972 _146851 _146856 _146862 A p1' p2' s' t')) = ((term975 _146851 _146856 _146862 A p1' s' p2') = (term973 _146851 _146856 _146862 A p1' s' t' p2')).
Proof. exact (TRANS (@lem8438477 _146851 _146856 _146862 A p1' s' t' p2') (@lem8438482 _146851 _146856 _146862 A p1' s' t' p2')). Qed.
Lemma lem8438484 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term975 _146851 _146856 _146862 A p1' s' p2') = (term973 _146851 _146856 _146862 A p1' s' t' p2').
Proof. exact (EQ_MP (@lem8438483 _146851 _146856 _146862 A p1' s' t' p2') (@lem8438474 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438485 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1' s' p2' t') = (term978 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (MK_COMB (@lem8438484 _146851 _146856 _146862 A p1' s' t' p2') (@lem8438472 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438486 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term978 _146851 _146856 _146862 A p1' p2' s' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (eq_refl (term978 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438487 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1' s' p2' t') = (term980 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (eq_refl (term980 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438488 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1' s' p2' t') = (term978 _146851 _146856 _146862 A p1' p2' s' t')) = ((term977 _146851 _146856 _146862 A p1' s' p2' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t')).
Proof. exact (MK_COMB (@lem8438487 _146851 _146856 _146862 A p1' s' p2' t') (@lem8438486 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438489 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1' s' p2' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (eq_refl (term977 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438490 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8438491 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1' s' p2' t') = (term982 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (MK_COMB (@lem8438490) (@lem8438489 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438492 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1' p2' s' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (eq_refl (term979 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438493 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1' s' p2' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t')) = ((term981 _146851 _146856 _146862 A p1' s' p2' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t')).
Proof. exact (MK_COMB (@lem8438491 _146851 _146856 _146862 A p1' s' p2' t') (@lem8438492 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438494 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1' s' p2' t') = (term978 _146851 _146856 _146862 A p1' p2' s' t')) = ((term981 _146851 _146856 _146862 A p1' s' p2' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t')).
Proof. exact (TRANS (@lem8438488 _146851 _146856 _146862 A p1' p2' s' t') (@lem8438493 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438495 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1' s' p2' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (EQ_MP (@lem8438494 _146851 _146856 _146862 A p1' p2' s' t') (@lem8438485 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438496 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1' p2' s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (SYM (@lem8438495 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438497 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1' p2' s' t') = (term979 _146851 _146856 _146862 A p1' p2' s' t').
Proof. exact (eq_refl (term983 _146851 _146856 _146862 A p1' p2' s' t')). Qed.
Lemma lem8438498 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1' p2' s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (TRANS (@lem8438497 _146851 _146856 _146862 A p1' p2' s' t') (@lem8438496 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438499 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term984 _146851 _146856 _146862 A p1' s' p2'.
Proof. exact (fun t' : type1475 _146856 _146862 A => @lem8438498 _146851 _146856 _146862 A p1' s' p2' t'). Qed.
Lemma lem8438500 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term985 _146851 _146856 _146862 A p1' p2'.
Proof. exact (fun s' : A -> _146851 => @lem8438499 _146851 _146856 _146862 A p1' s' p2'). Qed.
Lemma lem8438501 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term986 _146851 _146856 _146862 A p1' p2'.
Proof. exact (ex_intro (term987 _146851 _146856 _146862 A p1' p2') (term988 _146851 _146856 _146862 A p1' p2') (@lem8438500 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438503 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438504 (a : Prop) (b : Prop) : (a = b) = (@GEQ Prop a b).
Proof. exact (@lem8438503 Prop a b). Qed.
Lemma lem8438505 {_146851 _146856 _146862 A : Type'} (_116961 : type1185 _146851 _146856 _146862 A) (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : ((term989 _146851 _146856 _146862 A _116961 s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t')) = (term990 _146851 _146856 _146862 A _116961 p1' s' p2' t').
Proof. exact (@lem8438504 (term989 _146851 _146856 _146862 A _116961 s' t') (term981 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438506 {_146851 _146856 _146862 A : Type'} (_116961 : type1185 _146851 _146856 _146862 A) (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term991 _146851 _146856 _146862 A _116961 p1' s' p2') = (term992 _146851 _146856 _146862 A _116961 p1' s' p2').
Proof. exact (fun_ext (fun t' : type1475 _146856 _146862 A => @lem8438505 _146851 _146856 _146862 A _116961 p1' s' p2' t')). Qed.
Lemma lem8438507 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438508 {_146851 _146856 _146862 A : Type'} (_116961 : type1185 _146851 _146856 _146862 A) (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term993 _146851 _146856 _146862 A _116961 p1' s' p2') = (term994 _146851 _146856 _146862 A _116961 p1' s' p2').
Proof. exact (MK_COMB (@lem8438507 _146856 _146862 A) (@lem8438506 _146851 _146856 _146862 A _116961 p1' s' p2')). Qed.
Lemma lem8438509 {_146851 _146856 _146862 A : Type'} (_116961 : type1185 _146851 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term995 _146851 _146856 _146862 A _116961 p1' p2') = (term996 _146851 _146856 _146862 A _116961 p1' p2').
Proof. exact (fun_ext (fun s' : A -> _146851 => @lem8438508 _146851 _146856 _146862 A _116961 p1' s' p2')). Qed.
Lemma lem8438510 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438511 {_146851 _146856 _146862 A : Type'} (_116961 : type1185 _146851 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term997 _146851 _146856 _146862 A _116961 p1' p2') = (term998 _146851 _146856 _146862 A _116961 p1' p2').
Proof. exact (MK_COMB (@lem8438510 _146851 A) (@lem8438509 _146851 _146856 _146862 A _116961 p1' p2')). Qed.
Lemma lem8438512 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term987 _146851 _146856 _146862 A p1' p2') = (term999 _146851 _146856 _146862 A p1' p2').
Proof. exact (fun_ext (fun _116961 : type1185 _146851 _146856 _146862 A => @lem8438511 _146851 _146856 _146862 A _116961 p1' p2')). Qed.
Lemma lem8438513 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438514 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term986 _146851 _146856 _146862 A p1' p2') = (term1000 _146851 _146856 _146862 A p1' p2').
Proof. exact (MK_COMB (@lem8438513 _146851 _146856 _146862 A) (@lem8438512 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438515 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term1000 _146851 _146856 _146862 A p1' p2'.
Proof. exact (EQ_MP (@lem8438514 _146851 _146856 _146862 A p1' p2') (@lem8438501 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438517 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438518 {_146851 _146856 _146862 A : Type'} (P : type312 _146851 _146856 _146862 A) : term1001 _146851 _146856 _146862 A P.
Proof. exact (@lem8438517 (type1185 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438519 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term1002 _146851 _146856 _146862 A p1' p2'.
Proof. exact (@lem8438518 _146851 _146856 _146862 A (term999 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438520 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term1003 _146851 _146856 _146862 A p1' p2'.
Proof. exact (@lem8438519 _146851 _146856 _146862 A p1' p2' (@lem8438515 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438521 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term1003 _146851 _146856 _146862 A p1' p2') = (term1004 _146851 _146856 _146862 A p1' p2').
Proof. exact (eq_refl (term1003 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438522 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term1004 _146851 _146856 _146862 A p1' p2'.
Proof. exact (EQ_MP (@lem8438521 _146851 _146856 _146862 A p1' p2') (@lem8438520 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438523 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (s' : A -> _146851) : term1005 _146851 _146856 _146862 A p1' p2' s'.
Proof. exact (@lem8438522 _146851 _146856 _146862 A p1' p2' s'). Qed.
Lemma lem8438524 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term1005 _146851 _146856 _146862 A p1' p2' s') = (term1006 _146851 _146856 _146862 A p1' s' p2').
Proof. exact (eq_refl (term1005 _146851 _146856 _146862 A p1' p2' s')). Qed.
Lemma lem8438525 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) : term1006 _146851 _146856 _146862 A p1' s' p2'.
Proof. exact (EQ_MP (@lem8438524 _146851 _146856 _146862 A p1' s' p2') (@lem8438523 _146851 _146856 _146862 A p1' p2' s')). Qed.
Lemma lem8438526 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1007 _146851 _146856 _146862 A p1' s' p2' t'.
Proof. exact (@lem8438525 _146851 _146856 _146862 A p1' s' p2' t'). Qed.
Lemma lem8438527 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1007 _146851 _146856 _146862 A p1' s' p2' t') = (term1008 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (eq_refl (term1007 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438528 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1008 _146851 _146856 _146862 A p1' s' p2' t'.
Proof. exact (EQ_MP (@lem8438527 _146851 _146856 _146862 A p1' s' p2' t') (@lem8438526 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438530 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438531 (a : Prop) (b : Prop) : (@GEQ Prop a b) = (a = b).
Proof. exact (@lem8438530 Prop a b). Qed.
Lemma lem8438532 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1008 _146851 _146856 _146862 A p1' s' p2' t') = ((term969 _146851 _146856 _146862 A p1' p2' s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t')).
Proof. exact (@lem8438531 (term969 _146851 _146856 _146862 A p1' p2' s' t') (term981 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438533 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1' p2' s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (EQ_MP (@lem8438532 _146851 _146856 _146862 A p1' s' p2' t') (@lem8438528 _146851 _146856 _146862 A p1' s' p2' t')). Qed.
Lemma lem8438534 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (s' : A -> _146851) (p2' : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1' p2' s' t') = (term981 _146851 _146856 _146862 A p1' s' p2' t').
Proof. exact (@lem8438533 _146851 _146856 _146862 A p1' s' p2' t'). Qed.
Lemma lem8438535 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1' p2' p1 p2) = (term981 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (@lem8438534 _146851 _146856 _146862 A p1' p1 p2' p2). Qed.
Lemma lem8438568 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1' p2' p1 p2) = (term981 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (TRANS (@lem8438436 _146851 _146856 _146862 A p1' p2' p1 p2) (@lem8438535 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8438569 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term910 _146851 _146856 _146862 A p1' p2' p1 p2) = (term1011 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (MK_COMB (@lem8438285 _146851 _146856 _146862 A p1 p1' p2 p2') (@lem8438568 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8438572 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term912 _146851 _146856 _146862 A p1' p1 p2) = (term1012 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (fun_ext (fun p2' : type1475 _146856 _146862 A => @lem8438569 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8438575 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438576 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term914 _146851 _146856 _146862 A p1' p1 p2) = (term1013 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (MK_COMB (@lem8438575 _146856 _146862 A) (@lem8438572 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8438583 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term916 _146851 _146856 _146862 A p1 p2) = (term1014 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun p1' : A -> _146851 => @lem8438576 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8438586 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438587 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term917 _146851 _146856 _146862 A p1 p2) = (term1015 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8438586 _146851 A) (@lem8438583 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438594 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term893 _146851 _146856 _146862 A p1 p2) = (term1015 _146851 _146856 _146862 A p1 p2).
Proof. exact (TRANS (@lem8437982 _146851 _146856 _146862 A p1 p2) (@lem8438587 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438595 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term895 _146851 _146856 _146862 A p1) = (term1016 _146851 _146856 _146862 A p1).
Proof. exact (fun_ext (fun p2 : type1475 _146856 _146862 A => @lem8438594 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438598 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438599 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term897 _146851 _146856 _146862 A p1) = (term1017 _146851 _146856 _146862 A p1).
Proof. exact (MK_COMB (@lem8438598 _146856 _146862 A) (@lem8438595 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8438606 {_146851 _146856 _146862 A : Type'} : (term899 _146851 _146856 _146862 A) = (term1018 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun p1 : A -> _146851 => @lem8438599 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8438609 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438610 {_146851 _146856 _146862 A : Type'} : (term900 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438609 _146851 A) (@lem8438606 _146851 _146856 _146862 A)). Qed.
Lemma lem8438617 {_146851 _146856 _146862 A : Type'} : (term889 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (TRANS (@lem8437943 _146851 _146856 _146862 A) (@lem8438610 _146851 _146856 _146862 A)). Qed.
Lemma lem8438618 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8438619 {_146851 _146856 _146862 A : Type'} : (term1020 _146851 _146856 _146862 A) = (term1021 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438618) (@lem8438617 _146851 _146856 _146862 A)). Qed.
Lemma lem8438635 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term801 _5106 _5107 P) = (term802 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8437917 _5106 _5107 P) (@lem8437916 _5106 _5107 P)). Qed.
Lemma lem8438636 {_146851 _146856 _146862 A : Type'} (P : type1185 _146851 _146856 _146862 A) : (term881 _146851 _146856 _146862 A P) = (term882 _146851 _146856 _146862 A P).
Proof. exact (@lem8438635 (type1475 _146856 _146862 A) (A -> _146851) P). Qed.
Lemma lem8438637 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1022 _146851 _146856 _146862 A l) = (term1023 _146851 _146856 _146862 A l).
Proof. exact (@lem8438636 _146851 _146856 _146862 A (term1024 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438638 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (x : type1647 _146851 _146856 _146862 A) : (term1025 _146851 _146856 _146862 A l x) = (term1026 _146851 _146856 _146862 A l x).
Proof. exact (eq_refl (term1025 _146851 _146856 _146862 A l x)). Qed.
Lemma lem8438639 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1027 _146851 _146856 _146862 A l) = (term1024 _146851 _146856 _146862 A l).
Proof. exact (fun_ext (fun x : type1647 _146851 _146856 _146862 A => @lem8438638 _146851 _146856 _146862 A l x)). Qed.
Lemma lem8438640 {_146851 _146856 _146862 A : Type'} : (@all (prod (A -> _146851) (_146862 -> A -> _146856))) = (@all (prod (A -> _146851) (_146862 -> A -> _146856))).
Proof. exact (eq_refl (@all (prod (A -> _146851) (_146862 -> A -> _146856)))). Qed.
Lemma lem8438641 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1022 _146851 _146856 _146862 A l) = (term1028 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8438640 _146851 _146856 _146862 A) (@lem8438639 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438642 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8438643 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1029 _146851 _146856 _146862 A l) = (term1030 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8438642) (@lem8438641 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438644 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1031 _146851 _146856 _146862 A l p1 p2) = (term1032 _146851 _146856 _146862 A l p1 p2).
Proof. exact (eq_refl (term1031 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438645 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) : (term1033 _146851 _146856 _146862 A l p1) = (term1034 _146851 _146856 _146862 A l p1).
Proof. exact (fun_ext (fun p2 : type1475 _146856 _146862 A => @lem8438644 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438646 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438647 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) : (term1035 _146851 _146856 _146862 A l p1) = (term1036 _146851 _146856 _146862 A l p1).
Proof. exact (MK_COMB (@lem8438646 _146856 _146862 A) (@lem8438645 _146851 _146856 _146862 A l p1)). Qed.
Lemma lem8438648 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1037 _146851 _146856 _146862 A l) = (term1038 _146851 _146856 _146862 A l).
Proof. exact (fun_ext (fun p1 : A -> _146851 => @lem8438647 _146851 _146856 _146862 A l p1)). Qed.
Lemma lem8438649 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438650 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1023 _146851 _146856 _146862 A l) = (term1039 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8438649 _146851 A) (@lem8438648 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438651 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : ((term1022 _146851 _146856 _146862 A l) = (term1023 _146851 _146856 _146862 A l)) = ((term1028 _146851 _146856 _146862 A l) = (term1039 _146851 _146856 _146862 A l)).
Proof. exact (MK_COMB (@lem8438643 _146851 _146856 _146862 A l) (@lem8438650 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438652 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1028 _146851 _146856 _146862 A l) = (term1039 _146851 _146856 _146862 A l).
Proof. exact (EQ_MP (@lem8438651 _146851 _146856 _146862 A l) (@lem8438637 _146851 _146856 _146862 A l)). Qed.
Lemma lem8438674 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term801 _5106 _5107 P) = (term802 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8437917 _5106 _5107 P) (@lem8437916 _5106 _5107 P)). Qed.
Lemma lem8438675 {_146851 _146856 _146862 A : Type'} (P : type1185 _146851 _146856 _146862 A) : (term881 _146851 _146856 _146862 A P) = (term882 _146851 _146856 _146862 A P).
Proof. exact (@lem8438674 (type1475 _146856 _146862 A) (A -> _146851) P). Qed.
Lemma lem8438676 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1040 _146851 _146856 _146862 A l p1 p2) = (term1041 _146851 _146856 _146862 A l p1 p2).
Proof. exact (@lem8438675 _146851 _146856 _146862 A (term1042 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438677 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (y : type1647 _146851 _146856 _146862 A) : (term1043 _146851 _146856 _146862 A l p1 p2 y) = (term1044 _146851 _146856 _146862 A l p1 p2 y).
Proof. exact (eq_refl (term1043 _146851 _146856 _146862 A l p1 p2 y)). Qed.
Lemma lem8438678 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1045 _146851 _146856 _146862 A l p1 p2) = (term1042 _146851 _146856 _146862 A l p1 p2).
Proof. exact (fun_ext (fun y : type1647 _146851 _146856 _146862 A => @lem8438677 _146851 _146856 _146862 A l p1 p2 y)). Qed.
Lemma lem8438679 {_146851 _146856 _146862 A : Type'} : (@all (prod (A -> _146851) (_146862 -> A -> _146856))) = (@all (prod (A -> _146851) (_146862 -> A -> _146856))).
Proof. exact (eq_refl (@all (prod (A -> _146851) (_146862 -> A -> _146856)))). Qed.
Lemma lem8438680 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1040 _146851 _146856 _146862 A l p1 p2) = (term1032 _146851 _146856 _146862 A l p1 p2).
Proof. exact (MK_COMB (@lem8438679 _146851 _146856 _146862 A) (@lem8438678 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438681 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8438682 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1046 _146851 _146856 _146862 A l p1 p2) = (term1047 _146851 _146856 _146862 A l p1 p2).
Proof. exact (MK_COMB (@lem8438681) (@lem8438680 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438683 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term1048 _146851 _146856 _146862 A l p1 p2 p1' p2') = (term1049 _146851 _146856 _146862 A l p1 p2 p1' p2').
Proof. exact (eq_refl (term1048 _146851 _146856 _146862 A l p1 p2 p1' p2')). Qed.
Lemma lem8438684 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) : (term1050 _146851 _146856 _146862 A l p1 p2 p1') = (term1051 _146851 _146856 _146862 A l p1 p2 p1').
Proof. exact (fun_ext (fun p2' : type1475 _146856 _146862 A => @lem8438683 _146851 _146856 _146862 A l p1 p2 p1' p2')). Qed.
Lemma lem8438685 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438686 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) : (term1052 _146851 _146856 _146862 A l p1 p2 p1') = (term1053 _146851 _146856 _146862 A l p1 p2 p1').
Proof. exact (MK_COMB (@lem8438685 _146856 _146862 A) (@lem8438684 _146851 _146856 _146862 A l p1 p2 p1')). Qed.
Lemma lem8438687 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1054 _146851 _146856 _146862 A l p1 p2) = (term1055 _146851 _146856 _146862 A l p1 p2).
Proof. exact (fun_ext (fun p1' : A -> _146851 => @lem8438686 _146851 _146856 _146862 A l p1 p2 p1')). Qed.
Lemma lem8438688 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438689 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1041 _146851 _146856 _146862 A l p1 p2) = (term1056 _146851 _146856 _146862 A l p1 p2).
Proof. exact (MK_COMB (@lem8438688 _146851 A) (@lem8438687 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438690 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : ((term1040 _146851 _146856 _146862 A l p1 p2) = (term1041 _146851 _146856 _146862 A l p1 p2)) = ((term1032 _146851 _146856 _146862 A l p1 p2) = (term1056 _146851 _146856 _146862 A l p1 p2)).
Proof. exact (MK_COMB (@lem8438682 _146851 _146856 _146862 A l p1 p2) (@lem8438689 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438691 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1032 _146851 _146856 _146862 A l p1 p2) = (term1056 _146851 _146856 _146862 A l p1 p2).
Proof. exact (EQ_MP (@lem8438690 _146851 _146856 _146862 A l p1 p2) (@lem8438676 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8438712 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438713 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438712 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438714 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438715 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438714 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438716 {_146851 A : Type'} (s : A -> _146851) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8438717 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438718 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438717 _146851 A) (@lem8438713 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438719 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438720 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (term923 _146851 A s).
Proof. exact (eq_refl (term923 _146851 A s)). Qed.
Lemma lem8438721 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438720 _146851 A s) (@lem8438719 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438722 {_146851 A : Type'} (s : A -> _146851) : (term921 _146851 A s) = s.
Proof. exact (eq_refl (term921 _146851 A s)). Qed.
Lemma lem8438723 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438724 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (@eq (A -> _146851) s).
Proof. exact (MK_COMB (@lem8438723 _146851 A) (@lem8438722 _146851 A s)). Qed.
Lemma lem8438725 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438726 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438724 _146851 A s) (@lem8438725 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438727 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438721 _146851 _146856 _146862 A s t) (@lem8438726 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438728 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438727 _146851 _146856 _146862 A s t) (@lem8438718 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438729 {_146851 A : Type'} (s : A -> _146851) : (@eq (A -> _146851) s) = (@eq (A -> _146851) s).
Proof. exact (eq_refl (@eq (A -> _146851) s)). Qed.
Lemma lem8438730 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (s = s) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438729 _146851 A s) (@lem8438728 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438731 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438730 _146851 _146856 _146862 A s t) (@lem8438716 _146851 A s)). Qed.
Lemma lem8438732 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8438733 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438734 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438733 _146856 _146862 A) (@lem8438715 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438735 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438736 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (term927 _146856 _146862 A t).
Proof. exact (eq_refl (term927 _146856 _146862 A t)). Qed.
Lemma lem8438737 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438736 _146856 _146862 A t) (@lem8438735 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438738 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = t.
Proof. exact (eq_refl (term925 _146856 _146862 A t)). Qed.
Lemma lem8438739 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438740 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (MK_COMB (@lem8438739 _146856 _146862 A) (@lem8438738 _146856 _146862 A t)). Qed.
Lemma lem8438741 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438742 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438740 _146856 _146862 A t) (@lem8438741 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438743 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438737 _146851 _146856 _146862 A s t) (@lem8438742 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438744 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438743 _146851 _146856 _146862 A s t) (@lem8438734 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438745 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t)). Qed.
Lemma lem8438746 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (t = t) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438745 _146856 _146862 A t) (@lem8438744 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438747 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438746 _146851 _146856 _146862 A s t) (@lem8438732 _146856 _146862 A t)). Qed.
Lemma lem8438748 {_146851 _146856 _146862 A : Type'} : (term928 _146851 _146856 _146862 A) = (term928 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term928 _146851 _146856 _146862 A)). Qed.
Lemma lem8438749 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438748 _146851 _146856 _146862 A) (@lem8438731 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438750 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term930 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term930 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438751 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term932 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term932 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438752 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438751 _146851 _146856 _146862 A s) (@lem8438750 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438753 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term929 _146851 _146856 _146862 A s) = (term933 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term929 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438754 {_146851 _146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438755 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term934 _146851 _146856 _146862 A s).
Proof. exact (MK_COMB (@lem8438754 _146851 _146856 _146862 A) (@lem8438753 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438756 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term931 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term931 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438757 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438755 _146851 _146856 _146862 A s) (@lem8438756 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438758 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438752 _146851 _146856 _146862 A s t) (@lem8438757 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438759 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438758 _146851 _146856 _146862 A s t) (@lem8438749 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438760 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438759 _146851 _146856 _146862 A s t) (@lem8438747 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438761 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term936 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term936 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438762 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term938 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term938 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438763 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438762 _146851 _146856 _146862 A s t) (@lem8438761 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438764 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term935 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438765 {_146851 _146856 _146862 A : Type'} : (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438766 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term940 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8438765 _146851 _146856 _146862 A) (@lem8438764 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438767 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term937 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438768 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8438766 _146851 _146856 _146862 A s t) (@lem8438767 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438769 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8438763 _146851 _146856 _146862 A s t) (@lem8438768 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438770 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438769 _146851 _146856 _146862 A s t) (@lem8438760 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438771 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (SYM (@lem8438770 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438772 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term941 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438773 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (TRANS (@lem8438772 _146851 _146856 _146862 A s t) (@lem8438771 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438774 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term942 _146851 _146856 _146862 A s.
Proof. exact (fun t : type1475 _146856 _146862 A => @lem8438773 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438775 {_146851 _146856 _146862 A : Type'} : term943 _146851 _146856 _146862 A.
Proof. exact (fun s : A -> _146851 => @lem8438774 _146851 _146856 _146862 A s). Qed.
Lemma lem8438776 {_146851 _146856 _146862 A : Type'} : term944 _146851 _146856 _146862 A.
Proof. exact (ex_intro (term945 _146851 _146856 _146862 A) (term946 _146851 _146856 _146862 A) (@lem8438775 _146851 _146856 _146862 A)). Qed.
Lemma lem8438778 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438779 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (a = b) = (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b).
Proof. exact (@lem8438778 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438780 {_146851 _146856 _146862 A : Type'} (_116973 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term947 _146851 _146856 _146862 A _116973 s t) = (term939 _146851 _146856 _146862 A s t)) = (term948 _146851 _146856 _146862 A _116973 s t).
Proof. exact (@lem8438779 _146851 _146856 _146862 A (term947 _146851 _146856 _146862 A _116973 s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438781 {_146851 _146856 _146862 A : Type'} (_116973 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term949 _146851 _146856 _146862 A _116973 s) = (term950 _146851 _146856 _146862 A _116973 s).
Proof. exact (fun_ext (fun t : type1475 _146856 _146862 A => @lem8438780 _146851 _146856 _146862 A _116973 s t)). Qed.
Lemma lem8438782 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438783 {_146851 _146856 _146862 A : Type'} (_116973 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term951 _146851 _146856 _146862 A _116973 s) = (term952 _146851 _146856 _146862 A _116973 s).
Proof. exact (MK_COMB (@lem8438782 _146856 _146862 A) (@lem8438781 _146851 _146856 _146862 A _116973 s)). Qed.
Lemma lem8438784 {_146851 _146856 _146862 A : Type'} (_116973 : type1182 _146851 _146856 _146862 A) : (term953 _146851 _146856 _146862 A _116973) = (term954 _146851 _146856 _146862 A _116973).
Proof. exact (fun_ext (fun s : A -> _146851 => @lem8438783 _146851 _146856 _146862 A _116973 s)). Qed.
Lemma lem8438785 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438786 {_146851 _146856 _146862 A : Type'} (_116973 : type1182 _146851 _146856 _146862 A) : (term955 _146851 _146856 _146862 A _116973) = (term956 _146851 _146856 _146862 A _116973).
Proof. exact (MK_COMB (@lem8438785 _146851 A) (@lem8438784 _146851 _146856 _146862 A _116973)). Qed.
Lemma lem8438787 {_146851 _146856 _146862 A : Type'} : (term945 _146851 _146856 _146862 A) = (term957 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun _116973 : type1182 _146851 _146856 _146862 A => @lem8438786 _146851 _146856 _146862 A _116973)). Qed.
Lemma lem8438788 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438789 {_146851 _146856 _146862 A : Type'} : (term944 _146851 _146856 _146862 A) = (term958 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438788 _146851 _146856 _146862 A) (@lem8438787 _146851 _146856 _146862 A)). Qed.
Lemma lem8438790 {_146851 _146856 _146862 A : Type'} : term958 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438789 _146851 _146856 _146862 A) (@lem8438776 _146851 _146856 _146862 A)). Qed.
Lemma lem8438792 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438793 {_146851 _146856 _146862 A : Type'} (P : type307 _146851 _146856 _146862 A) : term959 _146851 _146856 _146862 A P.
Proof. exact (@lem8438792 (type1182 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438794 {_146851 _146856 _146862 A : Type'} : term960 _146851 _146856 _146862 A.
Proof. exact (@lem8438793 _146851 _146856 _146862 A (term957 _146851 _146856 _146862 A)). Qed.
Lemma lem8438795 {_146851 _146856 _146862 A : Type'} : term961 _146851 _146856 _146862 A.
Proof. exact (@lem8438794 _146851 _146856 _146862 A (@lem8438790 _146851 _146856 _146862 A)). Qed.
Lemma lem8438796 {_146851 _146856 _146862 A : Type'} : (term961 _146851 _146856 _146862 A) = (term962 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term961 _146851 _146856 _146862 A)). Qed.
Lemma lem8438797 {_146851 _146856 _146862 A : Type'} : term962 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8438796 _146851 _146856 _146862 A) (@lem8438795 _146851 _146856 _146862 A)). Qed.
Lemma lem8438798 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term963 _146851 _146856 _146862 A s.
Proof. exact (@lem8438797 _146851 _146856 _146862 A s). Qed.
Lemma lem8438799 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term963 _146851 _146856 _146862 A s) = (term964 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term963 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438800 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term964 _146851 _146856 _146862 A s.
Proof. exact (EQ_MP (@lem8438799 _146851 _146856 _146862 A s) (@lem8438798 _146851 _146856 _146862 A s)). Qed.
Lemma lem8438801 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term965 _146851 _146856 _146862 A s t.
Proof. exact (@lem8438800 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438802 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term965 _146851 _146856 _146862 A s t) = (term966 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term965 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438803 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term966 _146851 _146856 _146862 A s t.
Proof. exact (EQ_MP (@lem8438802 _146851 _146856 _146862 A s t) (@lem8438801 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438805 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438806 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b) = (a = b).
Proof. exact (@lem8438805 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8438807 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term966 _146851 _146856 _146862 A s t) = ((term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t)).
Proof. exact (@lem8438806 _146851 _146856 _146862 A (term967 _146851 _146856 _146862 A s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438808 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8438807 _146851 _146856 _146862 A s t) (@lem8438803 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8438809 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (@lem8438808 _146851 _146856 _146862 A s t). Qed.
Lemma lem8438810 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A p1 p2) = (term939 _146851 _146856 _146862 A p1 p2).
Proof. exact (@lem8438809 _146851 _146856 _146862 A p1 p2). Qed.
Lemma lem8438861 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2') = (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2').
Proof. exact (eq_refl (@pair (A -> _146851) (_146862 -> A -> _146856) p1' p2')). Qed.
Lemma lem8438862 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1 p2 p1' p2') = (term969 _146851 _146856 _146862 A p1 p2 p1' p2').
Proof. exact (MK_COMB (@lem8438810 _146851 _146856 _146862 A p1 p2) (@lem8438861 _146851 _146856 _146862 A p1' p2')). Qed.
Lemma lem8438863 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438864 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438863 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438865 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8438866 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8438865 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8438867 {_146851 A : Type'} (s' : A -> _146851) : s' = s'.
Proof. exact (eq_refl s'). Qed.
Lemma lem8438868 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8438869 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438868 _146851 A) (@lem8438864 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438870 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438871 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (term923 _146851 A s').
Proof. exact (eq_refl (term923 _146851 A s')). Qed.
Lemma lem8438872 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438871 _146851 A s') (@lem8438870 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438873 {_146851 A : Type'} (s' : A -> _146851) : (term921 _146851 A s') = s'.
Proof. exact (eq_refl (term921 _146851 A s')). Qed.
Lemma lem8438874 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8438875 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (@eq (A -> _146851) s').
Proof. exact (MK_COMB (@lem8438874 _146851 A) (@lem8438873 _146851 A s')). Qed.
Lemma lem8438876 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438877 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438875 _146851 A s') (@lem8438876 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438878 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438872 _146851 _146856 _146862 A s' t') (@lem8438877 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438879 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438878 _146851 _146856 _146862 A s' t') (@lem8438869 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438880 {_146851 A : Type'} (s' : A -> _146851) : (@eq (A -> _146851) s') = (@eq (A -> _146851) s').
Proof. exact (eq_refl (@eq (A -> _146851) s')). Qed.
Lemma lem8438881 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (s' = s') = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438880 _146851 A s') (@lem8438879 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438882 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438881 _146851 _146856 _146862 A s' t') (@lem8438867 _146851 A s')). Qed.
Lemma lem8438883 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8438884 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8438885 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8438884 _146856 _146862 A) (@lem8438866 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438886 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438887 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (term927 _146856 _146862 A t').
Proof. exact (eq_refl (term927 _146856 _146862 A t')). Qed.
Lemma lem8438888 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438887 _146856 _146862 A t') (@lem8438886 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438889 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = t'.
Proof. exact (eq_refl (term925 _146856 _146862 A t')). Qed.
Lemma lem8438890 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8438891 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (MK_COMB (@lem8438890 _146856 _146862 A) (@lem8438889 _146856 _146862 A t')). Qed.
Lemma lem8438892 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438893 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438891 _146856 _146862 A t') (@lem8438892 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438894 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8438888 _146851 _146856 _146862 A s' t') (@lem8438893 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438895 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438894 _146851 _146856 _146862 A s' t') (@lem8438885 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438896 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t')). Qed.
Lemma lem8438897 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (t' = t') = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8438896 _146856 _146862 A t') (@lem8438895 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438898 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8438897 _146851 _146856 _146862 A s' t') (@lem8438883 _146856 _146862 A t')). Qed.
Lemma lem8438899 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term970 _146851 _146856 _146862 A p1 p2) = (term970 _146851 _146856 _146862 A p1 p2).
Proof. exact (eq_refl (term970 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438900 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (MK_COMB (@lem8438899 _146851 _146856 _146862 A p1 p2) (@lem8438882 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438901 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term972 _146851 _146856 _146862 A p1 p2 s' t') = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (eq_refl (term972 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438902 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) : (term974 _146851 _146856 _146862 A p1 p2 s') = (term974 _146851 _146856 _146862 A p1 p2 s').
Proof. exact (eq_refl (term974 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438903 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t')) = ((term971 _146851 _146856 _146862 A p1 p2 s') = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (MK_COMB (@lem8438902 _146851 _146856 _146862 A p1 p2 s') (@lem8438901 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438904 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A p1 p2 s') = (term975 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (eq_refl (term971 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438905 {_146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> Prop))). Qed.
Lemma lem8438906 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term974 _146851 _146856 _146862 A p1 p2 s') = (term976 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (MK_COMB (@lem8438905 _146856 _146862 A) (@lem8438904 _146851 _146856 _146862 A p1 s' p2)). Qed.
Lemma lem8438907 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term973 _146851 _146856 _146862 A p1 s' t' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (eq_refl (term973 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438908 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term973 _146851 _146856 _146862 A p1 s' t' p2)) = ((term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (MK_COMB (@lem8438906 _146851 _146856 _146862 A p1 s' p2) (@lem8438907 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438909 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A p1 p2 s') = (term972 _146851 _146856 _146862 A p1 p2 s' t')) = ((term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2)).
Proof. exact (TRANS (@lem8438903 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438908 _146851 _146856 _146862 A p1 s' t' p2)). Qed.
Lemma lem8438910 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term975 _146851 _146856 _146862 A p1 s' p2) = (term973 _146851 _146856 _146862 A p1 s' t' p2).
Proof. exact (EQ_MP (@lem8438909 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438900 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438911 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (MK_COMB (@lem8438910 _146851 _146856 _146862 A p1 s' t' p2) (@lem8438898 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8438912 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term978 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term978 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438913 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1 s' p2 t') = (term980 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term980 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438914 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t')) = ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (MK_COMB (@lem8438913 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438912 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438915 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A p1 s' p2 t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term977 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8438917 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A p1 s' p2 t') = (term982 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (MK_COMB (@lem8438916) (@lem8438915 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438918 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term979 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438919 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')) = ((term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (MK_COMB (@lem8438917 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438918 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438920 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A p1 s' p2 t') = (term978 _146851 _146856 _146862 A p1 p2 s' t')) = ((term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t')).
Proof. exact (TRANS (@lem8438914 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438919 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438921 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1 s' p2 t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (EQ_MP (@lem8438920 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438911 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438922 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (SYM (@lem8438921 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438923 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1 p2 s' t') = (term979 _146851 _146856 _146862 A p1 p2 s' t').
Proof. exact (eq_refl (term983 _146851 _146856 _146862 A p1 p2 s' t')). Qed.
Lemma lem8438924 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (TRANS (@lem8438923 _146851 _146856 _146862 A p1 p2 s' t') (@lem8438922 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438925 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : term984 _146851 _146856 _146862 A p1 s' p2.
Proof. exact (fun t' : type1475 _146856 _146862 A => @lem8438924 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438926 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term985 _146851 _146856 _146862 A p1 p2.
Proof. exact (fun s' : A -> _146851 => @lem8438925 _146851 _146856 _146862 A p1 s' p2). Qed.
Lemma lem8438927 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term986 _146851 _146856 _146862 A p1 p2.
Proof. exact (ex_intro (term987 _146851 _146856 _146862 A p1 p2) (term988 _146851 _146856 _146862 A p1 p2) (@lem8438926 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438929 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8438930 (a : Prop) (b : Prop) : (a = b) = (@GEQ Prop a b).
Proof. exact (@lem8438929 Prop a b). Qed.
Lemma lem8438931 {_146851 _146856 _146862 A : Type'} (_116985 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : ((term989 _146851 _146856 _146862 A _116985 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t')) = (term990 _146851 _146856 _146862 A _116985 p1 s' p2 t').
Proof. exact (@lem8438930 (term989 _146851 _146856 _146862 A _116985 s' t') (term981 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438932 {_146851 _146856 _146862 A : Type'} (_116985 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term991 _146851 _146856 _146862 A _116985 p1 s' p2) = (term992 _146851 _146856 _146862 A _116985 p1 s' p2).
Proof. exact (fun_ext (fun t' : type1475 _146856 _146862 A => @lem8438931 _146851 _146856 _146862 A _116985 p1 s' p2 t')). Qed.
Lemma lem8438933 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8438934 {_146851 _146856 _146862 A : Type'} (_116985 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term993 _146851 _146856 _146862 A _116985 p1 s' p2) = (term994 _146851 _146856 _146862 A _116985 p1 s' p2).
Proof. exact (MK_COMB (@lem8438933 _146856 _146862 A) (@lem8438932 _146851 _146856 _146862 A _116985 p1 s' p2)). Qed.
Lemma lem8438935 {_146851 _146856 _146862 A : Type'} (_116985 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term995 _146851 _146856 _146862 A _116985 p1 p2) = (term996 _146851 _146856 _146862 A _116985 p1 p2).
Proof. exact (fun_ext (fun s' : A -> _146851 => @lem8438934 _146851 _146856 _146862 A _116985 p1 s' p2)). Qed.
Lemma lem8438936 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8438937 {_146851 _146856 _146862 A : Type'} (_116985 : type1185 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term997 _146851 _146856 _146862 A _116985 p1 p2) = (term998 _146851 _146856 _146862 A _116985 p1 p2).
Proof. exact (MK_COMB (@lem8438936 _146851 A) (@lem8438935 _146851 _146856 _146862 A _116985 p1 p2)). Qed.
Lemma lem8438938 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term987 _146851 _146856 _146862 A p1 p2) = (term999 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun _116985 : type1185 _146851 _146856 _146862 A => @lem8438937 _146851 _146856 _146862 A _116985 p1 p2)). Qed.
Lemma lem8438939 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8438940 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term986 _146851 _146856 _146862 A p1 p2) = (term1000 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8438939 _146851 _146856 _146862 A) (@lem8438938 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438941 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1000 _146851 _146856 _146862 A p1 p2.
Proof. exact (EQ_MP (@lem8438940 _146851 _146856 _146862 A p1 p2) (@lem8438927 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438943 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8438944 {_146851 _146856 _146862 A : Type'} (P : type312 _146851 _146856 _146862 A) : term1001 _146851 _146856 _146862 A P.
Proof. exact (@lem8438943 (type1185 _146851 _146856 _146862 A) P). Qed.
Lemma lem8438945 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1002 _146851 _146856 _146862 A p1 p2.
Proof. exact (@lem8438944 _146851 _146856 _146862 A (term999 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438946 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1003 _146851 _146856 _146862 A p1 p2.
Proof. exact (@lem8438945 _146851 _146856 _146862 A p1 p2 (@lem8438941 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438947 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1003 _146851 _146856 _146862 A p1 p2) = (term1004 _146851 _146856 _146862 A p1 p2).
Proof. exact (eq_refl (term1003 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438948 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1004 _146851 _146856 _146862 A p1 p2.
Proof. exact (EQ_MP (@lem8438947 _146851 _146856 _146862 A p1 p2) (@lem8438946 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8438949 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (s' : A -> _146851) : term1005 _146851 _146856 _146862 A p1 p2 s'.
Proof. exact (@lem8438948 _146851 _146856 _146862 A p1 p2 s'). Qed.
Lemma lem8438950 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1005 _146851 _146856 _146862 A p1 p2 s') = (term1006 _146851 _146856 _146862 A p1 s' p2).
Proof. exact (eq_refl (term1005 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438951 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1006 _146851 _146856 _146862 A p1 s' p2.
Proof. exact (EQ_MP (@lem8438950 _146851 _146856 _146862 A p1 s' p2) (@lem8438949 _146851 _146856 _146862 A p1 p2 s')). Qed.
Lemma lem8438952 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1007 _146851 _146856 _146862 A p1 s' p2 t'.
Proof. exact (@lem8438951 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438953 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1007 _146851 _146856 _146862 A p1 s' p2 t') = (term1008 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (eq_refl (term1007 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438954 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1008 _146851 _146856 _146862 A p1 s' p2 t'.
Proof. exact (EQ_MP (@lem8438953 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438952 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438956 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8438957 (a : Prop) (b : Prop) : (@GEQ Prop a b) = (a = b).
Proof. exact (@lem8438956 Prop a b). Qed.
Lemma lem8438958 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1008 _146851 _146856 _146862 A p1 s' p2 t') = ((term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t')).
Proof. exact (@lem8438957 (term969 _146851 _146856 _146862 A p1 p2 s' t') (term981 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438959 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (EQ_MP (@lem8438958 _146851 _146856 _146862 A p1 s' p2 t') (@lem8438954 _146851 _146856 _146862 A p1 s' p2 t')). Qed.
Lemma lem8438960 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (s' : A -> _146851) (p2 : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 s' t') = (term981 _146851 _146856 _146862 A p1 s' p2 t').
Proof. exact (@lem8438959 _146851 _146856 _146862 A p1 s' p2 t'). Qed.
Lemma lem8438961 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A p1 p2 p1' p2') = (term981 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (@lem8438960 _146851 _146856 _146862 A p1 p1' p2 p2'). Qed.
Lemma lem8438994 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term968 _146851 _146856 _146862 A p1 p2 p1' p2') = (term981 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (TRANS (@lem8438862 _146851 _146856 _146862 A p1 p2 p1' p2') (@lem8438961 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8438995 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) (p1' : A -> _146851) (p2' : type1475 _146856 _146862 A) (l : type1638 _146851 _146856 _146862 A) : (term1057 _146851 _146856 _146862 A p1 p2 p1' p2' l) = (term1057 _146851 _146856 _146862 A p1 p2 p1' p2' l).
Proof. exact (eq_refl (term1057 _146851 _146856 _146862 A p1 p2 p1' p2' l)). Qed.
Lemma lem8438996 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1049 _146851 _146856 _146862 A l p1 p2 p1' p2') = (term1058 _146851 _146856 _146862 A l p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8438995 _146851 _146856 _146862 A p1 p2 p1' p2' l) (@lem8438994 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8438999 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1051 _146851 _146856 _146862 A l p1 p2 p1') = (term1059 _146851 _146856 _146862 A l p1 p1' p2).
Proof. exact (fun_ext (fun p2' : type1475 _146856 _146862 A => @lem8438996 _146851 _146856 _146862 A l p1 p1' p2 p2')). Qed.
Lemma lem8439002 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439003 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1053 _146851 _146856 _146862 A l p1 p2 p1') = (term1060 _146851 _146856 _146862 A l p1 p1' p2).
Proof. exact (MK_COMB (@lem8439002 _146856 _146862 A) (@lem8438999 _146851 _146856 _146862 A l p1 p1' p2)). Qed.
Lemma lem8439010 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1055 _146851 _146856 _146862 A l p1 p2) = (term1061 _146851 _146856 _146862 A l p1 p2).
Proof. exact (fun_ext (fun p1' : A -> _146851 => @lem8439003 _146851 _146856 _146862 A l p1 p1' p2)). Qed.
Lemma lem8439013 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439014 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1056 _146851 _146856 _146862 A l p1 p2) = (term1062 _146851 _146856 _146862 A l p1 p2).
Proof. exact (MK_COMB (@lem8439013 _146851 A) (@lem8439010 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8439021 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1032 _146851 _146856 _146862 A l p1 p2) = (term1062 _146851 _146856 _146862 A l p1 p2).
Proof. exact (TRANS (@lem8438691 _146851 _146856 _146862 A l p1 p2) (@lem8439014 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8439022 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) : (term1034 _146851 _146856 _146862 A l p1) = (term1063 _146851 _146856 _146862 A l p1).
Proof. exact (fun_ext (fun p2 : type1475 _146856 _146862 A => @lem8439021 _146851 _146856 _146862 A l p1 p2)). Qed.
Lemma lem8439025 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439026 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (p1 : A -> _146851) : (term1036 _146851 _146856 _146862 A l p1) = (term1064 _146851 _146856 _146862 A l p1).
Proof. exact (MK_COMB (@lem8439025 _146856 _146862 A) (@lem8439022 _146851 _146856 _146862 A l p1)). Qed.
Lemma lem8439033 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1038 _146851 _146856 _146862 A l) = (term1065 _146851 _146856 _146862 A l).
Proof. exact (fun_ext (fun p1 : A -> _146851 => @lem8439026 _146851 _146856 _146862 A l p1)). Qed.
Lemma lem8439036 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439037 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1039 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8439036 _146851 A) (@lem8439033 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439044 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1028 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l).
Proof. exact (TRANS (@lem8438652 _146851 _146856 _146862 A l) (@lem8439037 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439045 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8439046 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1030 _146851 _146856 _146862 A l) = (term1067 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8439045) (@lem8439044 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439050 {_146813 _146820 _146821 : Type'} (P : type1228 _146813 _146820 _146821) : (term808 _146813 _146820 _146821 P) = (term809 _146813 _146820 _146821 P).
Proof. exact (EQ_MP (@lem8437910 _146813 _146820 _146821 P) (@lem0)). Qed.
Lemma lem8439051 {_146851 _146856 _146862 A : Type'} (P : type1185 _146851 _146856 _146862 A) : (term1068 _146851 _146856 _146862 A P) = (term1069 _146851 _146856 _146862 A P).
Proof. exact (@lem8439050 Prop (type1475 _146856 _146862 A) (A -> _146851) P). Qed.
Lemma lem8439052 {_146851 _146856 _146862 A : Type'} : (term1070 _146851 _146856 _146862 A) = (term1071 _146851 _146856 _146862 A).
Proof. exact (@lem8439051 _146851 _146856 _146862 A (term1072 _146851 _146856 _146862 A)). Qed.
Lemma lem8439053 {_146851 _146856 _146862 A : Type'} (x : type1647 _146851 _146856 _146862 A) : (term1073 _146851 _146856 _146862 A x) = (term1074 _146851 _146856 _146862 A x).
Proof. exact (eq_refl (term1073 _146851 _146856 _146862 A x)). Qed.
Lemma lem8439054 {_146851 _146856 _146862 A : Type'} : (term1070 _146851 _146856 _146862 A) = (term1072 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun x : type1647 _146851 _146856 _146862 A => @lem8439053 _146851 _146856 _146862 A x)). Qed.
Lemma lem8439055 {_146851 _146856 _146862 A : Type'} : (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439056 {_146851 _146856 _146862 A : Type'} : (term1075 _146851 _146856 _146862 A) = (term1076 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439055 _146851 _146856 _146862 A) (@lem8439054 _146851 _146856 _146862 A)). Qed.
Lemma lem8439057 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1077 _146851 _146856 _146862 A a b) = (term1078 _146851 _146856 _146862 A a b).
Proof. exact (eq_refl (term1077 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439058 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1079 _146851 _146856 _146862 A f a b) = (term1079 _146851 _146856 _146862 A f a b).
Proof. exact (eq_refl (term1079 _146851 _146856 _146862 A f a b)). Qed.
Lemma lem8439059 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1080 _146851 _146856 _146862 A f a b) = (term1081 _146851 _146856 _146862 A f a b).
Proof. exact (MK_COMB (@lem8439058 _146851 _146856 _146862 A f a b) (@lem8439057 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439060 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) : (term1082 _146851 _146856 _146862 A f a) = (term1083 _146851 _146856 _146862 A f a).
Proof. exact (fun_ext (fun b : type1475 _146856 _146862 A => @lem8439059 _146851 _146856 _146862 A f a b)). Qed.
Lemma lem8439061 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439062 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) : (term1084 _146851 _146856 _146862 A f a) = (term1085 _146851 _146856 _146862 A f a).
Proof. exact (MK_COMB (@lem8439061 _146856 _146862 A) (@lem8439060 _146851 _146856 _146862 A f a)). Qed.
Lemma lem8439063 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) : (term1086 _146851 _146856 _146862 A f) = (term1087 _146851 _146856 _146862 A f).
Proof. exact (fun_ext (fun a : A -> _146851 => @lem8439062 _146851 _146856 _146862 A f a)). Qed.
Lemma lem8439064 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439065 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) : (term1088 _146851 _146856 _146862 A f) = (term1089 _146851 _146856 _146862 A f).
Proof. exact (MK_COMB (@lem8439064 _146851 A) (@lem8439063 _146851 _146856 _146862 A f)). Qed.
Lemma lem8439066 {_146851 _146856 _146862 A : Type'} : (term1090 _146851 _146856 _146862 A) = (term1091 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun f : type1185 _146851 _146856 _146862 A => @lem8439065 _146851 _146856 _146862 A f)). Qed.
Lemma lem8439067 {_146851 _146856 _146862 A : Type'} : (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439068 {_146851 _146856 _146862 A : Type'} : (term1071 _146851 _146856 _146862 A) = (term1092 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439067 _146851 _146856 _146862 A) (@lem8439066 _146851 _146856 _146862 A)). Qed.
Lemma lem8439069 {_146851 _146856 _146862 A : Type'} : ((term1070 _146851 _146856 _146862 A) = (term1071 _146851 _146856 _146862 A)) = ((term1072 _146851 _146856 _146862 A) = (term1092 _146851 _146856 _146862 A)).
Proof. exact (MK_COMB (@lem8439056 _146851 _146856 _146862 A) (@lem8439068 _146851 _146856 _146862 A)). Qed.
Lemma lem8439070 {_146851 _146856 _146862 A : Type'} : (term1072 _146851 _146856 _146862 A) = (term1092 _146851 _146856 _146862 A).
Proof. exact (EQ_MP (@lem8439069 _146851 _146856 _146862 A) (@lem8439052 _146851 _146856 _146862 A)). Qed.
Lemma lem8439089 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8439090 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (@lem8439089 _146851 _146856 _146862 A s t). Qed.
Lemma lem8439091 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8439092 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (@lem8439091 _146851 _146856 _146862 A s t). Qed.
Lemma lem8439093 {_146851 A : Type'} (s : A -> _146851) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8439094 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8439095 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8439094 _146851 A) (@lem8439090 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439096 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439097 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (term923 _146851 A s).
Proof. exact (eq_refl (term923 _146851 A s)). Qed.
Lemma lem8439098 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439097 _146851 A s) (@lem8439096 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439099 {_146851 A : Type'} (s : A -> _146851) : (term921 _146851 A s) = s.
Proof. exact (eq_refl (term921 _146851 A s)). Qed.
Lemma lem8439100 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8439101 {_146851 A : Type'} (s : A -> _146851) : (term923 _146851 A s) = (@eq (A -> _146851) s).
Proof. exact (MK_COMB (@lem8439100 _146851 A) (@lem8439099 _146851 A s)). Qed.
Lemma lem8439102 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s t) = (term918 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439103 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term918 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439101 _146851 A s) (@lem8439102 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439104 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term921 _146851 A s) = (term922 _146851 _146856 _146862 A s t)) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8439098 _146851 _146856 _146862 A s t) (@lem8439103 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439105 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439104 _146851 _146856 _146862 A s t) (@lem8439095 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439106 {_146851 A : Type'} (s : A -> _146851) : (@eq (A -> _146851) s) = (@eq (A -> _146851) s).
Proof. exact (eq_refl (@eq (A -> _146851) s)). Qed.
Lemma lem8439107 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (s = s) = (s = (term918 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439106 _146851 A s) (@lem8439105 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439108 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : s = (term918 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439107 _146851 _146856 _146862 A s t) (@lem8439093 _146851 A s)). Qed.
Lemma lem8439109 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8439110 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8439111 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8439110 _146856 _146862 A) (@lem8439092 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439112 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439113 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (term927 _146856 _146862 A t).
Proof. exact (eq_refl (term927 _146856 _146862 A t)). Qed.
Lemma lem8439114 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439113 _146856 _146862 A t) (@lem8439112 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439115 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t) = t.
Proof. exact (eq_refl (term925 _146856 _146862 A t)). Qed.
Lemma lem8439116 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8439117 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (MK_COMB (@lem8439116 _146856 _146862 A) (@lem8439115 _146856 _146862 A t)). Qed.
Lemma lem8439118 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s t) = (term919 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439119 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term919 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439117 _146856 _146862 A t) (@lem8439118 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439120 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t) = (term926 _146851 _146856 _146862 A s t)) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8439114 _146851 _146856 _146862 A s t) (@lem8439119 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439121 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439120 _146851 _146856 _146862 A s t) (@lem8439111 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439122 {_146856 _146862 A : Type'} (t : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t) = (@eq (_146862 -> A -> _146856) t).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t)). Qed.
Lemma lem8439123 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (t = t) = (t = (term919 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439122 _146856 _146862 A t) (@lem8439121 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439124 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : t = (term919 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439123 _146851 _146856 _146862 A s t) (@lem8439109 _146856 _146862 A t)). Qed.
Lemma lem8439125 {_146851 _146856 _146862 A : Type'} : (term928 _146851 _146856 _146862 A) = (term928 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term928 _146851 _146856 _146862 A)). Qed.
Lemma lem8439126 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8439125 _146851 _146856 _146862 A) (@lem8439108 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439127 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term930 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term930 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439128 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term932 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term932 _146851 _146856 _146862 A s)). Qed.
Lemma lem8439129 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439128 _146851 _146856 _146862 A s) (@lem8439127 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439130 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term929 _146851 _146856 _146862 A s) = (term933 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term929 _146851 _146856 _146862 A s)). Qed.
Lemma lem8439131 {_146851 _146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439132 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term932 _146851 _146856 _146862 A s) = (term934 _146851 _146856 _146862 A s).
Proof. exact (MK_COMB (@lem8439131 _146851 _146856 _146862 A) (@lem8439130 _146851 _146856 _146862 A s)). Qed.
Lemma lem8439133 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term931 _146851 _146856 _146862 A s t) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term931 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439134 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439132 _146851 _146856 _146862 A s) (@lem8439133 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439135 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term929 _146851 _146856 _146862 A s) = (term930 _146851 _146856 _146862 A s t)) = ((term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8439129 _146851 _146856 _146862 A s t) (@lem8439134 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439136 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term933 _146851 _146856 _146862 A s) = (term931 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439135 _146851 _146856 _146862 A s t) (@lem8439126 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439137 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8439136 _146851 _146856 _146862 A s t) (@lem8439124 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439138 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term936 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term936 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439139 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term938 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term938 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439140 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439139 _146851 _146856 _146862 A s t) (@lem8439138 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439141 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term935 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term935 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439142 {_146851 _146856 _146862 A : Type'} : (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439143 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term938 _146851 _146856 _146862 A s t) = (term940 _146851 _146856 _146862 A s t).
Proof. exact (MK_COMB (@lem8439142 _146851 _146856 _146862 A) (@lem8439141 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439144 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term937 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439145 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (MK_COMB (@lem8439143 _146851 _146856 _146862 A s t) (@lem8439144 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439146 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term935 _146851 _146856 _146862 A s t) = (term936 _146851 _146856 _146862 A s t)) = ((term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t)).
Proof. exact (TRANS (@lem8439140 _146851 _146856 _146862 A s t) (@lem8439145 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439147 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term939 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439146 _146851 _146856 _146862 A s t) (@lem8439137 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439148 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term937 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (SYM (@lem8439147 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439149 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term937 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term941 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439150 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term941 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (TRANS (@lem8439149 _146851 _146856 _146862 A s t) (@lem8439148 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439151 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term942 _146851 _146856 _146862 A s.
Proof. exact (fun t : type1475 _146856 _146862 A => @lem8439150 _146851 _146856 _146862 A s t). Qed.
Lemma lem8439152 {_146851 _146856 _146862 A : Type'} : term943 _146851 _146856 _146862 A.
Proof. exact (fun s : A -> _146851 => @lem8439151 _146851 _146856 _146862 A s). Qed.
Lemma lem8439153 {_146851 _146856 _146862 A : Type'} : term944 _146851 _146856 _146862 A.
Proof. exact (ex_intro (term945 _146851 _146856 _146862 A) (term946 _146851 _146856 _146862 A) (@lem8439152 _146851 _146856 _146862 A)). Qed.
Lemma lem8439155 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8439156 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (a = b) = (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b).
Proof. exact (@lem8439155 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8439157 {_146851 _146856 _146862 A : Type'} (_116997 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) (t : type1475 _146856 _146862 A) : ((term947 _146851 _146856 _146862 A _116997 s t) = (term939 _146851 _146856 _146862 A s t)) = (term948 _146851 _146856 _146862 A _116997 s t).
Proof. exact (@lem8439156 _146851 _146856 _146862 A (term947 _146851 _146856 _146862 A _116997 s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439158 {_146851 _146856 _146862 A : Type'} (_116997 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term949 _146851 _146856 _146862 A _116997 s) = (term950 _146851 _146856 _146862 A _116997 s).
Proof. exact (fun_ext (fun t : type1475 _146856 _146862 A => @lem8439157 _146851 _146856 _146862 A _116997 s t)). Qed.
Lemma lem8439159 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439160 {_146851 _146856 _146862 A : Type'} (_116997 : type1182 _146851 _146856 _146862 A) (s : A -> _146851) : (term951 _146851 _146856 _146862 A _116997 s) = (term952 _146851 _146856 _146862 A _116997 s).
Proof. exact (MK_COMB (@lem8439159 _146856 _146862 A) (@lem8439158 _146851 _146856 _146862 A _116997 s)). Qed.
Lemma lem8439161 {_146851 _146856 _146862 A : Type'} (_116997 : type1182 _146851 _146856 _146862 A) : (term953 _146851 _146856 _146862 A _116997) = (term954 _146851 _146856 _146862 A _116997).
Proof. exact (fun_ext (fun s : A -> _146851 => @lem8439160 _146851 _146856 _146862 A _116997 s)). Qed.
Lemma lem8439162 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439163 {_146851 _146856 _146862 A : Type'} (_116997 : type1182 _146851 _146856 _146862 A) : (term955 _146851 _146856 _146862 A _116997) = (term956 _146851 _146856 _146862 A _116997).
Proof. exact (MK_COMB (@lem8439162 _146851 A) (@lem8439161 _146851 _146856 _146862 A _116997)). Qed.
Lemma lem8439164 {_146851 _146856 _146862 A : Type'} : (term945 _146851 _146856 _146862 A) = (term957 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun _116997 : type1182 _146851 _146856 _146862 A => @lem8439163 _146851 _146856 _146862 A _116997)). Qed.
Lemma lem8439165 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> (prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439166 {_146851 _146856 _146862 A : Type'} : (term944 _146851 _146856 _146862 A) = (term958 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439165 _146851 _146856 _146862 A) (@lem8439164 _146851 _146856 _146862 A)). Qed.
Lemma lem8439167 {_146851 _146856 _146862 A : Type'} : term958 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8439166 _146851 _146856 _146862 A) (@lem8439153 _146851 _146856 _146862 A)). Qed.
Lemma lem8439169 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8439170 {_146851 _146856 _146862 A : Type'} (P : type307 _146851 _146856 _146862 A) : term959 _146851 _146856 _146862 A P.
Proof. exact (@lem8439169 (type1182 _146851 _146856 _146862 A) P). Qed.
Lemma lem8439171 {_146851 _146856 _146862 A : Type'} : term960 _146851 _146856 _146862 A.
Proof. exact (@lem8439170 _146851 _146856 _146862 A (term957 _146851 _146856 _146862 A)). Qed.
Lemma lem8439172 {_146851 _146856 _146862 A : Type'} : term961 _146851 _146856 _146862 A.
Proof. exact (@lem8439171 _146851 _146856 _146862 A (@lem8439167 _146851 _146856 _146862 A)). Qed.
Lemma lem8439173 {_146851 _146856 _146862 A : Type'} : (term961 _146851 _146856 _146862 A) = (term962 _146851 _146856 _146862 A).
Proof. exact (eq_refl (term961 _146851 _146856 _146862 A)). Qed.
Lemma lem8439174 {_146851 _146856 _146862 A : Type'} : term962 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8439173 _146851 _146856 _146862 A) (@lem8439172 _146851 _146856 _146862 A)). Qed.
Lemma lem8439175 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term963 _146851 _146856 _146862 A s.
Proof. exact (@lem8439174 _146851 _146856 _146862 A s). Qed.
Lemma lem8439176 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : (term963 _146851 _146856 _146862 A s) = (term964 _146851 _146856 _146862 A s).
Proof. exact (eq_refl (term963 _146851 _146856 _146862 A s)). Qed.
Lemma lem8439177 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) : term964 _146851 _146856 _146862 A s.
Proof. exact (EQ_MP (@lem8439176 _146851 _146856 _146862 A s) (@lem8439175 _146851 _146856 _146862 A s)). Qed.
Lemma lem8439178 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term965 _146851 _146856 _146862 A s t.
Proof. exact (@lem8439177 _146851 _146856 _146862 A s t). Qed.
Lemma lem8439179 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term965 _146851 _146856 _146862 A s t) = (term966 _146851 _146856 _146862 A s t).
Proof. exact (eq_refl (term965 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439180 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : term966 _146851 _146856 _146862 A s t.
Proof. exact (EQ_MP (@lem8439179 _146851 _146856 _146862 A s t) (@lem8439178 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439182 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8439183 {_146851 _146856 _146862 A : Type'} (a : type1185 _146851 _146856 _146862 A) (b : type1185 _146851 _146856 _146862 A) : (@GEQ ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop) a b) = (a = b).
Proof. exact (@lem8439182 (type1185 _146851 _146856 _146862 A) a b). Qed.
Lemma lem8439184 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term966 _146851 _146856 _146862 A s t) = ((term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t)).
Proof. exact (@lem8439183 _146851 _146856 _146862 A (term967 _146851 _146856 _146862 A s t) (term939 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439185 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (EQ_MP (@lem8439184 _146851 _146856 _146862 A s t) (@lem8439180 _146851 _146856 _146862 A s t)). Qed.
Lemma lem8439186 {_146851 _146856 _146862 A : Type'} (s : A -> _146851) (t : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A s t) = (term939 _146851 _146856 _146862 A s t).
Proof. exact (@lem8439185 _146851 _146856 _146862 A s t). Qed.
Lemma lem8439187 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term967 _146851 _146856 _146862 A a b) = (term939 _146851 _146856 _146862 A a b).
Proof. exact (@lem8439186 _146851 _146856 _146862 A a b). Qed.
Lemma lem8439238 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (@pair (A -> _146851) (_146862 -> A -> _146856) a b) = (@pair (A -> _146851) (_146862 -> A -> _146856) a b).
Proof. exact (eq_refl (@pair (A -> _146851) (_146862 -> A -> _146856) a b)). Qed.
Lemma lem8439239 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1078 _146851 _146856 _146862 A a b) = (term1093 _146851 _146856 _146862 A a b).
Proof. exact (MK_COMB (@lem8439187 _146851 _146856 _146862 A a b) (@lem8439238 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439240 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a0 = (term918 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51128 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8439241 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8439240 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8439242 {_146851 _146856 _146862 A : Type'} (a0 : A -> _146851) (a1 : type1475 _146856 _146862 A) : a1 = (term919 _146851 _146856 _146862 A a0 a1).
Proof. exact (@lem51159 (A -> _146851) (type1475 _146856 _146862 A) a0 a1). Qed.
Lemma lem8439243 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (@lem8439242 _146851 _146856 _146862 A s' t'). Qed.
Lemma lem8439244 {_146851 A : Type'} (s' : A -> _146851) : s' = s'.
Proof. exact (eq_refl s'). Qed.
Lemma lem8439245 {_146851 A : Type'} : (term920 _146851 A) = (term920 _146851 A).
Proof. exact (eq_refl (term920 _146851 A)). Qed.
Lemma lem8439246 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8439245 _146851 A) (@lem8439241 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439247 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term922 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term922 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439248 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (term923 _146851 A s').
Proof. exact (eq_refl (term923 _146851 A s')). Qed.
Lemma lem8439249 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439248 _146851 A s') (@lem8439247 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439250 {_146851 A : Type'} (s' : A -> _146851) : (term921 _146851 A s') = s'.
Proof. exact (eq_refl (term921 _146851 A s')). Qed.
Lemma lem8439251 {_146851 A : Type'} : (@eq (A -> _146851)) = (@eq (A -> _146851)).
Proof. exact (eq_refl (@eq (A -> _146851))). Qed.
Lemma lem8439252 {_146851 A : Type'} (s' : A -> _146851) : (term923 _146851 A s') = (@eq (A -> _146851) s').
Proof. exact (MK_COMB (@lem8439251 _146851 A) (@lem8439250 _146851 A s')). Qed.
Lemma lem8439253 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term918 _146851 _146856 _146862 A s' t') = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term918 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439254 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term918 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439252 _146851 A s') (@lem8439253 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439255 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term921 _146851 A s') = (term922 _146851 _146856 _146862 A s' t')) = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8439249 _146851 _146856 _146862 A s' t') (@lem8439254 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439256 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8439255 _146851 _146856 _146862 A s' t') (@lem8439246 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439257 {_146851 A : Type'} (s' : A -> _146851) : (@eq (A -> _146851) s') = (@eq (A -> _146851) s').
Proof. exact (eq_refl (@eq (A -> _146851) s')). Qed.
Lemma lem8439258 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (s' = s') = (s' = (term918 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439257 _146851 A s') (@lem8439256 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439259 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : s' = (term918 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8439258 _146851 _146856 _146862 A s' t') (@lem8439244 _146851 A s')). Qed.
Lemma lem8439260 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : t' = t'.
Proof. exact (eq_refl t'). Qed.
Lemma lem8439261 {_146856 _146862 A : Type'} : (term924 _146856 _146862 A) = (term924 _146856 _146862 A).
Proof. exact (eq_refl (term924 _146856 _146862 A)). Qed.
Lemma lem8439262 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t').
Proof. exact (MK_COMB (@lem8439261 _146856 _146862 A) (@lem8439243 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439263 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term926 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term926 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439264 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (term927 _146856 _146862 A t').
Proof. exact (eq_refl (term927 _146856 _146862 A t')). Qed.
Lemma lem8439265 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439264 _146856 _146862 A t') (@lem8439263 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439266 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term925 _146856 _146862 A t') = t'.
Proof. exact (eq_refl (term925 _146856 _146862 A t')). Qed.
Lemma lem8439267 {_146856 _146862 A : Type'} : (@eq (_146862 -> A -> _146856)) = (@eq (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856))). Qed.
Lemma lem8439268 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (term927 _146856 _146862 A t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (MK_COMB (@lem8439267 _146856 _146862 A) (@lem8439266 _146856 _146862 A t')). Qed.
Lemma lem8439269 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term919 _146851 _146856 _146862 A s' t') = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (eq_refl (term919 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439270 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term919 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439268 _146856 _146862 A t') (@lem8439269 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439271 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term925 _146856 _146862 A t') = (term926 _146851 _146856 _146862 A s' t')) = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (TRANS (@lem8439265 _146851 _146856 _146862 A s' t') (@lem8439270 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439272 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8439271 _146851 _146856 _146862 A s' t') (@lem8439262 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439273 {_146856 _146862 A : Type'} (t' : type1475 _146856 _146862 A) : (@eq (_146862 -> A -> _146856) t') = (@eq (_146862 -> A -> _146856) t').
Proof. exact (eq_refl (@eq (_146862 -> A -> _146856) t')). Qed.
Lemma lem8439274 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (t' = t') = (t' = (term919 _146851 _146856 _146862 A s' t')).
Proof. exact (MK_COMB (@lem8439273 _146856 _146862 A t') (@lem8439272 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439275 {_146851 _146856 _146862 A : Type'} (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : t' = (term919 _146851 _146856 _146862 A s' t').
Proof. exact (EQ_MP (@lem8439274 _146851 _146856 _146862 A s' t') (@lem8439260 _146856 _146862 A t')). Qed.
Lemma lem8439276 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term970 _146851 _146856 _146862 A a b) = (term970 _146851 _146856 _146862 A a b).
Proof. exact (eq_refl (term970 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439277 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A a b s') = (term972 _146851 _146856 _146862 A a b s' t').
Proof. exact (MK_COMB (@lem8439276 _146851 _146856 _146862 A a b) (@lem8439259 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439278 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : (term972 _146851 _146856 _146862 A a b s' t') = (term973 _146851 _146856 _146862 A a s' t' b).
Proof. exact (eq_refl (term972 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439279 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) : (term974 _146851 _146856 _146862 A a b s') = (term974 _146851 _146856 _146862 A a b s').
Proof. exact (eq_refl (term974 _146851 _146856 _146862 A a b s')). Qed.
Lemma lem8439280 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A a b s') = (term972 _146851 _146856 _146862 A a b s' t')) = ((term971 _146851 _146856 _146862 A a b s') = (term973 _146851 _146856 _146862 A a s' t' b)).
Proof. exact (MK_COMB (@lem8439279 _146851 _146856 _146862 A a b s') (@lem8439278 _146851 _146856 _146862 A a s' t' b)). Qed.
Lemma lem8439281 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : (term971 _146851 _146856 _146862 A a b s') = (term975 _146851 _146856 _146862 A a s' b).
Proof. exact (eq_refl (term971 _146851 _146856 _146862 A a b s')). Qed.
Lemma lem8439282 {_146856 _146862 A : Type'} : (@eq ((_146862 -> A -> _146856) -> Prop)) = (@eq ((_146862 -> A -> _146856) -> Prop)).
Proof. exact (eq_refl (@eq ((_146862 -> A -> _146856) -> Prop))). Qed.
Lemma lem8439283 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : (term974 _146851 _146856 _146862 A a b s') = (term976 _146851 _146856 _146862 A a s' b).
Proof. exact (MK_COMB (@lem8439282 _146856 _146862 A) (@lem8439281 _146851 _146856 _146862 A a s' b)). Qed.
Lemma lem8439284 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : (term973 _146851 _146856 _146862 A a s' t' b) = (term973 _146851 _146856 _146862 A a s' t' b).
Proof. exact (eq_refl (term973 _146851 _146856 _146862 A a s' t' b)). Qed.
Lemma lem8439285 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A a b s') = (term973 _146851 _146856 _146862 A a s' t' b)) = ((term975 _146851 _146856 _146862 A a s' b) = (term973 _146851 _146856 _146862 A a s' t' b)).
Proof. exact (MK_COMB (@lem8439283 _146851 _146856 _146862 A a s' b) (@lem8439284 _146851 _146856 _146862 A a s' t' b)). Qed.
Lemma lem8439286 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : ((term971 _146851 _146856 _146862 A a b s') = (term972 _146851 _146856 _146862 A a b s' t')) = ((term975 _146851 _146856 _146862 A a s' b) = (term973 _146851 _146856 _146862 A a s' t' b)).
Proof. exact (TRANS (@lem8439280 _146851 _146856 _146862 A a s' t' b) (@lem8439285 _146851 _146856 _146862 A a s' t' b)). Qed.
Lemma lem8439287 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) (b : type1475 _146856 _146862 A) : (term975 _146851 _146856 _146862 A a s' b) = (term973 _146851 _146856 _146862 A a s' t' b).
Proof. exact (EQ_MP (@lem8439286 _146851 _146856 _146862 A a s' t' b) (@lem8439277 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439288 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A a s' b t') = (term978 _146851 _146856 _146862 A a b s' t').
Proof. exact (MK_COMB (@lem8439287 _146851 _146856 _146862 A a s' t' b) (@lem8439275 _146851 _146856 _146862 A s' t')). Qed.
Lemma lem8439289 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term978 _146851 _146856 _146862 A a b s' t') = (term979 _146851 _146856 _146862 A a b s' t').
Proof. exact (eq_refl (term978 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439290 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A a s' b t') = (term980 _146851 _146856 _146862 A a s' b t').
Proof. exact (eq_refl (term980 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439291 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A a s' b t') = (term978 _146851 _146856 _146862 A a b s' t')) = ((term977 _146851 _146856 _146862 A a s' b t') = (term979 _146851 _146856 _146862 A a b s' t')).
Proof. exact (MK_COMB (@lem8439290 _146851 _146856 _146862 A a s' b t') (@lem8439289 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439292 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term977 _146851 _146856 _146862 A a s' b t') = (term981 _146851 _146856 _146862 A a s' b t').
Proof. exact (eq_refl (term977 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439293 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8439294 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term980 _146851 _146856 _146862 A a s' b t') = (term982 _146851 _146856 _146862 A a s' b t').
Proof. exact (MK_COMB (@lem8439293) (@lem8439292 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439295 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A a b s' t') = (term979 _146851 _146856 _146862 A a b s' t').
Proof. exact (eq_refl (term979 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439296 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A a s' b t') = (term979 _146851 _146856 _146862 A a b s' t')) = ((term981 _146851 _146856 _146862 A a s' b t') = (term979 _146851 _146856 _146862 A a b s' t')).
Proof. exact (MK_COMB (@lem8439294 _146851 _146856 _146862 A a s' b t') (@lem8439295 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439297 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : ((term977 _146851 _146856 _146862 A a s' b t') = (term978 _146851 _146856 _146862 A a b s' t')) = ((term981 _146851 _146856 _146862 A a s' b t') = (term979 _146851 _146856 _146862 A a b s' t')).
Proof. exact (TRANS (@lem8439291 _146851 _146856 _146862 A a b s' t') (@lem8439296 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439298 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A a s' b t') = (term979 _146851 _146856 _146862 A a b s' t').
Proof. exact (EQ_MP (@lem8439297 _146851 _146856 _146862 A a b s' t') (@lem8439288 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439299 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term979 _146851 _146856 _146862 A a b s' t') = (term981 _146851 _146856 _146862 A a s' b t').
Proof. exact (SYM (@lem8439298 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439300 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A a b s' t') = (term979 _146851 _146856 _146862 A a b s' t').
Proof. exact (eq_refl (term983 _146851 _146856 _146862 A a b s' t')). Qed.
Lemma lem8439301 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term983 _146851 _146856 _146862 A a b s' t') = (term981 _146851 _146856 _146862 A a s' b t').
Proof. exact (TRANS (@lem8439300 _146851 _146856 _146862 A a b s' t') (@lem8439299 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439302 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : term984 _146851 _146856 _146862 A a s' b.
Proof. exact (fun t' : type1475 _146856 _146862 A => @lem8439301 _146851 _146856 _146862 A a s' b t'). Qed.
Lemma lem8439303 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term985 _146851 _146856 _146862 A a b.
Proof. exact (fun s' : A -> _146851 => @lem8439302 _146851 _146856 _146862 A a s' b). Qed.
Lemma lem8439304 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term986 _146851 _146856 _146862 A a b.
Proof. exact (ex_intro (term987 _146851 _146856 _146862 A a b) (term988 _146851 _146856 _146862 A a b) (@lem8439303 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439306 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8439307 (a : Prop) (b : Prop) : (a = b) = (@GEQ Prop a b).
Proof. exact (@lem8439306 Prop a b). Qed.
Lemma lem8439308 {_146851 _146856 _146862 A : Type'} (_117009 : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : ((term989 _146851 _146856 _146862 A _117009 s' t') = (term981 _146851 _146856 _146862 A a s' b t')) = (term990 _146851 _146856 _146862 A _117009 a s' b t').
Proof. exact (@lem8439307 (term989 _146851 _146856 _146862 A _117009 s' t') (term981 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439309 {_146851 _146856 _146862 A : Type'} (_117009 : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : (term991 _146851 _146856 _146862 A _117009 a s' b) = (term992 _146851 _146856 _146862 A _117009 a s' b).
Proof. exact (fun_ext (fun t' : type1475 _146856 _146862 A => @lem8439308 _146851 _146856 _146862 A _117009 a s' b t')). Qed.
Lemma lem8439310 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439311 {_146851 _146856 _146862 A : Type'} (_117009 : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : (term993 _146851 _146856 _146862 A _117009 a s' b) = (term994 _146851 _146856 _146862 A _117009 a s' b).
Proof. exact (MK_COMB (@lem8439310 _146856 _146862 A) (@lem8439309 _146851 _146856 _146862 A _117009 a s' b)). Qed.
Lemma lem8439312 {_146851 _146856 _146862 A : Type'} (_117009 : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term995 _146851 _146856 _146862 A _117009 a b) = (term996 _146851 _146856 _146862 A _117009 a b).
Proof. exact (fun_ext (fun s' : A -> _146851 => @lem8439311 _146851 _146856 _146862 A _117009 a s' b)). Qed.
Lemma lem8439313 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439314 {_146851 _146856 _146862 A : Type'} (_117009 : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term997 _146851 _146856 _146862 A _117009 a b) = (term998 _146851 _146856 _146862 A _117009 a b).
Proof. exact (MK_COMB (@lem8439313 _146851 A) (@lem8439312 _146851 _146856 _146862 A _117009 a b)). Qed.
Lemma lem8439315 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term987 _146851 _146856 _146862 A a b) = (term999 _146851 _146856 _146862 A a b).
Proof. exact (fun_ext (fun _117009 : type1185 _146851 _146856 _146862 A => @lem8439314 _146851 _146856 _146862 A _117009 a b)). Qed.
Lemma lem8439316 {_146851 _146856 _146862 A : Type'} : (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439317 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term986 _146851 _146856 _146862 A a b) = (term1000 _146851 _146856 _146862 A a b).
Proof. exact (MK_COMB (@lem8439316 _146851 _146856 _146862 A) (@lem8439315 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439318 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term1000 _146851 _146856 _146862 A a b.
Proof. exact (EQ_MP (@lem8439317 _146851 _146856 _146862 A a b) (@lem8439304 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439320 {_5076 : Type'} (P : _5076 -> Prop) : term868 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8439321 {_146851 _146856 _146862 A : Type'} (P : type312 _146851 _146856 _146862 A) : term1001 _146851 _146856 _146862 A P.
Proof. exact (@lem8439320 (type1185 _146851 _146856 _146862 A) P). Qed.
Lemma lem8439322 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term1002 _146851 _146856 _146862 A a b.
Proof. exact (@lem8439321 _146851 _146856 _146862 A (term999 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439323 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term1003 _146851 _146856 _146862 A a b.
Proof. exact (@lem8439322 _146851 _146856 _146862 A a b (@lem8439318 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439324 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1003 _146851 _146856 _146862 A a b) = (term1004 _146851 _146856 _146862 A a b).
Proof. exact (eq_refl (term1003 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439325 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : term1004 _146851 _146856 _146862 A a b.
Proof. exact (EQ_MP (@lem8439324 _146851 _146856 _146862 A a b) (@lem8439323 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439326 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) (s' : A -> _146851) : term1005 _146851 _146856 _146862 A a b s'.
Proof. exact (@lem8439325 _146851 _146856 _146862 A a b s'). Qed.
Lemma lem8439327 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : (term1005 _146851 _146856 _146862 A a b s') = (term1006 _146851 _146856 _146862 A a s' b).
Proof. exact (eq_refl (term1005 _146851 _146856 _146862 A a b s')). Qed.
Lemma lem8439328 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) : term1006 _146851 _146856 _146862 A a s' b.
Proof. exact (EQ_MP (@lem8439327 _146851 _146856 _146862 A a s' b) (@lem8439326 _146851 _146856 _146862 A a b s')). Qed.
Lemma lem8439329 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1007 _146851 _146856 _146862 A a s' b t'.
Proof. exact (@lem8439328 _146851 _146856 _146862 A a s' b t'). Qed.
Lemma lem8439330 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1007 _146851 _146856 _146862 A a s' b t') = (term1008 _146851 _146856 _146862 A a s' b t').
Proof. exact (eq_refl (term1007 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439331 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : term1008 _146851 _146856 _146862 A a s' b t'.
Proof. exact (EQ_MP (@lem8439330 _146851 _146856 _146862 A a s' b t') (@lem8439329 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439333 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8439334 (a : Prop) (b : Prop) : (@GEQ Prop a b) = (a = b).
Proof. exact (@lem8439333 Prop a b). Qed.
Lemma lem8439335 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term1008 _146851 _146856 _146862 A a s' b t') = ((term969 _146851 _146856 _146862 A a b s' t') = (term981 _146851 _146856 _146862 A a s' b t')).
Proof. exact (@lem8439334 (term969 _146851 _146856 _146862 A a b s' t') (term981 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439336 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A a b s' t') = (term981 _146851 _146856 _146862 A a s' b t').
Proof. exact (EQ_MP (@lem8439335 _146851 _146856 _146862 A a s' b t') (@lem8439331 _146851 _146856 _146862 A a s' b t')). Qed.
Lemma lem8439337 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (s' : A -> _146851) (b : type1475 _146856 _146862 A) (t' : type1475 _146856 _146862 A) : (term969 _146851 _146856 _146862 A a b s' t') = (term981 _146851 _146856 _146862 A a s' b t').
Proof. exact (@lem8439336 _146851 _146856 _146862 A a s' b t'). Qed.
Lemma lem8439338 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1093 _146851 _146856 _146862 A a b) = (term1094 _146851 _146856 _146862 A a b).
Proof. exact (@lem8439337 _146851 _146856 _146862 A a a b b). Qed.
Lemma lem8439371 {_146851 _146856 _146862 A : Type'} (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1078 _146851 _146856 _146862 A a b) = (term1094 _146851 _146856 _146862 A a b).
Proof. exact (TRANS (@lem8439239 _146851 _146856 _146862 A a b) (@lem8439338 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439372 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1079 _146851 _146856 _146862 A f a b) = (term1079 _146851 _146856 _146862 A f a b).
Proof. exact (eq_refl (term1079 _146851 _146856 _146862 A f a b)). Qed.
Lemma lem8439373 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) (b : type1475 _146856 _146862 A) : (term1081 _146851 _146856 _146862 A f a b) = (term1095 _146851 _146856 _146862 A f a b).
Proof. exact (MK_COMB (@lem8439372 _146851 _146856 _146862 A f a b) (@lem8439371 _146851 _146856 _146862 A a b)). Qed.
Lemma lem8439374 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) : (term1083 _146851 _146856 _146862 A f a) = (term1096 _146851 _146856 _146862 A f a).
Proof. exact (fun_ext (fun b : type1475 _146856 _146862 A => @lem8439373 _146851 _146856 _146862 A f a b)). Qed.
Lemma lem8439377 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439378 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) (a : A -> _146851) : (term1085 _146851 _146856 _146862 A f a) = (term1097 _146851 _146856 _146862 A f a).
Proof. exact (MK_COMB (@lem8439377 _146856 _146862 A) (@lem8439374 _146851 _146856 _146862 A f a)). Qed.
Lemma lem8439385 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) : (term1087 _146851 _146856 _146862 A f) = (term1098 _146851 _146856 _146862 A f).
Proof. exact (fun_ext (fun a : A -> _146851 => @lem8439378 _146851 _146856 _146862 A f a)). Qed.
Lemma lem8439388 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439389 {_146851 _146856 _146862 A : Type'} (f : type1185 _146851 _146856 _146862 A) : (term1089 _146851 _146856 _146862 A f) = (term1099 _146851 _146856 _146862 A f).
Proof. exact (MK_COMB (@lem8439388 _146851 A) (@lem8439385 _146851 _146856 _146862 A f)). Qed.
Lemma lem8439396 {_146851 _146856 _146862 A : Type'} : (term1091 _146851 _146856 _146862 A) = (term1100 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun f : type1185 _146851 _146856 _146862 A => @lem8439389 _146851 _146856 _146862 A f)). Qed.
Lemma lem8439399 {_146851 _146856 _146862 A : Type'} : (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)) = (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop)).
Proof. exact (eq_refl (@GABS ((prod (A -> _146851) (_146862 -> A -> _146856)) -> Prop))). Qed.
Lemma lem8439400 {_146851 _146856 _146862 A : Type'} : (term1092 _146851 _146856 _146862 A) = (term1101 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439399 _146851 _146856 _146862 A) (@lem8439396 _146851 _146856 _146862 A)). Qed.
Lemma lem8439401 {_146851 _146856 _146862 A : Type'} : (term1072 _146851 _146856 _146862 A) = (term1101 _146851 _146856 _146862 A).
Proof. exact (TRANS (@lem8439070 _146851 _146856 _146862 A) (@lem8439400 _146851 _146856 _146862 A)). Qed.
Lemma lem8439402 {_146851 _146856 _146862 A : Type'} : (@List.Forall (prod (A -> _146851) (_146862 -> A -> _146856))) = (@List.Forall (prod (A -> _146851) (_146862 -> A -> _146856))).
Proof. exact (eq_refl (@List.Forall (prod (A -> _146851) (_146862 -> A -> _146856)))). Qed.
Lemma lem8439403 {_146851 _146856 _146862 A : Type'} : (term1102 _146851 _146856 _146862 A) = (term1103 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439402 _146851 _146856 _146862 A) (@lem8439401 _146851 _146856 _146862 A)). Qed.
Lemma lem8439404 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem8439405 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1104 _146851 _146856 _146862 A l) = (term1105 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8439403 _146851 _146856 _146862 A) (@lem8439404 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439406 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8439407 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1106 _146851 _146856 _146862 A l) = (term1107 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8439406) (@lem8439405 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439476 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1108 _146851 _146856 _146862 A l) = (term1108 _146851 _146856 _146862 A l).
Proof. exact (eq_refl (term1108 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439477 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1109 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l).
Proof. exact (MK_COMB (@lem8439407 _146851 _146856 _146862 A l) (@lem8439476 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439480 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : ((term1028 _146851 _146856 _146862 A l) = (term1109 _146851 _146856 _146862 A l)) = ((term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l)).
Proof. exact (MK_COMB (@lem8439046 _146851 _146856 _146862 A l) (@lem8439477 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439483 {_146851 _146856 _146862 A : Type'} : (term1111 _146851 _146856 _146862 A) = (term1112 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun l : type1638 _146851 _146856 _146862 A => @lem8439480 _146851 _146856 _146862 A l)). Qed.
Lemma lem8439486 {_146851 _146856 _146862 A : Type'} : (@all (list (prod (A -> _146851) (_146862 -> A -> _146856)))) = (@all (list (prod (A -> _146851) (_146862 -> A -> _146856)))).
Proof. exact (eq_refl (@all (list (prod (A -> _146851) (_146862 -> A -> _146856))))). Qed.
Lemma lem8439487 {_146851 _146856 _146862 A : Type'} : (term1113 _146851 _146856 _146862 A) = (term1114 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439486 _146851 _146856 _146862 A) (@lem8439483 _146851 _146856 _146862 A)). Qed.
Lemma lem8439494 {_146851 _146856 _146862 A : Type'} : (term880 _146851 _146856 _146862 A) = (term1115 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8438619 _146851 _146856 _146862 A) (@lem8439487 _146851 _146856 _146862 A)). Qed.
Lemma lem8439509 (p : Prop) : p = (term153 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8439510 {_146851 _146856 _146862 A : Type'} : (term1019 _146851 _146856 _146862 A) = (term1116 _146851 _146856 _146862 A).
Proof. exact (@lem8439509 (term1019 _146851 _146856 _146862 A)). Qed.
Lemma lem8439511 {_146851 _146856 _146862 A : Type'} : (term1116 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (SYM (@lem8439510 _146851 _146856 _146862 A)). Qed.
Lemma lem8439512 {_146851 _146856 _146862 A : Type'} (h1 : term1117 _146851 _146856 _146862 A) : term1117 _146851 _146856 _146862 A.
Proof. exact (h1). Qed.
Lemma lem8439515 {_146851 _146856 _146862 A : Type'} (h1 : term1116 _146851 _146856 _146862 A) : term1116 _146851 _146856 _146862 A.
Proof. exact (h1). Qed.
Lemma lem8439516 {_146851 _146856 _146862 A : Type'} : term1118 _146851 _146856 _146862 A.
Proof. exact (fun h0 : term1116 _146851 _146856 _146862 A => @lem8439515 _146851 _146856 _146862 A h0). Qed.
Lemma lem8439517 {_146851 _146856 _146862 A : Type'} (h1 : term1118 _146851 _146856 _146862 A) : term1118 _146851 _146856 _146862 A.
Proof. exact (h1). Qed.
Lemma lem8439518 {_146851 _146856 _146862 A : Type'} (h1 : term1116 _146851 _146856 _146862 A) : term1116 _146851 _146856 _146862 A.
Proof. exact (h1). Qed.
Lemma lem8439519 {_146851 _146856 _146862 A : Type'} (h1 : term1116 _146851 _146856 _146862 A) (h2 : term1118 _146851 _146856 _146862 A) : term1116 _146851 _146856 _146862 A.
Proof. exact (@lem8439517 _146851 _146856 _146862 A h2 (@lem8439518 _146851 _146856 _146862 A h1)). Qed.
Lemma lem8439520 {_146851 _146856 _146862 A : Type'} (h1 : term1116 _146851 _146856 _146862 A) : term1119 _146851 _146856 _146862 A.
Proof. exact (fun h0 : term1118 _146851 _146856 _146862 A => @lem8439519 _146851 _146856 _146862 A h1 h0). Qed.
Lemma lem8439521 {_146851 _146856 _146862 A : Type'} (h1 : term1118 _146851 _146856 _146862 A) : term1118 _146851 _146856 _146862 A.
Proof. exact (h1). Qed.
Lemma lem8439522 {_146851 _146856 _146862 A : Type'} (h1 : term1116 _146851 _146856 _146862 A) (h2 : term1118 _146851 _146856 _146862 A) : term1116 _146851 _146856 _146862 A.
Proof. exact (@lem8439520 _146851 _146856 _146862 A h1 (@lem8439521 _146851 _146856 _146862 A h2)). Qed.
Lemma lem8439523 {_146851 _146856 _146862 A : Type'} (h1 : term1118 _146851 _146856 _146862 A) : term1118 _146851 _146856 _146862 A.
Proof. exact (fun h0 : term1116 _146851 _146856 _146862 A => @lem8439522 _146851 _146856 _146862 A h0 h1). Qed.
Lemma lem8439524 {_146851 _146856 _146862 A : Type'} : term1120 _146851 _146856 _146862 A.
Proof. exact (fun h0 : term1118 _146851 _146856 _146862 A => @lem8439523 _146851 _146856 _146862 A h0). Qed.
Lemma lem8439527 {_146851 _146856 _146862 A : Type'} : term1118 _146851 _146856 _146862 A.
Proof. exact (@lem8439524 _146851 _146856 _146862 A (@lem8439516 _146851 _146856 _146862 A)). Qed.
Lemma lem8439528 {_146851 _146856 _146862 A : Type'} : term1118 _146851 _146856 _146862 A.
Proof. exact (@lem8439527 _146851 _146856 _146862 A). Qed.
Lemma lem8439530 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8439531 {_146851 _146856 _146862 A : Type'} : (term1116 _146851 _146856 _146862 A) = (term1121 _146851 _146856 _146862 A).
Proof. exact (@lem8439530 (term1117 _146851 _146856 _146862 A)). Qed.
Lemma lem8439533 (t : Prop) : (term161 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8439534 {_146851 _146856 _146862 A : Type'} : (term1121 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (@lem8439533 (term1019 _146851 _146856 _146862 A)). Qed.
Lemma lem8439585 {_146851 _146856 _146862 A : Type'} : (term1116 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (TRANS (@lem8439531 _146851 _146856 _146862 A) (@lem8439534 _146851 _146856 _146862 A)). Qed.
Lemma lem8439590 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1122 _146851 _146856 _146862 A p1' p1 p2' x p2 c y) = (term1122 _146851 _146856 _146862 A p1' p1 p2' x p2 c y).
Proof. exact (eq_refl (term1122 _146851 _146856 _146862 A p1' p1 p2' x p2 c y)). Qed.
Lemma lem8439591 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) : (term1123 _146851 _146856 _146862 A p1' p1 p2' x p2 c) = (term1123 _146851 _146856 _146862 A p1' p1 p2' x p2 c).
Proof. exact (fun_ext (fun y : A => @lem8439590 _146851 _146856 _146862 A p1' p1 p2' x p2 c y)). Qed.
Lemma lem8439592 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439593 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) : (term1124 _146851 _146856 _146862 A p1' p1 p2' x p2 c) = (term1124 _146851 _146856 _146862 A p1' p1 p2' x p2 c).
Proof. exact (MK_COMB (@lem8439592 A) (@lem8439591 _146851 _146856 _146862 A p1' p1 p2' x p2 c)). Qed.
Lemma lem8439594 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) : (term1125 _146851 _146856 _146862 A p1' p1 p2' p2 c) = (term1125 _146851 _146856 _146862 A p1' p1 p2' p2 c).
Proof. exact (fun_ext (fun x : A => @lem8439593 _146851 _146856 _146862 A p1' p1 p2' x p2 c)). Qed.
Lemma lem8439595 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439596 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) : (term1126 _146851 _146856 _146862 A p1' p1 p2' p2 c) = (term1126 _146851 _146856 _146862 A p1' p1 p2' p2 c).
Proof. exact (MK_COMB (@lem8439595 A) (@lem8439594 _146851 _146856 _146862 A p1' p1 p2' p2 c)). Qed.
Lemma lem8439597 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term1127 _146851 _146856 _146862 A p1' p1 p2' p2) = (term1127 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (fun_ext (fun c : _146862 => @lem8439596 _146851 _146856 _146862 A p1' p1 p2' p2 c)). Qed.
Lemma lem8439598 {_146862 : Type'} : (@all _146862) = (@all _146862).
Proof. exact (eq_refl (@all _146862)). Qed.
Lemma lem8439599 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1' p1 p2' p2) = (term981 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (MK_COMB (@lem8439598 _146862) (@lem8439597 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8439604 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1122 _146851 _146856 _146862 A p1 p1' p2 x p2' c y) = (term1122 _146851 _146856 _146862 A p1 p1' p2 x p2' c y).
Proof. exact (eq_refl (term1122 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439605 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1123 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1123 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (fun_ext (fun y : A => @lem8439604 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439606 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439607 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1124 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1124 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (MK_COMB (@lem8439606 A) (@lem8439605 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439608 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1125 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1125 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (fun_ext (fun x : A => @lem8439607 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439609 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439610 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1126 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1126 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (MK_COMB (@lem8439609 A) (@lem8439608 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439611 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1127 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1127 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (fun_ext (fun c : _146862 => @lem8439610 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439612 {_146862 : Type'} : (@all _146862) = (@all _146862).
Proof. exact (eq_refl (@all _146862)). Qed.
Lemma lem8439613 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1 p1' p2 p2') = (term981 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8439612 _146862) (@lem8439611 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8439614 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8439615 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1010 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1010 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8439614) (@lem8439613 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8439616 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : (term1011 _146851 _146856 _146862 A p1' p1 p2' p2) = (term1011 _146851 _146856 _146862 A p1' p1 p2' p2).
Proof. exact (MK_COMB (@lem8439615 _146851 _146856 _146862 A p1 p1' p2 p2') (@lem8439599 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8439617 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1012 _146851 _146856 _146862 A p1' p1 p2) = (term1012 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (fun_ext (fun p2' : type1475 _146856 _146862 A => @lem8439616 _146851 _146856 _146862 A p1' p1 p2' p2)). Qed.
Lemma lem8439618 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439619 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1013 _146851 _146856 _146862 A p1' p1 p2) = (term1013 _146851 _146856 _146862 A p1' p1 p2).
Proof. exact (MK_COMB (@lem8439618 _146856 _146862 A) (@lem8439617 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8439620 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1014 _146851 _146856 _146862 A p1 p2) = (term1014 _146851 _146856 _146862 A p1 p2).
Proof. exact (fun_ext (fun p1' : A -> _146851 => @lem8439619 _146851 _146856 _146862 A p1' p1 p2)). Qed.
Lemma lem8439621 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439622 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : (term1015 _146851 _146856 _146862 A p1 p2) = (term1015 _146851 _146856 _146862 A p1 p2).
Proof. exact (MK_COMB (@lem8439621 _146851 A) (@lem8439620 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8439623 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term1016 _146851 _146856 _146862 A p1) = (term1016 _146851 _146856 _146862 A p1).
Proof. exact (fun_ext (fun p2 : type1475 _146856 _146862 A => @lem8439622 _146851 _146856 _146862 A p1 p2)). Qed.
Lemma lem8439624 {_146856 _146862 A : Type'} : (@all (_146862 -> A -> _146856)) = (@all (_146862 -> A -> _146856)).
Proof. exact (eq_refl (@all (_146862 -> A -> _146856))). Qed.
Lemma lem8439625 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : (term1017 _146851 _146856 _146862 A p1) = (term1017 _146851 _146856 _146862 A p1).
Proof. exact (MK_COMB (@lem8439624 _146856 _146862 A) (@lem8439623 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8439626 {_146851 _146856 _146862 A : Type'} : (term1018 _146851 _146856 _146862 A) = (term1018 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun p1 : A -> _146851 => @lem8439625 _146851 _146856 _146862 A p1)). Qed.
Lemma lem8439627 {_146851 A : Type'} : (@all (A -> _146851)) = (@all (A -> _146851)).
Proof. exact (eq_refl (@all (A -> _146851))). Qed.
Lemma lem8439628 {_146851 _146856 _146862 A : Type'} : (term1019 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8439627 _146851 A) (@lem8439626 _146851 _146856 _146862 A)). Qed.
Lemma lem8439697 {_146851 _146856 _146862 A : Type'} : (term1116 _146851 _146856 _146862 A) = (term1019 _146851 _146856 _146862 A).
Proof. exact (TRANS (@lem8439585 _146851 _146856 _146862 A) (@lem8439628 _146851 _146856 _146862 A)). Qed.
Lemma lem8439698 {_146851 _146856 _146862 A : Type'} : (term1019 _146851 _146856 _146862 A) = (term1116 _146851 _146856 _146862 A).
Proof. exact (SYM (@lem8439697 _146851 _146856 _146862 A)). Qed.
Lemma lem8439699 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term981 _146851 _146856 _146862 A p1 p1' p2 p2'.
Proof. exact (h1). Qed.
Lemma lem8439702 (p : Prop) : p = (term153 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8439703 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : ((p2' c x) = (p2 c y)) = (term1128 _146856 _146862 A p2' x p2 c y).
Proof. exact (@lem8439702 ((p2' c x) = (p2 c y))). Qed.
Lemma lem8439704 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1128 _146856 _146862 A p2' x p2 c y) = ((p2' c x) = (p2 c y)).
Proof. exact (SYM (@lem8439703 _146856 _146862 A p2' x p2 c y)). Qed.
Lemma lem8439705 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1129 _146856 _146862 A p2' x p2 c y.
Proof. exact (h1). Qed.
Lemma lem8439712 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1122 _146851 _146856 _146862 A p1 p1' p2 x p2' c y) = (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y).
Proof. exact (@lem17265 ((p1 x) = (p1' y)) ((p2 c x) = (p2' c y))). Qed.
Lemma lem8439713 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1123 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1131 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (fun_ext (fun y : A => @lem8439712 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439714 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439715 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1124 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1132 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (MK_COMB (@lem8439714 A) (@lem8439713 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439716 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1125 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1133 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (fun_ext (fun x : A => @lem8439715 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439717 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439718 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1126 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (MK_COMB (@lem8439717 A) (@lem8439716 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439719 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1127 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1135 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (fun_ext (fun c : _146862 => @lem8439718 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439720 {_146862 : Type'} : (@all _146862) = (@all _146862).
Proof. exact (eq_refl (@all _146862)). Qed.
Lemma lem8439781 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term981 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1136 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8439720 _146862) (@lem8439719 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8439782 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1136 _146851 _146856 _146862 A p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem8439781 _146851 _146856 _146862 A p1 p1' p2 p2') (@lem8439699 _146851 _146856 _146862 A p1 p1' p2 p2' h1)). Qed.
Lemma lem8439788 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (h1). Qed.
Lemma lem8439794 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1129 _146856 _146862 A p2' x p2 c y.
Proof. exact (h1). Qed.
Lemma lem8439821 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y) = (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y).
Proof. exact (eq_refl (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439822 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1131 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1131 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (fun_ext (fun y : A => @lem8439821 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439823 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439824 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1132 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1132 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (MK_COMB (@lem8439823 A) (@lem8439822 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439825 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1133 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1133 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (fun_ext (fun x : A => @lem8439824 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439826 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439827 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (MK_COMB (@lem8439826 A) (@lem8439825 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439828 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1135 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1135 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (fun_ext (fun c : _146862 => @lem8439827 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439829 {_146862 : Type'} : (@all _146862) = (@all _146862).
Proof. exact (eq_refl (@all _146862)). Qed.
Lemma lem8439830 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1136 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1136 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8439829 _146862) (@lem8439828 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8439831 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1136 _146851 _146856 _146862 A p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem8439830 _146851 _146856 _146862 A p1 p1' p2 p2') (@lem8439782 _146851 _146856 _146862 A p1 p1' p2 p2' h1)). Qed.
Lemma lem8439841 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (h1). Qed.
Lemma lem8439857 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1129 _146856 _146862 A p2' x p2 c y.
Proof. exact (h1). Qed.
Lemma lem8439865 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y) = (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y).
Proof. exact (eq_refl (term1130 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439866 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1131 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1131 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (fun_ext (fun y : A => @lem8439865 _146851 _146856 _146862 A p1 p1' p2 x p2' c y)). Qed.
Lemma lem8439867 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439868 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (x : A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1132 _146851 _146856 _146862 A p1 p1' p2 x p2' c) = (term1132 _146851 _146856 _146862 A p1 p1' p2 x p2' c).
Proof. exact (MK_COMB (@lem8439867 A) (@lem8439866 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439869 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1133 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1133 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (fun_ext (fun x : A => @lem8439868 _146851 _146856 _146862 A p1 p1' p2 x p2' c)). Qed.
Lemma lem8439870 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8439871 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (c : _146862) : (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' c) = (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' c).
Proof. exact (MK_COMB (@lem8439870 A) (@lem8439869 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439872 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1135 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1135 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (fun_ext (fun c : _146862 => @lem8439871 _146851 _146856 _146862 A p1 p1' p2 p2' c)). Qed.
Lemma lem8439873 {_146862 : Type'} : (@all _146862) = (@all _146862).
Proof. exact (eq_refl (@all _146862)). Qed.
Lemma lem8439875 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) : (term1136 _146851 _146856 _146862 A p1 p1' p2 p2') = (term1136 _146851 _146856 _146862 A p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8439873 _146862) (@lem8439872 _146851 _146856 _146862 A p1 p1' p2 p2')). Qed.
Lemma lem8439876 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1136 _146851 _146856 _146862 A p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem8439875 _146851 _146856 _146862 A p1 p1' p2 p2') (@lem8439831 _146851 _146856 _146862 A p1 p1' p2 p2' h1)). Qed.
Lemma lem8439880 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (h1). Qed.
Lemma lem8439884 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1129 _146856 _146862 A p2' x p2 c y.
Proof. exact (h1). Qed.
Lemma lem8439885 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1137 _146851 _146856 _146862 A p1 p1' p2 p2' _117011.
Proof. exact (@lem8439876 _146851 _146856 _146862 A p1 p1' p2 p2' h1 _117011). Qed.
Lemma lem8439886 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) : (term1137 _146851 _146856 _146862 A p1 p1' p2 p2' _117011) = (term1134 _146851 _146856 _146862 A p1 p1' p2 p2' _117011).
Proof. exact (eq_refl (term1137 _146851 _146856 _146862 A p1 p1' p2 p2' _117011)). Qed.
Lemma lem8439887 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1134 _146851 _146856 _146862 A p1 p1' p2 p2' _117011.
Proof. exact (EQ_MP (@lem8439886 _146851 _146856 _146862 A p1 p1' p2 p2' _117011) (@lem8439885 _146851 _146856 _146862 A _117011 p1 p1' p2 p2' h1)). Qed.
Lemma lem8439888 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (_117012 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1138 _146851 _146856 _146862 A p1 p1' p2 p2' _117011 _117012.
Proof. exact (@lem8439887 _146851 _146856 _146862 A _117011 p1 p1' p2 p2' h1 _117012). Qed.
Lemma lem8439889 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) : (term1138 _146851 _146856 _146862 A p1 p1' p2 p2' _117011 _117012) = (term1132 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011).
Proof. exact (eq_refl (term1138 _146851 _146856 _146862 A p1 p1' p2 p2' _117011 _117012)). Qed.
Lemma lem8439890 {_146851 _146856 _146862 A : Type'} (_117012 : A) (_117011 : _146862) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1132 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011.
Proof. exact (EQ_MP (@lem8439889 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011) (@lem8439888 _146851 _146856 _146862 A _117011 _117012 p1 p1' p2 p2' h1)). Qed.
Lemma lem8439891 {_146851 _146856 _146862 A : Type'} (_117012 : A) (_117011 : _146862) (_117013 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1139 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013.
Proof. exact (@lem8439890 _146851 _146856 _146862 A _117012 _117011 p1 p1' p2 p2' h1 _117013). Qed.
Lemma lem8439892 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (_117013 : A) : (term1139 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013).
Proof. exact (eq_refl (term1139 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013)). Qed.
Lemma lem8439899 {_146851 _146856 _146862 A : Type'} (_117012 : A) (_117011 : _146862) (_117013 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013.
Proof. exact (EQ_MP (@lem8439892 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) (@lem8439891 _146851 _146856 _146862 A _117012 _117011 _117013 p1 p1' p2 p2' h1)). Qed.
Lemma lem8439901 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (h1). Qed.
Lemma lem8439903 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1129 _146856 _146862 A p2' x p2 c y.
Proof. exact (h1). Qed.
Lemma lem8439951 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : term1140 _146856 x y z.
Proof. exact (@lem21385 _146856 x y z). Qed.
Lemma lem8439957 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : term1140 _146851 x y z.
Proof. exact (@lem21385 _146851 x y z). Qed.
Lemma lem8439959 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (h1). Qed.
Lemma lem8439960 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : term1141 _146851 A p1' x p1 y.
Proof. exact (fun h0 : term1142 _146851 A p1' x p1 y => @lem8439959 _146851 A p1' x p1 y h1). Qed.
Lemma lem8439962 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8439963 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) : (term1141 _146851 A p1' x p1 y) = ((p1' x) = (p1 y)).
Proof. exact (@lem8439962 ((p1' x) = (p1 y))). Qed.
Lemma lem8439964 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1' x) = (p1 y).
Proof. exact (EQ_MP (@lem8439963 _146851 A p1' x p1 y) (@lem8439960 _146851 A p1' x p1 y h1)). Qed.
Lemma lem8439966 {_146851 : Type'} (x : _146851) : x = x.
Proof. exact (@lem21386 _146851 x). Qed.
Lemma lem8439967 {_146851 : Type'} (x : _146851) : x = x.
Proof. exact (@lem8439966 _146851 x). Qed.
Lemma lem8439968 {_146851 A : Type'} (p1' : A -> _146851) (x : A) : (p1' x) = (p1' x).
Proof. exact (@lem8439967 _146851 (p1' x)). Qed.
Lemma lem8439969 {_146851 A : Type'} (p1' : A -> _146851) (x : A) : term1143 _146851 A p1' x.
Proof. exact (fun h0 : term1144 _146851 A p1' x => @lem8439968 _146851 A p1' x). Qed.
Lemma lem8439971 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8439972 {_146851 A : Type'} (p1' : A -> _146851) (x : A) : (term1143 _146851 A p1' x) = ((p1' x) = (p1' x)).
Proof. exact (@lem8439971 ((p1' x) = (p1' x))). Qed.
Lemma lem8439973 {_146851 A : Type'} (p1' : A -> _146851) (x : A) : (p1' x) = (p1' x).
Proof. exact (EQ_MP (@lem8439972 _146851 A p1' x) (@lem8439969 _146851 A p1' x)). Qed.
Lemma lem8439991 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8439992 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1145 _146851 x y z) = (term1146 _146851 y x z).
Proof. exact (@lem8439991 (y = z) (term650 _146851 x z)). Qed.
Lemma lem8440002 {_146851 : Type'} (x : _146851) (y : _146851) : (term710 _146851 x y) = (term710 _146851 x y).
Proof. exact (eq_refl (term710 _146851 x y)). Qed.
Lemma lem8440003 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1140 _146851 x y z) = (term1147 _146851 y x z).
Proof. exact (MK_COMB (@lem8440002 _146851 x y) (@lem8439992 _146851 y x z)). Qed.
Lemma lem8440007 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8440008 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1147 _146851 y x z) = (term1148 _146851 y x z).
Proof. exact (@lem8440007 (y = z) (term650 _146851 x y) (term650 _146851 x z)). Qed.
Lemma lem8440030 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1140 _146851 x y z) = (term1148 _146851 y x z).
Proof. exact (TRANS (@lem8440003 _146851 y x z) (@lem8440008 _146851 y x z)). Qed.
Lemma lem8440031 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440032 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1149 _146851 x y z) = (term1150 _146851 y x z).
Proof. exact (MK_COMB (@lem8440031) (@lem8440030 _146851 y x z)). Qed.
Lemma lem8440054 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1148 _146851 y x z) = (term1148 _146851 y x z).
Proof. exact (eq_refl (term1148 _146851 y x z)). Qed.
Lemma lem8440055 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : ((term1140 _146851 x y z) = (term1148 _146851 y x z)) = ((term1148 _146851 y x z) = (term1148 _146851 y x z)).
Proof. exact (MK_COMB (@lem8440032 _146851 y x z) (@lem8440054 _146851 y x z)). Qed.
Lemma lem8440057 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8440058 (x : Prop) : (x = x) = True.
Proof. exact (@lem8440057 Prop x). Qed.
Lemma lem8440059 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : ((term1148 _146851 y x z) = (term1148 _146851 y x z)) = True.
Proof. exact (@lem8440058 (term1148 _146851 y x z)). Qed.
Lemma lem8440060 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : ((term1140 _146851 x y z) = (term1148 _146851 y x z)) = True.
Proof. exact (TRANS (@lem8440055 _146851 y x z) (@lem8440059 _146851 y x z)). Qed.
Lemma lem8440061 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : True = ((term1140 _146851 x y z) = (term1148 _146851 y x z)).
Proof. exact (SYM (@lem8440060 _146851 y x z)). Qed.
Lemma lem8440062 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1140 _146851 x y z) = (term1148 _146851 y x z).
Proof. exact (EQ_MP (@lem8440061 _146851 y x z) (@lem0)). Qed.
Lemma lem8440063 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : term1148 _146851 y x z.
Proof. exact (EQ_MP (@lem8440062 _146851 y x z) (@lem8439957 _146851 x y z)). Qed.
Lemma lem8440065 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8440066 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : (term1148 _146851 y x z) = (term1151 _146851 x y z).
Proof. exact (@lem8440065 (term1152 _146851 y x z) (y = z)). Qed.
Lemma lem8440068 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8440069 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1153 _146851 y x z) = (term1154 _146851 y x z).
Proof. exact (@lem8440068 (term650 _146851 x y) (term650 _146851 x z)). Qed.
Lemma lem8440071 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8440072 {_146851 : Type'} (x : _146851) (y : _146851) : (term723 _146851 x y) = (x = y).
Proof. exact (@lem8440071 (x = y)). Qed.
Lemma lem8440073 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8440074 {_146851 : Type'} (x : _146851) (y : _146851) : (term724 _146851 x y) = (term725 _146851 x y).
Proof. exact (MK_COMB (@lem8440073) (@lem8440072 _146851 x y)). Qed.
Lemma lem8440076 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8440077 {_146851 : Type'} (x : _146851) (z : _146851) : (term723 _146851 x z) = (x = z).
Proof. exact (@lem8440076 (x = z)). Qed.
Lemma lem8440078 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1154 _146851 y x z) = (term1155 _146851 y x z).
Proof. exact (MK_COMB (@lem8440074 _146851 x y) (@lem8440077 _146851 x z)). Qed.
Lemma lem8440079 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1153 _146851 y x z) = (term1155 _146851 y x z).
Proof. exact (TRANS (@lem8440069 _146851 y x z) (@lem8440078 _146851 y x z)). Qed.
Lemma lem8440080 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8440081 {_146851 : Type'} (y : _146851) (x : _146851) (z : _146851) : (term1156 _146851 y x z) = (term1157 _146851 y x z).
Proof. exact (MK_COMB (@lem8440080) (@lem8440079 _146851 y x z)). Qed.
Lemma lem8440082 {_146851 : Type'} (y : _146851) (z : _146851) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem8440083 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : (term1151 _146851 x y z) = (term1158 _146851 x y z).
Proof. exact (MK_COMB (@lem8440081 _146851 y x z) (@lem8440082 _146851 y z)). Qed.
Lemma lem8440084 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : (term1148 _146851 y x z) = (term1158 _146851 x y z).
Proof. exact (TRANS (@lem8440066 _146851 x y z) (@lem8440083 _146851 x y z)). Qed.
Lemma lem8440086 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : term1159 _146851 A p1 y p1' x.
Proof. exact (conj (@lem8439964 _146851 A p1' x p1 y h1) (@lem8439973 _146851 A p1' x)). Qed.
Lemma lem8440088 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : term1158 _146851 x y z.
Proof. exact (EQ_MP (@lem8440084 _146851 x y z) (@lem8440063 _146851 y x z)). Qed.
Lemma lem8440089 {_146851 : Type'} (x : _146851) (y : _146851) (z : _146851) : term1158 _146851 x y z.
Proof. exact (@lem8440088 _146851 x y z). Qed.
Lemma lem8440090 {_146851 A : Type'} (p1 : A -> _146851) (y : A) (p1' : A -> _146851) (x : A) : term1160 _146851 A p1 y p1' x.
Proof. exact (@lem8440089 _146851 (p1' x) (p1 y) (p1' x)). Qed.
Lemma lem8440093 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1 y) = (p1' x).
Proof. exact (@lem8440090 _146851 A p1 y p1' x (@lem8440086 _146851 A p1' x p1 y h1)). Qed.
Lemma lem8440094 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : term1141 _146851 A p1 y p1' x.
Proof. exact (fun h0 : term1142 _146851 A p1 y p1' x => @lem8440093 _146851 A p1' x p1 y h1). Qed.
Lemma lem8440096 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8440097 {_146851 A : Type'} (p1 : A -> _146851) (y : A) (p1' : A -> _146851) (x : A) : (term1141 _146851 A p1 y p1' x) = ((p1 y) = (p1' x)).
Proof. exact (@lem8440096 ((p1 y) = (p1' x))). Qed.
Lemma lem8440098 {_146851 A : Type'} (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : (p1' x) = (p1 y)) : (p1 y) = (p1' x).
Proof. exact (EQ_MP (@lem8440097 _146851 A p1 y p1' x) (@lem8440094 _146851 A p1' x p1 y h1)). Qed.
Lemma lem8440104 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8440105 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013).
Proof. exact (@lem8440104 ((p2 _117011 _117012) = (p2' _117011 _117013)) (term1142 _146851 A p1 _117012 p1' _117013)). Qed.
Lemma lem8440115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440116 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1162 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1163 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013).
Proof. exact (MK_COMB (@lem8440115) (@lem8440105 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440126 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013).
Proof. exact (eq_refl (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440127 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : ((term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)) = ((term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)).
Proof. exact (MK_COMB (@lem8440116 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) (@lem8440126 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440129 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8440130 (x : Prop) : (x = x) = True.
Proof. exact (@lem8440129 Prop x). Qed.
Lemma lem8440131 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : ((term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)) = True.
Proof. exact (@lem8440130 (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440132 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : ((term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)) = True.
Proof. exact (TRANS (@lem8440127 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) (@lem8440131 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440133 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : True = ((term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)).
Proof. exact (SYM (@lem8440132 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013)). Qed.
Lemma lem8440134 {_146851 _146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1130 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013).
Proof. exact (EQ_MP (@lem8440133 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) (@lem0)). Qed.
Lemma lem8440135 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (_117012 : A) (_117013 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013.
Proof. exact (EQ_MP (@lem8440134 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) (@lem8439899 _146851 _146856 _146862 A _117012 _117011 _117013 p1 p1' p2 p2' h1)). Qed.
Lemma lem8440137 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8440138 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (_117013 : A) : (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) = (term1164 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013).
Proof. exact (@lem8440137 (term1142 _146851 A p1 _117012 p1' _117013) ((p2 _117011 _117012) = (p2' _117011 _117013))). Qed.
Lemma lem8440140 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8440141 {_146851 A : Type'} (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1165 _146851 A p1 _117012 p1' _117013) = ((p1 _117012) = (p1' _117013)).
Proof. exact (@lem8440140 ((p1 _117012) = (p1' _117013))). Qed.
Lemma lem8440142 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8440143 {_146851 A : Type'} (p1 : A -> _146851) (_117012 : A) (p1' : A -> _146851) (_117013 : A) : (term1166 _146851 A p1 _117012 p1' _117013) = (term1167 _146851 A p1 _117012 p1' _117013).
Proof. exact (MK_COMB (@lem8440142) (@lem8440141 _146851 A p1 _117012 p1' _117013)). Qed.
Lemma lem8440144 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (_117013 : A) : ((p2 _117011 _117012) = (p2' _117011 _117013)) = ((p2 _117011 _117012) = (p2' _117011 _117013)).
Proof. exact (eq_refl ((p2 _117011 _117012) = (p2' _117011 _117013))). Qed.
Lemma lem8440145 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (_117013 : A) : (term1164 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) = (term1122 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013).
Proof. exact (MK_COMB (@lem8440143 _146851 A p1 _117012 p1' _117013) (@lem8440144 _146856 _146862 A p2 _117012 p2' _117011 _117013)). Qed.
Lemma lem8440146 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (_117012 : A) (p2' : type1475 _146856 _146862 A) (_117011 : _146862) (_117013 : A) : (term1161 _146851 _146856 _146862 A p2 p2' _117011 p1 _117012 p1' _117013) = (term1122 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013).
Proof. exact (TRANS (@lem8440138 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) (@lem8440145 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013)). Qed.
Lemma lem8440149 {_146851 _146856 _146862 A : Type'} (_117012 : A) (_117011 : _146862) (_117013 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1122 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013.
Proof. exact (EQ_MP (@lem8440146 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013) (@lem8440135 _146851 _146856 _146862 A _117011 _117012 _117013 p1 p1' p2 p2' h1)). Qed.
Lemma lem8440150 {_146851 _146856 _146862 A : Type'} (_117012 : A) (_117011 : _146862) (_117013 : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1122 _146851 _146856 _146862 A p1 p1' p2 _117012 p2' _117011 _117013.
Proof. exact (@lem8440149 _146851 _146856 _146862 A _117012 _117011 _117013 p1 p1' p2 p2' h1). Qed.
Lemma lem8440151 {_146851 _146856 _146862 A : Type'} (y : A) (_117011 : _146862) (x : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1122 _146851 _146856 _146862 A p1 p1' p2 y p2' _117011 x.
Proof. exact (@lem8440150 _146851 _146856 _146862 A y _117011 x p1 p1' p2 p2' h1). Qed.
Lemma lem8440154 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2 _117011 y) = (p2' _117011 x).
Proof. exact (@lem8440151 _146851 _146856 _146862 A y _117011 x p1 p1' p2 p2' h1 (@lem8440098 _146851 A p1' x p1 y h2)). Qed.
Lemma lem8440155 {_146851 _146856 _146862 A : Type'} (_117011 : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2 _117011 y) = (p2' _117011 x).
Proof. exact (@lem8440154 _146851 _146856 _146862 A _117011 p2 p2' p1' x p1 y h1 h2). Qed.
Lemma lem8440156 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2 c y) = (p2' c x).
Proof. exact (@lem8440155 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2). Qed.
Lemma lem8440157 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : term1168 _146856 _146862 A p2 y p2' c x.
Proof. exact (fun h0 : term1129 _146856 _146862 A p2 y p2' c x => @lem8440156 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2). Qed.
Lemma lem8440159 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8440160 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (y : A) (p2' : type1475 _146856 _146862 A) (c : _146862) (x : A) : (term1168 _146856 _146862 A p2 y p2' c x) = ((p2 c y) = (p2' c x)).
Proof. exact (@lem8440159 ((p2 c y) = (p2' c x))). Qed.
Lemma lem8440161 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2 c y) = (p2' c x).
Proof. exact (EQ_MP (@lem8440160 _146856 _146862 A p2 y p2' c x) (@lem8440157 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2)). Qed.
Lemma lem8440163 {_146856 : Type'} (x : _146856) : x = x.
Proof. exact (@lem21386 _146856 x). Qed.
Lemma lem8440164 {_146856 : Type'} (x : _146856) : x = x.
Proof. exact (@lem8440163 _146856 x). Qed.
Lemma lem8440165 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (p2 c y) = (p2 c y).
Proof. exact (@lem8440164 _146856 (p2 c y)). Qed.
Lemma lem8440166 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : term1169 _146856 _146862 A p2 c y.
Proof. exact (fun h0 : term1170 _146856 _146862 A p2 c y => @lem8440165 _146856 _146862 A p2 c y). Qed.
Lemma lem8440168 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8440169 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1169 _146856 _146862 A p2 c y) = ((p2 c y) = (p2 c y)).
Proof. exact (@lem8440168 ((p2 c y) = (p2 c y))). Qed.
Lemma lem8440170 {_146856 _146862 A : Type'} (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (p2 c y) = (p2 c y).
Proof. exact (EQ_MP (@lem8440169 _146856 _146862 A p2 c y) (@lem8440166 _146856 _146862 A p2 c y)). Qed.
Lemma lem8440188 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8440189 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1145 _146856 x y z) = (term1146 _146856 y x z).
Proof. exact (@lem8440188 (y = z) (term650 _146856 x z)). Qed.
Lemma lem8440199 {_146856 : Type'} (x : _146856) (y : _146856) : (term710 _146856 x y) = (term710 _146856 x y).
Proof. exact (eq_refl (term710 _146856 x y)). Qed.
Lemma lem8440200 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1140 _146856 x y z) = (term1147 _146856 y x z).
Proof. exact (MK_COMB (@lem8440199 _146856 x y) (@lem8440189 _146856 y x z)). Qed.
Lemma lem8440204 (q : Prop) (p : Prop) (r : Prop) : (term712 p q r) = (term712 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8440205 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1147 _146856 y x z) = (term1148 _146856 y x z).
Proof. exact (@lem8440204 (y = z) (term650 _146856 x y) (term650 _146856 x z)). Qed.
Lemma lem8440227 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1140 _146856 x y z) = (term1148 _146856 y x z).
Proof. exact (TRANS (@lem8440200 _146856 y x z) (@lem8440205 _146856 y x z)). Qed.
Lemma lem8440228 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440229 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1149 _146856 x y z) = (term1150 _146856 y x z).
Proof. exact (MK_COMB (@lem8440228) (@lem8440227 _146856 y x z)). Qed.
Lemma lem8440251 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1148 _146856 y x z) = (term1148 _146856 y x z).
Proof. exact (eq_refl (term1148 _146856 y x z)). Qed.
Lemma lem8440252 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : ((term1140 _146856 x y z) = (term1148 _146856 y x z)) = ((term1148 _146856 y x z) = (term1148 _146856 y x z)).
Proof. exact (MK_COMB (@lem8440229 _146856 y x z) (@lem8440251 _146856 y x z)). Qed.
Lemma lem8440254 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8440255 (x : Prop) : (x = x) = True.
Proof. exact (@lem8440254 Prop x). Qed.
Lemma lem8440256 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : ((term1148 _146856 y x z) = (term1148 _146856 y x z)) = True.
Proof. exact (@lem8440255 (term1148 _146856 y x z)). Qed.
Lemma lem8440257 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : ((term1140 _146856 x y z) = (term1148 _146856 y x z)) = True.
Proof. exact (TRANS (@lem8440252 _146856 y x z) (@lem8440256 _146856 y x z)). Qed.
Lemma lem8440258 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : True = ((term1140 _146856 x y z) = (term1148 _146856 y x z)).
Proof. exact (SYM (@lem8440257 _146856 y x z)). Qed.
Lemma lem8440259 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1140 _146856 x y z) = (term1148 _146856 y x z).
Proof. exact (EQ_MP (@lem8440258 _146856 y x z) (@lem0)). Qed.
Lemma lem8440260 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : term1148 _146856 y x z.
Proof. exact (EQ_MP (@lem8440259 _146856 y x z) (@lem8439951 _146856 x y z)). Qed.
Lemma lem8440262 (b : Prop) (a : Prop) : (a \/ b) = (term716 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8440263 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : (term1148 _146856 y x z) = (term1151 _146856 x y z).
Proof. exact (@lem8440262 (term1152 _146856 y x z) (y = z)). Qed.
Lemma lem8440265 (a : Prop) (b : Prop) : (term719 a b) = (term720 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8440266 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1153 _146856 y x z) = (term1154 _146856 y x z).
Proof. exact (@lem8440265 (term650 _146856 x y) (term650 _146856 x z)). Qed.
Lemma lem8440268 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8440269 {_146856 : Type'} (x : _146856) (y : _146856) : (term723 _146856 x y) = (x = y).
Proof. exact (@lem8440268 (x = y)). Qed.
Lemma lem8440270 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8440271 {_146856 : Type'} (x : _146856) (y : _146856) : (term724 _146856 x y) = (term725 _146856 x y).
Proof. exact (MK_COMB (@lem8440270) (@lem8440269 _146856 x y)). Qed.
Lemma lem8440273 (a : Prop) : (term161 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8440274 {_146856 : Type'} (x : _146856) (z : _146856) : (term723 _146856 x z) = (x = z).
Proof. exact (@lem8440273 (x = z)). Qed.
Lemma lem8440275 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1154 _146856 y x z) = (term1155 _146856 y x z).
Proof. exact (MK_COMB (@lem8440271 _146856 x y) (@lem8440274 _146856 x z)). Qed.
Lemma lem8440276 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1153 _146856 y x z) = (term1155 _146856 y x z).
Proof. exact (TRANS (@lem8440266 _146856 y x z) (@lem8440275 _146856 y x z)). Qed.
Lemma lem8440277 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8440278 {_146856 : Type'} (y : _146856) (x : _146856) (z : _146856) : (term1156 _146856 y x z) = (term1157 _146856 y x z).
Proof. exact (MK_COMB (@lem8440277) (@lem8440276 _146856 y x z)). Qed.
Lemma lem8440279 {_146856 : Type'} (y : _146856) (z : _146856) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem8440280 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : (term1151 _146856 x y z) = (term1158 _146856 x y z).
Proof. exact (MK_COMB (@lem8440278 _146856 y x z) (@lem8440279 _146856 y z)). Qed.
Lemma lem8440281 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : (term1148 _146856 y x z) = (term1158 _146856 x y z).
Proof. exact (TRANS (@lem8440263 _146856 x y z) (@lem8440280 _146856 x y z)). Qed.
Lemma lem8440283 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : term1171 _146856 _146862 A p2' x p2 c y.
Proof. exact (conj (@lem8440161 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2) (@lem8440170 _146856 _146862 A p2 c y)). Qed.
Lemma lem8440285 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : term1158 _146856 x y z.
Proof. exact (EQ_MP (@lem8440281 _146856 x y z) (@lem8440260 _146856 y x z)). Qed.
Lemma lem8440286 {_146856 : Type'} (x : _146856) (y : _146856) (z : _146856) : term1158 _146856 x y z.
Proof. exact (@lem8440285 _146856 x y z). Qed.
Lemma lem8440287 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : term1172 _146856 _146862 A p2' x p2 c y.
Proof. exact (@lem8440286 _146856 (p2 c y) (p2' c x) (p2 c y)). Qed.
Lemma lem8440290 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2' c x) = (p2 c y).
Proof. exact (@lem8440287 _146856 _146862 A p2' x p2 c y (@lem8440283 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2)). Qed.
Lemma lem8440291 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2' c x) = (p2 c y).
Proof. exact (@lem8440290 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2). Qed.
Lemma lem8440292 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : term1168 _146856 _146862 A p2' x p2 c y.
Proof. exact (fun h0 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440291 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2). Qed.
Lemma lem8440294 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8440295 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1168 _146856 _146862 A p2' x p2 c y) = ((p2' c x) = (p2 c y)).
Proof. exact (@lem8440294 ((p2' c x) = (p2 c y))). Qed.
Lemma lem8440296 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2' c x) = (p2 c y).
Proof. exact (EQ_MP (@lem8440295 _146856 _146862 A p2' x p2 c y) (@lem8440292 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2)). Qed.
Lemma lem8440299 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8440301 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) : (term1129 _146856 _146862 A p2' x p2 c y) = (term1173 _146856 _146862 A p2' x p2 c y).
Proof. exact (@lem8440299 ((p2' c x) = (p2 c y))). Qed.
Lemma lem8440304 {_146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (x : A) (p2 : type1475 _146856 _146862 A) (c : _146862) (y : A) (h1 : term1129 _146856 _146862 A p2' x p2 c y) : term1173 _146856 _146862 A p2' x p2 c y.
Proof. exact (EQ_MP (@lem8440301 _146856 _146862 A p2' x p2 c y) (@lem8439903 _146856 _146862 A p2' x p2 c y h1)). Qed.
Lemma lem8440307 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (@lem8440304 _146856 _146862 A p2' x p2 c y h2 (@lem8440296 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h3)). Qed.
Lemma lem8440308 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : term734.
Proof. exact (fun h0 : ~ False => @lem8440307 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3). Qed.
Lemma lem8440310 (p : Prop) : (term708 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8440311 : term734 = False.
Proof. exact (@lem8440310 False). Qed.
Lemma lem8440312 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440311) (@lem8440308 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3)). Qed.
Lemma lem8440313 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440312 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439903 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440314 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440313 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439903 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440315 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : ((p1' x) = (p1 y)) = False.
Proof. exact (prop_ext (fun h4 : (p1' x) = (p1 y) => @lem8440314 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439901 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440316 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440315 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439901 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440317 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440316 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439884 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440318 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440317 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439884 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440319 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : ((p1' x) = (p1 y)) = False.
Proof. exact (prop_ext (fun h4 : (p1' x) = (p1 y) => @lem8440318 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439880 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440320 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440319 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439880 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440321 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440320 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439884 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440322 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440321 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439884 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440323 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : ((p1' x) = (p1 y)) = False.
Proof. exact (prop_ext (fun h4 : (p1' x) = (p1 y) => @lem8440322 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439880 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440324 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440323 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439880 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440325 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440324 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439857 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440326 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440325 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439857 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440327 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : ((p1' x) = (p1 y)) = False.
Proof. exact (prop_ext (fun h4 : (p1' x) = (p1 y) => @lem8440326 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439841 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440328 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440327 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439841 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440329 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440328 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439794 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440330 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440329 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439794 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440331 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : ((p1' x) = (p1 y)) = False.
Proof. exact (prop_ext (fun h4 : (p1' x) = (p1 y) => @lem8440330 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439788 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440332 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440331 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439788 _146851 A p1' x p1 y h3)). Qed.
Lemma lem8440333 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : (term1129 _146856 _146862 A p2' x p2 c y) = False.
Proof. exact (prop_ext (fun h4 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440332 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (fun h4 : False => @lem8439705 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440334 {_146851 _146856 _146862 A : Type'} (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) (c : _146862) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : term1129 _146856 _146862 A p2' x p2 c y) (h3 : (p1' x) = (p1 y)) : False.
Proof. exact (EQ_MP (@lem8440333 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h2 h3) (@lem8439705 _146856 _146862 A p2' x p2 c y h2)). Qed.
Lemma lem8440335 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : term1128 _146856 _146862 A p2' x p2 c y.
Proof. exact (fun h0 : term1129 _146856 _146862 A p2' x p2 c y => @lem8440334 _146851 _146856 _146862 A p2' p2 c p1' x p1 y h1 h0 h2). Qed.
Lemma lem8440336 {_146851 _146856 _146862 A : Type'} (c : _146862) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (p1' : A -> _146851) (x : A) (p1 : A -> _146851) (y : A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') (h2 : (p1' x) = (p1 y)) : (p2' c x) = (p2 c y).
Proof. exact (EQ_MP (@lem8439704 _146856 _146862 A p2' x p2 c y) (@lem8440335 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h2)). Qed.
Lemma lem8440337 {_146851 _146856 _146862 A : Type'} (x : A) (c : _146862) (y : A) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1122 _146851 _146856 _146862 A p1' p1 p2' x p2 c y.
Proof. exact (fun h0 : (p1' x) = (p1 y) => @lem8440336 _146851 _146856 _146862 A c p2 p2' p1' x p1 y h1 h0). Qed.
Lemma lem8440342 {_146851 _146856 _146862 A : Type'} (x : A) (c : _146862) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1124 _146851 _146856 _146862 A p1' p1 p2' x p2 c.
Proof. exact (fun y : A => @lem8440337 _146851 _146856 _146862 A x c y p1 p1' p2 p2' h1). Qed.
Lemma lem8440347 {_146851 _146856 _146862 A : Type'} (c : _146862) (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term1126 _146851 _146856 _146862 A p1' p1 p2' p2 c.
Proof. exact (fun x : A => @lem8440342 _146851 _146856 _146862 A x c p1 p1' p2 p2' h1). Qed.
Lemma lem8440352 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p1' : A -> _146851) (p2 : type1475 _146856 _146862 A) (p2' : type1475 _146856 _146862 A) (h1 : term981 _146851 _146856 _146862 A p1 p1' p2 p2') : term981 _146851 _146856 _146862 A p1' p1 p2' p2.
Proof. exact (fun c : _146862 => @lem8440347 _146851 _146856 _146862 A c p1 p1' p2 p2' h1). Qed.
Lemma lem8440353 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2' : type1475 _146856 _146862 A) (p2 : type1475 _146856 _146862 A) : term1011 _146851 _146856 _146862 A p1' p1 p2' p2.
Proof. exact (fun h0 : term981 _146851 _146856 _146862 A p1 p1' p2 p2' => @lem8440352 _146851 _146856 _146862 A p1 p1' p2 p2' h0). Qed.
Lemma lem8440358 {_146851 _146856 _146862 A : Type'} (p1' : A -> _146851) (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1013 _146851 _146856 _146862 A p1' p1 p2.
Proof. exact (fun p2' : type1475 _146856 _146862 A => @lem8440353 _146851 _146856 _146862 A p1' p1 p2' p2). Qed.
Lemma lem8440363 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) (p2 : type1475 _146856 _146862 A) : term1015 _146851 _146856 _146862 A p1 p2.
Proof. exact (fun p1' : A -> _146851 => @lem8440358 _146851 _146856 _146862 A p1' p1 p2). Qed.
Lemma lem8440368 {_146851 _146856 _146862 A : Type'} (p1 : A -> _146851) : term1017 _146851 _146856 _146862 A p1.
Proof. exact (fun p2 : type1475 _146856 _146862 A => @lem8440363 _146851 _146856 _146862 A p1 p2). Qed.
Lemma lem8440373 {_146851 _146856 _146862 A : Type'} : term1019 _146851 _146856 _146862 A.
Proof. exact (fun p1 : A -> _146851 => @lem8440368 _146851 _146856 _146862 A p1). Qed.
Lemma lem8440374 {_146851 _146856 _146862 A : Type'} : term1116 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8439698 _146851 _146856 _146862 A) (@lem8440373 _146851 _146856 _146862 A)). Qed.
Lemma lem8440376 {_146851 _146856 _146862 A : Type'} : term1116 _146851 _146856 _146862 A.
Proof. exact (@lem8439528 _146851 _146856 _146862 A (@lem8440374 _146851 _146856 _146862 A)). Qed.
Lemma lem8440377 {_146851 _146856 _146862 A : Type'} (h1 : term1117 _146851 _146856 _146862 A) : False.
Proof. exact (@lem8440376 _146851 _146856 _146862 A (@lem8439512 _146851 _146856 _146862 A h1)). Qed.
Lemma lem8440378 {_146851 _146856 _146862 A : Type'} (h1 : term1117 _146851 _146856 _146862 A) : (term1117 _146851 _146856 _146862 A) = False.
Proof. exact (prop_ext (fun h2 : term1117 _146851 _146856 _146862 A => @lem8440377 _146851 _146856 _146862 A h1) (fun h2 : False => @lem8439512 _146851 _146856 _146862 A h1)). Qed.
Lemma lem8440379 {_146851 _146856 _146862 A : Type'} (h1 : term1117 _146851 _146856 _146862 A) : False.
Proof. exact (EQ_MP (@lem8440378 _146851 _146856 _146862 A h1) (@lem8439512 _146851 _146856 _146862 A h1)). Qed.
Lemma lem8440380 {_146851 _146856 _146862 A : Type'} : term1116 _146851 _146856 _146862 A.
Proof. exact (fun h0 : term1117 _146851 _146856 _146862 A => @lem8440379 _146851 _146856 _146862 A h0). Qed.
Lemma lem8440381 {_146851 _146856 _146862 A : Type'} : term1019 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8439511 _146851 _146856 _146862 A) (@lem8440380 _146851 _146856 _146862 A)). Qed.
Lemma lem8440382 {A B P : Type'} (clauses : type1635 A B P) : term1174 A B P clauses.
Proof. exact (@lem8423332 A B P clauses). Qed.
Lemma lem8440383 {A B P : Type'} (clauses : type1635 A B P) : (term1174 A B P clauses) = (term1175 A B P clauses).
Proof. exact (eq_refl (term1174 A B P clauses)). Qed.
Lemma lem8440384 {A B P : Type'} (clauses : type1635 A B P) : term1175 A B P clauses.
Proof. exact (EQ_MP (@lem8440383 A B P clauses) (@lem8440382 A B P clauses)). Qed.
Lemma lem8440385 {A B P : Type'} (clauses : type1635 A B P) : (term1175 A B P clauses) = ((term1175 A B P clauses) = True).
Proof. exact (@lem7 (term1175 A B P clauses)). Qed.
Lemma lem8440388 {_146851 _146856 _146862 A : Type'} : term1115 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8439494 _146851 _146856 _146862 A) (@lem8437915 _146851 _146856 _146862 A)). Qed.
Lemma lem8440389 {_146851 _146856 _146862 A : Type'} : term1115 _146851 _146856 _146862 A.
Proof. exact (@lem8440388 _146851 _146856 _146862 A). Qed.
Lemma lem8440390 {_146851 _146856 _146862 A : Type'} : term1114 _146851 _146856 _146862 A.
Proof. exact (@lem8440389 _146851 _146856 _146862 A (@lem8440381 _146851 _146856 _146862 A)). Qed.
Lemma lem8440392 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (h1 : (term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l)) : (term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l).
Proof. exact (h1). Qed.
Lemma lem8440393 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (h1 : (term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l)) : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l).
Proof. exact (SYM (@lem8440392 _146851 _146856 _146862 A l h1)). Qed.
Lemma lem8440394 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (h1 : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l)) : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l).
Proof. exact (h1). Qed.
Lemma lem8440395 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) (h1 : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l)) : (term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l).
Proof. exact (SYM (@lem8440394 _146851 _146856 _146862 A l h1)). Qed.
Lemma lem8440396 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : ((term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l)) = ((term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l)).
Proof. exact (prop_ext (fun h1 : (term1066 _146851 _146856 _146862 A l) = (term1110 _146851 _146856 _146862 A l) => @lem8440393 _146851 _146856 _146862 A l h1) (fun h1 : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l) => @lem8440395 _146851 _146856 _146862 A l h1)). Qed.
Lemma lem8440397 {_146851 _146856 _146862 A : Type'} : (term1112 _146851 _146856 _146862 A) = (term1176 _146851 _146856 _146862 A).
Proof. exact (fun_ext (fun l : type1638 _146851 _146856 _146862 A => @lem8440396 _146851 _146856 _146862 A l)). Qed.
Lemma lem8440398 {_146851 _146856 _146862 A : Type'} : (@all (list (prod (A -> _146851) (_146862 -> A -> _146856)))) = (@all (list (prod (A -> _146851) (_146862 -> A -> _146856)))).
Proof. exact (eq_refl (@all (list (prod (A -> _146851) (_146862 -> A -> _146856))))). Qed.
Lemma lem8440399 {_146851 _146856 _146862 A : Type'} : (term1114 _146851 _146856 _146862 A) = (term1177 _146851 _146856 _146862 A).
Proof. exact (MK_COMB (@lem8440398 _146851 _146856 _146862 A) (@lem8440397 _146851 _146856 _146862 A)). Qed.
Lemma lem8440400 {_146851 _146856 _146862 A : Type'} : term1177 _146851 _146856 _146862 A.
Proof. exact (EQ_MP (@lem8440399 _146851 _146856 _146862 A) (@lem8440390 _146851 _146856 _146862 A)). Qed.
Lemma lem8440401 {A : Type'} (P : Prop) : term1178 A P.
Proof. exact (@lem6418 A P). Qed.
Lemma lem8440402 {A : Type'} (P : Prop) : (term1178 A P) = (term1179 A P).
Proof. exact (eq_refl (term1178 A P)). Qed.
Lemma lem8440403 {A : Type'} (P : Prop) : term1179 A P.
Proof. exact (EQ_MP (@lem8440402 A P) (@lem8440401 A P)). Qed.
Lemma lem8440404 {A : Type'} (P : Prop) (Q : A -> Prop) : term1180 A P Q.
Proof. exact (@lem8440403 A P Q). Qed.
Lemma lem8440405 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1180 A P Q) = ((term15 A P Q) = (term14 A P Q)).
Proof. exact (eq_refl (term1180 A P Q)). Qed.
Lemma lem8440407 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : term1181 _146851 _146856 _146862 A l.
Proof. exact (@lem8440400 _146851 _146856 _146862 A l). Qed.
Lemma lem8440408 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1181 _146851 _146856 _146862 A l) = ((term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l)).
Proof. exact (eq_refl (term1181 _146851 _146856 _146862 A l)). Qed.
Lemma lem8440433 {_146851 _146856 _146862 A : Type'} (l : type1638 _146851 _146856 _146862 A) : (term1110 _146851 _146856 _146862 A l) = (term1066 _146851 _146856 _146862 A l).
Proof. exact (EQ_MP (@lem8440408 _146851 _146856 _146862 A l) (@lem8440407 _146851 _146856 _146862 A l)). Qed.
Lemma lem8440434 {_146879 _146895 _146899 : Type'} (l : type1635 _146879 _146895 _146899) : (term1182 _146879 _146895 _146899 l) = (term1183 _146879 _146895 _146899 l).
Proof. exact (@lem8440433 _146879 _146895 (_146879 -> _146895) _146899 l). Qed.
Lemma lem8440435 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1182 _146879 _146895 _146899 clauses) = (term1183 _146879 _146895 _146899 clauses).
Proof. exact (@lem8440434 _146879 _146895 _146899 clauses). Qed.
Lemma lem8440453 {A : Type'} (P : Prop) (Q : A -> Prop) : (term15 A P Q) = (term14 A P Q).
Proof. exact (EQ_MP (@lem8440405 A P Q) (@lem8440404 A P Q)). Qed.
Lemma lem8440454 {_146879 _146895 : Type'} (P : Prop) (Q : type572 _146879 _146895) : (term1184 _146879 _146895 P Q) = (term1185 _146879 _146895 P Q).
Proof. exact (@lem8440453 (_146879 -> _146895) P Q). Qed.
Lemma lem8440455 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1186 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1187 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (@lem8440454 _146879 _146895 (term1188 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (term1189 _146879 _146895 _146899 p1 p1' p2 p2')). Qed.
Lemma lem8440456 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1190 _146879 _146895 _146899 p1 p1' p2 p2' f) = (term1191 _146879 _146895 _146899 p1 p1' p2 p2' f).
Proof. exact (eq_refl (term1190 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440457 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1192 _146879 _146895 _146899 p1 p1' p2 p2') = (term1189 _146879 _146895 _146899 p1 p1' p2 p2').
Proof. exact (fun_ext (fun f : _146879 -> _146895 => @lem8440456 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440458 {_146879 _146895 : Type'} : (@all (_146879 -> _146895)) = (@all (_146879 -> _146895)).
Proof. exact (eq_refl (@all (_146879 -> _146895))). Qed.
Lemma lem8440459 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1193 _146879 _146895 _146899 p1 p1' p2 p2') = (term1194 _146879 _146895 _146899 p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8440458 _146879 _146895) (@lem8440457 _146879 _146895 _146899 p1 p1' p2 p2')). Qed.
Lemma lem8440460 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440461 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1186 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1196 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8440460 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440459 _146879 _146895 _146899 p1 p1' p2 p2')). Qed.
Lemma lem8440462 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440463 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1197 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1198 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8440462) (@lem8440461 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440464 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1190 _146879 _146895 _146899 p1 p1' p2 p2' f) = (term1191 _146879 _146895 _146899 p1 p1' p2 p2' f).
Proof. exact (eq_refl (term1190 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440465 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440466 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1199 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1200 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440465 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440464 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440467 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1201 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1202 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (fun_ext (fun f : _146879 -> _146895 => @lem8440466 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440468 {_146879 _146895 : Type'} : (@all (_146879 -> _146895)) = (@all (_146879 -> _146895)).
Proof. exact (eq_refl (@all (_146879 -> _146895))). Qed.
Lemma lem8440469 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1187 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1203 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8440468 _146879 _146895) (@lem8440467 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440470 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : ((term1186 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1187 _146879 _146895 _146899 clauses p1 p1' p2 p2')) = ((term1196 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1203 _146879 _146895 _146899 clauses p1 p1' p2 p2')).
Proof. exact (MK_COMB (@lem8440463 _146879 _146895 _146899 clauses p1 p1' p2 p2') (@lem8440469 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440471 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1196 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1203 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (EQ_MP (@lem8440470 _146879 _146895 _146899 clauses p1 p1' p2 p2') (@lem8440455 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440477 {A : Type'} (P : Prop) (Q : A -> Prop) : (term15 A P Q) = (term14 A P Q).
Proof. exact (EQ_MP (@lem8440405 A P Q) (@lem8440404 A P Q)). Qed.
Lemma lem8440478 {_146899 : Type'} (P : Prop) (Q : _146899 -> Prop) : (term15 _146899 P Q) = (term14 _146899 P Q).
Proof. exact (@lem8440477 _146899 P Q). Qed.
Lemma lem8440479 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1204 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1205 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (@lem8440478 _146899 (term1188 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (term1206 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440480 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1207 _146879 _146895 _146899 p1 p1' p2 p2' f x) = (term1208 _146879 _146895 _146899 p1 p1' p2 x p2' f).
Proof. exact (eq_refl (term1207 _146879 _146895 _146899 p1 p1' p2 p2' f x)). Qed.
Lemma lem8440481 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1209 _146879 _146895 _146899 p1 p1' p2 p2' f) = (term1206 _146879 _146895 _146899 p1 p1' p2 p2' f).
Proof. exact (fun_ext (fun x : _146899 => @lem8440480 _146879 _146895 _146899 p1 p1' p2 x p2' f)). Qed.
Lemma lem8440482 {_146899 : Type'} : (@all _146899) = (@all _146899).
Proof. exact (eq_refl (@all _146899)). Qed.
Lemma lem8440483 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1210 _146879 _146895 _146899 p1 p1' p2 p2' f) = (term1191 _146879 _146895 _146899 p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440482 _146899) (@lem8440481 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440484 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440485 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1204 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1200 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440484 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440483 _146879 _146895 _146899 p1 p1' p2 p2' f)). Qed.
Lemma lem8440486 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440487 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1211 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1212 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440486) (@lem8440485 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440488 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1207 _146879 _146895 _146899 p1 p1' p2 p2' f x) = (term1208 _146879 _146895 _146899 p1 p1' p2 x p2' f).
Proof. exact (eq_refl (term1207 _146879 _146895 _146899 p1 p1' p2 p2' f x)). Qed.
Lemma lem8440489 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440490 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1213 _146879 _146895 _146899 clauses p1 p1' p2 p2' f x) = (term1214 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (MK_COMB (@lem8440489 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440488 _146879 _146895 _146899 p1 p1' p2 x p2' f)). Qed.
Lemma lem8440491 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1215 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1216 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (fun_ext (fun x : _146899 => @lem8440490 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440492 {_146899 : Type'} : (@all _146899) = (@all _146899).
Proof. exact (eq_refl (@all _146899)). Qed.
Lemma lem8440493 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1205 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1217 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440492 _146899) (@lem8440491 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440494 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : ((term1204 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1205 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)) = ((term1200 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1217 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)).
Proof. exact (MK_COMB (@lem8440487 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) (@lem8440493 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440495 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1200 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1217 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (EQ_MP (@lem8440494 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) (@lem8440479 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440501 {A : Type'} (P : Prop) (Q : A -> Prop) : (term15 A P Q) = (term14 A P Q).
Proof. exact (EQ_MP (@lem8440405 A P Q) (@lem8440404 A P Q)). Qed.
Lemma lem8440502 {_146899 : Type'} (P : Prop) (Q : _146899 -> Prop) : (term15 _146899 P Q) = (term14 _146899 P Q).
Proof. exact (@lem8440501 _146899 P Q). Qed.
Lemma lem8440503 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1218 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1219 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (@lem8440502 _146899 (term1188 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (term1220 _146879 _146895 _146899 p1 p1' p2 x p2' f)). Qed.
Lemma lem8440504 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) (y : _146899) : (term1221 _146879 _146895 _146899 p1 p1' p2 x p2' f y) = (term1222 _146879 _146895 _146899 p1 p1' p2 x p2' f y).
Proof. exact (eq_refl (term1221 _146879 _146895 _146899 p1 p1' p2 x p2' f y)). Qed.
Lemma lem8440505 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1223 _146879 _146895 _146899 p1 p1' p2 x p2' f) = (term1220 _146879 _146895 _146899 p1 p1' p2 x p2' f).
Proof. exact (fun_ext (fun y : _146899 => @lem8440504 _146879 _146895 _146899 p1 p1' p2 x p2' f y)). Qed.
Lemma lem8440506 {_146899 : Type'} : (@all _146899) = (@all _146899).
Proof. exact (eq_refl (@all _146899)). Qed.
Lemma lem8440507 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1224 _146879 _146895 _146899 p1 p1' p2 x p2' f) = (term1208 _146879 _146895 _146899 p1 p1' p2 x p2' f).
Proof. exact (MK_COMB (@lem8440506 _146899) (@lem8440505 _146879 _146895 _146899 p1 p1' p2 x p2' f)). Qed.
Lemma lem8440508 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440509 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1218 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1214 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (MK_COMB (@lem8440508 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440507 _146879 _146895 _146899 p1 p1' p2 x p2' f)). Qed.
Lemma lem8440510 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440511 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1225 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1226 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (MK_COMB (@lem8440510) (@lem8440509 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440512 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) (y : _146899) : (term1221 _146879 _146895 _146899 p1 p1' p2 x p2' f y) = (term1222 _146879 _146895 _146899 p1 p1' p2 x p2' f y).
Proof. exact (eq_refl (term1221 _146879 _146895 _146899 p1 p1' p2 x p2' f y)). Qed.
Lemma lem8440513 {_146879 _146895 _146899 : Type'} (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p1' : _146899 -> _146879) (p2' : type558 _146879 _146895 _146899) (clauses : type1635 _146879 _146895 _146899) : (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses) = (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses).
Proof. exact (eq_refl (term1195 _146879 _146895 _146899 p1 p2 p1' p2' clauses)). Qed.
Lemma lem8440514 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) (y : _146899) : (term1227 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f y) = (term1228 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f y).
Proof. exact (MK_COMB (@lem8440513 _146879 _146895 _146899 p1 p2 p1' p2' clauses) (@lem8440512 _146879 _146895 _146899 p1 p1' p2 x p2' f y)). Qed.
Lemma lem8440515 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1229 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1230 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (fun_ext (fun y : _146899 => @lem8440514 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f y)). Qed.
Lemma lem8440516 {_146899 : Type'} : (@all _146899) = (@all _146899).
Proof. exact (eq_refl (@all _146899)). Qed.
Lemma lem8440517 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1219 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1231 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (MK_COMB (@lem8440516 _146899) (@lem8440515 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440518 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : ((term1218 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1219 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)) = ((term1214 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1231 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)).
Proof. exact (MK_COMB (@lem8440511 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) (@lem8440517 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440519 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (x : _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1214 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) = (term1231 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f).
Proof. exact (EQ_MP (@lem8440518 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f) (@lem8440503 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440536 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1216 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1232 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (fun_ext (fun x : _146899 => @lem8440519 _146879 _146895 _146899 clauses p1 p1' p2 x p2' f)). Qed.
Lemma lem8440537 {_146899 : Type'} : (@all _146899) = (@all _146899).
Proof. exact (eq_refl (@all _146899)). Qed.
Lemma lem8440538 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1217 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1233 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (MK_COMB (@lem8440537 _146899) (@lem8440536 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440543 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) (f : _146879 -> _146895) : (term1200 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) = (term1233 _146879 _146895 _146899 clauses p1 p1' p2 p2' f).
Proof. exact (TRANS (@lem8440495 _146879 _146895 _146899 clauses p1 p1' p2 p2' f) (@lem8440538 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440544 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1202 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1234 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (fun_ext (fun f : _146879 -> _146895 => @lem8440543 _146879 _146895 _146899 clauses p1 p1' p2 p2' f)). Qed.
Lemma lem8440545 {_146879 _146895 : Type'} : (@all (_146879 -> _146895)) = (@all (_146879 -> _146895)).
Proof. exact (eq_refl (@all (_146879 -> _146895))). Qed.
Lemma lem8440546 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1203 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1235 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem8440545 _146879 _146895) (@lem8440544 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440551 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) (p2' : type558 _146879 _146895 _146899) : (term1196 _146879 _146895 _146899 clauses p1 p1' p2 p2') = (term1235 _146879 _146895 _146899 clauses p1 p1' p2 p2').
Proof. exact (TRANS (@lem8440471 _146879 _146895 _146899 clauses p1 p1' p2 p2') (@lem8440546 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440552 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) : (term1236 _146879 _146895 _146899 clauses p1 p1' p2) = (term1237 _146879 _146895 _146899 clauses p1 p1' p2).
Proof. exact (fun_ext (fun p2' : type558 _146879 _146895 _146899 => @lem8440551 _146879 _146895 _146899 clauses p1 p1' p2 p2')). Qed.
Lemma lem8440553 {_146879 _146895 _146899 : Type'} : (@all ((_146879 -> _146895) -> _146899 -> _146895)) = (@all ((_146879 -> _146895) -> _146899 -> _146895)).
Proof. exact (eq_refl (@all ((_146879 -> _146895) -> _146899 -> _146895))). Qed.
Lemma lem8440554 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p1' : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) : (term1238 _146879 _146895 _146899 clauses p1 p1' p2) = (term1239 _146879 _146895 _146899 clauses p1 p1' p2).
Proof. exact (MK_COMB (@lem8440553 _146879 _146895 _146899) (@lem8440552 _146879 _146895 _146899 clauses p1 p1' p2)). Qed.
Lemma lem8440559 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) : (term1240 _146879 _146895 _146899 clauses p1 p2) = (term1241 _146879 _146895 _146899 clauses p1 p2).
Proof. exact (fun_ext (fun p1' : _146899 -> _146879 => @lem8440554 _146879 _146895 _146899 clauses p1 p1' p2)). Qed.
Lemma lem8440560 {_146879 _146899 : Type'} : (@all (_146899 -> _146879)) = (@all (_146899 -> _146879)).
Proof. exact (eq_refl (@all (_146899 -> _146879))). Qed.
Lemma lem8440561 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) (p2 : type558 _146879 _146895 _146899) : (term1242 _146879 _146895 _146899 clauses p1 p2) = (term1243 _146879 _146895 _146899 clauses p1 p2).
Proof. exact (MK_COMB (@lem8440560 _146879 _146899) (@lem8440559 _146879 _146895 _146899 clauses p1 p2)). Qed.
Lemma lem8440566 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) : (term1244 _146879 _146895 _146899 clauses p1) = (term1245 _146879 _146895 _146899 clauses p1).
Proof. exact (fun_ext (fun p2 : type558 _146879 _146895 _146899 => @lem8440561 _146879 _146895 _146899 clauses p1 p2)). Qed.
Lemma lem8440567 {_146879 _146895 _146899 : Type'} : (@all ((_146879 -> _146895) -> _146899 -> _146895)) = (@all ((_146879 -> _146895) -> _146899 -> _146895)).
Proof. exact (eq_refl (@all ((_146879 -> _146895) -> _146899 -> _146895))). Qed.
Lemma lem8440568 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) (p1 : _146899 -> _146879) : (term1246 _146879 _146895 _146899 clauses p1) = (term1247 _146879 _146895 _146899 clauses p1).
Proof. exact (MK_COMB (@lem8440567 _146879 _146895 _146899) (@lem8440566 _146879 _146895 _146899 clauses p1)). Qed.
Lemma lem8440573 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1248 _146879 _146895 _146899 clauses) = (term1249 _146879 _146895 _146899 clauses).
Proof. exact (fun_ext (fun p1 : _146899 -> _146879 => @lem8440568 _146879 _146895 _146899 clauses p1)). Qed.
Lemma lem8440574 {_146879 _146899 : Type'} : (@all (_146899 -> _146879)) = (@all (_146899 -> _146879)).
Proof. exact (eq_refl (@all (_146899 -> _146879))). Qed.
Lemma lem8440575 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1183 _146879 _146895 _146899 clauses) = (term1250 _146879 _146895 _146899 clauses).
Proof. exact (MK_COMB (@lem8440574 _146879 _146899) (@lem8440573 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440580 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1182 _146879 _146895 _146899 clauses) = (term1250 _146879 _146895 _146899 clauses).
Proof. exact (TRANS (@lem8440435 _146879 _146895 _146899 clauses) (@lem8440575 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440581 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1251 _146879 _146895 _146899 clauses) = (term1251 _146879 _146895 _146899 clauses).
Proof. exact (eq_refl (term1251 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440582 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1252 _146879 _146895 _146899 clauses) = (term1253 _146879 _146895 _146899 clauses).
Proof. exact (MK_COMB (@lem8440581 _146879 _146895 _146899 clauses) (@lem8440580 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440585 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8440586 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1254 _146879 _146895 _146899 clauses) = (term1255 _146879 _146895 _146899 clauses).
Proof. exact (MK_COMB (@lem8440585) (@lem8440582 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440605 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1256 _146879 _146895 _146899 clauses) = (term1256 _146879 _146895 _146899 clauses).
Proof. exact (eq_refl (term1256 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440606 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1257 _146879 _146895 _146899 clauses) = (term1175 _146879 _146895 _146899 clauses).
Proof. exact (MK_COMB (@lem8440586 _146879 _146895 _146899 clauses) (@lem8440605 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440609 {_146879 _146895 _146899 : Type'} : (term1258 _146879 _146895 _146899) = (term1259 _146879 _146895 _146899).
Proof. exact (fun_ext (fun clauses : type1635 _146879 _146895 _146899 => @lem8440606 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440610 {_146879 _146895 _146899 : Type'} : (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)))) = (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)))).
Proof. exact (eq_refl (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895))))). Qed.
Lemma lem8440611 {_146879 _146895 _146899 : Type'} : (term1260 _146879 _146895 _146899) = (term1261 _146879 _146895 _146899).
Proof. exact (MK_COMB (@lem8440610 _146879 _146895 _146899) (@lem8440609 _146879 _146895 _146899)). Qed.
Lemma lem8440616 {_146879 _146895 _146899 : Type'} : (term1261 _146879 _146895 _146899) = (term1260 _146879 _146895 _146899).
Proof. exact (SYM (@lem8440611 _146879 _146895 _146899)). Qed.
Lemma lem8440622 {A B P : Type'} (clauses : type1635 A B P) : (term1175 A B P clauses) = True.
Proof. exact (EQ_MP (@lem8440385 A B P clauses) (@lem8440384 A B P clauses)). Qed.
Lemma lem8440623 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1175 _146879 _146895 _146899 clauses) = True.
Proof. exact (@lem8440622 _146879 _146895 _146899 clauses). Qed.
Lemma lem8440626 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1262 _146879 _146895 _146899 clauses) = (term1262 _146879 _146895 _146899 clauses).
Proof. exact (eq_refl (term1262 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440627 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1262 _146879 _146895 _146899 clauses) = ((term1175 _146879 _146895 _146899 clauses) = True).
Proof. exact (eq_refl (term1262 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440628 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1263 _146879 _146895 _146899 clauses) = (term1263 _146879 _146895 _146899 clauses).
Proof. exact (eq_refl (term1263 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440629 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : ((term1262 _146879 _146895 _146899 clauses) = (term1262 _146879 _146895 _146899 clauses)) = ((term1262 _146879 _146895 _146899 clauses) = ((term1175 _146879 _146895 _146899 clauses) = True)).
Proof. exact (MK_COMB (@lem8440628 _146879 _146895 _146899 clauses) (@lem8440627 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440630 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1262 _146879 _146895 _146899 clauses) = ((term1175 _146879 _146895 _146899 clauses) = True).
Proof. exact (eq_refl (term1262 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440631 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8440632 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1263 _146879 _146895 _146899 clauses) = (term1264 _146879 _146895 _146899 clauses).
Proof. exact (MK_COMB (@lem8440631) (@lem8440630 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440633 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : ((term1175 _146879 _146895 _146899 clauses) = True) = ((term1175 _146879 _146895 _146899 clauses) = True).
Proof. exact (eq_refl ((term1175 _146879 _146895 _146899 clauses) = True)). Qed.
Lemma lem8440634 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : ((term1262 _146879 _146895 _146899 clauses) = ((term1175 _146879 _146895 _146899 clauses) = True)) = (((term1175 _146879 _146895 _146899 clauses) = True) = ((term1175 _146879 _146895 _146899 clauses) = True)).
Proof. exact (MK_COMB (@lem8440632 _146879 _146895 _146899 clauses) (@lem8440633 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440635 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : ((term1262 _146879 _146895 _146899 clauses) = (term1262 _146879 _146895 _146899 clauses)) = (((term1175 _146879 _146895 _146899 clauses) = True) = ((term1175 _146879 _146895 _146899 clauses) = True)).
Proof. exact (TRANS (@lem8440629 _146879 _146895 _146899 clauses) (@lem8440634 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440636 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : ((term1175 _146879 _146895 _146899 clauses) = True) = ((term1175 _146879 _146895 _146899 clauses) = True).
Proof. exact (EQ_MP (@lem8440635 _146879 _146895 _146899 clauses) (@lem8440626 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440637 {_146879 _146895 _146899 : Type'} (clauses : type1635 _146879 _146895 _146899) : (term1175 _146879 _146895 _146899 clauses) = True.
Proof. exact (EQ_MP (@lem8440636 _146879 _146895 _146899 clauses) (@lem8440623 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440638 {_146879 _146895 _146899 : Type'} : (term1259 _146879 _146895 _146899) = (term1265 _146879 _146895 _146899).
Proof. exact (fun_ext (fun clauses : type1635 _146879 _146895 _146899 => @lem8440637 _146879 _146895 _146899 clauses)). Qed.
Lemma lem8440639 {_146879 _146895 _146899 : Type'} : (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)))) = (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)))).
Proof. exact (eq_refl (@all (list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895))))). Qed.
Lemma lem8440640 {_146879 _146895 _146899 : Type'} : (term1261 _146879 _146895 _146899) = (term1266 _146879 _146895 _146899).
Proof. exact (MK_COMB (@lem8440639 _146879 _146895 _146899) (@lem8440638 _146879 _146895 _146899)). Qed.
Lemma lem8440642 {A : Type'} (t : Prop) : (term112 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8440643 {_146879 _146895 _146899 : Type'} (t : Prop) : (term1267 _146879 _146895 _146899 t) = t.
Proof. exact (@lem8440642 (type1635 _146879 _146895 _146899) t). Qed.
Lemma lem8440644 {_146879 _146895 _146899 : Type'} : (term1266 _146879 _146895 _146899) = True.
Proof. exact (@lem8440643 _146879 _146895 _146899 True). Qed.
Lemma lem8440645 {_146879 _146895 _146899 : Type'} : (term1261 _146879 _146895 _146899) = True.
Proof. exact (TRANS (@lem8440640 _146879 _146895 _146899) (@lem8440644 _146879 _146895 _146899)). Qed.
Lemma lem8440646 {_146879 _146895 _146899 : Type'} : True = (term1261 _146879 _146895 _146899).
Proof. exact (SYM (@lem8440645 _146879 _146895 _146899)). Qed.
Lemma lem8440647 {_146879 _146895 _146899 : Type'} : term1261 _146879 _146895 _146899.
Proof. exact (EQ_MP (@lem8440646 _146879 _146895 _146899) (@lem0)). Qed.
Lemma lem8440648 {_146879 _146895 _146899 : Type'} : term1260 _146879 _146895 _146899.
Proof. exact (EQ_MP (@lem8440616 _146879 _146895 _146899) (@lem8440647 _146879 _146895 _146899)). Qed.
