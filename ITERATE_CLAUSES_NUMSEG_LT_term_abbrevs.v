Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term376 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) y0) = y0.
Definition term142 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0.
Definition term217 (x0 : nat) (x1 : nat) := ~ (exists y0 : nat, @SETSPEC nat x0 (Peano.lt y0 x1) y0).
Definition term369 (a0 : Type') (x0 : type1400 a0) := x0 (@neutral a0 x0).
Definition term190 (x0 : type1605) := forall y0 : nat, (x0 y0) = ((fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3) y0).
Definition term194 (x0 : type1605) := fun y0 : nat => (x0 y0) = (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term171 (x0 : type1605) := imp (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term196 (x0 : nat -> Prop) := fun y0 : nat => x0 y0.
Definition term187 (x0 : type1605) := fun y0 : nat => x0 y0.
Definition term7 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0).
Definition term34 (x0 : nat) := @INSERT nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1)).
Definition term373 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := @eq a0 (x0 (@neutral a0 x0) x1).
Definition term226 (x0 : type1605) (x1 : nat) (x2 : nat) := (~ (x0 x2 x1)) \/ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0).
Definition term235 (x0 : type1605) (x1 : nat) := forall y0 : nat, ((x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) /\ ((~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> Prop) (x3 : a1 -> a0) := (@monoidal a0 x1) -> (@iterate a0 a1 x1 (@INSERT a1 x0 x2) x3) = (@COND a0 (@IN a1 x0 x2) (@iterate a0 a1 x1 x2 x3) (x1 (x3 x0) (@iterate a0 a1 x1 x2 x3))).
Definition term272 (x0 : type1605) := fun y0 : nat => ((fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0) /\ ((fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0).
Definition term421 := (~ False) -> False.
Definition term202 (x0 : type1605) (x1 : nat) := @eq Prop ((x0 x1) = (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term26 (x0 : Prop) (x1 : Prop) (x2 : Prop) := x0 -> x1 -> x2.
Definition term179 (a0 : Type') (x0 : type1605) := (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) -> forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0) (y0 y2)).
Definition term247 (x0 : type1605) (x1 : nat) (x2 : nat) := and ((fun y0 : nat => (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) x2).
Definition term404 (a0 : Type') (x0 : type1400 a0) := (forall y0 : a0, forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y0)) /\ ((forall y0 : a0, forall y1 : a0, forall y2 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) y2)) /\ (forall y0 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) y0) = y0)).
Definition term1 (a0 : Type') (x0 : type1400 a0) := (forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)) /\ (forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0)).
Definition term6 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1)) x0.
Definition term377 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2.
Definition term199 (x0 : type1605) (x1 : nat) := forall y0 : nat, (x0 x1 y0) = ((fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2) y0).
Definition term389 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := fun y0 : a0 => (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x2) y0)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2)) y0).
Definition term64 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @eq a0 (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (S x1)) y1)) x2).
Definition term264 (x0 : type1605) := forall y0 : nat, ((fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0) /\ ((fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0).
Definition term242 (x0 : type1605) (x1 : nat) := forall y0 : nat, ((fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0) /\ ((fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0).
Definition term52 (a0 : Type') (x0 : type1400 a0) := @eq a0 (@neutral a0 x0).
Definition term120 (x0 : Prop) := ~ (~ x0).
Definition term173 (a0 : Type') := fun y0 : type1605 => (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = ((fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0).
Definition term132 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := x0 (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> Prop) (x3 : a1 -> a0) := (@FINITE a1 x2) -> (@monoidal a0 x1) -> (@iterate a0 a1 x1 (@INSERT a1 x0 x2) x3) = (@COND a0 (@IN a1 x0 x2) (@iterate a0 a1 x1 x2 x3) (x1 (x3 x0) (@iterate a0 a1 x1 x2 x3))).
Definition term108 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := fun y0 : nat => (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term45 (a0 : Type') (x0 : nat -> a0) (x1 : type1400 a0) (x2 : Prop) := ((@monoidal a0 x1) -> (((@iterate a0 nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x0) = (@neutral a0 x1)) /\ (forall y0 : nat, (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x0) = (x1 (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x0) (x0 y0)))) = x2) -> ((@monoidal a0 x1) -> ((@iterate a0 nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x0) = (@neutral a0 x1)) /\ (forall y0 : nat, (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x0) = (x1 (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x0) (x0 y0)))) = ((@monoidal a0 x1) -> x2).
Definition term344 (x0 : type1605) (x1 : type1606) (x2 : nat) := forall y0 : nat, (~ (x0 x2 y0)) \/ (@SETSPEC nat y0 (Peano.lt (x1 x2 y0) x2) (x1 x2 y0)).
Definition term412 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := @I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2) (@I (nat -> a0) x2 x3).
Definition term342 (x0 : type1605) (x1 : type1606) (x2 : nat) := (fun y0 : nat => fun y1 : nat -> nat => forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2))) x2 (x1 x2).
Definition term145 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := fun y0 : a0 => (x0 x1 (x0 x2 y0)) = (x0 (x0 x1 x2) y0).
Definition term331 (x0 : type1605) := forall y0 : nat, exists y1 : nat -> nat, (fun y2 : nat => fun y3 : nat -> nat => forall y4 : nat, (~ (x0 y2 y4)) \/ (@SETSPEC nat y4 (Peano.lt (y3 y4) y2) (y3 y4))) y0 y1.
Definition term329 (x0 : type1586) := forall y0 : nat, exists y1 : nat -> nat, x0 y0 y1.
Definition term328 (x0 : type1605) := forall y0 : nat, exists y1 : nat -> nat, forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2)).
Definition term306 (x0 : type1605) (x1 : nat) := forall y0 : nat, exists y1 : nat, (fun y2 : nat => fun y3 : nat => (~ (x0 x1 y2)) \/ (@SETSPEC nat y2 (Peano.lt y3 x1) y3)) y0 y1.
Definition term304 (x0 : type1605) := forall y0 : nat, exists y1 : nat, x0 y0 y1.
Definition term301 (x0 : type1605) (x1 : nat) := forall y0 : nat, exists y1 : nat, (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term388 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := @eq a0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x2) x3)).
Definition term250 (x0 : type1605) (x1 : nat) := fun y0 : nat => ((fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0) /\ ((fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0).
Definition term181 (a0 : Type') := fun y0 : type1605 => (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)).
Definition term163 (a0 : Type') (x0 : type1605) := (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) -> (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2))) = (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0) (y0 y2))).
Definition term371 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := @I (a0 -> a0 -> a0) x0 (@neutral a0 x0) x1.
Definition term400 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := forall y0 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) y0) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) x1).
Definition term154 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := forall y0 : a0, (x0 x1 y0) = (x0 y0 x1).
Definition term115 (a0 : Type') (x0 : nat -> a0) := ~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1))).
Definition term291 (x0 : nat) (x1 : nat) := fun y0 : nat => (fun y1 : nat => @SETSPEC nat x0 (Peano.lt y1 x1) y1) y0.
Definition term232 (x0 : type1605) (x1 : nat) (x2 : nat) := ((x0 x2 x1) \/ (~ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0))) /\ ((~ (x0 x2 x1)) \/ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0)).
Definition term231 (x0 : type1605) (x1 : nat) (x2 : nat) := and ((x0 x2 x1) \/ (forall y0 : nat, ~ (@SETSPEC nat x1 (Peano.lt y0 x2) y0))).
Definition term169 (a0 : Type') (x0 : type1605) := (fun y0 : type1605 => forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))) x0.
Definition term182 (a0 : Type') := forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0.
Definition term381 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := x0 (x0 x1 x2).
Definition term350 (x0 : type1605) := fun y0 : type1606 => forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2)).
Definition term354 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := exists y0 : a0, x0 /\ (x1 y0).
Definition term113 (x0 : Prop) := (~ x0) -> False.
Definition term265 (x0 : type1605) := (forall y0 : nat, (fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0) /\ (forall y0 : nat, (fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0).
Definition term243 (x0 : type1605) (x1 : nat) := (forall y0 : nat, (fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0) /\ (forall y0 : nat, (fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0).
Definition term365 (x0 : type1605) (x1 : type1606) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (forall y0 : nat, forall y1 : nat, (~ (x0 y0 y1)) \/ (@SETSPEC nat y1 (Peano.lt (x1 y0 y1) y0) (x1 y0 y1))).
Definition term283 (x0 : type1605) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (forall y0 : nat, forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term189 := fun y0 : nat => (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3) y0.
Definition term258 (x0 : type1605) (x1 : nat) := fun y0 : nat => (fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0.
Definition term253 (x0 : type1605) (x1 : nat) := fun y0 : nat => (fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0.
Definition term213 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := (~ ((x0 (x2 x3) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2) (x2 x3)))) -> False.
Definition term96 (x0 : nat) := fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1.
Definition term95 (x0 : nat) := fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 ((fun y2 : nat => Peano.lt y2 x0) y1) y1.
Definition term383 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) (x3 : a0) := x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2) x3.
Definition term172 (a0 : Type') (x0 : type1605) := (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) -> (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2))) = ((fun y0 : type1605 => forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))) x0).
Definition term44 (a0 : Type') (x0 : nat -> a0) (x1 : type1400 a0) (x2 : Prop) := ((@monoidal a0 x1) = (@monoidal a0 x1)) -> ((@monoidal a0 x1) -> (((@iterate a0 nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x0) = (@neutral a0 x1)) /\ (forall y0 : nat, (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x0) = (x1 (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x0) (x0 y0)))) = x2) -> ((@monoidal a0 x1) -> ((@iterate a0 nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x0) = (@neutral a0 x1)) /\ (forall y0 : nat, (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x0) = (x1 (@iterate a0 nat x1 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x0) (x0 y0)))) = ((@monoidal a0 x1) -> x2).
Definition term22 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : a1 -> a0) := @iterate a0 a1 x0 (@INSERT a1 x1 x2) x3.
Definition term55 (a0 : Type') (x0 : type1400 a0) (x1 : nat) := @iterate a0 nat x0 (@INSERT nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))).
Definition term128 (x0 : type1605) (x1 : nat) := @GSPEC nat (x0 x1).
Definition term58 (a0 : Type') (x0 : nat) (x1 : type1400 a0) (x2 : nat -> Prop) (x3 : nat -> a0) := ((@FINITE nat x2) /\ (@monoidal a0 x1)) -> (@iterate a0 nat x1 (@INSERT nat x0 x2) x3) = (@COND a0 (@IN nat x0 x2) (@iterate a0 nat x1 x2 x3) (x1 (x3 x0) (@iterate a0 nat x1 x2 x3))).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> Prop) (x3 : a1 -> a0) := ((@FINITE a1 x2) /\ (@monoidal a0 x1)) -> (@iterate a0 a1 x1 (@INSERT a1 x0 x2) x3) = (@COND a0 (@IN a1 x0 x2) (@iterate a0 a1 x1 x2 x3) (x1 (x3 x0) (@iterate a0 a1 x1 x2 x3))).
Definition term10 (x0 : nat) := (fun y0 : nat => @FINITE nat (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) x0.
Definition term104 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @COND a0 False (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2).
Definition term259 (x0 : type1605) (x1 : nat) := forall y0 : nat, (fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0.
Definition term254 (x0 : type1605) (x1 : nat) := forall y0 : nat, (fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0.
Definition term338 (x0 : type1605) (x1 : nat) := exists y0 : nat -> nat, (fun y1 : nat => fun y2 : nat -> nat => forall y3 : nat, (~ (x0 y1 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y2 y3) y1) (y2 y3))) x1 y0.
Definition term355 (x0 : Prop) (x1 : type961) := x0 /\ (exists y0 : type1606, x1 y0).
Definition term79 (a0 : Type') (x0 : nat -> a0) := forall y0 : type1400 a0, (@monoidal a0 y0) -> forall y1 : nat, (@COND a0 (@IN nat y1 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3))) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0))) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)).
Definition term287 (x0 : Prop) (x1 : nat -> Prop) := exists y0 : nat, x0 \/ (x1 y0).
Definition term255 (x0 : type1605) (x1 : nat) := forall y0 : nat, (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term228 (x0 : type1605) (x1 : nat) (x2 : nat) := (x0 x2 x1) \/ (~ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0)).
Definition term206 (x0 : type1605) (x1 : nat) := forall y0 : nat, (x0 x1 y0) = (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term378 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := x1 x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x2) x3).
Definition term313 (x0 : type1605) (x1 : nat) (x2 : nat) := exists y0 : nat, (fun y1 : nat => fun y2 : nat => (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt y2 x1) y2)) x2 y0.
Definition term240 (x0 : nat -> Prop) (x1 : nat -> Prop) := forall y0 : nat, (x0 y0) /\ (x1 y0).
Definition term160 (a0 : Type') (x0 : type1605) (x1 : nat -> a0) := forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x1 y1) (@iterate a0 nat y0 (@GSPEC nat (x0 y1)) x1)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (x0 y1)) x1) (x1 y1)).
Definition term112 (a0 : Type') (x0 : nat -> a0) := forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)).
Definition term368 (x0 : type1605) := exists y0 : type1606, (forall y1 : nat, forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) /\ (forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2))).
Definition term262 (x0 : type1605) := fun y0 : nat => (forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term233 (x0 : type1605) (x1 : nat) (x2 : nat) := ((x0 x2 x1) \/ (forall y0 : nat, ~ (@SETSPEC nat x1 (Peano.lt y0 x2) y0))) /\ ((~ (x0 x2 x1)) \/ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0)).
Definition term59 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := ((@FINITE nat (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) /\ (@monoidal a0 x0)) -> (@iterate a0 nat x0 (@INSERT nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) x2) = (@COND a0 (@IN nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2) (x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2))).
Definition term210 (a0 : Type') (x0 : type1605) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) = (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) -> forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0) (y0 y2)).
Definition term353 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := x0 /\ (exists y0 : a0, x1 y0).
Definition term0 (a0 : Type') (x0 : type1400 a0) := (fun y0 : type1400 a0 => (@monoidal a0 y0) = ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1)))) x0.
Definition term178 (a0 : Type') (x0 : type1605) := (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) -> (fun y0 : type1605 => forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))) x0.
Definition term195 (x0 : type1605) := forall y0 : nat, (x0 y0) = (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term296 (x0 : type1605) (x1 : nat) (x2 : nat) (x3 : nat) := (~ (x0 x2 x1)) \/ (@SETSPEC nat x1 (Peano.lt x3 x2) x3).
Definition term419 (x0 : Prop) := (~ x0) -> x0.
Definition term143 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := x1 x0 (x1 x2 x3).
Definition term249 (x0 : type1605) (x1 : nat) (x2 : nat) := ((fun y0 : nat => (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) x2) /\ ((fun y0 : nat => (~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2).
Definition term100 (x0 : nat) := @eq Prop (@IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1))).
Definition term99 (x0 : nat) := @eq Prop (@IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 ((fun y2 : nat => Peano.lt y2 x0) y1) y1))).
Definition term294 (x0 : type1605) (x1 : nat) (x2 : nat) := @eq Prop ((~ (x0 x2 x1)) \/ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0)).
Definition term293 (x0 : type1605) (x1 : nat) (x2 : nat) := @eq Prop ((~ (x0 x2 x1)) \/ (exists y0 : nat, (fun y1 : nat => @SETSPEC nat x1 (Peano.lt y1 x2) y1) y0)).
Definition term203 (x0 : type1605) (x1 : nat) (x2 : nat) := @eq Prop (x0 x1 x2).
Definition term302 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0, exists y1 : a1, x0 y0 y1.
Definition term345 (x0 : type1605) (x1 : type1606) := fun y0 : nat => (fun y1 : nat => fun y2 : nat -> nat => forall y3 : nat, (~ (x0 y1 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y2 y3) y1) (y2 y3))) y0 (x1 y0).
Definition term147 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := fun y0 : a0 => forall y1 : a0, (x0 x1 (x0 y0 y1)) = (x0 (x0 x1 y0) y1).
Definition term407 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : nat) := @I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x1 x2).
Definition term274 (x0 : type1605) := @eq Prop (forall y0 : nat, (forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))).
Definition term273 (x0 : type1605) := @eq Prop (forall y0 : nat, ((fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0) /\ ((fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0)).
Definition term252 (x0 : type1605) (x1 : nat) := @eq Prop (forall y0 : nat, ((x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) /\ ((~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))).
Definition term251 (x0 : type1605) (x1 : nat) := @eq Prop (forall y0 : nat, ((fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0) /\ ((fun y1 : nat => (~ (x0 x1 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0)).
Definition term300 (x0 : type1605) (x1 : nat) := fun y0 : nat => exists y1 : nat, (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term102 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2.
Definition term56 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (S x1)) y1)) x2.
Definition term332 (x0 : type1605) := exists y0 : type1606, forall y1 : nat, (fun y2 : nat => fun y3 : nat -> nat => forall y4 : nat, (~ (x0 y2 y4)) \/ (@SETSPEC nat y4 (Peano.lt (y3 y4) y2) (y3 y4))) y1 (y0 y1).
Definition term330 (x0 : type1586) := exists y0 : type1606, forall y1 : nat, x0 y1 (y0 y1).
Definition term326 (x0 : type1605) (x1 : nat) := exists y0 : nat -> nat, forall y1 : nat, (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt (y0 y1) x1) (y0 y1)).
Definition term307 (x0 : type1605) (x1 : nat) := exists y0 : nat -> nat, forall y1 : nat, (fun y2 : nat => fun y3 : nat => (~ (x0 x1 y2)) \/ (@SETSPEC nat y2 (Peano.lt y3 x1) y3)) y1 (y0 y1).
Definition term305 (x0 : type1605) := exists y0 : nat -> nat, forall y1 : nat, x0 y1 (y0 y1).
Definition term239 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (forall y0 : a0, x0 y0) /\ (forall y0 : a0, x1 y0).
Definition term223 (x0 : nat) (x1 : nat) := fun y0 : nat => ~ (@SETSPEC nat x0 (Peano.lt y0 x1) y0).
Definition term133 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term382 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2).
Definition term198 (x0 : nat) := fun y0 : nat => (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x0) y2) y0.
Definition term244 (x0 : type1605) (x1 : nat) := fun y0 : nat => (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term311 (x0 : type1605) (x1 : nat) (x2 : nat) (x3 : nat) := (fun y0 : nat => (~ (x0 x2 x1)) \/ (@SETSPEC nat x1 (Peano.lt y0 x2) y0)) x3.
Definition term200 (x0 : nat) (x1 : nat) := (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1) x1.
Definition term138 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) := fun y0 : nat => (x0 (x2 y0) (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2) (x2 y0)).
Definition term270 (x0 : type1605) (x1 : nat) := (fun y0 : nat => forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1.
Definition term268 (x0 : type1605) (x1 : nat) := (fun y0 : nat => forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) x1.
Definition term18 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) (x2 : a1) := (fun y0 : a1 => forall y1 : a1 -> Prop, (@FINITE a1 y1) -> (@iterate a0 a1 x0 (@INSERT a1 y0 y1) x1) = (@COND a0 (@IN a1 y0 y1) (@iterate a0 a1 x0 y1 x1) (x0 (x1 y0) (@iterate a0 a1 x0 y1 x1)))) x2.
Definition term396 (a0 : Type') (x0 : type1400 a0) := (forall y0 : a0, forall y1 : a0, forall y2 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) y2)) /\ (forall y0 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) y0) = y0).
Definition term152 (a0 : Type') (x0 : type1400 a0) := (forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)) /\ (forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0).
Definition term393 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => forall y1 : a0, forall y2 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) y2).
Definition term149 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2).
Definition term356 (x0 : Prop) (x1 : type961) := exists y0 : type1606, x0 /\ (x1 y0).
Definition term375 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) y0) = y0.
Definition term352 (x0 : type1605) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (exists y0 : type1606, forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2))).
Definition term125 := fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2.
Definition term260 (x0 : type1605) (x1 : nat) := forall y0 : nat, (~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term417 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := (fun y0 : a0 => (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) y0) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) x1)) x2.
Definition term175 (a0 : Type') := forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = ((fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0).
Definition term89 (x0 : nat) (x1 : nat) (x2 : nat) := @SETSPEC nat x0 ((fun y0 : nat => Peano.lt y0 x1) x2) x2.
Definition term318 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) (x3 : nat) := (fun y0 : nat => (~ (x0 x1 x3)) \/ (@SETSPEC nat x3 (Peano.lt y0 x1) y0)) (x2 x3).
Definition term137 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @eq a0 (x0 (x3 x2) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3)).
Definition term90 (x0 : nat) (x1 : nat) (x2 : nat) := @SETSPEC nat x0 (Peano.lt x2 x1) x2.
Definition term35 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term380 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x2) x3).
Definition term9 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (x1 y1) y1)).
Definition term319 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) (x3 : nat) := (~ (x0 x1 x3)) \/ (@SETSPEC nat x3 (Peano.lt (x2 x3) x1) (x2 x3)).
Definition term413 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) (@I (nat -> a0) x2 x3).
Definition term158 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) := ((forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)) /\ (forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0))) -> forall y0 : nat, (x0 (x2 y0) (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2) (x2 y0)).
Definition term110 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := ((forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)) /\ (forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0))) -> forall y0 : nat, (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term245 (x0 : type1605) (x1 : nat) := fun y0 : nat => (~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term43 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : Prop) (x3 : Prop) := ((@monoidal a0 x0) = x2) -> (x2 -> (((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) = x3) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) = (x2 -> x3).
Definition term298 (x0 : type1605) (x1 : nat) (x2 : nat) := fun y0 : nat => (~ (x0 x2 x1)) \/ (@SETSPEC nat x1 (Peano.lt y0 x2) y0).
Definition term87 (x0 : nat) (x1 : nat) (x2 : nat) := @SETSPEC nat x0 ((fun y0 : nat => Peano.lt y0 x1) x2).
Definition term197 (x0 : nat -> Prop) (x1 : nat -> Prop) := forall y0 : nat, (x0 y0) = (x1 y0).
Definition term188 (x0 : type1605) (x1 : type1605) := forall y0 : nat, (x0 y0) = (x1 y0).
Definition term165 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> Prop) := (forall y0 : a0, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : a0, (y0 = x1) -> x2 y0).
Definition term248 (x0 : type1605) (x1 : nat) (x2 : nat) := (fun y0 : nat => (~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2.
Definition term349 (x0 : type1605) := fun y0 : type1606 => forall y1 : nat, (fun y2 : nat => fun y3 : nat -> nat => forall y4 : nat, (~ (x0 y2 y4)) \/ (@SETSPEC nat y4 (Peano.lt (y3 y4) y2) (y3 y4))) y1 (y0 y1).
Definition term325 (x0 : type1605) (x1 : nat) := fun y0 : nat -> nat => forall y1 : nat, (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt (y0 y1) x1) (y0 y1)).
Definition term324 (x0 : type1605) (x1 : nat) := fun y0 : nat -> nat => forall y1 : nat, (fun y2 : nat => fun y3 : nat => (~ (x0 x1 y2)) \/ (@SETSPEC nat y2 (Peano.lt y3 x1) y3)) y1 (y0 y1).
Definition term361 (x0 : type1605) := exists y0 : type1606, (fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0.
Definition term341 (x0 : type1605) := @eq Prop (forall y0 : nat, exists y1 : nat -> nat, forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2))).
Definition term340 (x0 : type1605) := @eq Prop (forall y0 : nat, exists y1 : nat -> nat, (fun y2 : nat => fun y3 : nat -> nat => forall y4 : nat, (~ (x0 y2 y4)) \/ (@SETSPEC nat y4 (Peano.lt (y3 y4) y2) (y3 y4))) y0 y1).
Definition term316 (x0 : type1605) (x1 : nat) := @eq Prop (forall y0 : nat, exists y1 : nat, (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term315 (x0 : type1605) (x1 : nat) := @eq Prop (forall y0 : nat, exists y1 : nat, (fun y2 : nat => fun y3 : nat => (~ (x0 x1 y2)) \/ (@SETSPEC nat y2 (Peano.lt y3 x1) y3)) y0 y1).
Definition term257 (x0 : type1605) (x1 : nat) := and (forall y0 : nat, (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))).
Definition term234 (x0 : type1605) (x1 : nat) := fun y0 : nat => ((x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) /\ ((~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term85 (x0 : nat) := fun y0 : nat => Peano.lt y0 x0.
Definition term420 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := ((@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x2 x3)) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) (@I (nat -> a0) x2 x3))) -> False.
Definition term185 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := fun y0 : a1 => x0 y0.
Definition term159 (a0 : Type') (x0 : type1605) (x1 : nat -> a0) := fun y0 : type1400 a0 => ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x1 y1) (@iterate a0 nat y0 (@GSPEC nat (x0 y1)) x1)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (x0 y1)) x1) (x1 y1)).
Definition term111 (a0 : Type') (x0 : nat -> a0) := fun y0 : type1400 a0 => ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) /\ (forall y0 : a2 -> a1, forall y1 : a2, forall y2 : a2 -> Prop, (@FINITE a2 y2) -> (@iterate a1 a2 x0 (@INSERT a2 y1 y2) y0) = (@COND a1 (@IN a2 y1 y2) (@iterate a1 a2 x0 y2 y0) (x0 (y0 y1) (@iterate a1 a2 x0 y2 y0)))).
Definition term180 (a0 : Type') := fun y0 : type1605 => (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0.
Definition term204 (x0 : type1605) (x1 : nat) := fun y0 : nat => (x0 x1 y0) = ((fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2) y0).
Definition term71 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := True /\ (forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0))).
Definition term116 (a0 : Type') (x0 : nat -> a0) := ((~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False.
Definition term103 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @COND a0 (@IN nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2).
Definition term81 (a0 : Type') (x0 : type1400 a0) := imp ((forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)) /\ (forall y0 : a0, (x0 (@neutral a0 x0) y0) = y0))).
Definition term401 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y0).
Definition term191 (x0 : type1605) := @eq Prop (x0 = (fun y0 : nat => (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3) y0)).
Definition term285 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := exists y0 : a0, x0 \/ (x1 y0).
Definition term193 (x0 : type1605) := fun y0 : nat => (x0 y0) = ((fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3) y0).
Definition term360 (x0 : type1605) := fun y0 : type1606 => (fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0.
Definition term4 (x0 : nat) := (~ (Peano.lt x0 x0)) -> (Peano.lt x0 x0) = False.
Definition term65 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @eq a0 (@COND a0 (@IN nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2) (x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2))).
Definition term416 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := (fun y0 : a0 => forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y0)) x1.
Definition term219 (x0 : nat) (x1 : nat) (x2 : nat) := (fun y0 : nat => @SETSPEC nat x0 (Peano.lt y0 x1) y0) x2.
Definition term292 (x0 : nat) (x1 : nat) := exists y0 : nat, (fun y1 : nat => @SETSPEC nat x0 (Peano.lt y1 x1) y1) y0.
Definition term77 (a0 : Type') (x0 : nat -> a0) := fun y0 : type1400 a0 => (@monoidal a0 y0) -> forall y1 : nat, (@COND a0 (@IN nat y1 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3))) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0))) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)).
Definition term386 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) (x3 : a0) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2)) x3.
Definition term299 (x0 : type1605) (x1 : nat) (x2 : nat) := exists y0 : nat, (~ (x0 x2 x1)) \/ (@SETSPEC nat x1 (Peano.lt y0 x2) y0).
Definition term348 (x0 : type1605) (x1 : type1606) := forall y0 : nat, forall y1 : nat, (~ (x0 y0 y1)) \/ (@SETSPEC nat y1 (Peano.lt (x1 y0 y1) y0) (x1 y0 y1)).
Definition term282 (x0 : type1605) := forall y0 : nat, forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term277 (x0 : type1605) := forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term237 (x0 : type1605) := forall y0 : nat, forall y1 : nat, ((x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ ((~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term208 (x0 : type1605) := forall y0 : nat, forall y1 : nat, (x0 y0 y1) = (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term32 (x0 : nat) := (fun y0 : nat => (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) = (@INSERT nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)))) x0.
Definition term387 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := @eq a0 (x1 x0 (x1 x2 x3)).
Definition term106 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @COND a0 False (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2) (x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2)).
Definition term336 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := (fun y0 : nat -> nat => forall y1 : nat, (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt (y0 y1) x1) (y0 y1))) x2.
Definition term284 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := x0 \/ (exists y0 : a0, x1 y0).
Definition term205 (x0 : type1605) (x1 : nat) := fun y0 : nat => (x0 x1 y0) = (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term39 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := ((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0))).
Definition term390 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := forall y0 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x2) y0)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2)) y0).
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (fun y0 : type1400 a1 => (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1))))) x0.
Definition term17 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) := forall y0 : a1, forall y1 : a1 -> Prop, (@FINITE a1 y1) -> (@iterate a0 a1 x0 (@INSERT a1 y0 y1) x1) = (@COND a0 (@IN a1 y0 y1) (@iterate a0 a1 x0 y1 x1) (x0 (x1 y0) (@iterate a0 a1 x0 y1 x1))).
Definition term414 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @eq a0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x3 x2)) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3)).
Definition term146 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := forall y0 : a0, (x0 x1 (x0 x2 y0)) = (x0 (x0 x1 x2) y0).
Definition term215 (x0 : nat -> Prop) := ~ (ex x0).
Definition term391 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := fun y0 : a0 => forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) y0)) y1).
Definition term289 (x0 : type1605) (x1 : nat) (x2 : nat) := exists y0 : nat, (~ (x0 x2 x1)) \/ ((fun y1 : nat => @SETSPEC nat x1 (Peano.lt y1 x2) y1) y0).
Definition term42 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => ((@monoidal a0 x0) = x2) -> (x2 -> (((@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x1) = (@neutral a0 x0)) /\ (forall y1 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x1) (x1 y1)))) = y0) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x1) = (@neutral a0 x0)) /\ (forall y1 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x1) (x1 y1)))) = (x2 -> y0)) x3.
Definition term267 (x0 : type1605) := fun y0 : nat => forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term266 (x0 : type1605) := fun y0 : nat => forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term207 (x0 : type1605) := fun y0 : nat => forall y1 : nat, (x0 y0 y1) = (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2).
Definition term364 (x0 : type1605) (x1 : type1606) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ ((fun y0 : type1606 => forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2))) x1).
Definition term29 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0).
Definition term367 (x0 : type1605) := fun y0 : type1606 => (forall y1 : nat, forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) /\ (forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2))).
Definition term11 (x0 : nat) := @FINITE nat (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1)).
Definition term411 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term123 (a0 : Type') := forall y0 : nat -> a0, (~ (forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2)))) -> False.
Definition term86 (x0 : nat) (x1 : nat) := (fun y0 : nat => Peano.lt y0 x0) x1.
Definition term394 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, forall y1 : a0, forall y2 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) y2).
Definition term150 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2).
Definition term339 (x0 : type1605) := fun y0 : nat => exists y1 : nat -> nat, (fun y2 : nat => fun y3 : nat -> nat => forall y4 : nat, (~ (x0 y2 y4)) \/ (@SETSPEC nat y4 (Peano.lt (y3 y4) y2) (y3 y4))) y0 y1.
Definition term80 (a0 : Type') (x0 : type1400 a0) := imp (@monoidal a0 x0).
Definition term177 (a0 : Type') := imp (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)))).
Definition term176 (a0 : Type') := imp (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = ((fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0)).
Definition term216 (x0 : nat -> Prop) := forall y0 : nat, ~ (x0 y0).
Definition term186 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> a0) := forall y0 : a1, (x0 y0) = (x1 y0).
Definition term57 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @iterate a0 nat x0 (@INSERT nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) x2.
Definition term105 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2).
Definition term406 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := x0 (@I (nat -> a0) x3 x2) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term68 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := fun y0 : nat => (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term327 (x0 : type1605) := fun y0 : nat => exists y1 : nat -> nat, forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2)).
Definition term127 (x0 : type1605) (x1 : nat) := @eq (nat -> Prop) (x0 x1).
Definition term166 (x0 : Prop) (x1 : type1605) (x2 : type959) := (forall y0 : type1605, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : type1605, (y0 = x1) -> x2 y0).
Definition term184 (a0 : Type') := (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)))) -> (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2))) = (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))).
Definition term167 (a0 : Type') := (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = ((fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0)) -> (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2))) = (forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (fun y1 : type1605 => forall y2 : nat -> a0, forall y3 : type1400 a0, ((forall y4 : a0, forall y5 : a0, (y3 y4 y5) = (y3 y5 y4)) /\ ((forall y4 : a0, forall y5 : a0, forall y6 : a0, (y3 y4 (y3 y5 y6)) = (y3 (y3 y4 y5) y6)) /\ (forall y4 : a0, (y3 (@neutral a0 y3) y4) = y4))) -> forall y4 : nat, (y3 (y2 y4) (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2)) = (y3 (@iterate a0 nat y3 (@GSPEC nat (y1 y4)) y2) (y2 y4))) y0).
Definition term131 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3.
Definition term211 (a0 : Type') := fun y0 : type1605 => (forall y1 : nat, forall y2 : nat, (y0 y1 y2) = (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)).
Definition term322 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := forall y0 : nat, (fun y1 : nat => fun y2 : nat => (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0 (x2 y0).
Definition term335 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := (fun y0 : nat => fun y1 : nat -> nat => forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2))) x1 x2.
Definition term3 (x0 : nat) := ~ (Peano.lt x0 x0).
Definition term119 (a0 : Type') (x0 : nat -> a0) := ~ (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))).
Definition term94 (x0 : nat) (x1 : nat) := exists y0 : nat, @SETSPEC nat x0 (Peano.lt y0 x1) y0.
Definition term374 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := @eq a0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) x1).
Definition term114 (a0 : Type') (x0 : nat -> a0) := (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False.
Definition term51 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := @eq a0 (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1).
Definition term403 (a0 : Type') (x0 : type1400 a0) := and (forall y0 : a0, forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y0)).
Definition term395 (a0 : Type') (x0 : type1400 a0) := and (forall y0 : a0, forall y1 : a0, forall y2 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) y2)).
Definition term157 (a0 : Type') (x0 : type1400 a0) := and (forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0)).
Definition term151 (a0 : Type') (x0 : type1400 a0) := and (forall y0 : a0, forall y1 : a0, forall y2 : a0, (x0 y0 (x0 y1 y2)) = (x0 (x0 y0 y1) y2)).
Definition term62 (a0 : Type') (x0 : nat) (x1 : type1400 a0) := (@FINITE nat (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1))) /\ (@monoidal a0 x1).
Definition term74 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := (@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0))).
Definition term41 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : Prop) := forall y0 : Prop, ((@monoidal a0 x0) = x2) -> (x2 -> (((@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x1) = (@neutral a0 x0)) /\ (forall y1 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x1) (x1 y1)))) = y0) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x1) = (@neutral a0 x0)) /\ (forall y1 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x1) (x1 y1)))) = (x2 -> y0).
Definition term36 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term201 (x0 : type1605) (x1 : nat) := @eq Prop ((x0 x1) = (fun y0 : nat => (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 x1) y2) y0)).
Definition term241 (x0 : nat -> Prop) (x1 : nat -> Prop) := (forall y0 : nat, x0 y0) /\ (forall y0 : nat, x1 y0).
Definition term246 (x0 : type1605) (x1 : nat) (x2 : nat) := (fun y0 : nat => (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) x2.
Definition term126 (x0 : nat) := (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2) x0.
Definition term397 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := @eq a0 (x0 x1 x2).
Definition term139 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) := forall y0 : nat, (x0 (x2 y0) (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (x1 y0)) x2) (x2 y0)).
Definition term109 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := forall y0 : nat, (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term70 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term290 (x0 : type1605) (x1 : nat) (x2 : nat) := ~ (x0 x1 x2).
Definition term117 (a0 : Type') (x0 : nat -> a0) := (((~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False.
Definition term372 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@neutral a0 x0)) x1.
Definition term27 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 /\ x1) -> x2.
Definition term333 (x0 : type1605) := fun y0 : nat => fun y1 : nat -> nat => forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2)).
Definition term38 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := forall y0 : Prop, forall y1 : Prop, ((@monoidal a0 x0) = y0) -> (y0 -> (((@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (NUMERAL 0)) y3)) x1) = (@neutral a0 x0)) /\ (forall y2 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 (S y2)) y4)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) x1) (x1 y2)))) = y1) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (NUMERAL 0)) y3)) x1) = (@neutral a0 x0)) /\ (forall y2 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 (S y2)) y4)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) x1) (x1 y2)))) = (y0 -> y1).
Definition term37 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term269 (x0 : type1605) (x1 : nat) := and ((fun y0 : nat => forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) x1).
Definition term358 (x0 : type1605) := exists y0 : type1606, (forall y1 : nat, forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) /\ ((fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0).
Definition term408 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x3 x2) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term227 (x0 : type1605) (x1 : nat) (x2 : nat) := or (x0 x1 x2).
Definition term312 (x0 : type1605) (x1 : nat) (x2 : nat) := fun y0 : nat => (fun y1 : nat => fun y2 : nat => (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt y2 x1) y2)) x2 y0.
Definition term135 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : nat) := x0 (x1 x2).
Definition term310 (x0 : type1605) (x1 : nat) (x2 : nat) (x3 : nat) := (fun y0 : nat => fun y1 : nat => (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2 x3.
Definition term271 (x0 : type1605) (x1 : nat) := ((fun y0 : nat => forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) x1) /\ ((fun y0 : nat => forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1).
Definition term230 (x0 : type1605) (x1 : nat) (x2 : nat) := and ((x0 x2 x1) \/ (~ (exists y0 : nat, @SETSPEC nat x1 (Peano.lt y0 x2) y0))).
Definition term8 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0)) x1.
Definition term261 (x0 : type1605) (x1 : nat) := (forall y0 : nat, (x0 x1 y0) \/ (forall y1 : nat, ~ (@SETSPEC nat y0 (Peano.lt y1 x1) y1))) /\ (forall y0 : nat, (~ (x0 x1 y0)) \/ (exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term359 (x0 : type1605) (x1 : type1606) := (fun y0 : type1606 => forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2))) x1.
Definition term141 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => (x0 (@neutral a0 x0) y0) = y0.
Definition term164 (a0 : Type') := forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))).
Definition term384 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := @I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2).
Definition term88 (x0 : nat) (x1 : nat) (x2 : nat) := @SETSPEC nat x0 (Peano.lt x1 x2).
Definition term136 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := x0 (x3 x2) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term279 (x0 : type1605) := and (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))).
Definition term162 (a0 : Type') (x0 : type1605) := forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0) (y0 y2)).
Definition term124 (a0 : Type') := forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2)).
Definition term218 (x0 : nat) (x1 : nat) := forall y0 : nat, ~ ((fun y1 : nat => @SETSPEC nat x0 (Peano.lt y1 x1) y1) y0).
Definition term405 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : nat) := x0 (@I (nat -> a0) x1 x2).
Definition term280 (x0 : type1605) := fun y0 : nat => (fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0.
Definition term275 (x0 : type1605) := fun y0 : nat => (fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0.
Definition term73 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := ((@monoidal a0 x0) -> (((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) = (forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) = ((@monoidal a0 x0) -> forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0))).
Definition term347 (x0 : type1605) (x1 : type1606) := forall y0 : nat, (fun y1 : nat => fun y2 : nat -> nat => forall y3 : nat, (~ (x0 y1 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y2 y3) y1) (y2 y3))) y0 (x1 y0).
Definition term16 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) := (fun y0 : a1 -> a0 => forall y1 : a1, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate a0 a1 x0 (@INSERT a1 y1 y2) y0) = (@COND a0 (@IN a1 y1 y2) (@iterate a0 a1 x0 y2 y0) (x0 (y0 y1) (@iterate a0 a1 x0 y2 y0)))) x1.
Definition term297 (x0 : type1605) (x1 : nat) (x2 : nat) := fun y0 : nat => (~ (x0 x2 x1)) \/ ((fun y1 : nat => @SETSPEC nat x1 (Peano.lt y1 x2) y1) y0).
Definition term295 (x0 : type1605) (x1 : nat) (x2 : nat) (x3 : nat) := (~ (x0 x2 x1)) \/ ((fun y0 : nat => @SETSPEC nat x1 (Peano.lt y0 x2) y0) x3).
Definition term183 (a0 : Type') := forall y0 : type1605, (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)).
Definition term357 (x0 : type1605) := (forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (exists y0 : type1606, (fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0).
Definition term422 (a0 : Type') (x0 : nat -> a0) := (fun y0 : nat -> a0 => (~ (forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2)))) -> False) x0.
Definition term140 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := x0 (@neutral a0 x0) x1.
Definition term92 (x0 : nat) (x1 : nat) := fun y0 : nat => @SETSPEC nat x0 (Peano.lt y0 x1) y0.
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (@monoidal a1 x0) -> (forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) /\ (forall y0 : a2 -> a1, forall y1 : a2, forall y2 : a2 -> Prop, (@FINITE a2 y2) -> (@iterate a1 a2 x0 (@INSERT a2 y1 y2) y0) = (@COND a1 (@IN a2 y1 y2) (@iterate a1 a2 x0 y2 y0) (x0 (y0 y1) (@iterate a1 a2 x0 y2 y0)))).
Definition term222 (x0 : nat) (x1 : nat) := fun y0 : nat => ~ ((fun y1 : nat => @SETSPEC nat x0 (Peano.lt y1 x1) y1) y0).
Definition term308 (x0 : type1605) (x1 : nat) := fun y0 : nat => fun y1 : nat => (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1).
Definition term351 (x0 : type1605) := exists y0 : type1606, forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2)).
Definition term121 (a0 : Type') := fun y0 : nat -> a0 => (~ (forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2)))) -> False.
Definition term402 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y1) y0).
Definition term392 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := forall y0 : a0, forall y1 : a0, (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) y1)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) y0)) y1).
Definition term156 (a0 : Type') (x0 : type1400 a0) := forall y0 : a0, forall y1 : a0, (x0 y0 y1) = (x0 y1 y0).
Definition term148 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := forall y0 : a0, forall y1 : a0, (x0 x1 (x0 y0 y1)) = (x0 (x0 x1 y0) y1).
Definition term399 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := fun y0 : a0 => (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) y0) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 y0) x1).
Definition term2 (x0 : nat) := (fun y0 : nat => ~ (Peano.lt y0 y0)) x0.
Definition term67 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := fun y0 : nat => (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term321 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := fun y0 : nat => (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt (x2 y0) x1) (x2 y0)).
Definition term343 (x0 : type1605) (x1 : type1606) (x2 : nat) := (fun y0 : nat -> nat => forall y1 : nat, (~ (x0 x2 y1)) \/ (@SETSPEC nat y1 (Peano.lt (y0 y1) x2) (y0 y1))) (x1 x2).
Definition term48 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1.
Definition term379 (a0 : Type') (x0 : a0) (x1 : type1400 a0) (x2 : a0) (x3 : a0) := @I (a0 -> a0 -> a0) x1 x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x1 x2) x3).
Definition term130 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) := @iterate a0 nat x0 (@GSPEC nat (x1 x2)).
Definition term229 (x0 : type1605) (x1 : nat) (x2 : nat) := (x0 x2 x1) \/ (forall y0 : nat, ~ (@SETSPEC nat x1 (Peano.lt y0 x2) y0)).
Definition term153 (a0 : Type') (x0 : type1400 a0) (x1 : a0) := fun y0 : a0 => (x0 x1 y0) = (x0 y0 x1).
Definition term323 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := forall y0 : nat, (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt (x2 y0) x1) (x2 y0)).
Definition term30 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) x1.
Definition term314 (x0 : type1605) (x1 : nat) := fun y0 : nat => exists y1 : nat, (fun y2 : nat => fun y3 : nat => (~ (x0 x1 y2)) \/ (@SETSPEC nat y2 (Peano.lt y3 x1) y3)) y0 y1.
Definition term168 (a0 : Type') := fun y0 : type1605 => forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)).
Definition term278 (x0 : type1605) := and (forall y0 : nat, (fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0).
Definition term256 (x0 : type1605) (x1 : nat) := and (forall y0 : nat, (fun y1 : nat => (x0 x1 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 x1) y2))) y0).
Definition term78 (a0 : Type') (x0 : nat -> a0) := forall y0 : type1400 a0, (@monoidal a0 y0) -> ((@iterate a0 nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x0) = (@neutral a0 y0)) /\ (forall y1 : nat, (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x0) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1))).
Definition term98 (x0 : nat) := @IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1)).
Definition term83 (x0 : nat) := @IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 ((fun y2 : nat => Peano.lt y2 x0) y1) y1)).
Definition term82 (x0 : nat) (x1 : nat -> Prop) := @IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (x1 y1) y1)).
Definition term50 (a0 : Type') (x0 : nat -> a0) (x1 : type1400 a0) := (@monoidal a0 x1) -> (@iterate a0 nat x1 (@EMPTY nat) x0) = (@neutral a0 x1).
Definition term49 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) := (@monoidal a1 x1) -> (@iterate a1 a0 x1 (@EMPTY a0) x0) = (@neutral a1 x1).
Definition term288 (x0 : type1605) (x1 : nat) (x2 : nat) := (~ (x0 x2 x1)) \/ (exists y0 : nat, (fun y1 : nat => @SETSPEC nat x1 (Peano.lt y1 x2) y1) y0).
Definition term19 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> a0) := forall y0 : a1 -> Prop, (@FINITE a1 y0) -> (@iterate a0 a1 x1 (@INSERT a1 x0 y0) x2) = (@COND a0 (@IN a1 x0 y0) (@iterate a0 a1 x1 y0 x2) (x1 (x2 x0) (@iterate a0 a1 x1 y0 x2))).
Definition term20 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> a0) (x3 : a1 -> Prop) := (fun y0 : a1 -> Prop => (@FINITE a1 y0) -> (@iterate a0 a1 x1 (@INSERT a1 x0 y0) x2) = (@COND a0 (@IN a1 x0 y0) (@iterate a0 a1 x1 y0 x2) (x1 (x2 x0) (@iterate a0 a1 x1 y0 x2)))) x3.
Definition term63 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @COND a0 (@IN nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1))) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2) (x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2)).
Definition term410 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2) (@I (nat -> a0) x2 x3).
Definition term220 (x0 : nat) (x1 : nat) (x2 : nat) := ~ ((fun y0 : nat => @SETSPEC nat x0 (Peano.lt y0 x1) y0) x2).
Definition term15 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := forall y0 : a1 -> a0, forall y1 : a1, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate a0 a1 x0 (@INSERT a1 y1 y2) y0) = (@COND a0 (@IN a1 y1 y2) (@iterate a0 a1 x0 y2 y0) (x0 (y0 y1) (@iterate a0 a1 x0 y2 y0))).
Definition term21 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> Prop) (x3 : a1 -> a0) := (@FINITE a1 x2) -> (@iterate a0 a1 x1 (@INSERT a1 x0 x2) x3) = (@COND a0 (@IN a1 x0 x2) (@iterate a0 a1 x1 x2 x3) (x1 (x3 x0) (@iterate a0 a1 x1 x2 x3))).
Definition term212 (a0 : Type') := forall y0 : type1605, (forall y1 : nat, forall y2 : nat, (y0 y1 y2) = (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3)).
Definition term66 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : nat) := x0 (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x2) y1)) x1) (x1 x2).
Definition term363 (x0 : type1605) := @eq Prop ((forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (exists y0 : type1606, forall y1 : nat, forall y2 : nat, (~ (x0 y1 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y0 y1 y2) y1) (y0 y1 y2)))).
Definition term362 (x0 : type1605) := @eq Prop ((forall y0 : nat, forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (exists y0 : type1606, (fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0)).
Definition term238 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (x0 y0) /\ (x1 y0).
Definition term192 (x0 : type1605) := @eq Prop (x0 = (fun y0 : nat => fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term263 (x0 : type1605) := forall y0 : nat, (forall y1 : nat, (x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ (forall y1 : nat, (~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term214 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := ~ ((x0 (x2 x3) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2) (x2 x3))).
Definition term155 (a0 : Type') (x0 : type1400 a0) := fun y0 : a0 => forall y1 : a0, (x0 y0 y1) = (x0 y1 y0).
Definition term317 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) (x3 : nat) := (fun y0 : nat => fun y1 : nat => (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)) x3 (x2 x3).
Definition term221 (x0 : nat) (x1 : nat) (x2 : nat) := ~ (@SETSPEC nat x0 (Peano.lt x2 x1) x2).
Definition term309 (x0 : type1605) (x1 : nat) (x2 : nat) := (fun y0 : nat => fun y1 : nat => (~ (x0 x1 y0)) \/ (@SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2.
Definition term118 (a0 : Type') (x0 : nat -> a0) := (((~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> ((~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False) -> (~ (forall y0 : type1400 a0, ((forall y1 : a0, forall y2 : a0, (y0 y1 y2) = (y0 y2 y1)) /\ ((forall y1 : a0, forall y2 : a0, forall y3 : a0, (y0 y1 (y0 y2 y3)) = (y0 (y0 y1 y2) y3)) /\ (forall y1 : a0, (y0 (@neutral a0 y0) y1) = y1))) -> forall y1 : nat, (y0 (x0 y1) (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0)) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1)))) -> False.
Definition term93 (x0 : nat) (x1 : nat) := exists y0 : nat, @SETSPEC nat x0 ((fun y1 : nat => Peano.lt y1 x1) y0) y0.
Definition term170 (a0 : Type') := @eq Prop (forall y0 : nat -> a0, forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2))).
Definition term225 (x0 : type1605) (x1 : nat) (x2 : nat) := or (~ (x0 x1 x2)).
Definition term76 (a0 : Type') (x0 : nat -> a0) := fun y0 : type1400 a0 => (@monoidal a0 y0) -> ((@iterate a0 nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (NUMERAL 0)) y2)) x0) = (@neutral a0 y0)) /\ (forall y1 : nat, (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (S y1)) y3)) x0) = (y0 (@iterate a0 nat y0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) x0) (x0 y1))).
Definition term75 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := (@monoidal a0 x0) -> forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term161 (a0 : Type') (x0 : type1605) := fun y0 : nat -> a0 => forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (x0 y2)) y0) (y0 y2)).
Definition term122 (a0 : Type') := fun y0 : nat -> a0 => forall y1 : type1400 a0, ((forall y2 : a0, forall y3 : a0, (y1 y2 y3) = (y1 y3 y2)) /\ ((forall y2 : a0, forall y3 : a0, forall y4 : a0, (y1 y2 (y1 y3 y4)) = (y1 (y1 y2 y3) y4)) /\ (forall y2 : a0, (y1 (@neutral a0 y1) y2) = y2))) -> forall y2 : nat, (y1 (y0 y2) (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0)) = (y1 (@iterate a0 nat y1 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) y0) (y0 y2)).
Definition term53 (a0 : Type') (x0 : nat -> a0) (x1 : type1400 a0) := and ((@iterate a0 nat x1 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x0) = (@neutral a0 x1)).
Definition term144 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) (x3 : a0) := x0 (x0 x1 x2) x3.
Definition term129 (a0 : Type') (x0 : type1400 a0) (x1 : nat) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)).
Definition term54 (a0 : Type') (x0 : type1400 a0) (x1 : nat) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (S x1)) y1)).
Definition term47 (a0 : Type') (x0 : type1400 a0) := @iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)).
Definition term415 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := ~ ((@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x2 x3)) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) (@I (nat -> a0) x2 x3))).
Definition term224 (x0 : nat) (x1 : nat) := forall y0 : nat, ~ (@SETSPEC nat x0 (Peano.lt y0 x1) y0).
Definition term334 (x0 : type1605) (x1 : nat) := (fun y0 : nat => fun y1 : nat -> nat => forall y2 : nat, (~ (x0 y0 y2)) \/ (@SETSPEC nat y2 (Peano.lt (y1 y2) y0) (y1 y2))) x1.
Definition term91 (x0 : nat) (x1 : nat) := fun y0 : nat => @SETSPEC nat x0 ((fun y1 : nat => Peano.lt y1 x1) y0) y0.
Definition term69 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)).
Definition term61 (x0 : nat) := and (@FINITE nat (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1))).
Definition term398 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) := @eq a0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2).
Definition term281 (x0 : type1605) := forall y0 : nat, (fun y1 : nat => forall y2 : nat, (~ (x0 y1 y2)) \/ (exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) y0.
Definition term276 (x0 : type1605) := forall y0 : nat, (fun y1 : nat => forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) y0.
Definition term303 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := exists y0 : a0 -> a1, forall y1 : a0, x0 y1 (y0 y1).
Definition term409 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat) (x3 : nat -> a0) := @I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x3 x2)) (@iterate a0 nat x0 (@GSPEC nat (x1 x2)) x3).
Definition term134 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2) (x2 x3).
Definition term209 (x0 : type1605) := imp (forall y0 : nat, forall y1 : nat, (x0 y0 y1) = (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term40 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@monoidal a0 x0) = y0) -> (y0 -> (((@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (NUMERAL 0)) y3)) x1) = (@neutral a0 x0)) /\ (forall y2 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 (S y2)) y4)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) x1) (x1 y2)))) = y1) -> ((@monoidal a0 x0) -> ((@iterate a0 nat x0 (@GSPEC nat (fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 (NUMERAL 0)) y3)) x1) = (@neutral a0 x0)) /\ (forall y2 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 (S y2)) y4)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y3 : nat => exists y4 : nat, @SETSPEC nat y3 (Peano.lt y4 y2) y4)) x1) (x1 y2)))) = (y0 -> y1)) x2.
Definition term84 (x0 : nat) := (fun y0 : nat => Peano.lt y0 x0) x0.
Definition term101 (a0 : Type') (x0 : nat) := @COND a0 (@IN nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1))).
Definition term366 (x0 : type1605) := fun y0 : type1606 => (forall y1 : nat, forall y2 : nat, (x0 y1 y2) \/ (forall y3 : nat, ~ (@SETSPEC nat y2 (Peano.lt y3 y1) y3))) /\ ((fun y1 : type1606 => forall y2 : nat, forall y3 : nat, (~ (x0 y2 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y1 y2 y3) y2) (y1 y2 y3))) y0).
Definition term5 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1).
Definition term286 (x0 : Prop) (x1 : nat -> Prop) := x0 \/ (exists y0 : nat, x1 y0).
Definition term174 (a0 : Type') := fun y0 : type1605 => (y0 = (fun y1 : nat => fun y2 : nat => exists y3 : nat, @SETSPEC nat y2 (Peano.lt y3 y1) y3)) -> (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (fun y4 : nat => exists y5 : nat, @SETSPEC nat y4 (Peano.lt y5 y3) y5)) y1) (y1 y3))) = (forall y1 : nat -> a0, forall y2 : type1400 a0, ((forall y3 : a0, forall y4 : a0, (y2 y3 y4) = (y2 y4 y3)) /\ ((forall y3 : a0, forall y4 : a0, forall y5 : a0, (y2 y3 (y2 y4 y5)) = (y2 (y2 y3 y4) y5)) /\ (forall y3 : a0, (y2 (@neutral a0 y2) y3) = y3))) -> forall y3 : nat, (y2 (y1 y3) (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1)) = (y2 (@iterate a0 nat y2 (@GSPEC nat (y0 y3)) y1) (y1 y3))).
Definition term107 (a0 : Type') (x0 : type1400 a0) (x1 : nat) (x2 : nat -> a0) := @eq a0 (x0 (x2 x1) (@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x1) y1)) x2)).
Definition term346 (x0 : type1605) (x1 : type1606) := fun y0 : nat => forall y1 : nat, (~ (x0 y0 y1)) \/ (@SETSPEC nat y1 (Peano.lt (x1 y0 y1) y0) (x1 y0 y1)).
Definition term236 (x0 : type1605) := fun y0 : nat => forall y1 : nat, ((x0 y0 y1) \/ (forall y2 : nat, ~ (@SETSPEC nat y1 (Peano.lt y2 y0) y2))) /\ ((~ (x0 y0 y1)) \/ (exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)).
Definition term385 (a0 : Type') (x0 : type1400 a0) (x1 : a0) (x2 : a0) (x3 : a0) := @I (a0 -> a0 -> a0) x0 (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 x1) x2) x3.
Definition term370 (a0 : Type') (x0 : type1400 a0) := @I (a0 -> a0 -> a0) x0 (@neutral a0 x0).
Definition term97 (x0 : nat) := @GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 ((fun y2 : nat => Peano.lt y2 x0) y1) y1).
Definition term60 (x0 : nat) := @GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 x0) y1).
Definition term46 := @GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1).
Definition term33 (x0 : nat) := @GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (S x0)) y1).
Definition term337 (x0 : type1605) (x1 : nat) := fun y0 : nat -> nat => (fun y1 : nat => fun y2 : nat -> nat => forall y3 : nat, (~ (x0 y1 y3)) \/ (@SETSPEC nat y3 (Peano.lt (y2 y3) y1) (y2 y3))) x1 y0.
Definition term320 (x0 : type1605) (x1 : nat) (x2 : nat -> nat) := fun y0 : nat => (fun y1 : nat => fun y2 : nat => (~ (x0 x1 y1)) \/ (@SETSPEC nat y1 (Peano.lt y2 x1) y2)) y0 (x2 y0).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1400 a0) (x2 : a1 -> Prop) (x3 : a1 -> a0) := @COND a0 (@IN a1 x0 x2) (@iterate a0 a1 x1 x2 x3) (x1 (x3 x0) (@iterate a0 a1 x1 x2 x3)).
Definition term72 (a0 : Type') (x0 : type1400 a0) (x1 : nat -> a0) := (@monoidal a0 x0) -> (((@iterate a0 nat x0 (@GSPEC nat (fun y0 : nat => exists y1 : nat, @SETSPEC nat y0 (Peano.lt y1 (NUMERAL 0)) y1)) x1) = (@neutral a0 x0)) /\ (forall y0 : nat, (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) x1) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0)))) = (forall y0 : nat, (@COND a0 (@IN nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x0 (x1 y0) (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1))) = (x0 (@iterate a0 nat x0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2)) x1) (x1 y0))).
Definition term31 := forall y0 : nat, (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 (S y0)) y2)) = (@INSERT nat y0 (@GSPEC nat (fun y1 : nat => exists y2 : nat, @SETSPEC nat y1 (Peano.lt y2 y0) y2))).
Definition term418 (a0 : Type') (x0 : type1400 a0) (x1 : type1605) (x2 : nat -> a0) (x3 : nat) := (~ ((@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x2 x3)) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) (@I (nat -> a0) x2 x3)))) -> (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@I (nat -> a0) x2 x3)) (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) = (@I (a0 -> a0) (@I (a0 -> a0 -> a0) x0 (@iterate a0 nat x0 (@GSPEC nat (x1 x3)) x2)) (@I (nat -> a0) x2 x3)).
