require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term4 (x0: El nadd) ≔ ((λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (∃ (λ y2 : El num, (∀ (λ y3 : El num, (<= (dist ((@̦‚ num num) (dest_nadd y0 y3) (dest_nadd y1 y3))) y2))))))))) x0);
symbol term7 (x0: El nadd) (x1: El nadd) ≔ (∃ (λ y0 : El num, (∀ (λ y1 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y1) (dest_nadd x1 y1))) y0)))));
symbol term1 (x0: El num) ≔ (∀ (λ y0 : El num, (= (dist ((@̦‚ num num) x0 y0)) (dist ((@̦‚ num num) y0 x0)))));
symbol term16 (x0: El nadd) ≔ (∀ (λ y0 : El nadd, (= (nadd_eq x0 y0) (nadd_eq y0 x0))));
symbol term17 ≔ (∀ (λ y0 : El nadd, (∀ (λ y1 : El nadd, (= (nadd_eq y0 y1) (nadd_eq y1 y0))))));
symbol term9 (x0: El nadd) (x1: El nadd) ≔ ((@= bool) (∃ (λ y0 : El num, (∀ (λ y1 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y1) (dest_nadd x1 y1))) y0))))));
symbol term3 (x0: El num) (x1: El num) ≔ (dist ((@̦‚ num num) x0 x1));
symbol term13 (x0: El nadd) (x1: El nadd) (x2: El num) ≔ (λ y0 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y0) (dest_nadd x1 y0))) x2));
symbol term11 (x0: El nadd) (x1: El nadd) (x2: El num) ≔ (<= (dist ((@̦‚ num num) (dest_nadd x0 x2) (dest_nadd x1 x2))));
symbol term6 (x0: El nadd) (x1: El nadd) ≔ ((λ y0 : El nadd, (= (nadd_eq x0 y0) (∃ (λ y1 : El num, (∀ (λ y2 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y2) (dest_nadd y0 y2))) y1))))))) x1);
symbol term10 (x0: El nadd) (x1: El nadd) (x2: El num) ≔ (dist ((@̦‚ num num) (dest_nadd x0 x2) (dest_nadd x1 x2)));
symbol term14 (x0: El nadd) (x1: El nadd) (x2: El num) ≔ (∀ (λ y0 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y0) (dest_nadd x1 y0))) x2)));
symbol term15 (x0: El nadd) (x1: El nadd) ≔ (λ y0 : El num, (∀ (λ y1 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y1) (dest_nadd x1 y1))) y0))));
symbol term0 (x0: El num) ≔ ((λ y0 : El num, (∀ (λ y1 : El num, (= (dist ((@̦‚ num num) y0 y1)) (dist ((@̦‚ num num) y1 y0)))))) x0);
symbol term12 (x0: El nadd) (x1: El nadd) (x2: El num) (x3: El num) ≔ (<= (dist ((@̦‚ num num) (dest_nadd x0 x2) (dest_nadd x1 x2))) x3);
symbol term5 (x0: El nadd) ≔ (∀ (λ y0 : El nadd, (= (nadd_eq x0 y0) (∃ (λ y1 : El num, (∀ (λ y2 : El num, (<= (dist ((@̦‚ num num) (dest_nadd x0 y2) (dest_nadd y0 y2))) y1))))))));
symbol term2 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (= (dist ((@̦‚ num num) x0 y0)) (dist ((@̦‚ num num) y0 x0)))) x1);
symbol term8 (x0: El nadd) (x1: El nadd) ≔ ((@= bool) (nadd_eq x0 x1));
