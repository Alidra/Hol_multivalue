Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm3459503_term_abbrevs.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm3459015_spec.
Require Import thm3459016_spec.
Require Import thm3459022_spec.
Require Import thm3459023_spec.
Require Import thm3459028_spec.
Require Import thm3459029_spec.
Lemma lem3459346 {A : Type'} (s : type686 A) (x : A) : (term0 A x s) = (term1 A s x).
Proof. exact (EQ_MP (@lem3459029 A s x) (@lem3459028 A s x)). Qed.
Lemma lem3459347 {_89837 : Type'} (s : type686 _89837) (x : _89837) : (term0 _89837 x s) = (term1 _89837 s x).
Proof. exact (@lem3459346 _89837 s x). Qed.
Lemma lem3459348 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term2 _89837 _89861 _89862 _89863 x P f) = (term3 _89837 _89861 _89862 _89863 P f x).
Proof. exact (@lem3459347 _89837 (term4 _89837 _89861 _89862 _89863 P f) x). Qed.
Lemma lem3459356 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term5 _83064 x P) = (term6 _83064 P x).
Proof. exact (EQ_MP (@lem3459023 _83064 P x) (@lem3459022 _83064 P x)). Qed.
Lemma lem3459357 {_89837 : Type'} (P : type909 _89837) (x : _89837 -> Prop) : (term7 _89837 x P) = (term8 _89837 P x).
Proof. exact (@lem3459356 (_89837 -> Prop) P x). Qed.
Lemma lem3459358 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (t : _89837 -> Prop) : (term9 _89837 _89861 _89862 _89863 t P f) = (term10 _89837 _89861 _89862 _89863 P f t).
Proof. exact (@lem3459357 _89837 (term11 _89837 _89861 _89862 _89863 P f) t). Qed.
Lemma lem3459359 {_89837 _89861 _89862 _89863 : Type'} (GEN_PVAR_59 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term12 _89837 _89861 _89862 _89863 P f GEN_PVAR_59) = (term13 _89837 _89861 _89862 _89863 GEN_PVAR_59 P f).
Proof. exact (eq_refl (term12 _89837 _89861 _89862 _89863 P f GEN_PVAR_59)). Qed.
Lemma lem3459360 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term14 _89837 _89861 _89862 _89863 P f) = (term15 _89837 _89861 _89862 _89863 P f).
Proof. exact (fun_ext (fun GEN_PVAR_59 : _89837 -> Prop => @lem3459359 _89837 _89861 _89862 _89863 GEN_PVAR_59 P f)). Qed.
Lemma lem3459361 {_89837 : Type'} : (@GSPEC (_89837 -> Prop)) = (@GSPEC (_89837 -> Prop)).
Proof. exact (eq_refl (@GSPEC (_89837 -> Prop))). Qed.
Lemma lem3459362 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term16 _89837 _89861 _89862 _89863 P f) = (term4 _89837 _89861 _89862 _89863 P f).
Proof. exact (MK_COMB (@lem3459361 _89837) (@lem3459360 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3459363 {_89837 : Type'} (t : _89837 -> Prop) : (@IN (_89837 -> Prop) t) = (@IN (_89837 -> Prop) t).
Proof. exact (eq_refl (@IN (_89837 -> Prop) t)). Qed.
Lemma lem3459364 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term9 _89837 _89861 _89862 _89863 t P f) = (term17 _89837 _89861 _89862 _89863 t P f).
Proof. exact (MK_COMB (@lem3459363 _89837 t) (@lem3459362 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3459365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3459366 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term18 _89837 _89861 _89862 _89863 t P f) = (term19 _89837 _89861 _89862 _89863 t P f).
Proof. exact (MK_COMB (@lem3459365) (@lem3459364 _89837 _89861 _89862 _89863 t P f)). Qed.
Lemma lem3459367 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term10 _89837 _89861 _89862 _89863 P f t) = (term20 _89837 _89861 _89862 _89863 t P f).
Proof. exact (eq_refl (term10 _89837 _89861 _89862 _89863 P f t)). Qed.
Lemma lem3459368 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : ((term9 _89837 _89861 _89862 _89863 t P f) = (term10 _89837 _89861 _89862 _89863 P f t)) = ((term17 _89837 _89861 _89862 _89863 t P f) = (term20 _89837 _89861 _89862 _89863 t P f)).
Proof. exact (MK_COMB (@lem3459366 _89837 _89861 _89862 _89863 t P f) (@lem3459367 _89837 _89861 _89862 _89863 t P f)). Qed.
Lemma lem3459369 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term17 _89837 _89861 _89862 _89863 t P f) = (term20 _89837 _89861 _89862 _89863 t P f).
Proof. exact (EQ_MP (@lem3459368 _89837 _89861 _89862 _89863 t P f) (@lem3459358 _89837 _89861 _89862 _89863 P f t)). Qed.
Lemma lem3459383 {A B : Type'} (f : A -> B) (y : A) : (term21 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem3459384 {_89837 : Type'} (f : type1527 _89837) (y : Prop) : (term22 _89837 f y) = (f y).
Proof. exact (@lem3459383 Prop (type686 _89837) f y). Qed.
Lemma lem3459385 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term23 _89837 _89861 _89862 _89863 t P x y z) = (term24 _89837 _89861 _89862 _89863 t P x y z).
Proof. exact (@lem3459384 _89837 (term25 _89837 t) (P x y z)). Qed.
Lemma lem3459386 {_89837 : Type'} (p : Prop) (t : _89837 -> Prop) : (term26 _89837 t p) = (term27 _89837 p t).
Proof. exact (eq_refl (term26 _89837 t p)). Qed.
Lemma lem3459387 {_89837 : Type'} (t : _89837 -> Prop) : (term28 _89837 t) = (term25 _89837 t).
Proof. exact (fun_ext (fun p : Prop => @lem3459386 _89837 p t)). Qed.
Lemma lem3459388 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (P x y z) = (P x y z).
Proof. exact (eq_refl (P x y z)). Qed.
Lemma lem3459389 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term23 _89837 _89861 _89862 _89863 t P x y z) = (term24 _89837 _89861 _89862 _89863 t P x y z).
Proof. exact (MK_COMB (@lem3459387 _89837 t) (@lem3459388 _89861 _89862 _89863 P x y z)). Qed.
Lemma lem3459390 {_89837 : Type'} : (@eq ((_89837 -> Prop) -> Prop)) = (@eq ((_89837 -> Prop) -> Prop)).
Proof. exact (eq_refl (@eq ((_89837 -> Prop) -> Prop))). Qed.
Lemma lem3459391 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term29 _89837 _89861 _89862 _89863 t P x y z) = (term30 _89837 _89861 _89862 _89863 t P x y z).
Proof. exact (MK_COMB (@lem3459390 _89837) (@lem3459389 _89837 _89861 _89862 _89863 t P x y z)). Qed.
Lemma lem3459392 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) : (term24 _89837 _89861 _89862 _89863 t P x y z) = (term31 _89837 _89861 _89862 _89863 P x y z t).
Proof. exact (eq_refl (term24 _89837 _89861 _89862 _89863 t P x y z)). Qed.
Lemma lem3459393 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) : ((term23 _89837 _89861 _89862 _89863 t P x y z) = (term24 _89837 _89861 _89862 _89863 t P x y z)) = ((term24 _89837 _89861 _89862 _89863 t P x y z) = (term31 _89837 _89861 _89862 _89863 P x y z t)).
Proof. exact (MK_COMB (@lem3459391 _89837 _89861 _89862 _89863 t P x y z) (@lem3459392 _89837 _89861 _89862 _89863 P x y z t)). Qed.
Lemma lem3459394 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) : (term24 _89837 _89861 _89862 _89863 t P x y z) = (term31 _89837 _89861 _89862 _89863 P x y z t).
Proof. exact (EQ_MP (@lem3459393 _89837 _89861 _89862 _89863 P x y z t) (@lem3459385 _89837 _89861 _89862 _89863 t P x y z)). Qed.
Lemma lem3459399 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (f x y z) = (f x y z).
Proof. exact (eq_refl (f x y z)). Qed.
Lemma lem3459400 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term32 _89837 _89861 _89862 _89863 t P f x y z) = (term33 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3459394 _89837 _89861 _89862 _89863 P x y z t) (@lem3459399 _89837 _89861 _89862 _89863 f x y z)). Qed.
Lemma lem3459402 {A B : Type'} (f : A -> B) (y : A) : (term21 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem3459403 {_89837 : Type'} (f : type686 _89837) (y : _89837 -> Prop) : (term34 _89837 f y) = (f y).
Proof. exact (@lem3459402 (_89837 -> Prop) Prop f y). Qed.
Lemma lem3459404 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term35 _89837 _89861 _89862 _89863 P t f x y z) = (term33 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (@lem3459403 _89837 (term31 _89837 _89861 _89862 _89863 P x y z t) (f x y z)). Qed.
Lemma lem3459405 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (t' : _89837 -> Prop) : (term36 _89837 _89861 _89862 _89863 P x y z t t') = (term37 _89837 _89861 _89862 _89863 P x y z t t').
Proof. exact (eq_refl (term36 _89837 _89861 _89862 _89863 P x y z t t')). Qed.
Lemma lem3459406 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) : (term38 _89837 _89861 _89862 _89863 P x y z t) = (term31 _89837 _89861 _89862 _89863 P x y z t).
Proof. exact (fun_ext (fun t' : _89837 -> Prop => @lem3459405 _89837 _89861 _89862 _89863 P x y z t t')). Qed.
Lemma lem3459407 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (f x y z) = (f x y z).
Proof. exact (eq_refl (f x y z)). Qed.
Lemma lem3459408 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term35 _89837 _89861 _89862 _89863 P t f x y z) = (term33 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3459406 _89837 _89861 _89862 _89863 P x y z t) (@lem3459407 _89837 _89861 _89862 _89863 f x y z)). Qed.
Lemma lem3459409 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3459410 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term39 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3459409) (@lem3459408 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459411 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term33 _89837 _89861 _89862 _89863 P t f x y z) = (term41 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term33 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459412 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : ((term35 _89837 _89861 _89862 _89863 P t f x y z) = (term33 _89837 _89861 _89862 _89863 P t f x y z)) = ((term33 _89837 _89861 _89862 _89863 P t f x y z) = (term41 _89837 _89861 _89862 _89863 P t f x y z)).
Proof. exact (MK_COMB (@lem3459410 _89837 _89861 _89862 _89863 P t f x y z) (@lem3459411 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459413 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term33 _89837 _89861 _89862 _89863 P t f x y z) = (term41 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (EQ_MP (@lem3459412 _89837 _89861 _89862 _89863 P t f x y z) (@lem3459404 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459418 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term32 _89837 _89861 _89862 _89863 t P f x y z) = (term41 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (TRANS (@lem3459400 _89837 _89861 _89862 _89863 P t f x y z) (@lem3459413 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459419 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term42 _89837 _89861 _89862 _89863 t P f x y) = (term43 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3459418 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3459420 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3459421 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term44 _89837 _89861 _89862 _89863 t P f x y) = (term45 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3459420 _89861) (@lem3459419 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3459426 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term46 _89837 _89861 _89862 _89863 t P f x) = (term47 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3459421 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3459427 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3459428 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term48 _89837 _89861 _89862 _89863 t P f x) = (term49 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3459427 _89862) (@lem3459426 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3459433 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term50 _89837 _89861 _89862 _89863 t P f) = (term51 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3459428 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3459434 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3459435 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term20 _89837 _89861 _89862 _89863 t P f) = (term52 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3459434 _89863) (@lem3459433 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3459440 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term17 _89837 _89861 _89862 _89863 t P f) = (term52 _89837 _89861 _89862 _89863 P t f).
Proof. exact (TRANS (@lem3459369 _89837 _89861 _89862 _89863 t P f) (@lem3459435 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3459441 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3459442 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term53 _89837 _89861 _89862 _89863 t P f) = (term54 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3459441) (@lem3459440 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3459443 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3459444 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term55 _89837 _89861 _89862 _89863 P f x t) = (term56 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3459442 _89837 _89861 _89862 _89863 P t f) (@lem3459443 _89837 x t)). Qed.
Lemma lem3459447 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term57 _89837 _89861 _89862 _89863 P f x) = (term58 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3459444 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3459448 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3459449 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term3 _89837 _89861 _89862 _89863 P f x) = (term59 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3459448 _89837) (@lem3459447 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3459454 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term2 _89837 _89861 _89862 _89863 x P f) = (term59 _89837 _89861 _89862 _89863 P f x).
Proof. exact (TRANS (@lem3459348 _89837 _89861 _89862 _89863 P f x) (@lem3459449 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3459455 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3459456 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term60 _89837 _89861 _89862 _89863 x P f) = (term61 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3459455) (@lem3459454 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3459458 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term62 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3459016 _83095 p x) (@lem3459015 _83095 p x)). Qed.
Lemma lem3459459 {_89837 : Type'} (p : _89837 -> Prop) (x : _89837) : (term62 _89837 x p) = (p x).
Proof. exact (@lem3459458 _89837 p x). Qed.
Lemma lem3459460 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term63 _89837 _89861 _89862 _89863 x P f) = (term64 _89837 _89861 _89862 _89863 P f x).
Proof. exact (@lem3459459 _89837 (term65 _89837 _89861 _89862 _89863 P f) x). Qed.
Lemma lem3459461 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (a : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term64 _89837 _89861 _89862 _89863 P f a) = (term66 _89837 _89861 _89862 _89863 P a f).
Proof. exact (eq_refl (term64 _89837 _89861 _89862 _89863 P f a)). Qed.
Lemma lem3459462 {_89837 : Type'} (GEN_PVAR_60 : _89837) : (@SETSPEC _89837 GEN_PVAR_60) = (@SETSPEC _89837 GEN_PVAR_60).
Proof. exact (eq_refl (@SETSPEC _89837 GEN_PVAR_60)). Qed.
Lemma lem3459463 {_89837 _89861 _89862 _89863 : Type'} (GEN_PVAR_60 : _89837) (P : type1517 _89861 _89862 _89863) (a : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term67 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f a) = (term68 _89837 _89861 _89862 _89863 GEN_PVAR_60 P a f).
Proof. exact (MK_COMB (@lem3459462 _89837 GEN_PVAR_60) (@lem3459461 _89837 _89861 _89862 _89863 P a f)). Qed.
Lemma lem3459464 {_89837 : Type'} (a : _89837) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem3459465 {_89837 _89861 _89862 _89863 : Type'} (GEN_PVAR_60 : _89837) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (a : _89837) : (term69 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f a) = (term70 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f a).
Proof. exact (MK_COMB (@lem3459463 _89837 _89861 _89862 _89863 GEN_PVAR_60 P a f) (@lem3459464 _89837 a)). Qed.
Lemma lem3459466 {_89837 _89861 _89862 _89863 : Type'} (GEN_PVAR_60 : _89837) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term71 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f) = (term72 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f).
Proof. exact (fun_ext (fun a : _89837 => @lem3459465 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f a)). Qed.
Lemma lem3459467 {_89837 : Type'} : (@ex _89837) = (@ex _89837).
Proof. exact (eq_refl (@ex _89837)). Qed.
Lemma lem3459468 {_89837 _89861 _89862 _89863 : Type'} (GEN_PVAR_60 : _89837) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term73 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f) = (term74 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f).
Proof. exact (MK_COMB (@lem3459467 _89837) (@lem3459466 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f)). Qed.
Lemma lem3459469 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term75 _89837 _89861 _89862 _89863 P f) = (term76 _89837 _89861 _89862 _89863 P f).
Proof. exact (fun_ext (fun GEN_PVAR_60 : _89837 => @lem3459468 _89837 _89861 _89862 _89863 GEN_PVAR_60 P f)). Qed.
Lemma lem3459470 {_89837 : Type'} : (@GSPEC _89837) = (@GSPEC _89837).
Proof. exact (eq_refl (@GSPEC _89837)). Qed.
Lemma lem3459471 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term77 _89837 _89861 _89862 _89863 P f) = (term78 _89837 _89861 _89862 _89863 P f).
Proof. exact (MK_COMB (@lem3459470 _89837) (@lem3459469 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3459472 {_89837 : Type'} (x : _89837) : (@IN _89837 x) = (@IN _89837 x).
Proof. exact (eq_refl (@IN _89837 x)). Qed.
Lemma lem3459473 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term63 _89837 _89861 _89862 _89863 x P f) = (term79 _89837 _89861 _89862 _89863 x P f).
Proof. exact (MK_COMB (@lem3459472 _89837 x) (@lem3459471 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3459474 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3459475 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term80 _89837 _89861 _89862 _89863 x P f) = (term81 _89837 _89861 _89862 _89863 x P f).
Proof. exact (MK_COMB (@lem3459474) (@lem3459473 _89837 _89861 _89862 _89863 x P f)). Qed.
Lemma lem3459476 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term64 _89837 _89861 _89862 _89863 P f x) = (term66 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term64 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3459477 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term63 _89837 _89861 _89862 _89863 x P f) = (term64 _89837 _89861 _89862 _89863 P f x)) = ((term79 _89837 _89861 _89862 _89863 x P f) = (term66 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3459475 _89837 _89861 _89862 _89863 x P f) (@lem3459476 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3459478 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term79 _89837 _89861 _89862 _89863 x P f) = (term66 _89837 _89861 _89862 _89863 P x f).
Proof. exact (EQ_MP (@lem3459477 _89837 _89861 _89862 _89863 P x f) (@lem3459460 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3459493 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term2 _89837 _89861 _89862 _89863 x P f) = (term79 _89837 _89861 _89862 _89863 x P f)) = ((term59 _89837 _89861 _89862 _89863 P f x) = (term66 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3459456 _89837 _89861 _89862 _89863 P f x) (@lem3459478 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3459496 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term82 _89837 _89861 _89862 _89863 P f) = (term83 _89837 _89861 _89862 _89863 P f).
Proof. exact (fun_ext (fun x : _89837 => @lem3459493 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3459497 {_89837 : Type'} : (@all _89837) = (@all _89837).
Proof. exact (eq_refl (@all _89837)). Qed.
Lemma lem3459498 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term84 _89837 _89861 _89862 _89863 P f) = (term85 _89837 _89861 _89862 _89863 P f).
Proof. exact (MK_COMB (@lem3459497 _89837) (@lem3459496 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3459503 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term85 _89837 _89861 _89862 _89863 P f) = (term84 _89837 _89861 _89862 _89863 P f).
Proof. exact (SYM (@lem3459498 _89837 _89861 _89862 _89863 P f)). Qed.
