Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term44 (a0 : Type') := forall y0 : a0, forall y1 : list a0, forall y2 : list a0, (@List.app a0 (@cons a0 y0 y1) y2) = (@cons a0 y0 (@List.app a0 y1 y2)).
Definition term118 := (~ False) -> False.
Definition term87 (a0 : Type') := @COND a0 True (@LAST a0 (@nil a0)).
Definition term58 (a0 : Type') (x0 : a0) (x1 : list a0) := @COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1).
Definition term24 (a0 : Type') := (forall y0 : list a0, (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) -> forall y2 : list a0, (@LAST a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 (@cons a0 y0 y1)) (@LAST a0 y2))).
Definition term158 (a0 : Type') (x0 : list a0) := and ((~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)))).
Definition term74 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)).
Definition term125 (a0 : Type') (x0 : list a0) := fun y0 : a0 => (~ (forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1)))) -> False.
Definition term82 (x0 : Prop) := ~ (~ x0).
Definition term50 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @List.app a0 (@cons a0 x0 x1) x2.
Definition term171 (a0 : Type') (x0 : list a0) := and ((~ (x0 = (@nil a0))) \/ True).
Definition term71 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 (x2 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 x2).
Definition term152 (a0 : Type') (x0 : list a0) := fun y0 : a0 => forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)).
Definition term126 (a0 : Type') (x0 : list a0) := fun y0 : a0 => forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1)).
Definition term179 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : a0, (~ (forall y2 : list a0, (@COND a0 ((y0 = (@nil a0)) /\ (y2 = (@nil a0))) y1 (@COND a0 (y2 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y2))) = (@COND a0 (y2 = (@nil a0)) (@COND a0 (y0 = (@nil a0)) y1 (@LAST a0 y0)) (@LAST a0 y2)))) -> False) x0.
Definition term64 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 ((x1 = (@nil a0)) /\ (x2 = (@nil a0))) x0 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x1) (@LAST a0 x2)).
Definition term90 (a0 : Type') (x0 : list a0) := (((x0 = (@nil a0)) = False) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = True) /\ (((x0 = (@nil a0)) = True) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term48 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a0, (@List.app a0 (@cons a0 x0 x1) y0) = (@cons a0 x0 (@List.app a0 x1 y0)).
Definition term25 (a0 : Type') := imp (((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) (@cons a0 y0 y1))).
Definition term177 (a0 : Type') := fun y0 : list a0 => (~ (y0 = (@nil a0))) \/ (forall y1 : a0, forall y2 : list a0, True).
Definition term141 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term43 (a0 : Type') (x0 : list a0) (x1 : list a0) := (x0 = (@nil a0)) /\ (x1 = (@nil a0)).
Definition term156 (a0 : Type') (x0 : list a0) := ((((x0 = (@nil a0)) = False) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = True) /\ (((x0 = (@nil a0)) = True) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1))))) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = (((~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)))) /\ ((x0 = (@nil a0)) \/ True)).
Definition term172 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, True.
Definition term70 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 (x2 = (@nil a0)) (@LAST a0 (@cons a0 x0 x1)) (@LAST a0 x2).
Definition term3 (a0 : Type') := (fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@nil a0).
Definition term5 (a0 : Type') := and ((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@nil a0)).
Definition term75 (x0 : Prop) := (~ x0) -> False.
Definition term73 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : list a0 => (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)).
Definition term1 (a0 : Type') := (((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) (@cons a0 y0 y1))) -> forall y0 : list a0, (fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) y0.
Definition term18 (a0 : Type') (x0 : a0) := forall y0 : list a0, (forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) -> forall y1 : list a0, (@LAST a0 (@List.app a0 (@cons a0 x0 y0) y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 (@cons a0 x0 y0)) (@LAST a0 y1)).
Definition term0 (a0 : Type') (x0 : type1143 a0) := ((x0 (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (x0 y1) -> x0 (@cons a0 y0 y1))) -> forall y0 : list a0, x0 y0.
Definition term34 (a0 : Type') (x0 : list a0) := @eq a0 (@LAST a0 (@List.app a0 (@nil a0) x0)).
Definition term100 (a0 : Type') (x0 : list a0) := (~ ((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0))))) -> False.
Definition term175 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, True).
Definition term160 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1))).
Definition term148 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @eq a0 (@COND a0 (x2 = (@nil a0)) x0 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x1) (@LAST a0 x2))).
Definition term132 (a0 : Type') := forall y0 : list a0, forall y1 : a0, forall y2 : list a0, (@COND a0 ((y0 = (@nil a0)) /\ (y2 = (@nil a0))) y1 (@COND a0 (y2 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y2))) = (@COND a0 (y2 = (@nil a0)) (@COND a0 (y0 = (@nil a0)) y1 (@LAST a0 y0)) (@LAST a0 y2)).
Definition term131 (a0 : Type') := forall y0 : list a0, forall y1 : a0, (~ (forall y2 : list a0, (@COND a0 ((y0 = (@nil a0)) /\ (y2 = (@nil a0))) y1 (@COND a0 (y2 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y2))) = (@COND a0 (y2 = (@nil a0)) (@COND a0 (y0 = (@nil a0)) y1 (@LAST a0 y0)) (@LAST a0 y2)))) -> False.
Definition term46 (a0 : Type') (x0 : a0) := forall y0 : list a0, forall y1 : list a0, (@List.app a0 (@cons a0 x0 y0) y1) = (@cons a0 x0 (@List.app a0 y0 y1)).
Definition term29 (a0 : Type') := forall y0 : list a0, forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1)).
Definition term54 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 (x1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x1).
Definition term144 (a0 : Type') := forall y0 : a0, True.
Definition term133 (a0 : Type') (x0 : list a0) := False /\ (x0 = (@nil a0)).
Definition term115 (a0 : Type') := (~ ((@LAST a0 (@nil a0)) = (@LAST a0 (@nil a0)))) -> (@LAST a0 (@nil a0)) = (@LAST a0 (@nil a0)).
Definition term164 (a0 : Type') (x0 : list a0) := @COND a0 True (@LAST a0 x0).
Definition term111 (a0 : Type') := (fun y0 : list a0 => ~ ((@LAST a0 y0) = (@LAST a0 (@nil a0)))) (@nil a0).
Definition term116 (x0 : Prop) := (~ x0) -> x0.
Definition term147 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 (x2 = (@nil a0)) x0 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x1) (@LAST a0 x2)).
Definition term85 (a0 : Type') (x0 : list a0) := @COND a0 False (@LAST a0 (@nil a0)) (@LAST a0 x0).
Definition term63 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : a0) := @COND a0 ((x0 = (@nil a0)) /\ (x1 = (@nil a0))) x2.
Definition term19 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) (@cons a0 y0 y1).
Definition term88 (a0 : Type') (x0 : list a0) := @COND a0 True (@LAST a0 (@nil a0)) (@LAST a0 x0).
Definition term129 (a0 : Type') := fun y0 : list a0 => forall y1 : a0, (~ (forall y2 : list a0, (@COND a0 ((y0 = (@nil a0)) /\ (y2 = (@nil a0))) y1 (@COND a0 (y2 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y2))) = (@COND a0 (y2 = (@nil a0)) (@COND a0 (y0 = (@nil a0)) y1 (@LAST a0 y0)) (@LAST a0 y2)))) -> False.
Definition term67 (a0 : Type') (x0 : list a0) := @COND a0 (x0 = (@nil a0)).
Definition term33 (a0 : Type') (x0 : list a0) := @LAST a0 (@List.app a0 (@nil a0) x0).
Definition term57 (a0 : Type') (x0 : a0) (x1 : list a0) := @LAST a0 (@cons a0 x0 x1).
Definition term170 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) \/ True.
Definition term103 (a0 : Type') (x0 : list a0) := ~ ((@LAST a0 x0) = (@LAST a0 (@nil a0))).
Definition term45 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : list a0, forall y2 : list a0, (@List.app a0 (@cons a0 y0 y1) y2) = (@cons a0 y0 (@List.app a0 y1 y2))) x0.
Definition term55 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @LAST a0 (@List.app a0 (@cons a0 x0 x1) x2).
Definition term40 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : list a0, ((@List.app a0 y0 y1) = (@nil a0)) = ((y0 = (@nil a0)) /\ (y1 = (@nil a0)))) x0.
Definition term7 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) x0.
Definition term127 (a0 : Type') (x0 : list a0) := forall y0 : a0, (~ (forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1)))) -> False.
Definition term134 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 False x0 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x1) (@LAST a0 x2)).
Definition term66 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @eq a0 (@COND a0 ((x1 = (@nil a0)) /\ (x2 = (@nil a0))) x0 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x1) (@LAST a0 x2))).
Definition term140 (a0 : Type') := forall y0 : list a0, True.
Definition term95 (a0 : Type') (x0 : list a0) := and ((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term16 (a0 : Type') (x0 : a0) := fun y0 : list a0 => (forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) -> forall y1 : list a0, (@LAST a0 (@List.app a0 (@cons a0 x0 y0) y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 (@cons a0 x0 y0)) (@LAST a0 y1)).
Definition term145 (a0 : Type') (x0 : list a0) := ((x0 = (@nil a0)) = False) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = True.
Definition term28 (a0 : Type') := forall y0 : list a0, (fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) y0.
Definition term36 (a0 : Type') (x0 : list a0) := @COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0).
Definition term105 (a0 : Type') (x0 : list a0) := and (x0 = (@nil a0)).
Definition term137 (a0 : Type') (x0 : a0) (x1 : list a0) := @COND a0 False x0 (@LAST a0 x1).
Definition term162 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 False (@LAST a0 x0) (@LAST a0 x1).
Definition term32 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => (@List.app a0 (@nil a0) y0) = y0) x0.
Definition term106 (a0 : Type') (x0 : list a0) := (~ (~ (x0 = (@nil a0)))) /\ (~ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term97 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0))).
Definition term163 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := ((x2 = (@nil a0)) = False) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True.
Definition term86 (a0 : Type') (x0 : list a0) := ((x0 = (@nil a0)) = False) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = True.
Definition term30 (a0 : Type') := ((forall y0 : list a0, (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) -> forall y2 : list a0, (@LAST a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 (@cons a0 y0 y1)) (@LAST a0 y2)))) -> forall y0 : list a0, forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1)).
Definition term169 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) \/ True) /\ ((x0 = (@nil a0)) \/ True).
Definition term41 (a0 : Type') (x0 : list a0) := forall y0 : list a0, ((@List.app a0 x0 y0) = (@nil a0)) = ((x0 = (@nil a0)) /\ (y0 = (@nil a0))).
Definition term146 (a0 : Type') (x0 : list a0) := True /\ (x0 = (@nil a0)).
Definition term121 (a0 : Type') (x0 : a0) (x1 : list a0) := ((~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False.
Definition term78 (a0 : Type') := ((~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False.
Definition term26 (a0 : Type') := imp ((forall y0 : list a0, (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) -> forall y2 : list a0, (@LAST a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 (@cons a0 y0 y1)) (@LAST a0 y2)))).
Definition term96 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))) /\ True.
Definition term61 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 ((x0 = (@nil a0)) /\ (x1 = (@nil a0))).
Definition term17 (a0 : Type') (x0 : a0) := forall y0 : list a0, ((fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) y0) -> (fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) (@cons a0 x0 y0).
Definition term27 (a0 : Type') := fun y0 : list a0 => (fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) y0.
Definition term120 (a0 : Type') (x0 : a0) (x1 : list a0) := ~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0))).
Definition term77 (a0 : Type') := ~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0))).
Definition term113 (a0 : Type') (x0 : list a0) := @eq Prop ((fun y0 : list a0 => ~ ((@LAST a0 y0) = (@LAST a0 (@nil a0)))) x0).
Definition term98 (a0 : Type') := fun y0 : list a0 => (~ (y0 = (@nil a0))) \/ ((@LAST a0 y0) = (@LAST a0 (@nil a0))).
Definition term37 (a0 : Type') := fun y0 : list a0 => (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)).
Definition term143 (a0 : Type') := fun y0 : a0 => True.
Definition term114 (a0 : Type') (x0 : list a0) := @eq Prop (~ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term174 (a0 : Type') (x0 : list a0) := or (~ (x0 = (@nil a0))).
Definition term9 (a0 : Type') (x0 : list a0) := imp ((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) x0).
Definition term59 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND a0 ((@List.app a0 x1 x2) = (@nil a0)) x0 (@LAST a0 (@List.app a0 x1 x2)).
Definition term31 (a0 : Type') := forall y0 : list a0, (@List.app a0 (@nil a0) y0) = y0.
Definition term2 (a0 : Type') := fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1)).
Definition term10 (a0 : Type') (x0 : list a0) := imp (forall y0 : list a0, (@LAST a0 (@List.app a0 x0 y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y0))).
Definition term101 (a0 : Type') (x0 : list a0) := ~ ((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term110 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => ~ ((@LAST a0 y0) = (@LAST a0 (@nil a0)))) x0.
Definition term20 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, (forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) -> forall y2 : list a0, (@LAST a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 (@cons a0 y0 y1)) (@LAST a0 y2)).
Definition term51 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @cons a0 x0 (@List.app a0 x1 x2).
Definition term149 (a0 : Type') (x0 : a0) (x1 : list a0) := @COND a0 True x0 (@LAST a0 x1).
Definition term168 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := ((((x2 = (@nil a0)) = False) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True) /\ (((x2 = (@nil a0)) = True) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True)) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = (((~ (x2 = (@nil a0))) \/ True) /\ ((x2 = (@nil a0)) \/ True)).
Definition term94 (a0 : Type') (x0 : list a0) := (x0 = (@nil a0)) \/ True.
Definition term124 (a0 : Type') (x0 : a0) (x1 : list a0) := ~ (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))).
Definition term81 (a0 : Type') := ~ (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))).
Definition term173 (a0 : Type') := forall y0 : a0, forall y1 : list a0, True.
Definition term119 (a0 : Type') (x0 : a0) (x1 : list a0) := (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False.
Definition term76 (a0 : Type') := (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False.
Definition term47 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (@List.app a0 (@cons a0 x0 y0) y1) = (@cons a0 x0 (@List.app a0 y0 y1))) x1.
Definition term52 (a0 : Type') (x0 : list a0) (x1 : list a0) := (fun y0 : list a0 => (@LAST a0 (@List.app a0 x0 y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y0))) x1.
Definition term99 (a0 : Type') := forall y0 : list a0, (~ (y0 = (@nil a0))) \/ ((@LAST a0 y0) = (@LAST a0 (@nil a0))).
Definition term42 (a0 : Type') (x0 : list a0) (x1 : list a0) := (fun y0 : list a0 => ((@List.app a0 x0 y0) = (@nil a0)) = ((x0 = (@nil a0)) /\ (y0 = (@nil a0)))) x1.
Definition term23 (a0 : Type') := ((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) (@cons a0 y0 y1)).
Definition term122 (a0 : Type') (x0 : a0) (x1 : list a0) := (((~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False.
Definition term79 (a0 : Type') := (((~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False.
Definition term150 (a0 : Type') (x0 : list a0) (x1 : a0) := fun y0 : list a0 => (@COND a0 (y0 = (@nil a0)) x1 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) x1 (@LAST a0 y0)).
Definition term11 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@cons a0 x0 x1).
Definition term155 (a0 : Type') (x0 : list a0) := (((x0 = (@nil a0)) = False) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = True) /\ (((x0 = (@nil a0)) = True) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)))).
Definition term176 (a0 : Type') (x0 : list a0) := @eq Prop (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))).
Definition term166 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := ((x2 = (@nil a0)) = True) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True.
Definition term102 (a0 : Type') (x0 : list a0) := ~ (~ (x0 = (@nil a0))).
Definition term108 (a0 : Type') (x0 : list a0) := ~ (x0 = (@nil a0)).
Definition term84 (a0 : Type') := @COND a0 False (@LAST a0 (@nil a0)).
Definition term130 (a0 : Type') := fun y0 : list a0 => forall y1 : a0, forall y2 : list a0, (@COND a0 ((y0 = (@nil a0)) /\ (y2 = (@nil a0))) y1 (@COND a0 (y2 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y2))) = (@COND a0 (y2 = (@nil a0)) (@COND a0 (y0 = (@nil a0)) y1 (@LAST a0 y0)) (@LAST a0 y2)).
Definition term109 (a0 : Type') := fun y0 : list a0 => ~ ((@LAST a0 y0) = (@LAST a0 (@nil a0))).
Definition term65 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @eq a0 (@LAST a0 (@List.app a0 (@cons a0 x0 x1) x2)).
Definition term161 (a0 : Type') (x0 : list a0) := @COND a0 False (@LAST a0 x0).
Definition term104 (a0 : Type') (x0 : list a0) := and (~ (~ (x0 = (@nil a0)))).
Definition term13 (a0 : Type') (x0 : a0) (x1 : list a0) := ((fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) x1) -> (fun y0 : list a0 => forall y1 : list a0, (@LAST a0 (@List.app a0 y0 y1)) = (@COND a0 (y1 = (@nil a0)) (@LAST a0 y0) (@LAST a0 y1))) (@cons a0 x0 x1).
Definition term151 (a0 : Type') (x0 : list a0) (x1 : a0) := forall y0 : list a0, (@COND a0 (y0 = (@nil a0)) x1 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) x1 (@LAST a0 y0)).
Definition term38 (a0 : Type') := fun y0 : list a0 => (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)).
Definition term91 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (((x2 = False) -> x0 = x3) /\ ((x2 = True) -> x0 = x1)) -> x0 = (((~ x2) \/ x1) /\ (x2 \/ x3)).
Definition term117 (a0 : Type') := ((@LAST a0 (@nil a0)) = (@LAST a0 (@nil a0))) -> False.
Definition term93 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))) /\ ((x0 = (@nil a0)) \/ True).
Definition term180 (a0 : Type') (x0 : list a0) (x1 : a0) := (fun y0 : a0 => (~ (forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1)))) -> False) x1.
Definition term35 (a0 : Type') (x0 : list a0) := @eq a0 (@LAST a0 x0).
Definition term92 (a0 : Type') (x0 : list a0) := ((((x0 = (@nil a0)) = False) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = True) /\ (((x0 = (@nil a0)) = True) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = ((@LAST a0 x0) = (@LAST a0 (@nil a0))))) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = (((~ (x0 = (@nil a0))) \/ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))) /\ ((x0 = (@nil a0)) \/ True)).
Definition term178 (a0 : Type') := forall y0 : list a0, (~ (y0 = (@nil a0))) \/ (forall y1 : a0, forall y2 : list a0, True).
Definition term167 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := (((x2 = (@nil a0)) = False) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True) /\ (((x2 = (@nil a0)) = True) -> ((@COND a0 (x2 = (@nil a0)) x1 (@COND a0 (x2 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x2))) = (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2))) = True).
Definition term12 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a0, (@LAST a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@cons a0 x0 x1)) (@LAST a0 y0)).
Definition term8 (a0 : Type') (x0 : list a0) := forall y0 : list a0, (@LAST a0 (@List.app a0 x0 y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y0)).
Definition term4 (a0 : Type') := forall y0 : list a0, (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)).
Definition term157 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)))) /\ ((x0 = (@nil a0)) \/ True).
Definition term39 (a0 : Type') := forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)).
Definition term136 (a0 : Type') (x0 : list a0) (x1 : a0) := @COND a0 (x0 = (@nil a0)) x1.
Definition term107 (a0 : Type') (x0 : list a0) := (x0 = (@nil a0)) /\ (~ ((@LAST a0 x0) = (@LAST a0 (@nil a0)))).
Definition term159 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) \/ (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)))) /\ True.
Definition term165 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 True (@LAST a0 x0) (@LAST a0 x1).
Definition term139 (a0 : Type') := fun y0 : list a0 => True.
Definition term89 (a0 : Type') (x0 : list a0) := ((x0 = (@nil a0)) = True) -> ((@LAST a0 x0) = (@COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 x0))) = ((@LAST a0 x0) = (@LAST a0 (@nil a0))).
Definition term123 (a0 : Type') (x0 : a0) (x1 : list a0) := (((~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> ((~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@COND a0 ((x1 = (@nil a0)) /\ (y0 = (@nil a0))) x0 (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) = (@COND a0 (y0 = (@nil a0)) (@COND a0 (x1 = (@nil a0)) x0 (@LAST a0 x1)) (@LAST a0 y0)))) -> False.
Definition term80 (a0 : Type') := (((~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> ((~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False) -> (~ (forall y0 : list a0, (@LAST a0 y0) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0)))) -> False.
Definition term56 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @LAST a0 (@cons a0 x0 (@List.app a0 x1 x2)).
Definition term135 (a0 : Type') (x0 : list a0) (x1 : list a0) := @eq a0 (@COND a0 (x1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 x1)).
Definition term69 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := @COND a0 (x0 = (@nil a0)) (@COND a0 (x2 = (@nil a0)) x1 (@LAST a0 x2)).
Definition term138 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 (x0 = (@nil a0)) (@LAST a0 x1).
Definition term142 (a0 : Type') (x0 : Prop) := forall y0 : list a0, x0.
Definition term49 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := (fun y0 : list a0 => (@List.app a0 (@cons a0 x0 x1) y0) = (@cons a0 x0 (@List.app a0 x1 y0))) x2.
Definition term83 (a0 : Type') (x0 : list a0) := @COND a0 (x0 = (@nil a0)) (@LAST a0 (@nil a0)).
Definition term153 (a0 : Type') (x0 : list a0) := forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1)).
Definition term128 (a0 : Type') (x0 : list a0) := forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1)).
Definition term22 (a0 : Type') := forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) -> forall y2 : list a0, (@LAST a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 (@cons a0 y0 y1)) (@LAST a0 y2)).
Definition term21 (a0 : Type') := forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (@LAST a0 (@List.app a0 y2 y3)) = (@COND a0 (y3 = (@nil a0)) (@LAST a0 y2) (@LAST a0 y3))) (@cons a0 y0 y1).
Definition term68 (a0 : Type') (x0 : list a0) (x1 : a0) (x2 : list a0) := @COND a0 (x0 = (@nil a0)) (@LAST a0 (@cons a0 x1 x2)).
Definition term60 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND a0 ((@List.app a0 x0 x1) = (@nil a0)).
Definition term72 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : list a0 => (@LAST a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@cons a0 x0 x1)) (@LAST a0 y0)).
Definition term6 (a0 : Type') := and (forall y0 : list a0, (@LAST a0 (@List.app a0 (@nil a0) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@nil a0)) (@LAST a0 y0))).
Definition term53 (a0 : Type') (x0 : list a0) (x1 : list a0) := @LAST a0 (@List.app a0 x0 x1).
Definition term14 (a0 : Type') (x0 : a0) (x1 : list a0) := (forall y0 : list a0, (@LAST a0 (@List.app a0 x1 y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 x1) (@LAST a0 y0))) -> forall y0 : list a0, (@LAST a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@COND a0 (y0 = (@nil a0)) (@LAST a0 (@cons a0 x0 x1)) (@LAST a0 y0)).
Definition term112 (a0 : Type') := ~ ((@LAST a0 (@nil a0)) = (@LAST a0 (@nil a0))).
Definition term62 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : a0) := @COND a0 ((@List.app a0 x0 x1) = (@nil a0)) x2.
Definition term154 (a0 : Type') (x0 : list a0) := ((x0 = (@nil a0)) = True) -> (forall y0 : a0, forall y1 : list a0, (@COND a0 ((x0 = (@nil a0)) /\ (y1 = (@nil a0))) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) (@COND a0 (x0 = (@nil a0)) y0 (@LAST a0 x0)) (@LAST a0 y1))) = (forall y0 : a0, forall y1 : list a0, (@COND a0 (y1 = (@nil a0)) y0 (@COND a0 (y1 = (@nil a0)) (@LAST a0 x0) (@LAST a0 y1))) = (@COND a0 (y1 = (@nil a0)) y0 (@LAST a0 y1))).
Definition term15 (a0 : Type') (x0 : a0) := fun y0 : list a0 => ((fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) y0) -> (fun y1 : list a0 => forall y2 : list a0, (@LAST a0 (@List.app a0 y1 y2)) = (@COND a0 (y2 = (@nil a0)) (@LAST a0 y1) (@LAST a0 y2))) (@cons a0 x0 y0).
