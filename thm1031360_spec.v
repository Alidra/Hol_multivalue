Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Axiom lem1031360 : forall {A : Type'} (m : A) (ly : A) (rx : A) (lx : A) (ry : A) (b : A) (a : A) (c : A) (d : A) (p : nat) (y : A) (z : A) (x : A) (q : nat) (r0 : A) (add : A -> A -> A) (r1 : A) (mul : A -> A -> A) (pwr : A -> nat -> A) (h1 : (forall x' : A, forall y' : A, forall z' : A, (add x' (add y' z')) = (add (add x' y') z')) /\ ((forall x' : A, forall y' : A, (add x' y') = (add y' x')) /\ ((forall x' : A, (add r0 x') = x') /\ ((forall x' : A, forall y' : A, forall z' : A, (mul x' (mul y' z')) = (mul (mul x' y') z')) /\ ((forall x' : A, forall y' : A, (mul x' y') = (mul y' x')) /\ ((forall x' : A, (mul r1 x') = x') /\ ((forall x' : A, (mul r0 x') = r0) /\ ((forall x' : A, forall y' : A, forall z' : A, (mul x' (add y' z')) = (add (mul x' y') (mul x' z'))) /\ ((forall x' : A, (pwr x' (NUMERAL 0)) = r1) /\ (forall x' : A, forall n : nat, (pwr x' (S n)) = (mul x' (pwr x' n)))))))))))), ((mul r1 x) = x) /\ (((add (mul a m) (mul b m)) = (mul (add a b) m)) /\ (((add (mul a m) m) = (mul (add a r1) m)) /\ (((add m (mul a m)) = (mul (add a r1) m)) /\ (((add m m) = (mul (add r1 r1) m)) /\ (((mul r0 m) = r0) /\ (((add r0 a) = a) /\ (((add a r0) = a) /\ (((mul a b) = (mul b a)) /\ (((mul (add a b) c) = (add (mul a c) (mul b c))) /\ (((mul r0 a) = r0) /\ (((mul a r0) = r0) /\ (((mul r1 a) = a) /\ (((mul a r1) = a) /\ (((mul (mul lx ly) (mul rx ry)) = (mul (mul lx rx) (mul ly ry))) /\ (((mul (mul lx ly) (mul rx ry)) = (mul lx (mul ly (mul rx ry)))) /\ (((mul (mul lx ly) (mul rx ry)) = (mul rx (mul (mul lx ly) ry))) /\ (((mul (mul lx ly) rx) = (mul (mul lx rx) ly)) /\ (((mul (mul lx ly) rx) = (mul lx (mul ly rx))) /\ (((mul lx rx) = (mul rx lx)) /\ (((mul lx (mul rx ry)) = (mul (mul lx rx) ry)) /\ (((mul lx (mul rx ry)) = (mul rx (mul lx ry))) /\ (((add (add a b) (add c d)) = (add (add a c) (add b d))) /\ (((add (add a b) c) = (add a (add b c))) /\ (((add a (add c d)) = (add c (add a d))) /\ (((add (add a b) c) = (add (add a c) b)) /\ (((add a c) = (add c a)) /\ (((add a (add c d)) = (add (add a c) d)) /\ (((mul (pwr x p) (pwr x q)) = (pwr x (Nat.add p q))) /\ (((mul x (pwr x q)) = (pwr x (S q))) /\ (((mul (pwr x q) x) = (pwr x (S q))) /\ (((mul x x) = (pwr x (NUMERAL (BIT0 (BIT1 0))))) /\ (((pwr (mul x y) q) = (mul (pwr x q) (pwr y q))) /\ (((pwr (pwr x p) q) = (pwr x (Nat.mul p q))) /\ (((pwr x (NUMERAL 0)) = r1) /\ (((pwr x (NUMERAL (BIT1 0))) = x) /\ (((mul x (add y z)) = (add (mul x y) (mul x z))) /\ ((pwr x (S q)) = (mul x (pwr x q))))))))))))))))))))))))))))))))))))))).
