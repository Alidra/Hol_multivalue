require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term34 a0 (x0: El a0) (x1: El (list a0)) ≔ (⇒ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) x1) ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) ((@CONS a0) x0 x1)));
symbol term65 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 x1)));
symbol term52 a0 ≔ (¬ (= (@NIL a0) (@NIL a0)));
symbol term25 a0 ≔ (⇒ (¬ (= (@NIL a0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0)))));
symbol term41 a0 ≔ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) y0 y1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) y0 y1))) (- ((@LENGTH a0) ((@CONS a0) y0 y1)) (NUMERAL (BIT1 _0)))))))));
symbol term71 a0 (x0: El (list a0)) ≔ (- (SUC ((@LENGTH a0) x0)) (NUMERAL (BIT1 _0)));
symbol term12 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (= (- (NUMERAL x0) (NUMERAL y0)) (NUMERAL (- x0 y0)))) x1);
symbol term19 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@LENGTH a0) ((@CONS a0) x0 x1));
symbol term46 a0 ≔ (⇒ (∧ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) (@NIL a0)) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) y1) ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) ((@CONS a0) y0 y1)))))))));
symbol term3 ≔ (∧ (= (- _0 _0) _0) (∧ (∀ (λ y0 : El num, (= (- _0 (BIT0 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- _0 (BIT1 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- (BIT0 y0) _0) (BIT0 y0)))) (∧ (∀ (λ y0 : El num, (= (- (BIT1 y0) _0) (BIT1 y0)))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT0 y1)) (BIT0 (- y0 y1))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT1 y1)) (PRE (BIT0 (- y0 y1)))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT0 y1)) ((@COND num) (<= y1 y0) (BIT1 (- y0 y1)) _0)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT1 y1)) (BIT0 (- y0 y1)))))))))))))));
symbol term66 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@= num) ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 x1))));
symbol term22 a0 ≔ (⇒ (∧ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) (@NIL a0)) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) y1) ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) ((@CONS a0) y0 y1)))))))) (∀ (λ y0 : El (list a0), ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) y0))));
symbol term21 a0 (x0: El (type1143 a0)) ≔ (⇒ (∧ (x0 (@NIL a0)) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (x0 y1) (x0 ((@CONS a0) y0 y1)))))))) (∀ (λ y0 : El (list a0), (x0 y0))));
symbol term17 a0 (x0: El a0) ≔ (∀ (λ y0 : El (list a0), (= ((@LENGTH a0) ((@CONS a0) x0 y0)) (SUC ((@LENGTH a0) y0)))));
symbol term36 a0 (x0: El a0) ≔ (λ y0 : El (list a0), (⇒ ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) y0) ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) ((@CONS a0) x0 y0))));
symbol term20 a0 (x0: El (list a0)) ≔ (SUC ((@LENGTH a0) x0));
symbol term29 a0 (x0: El (list a0)) ≔ (⇒ (¬ (= x0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) x0)) (- ((@LENGTH a0) x0) (NUMERAL (BIT1 _0)))));
symbol term0 (x0: El num) ≔ ((λ y0 : El num, (= (- (SUC y0) (NUMERAL (BIT1 _0))) y0)) x0);
symbol term48 a0 ≔ (λ y0 : El (list a0), ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) y0));
symbol term31 a0 (x0: El (list a0)) ≔ (⇒ (⇒ (¬ (= x0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) x0)) (- ((@LENGTH a0) x0) (NUMERAL (BIT1 _0))))));
symbol term54 a0 ≔ (- ((@LENGTH a0) (@NIL a0)));
symbol term40 a0 ≔ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) y1) ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) ((@CONS a0) y0 y1))))));
symbol term1 (x0: El num) ≔ (- (SUC x0) (NUMERAL (BIT1 _0)));
symbol term33 a0 (x0: El a0) (x1: El (list a0)) ≔ (⇒ (¬ (= ((@CONS a0) x0 x1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 x1))) (- ((@LENGTH a0) ((@CONS a0) x0 x1)) (NUMERAL (BIT1 _0)))));
symbol term28 a0 (x0: El (list a0)) ≔ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) x0);
symbol term70 a0 (x0: El a0) (x1: El (list a0)) ≔ (- ((@LENGTH a0) ((@CONS a0) x0 x1)) (NUMERAL (BIT1 _0)));
symbol term59 ≔ (NUMERAL (- _0 (BIT1 _0)));
symbol term73 a0 (x0: El a0) (x1: El (list a0)) ≔ (⇒ (¬ (= ((@CONS a0) x0 x1) (@NIL a0))) T);
symbol term64 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@TL a0) ((@CONS a0) x0 x1));
symbol term58 ≔ (- (NUMERAL _0) (NUMERAL (BIT1 _0)));
symbol term11 (x0: El num) ≔ (∀ (λ y0 : El num, (= (- (NUMERAL x0) (NUMERAL y0)) (NUMERAL (- x0 y0)))));
symbol term37 a0 (x0: El a0) ≔ (λ y0 : El (list a0), (⇒ (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) x0 y0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 y0))) (- ((@LENGTH a0) ((@CONS a0) x0 y0)) (NUMERAL (BIT1 _0)))))));
symbol term35 a0 (x0: El a0) (x1: El (list a0)) ≔ (⇒ (⇒ (¬ (= x1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) x1)) (- ((@LENGTH a0) x1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) x0 x1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 x1))) (- ((@LENGTH a0) ((@CONS a0) x0 x1)) (NUMERAL (BIT1 _0))))));
symbol term62 a0 ≔ ((@LENGTH a0) ((@TL a0) (@NIL a0)));
symbol term14 (x0: El num) (x1: El num) ≔ (NUMERAL (- x0 x1));
symbol term6 ≔ (∀ (λ y0 : El num, (= (- _0 (BIT1 y0)) _0)));
symbol term38 a0 (x0: El a0) ≔ (∀ (λ y0 : El (list a0), (⇒ ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) y0) ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) ((@CONS a0) x0 y0)))));
symbol term16 a0 (x0: El a0) ≔ ((λ y0 : El a0, (∀ (λ y1 : El (list a0), (= ((@LENGTH a0) ((@CONS a0) y0 y1)) (SUC ((@LENGTH a0) y1)))))) x0);
symbol term9 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (NUMERAL y0) (NUMERAL y1)) (NUMERAL (- y0 y1)))))));
symbol term23 a0 ≔ (λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0))))));
symbol term60 ≔ (- _0 (BIT1 _0));
symbol term26 a0 ≔ (∧ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) (@NIL a0)));
symbol term39 a0 (x0: El a0) ≔ (∀ (λ y0 : El (list a0), (⇒ (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) x0 y0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) x0 y0))) (- ((@LENGTH a0) ((@CONS a0) x0 y0)) (NUMERAL (BIT1 _0))))))));
symbol term18 a0 (x0: El a0) (x1: El (list a0)) ≔ ((λ y0 : El (list a0), (= ((@LENGTH a0) ((@CONS a0) x0 y0)) (SUC ((@LENGTH a0) y0)))) x1);
symbol term27 a0 ≔ (∧ (⇒ (¬ (= (@NIL a0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0))))));
symbol term61 a0 ≔ ((@= num) ((@LENGTH a0) ((@TL a0) (@NIL a0))));
symbol term53 a0 ≔ (⇒ (¬ (= (@NIL a0) (@NIL a0))));
symbol term69 a0 (x0: El (list a0)) ≔ (- (SUC ((@LENGTH a0) x0)));
symbol term51 a0 ≔ (⇒ (∧ (⇒ (¬ (= (@NIL a0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0))))) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) y0 y1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) y0 y1))) (- ((@LENGTH a0) ((@CONS a0) y0 y1)) (NUMERAL (BIT1 _0))))))))))) (∀ (λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0))))))));
symbol term7 (x0: El num) ≔ ((λ y0 : El num, (= (- _0 (BIT1 y0)) _0)) x0);
symbol term74 a0 (x0: El a0) (x1: El (list a0)) ≔ (¬ (= ((@CONS a0) x0 x1) (@NIL a0)));
symbol term55 ≔ (- (NUMERAL _0));
symbol term10 (x0: El num) ≔ ((λ y0 : El num, (∀ (λ y1 : El num, (= (- (NUMERAL y0) (NUMERAL y1)) (NUMERAL (- y0 y1)))))) x0);
symbol term57 a0 ≔ (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0)));
symbol term68 a0 (x0: El a0) (x1: El (list a0)) ≔ (- ((@LENGTH a0) ((@CONS a0) x0 x1)));
symbol term67 a0 (x0: El (list a0)) ≔ ((@= num) ((@LENGTH a0) x0));
symbol term63 a0 ≔ (⇒ F (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (NUMERAL _0)));
symbol term24 a0 ≔ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) (@NIL a0));
symbol term47 a0 ≔ (⇒ (∧ (⇒ (¬ (= (@NIL a0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0))))) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) y0 y1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) y0 y1))) (- ((@LENGTH a0) ((@CONS a0) y0 y1)) (NUMERAL (BIT1 _0))))))))))));
symbol term72 a0 (x0: El a0) (x1: El (list a0)) ≔ (⇒ (¬ (= ((@CONS a0) x0 x1) (@NIL a0))));
symbol term30 a0 (x0: El (list a0)) ≔ (⇒ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) x0));
symbol term5 ≔ (∧ (∀ (λ y0 : El num, (= (- _0 (BIT1 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- (BIT0 y0) _0) (BIT0 y0)))) (∧ (∀ (λ y0 : El num, (= (- (BIT1 y0) _0) (BIT1 y0)))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT0 y1)) (BIT0 (- y0 y1))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT1 y1)) (PRE (BIT0 (- y0 y1)))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT0 y1)) ((@COND num) (<= y1 y0) (BIT1 (- y0 y1)) _0)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT1 y1)) (BIT0 (- y0 y1)))))))))))));
symbol term4 ≔ (∧ (∀ (λ y0 : El num, (= (- _0 (BIT0 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- _0 (BIT1 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- (BIT0 y0) _0) (BIT0 y0)))) (∧ (∀ (λ y0 : El num, (= (- (BIT1 y0) _0) (BIT1 y0)))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT0 y1)) (BIT0 (- y0 y1))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT1 y1)) (PRE (BIT0 (- y0 y1)))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT0 y1)) ((@COND num) (<= y1 y0) (BIT1 (- y0 y1)) _0)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT1 y1)) (BIT0 (- y0 y1))))))))))))));
symbol term13 (x0: El num) (x1: El num) ≔ (- (NUMERAL x0) (NUMERAL x1));
symbol term8 (x0: El num) ≔ (- _0 (BIT1 x0));
symbol term2 ≔ (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (NUMERAL y0) (NUMERAL y1)) (NUMERAL (- y0 y1))))))) (∧ (= (- _0 _0) _0) (∧ (∀ (λ y0 : El num, (= (- _0 (BIT0 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- _0 (BIT1 y0)) _0))) (∧ (∀ (λ y0 : El num, (= (- (BIT0 y0) _0) (BIT0 y0)))) (∧ (∀ (λ y0 : El num, (= (- (BIT1 y0) _0) (BIT1 y0)))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT0 y1)) (BIT0 (- y0 y1))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT0 y0) (BIT1 y1)) (PRE (BIT0 (- y0 y1)))))))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT0 y1)) ((@COND num) (<= y1 y0) (BIT1 (- y0 y1)) _0)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (- (BIT1 y0) (BIT1 y1)) (BIT0 (- y0 y1))))))))))))))));
symbol term49 a0 ≔ (∀ (λ y0 : El (list a0), ((λ y1 : El (list a0), (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0)))))) y0)));
symbol term43 a0 ≔ (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) y0 y1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) y0 y1))) (- ((@LENGTH a0) ((@CONS a0) y0 y1)) (NUMERAL (BIT1 _0))))))))));
symbol term42 a0 ≔ (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) y1) ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) ((@CONS a0) y0 y1)))))));
symbol term15 a0 ≔ (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (= ((@LENGTH a0) ((@CONS a0) y0 y1)) (SUC ((@LENGTH a0) y1)))))));
symbol term32 a0 (x0: El a0) (x1: El (list a0)) ≔ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) ((@CONS a0) x0 x1));
symbol term56 ≔ (NUMERAL (BIT1 _0));
symbol term44 a0 ≔ (∧ ((λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))) (@NIL a0)) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) y1) ((λ y2 : El (list a0), (⇒ (¬ (= y2 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y2)) (- ((@LENGTH a0) y2) (NUMERAL (BIT1 _0)))))) ((@CONS a0) y0 y1))))))));
symbol term45 a0 ≔ (∧ (⇒ (¬ (= (@NIL a0) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) (@NIL a0))) (- ((@LENGTH a0) (@NIL a0)) (NUMERAL (BIT1 _0))))) (∀ (λ y0 : El a0, (∀ (λ y1 : El (list a0), (⇒ (⇒ (¬ (= y1 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y1)) (- ((@LENGTH a0) y1) (NUMERAL (BIT1 _0))))) (⇒ (¬ (= ((@CONS a0) y0 y1) (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) ((@CONS a0) y0 y1))) (- ((@LENGTH a0) ((@CONS a0) y0 y1)) (NUMERAL (BIT1 _0)))))))))));
symbol term50 a0 ≔ (∀ (λ y0 : El (list a0), (⇒ (¬ (= y0 (@NIL a0))) (= ((@LENGTH a0) ((@TL a0) y0)) (- ((@LENGTH a0) y0) (NUMERAL (BIT1 _0)))))));
