Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1402 a0, forall y1 : type560 a0 a1 a2, forall y2 : a2 -> a0, forall y3 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 y0 y1 y2 y3) = ((@admissible a0 a1 a0 Prop a2 y0 (fun y4 : a0 -> a1 => fun y5 : a2 => True) y2 y1) -> @tailadmissible a0 a1 a2 y0 y1 y2 y3).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) (x3 : type558 a0 a1 a2) := (fun y0 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0) x3.
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := forall y0 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 x2 y0) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0).
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := (fun y0 : type1402 a0 => forall y1 : type560 a0 a1 a2, forall y2 : a2 -> a0, forall y3 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 y0 y1 y2 y3) = ((@admissible a0 a1 a0 Prop a2 y0 (fun y4 : a0 -> a1 => fun y5 : a2 => True) y2 y1) -> @tailadmissible a0 a1 a2 y0 y1 y2 y3)) x0.
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := forall y0 : type560 a0 a1 a2, forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 y0 y1 y2) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := (fun y0 : a2 -> a0 => fun y1 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1) x2.
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := fun y0 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0.
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := (fun y0 : type1402 a0 => fun y1 : type560 a0 a1 a2 => fun y2 : a2 -> a0 => fun y3 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 y0 (fun y4 : a0 -> a1 => fun y5 : a2 => True) y2 y1) -> @tailadmissible a0 a1 a2 y0 y1 y2 y3) x0.
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := (fun y0 : a2 -> a0 => forall y1 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 y0 y1) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1)) x2.
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := fun y0 : type560 a0 a1 a2 => fun y1 : a2 -> a0 => fun y2 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2.
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := fun y0 : a2 -> a0 => fun y1 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : type1402 a0 => fun y1 : type560 a0 a1 a2 => fun y2 : a2 -> a0 => fun y3 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 y0 (fun y4 : a0 -> a1 => fun y5 : a2 => True) y2 y1) -> @tailadmissible a0 a1 a2 y0 y1 y2 y3.
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := (fun y0 : type560 a0 a1 a2 => forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 y0 y1 y2) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2)) x1.
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := forall y0 : a2 -> a0, forall y1 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 y0 y1) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) (x3 : type558 a0 a1 a2) := (@admissible a0 a1 a0 Prop a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 x3.
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) (x3 : type558 a0 a1 a2) := (fun y0 : type558 a0 a1 a2 => (@superadmissible a0 a1 a2 x0 x1 x2 y0) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0)) x3.
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := (fun y0 : type560 a0 a1 a2 => fun y1 : a2 -> a0 => fun y2 : type558 a0 a1 a2 => (@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2) x1.
