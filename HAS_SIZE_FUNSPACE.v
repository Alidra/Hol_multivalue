Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import HAS_SIZE_FUNSPACE_term_abbrevs.
Require Import CONJ_ASSOC_spec.
Require Import CONJ_SYM_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXISTS_PAIR_THM_spec.
Require Import EXTENSION_spec.
Require Import FORALL_PAIR_THM_spec.
Require Import FUN_EQ_THM_spec.
Require Import HAS_SIZE_CLAUSES_spec.
Require Import HAS_SIZE_IMAGE_INJ_spec.
Require Import HAS_SIZE_PRODUCT_spec.
Require Import IN_IMAGE_spec.
Require Import IN_INSERT_spec.
Require Import IN_SING_spec.
Require Import LEFT_AND_EXISTS_THM_spec.
Require Import LEFT_IMP_EXISTS_THM_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import NOT_IN_EMPTY_spec.
Require Import PAIR_EQ_spec.
Require Import UNWIND_THM1_spec.
Require Import thm0_spec.
Require Import thm1005477_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm15249_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1820_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm1831_spec.
Require Import thm1832_spec.
Require Import thm1833_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm18964_spec.
Require Import thm18965_spec.
Require Import thm18970_spec.
Require Import thm18971_spec.
Require Import thm19699_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21761_spec.
Require Import thm3184736_spec.
Require Import thm3184739_spec.
Require Import thm3184747_spec.
Require Import thm3184750_spec.
Require Import thm32_spec.
Require Import thm3888988_spec.
Require Import thm3892933_spec.
Require Import thm48805_spec.
Require Import thm48806_spec.
Require Import thm48811_spec.
Require Import thm48812_spec.
Require Import thm48920_spec.
Require Import thm51128_spec.
Require Import thm51159_spec.
Require Import thm7_spec.
Require Import thm75622_spec.
Require Import thm75623_spec.
Require Import thm82_spec.
Require Import thm86199_spec.
Require Import thm912739_spec.
Lemma lem4492059 {A B : Type'} (f : A -> B) : term0 A B f.
Proof. exact (@lem9220 A B f). Qed.
Lemma lem4492060 {A B : Type'} (f : A -> B) : (term0 A B f) = (term1 A B f).
Proof. exact (eq_refl (term0 A B f)). Qed.
Lemma lem4492061 {A B : Type'} (f : A -> B) : term1 A B f.
Proof. exact (EQ_MP (@lem4492060 A B f) (@lem4492059 A B f)). Qed.
Lemma lem4492062 {A B : Type'} (f : A -> B) (g : A -> B) : term2 A B f g.
Proof. exact (@lem4492061 A B f g). Qed.
Lemma lem4492063 {A B : Type'} (f : A -> B) (g : A -> B) : (term2 A B f g) = ((f = g) = (term3 A B f g)).
Proof. exact (eq_refl (term2 A B f g)). Qed.
Lemma lem4492065 (t1 : Prop) : term4 t1.
Proof. exact (@lem539 t1). Qed.
Lemma lem4492066 (t1 : Prop) : (term4 t1) = (term5 t1).
Proof. exact (eq_refl (term4 t1)). Qed.
Lemma lem4492067 (t1 : Prop) : term5 t1.
Proof. exact (EQ_MP (@lem4492066 t1) (@lem4492065 t1)). Qed.
Lemma lem4492068 (t1 : Prop) (t2 : Prop) : term6 t1 t2.
Proof. exact (@lem4492067 t1 t2). Qed.
Lemma lem4492069 (t2 : Prop) (t1 : Prop) : (term6 t1 t2) = ((t1 /\ t2) = (t2 /\ t1)).
Proof. exact (eq_refl (term6 t1 t2)). Qed.
Lemma lem4492088 (t2 : Prop) (t1 : Prop) : (t1 /\ t2) = (t2 /\ t1).
Proof. exact (EQ_MP (@lem4492069 t2 t1) (@lem4492068 t1 t2)). Qed.
Lemma lem4492089 {A : Type'} (P : A -> Prop) (a : A) (x : A) : (term7 A a P x) = (term8 A P a x).
Proof. exact (@lem4492088 (P x) (a = x)). Qed.
Lemma lem4492090 {A : Type'} (P : A -> Prop) (a : A) : (term9 A a P) = (term10 A P a).
Proof. exact (fun_ext (fun x : A => @lem4492089 A P a x)). Qed.
Lemma lem4492091 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4492092 {A : Type'} (P : A -> Prop) (a : A) : (term11 A a P) = (term12 A P a).
Proof. exact (MK_COMB (@lem4492091 A) (@lem4492090 A P a)). Qed.
Lemma lem4492093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492094 {A : Type'} (P : A -> Prop) (a : A) : (term13 A a P) = (term14 A P a).
Proof. exact (MK_COMB (@lem4492093) (@lem4492092 A P a)). Qed.
Lemma lem4492095 {A : Type'} (P : A -> Prop) (a : A) : (P a) = (P a).
Proof. exact (eq_refl (P a)). Qed.
Lemma lem4492096 {A : Type'} (P : A -> Prop) (a : A) : ((term11 A a P) = (P a)) = ((term12 A P a) = (P a)).
Proof. exact (MK_COMB (@lem4492094 A P a) (@lem4492095 A P a)). Qed.
Lemma lem4492097 {A : Type'} (P : A -> Prop) : (term15 A P) = (term16 A P).
Proof. exact (fun_ext (fun a : A => @lem4492096 A P a)). Qed.
Lemma lem4492098 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4492099 {A : Type'} (P : A -> Prop) : (term17 A P) = (term18 A P).
Proof. exact (MK_COMB (@lem4492098 A) (@lem4492097 A P)). Qed.
Lemma lem4492100 {A : Type'} : (term19 A) = (term20 A).
Proof. exact (fun_ext (fun P : A -> Prop => @lem4492099 A P)). Qed.
Lemma lem4492101 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4492102 {A : Type'} : (term21 A) = (term22 A).
Proof. exact (MK_COMB (@lem4492101 A) (@lem4492100 A)). Qed.
Lemma lem4492103 {A : Type'} : term22 A.
Proof. exact (EQ_MP (@lem4492102 A) (@lem4524 A)). Qed.
Lemma lem4492104 {A : Type'} (P : A -> Prop) : term23 A P.
Proof. exact (@lem4492103 A P). Qed.
Lemma lem4492105 {A : Type'} (P : A -> Prop) : (term23 A P) = (term18 A P).
Proof. exact (eq_refl (term23 A P)). Qed.
Lemma lem4492106 {A : Type'} (P : A -> Prop) : term18 A P.
Proof. exact (EQ_MP (@lem4492105 A P) (@lem4492104 A P)). Qed.
Lemma lem4492107 {A : Type'} (P : A -> Prop) (a : A) : term24 A P a.
Proof. exact (@lem4492106 A P a). Qed.
Lemma lem4492108 {A : Type'} (P : A -> Prop) (a : A) : (term24 A P a) = ((term12 A P a) = (P a)).
Proof. exact (eq_refl (term24 A P a)). Qed.
Lemma lem4492110 (t1 : Prop) : term25 t1.
Proof. exact (@lem512 t1). Qed.
Lemma lem4492111 (t1 : Prop) : (term25 t1) = (term26 t1).
Proof. exact (eq_refl (term25 t1)). Qed.
Lemma lem4492112 (t1 : Prop) : term26 t1.
Proof. exact (EQ_MP (@lem4492111 t1) (@lem4492110 t1)). Qed.
Lemma lem4492113 (t1 : Prop) (t2 : Prop) : term27 t1 t2.
Proof. exact (@lem4492112 t1 t2). Qed.
Lemma lem4492114 (t1 : Prop) (t2 : Prop) : (term27 t1 t2) = (term28 t1 t2).
Proof. exact (eq_refl (term27 t1 t2)). Qed.
Lemma lem4492115 (t1 : Prop) (t2 : Prop) : term28 t1 t2.
Proof. exact (EQ_MP (@lem4492114 t1 t2) (@lem4492113 t1 t2)). Qed.
Lemma lem4492116 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term29 t1 t2 t3.
Proof. exact (@lem4492115 t1 t2 t3). Qed.
Lemma lem4492117 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term29 t1 t2 t3) = ((term30 t1 t2 t3) = (term31 t1 t2 t3)).
Proof. exact (eq_refl (term29 t1 t2 t3)). Qed.
Lemma lem4492119 {A B : Type'} (x : A) : term32 A B x.
Proof. exact (@lem47438 A B x). Qed.
Lemma lem4492120 {A B : Type'} (x : A) : (term32 A B x) = (term33 A B x).
Proof. exact (eq_refl (term32 A B x)). Qed.
Lemma lem4492121 {A B : Type'} (x : A) : term33 A B x.
Proof. exact (EQ_MP (@lem4492120 A B x) (@lem4492119 A B x)). Qed.
Lemma lem4492122 {A B : Type'} (x : A) (y : B) : term34 A B x y.
Proof. exact (@lem4492121 A B x y). Qed.
Lemma lem4492123 {A B : Type'} (x : A) (y : B) : (term34 A B x y) = (term35 A B x y).
Proof. exact (eq_refl (term34 A B x y)). Qed.
Lemma lem4492124 {A B : Type'} (x : A) (y : B) : term35 A B x y.
Proof. exact (EQ_MP (@lem4492123 A B x y) (@lem4492122 A B x y)). Qed.
Lemma lem4492125 {A B : Type'} (x : A) (y : B) (a : A) : term36 A B x y a.
Proof. exact (@lem4492124 A B x y a). Qed.
Lemma lem4492126 {A B : Type'} (x : A) (a : A) (y : B) : (term36 A B x y a) = (term37 A B x a y).
Proof. exact (eq_refl (term36 A B x y a)). Qed.
Lemma lem4492127 {A B : Type'} (x : A) (a : A) (y : B) : term37 A B x a y.
Proof. exact (EQ_MP (@lem4492126 A B x a y) (@lem4492125 A B x y a)). Qed.
Lemma lem4492128 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : term38 A B x a y b.
Proof. exact (@lem4492127 A B x a y b). Qed.
Lemma lem4492129 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : (term38 A B x a y b) = (((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b)).
Proof. exact (eq_refl (term38 A B x a y b)). Qed.
Lemma lem4492155 {_83095 : Type'} : term40 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem4492156 {_83095 : Type'} (p : _83095 -> Prop) : term41 _83095 p.
Proof. exact (@lem4492155 _83095 p). Qed.
Lemma lem4492157 {_83095 : Type'} (p : _83095 -> Prop) : (term41 _83095 p) = (term42 _83095 p).
Proof. exact (eq_refl (term41 _83095 p)). Qed.
Lemma lem4492158 {_83095 : Type'} (p : _83095 -> Prop) : term42 _83095 p.
Proof. exact (EQ_MP (@lem4492157 _83095 p) (@lem4492156 _83095 p)). Qed.
Lemma lem4492159 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term43 _83095 p x.
Proof. exact (@lem4492158 _83095 p x). Qed.
Lemma lem4492160 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term43 _83095 p x) = ((term44 _83095 x p) = (p x)).
Proof. exact (eq_refl (term43 _83095 p x)). Qed.
Lemma lem4492162 {_83064 : Type'} : term45 _83064.
Proof. exact (EQ_MP (@lem3184750 _83064) (@lem3184747 _83064)). Qed.
Lemma lem4492163 {_83064 : Type'} (P : type919 _83064) : term46 _83064 P.
Proof. exact (@lem4492162 _83064 P). Qed.
Lemma lem4492164 {_83064 : Type'} (P : type919 _83064) : (term46 _83064 P) = (term47 _83064 P).
Proof. exact (eq_refl (term46 _83064 P)). Qed.
Lemma lem4492165 {_83064 : Type'} (P : type919 _83064) : term47 _83064 P.
Proof. exact (EQ_MP (@lem4492164 _83064 P) (@lem4492163 _83064 P)). Qed.
Lemma lem4492166 {_83064 : Type'} (P : type919 _83064) (x : _83064) : term48 _83064 P x.
Proof. exact (@lem4492165 _83064 P x). Qed.
Lemma lem4492167 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term48 _83064 P x) = ((term49 _83064 x P) = (term50 _83064 P x)).
Proof. exact (eq_refl (term48 _83064 P x)). Qed.
Lemma lem4492169 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : term51 _5106 _5107 P.
Proof. exact (@lem49909 _5106 _5107 P). Qed.
Lemma lem4492170 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term51 _5106 _5107 P) = ((term52 _5106 _5107 P) = (term53 _5106 _5107 P)).
Proof. exact (eq_refl (term51 _5106 _5107 P)). Qed.
Lemma lem4492172 {A B : Type'} (h1 : term54 A B) : term54 A B.
Proof. exact (h1). Qed.
Lemma lem4492173 {A B : Type'} (f : A -> B) (h1 : term54 A B) : term55 A B f.
Proof. exact (@lem4492172 A B h1 f). Qed.
Lemma lem4492174 {A B : Type'} (f : A -> B) : (term55 A B f) = (term56 A B f).
Proof. exact (eq_refl (term55 A B f)). Qed.
Lemma lem4492175 {A B : Type'} (f : A -> B) (h1 : term54 A B) : term56 A B f.
Proof. exact (EQ_MP (@lem4492174 A B f) (@lem4492173 A B f h1)). Qed.
Lemma lem4492176 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term54 A B) : term57 A B f s.
Proof. exact (@lem4492175 A B f h1 s). Qed.
Lemma lem4492177 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term57 A B f s) = (term58 A B f s).
Proof. exact (eq_refl (term57 A B f s)). Qed.
Lemma lem4492178 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term54 A B) : term58 A B f s.
Proof. exact (EQ_MP (@lem4492177 A B f s) (@lem4492176 A B f s h1)). Qed.
Lemma lem4492179 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term54 A B) : term59 A B f s n.
Proof. exact (@lem4492178 A B f s h1 n). Qed.
Lemma lem4492180 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) : (term59 A B f s n) = (term60 A B f s n).
Proof. exact (eq_refl (term59 A B f s n)). Qed.
Lemma lem4492181 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term54 A B) : term60 A B f s n.
Proof. exact (EQ_MP (@lem4492180 A B f s n) (@lem4492179 A B f s n h1)). Qed.
Lemma lem4492182 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term61 A B f s n) : term61 A B f s n.
Proof. exact (h1). Qed.
Lemma lem4492183 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term54 A B) (h2 : term61 A B f s n) : term62 A B f s n.
Proof. exact (@lem4492181 A B f s n h1 (@lem4492182 A B f s n h2)). Qed.
Lemma lem4492184 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term61 A B f s n) : term63 A B f s n.
Proof. exact (fun h0 : term54 A B => @lem4492183 A B f s n h0 h1). Qed.
Lemma lem4492185 {A B : Type'} (h1 : term54 A B) : term54 A B.
Proof. exact (h1). Qed.
Lemma lem4492186 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term54 A B) (h2 : term61 A B f s n) : term62 A B f s n.
Proof. exact (@lem4492184 A B f s n h2 (@lem4492185 A B h1)). Qed.
Lemma lem4492187 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) (h1 : term54 A B) : term60 A B f s n.
Proof. exact (fun h0 : term61 A B f s n => @lem4492186 A B f s n h1 h0). Qed.
Lemma lem4492188 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term54 A B) : term58 A B f s.
Proof. exact (fun n : nat => @lem4492187 A B f s n h1). Qed.
Lemma lem4492189 {A B : Type'} (f : A -> B) (h1 : term54 A B) : term56 A B f.
Proof. exact (fun s : A -> Prop => @lem4492188 A B f s h1). Qed.
Lemma lem4492190 {A B : Type'} (h1 : term54 A B) : term54 A B.
Proof. exact (fun f : A -> B => @lem4492189 A B f h1). Qed.
Lemma lem4492191 {A B : Type'} : term64 A B.
Proof. exact (fun h0 : term54 A B => @lem4492190 A B h0). Qed.
Lemma lem4492192 {A B : Type'} : term54 A B.
Proof. exact (@lem4492191 A B (@lem4004559 A B)). Qed.
Lemma lem4492193 {A B : Type'} (f : A -> B) : term55 A B f.
Proof. exact (@lem4492192 A B f). Qed.
Lemma lem4492194 {A B : Type'} (f : A -> B) : (term55 A B f) = (term56 A B f).
Proof. exact (eq_refl (term55 A B f)). Qed.
Lemma lem4492195 {A B : Type'} (f : A -> B) : term56 A B f.
Proof. exact (EQ_MP (@lem4492194 A B f) (@lem4492193 A B f)). Qed.
Lemma lem4492196 {A B : Type'} (f : A -> B) (s : A -> Prop) : term57 A B f s.
Proof. exact (@lem4492195 A B f s). Qed.
Lemma lem4492197 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term57 A B f s) = (term58 A B f s).
Proof. exact (eq_refl (term57 A B f s)). Qed.
Lemma lem4492198 {A B : Type'} (f : A -> B) (s : A -> Prop) : term58 A B f s.
Proof. exact (EQ_MP (@lem4492197 A B f s) (@lem4492196 A B f s)). Qed.
Lemma lem4492199 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) : term59 A B f s n.
Proof. exact (@lem4492198 A B f s n). Qed.
Lemma lem4492200 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) : (term59 A B f s n) = (term60 A B f s n).
Proof. exact (eq_refl (term59 A B f s n)). Qed.
Lemma lem4492212 (t1 : Prop) : term65 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem4492213 (t1 : Prop) : (term65 t1) = (term66 t1).
Proof. exact (eq_refl (term65 t1)). Qed.
Lemma lem4492214 (t1 : Prop) : term66 t1.
Proof. exact (EQ_MP (@lem4492213 t1) (@lem4492212 t1)). Qed.
Lemma lem4492215 (t1 : Prop) (t2 : Prop) : term67 t1 t2.
Proof. exact (@lem4492214 t1 t2). Qed.
Lemma lem4492216 (t1 : Prop) (t2 : Prop) : (term67 t1 t2) = (term68 t1 t2).
Proof. exact (eq_refl (term67 t1 t2)). Qed.
Lemma lem4492217 (t1 : Prop) (t2 : Prop) : term68 t1 t2.
Proof. exact (EQ_MP (@lem4492216 t1 t2) (@lem4492215 t1 t2)). Qed.
Lemma lem4492218 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term69 t1 t2 t3.
Proof. exact (@lem4492217 t1 t2 t3). Qed.
Lemma lem4492219 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term69 t1 t2 t3) = ((term70 t1 t2 t3) = (term71 t1 t2 t3)).
Proof. exact (eq_refl (term69 t1 t2 t3)). Qed.
Lemma lem4492220 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term70 t1 t2 t3) = (term71 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492219 t1 t2 t3) (@lem4492218 t1 t2 t3)). Qed.
Lemma lem4492221 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term71 t1 t2 t3) = (term70 t1 t2 t3).
Proof. exact (SYM (@lem4492220 t1 t2 t3)). Qed.
Lemma lem4492222 {A B : Type'} (f : A -> B) : term0 A B f.
Proof. exact (@lem9220 A B f). Qed.
Lemma lem4492223 {A B : Type'} (f : A -> B) : (term0 A B f) = (term1 A B f).
Proof. exact (eq_refl (term0 A B f)). Qed.
Lemma lem4492224 {A B : Type'} (f : A -> B) : term1 A B f.
Proof. exact (EQ_MP (@lem4492223 A B f) (@lem4492222 A B f)). Qed.
Lemma lem4492225 {A B : Type'} (f : A -> B) (g : A -> B) : term2 A B f g.
Proof. exact (@lem4492224 A B f g). Qed.
Lemma lem4492226 {A B : Type'} (f : A -> B) (g : A -> B) : (term2 A B f g) = ((f = g) = (term3 A B f g)).
Proof. exact (eq_refl (term2 A B f g)). Qed.
Lemma lem4492228 {A : Type'} (x : A) : term72 A x.
Proof. exact (@lem3205665 A x). Qed.
Lemma lem4492229 {A : Type'} (x : A) : (term72 A x) = (term73 A x).
Proof. exact (eq_refl (term72 A x)). Qed.
Lemma lem4492230 {A : Type'} (x : A) : term73 A x.
Proof. exact (EQ_MP (@lem4492229 A x) (@lem4492228 A x)). Qed.
Lemma lem4492231 {A : Type'} (x : A) (y : A) : term74 A x y.
Proof. exact (@lem4492230 A x y). Qed.
Lemma lem4492232 {A : Type'} (y : A) (x : A) : (term74 A x y) = (term75 A y x).
Proof. exact (eq_refl (term74 A x y)). Qed.
Lemma lem4492233 {A : Type'} (y : A) (x : A) : term75 A y x.
Proof. exact (EQ_MP (@lem4492232 A y x) (@lem4492231 A x y)). Qed.
Lemma lem4492234 {A : Type'} (y : A) (x : A) (s : A -> Prop) : term76 A y x s.
Proof. exact (@lem4492233 A y x s). Qed.
Lemma lem4492235 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term76 A y x s) = ((term77 A x y s) = (term78 A y x s)).
Proof. exact (eq_refl (term76 A y x s)). Qed.
Lemma lem4492237 (t1 : Prop) : term4 t1.
Proof. exact (@lem539 t1). Qed.
Lemma lem4492238 (t1 : Prop) : (term4 t1) = (term5 t1).
Proof. exact (eq_refl (term4 t1)). Qed.
Lemma lem4492239 (t1 : Prop) : term5 t1.
Proof. exact (EQ_MP (@lem4492238 t1) (@lem4492237 t1)). Qed.
Lemma lem4492240 (t1 : Prop) (t2 : Prop) : term6 t1 t2.
Proof. exact (@lem4492239 t1 t2). Qed.
Lemma lem4492241 (t2 : Prop) (t1 : Prop) : (term6 t1 t2) = ((t1 /\ t2) = (t2 /\ t1)).
Proof. exact (eq_refl (term6 t1 t2)). Qed.
Lemma lem4492260 (t2 : Prop) (t1 : Prop) : (t1 /\ t2) = (t2 /\ t1).
Proof. exact (EQ_MP (@lem4492241 t2 t1) (@lem4492240 t1 t2)). Qed.
Lemma lem4492261 {A : Type'} (P : A -> Prop) (a : A) (x : A) : (term7 A a P x) = (term8 A P a x).
Proof. exact (@lem4492260 (P x) (a = x)). Qed.
Lemma lem4492262 {A : Type'} (P : A -> Prop) (a : A) : (term9 A a P) = (term10 A P a).
Proof. exact (fun_ext (fun x : A => @lem4492261 A P a x)). Qed.
Lemma lem4492263 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4492264 {A : Type'} (P : A -> Prop) (a : A) : (term11 A a P) = (term12 A P a).
Proof. exact (MK_COMB (@lem4492263 A) (@lem4492262 A P a)). Qed.
Lemma lem4492265 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492266 {A : Type'} (P : A -> Prop) (a : A) : (term13 A a P) = (term14 A P a).
Proof. exact (MK_COMB (@lem4492265) (@lem4492264 A P a)). Qed.
Lemma lem4492267 {A : Type'} (P : A -> Prop) (a : A) : (P a) = (P a).
Proof. exact (eq_refl (P a)). Qed.
Lemma lem4492268 {A : Type'} (P : A -> Prop) (a : A) : ((term11 A a P) = (P a)) = ((term12 A P a) = (P a)).
Proof. exact (MK_COMB (@lem4492266 A P a) (@lem4492267 A P a)). Qed.
Lemma lem4492269 {A : Type'} (P : A -> Prop) : (term15 A P) = (term16 A P).
Proof. exact (fun_ext (fun a : A => @lem4492268 A P a)). Qed.
Lemma lem4492270 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4492271 {A : Type'} (P : A -> Prop) : (term17 A P) = (term18 A P).
Proof. exact (MK_COMB (@lem4492270 A) (@lem4492269 A P)). Qed.
Lemma lem4492272 {A : Type'} : (term19 A) = (term20 A).
Proof. exact (fun_ext (fun P : A -> Prop => @lem4492271 A P)). Qed.
Lemma lem4492273 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4492274 {A : Type'} : (term21 A) = (term22 A).
Proof. exact (MK_COMB (@lem4492273 A) (@lem4492272 A)). Qed.
Lemma lem4492275 {A : Type'} : term22 A.
Proof. exact (EQ_MP (@lem4492274 A) (@lem4524 A)). Qed.
Lemma lem4492276 {A : Type'} (P : A -> Prop) : term23 A P.
Proof. exact (@lem4492275 A P). Qed.
Lemma lem4492277 {A : Type'} (P : A -> Prop) : (term23 A P) = (term18 A P).
Proof. exact (eq_refl (term23 A P)). Qed.
Lemma lem4492278 {A : Type'} (P : A -> Prop) : term18 A P.
Proof. exact (EQ_MP (@lem4492277 A P) (@lem4492276 A P)). Qed.
Lemma lem4492279 {A : Type'} (P : A -> Prop) (a : A) : term24 A P a.
Proof. exact (@lem4492278 A P a). Qed.
Lemma lem4492280 {A : Type'} (P : A -> Prop) (a : A) : (term24 A P a) = ((term12 A P a) = (P a)).
Proof. exact (eq_refl (term24 A P a)). Qed.
Lemma lem4492282 (t1 : Prop) : term25 t1.
Proof. exact (@lem512 t1). Qed.
Lemma lem4492283 (t1 : Prop) : (term25 t1) = (term26 t1).
Proof. exact (eq_refl (term25 t1)). Qed.
Lemma lem4492284 (t1 : Prop) : term26 t1.
Proof. exact (EQ_MP (@lem4492283 t1) (@lem4492282 t1)). Qed.
Lemma lem4492285 (t1 : Prop) (t2 : Prop) : term27 t1 t2.
Proof. exact (@lem4492284 t1 t2). Qed.
Lemma lem4492286 (t1 : Prop) (t2 : Prop) : (term27 t1 t2) = (term28 t1 t2).
Proof. exact (eq_refl (term27 t1 t2)). Qed.
Lemma lem4492287 (t1 : Prop) (t2 : Prop) : term28 t1 t2.
Proof. exact (EQ_MP (@lem4492286 t1 t2) (@lem4492285 t1 t2)). Qed.
Lemma lem4492288 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term29 t1 t2 t3.
Proof. exact (@lem4492287 t1 t2 t3). Qed.
Lemma lem4492289 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term29 t1 t2 t3) = ((term30 t1 t2 t3) = (term31 t1 t2 t3)).
Proof. exact (eq_refl (term29 t1 t2 t3)). Qed.
Lemma lem4492291 {A B : Type'} (x : A) : term32 A B x.
Proof. exact (@lem47438 A B x). Qed.
Lemma lem4492292 {A B : Type'} (x : A) : (term32 A B x) = (term33 A B x).
Proof. exact (eq_refl (term32 A B x)). Qed.
Lemma lem4492293 {A B : Type'} (x : A) : term33 A B x.
Proof. exact (EQ_MP (@lem4492292 A B x) (@lem4492291 A B x)). Qed.
Lemma lem4492294 {A B : Type'} (x : A) (y : B) : term34 A B x y.
Proof. exact (@lem4492293 A B x y). Qed.
Lemma lem4492295 {A B : Type'} (x : A) (y : B) : (term34 A B x y) = (term35 A B x y).
Proof. exact (eq_refl (term34 A B x y)). Qed.
Lemma lem4492296 {A B : Type'} (x : A) (y : B) : term35 A B x y.
Proof. exact (EQ_MP (@lem4492295 A B x y) (@lem4492294 A B x y)). Qed.
Lemma lem4492297 {A B : Type'} (x : A) (y : B) (a : A) : term36 A B x y a.
Proof. exact (@lem4492296 A B x y a). Qed.
Lemma lem4492298 {A B : Type'} (x : A) (a : A) (y : B) : (term36 A B x y a) = (term37 A B x a y).
Proof. exact (eq_refl (term36 A B x y a)). Qed.
Lemma lem4492299 {A B : Type'} (x : A) (a : A) (y : B) : term37 A B x a y.
Proof. exact (EQ_MP (@lem4492298 A B x a y) (@lem4492297 A B x y a)). Qed.
Lemma lem4492300 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : term38 A B x a y b.
Proof. exact (@lem4492299 A B x a y b). Qed.
Lemma lem4492301 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : (term38 A B x a y b) = (((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b)).
Proof. exact (eq_refl (term38 A B x a y b)). Qed.
Lemma lem4492303 {_5131 _5132 : Type'} (P : type1223 _5131 _5132) : term79 _5131 _5132 P.
Proof. exact (@lem51006 _5131 _5132 P). Qed.
Lemma lem4492304 {_5131 _5132 : Type'} (P : type1223 _5131 _5132) : (term79 _5131 _5132 P) = ((term80 _5131 _5132 P) = (term81 _5131 _5132 P)).
Proof. exact (eq_refl (term79 _5131 _5132 P)). Qed.
Lemma lem4492330 {_83095 : Type'} : term40 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem4492331 {_83095 : Type'} (p : _83095 -> Prop) : term41 _83095 p.
Proof. exact (@lem4492330 _83095 p). Qed.
Lemma lem4492332 {_83095 : Type'} (p : _83095 -> Prop) : (term41 _83095 p) = (term42 _83095 p).
Proof. exact (eq_refl (term41 _83095 p)). Qed.
Lemma lem4492333 {_83095 : Type'} (p : _83095 -> Prop) : term42 _83095 p.
Proof. exact (EQ_MP (@lem4492332 _83095 p) (@lem4492331 _83095 p)). Qed.
Lemma lem4492334 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term43 _83095 p x.
Proof. exact (@lem4492333 _83095 p x). Qed.
Lemma lem4492335 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term43 _83095 p x) = ((term44 _83095 x p) = (p x)).
Proof. exact (eq_refl (term43 _83095 p x)). Qed.
Lemma lem4492337 {_83064 : Type'} : term45 _83064.
Proof. exact (EQ_MP (@lem3184750 _83064) (@lem3184747 _83064)). Qed.
Lemma lem4492338 {_83064 : Type'} (P : type919 _83064) : term46 _83064 P.
Proof. exact (@lem4492337 _83064 P). Qed.
Lemma lem4492339 {_83064 : Type'} (P : type919 _83064) : (term46 _83064 P) = (term47 _83064 P).
Proof. exact (eq_refl (term46 _83064 P)). Qed.
Lemma lem4492340 {_83064 : Type'} (P : type919 _83064) : term47 _83064 P.
Proof. exact (EQ_MP (@lem4492339 _83064 P) (@lem4492338 _83064 P)). Qed.
Lemma lem4492341 {_83064 : Type'} (P : type919 _83064) (x : _83064) : term48 _83064 P x.
Proof. exact (@lem4492340 _83064 P x). Qed.
Lemma lem4492342 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term48 _83064 P x) = ((term49 _83064 x P) = (term50 _83064 P x)).
Proof. exact (eq_refl (term48 _83064 P x)). Qed.
Lemma lem4492347 {A B : Type'} (y : B) : term82 A B y.
Proof. exact (@lem3206070 A B y). Qed.
Lemma lem4492348 {A B : Type'} (y : B) : (term82 A B y) = (term83 A B y).
Proof. exact (eq_refl (term82 A B y)). Qed.
Lemma lem4492349 {A B : Type'} (y : B) : term83 A B y.
Proof. exact (EQ_MP (@lem4492348 A B y) (@lem4492347 A B y)). Qed.
Lemma lem4492350 {A B : Type'} (y : B) (s : A -> Prop) : term84 A B y s.
Proof. exact (@lem4492349 A B y s). Qed.
Lemma lem4492351 {A B : Type'} (y : B) (s : A -> Prop) : (term84 A B y s) = (term85 A B y s).
Proof. exact (eq_refl (term84 A B y s)). Qed.
Lemma lem4492352 {A B : Type'} (y : B) (s : A -> Prop) : term85 A B y s.
Proof. exact (EQ_MP (@lem4492351 A B y s) (@lem4492350 A B y s)). Qed.
Lemma lem4492353 {A B : Type'} (y : B) (s : A -> Prop) (f : A -> B) : term86 A B y s f.
Proof. exact (@lem4492352 A B y s f). Qed.
Lemma lem4492354 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term86 A B y s f) = ((term87 A B y f s) = (term88 A B y f s)).
Proof. exact (eq_refl (term86 A B y s f)). Qed.
Lemma lem4492356 {A : Type'} (s : A -> Prop) : term89 A s.
Proof. exact (@lem3181245 A s). Qed.
Lemma lem4492357 {A : Type'} (s : A -> Prop) : (term89 A s) = (term90 A s).
Proof. exact (eq_refl (term89 A s)). Qed.
Lemma lem4492358 {A : Type'} (s : A -> Prop) : term90 A s.
Proof. exact (EQ_MP (@lem4492357 A s) (@lem4492356 A s)). Qed.
Lemma lem4492359 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term91 A s t.
Proof. exact (@lem4492358 A s t). Qed.
Lemma lem4492360 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term91 A s t) = ((s = t) = (term92 A s t)).
Proof. exact (eq_refl (term91 A s t)). Qed.
Lemma lem4492362 {A : Type'} (P : A -> Prop) : term93 A P.
Proof. exact (@lem5881 A P). Qed.
Lemma lem4492363 {A : Type'} (P : A -> Prop) : (term93 A P) = (term94 A P).
Proof. exact (eq_refl (term93 A P)). Qed.
Lemma lem4492364 {A : Type'} (P : A -> Prop) : term94 A P.
Proof. exact (EQ_MP (@lem4492363 A P) (@lem4492362 A P)). Qed.
Lemma lem4492365 {A : Type'} (P : A -> Prop) (Q : Prop) : term95 A P Q.
Proof. exact (@lem4492364 A P Q). Qed.
Lemma lem4492366 {A : Type'} (P : A -> Prop) (Q : Prop) : (term95 A P Q) = ((term96 A P Q) = (term97 A P Q)).
Proof. exact (eq_refl (term95 A P Q)). Qed.
Lemma lem4492368 {A : Type'} (P : A -> Prop) : term98 A P.
Proof. exact (@lem6644 A P). Qed.
Lemma lem4492369 {A : Type'} (P : A -> Prop) : (term98 A P) = (term99 A P).
Proof. exact (eq_refl (term98 A P)). Qed.
Lemma lem4492370 {A : Type'} (P : A -> Prop) : term99 A P.
Proof. exact (EQ_MP (@lem4492369 A P) (@lem4492368 A P)). Qed.
Lemma lem4492371 {A : Type'} (P : A -> Prop) (Q : Prop) : term100 A P Q.
Proof. exact (@lem4492370 A P Q). Qed.
Lemma lem4492372 {A : Type'} (P : A -> Prop) (Q : Prop) : (term100 A P Q) = ((term101 A P Q) = (term102 A P Q)).
Proof. exact (eq_refl (term100 A P Q)). Qed.
Lemma lem4492374 {A B : Type'} (f : A -> B) : term0 A B f.
Proof. exact (@lem9220 A B f). Qed.
Lemma lem4492375 {A B : Type'} (f : A -> B) : (term0 A B f) = (term1 A B f).
Proof. exact (eq_refl (term0 A B f)). Qed.
Lemma lem4492376 {A B : Type'} (f : A -> B) : term1 A B f.
Proof. exact (EQ_MP (@lem4492375 A B f) (@lem4492374 A B f)). Qed.
Lemma lem4492377 {A B : Type'} (f : A -> B) (g : A -> B) : term2 A B f g.
Proof. exact (@lem4492376 A B f g). Qed.
Lemma lem4492378 {A B : Type'} (f : A -> B) (g : A -> B) : (term2 A B f g) = ((f = g) = (term3 A B f g)).
Proof. exact (eq_refl (term2 A B f g)). Qed.
Lemma lem4492380 {A : Type'} (x : A) : term103 A x.
Proof. exact (@lem3205876 A x). Qed.
Lemma lem4492381 {A : Type'} (x : A) : (term103 A x) = (term104 A x).
Proof. exact (eq_refl (term103 A x)). Qed.
Lemma lem4492382 {A : Type'} (x : A) : term104 A x.
Proof. exact (EQ_MP (@lem4492381 A x) (@lem4492380 A x)). Qed.
Lemma lem4492383 {A : Type'} (x : A) (y : A) : term105 A x y.
Proof. exact (@lem4492382 A x y). Qed.
Lemma lem4492384 {A : Type'} (x : A) (y : A) : (term105 A x y) = ((term106 A x y) = (x = y)).
Proof. exact (eq_refl (term105 A x y)). Qed.
Lemma lem4492410 {_83095 : Type'} : term40 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem4492411 {_83095 : Type'} (p : _83095 -> Prop) : term41 _83095 p.
Proof. exact (@lem4492410 _83095 p). Qed.
Lemma lem4492412 {_83095 : Type'} (p : _83095 -> Prop) : (term41 _83095 p) = (term42 _83095 p).
Proof. exact (eq_refl (term41 _83095 p)). Qed.
Lemma lem4492413 {_83095 : Type'} (p : _83095 -> Prop) : term42 _83095 p.
Proof. exact (EQ_MP (@lem4492412 _83095 p) (@lem4492411 _83095 p)). Qed.
Lemma lem4492414 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term43 _83095 p x.
Proof. exact (@lem4492413 _83095 p x). Qed.
Lemma lem4492415 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term43 _83095 p x) = ((term44 _83095 x p) = (p x)).
Proof. exact (eq_refl (term43 _83095 p x)). Qed.
Lemma lem4492424 {A : Type'} (s : A -> Prop) : term89 A s.
Proof. exact (@lem3181245 A s). Qed.
Lemma lem4492425 {A : Type'} (s : A -> Prop) : (term89 A s) = (term90 A s).
Proof. exact (eq_refl (term89 A s)). Qed.
Lemma lem4492426 {A : Type'} (s : A -> Prop) : term90 A s.
Proof. exact (EQ_MP (@lem4492425 A s) (@lem4492424 A s)). Qed.
Lemma lem4492427 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term91 A s t.
Proof. exact (@lem4492426 A s t). Qed.
Lemma lem4492428 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term91 A s t) = ((s = t) = (term92 A s t)).
Proof. exact (eq_refl (term91 A s t)). Qed.
Lemma lem4492433 (P : nat -> Prop) : term107 P.
Proof. exact (EQ_MP (@lem75623 P) (@lem75622 P)). Qed.
Lemma lem4492434 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term108 A B t d n.
Proof. exact (@lem4492433 (term109 A B t d n)). Qed.
Lemma lem4492435 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term110 A B t d n) = (term111 A B t d n).
Proof. exact (eq_refl (term110 A B t d n)). Qed.
Lemma lem4492436 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492437 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term112 A B t d n) = (term113 A B t d n).
Proof. exact (MK_COMB (@lem4492436) (@lem4492435 A B t d n)). Qed.
Lemma lem4492438 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term114 A B t d n m) = (term115 A B t d n m).
Proof. exact (eq_refl (term114 A B t d n m)). Qed.
Lemma lem4492439 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492440 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term116 A B t d n m) = (term117 A B t d n m).
Proof. exact (MK_COMB (@lem4492439) (@lem4492438 A B t d n m)). Qed.
Lemma lem4492441 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term118 A B t d n m) = (term119 A B t d n m).
Proof. exact (eq_refl (term118 A B t d n m)). Qed.
Lemma lem4492442 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term120 A B t d n m) = (term121 A B t d n m).
Proof. exact (MK_COMB (@lem4492440 A B t d n m) (@lem4492441 A B t d n m)). Qed.
Lemma lem4492443 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term122 A B t d n) = (term123 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4492442 A B t d n m)). Qed.
Lemma lem4492444 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4492445 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term124 A B t d n) = (term125 A B t d n).
Proof. exact (MK_COMB (@lem4492444) (@lem4492443 A B t d n)). Qed.
Lemma lem4492446 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term126 A B t d n) = (term127 A B t d n).
Proof. exact (MK_COMB (@lem4492437 A B t d n) (@lem4492445 A B t d n)). Qed.
Lemma lem4492447 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492448 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term128 A B t d n) = (term129 A B t d n).
Proof. exact (MK_COMB (@lem4492447) (@lem4492446 A B t d n)). Qed.
Lemma lem4492449 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term114 A B t d n m) = (term115 A B t d n m).
Proof. exact (eq_refl (term114 A B t d n m)). Qed.
Lemma lem4492450 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term130 A B t d n) = (term109 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4492449 A B t d n m)). Qed.
Lemma lem4492451 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4492452 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term131 A B t d n) = (term132 A B t d n).
Proof. exact (MK_COMB (@lem4492451) (@lem4492450 A B t d n)). Qed.
Lemma lem4492453 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term108 A B t d n) = (term133 A B t d n).
Proof. exact (MK_COMB (@lem4492448 A B t d n) (@lem4492452 A B t d n)). Qed.
Lemma lem4492454 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term133 A B t d n.
Proof. exact (EQ_MP (@lem4492453 A B t d n) (@lem4492434 A B t d n)). Qed.
Lemma lem4492455 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term115 A B t d n m.
Proof. exact (h1). Qed.
Lemma lem4492465 {_100499 : Type'} (s : _100499 -> Prop) : (term134 _100499 s) = (s = (@EMPTY _100499)).
Proof. exact (proj1 (@lem3887954 _100499 (@el nat) s)). Qed.
Lemma lem4492466 {A : Type'} (s : A -> Prop) : (term134 A s) = (s = (@EMPTY A)).
Proof. exact (@lem4492465 A s). Qed.
Lemma lem4492469 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492470 {A : Type'} (s : A -> Prop) : (term135 A s) = (term136 A s).
Proof. exact (MK_COMB (@lem4492469) (@lem4492466 A s)). Qed.
Lemma lem4492471 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492472 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (n : nat) : (term137 A B s t n) = (term138 A B s t n).
Proof. exact (MK_COMB (@lem4492470 A s) (@lem4492471 B t n)). Qed.
Lemma lem4492475 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492476 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (n : nat) : (term139 A B s t n) = (term140 A B s t n).
Proof. exact (MK_COMB (@lem4492475) (@lem4492472 A B s t n)). Qed.
Lemma lem4492497 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) : (term141 A B t s d n) = (term141 A B t s d n).
Proof. exact (eq_refl (term141 A B t s d n)). Qed.
Lemma lem4492498 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) : (term142 A B t s d n) = (term143 A B t s d n).
Proof. exact (MK_COMB (@lem4492476 A B s t n) (@lem4492497 A B t s d n)). Qed.
Lemma lem4492501 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term144 A B t d n) = (term145 A B t d n).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4492498 A B t s d n)). Qed.
Lemma lem4492502 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4492503 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term111 A B t d n) = (term146 A B t d n).
Proof. exact (MK_COMB (@lem4492502 A) (@lem4492501 A B t d n)). Qed.
Lemma lem4492508 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term146 A B t d n) = (term111 A B t d n).
Proof. exact (SYM (@lem4492503 A B t d n)). Qed.
Lemma lem4492518 {_100499 : Type'} (n : nat) (s : _100499 -> Prop) : (term147 _100499 s n) = (term148 _100499 n s).
Proof. exact (proj2 (@lem3887954 _100499 n s)). Qed.
Lemma lem4492519 {A : Type'} (n : nat) (s : A -> Prop) : (term147 A s n) = (term148 A n s).
Proof. exact (@lem4492518 A n s). Qed.
Lemma lem4492520 {A : Type'} (m : nat) (s : A -> Prop) : (term147 A s m) = (term148 A m s).
Proof. exact (@lem4492519 A m s). Qed.
Lemma lem4492535 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492536 {A : Type'} (m : nat) (s : A -> Prop) : (term149 A s m) = (term150 A m s).
Proof. exact (MK_COMB (@lem4492535) (@lem4492520 A m s)). Qed.
Lemma lem4492537 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492538 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term151 A B s m t n) = (term152 A B m s t n).
Proof. exact (MK_COMB (@lem4492536 A m s) (@lem4492537 B t n)). Qed.
Lemma lem4492541 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492542 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term153 A B s m t n) = (term154 A B m s t n).
Proof. exact (MK_COMB (@lem4492541) (@lem4492538 A B m s t n)). Qed.
Lemma lem4492563 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4492564 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term156 A B t s d n m) = (term157 A B t s d n m).
Proof. exact (MK_COMB (@lem4492542 A B m s t n) (@lem4492563 A B t s d n m)). Qed.
Lemma lem4492567 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term158 A B t d n m) = (term159 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4492564 A B t s d n m)). Qed.
Lemma lem4492568 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4492569 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term119 A B t d n m) = (term160 A B t d n m).
Proof. exact (MK_COMB (@lem4492568 A) (@lem4492567 A B t d n m)). Qed.
Lemma lem4492574 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term160 A B t d n m) = (term119 A B t d n m).
Proof. exact (SYM (@lem4492569 A B t d n m)). Qed.
Lemma lem4492575 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term138 A B s t n) : term138 A B s t n.
Proof. exact (h1). Qed.
Lemma lem4492577 {A : Type'} (s : A -> Prop) (h1 : s = (@EMPTY A)) : s = (@EMPTY A).
Proof. exact (h1). Qed.
Lemma lem4492585 : term161.
Proof. exact (proj1 (@lem86199)). Qed.
Lemma lem4492586 (m : nat) : term162 m.
Proof. exact (@lem4492585 m). Qed.
Lemma lem4492587 (m : nat) : (term162 m) = ((term163 m) = term164).
Proof. exact (eq_refl (term162 m)). Qed.
Lemma lem4492589 {A : Type'} (x : A) : term165 A x.
Proof. exact (@lem3204775 A x). Qed.
Lemma lem4492590 {A : Type'} (x : A) : (term165 A x) = (term166 A x).
Proof. exact (eq_refl (term165 A x)). Qed.
Lemma lem4492591 {A : Type'} (x : A) : term166 A x.
Proof. exact (EQ_MP (@lem4492590 A x) (@lem4492589 A x)). Qed.
Lemma lem4492592 {A : Type'} (x : A) : term167 A x.
Proof. exact (@lem82 (@IN A x (@EMPTY A))). Qed.
Lemma lem4492609 {A : Type'} (s : A -> Prop) (h1 : s = (@EMPTY A)) : s = (@EMPTY A).
Proof. exact (h1). Qed.
Lemma lem4492610 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem4492611 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (@IN A x s) = (@IN A x (@EMPTY A)).
Proof. exact (MK_COMB (@lem4492610 A x) (@lem4492609 A s h1)). Qed.
Lemma lem4492613 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem4492592 A x (@lem4492591 A x)). Qed.
Lemma lem4492614 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem4492613 A x). Qed.
Lemma lem4492615 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (@IN A x s) = False.
Proof. exact (TRANS (@lem4492611 A x s h1) (@lem4492614 A x)). Qed.
Lemma lem4492616 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492617 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term168 A x s) = (imp False).
Proof. exact (MK_COMB (@lem4492616) (@lem4492615 A x s h1)). Qed.
Lemma lem4492618 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term169 A B f x t).
Proof. exact (eq_refl (term169 A B f x t)). Qed.
Lemma lem4492619 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term170 A B s f x t) = (term171 A B f x t).
Proof. exact (MK_COMB (@lem4492617 A x s h1) (@lem4492618 A B f x t)). Qed.
Lemma lem4492621 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4492622 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term171 A B f x t) = True.
Proof. exact (@lem4492621 (term169 A B f x t)). Qed.
Lemma lem4492623 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term170 A B s f x t) = True.
Proof. exact (TRANS (@lem4492619 A B f x t s h1) (@lem4492622 A B f x t)). Qed.
Lemma lem4492624 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term172 A B s f t) = (term173 A).
Proof. exact (fun_ext (fun x : A => @lem4492623 A B f x t s h1)). Qed.
Lemma lem4492625 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4492626 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term174 A B s f t) = (term175 A).
Proof. exact (MK_COMB (@lem4492625 A) (@lem4492624 A B f t s h1)). Qed.
Lemma lem4492628 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4492629 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (@lem4492628 A t). Qed.
Lemma lem4492630 {A : Type'} : (term175 A) = True.
Proof. exact (@lem4492629 A True). Qed.
Lemma lem4492631 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term174 A B s f t) = True.
Proof. exact (TRANS (@lem4492626 A B f t s h1) (@lem4492630 A)). Qed.
Lemma lem4492632 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492633 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term177 A B s f t) = (and True).
Proof. exact (MK_COMB (@lem4492632) (@lem4492631 A B f t s h1)). Qed.
Lemma lem4492641 {A : Type'} (s : A -> Prop) (h1 : s = (@EMPTY A)) : s = (@EMPTY A).
Proof. exact (h1). Qed.
Lemma lem4492642 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem4492643 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (@IN A x s) = (@IN A x (@EMPTY A)).
Proof. exact (MK_COMB (@lem4492642 A x) (@lem4492641 A s h1)). Qed.
Lemma lem4492645 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem4492592 A x (@lem4492591 A x)). Qed.
Lemma lem4492646 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem4492645 A x). Qed.
Lemma lem4492647 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (@IN A x s) = False.
Proof. exact (TRANS (@lem4492643 A x s h1) (@lem4492646 A x)). Qed.
Lemma lem4492648 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4492649 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term178 A x s) = (~ False).
Proof. exact (MK_COMB (@lem4492648) (@lem4492647 A x s h1)). Qed.
Lemma lem4492651 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4492652 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term178 A x s) = True.
Proof. exact (TRANS (@lem4492649 A x s h1) (@lem4492651)). Qed.
Lemma lem4492653 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492654 {A : Type'} (x : A) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term179 A x s) = (imp True).
Proof. exact (MK_COMB (@lem4492653) (@lem4492652 A x s h1)). Qed.
Lemma lem4492657 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((f x) = d).
Proof. exact (eq_refl ((f x) = d)). Qed.
Lemma lem4492658 {A B : Type'} (f : A -> B) (x : A) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term180 A B s f x d) = (term181 A B f x d).
Proof. exact (MK_COMB (@lem4492654 A x s h1) (@lem4492657 A B f x d)). Qed.
Lemma lem4492660 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4492661 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term181 A B f x d) = ((f x) = d).
Proof. exact (@lem4492660 ((f x) = d)). Qed.
Lemma lem4492664 {A B : Type'} (f : A -> B) (x : A) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term180 A B s f x d) = ((f x) = d).
Proof. exact (TRANS (@lem4492658 A B f x d s h1) (@lem4492661 A B f x d)). Qed.
Lemma lem4492665 {A B : Type'} (f : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term182 A B s f d) = (term183 A B f d).
Proof. exact (fun_ext (fun x : A => @lem4492664 A B f x d s h1)). Qed.
Lemma lem4492666 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4492667 {A B : Type'} (f : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term184 A B s f d) = (term185 A B f d).
Proof. exact (MK_COMB (@lem4492666 A) (@lem4492665 A B f d s h1)). Qed.
Lemma lem4492672 {A B : Type'} (t : B -> Prop) (f : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term186 A B t s f d) = (term187 A B f d).
Proof. exact (MK_COMB (@lem4492633 A B f t s h1) (@lem4492667 A B f d s h1)). Qed.
Lemma lem4492674 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4492675 {A B : Type'} (f : A -> B) (d : B) : (term187 A B f d) = (term185 A B f d).
Proof. exact (@lem4492674 (term185 A B f d)). Qed.
Lemma lem4492682 {A B : Type'} (t : B -> Prop) (f : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term186 A B t s f d) = (term185 A B f d).
Proof. exact (TRANS (@lem4492672 A B t f d s h1) (@lem4492675 A B f d)). Qed.
Lemma lem4492683 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4492684 {A B : Type'} (t : B -> Prop) (GEN_PVAR_148 : A -> B) (f : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term188 A B GEN_PVAR_148 t s f d) = (term189 A B GEN_PVAR_148 f d).
Proof. exact (MK_COMB (@lem4492683 A B GEN_PVAR_148) (@lem4492682 A B t f d s h1)). Qed.
Lemma lem4492685 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4492686 {A B : Type'} (t : B -> Prop) (GEN_PVAR_148 : A -> B) (d : B) (f : A -> B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term190 A B GEN_PVAR_148 t s d f) = (term191 A B GEN_PVAR_148 d f).
Proof. exact (MK_COMB (@lem4492684 A B t GEN_PVAR_148 f d s h1) (@lem4492685 A B f)). Qed.
Lemma lem4492687 {A B : Type'} (t : B -> Prop) (GEN_PVAR_148 : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term192 A B GEN_PVAR_148 t s d) = (term193 A B GEN_PVAR_148 d).
Proof. exact (fun_ext (fun f : A -> B => @lem4492686 A B t GEN_PVAR_148 d f s h1)). Qed.
Lemma lem4492688 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4492689 {A B : Type'} (t : B -> Prop) (GEN_PVAR_148 : A -> B) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term194 A B GEN_PVAR_148 t s d) = (term195 A B GEN_PVAR_148 d).
Proof. exact (MK_COMB (@lem4492688 A B) (@lem4492687 A B t GEN_PVAR_148 d s h1)). Qed.
Lemma lem4492694 {A B : Type'} (t : B -> Prop) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term196 A B t s d) = (term197 A B d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4492689 A B t GEN_PVAR_148 d s h1)). Qed.
Lemma lem4492695 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4492696 {A B : Type'} (t : B -> Prop) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term198 A B t s d) = (term199 A B d).
Proof. exact (MK_COMB (@lem4492695 A B) (@lem4492694 A B t d s h1)). Qed.
Lemma lem4492697 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4492698 {A B : Type'} (t : B -> Prop) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term200 A B t s d) = (term201 A B d).
Proof. exact (MK_COMB (@lem4492697 A B) (@lem4492696 A B t d s h1)). Qed.
Lemma lem4492700 (m : nat) : (term163 m) = term164.
Proof. exact (EQ_MP (@lem4492587 m) (@lem4492586 m)). Qed.
Lemma lem4492701 (n : nat) : (term163 n) = term164.
Proof. exact (@lem4492700 n). Qed.
Lemma lem4492702 {A B : Type'} (t : B -> Prop) (n : nat) (d : B) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term141 A B t s d n) = (term202 A B d).
Proof. exact (MK_COMB (@lem4492698 A B t d s h1) (@lem4492701 n)). Qed.
Lemma lem4492703 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (term202 A B d) = (term141 A B t s d n).
Proof. exact (SYM (@lem4492702 A B t n d s h1)). Qed.
Lemma lem4492704 : term203 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4492705 : (term203 = (BIT1 0)) = (term204 = term164).
Proof. exact (@lem1005477 0 (BIT1 0)). Qed.
Lemma lem4492706 : term204 = term164.
Proof. exact (EQ_MP (@lem4492705) (@lem4492704)). Qed.
Lemma lem4492707 : term164 = term204.
Proof. exact (SYM (@lem4492706)). Qed.
Lemma lem4492708 {A B : Type'} (d : B) : (term201 A B d) = (term201 A B d).
Proof. exact (eq_refl (term201 A B d)). Qed.
Lemma lem4492709 {A B : Type'} (d : B) : (term202 A B d) = (term205 A B d).
Proof. exact (MK_COMB (@lem4492708 A B d) (@lem4492707)). Qed.
Lemma lem4492711 {_100499 : Type'} (n : nat) (s : _100499 -> Prop) : (term147 _100499 s n) = (term148 _100499 n s).
Proof. exact (proj2 (@lem3887954 _100499 n s)). Qed.
Lemma lem4492712 {A B : Type'} (n : nat) (s : type572 A B) : (term206 A B s n) = (term207 A B n s).
Proof. exact (@lem4492711 (A -> B) n s). Qed.
Lemma lem4492713 {A B : Type'} (d : B) : (term205 A B d) = (term208 A B d).
Proof. exact (@lem4492712 A B (NUMERAL 0) (term199 A B d)). Qed.
Lemma lem4492714 {A B : Type'} (d : B) : (term202 A B d) = (term208 A B d).
Proof. exact (TRANS (@lem4492709 A B d) (@lem4492713 A B d)). Qed.
Lemma lem4492716 {_100607 : Type'} (P : type686 _100607) : (term209 _100607 P) = (P (@EMPTY _100607)).
Proof. exact (proj1 (@lem3892933 _100607 (@el nat) P)). Qed.
Lemma lem4492717 {A B : Type'} (P : type122 A B) : (term210 A B P) = (P (@EMPTY (A -> B))).
Proof. exact (@lem4492716 (A -> B) P). Qed.
Lemma lem4492718 {A B : Type'} (d : B) (a : A -> B) : (term211 A B d a) = (term212 A B d a).
Proof. exact (@lem4492717 A B (term213 A B d a)). Qed.
Lemma lem4492719 {A B : Type'} (d : B) (a : A -> B) (t : type572 A B) : (term214 A B d a t) = (term215 A B d a t).
Proof. exact (eq_refl (term214 A B d a t)). Qed.
Lemma lem4492720 {A B : Type'} (t : type572 A B) : (term216 A B t) = (term216 A B t).
Proof. exact (eq_refl (term216 A B t)). Qed.
Lemma lem4492721 {A B : Type'} (d : B) (a : A -> B) (t : type572 A B) : (term217 A B d a t) = (term218 A B d a t).
Proof. exact (MK_COMB (@lem4492720 A B t) (@lem4492719 A B d a t)). Qed.
Lemma lem4492722 {A B : Type'} (d : B) (a : A -> B) : (term219 A B d a) = (term220 A B d a).
Proof. exact (fun_ext (fun t : type572 A B => @lem4492721 A B d a t)). Qed.
Lemma lem4492723 {A B : Type'} : (@ex ((A -> B) -> Prop)) = (@ex ((A -> B) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> Prop))). Qed.
Lemma lem4492724 {A B : Type'} (d : B) (a : A -> B) : (term211 A B d a) = (term221 A B d a).
Proof. exact (MK_COMB (@lem4492723 A B) (@lem4492722 A B d a)). Qed.
Lemma lem4492725 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492726 {A B : Type'} (d : B) (a : A -> B) : (term222 A B d a) = (term223 A B d a).
Proof. exact (MK_COMB (@lem4492725) (@lem4492724 A B d a)). Qed.
Lemma lem4492727 {A B : Type'} (d : B) (a : A -> B) : (term212 A B d a) = (term224 A B d a).
Proof. exact (eq_refl (term212 A B d a)). Qed.
Lemma lem4492728 {A B : Type'} (d : B) (a : A -> B) : ((term211 A B d a) = (term212 A B d a)) = ((term221 A B d a) = (term224 A B d a)).
Proof. exact (MK_COMB (@lem4492726 A B d a) (@lem4492727 A B d a)). Qed.
Lemma lem4492729 {A B : Type'} (d : B) (a : A -> B) : (term221 A B d a) = (term224 A B d a).
Proof. exact (EQ_MP (@lem4492728 A B d a) (@lem4492718 A B d a)). Qed.
Lemma lem4492730 {A B : Type'} (d : B) : (term225 A B d) = (term226 A B d).
Proof. exact (fun_ext (fun a : A -> B => @lem4492729 A B d a)). Qed.
Lemma lem4492731 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4492732 {A B : Type'} (d : B) : (term208 A B d) = (term227 A B d).
Proof. exact (MK_COMB (@lem4492731 A B) (@lem4492730 A B d)). Qed.
Lemma lem4492733 {A B : Type'} (d : B) : (term202 A B d) = (term227 A B d).
Proof. exact (TRANS (@lem4492714 A B d) (@lem4492732 A B d)). Qed.
Lemma lem4492735 {_100554 : Type'} (a : _100554) (P : Prop) : (term228 _100554 a P) = P.
Proof. exact (proj1 (@lem3888988 _100554 (@el _100554) a (@el (_100554 -> Prop)) P)). Qed.
Lemma lem4492736 {A B : Type'} (a : A -> B) (P : Prop) : (term229 A B a P) = P.
Proof. exact (@lem4492735 (A -> B) a P). Qed.
Lemma lem4492739 {A B : Type'} (d : B) (a : A -> B) : (term224 A B d a) = ((term199 A B d) = (@INSERT (A -> B) a (@EMPTY (A -> B)))).
Proof. exact (@lem4492736 A B a ((term199 A B d) = (@INSERT (A -> B) a (@EMPTY (A -> B))))). Qed.
Lemma lem4492740 {A B : Type'} (d : B) : (term226 A B d) = (term230 A B d).
Proof. exact (fun_ext (fun a : A -> B => @lem4492739 A B d a)). Qed.
Lemma lem4492741 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4492742 {A B : Type'} (d : B) : (term227 A B d) = (term231 A B d).
Proof. exact (MK_COMB (@lem4492741 A B) (@lem4492740 A B d)). Qed.
Lemma lem4492743 {A B : Type'} (d : B) : (term202 A B d) = (term231 A B d).
Proof. exact (TRANS (@lem4492733 A B d) (@lem4492742 A B d)). Qed.
Lemma lem4492744 {A B : Type'} (d : B) : (term231 A B d) = (term202 A B d).
Proof. exact (SYM (@lem4492743 A B d)). Qed.
Lemma lem4492748 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term92 A s t).
Proof. exact (EQ_MP (@lem4492428 A s t) (@lem4492427 A s t)). Qed.
Lemma lem4492749 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = t) = (term232 A B s t).
Proof. exact (@lem4492748 (A -> B) s t). Qed.
Lemma lem4492750 {A B : Type'} (d : B) : ((term199 A B d) = (term233 A B d)) = (term234 A B d).
Proof. exact (@lem4492749 A B (term199 A B d) (term233 A B d)). Qed.
Lemma lem4492760 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term44 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem4492415 _83095 p x) (@lem4492414 _83095 p x)). Qed.
Lemma lem4492761 {A B : Type'} (p : type572 A B) (x : A -> B) : (term235 A B x p) = (p x).
Proof. exact (@lem4492760 (A -> B) p x). Qed.
Lemma lem4492762 {A B : Type'} (d : B) (x : A -> B) : (term236 A B x d) = (term237 A B d x).
Proof. exact (@lem4492761 A B (term238 A B d) x). Qed.
Lemma lem4492763 {A B : Type'} (f : A -> B) (d : B) : (term237 A B d f) = (term185 A B f d).
Proof. exact (eq_refl (term237 A B d f)). Qed.
Lemma lem4492764 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4492765 {A B : Type'} (GEN_PVAR_148 : A -> B) (f : A -> B) (d : B) : (term239 A B GEN_PVAR_148 d f) = (term189 A B GEN_PVAR_148 f d).
Proof. exact (MK_COMB (@lem4492764 A B GEN_PVAR_148) (@lem4492763 A B f d)). Qed.
Lemma lem4492766 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4492767 {A B : Type'} (GEN_PVAR_148 : A -> B) (d : B) (f : A -> B) : (term240 A B GEN_PVAR_148 d f) = (term191 A B GEN_PVAR_148 d f).
Proof. exact (MK_COMB (@lem4492765 A B GEN_PVAR_148 f d) (@lem4492766 A B f)). Qed.
Lemma lem4492768 {A B : Type'} (GEN_PVAR_148 : A -> B) (d : B) : (term241 A B GEN_PVAR_148 d) = (term193 A B GEN_PVAR_148 d).
Proof. exact (fun_ext (fun f : A -> B => @lem4492767 A B GEN_PVAR_148 d f)). Qed.
Lemma lem4492769 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4492770 {A B : Type'} (GEN_PVAR_148 : A -> B) (d : B) : (term242 A B GEN_PVAR_148 d) = (term195 A B GEN_PVAR_148 d).
Proof. exact (MK_COMB (@lem4492769 A B) (@lem4492768 A B GEN_PVAR_148 d)). Qed.
Lemma lem4492771 {A B : Type'} (d : B) : (term243 A B d) = (term197 A B d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4492770 A B GEN_PVAR_148 d)). Qed.
Lemma lem4492772 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4492773 {A B : Type'} (d : B) : (term244 A B d) = (term199 A B d).
Proof. exact (MK_COMB (@lem4492772 A B) (@lem4492771 A B d)). Qed.
Lemma lem4492774 {A B : Type'} (x : A -> B) : (@IN (A -> B) x) = (@IN (A -> B) x).
Proof. exact (eq_refl (@IN (A -> B) x)). Qed.
Lemma lem4492775 {A B : Type'} (x : A -> B) (d : B) : (term236 A B x d) = (term245 A B x d).
Proof. exact (MK_COMB (@lem4492774 A B x) (@lem4492773 A B d)). Qed.
Lemma lem4492776 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492777 {A B : Type'} (x : A -> B) (d : B) : (term246 A B x d) = (term247 A B x d).
Proof. exact (MK_COMB (@lem4492776) (@lem4492775 A B x d)). Qed.
Lemma lem4492778 {A B : Type'} (x : A -> B) (d : B) : (term237 A B d x) = (term185 A B x d).
Proof. exact (eq_refl (term237 A B d x)). Qed.
Lemma lem4492779 {A B : Type'} (x : A -> B) (d : B) : ((term236 A B x d) = (term237 A B d x)) = ((term245 A B x d) = (term185 A B x d)).
Proof. exact (MK_COMB (@lem4492777 A B x d) (@lem4492778 A B x d)). Qed.
Lemma lem4492780 {A B : Type'} (x : A -> B) (d : B) : (term245 A B x d) = (term185 A B x d).
Proof. exact (EQ_MP (@lem4492779 A B x d) (@lem4492762 A B d x)). Qed.
Lemma lem4492789 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492790 {A B : Type'} (x : A -> B) (d : B) : (term247 A B x d) = (term248 A B x d).
Proof. exact (MK_COMB (@lem4492789) (@lem4492780 A B x d)). Qed.
Lemma lem4492792 {A : Type'} (x : A) (y : A) : (term106 A x y) = (x = y).
Proof. exact (EQ_MP (@lem4492384 A x y) (@lem4492383 A x y)). Qed.
Lemma lem4492793 {A B : Type'} (x : A -> B) (y : A -> B) : (term249 A B x y) = (x = y).
Proof. exact (@lem4492792 (A -> B) x y). Qed.
Lemma lem4492794 {A B : Type'} (x : A -> B) (d : B) : (term250 A B x d) = (x = (term251 A B d)).
Proof. exact (@lem4492793 A B x (term251 A B d)). Qed.
Lemma lem4492799 {A B : Type'} (x : A -> B) (d : B) : ((term245 A B x d) = (term250 A B x d)) = ((term185 A B x d) = (x = (term251 A B d))).
Proof. exact (MK_COMB (@lem4492790 A B x d) (@lem4492794 A B x d)). Qed.
Lemma lem4492804 {A B : Type'} (d : B) : (term252 A B d) = (term253 A B d).
Proof. exact (fun_ext (fun x : A -> B => @lem4492799 A B x d)). Qed.
Lemma lem4492805 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4492806 {A B : Type'} (d : B) : (term234 A B d) = (term254 A B d).
Proof. exact (MK_COMB (@lem4492805 A B) (@lem4492804 A B d)). Qed.
Lemma lem4492811 {A B : Type'} (d : B) : ((term199 A B d) = (term233 A B d)) = (term254 A B d).
Proof. exact (TRANS (@lem4492750 A B d) (@lem4492806 A B d)). Qed.
Lemma lem4492812 {A B : Type'} (d : B) : (term254 A B d) = ((term199 A B d) = (term233 A B d)).
Proof. exact (SYM (@lem4492811 A B d)). Qed.
Lemma lem4492832 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (EQ_MP (@lem4492378 A B f g) (@lem4492377 A B f g)). Qed.
Lemma lem4492833 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (@lem4492832 A B f g). Qed.
Lemma lem4492834 {A B : Type'} (x : A -> B) (d : B) : (x = (term251 A B d)) = (term255 A B x d).
Proof. exact (@lem4492833 A B x (term251 A B d)). Qed.
Lemma lem4492844 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4492845 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4492844 A B f y). Qed.
Lemma lem4492846 {A B : Type'} (d : B) (x : A) : (term257 A B d x) = (term258 A B d x).
Proof. exact (@lem4492845 A B (term251 A B d) x). Qed.
Lemma lem4492847 {A B : Type'} (x : A) (d : B) : (term258 A B d x) = d.
Proof. exact (eq_refl (term258 A B d x)). Qed.
Lemma lem4492848 {A B : Type'} (d : B) : (term259 A B d) = (term251 A B d).
Proof. exact (fun_ext (fun x : A => @lem4492847 A B x d)). Qed.
Lemma lem4492849 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4492850 {A B : Type'} (d : B) (x : A) : (term257 A B d x) = (term258 A B d x).
Proof. exact (MK_COMB (@lem4492848 A B d) (@lem4492849 A x)). Qed.
Lemma lem4492851 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4492852 {A B : Type'} (d : B) (x : A) : (term260 A B d x) = (term261 A B d x).
Proof. exact (MK_COMB (@lem4492851 B) (@lem4492850 A B d x)). Qed.
Lemma lem4492853 {A B : Type'} (x : A) (d : B) : (term258 A B d x) = d.
Proof. exact (eq_refl (term258 A B d x)). Qed.
Lemma lem4492854 {A B : Type'} (x : A) (d : B) : ((term257 A B d x) = (term258 A B d x)) = ((term258 A B d x) = d).
Proof. exact (MK_COMB (@lem4492852 A B d x) (@lem4492853 A B x d)). Qed.
Lemma lem4492855 {A B : Type'} (x : A) (d : B) : (term258 A B d x) = d.
Proof. exact (EQ_MP (@lem4492854 A B x d) (@lem4492846 A B d x)). Qed.
Lemma lem4492856 {A B : Type'} (x : A -> B) (x' : A) : (term262 A B x x') = (term262 A B x x').
Proof. exact (eq_refl (term262 A B x x')). Qed.
Lemma lem4492857 {A B : Type'} (x : A -> B) (x' : A) (d : B) : ((x x') = (term258 A B d x')) = ((x x') = d).
Proof. exact (MK_COMB (@lem4492856 A B x x') (@lem4492855 A B x' d)). Qed.
Lemma lem4492862 {A B : Type'} (x : A -> B) (d : B) : (term263 A B x d) = (term183 A B x d).
Proof. exact (fun_ext (fun x' : A => @lem4492857 A B x x' d)). Qed.
Lemma lem4492863 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4492864 {A B : Type'} (x : A -> B) (d : B) : (term255 A B x d) = (term185 A B x d).
Proof. exact (MK_COMB (@lem4492863 A) (@lem4492862 A B x d)). Qed.
Lemma lem4492869 {A B : Type'} (x : A -> B) (d : B) : (x = (term251 A B d)) = (term185 A B x d).
Proof. exact (TRANS (@lem4492834 A B x d) (@lem4492864 A B x d)). Qed.
Lemma lem4492870 {A B : Type'} (x : A -> B) (d : B) : (term248 A B x d) = (term248 A B x d).
Proof. exact (eq_refl (term248 A B x d)). Qed.
Lemma lem4492871 {A B : Type'} (x : A -> B) (d : B) : ((term185 A B x d) = (x = (term251 A B d))) = ((term185 A B x d) = (term185 A B x d)).
Proof. exact (MK_COMB (@lem4492870 A B x d) (@lem4492869 A B x d)). Qed.
Lemma lem4492873 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem4492874 (x : Prop) : (x = x) = True.
Proof. exact (@lem4492873 Prop x). Qed.
Lemma lem4492875 {A B : Type'} (x : A -> B) (d : B) : ((term185 A B x d) = (term185 A B x d)) = True.
Proof. exact (@lem4492874 (term185 A B x d)). Qed.
Lemma lem4492876 {A B : Type'} (x : A -> B) (d : B) : ((term185 A B x d) = (x = (term251 A B d))) = True.
Proof. exact (TRANS (@lem4492871 A B x d) (@lem4492875 A B x d)). Qed.
Lemma lem4492877 {A B : Type'} (d : B) : (term253 A B d) = (term264 A B).
Proof. exact (fun_ext (fun x : A -> B => @lem4492876 A B x d)). Qed.
Lemma lem4492878 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4492879 {A B : Type'} (d : B) : (term254 A B d) = (term265 A B).
Proof. exact (MK_COMB (@lem4492878 A B) (@lem4492877 A B d)). Qed.
Lemma lem4492881 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4492882 {A B : Type'} (t : Prop) : (term266 A B t) = t.
Proof. exact (@lem4492881 (A -> B) t). Qed.
Lemma lem4492883 {A B : Type'} : (term265 A B) = True.
Proof. exact (@lem4492882 A B True). Qed.
Lemma lem4492884 {A B : Type'} (d : B) : (term254 A B d) = True.
Proof. exact (TRANS (@lem4492879 A B d) (@lem4492883 A B)). Qed.
Lemma lem4492885 {A B : Type'} (d : B) : True = (term254 A B d).
Proof. exact (SYM (@lem4492884 A B d)). Qed.
Lemma lem4492886 {A B : Type'} (d : B) : term254 A B d.
Proof. exact (EQ_MP (@lem4492885 A B d) (@lem0)). Qed.
Lemma lem4492887 {A B : Type'} (d : B) : (term199 A B d) = (term233 A B d).
Proof. exact (EQ_MP (@lem4492812 A B d) (@lem4492886 A B d)). Qed.
Lemma lem4492888 {A B : Type'} (d : B) : term231 A B d.
Proof. exact (ex_intro (term230 A B d) (term251 A B d) (@lem4492887 A B d)). Qed.
Lemma lem4492889 {A B : Type'} (d : B) : term202 A B d.
Proof. exact (EQ_MP (@lem4492744 A B d) (@lem4492888 A B d)). Qed.
Lemma lem4492890 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (s : A -> Prop) (h1 : s = (@EMPTY A)) : term141 A B t s d n.
Proof. exact (EQ_MP (@lem4492703 A B t d n s h1) (@lem4492889 A B d)). Qed.
Lemma lem4492892 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term138 A B s t n) : s = (@EMPTY A).
Proof. exact (proj1 (@lem4492575 A B s t n h1)). Qed.
Lemma lem4492893 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (s : A -> Prop) (h1 : s = (@EMPTY A)) : (s = (@EMPTY A)) = (term141 A B t s d n).
Proof. exact (prop_ext (fun h2 : s = (@EMPTY A) => @lem4492890 A B t d n s h1) (fun h2 : term141 A B t s d n => @lem4492577 A s h1)). Qed.
Lemma lem4492894 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (s : A -> Prop) (h1 : s = (@EMPTY A)) : term141 A B t s d n.
Proof. exact (EQ_MP (@lem4492893 A B t d n s h1) (@lem4492577 A s h1)). Qed.
Lemma lem4492895 {A B : Type'} (d : B) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term138 A B s t n) : (s = (@EMPTY A)) = (term141 A B t s d n).
Proof. exact (prop_ext (fun h2 : s = (@EMPTY A) => @lem4492894 A B t d n s h2) (fun h2 : term141 A B t s d n => @lem4492892 A B s t n h1)). Qed.
Lemma lem4492896 {A B : Type'} (d : B) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term138 A B s t n) : term141 A B t s d n.
Proof. exact (EQ_MP (@lem4492895 A B d s t n h1) (@lem4492892 A B s t n h1)). Qed.
Lemma lem4492897 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) : term143 A B t s d n.
Proof. exact (fun h0 : term138 A B s t n => @lem4492896 A B d s t n h0). Qed.
Lemma lem4492902 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term146 A B t d n.
Proof. exact (fun s : A -> Prop => @lem4492897 A B t s d n). Qed.
Lemma lem4492910 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (EQ_MP (@lem4492366 A P Q) (@lem4492365 A P Q)). Qed.
Lemma lem4492911 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (@lem4492910 A P Q). Qed.
Lemma lem4492912 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term267 A B m s t n) = (term268 A B m s t n).
Proof. exact (@lem4492911 A (term269 A m s) (@HAS_SIZE B t n)). Qed.
Lemma lem4492913 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term270 A m s a) = (term271 A m s a).
Proof. exact (eq_refl (term270 A m s a)). Qed.
Lemma lem4492914 {A : Type'} (m : nat) (s : A -> Prop) : (term272 A m s) = (term269 A m s).
Proof. exact (fun_ext (fun a : A => @lem4492913 A m s a)). Qed.
Lemma lem4492915 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4492916 {A : Type'} (m : nat) (s : A -> Prop) : (term273 A m s) = (term148 A m s).
Proof. exact (MK_COMB (@lem4492915 A) (@lem4492914 A m s)). Qed.
Lemma lem4492917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492918 {A : Type'} (m : nat) (s : A -> Prop) : (term274 A m s) = (term150 A m s).
Proof. exact (MK_COMB (@lem4492917) (@lem4492916 A m s)). Qed.
Lemma lem4492919 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492920 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term267 A B m s t n) = (term152 A B m s t n).
Proof. exact (MK_COMB (@lem4492918 A m s) (@lem4492919 B t n)). Qed.
Lemma lem4492921 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492922 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term275 A B m s t n) = (term276 A B m s t n).
Proof. exact (MK_COMB (@lem4492921) (@lem4492920 A B m s t n)). Qed.
Lemma lem4492923 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term270 A m s a) = (term271 A m s a).
Proof. exact (eq_refl (term270 A m s a)). Qed.
Lemma lem4492924 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492925 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term277 A m s a) = (term278 A m s a).
Proof. exact (MK_COMB (@lem4492924) (@lem4492923 A m s a)). Qed.
Lemma lem4492926 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492927 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term279 A B m s a t n) = (term280 A B m s a t n).
Proof. exact (MK_COMB (@lem4492925 A m s a) (@lem4492926 B t n)). Qed.
Lemma lem4492928 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term281 A B m s t n) = (term282 A B m s t n).
Proof. exact (fun_ext (fun a : A => @lem4492927 A B m s a t n)). Qed.
Lemma lem4492929 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4492930 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term268 A B m s t n) = (term283 A B m s t n).
Proof. exact (MK_COMB (@lem4492929 A) (@lem4492928 A B m s t n)). Qed.
Lemma lem4492931 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : ((term267 A B m s t n) = (term268 A B m s t n)) = ((term152 A B m s t n) = (term283 A B m s t n)).
Proof. exact (MK_COMB (@lem4492922 A B m s t n) (@lem4492930 A B m s t n)). Qed.
Lemma lem4492932 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term152 A B m s t n) = (term283 A B m s t n).
Proof. exact (EQ_MP (@lem4492931 A B m s t n) (@lem4492912 A B m s t n)). Qed.
Lemma lem4492938 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (EQ_MP (@lem4492366 A P Q) (@lem4492365 A P Q)). Qed.
Lemma lem4492939 {A : Type'} (P : type686 A) (Q : Prop) : (term284 A P Q) = (term285 A P Q).
Proof. exact (@lem4492938 (A -> Prop) P Q). Qed.
Lemma lem4492940 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term286 A B m s a t n) = (term287 A B m s a t n).
Proof. exact (@lem4492939 A (term288 A m s a) (@HAS_SIZE B t n)). Qed.
Lemma lem4492941 {A : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) : (term289 A m s a t) = (term290 A m s a t).
Proof. exact (eq_refl (term289 A m s a t)). Qed.
Lemma lem4492942 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term291 A m s a) = (term288 A m s a).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4492941 A m s a t)). Qed.
Lemma lem4492943 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4492944 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term292 A m s a) = (term271 A m s a).
Proof. exact (MK_COMB (@lem4492943 A) (@lem4492942 A m s a)). Qed.
Lemma lem4492945 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492946 {A : Type'} (m : nat) (s : A -> Prop) (a : A) : (term293 A m s a) = (term278 A m s a).
Proof. exact (MK_COMB (@lem4492945) (@lem4492944 A m s a)). Qed.
Lemma lem4492947 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492948 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term286 A B m s a t n) = (term280 A B m s a t n).
Proof. exact (MK_COMB (@lem4492946 A m s a) (@lem4492947 B t n)). Qed.
Lemma lem4492949 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4492950 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term294 A B m s a t n) = (term295 A B m s a t n).
Proof. exact (MK_COMB (@lem4492949) (@lem4492948 A B m s a t n)). Qed.
Lemma lem4492951 {A : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) : (term289 A m s a t) = (term290 A m s a t).
Proof. exact (eq_refl (term289 A m s a t)). Qed.
Lemma lem4492952 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4492953 {A : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) : (term296 A m s a t) = (term297 A m s a t).
Proof. exact (MK_COMB (@lem4492952) (@lem4492951 A m s a t)). Qed.
Lemma lem4492954 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@HAS_SIZE B t n).
Proof. exact (eq_refl (@HAS_SIZE B t n)). Qed.
Lemma lem4492955 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) (t' : B -> Prop) (n : nat) : (term298 A B m s a t t' n) = (term299 A B m s a t t' n).
Proof. exact (MK_COMB (@lem4492953 A m s a t) (@lem4492954 B t' n)). Qed.
Lemma lem4492956 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term300 A B m s a t n) = (term301 A B m s a t n).
Proof. exact (fun_ext (fun t' : A -> Prop => @lem4492955 A B m s a t' t n)). Qed.
Lemma lem4492957 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4492958 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term287 A B m s a t n) = (term302 A B m s a t n).
Proof. exact (MK_COMB (@lem4492957 A) (@lem4492956 A B m s a t n)). Qed.
Lemma lem4492959 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : ((term286 A B m s a t n) = (term287 A B m s a t n)) = ((term280 A B m s a t n) = (term302 A B m s a t n)).
Proof. exact (MK_COMB (@lem4492950 A B m s a t n) (@lem4492958 A B m s a t n)). Qed.
Lemma lem4492960 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term280 A B m s a t n) = (term302 A B m s a t n).
Proof. exact (EQ_MP (@lem4492959 A B m s a t n) (@lem4492940 A B m s a t n)). Qed.
Lemma lem4492973 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term282 A B m s t n) = (term303 A B m s t n).
Proof. exact (fun_ext (fun a : A => @lem4492960 A B m s a t n)). Qed.
Lemma lem4492974 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4492975 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term283 A B m s t n) = (term304 A B m s t n).
Proof. exact (MK_COMB (@lem4492974 A) (@lem4492973 A B m s t n)). Qed.
Lemma lem4492980 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term152 A B m s t n) = (term304 A B m s t n).
Proof. exact (TRANS (@lem4492932 A B m s t n) (@lem4492975 A B m s t n)). Qed.
Lemma lem4492981 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4492982 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term154 A B m s t n) = (term305 A B m s t n).
Proof. exact (MK_COMB (@lem4492981) (@lem4492980 A B m s t n)). Qed.
Lemma lem4493003 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4493004 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term157 A B t s d n m) = (term306 A B t s d n m).
Proof. exact (MK_COMB (@lem4492982 A B m s t n) (@lem4493003 A B t s d n m)). Qed.
Lemma lem4493006 {A : Type'} (P : A -> Prop) (Q : Prop) : (term101 A P Q) = (term102 A P Q).
Proof. exact (EQ_MP (@lem4492372 A P Q) (@lem4492371 A P Q)). Qed.
Lemma lem4493007 {A : Type'} (P : A -> Prop) (Q : Prop) : (term101 A P Q) = (term102 A P Q).
Proof. exact (@lem4493006 A P Q). Qed.
Lemma lem4493008 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term307 A B t s d n m) = (term308 A B t s d n m).
Proof. exact (@lem4493007 A (term303 A B m s t n) (term155 A B t s d n m)). Qed.
Lemma lem4493009 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term309 A B m s t n a) = (term302 A B m s a t n).
Proof. exact (eq_refl (term309 A B m s t n a)). Qed.
Lemma lem4493010 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term310 A B m s t n) = (term303 A B m s t n).
Proof. exact (fun_ext (fun a : A => @lem4493009 A B m s a t n)). Qed.
Lemma lem4493011 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4493012 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term311 A B m s t n) = (term304 A B m s t n).
Proof. exact (MK_COMB (@lem4493011 A) (@lem4493010 A B m s t n)). Qed.
Lemma lem4493013 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493014 {A B : Type'} (m : nat) (s : A -> Prop) (t : B -> Prop) (n : nat) : (term312 A B m s t n) = (term305 A B m s t n).
Proof. exact (MK_COMB (@lem4493013) (@lem4493012 A B m s t n)). Qed.
Lemma lem4493015 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4493016 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term307 A B t s d n m) = (term306 A B t s d n m).
Proof. exact (MK_COMB (@lem4493014 A B m s t n) (@lem4493015 A B t s d n m)). Qed.
Lemma lem4493017 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493018 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term313 A B t s d n m) = (term314 A B t s d n m).
Proof. exact (MK_COMB (@lem4493017) (@lem4493016 A B t s d n m)). Qed.
Lemma lem4493019 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term309 A B m s t n a) = (term302 A B m s a t n).
Proof. exact (eq_refl (term309 A B m s t n a)). Qed.
Lemma lem4493020 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493021 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term315 A B m s t n a) = (term316 A B m s a t n).
Proof. exact (MK_COMB (@lem4493020) (@lem4493019 A B m s a t n)). Qed.
Lemma lem4493022 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4493023 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term317 A B a t s d n m) = (term318 A B a t s d n m).
Proof. exact (MK_COMB (@lem4493021 A B m s a t n) (@lem4493022 A B t s d n m)). Qed.
Lemma lem4493024 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term319 A B t s d n m) = (term320 A B t s d n m).
Proof. exact (fun_ext (fun a : A => @lem4493023 A B a t s d n m)). Qed.
Lemma lem4493025 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4493026 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term308 A B t s d n m) = (term321 A B t s d n m).
Proof. exact (MK_COMB (@lem4493025 A) (@lem4493024 A B t s d n m)). Qed.
Lemma lem4493027 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : ((term307 A B t s d n m) = (term308 A B t s d n m)) = ((term306 A B t s d n m) = (term321 A B t s d n m)).
Proof. exact (MK_COMB (@lem4493018 A B t s d n m) (@lem4493026 A B t s d n m)). Qed.
Lemma lem4493028 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term306 A B t s d n m) = (term321 A B t s d n m).
Proof. exact (EQ_MP (@lem4493027 A B t s d n m) (@lem4493008 A B t s d n m)). Qed.
Lemma lem4493034 {A : Type'} (P : A -> Prop) (Q : Prop) : (term101 A P Q) = (term102 A P Q).
Proof. exact (EQ_MP (@lem4492372 A P Q) (@lem4492371 A P Q)). Qed.
Lemma lem4493035 {A : Type'} (P : type686 A) (Q : Prop) : (term322 A P Q) = (term323 A P Q).
Proof. exact (@lem4493034 (A -> Prop) P Q). Qed.
Lemma lem4493036 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term324 A B a t s d n m) = (term325 A B a t s d n m).
Proof. exact (@lem4493035 A (term301 A B m s a t n) (term155 A B t s d n m)). Qed.
Lemma lem4493037 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) (t' : B -> Prop) (n : nat) : (term326 A B m s a t' n t) = (term299 A B m s a t t' n).
Proof. exact (eq_refl (term326 A B m s a t' n t)). Qed.
Lemma lem4493038 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term327 A B m s a t n) = (term301 A B m s a t n).
Proof. exact (fun_ext (fun t' : A -> Prop => @lem4493037 A B m s a t' t n)). Qed.
Lemma lem4493039 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4493040 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term328 A B m s a t n) = (term302 A B m s a t n).
Proof. exact (MK_COMB (@lem4493039 A) (@lem4493038 A B m s a t n)). Qed.
Lemma lem4493041 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493042 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : B -> Prop) (n : nat) : (term329 A B m s a t n) = (term316 A B m s a t n).
Proof. exact (MK_COMB (@lem4493041) (@lem4493040 A B m s a t n)). Qed.
Lemma lem4493043 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4493044 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term324 A B a t s d n m) = (term318 A B a t s d n m).
Proof. exact (MK_COMB (@lem4493042 A B m s a t n) (@lem4493043 A B t s d n m)). Qed.
Lemma lem4493045 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493046 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term330 A B a t s d n m) = (term331 A B a t s d n m).
Proof. exact (MK_COMB (@lem4493045) (@lem4493044 A B a t s d n m)). Qed.
Lemma lem4493047 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) (t' : B -> Prop) (n : nat) : (term326 A B m s a t' n t) = (term299 A B m s a t t' n).
Proof. exact (eq_refl (term326 A B m s a t' n t)). Qed.
Lemma lem4493048 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493049 {A B : Type'} (m : nat) (s : A -> Prop) (a : A) (t : A -> Prop) (t' : B -> Prop) (n : nat) : (term332 A B m s a t' n t) = (term333 A B m s a t t' n).
Proof. exact (MK_COMB (@lem4493048) (@lem4493047 A B m s a t t' n)). Qed.
Lemma lem4493050 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term155 A B t s d n m) = (term155 A B t s d n m).
Proof. exact (eq_refl (term155 A B t s d n m)). Qed.
Lemma lem4493051 {A B : Type'} (a : A) (t : A -> Prop) (t' : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term334 A B a t t' s d n m) = (term335 A B a t t' s d n m).
Proof. exact (MK_COMB (@lem4493049 A B m s a t t' n) (@lem4493050 A B t' s d n m)). Qed.
Lemma lem4493052 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term336 A B a t s d n m) = (term337 A B a t s d n m).
Proof. exact (fun_ext (fun t' : A -> Prop => @lem4493051 A B a t' t s d n m)). Qed.
Lemma lem4493053 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4493054 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term325 A B a t s d n m) = (term338 A B a t s d n m).
Proof. exact (MK_COMB (@lem4493053 A) (@lem4493052 A B a t s d n m)). Qed.
Lemma lem4493055 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : ((term324 A B a t s d n m) = (term325 A B a t s d n m)) = ((term318 A B a t s d n m) = (term338 A B a t s d n m)).
Proof. exact (MK_COMB (@lem4493046 A B a t s d n m) (@lem4493054 A B a t s d n m)). Qed.
Lemma lem4493056 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term318 A B a t s d n m) = (term338 A B a t s d n m).
Proof. exact (EQ_MP (@lem4493055 A B a t s d n m) (@lem4493036 A B a t s d n m)). Qed.
Lemma lem4493091 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term320 A B t s d n m) = (term339 A B t s d n m).
Proof. exact (fun_ext (fun a : A => @lem4493056 A B a t s d n m)). Qed.
Lemma lem4493092 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4493093 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term321 A B t s d n m) = (term340 A B t s d n m).
Proof. exact (MK_COMB (@lem4493092 A) (@lem4493091 A B t s d n m)). Qed.
Lemma lem4493098 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term306 A B t s d n m) = (term340 A B t s d n m).
Proof. exact (TRANS (@lem4493028 A B t s d n m) (@lem4493093 A B t s d n m)). Qed.
Lemma lem4493099 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term157 A B t s d n m) = (term340 A B t s d n m).
Proof. exact (TRANS (@lem4493004 A B t s d n m) (@lem4493098 A B t s d n m)). Qed.
Lemma lem4493100 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term159 A B t d n m) = (term341 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4493099 A B t s d n m)). Qed.
Lemma lem4493101 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4493102 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term160 A B t d n m) = (term342 A B t d n m).
Proof. exact (MK_COMB (@lem4493101 A) (@lem4493100 A B t d n m)). Qed.
Lemma lem4493107 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term342 A B t d n m) = (term160 A B t d n m).
Proof. exact (SYM (@lem4493102 A B t d n m)). Qed.
Lemma lem4493108 {A B : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term299 A B m s0 a s t n) : term299 A B m s0 a s t n.
Proof. exact (h1). Qed.
Lemma lem4493109 {B : Type'} (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE B t n) : @HAS_SIZE B t n.
Proof. exact (h1). Qed.
Lemma lem4493110 {A : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term290 A m s0 a s) : term290 A m s0 a s.
Proof. exact (h1). Qed.
Lemma lem4493111 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term343 A s0 a s) : term343 A s0 a s.
Proof. exact (h1). Qed.
Lemma lem4493112 {A : Type'} (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : @HAS_SIZE A s m.
Proof. exact (h1). Qed.
Lemma lem4493113 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : s0 = (@INSERT A a s).
Proof. exact (h1). Qed.
Lemma lem4493114 {A : Type'} (a : A) (s : A -> Prop) (h1 : term178 A a s) : term178 A a s.
Proof. exact (h1). Qed.
Lemma lem4493115 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term344 A B t d n m s.
Proof. exact (@lem4492455 A B t d n m h1 s). Qed.
Lemma lem4493116 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term344 A B t d n m s) = (term345 A B t s d n m).
Proof. exact (eq_refl (term344 A B t d n m s)). Qed.
Lemma lem4493117 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term345 A B t s d n m.
Proof. exact (EQ_MP (@lem4493116 A B t s d n m) (@lem4493115 A B s t d n m h1)). Qed.
Lemma lem4493118 {A : Type'} (s : A -> Prop) (m : nat) : (@HAS_SIZE A s m) = ((@HAS_SIZE A s m) = True).
Proof. exact (@lem7 (@HAS_SIZE A s m)). Qed.
Lemma lem4493122 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = ((@HAS_SIZE B t n) = True).
Proof. exact (@lem7 (@HAS_SIZE B t n)). Qed.
Lemma lem4493131 {A : Type'} (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : (@HAS_SIZE A s m) = True.
Proof. exact (EQ_MP (@lem4493118 A s m) (@lem4493112 A s m h1)). Qed.
Lemma lem4493132 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493133 {A : Type'} (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : (term346 A s m) = (and True).
Proof. exact (MK_COMB (@lem4493132) (@lem4493131 A s m h1)). Qed.
Lemma lem4493135 {B : Type'} (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE B t n) : (@HAS_SIZE B t n) = True.
Proof. exact (EQ_MP (@lem4493122 B t n) (@lem4493109 B t n h1)). Qed.
Lemma lem4493136 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term347 A B s m t n) = (True /\ True).
Proof. exact (MK_COMB (@lem4493133 A s m h1) (@lem4493135 B t n h2)). Qed.
Lemma lem4493138 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4493139 : (True /\ True) = True.
Proof. exact (@lem4493138 True). Qed.
Lemma lem4493140 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term347 A B s m t n) = True.
Proof. exact (TRANS (@lem4493136 A B s m t n h1 h2) (@lem4493139)). Qed.
Lemma lem4493141 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493142 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term348 A B s m t n) = (imp True).
Proof. exact (MK_COMB (@lem4493141) (@lem4493140 A B s m t n h1 h2)). Qed.
Lemma lem4493163 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term349 A B t s d n m) = (term349 A B t s d n m).
Proof. exact (eq_refl (term349 A B t s d n m)). Qed.
Lemma lem4493164 {A B : Type'} (d : B) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term345 A B t s d n m) = (term350 A B t s d n m).
Proof. exact (MK_COMB (@lem4493142 A B s m t n h1 h2) (@lem4493163 A B t s d n m)). Qed.
Lemma lem4493166 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4493167 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term350 A B t s d n m) = (term349 A B t s d n m).
Proof. exact (@lem4493166 (term349 A B t s d n m)). Qed.
Lemma lem4493188 {A B : Type'} (d : B) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term345 A B t s d n m) = (term349 A B t s d n m).
Proof. exact (TRANS (@lem4493164 A B d s m t n h1 h2) (@lem4493167 A B t s d n m)). Qed.
Lemma lem4493189 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493190 {A B : Type'} (d : B) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE A s m) (h2 : @HAS_SIZE B t n) : (term351 A B t s d n m) = (term352 A B t s d n m).
Proof. exact (MK_COMB (@lem4493189) (@lem4493188 A B d s m t n h1 h2)). Qed.
Lemma lem4493204 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : s0 = (@INSERT A a s).
Proof. exact (h1). Qed.
Lemma lem4493205 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem4493206 {A : Type'} (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (@IN A x s0) = (term77 A x a s).
Proof. exact (MK_COMB (@lem4493205 A x) (@lem4493204 A s0 a s h1)). Qed.
Lemma lem4493207 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493208 {A : Type'} (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term168 A x s0) = (term353 A x a s).
Proof. exact (MK_COMB (@lem4493207) (@lem4493206 A x s0 a s h1)). Qed.
Lemma lem4493209 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term169 A B f x t).
Proof. exact (eq_refl (term169 A B f x t)). Qed.
Lemma lem4493210 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term170 A B s0 f x t) = (term354 A B a s f x t).
Proof. exact (MK_COMB (@lem4493208 A x s0 a s h1) (@lem4493209 A B f x t)). Qed.
Lemma lem4493213 {A B : Type'} (f : A -> B) (t : B -> Prop) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term172 A B s0 f t) = (term355 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4493210 A B f x t s0 a s h1)). Qed.
Lemma lem4493214 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4493215 {A B : Type'} (f : A -> B) (t : B -> Prop) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term174 A B s0 f t) = (term356 A B a s f t).
Proof. exact (MK_COMB (@lem4493214 A) (@lem4493213 A B f t s0 a s h1)). Qed.
Lemma lem4493220 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493221 {A B : Type'} (f : A -> B) (t : B -> Prop) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term177 A B s0 f t) = (term357 A B a s f t).
Proof. exact (MK_COMB (@lem4493220) (@lem4493215 A B f t s0 a s h1)). Qed.
Lemma lem4493229 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : s0 = (@INSERT A a s).
Proof. exact (h1). Qed.
Lemma lem4493230 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem4493231 {A : Type'} (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (@IN A x s0) = (term77 A x a s).
Proof. exact (MK_COMB (@lem4493230 A x) (@lem4493229 A s0 a s h1)). Qed.
Lemma lem4493232 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4493233 {A : Type'} (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term178 A x s0) = (term358 A x a s).
Proof. exact (MK_COMB (@lem4493232) (@lem4493231 A x s0 a s h1)). Qed.
Lemma lem4493234 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4493235 {A : Type'} (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term179 A x s0) = (term359 A x a s).
Proof. exact (MK_COMB (@lem4493234) (@lem4493233 A x s0 a s h1)). Qed.
Lemma lem4493238 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((f x) = d).
Proof. exact (eq_refl ((f x) = d)). Qed.
Lemma lem4493239 {A B : Type'} (f : A -> B) (x : A) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term180 A B s0 f x d) = (term360 A B a s f x d).
Proof. exact (MK_COMB (@lem4493235 A x s0 a s h1) (@lem4493238 A B f x d)). Qed.
Lemma lem4493242 {A B : Type'} (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term182 A B s0 f d) = (term361 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4493239 A B f x d s0 a s h1)). Qed.
Lemma lem4493243 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4493244 {A B : Type'} (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term184 A B s0 f d) = (term362 A B a s f d).
Proof. exact (MK_COMB (@lem4493243 A) (@lem4493242 A B f d s0 a s h1)). Qed.
Lemma lem4493249 {A B : Type'} (t : B -> Prop) (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term186 A B t s0 f d) = (term363 A B t a s f d).
Proof. exact (MK_COMB (@lem4493221 A B f t s0 a s h1) (@lem4493244 A B f d s0 a s h1)). Qed.
Lemma lem4493252 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4493253 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term188 A B GEN_PVAR_148 t s0 f d) = (term364 A B GEN_PVAR_148 t a s f d).
Proof. exact (MK_COMB (@lem4493252 A B GEN_PVAR_148) (@lem4493249 A B t f d s0 a s h1)). Qed.
Lemma lem4493254 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4493255 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (d : B) (f : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term190 A B GEN_PVAR_148 t s0 d f) = (term365 A B GEN_PVAR_148 t a s d f).
Proof. exact (MK_COMB (@lem4493253 A B GEN_PVAR_148 t f d s0 a s h1) (@lem4493254 A B f)). Qed.
Lemma lem4493256 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term192 A B GEN_PVAR_148 t s0 d) = (term366 A B GEN_PVAR_148 t a s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4493255 A B GEN_PVAR_148 t d f s0 a s h1)). Qed.
Lemma lem4493257 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493258 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term194 A B GEN_PVAR_148 t s0 d) = (term367 A B GEN_PVAR_148 t a s d).
Proof. exact (MK_COMB (@lem4493257 A B) (@lem4493256 A B GEN_PVAR_148 t d s0 a s h1)). Qed.
Lemma lem4493263 {A B : Type'} (t : B -> Prop) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term196 A B t s0 d) = (term368 A B t a s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4493258 A B GEN_PVAR_148 t d s0 a s h1)). Qed.
Lemma lem4493264 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4493265 {A B : Type'} (t : B -> Prop) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term198 A B t s0 d) = (term369 A B t a s d).
Proof. exact (MK_COMB (@lem4493264 A B) (@lem4493263 A B t d s0 a s h1)). Qed.
Lemma lem4493266 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4493267 {A B : Type'} (t : B -> Prop) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term200 A B t s0 d) = (term370 A B t a s d).
Proof. exact (MK_COMB (@lem4493266 A B) (@lem4493265 A B t d s0 a s h1)). Qed.
Lemma lem4493268 (n : nat) (m : nat) : (term371 n m) = (term371 n m).
Proof. exact (eq_refl (term371 n m)). Qed.
Lemma lem4493269 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : s0 = (@INSERT A a s)) : (term155 A B t s0 d n m) = (term372 A B t a s d n m).
Proof. exact (MK_COMB (@lem4493267 A B t d s0 a s h1) (@lem4493268 n m)). Qed.
Lemma lem4493270 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : s0 = (@INSERT A a s)) (h2 : @HAS_SIZE A s m) (h3 : @HAS_SIZE B t n) : (term373 A B s t s0 d n m) = (term374 A B t a s d n m).
Proof. exact (MK_COMB (@lem4493190 A B d s m t n h2 h3) (@lem4493269 A B t d n m s0 a s h1)). Qed.
Lemma lem4493273 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : s0 = (@INSERT A a s)) (h2 : @HAS_SIZE A s m) (h3 : @HAS_SIZE B t n) : (term374 A B t a s d n m) = (term373 A B s t s0 d n m).
Proof. exact (SYM (@lem4493270 A B d s0 a s m t n h1 h2 h3)). Qed.
Lemma lem4493274 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term349 A B t s d n m) : term349 A B t s d n m.
Proof. exact (h1). Qed.
Lemma lem4493275 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : (term369 A B t a s d) = (term375 A B a t s d)) : (term369 A B t a s d) = (term375 A B a t s d).
Proof. exact (h1). Qed.
Lemma lem4493276 {A B : Type'} (n : nat) (m : nat) : (term376 A B n m) = (term376 A B n m).
Proof. exact (eq_refl (term376 A B n m)). Qed.
Lemma lem4493277 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : (term369 A B t a s d) = (term375 A B a t s d)) : (term377 A B n m t a s d) = (term378 A B n m a t s d).
Proof. exact (MK_COMB (@lem4493276 A B n m) (@lem4493275 A B a t s d h1)). Qed.
Lemma lem4493278 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term378 A B n m a t s d) = (term379 A B a t s d n m).
Proof. exact (eq_refl (term378 A B n m a t s d)). Qed.
Lemma lem4493279 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term380 A B n m t a s d) = (term380 A B n m t a s d).
Proof. exact (eq_refl (term380 A B n m t a s d)). Qed.
Lemma lem4493280 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : ((term377 A B n m t a s d) = (term378 A B n m a t s d)) = ((term377 A B n m t a s d) = (term379 A B a t s d n m)).
Proof. exact (MK_COMB (@lem4493279 A B n m t a s d) (@lem4493278 A B a t s d n m)). Qed.
Lemma lem4493281 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term377 A B n m t a s d) = (term372 A B t a s d n m).
Proof. exact (eq_refl (term377 A B n m t a s d)). Qed.
Lemma lem4493282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493283 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term380 A B n m t a s d) = (term381 A B t a s d n m).
Proof. exact (MK_COMB (@lem4493282) (@lem4493281 A B t a s d n m)). Qed.
Lemma lem4493284 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term379 A B a t s d n m) = (term379 A B a t s d n m).
Proof. exact (eq_refl (term379 A B a t s d n m)). Qed.
Lemma lem4493285 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : ((term377 A B n m t a s d) = (term379 A B a t s d n m)) = ((term372 A B t a s d n m) = (term379 A B a t s d n m)).
Proof. exact (MK_COMB (@lem4493283 A B t a s d n m) (@lem4493284 A B a t s d n m)). Qed.
Lemma lem4493286 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : ((term377 A B n m t a s d) = (term378 A B n m a t s d)) = ((term372 A B t a s d n m) = (term379 A B a t s d n m)).
Proof. exact (TRANS (@lem4493280 A B a t s d n m) (@lem4493285 A B a t s d n m)). Qed.
Lemma lem4493287 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : (term369 A B t a s d) = (term375 A B a t s d)) : (term372 A B t a s d n m) = (term379 A B a t s d n m).
Proof. exact (EQ_MP (@lem4493286 A B a t s d n m) (@lem4493277 A B n m a t s d h1)). Qed.
Lemma lem4493288 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : (term369 A B t a s d) = (term375 A B a t s d)) : (term379 A B a t s d n m) = (term372 A B t a s d n m).
Proof. exact (SYM (@lem4493287 A B n m a t s d h1)). Qed.
Lemma lem4493292 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term92 A s t).
Proof. exact (EQ_MP (@lem4492360 A s t) (@lem4492359 A s t)). Qed.
Lemma lem4493293 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = t) = (term232 A B s t).
Proof. exact (@lem4493292 (A -> B) s t). Qed.
Lemma lem4493294 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term369 A B t a s d) = (term375 A B a t s d)) = (term382 A B a t s d).
Proof. exact (@lem4493293 A B (term369 A B t a s d) (term375 A B a t s d)). Qed.
Lemma lem4493306 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term44 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem4492335 _83095 p x) (@lem4492334 _83095 p x)). Qed.
Lemma lem4493307 {A B : Type'} (p : type572 A B) (x : A -> B) : (term235 A B x p) = (p x).
Proof. exact (@lem4493306 (A -> B) p x). Qed.
Lemma lem4493308 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) (x : A -> B) : (term383 A B x t a s d) = (term384 A B t a s d x).
Proof. exact (@lem4493307 A B (term385 A B t a s d) x). Qed.
Lemma lem4493309 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term384 A B t a s d f) = (term363 A B t a s f d).
Proof. exact (eq_refl (term384 A B t a s d f)). Qed.
Lemma lem4493310 {A B : Type'} (GEN_PVAR_145 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_145) = (@SETSPEC (A -> B) GEN_PVAR_145).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_145)). Qed.
Lemma lem4493311 {A B : Type'} (GEN_PVAR_145 : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term386 A B GEN_PVAR_145 t a s d f) = (term364 A B GEN_PVAR_145 t a s f d).
Proof. exact (MK_COMB (@lem4493310 A B GEN_PVAR_145) (@lem4493309 A B t a s f d)). Qed.
Lemma lem4493312 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4493313 {A B : Type'} (GEN_PVAR_145 : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) (f : A -> B) : (term387 A B GEN_PVAR_145 t a s d f) = (term365 A B GEN_PVAR_145 t a s d f).
Proof. exact (MK_COMB (@lem4493311 A B GEN_PVAR_145 t a s f d) (@lem4493312 A B f)). Qed.
Lemma lem4493314 {A B : Type'} (GEN_PVAR_145 : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term388 A B GEN_PVAR_145 t a s d) = (term366 A B GEN_PVAR_145 t a s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4493313 A B GEN_PVAR_145 t a s d f)). Qed.
Lemma lem4493315 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493316 {A B : Type'} (GEN_PVAR_145 : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term389 A B GEN_PVAR_145 t a s d) = (term367 A B GEN_PVAR_145 t a s d).
Proof. exact (MK_COMB (@lem4493315 A B) (@lem4493314 A B GEN_PVAR_145 t a s d)). Qed.
Lemma lem4493317 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term390 A B t a s d) = (term368 A B t a s d).
Proof. exact (fun_ext (fun GEN_PVAR_145 : A -> B => @lem4493316 A B GEN_PVAR_145 t a s d)). Qed.
Lemma lem4493318 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4493319 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term391 A B t a s d) = (term369 A B t a s d).
Proof. exact (MK_COMB (@lem4493318 A B) (@lem4493317 A B t a s d)). Qed.
Lemma lem4493320 {A B : Type'} (x : A -> B) : (@IN (A -> B) x) = (@IN (A -> B) x).
Proof. exact (eq_refl (@IN (A -> B) x)). Qed.
Lemma lem4493321 {A B : Type'} (x : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term383 A B x t a s d) = (term392 A B x t a s d).
Proof. exact (MK_COMB (@lem4493320 A B x) (@lem4493319 A B t a s d)). Qed.
Lemma lem4493322 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493323 {A B : Type'} (x : A -> B) (t : B -> Prop) (a : A) (s : A -> Prop) (d : B) : (term393 A B x t a s d) = (term394 A B x t a s d).
Proof. exact (MK_COMB (@lem4493322) (@lem4493321 A B x t a s d)). Qed.
Lemma lem4493324 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (x : A -> B) (d : B) : (term384 A B t a s d x) = (term363 A B t a s x d).
Proof. exact (eq_refl (term384 A B t a s d x)). Qed.
Lemma lem4493325 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (x : A -> B) (d : B) : ((term383 A B x t a s d) = (term384 A B t a s d x)) = ((term392 A B x t a s d) = (term363 A B t a s x d)).
Proof. exact (MK_COMB (@lem4493323 A B x t a s d) (@lem4493324 A B t a s x d)). Qed.
Lemma lem4493326 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (x : A -> B) (d : B) : (term392 A B x t a s d) = (term363 A B t a s x d).
Proof. exact (EQ_MP (@lem4493325 A B t a s x d) (@lem4493308 A B t a s d x)). Qed.
Lemma lem4493349 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493350 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (x : A -> B) (d : B) : (term394 A B x t a s d) = (term395 A B t a s x d).
Proof. exact (MK_COMB (@lem4493349) (@lem4493326 A B t a s x d)). Qed.
Lemma lem4493352 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term87 A B y f s) = (term88 A B y f s).
Proof. exact (EQ_MP (@lem4492354 A B y f s) (@lem4492353 A B y s f)). Qed.
Lemma lem4493353 {A B : Type'} (y : A -> B) (f : type1215 A B) (s : type1217 A B) : (term396 A B y f s) = (term397 A B y f s).
Proof. exact (@lem4493352 (type1658 A B) (A -> B) y f s). Qed.
Lemma lem4493354 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term398 A B x a t s d) = (term399 A B x a t s d).
Proof. exact (@lem4493353 A B x (term400 A B a) (term401 A B t s d)). Qed.
Lemma lem4493360 {_5131 _5132 : Type'} (P : type1223 _5131 _5132) : (term80 _5131 _5132 P) = (term81 _5131 _5132 P).
Proof. exact (EQ_MP (@lem4492304 _5131 _5132 P) (@lem4492303 _5131 _5132 P)). Qed.
Lemma lem4493361 {A B : Type'} (P : type1217 A B) : (term402 A B P) = (term403 A B P).
Proof. exact (@lem4493360 (A -> B) B P). Qed.
Lemma lem4493362 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term404 A B x a t s d) = (term405 A B x a t s d).
Proof. exact (@lem4493361 A B (term406 A B x a t s d)). Qed.
Lemma lem4493363 {A B : Type'} (x : A -> B) (a : A) (x' : type1658 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term407 A B x a t s d x') = (term408 A B x a x' t s d).
Proof. exact (eq_refl (term407 A B x a t s d x')). Qed.
Lemma lem4493364 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term409 A B x a t s d) = (term406 A B x a t s d).
Proof. exact (fun_ext (fun x' : type1658 A B => @lem4493363 A B x a x' t s d)). Qed.
Lemma lem4493365 {A B : Type'} : (@ex (prod B (A -> B))) = (@ex (prod B (A -> B))).
Proof. exact (eq_refl (@ex (prod B (A -> B)))). Qed.
Lemma lem4493366 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term404 A B x a t s d) = (term399 A B x a t s d).
Proof. exact (MK_COMB (@lem4493365 A B) (@lem4493364 A B x a t s d)). Qed.
Lemma lem4493367 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493368 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term410 A B x a t s d) = (term411 A B x a t s d).
Proof. exact (MK_COMB (@lem4493367) (@lem4493366 A B x a t s d)). Qed.
Lemma lem4493369 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term412 A B x a t s d p1 p2) = (term413 A B x a p1 p2 t s d).
Proof. exact (eq_refl (term412 A B x a t s d p1 p2)). Qed.
Lemma lem4493370 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term414 A B x a t s d p1) = (term415 A B x a p1 t s d).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4493369 A B x a p1 p2 t s d)). Qed.
Lemma lem4493371 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493372 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term416 A B x a t s d p1) = (term417 A B x a p1 t s d).
Proof. exact (MK_COMB (@lem4493371 A B) (@lem4493370 A B x a p1 t s d)). Qed.
Lemma lem4493373 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term418 A B x a t s d) = (term419 A B x a t s d).
Proof. exact (fun_ext (fun p1 : B => @lem4493372 A B x a p1 t s d)). Qed.
Lemma lem4493374 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493375 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term405 A B x a t s d) = (term420 A B x a t s d).
Proof. exact (MK_COMB (@lem4493374 B) (@lem4493373 A B x a t s d)). Qed.
Lemma lem4493376 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term404 A B x a t s d) = (term405 A B x a t s d)) = ((term399 A B x a t s d) = (term420 A B x a t s d)).
Proof. exact (MK_COMB (@lem4493368 A B x a t s d) (@lem4493375 A B x a t s d)). Qed.
Lemma lem4493377 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term399 A B x a t s d) = (term420 A B x a t s d).
Proof. exact (EQ_MP (@lem4493376 A B x a t s d) (@lem4493362 A B x a t s d)). Qed.
Lemma lem4493384 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term398 A B x a t s d) = (term420 A B x a t s d).
Proof. exact (TRANS (@lem4493354 A B x a t s d) (@lem4493377 A B x a t s d)). Qed.
Lemma lem4493397 {A B : Type'} (a0 : B) (a1 : A -> B) : a0 = (term421 A B a0 a1).
Proof. exact (@lem51128 B (A -> B) a0 a1). Qed.
Lemma lem4493398 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (@lem4493397 A B b g). Qed.
Lemma lem4493399 {A B : Type'} (a0 : B) (a1 : A -> B) : a1 = (term422 A B a0 a1).
Proof. exact (@lem51159 B (A -> B) a0 a1). Qed.
Lemma lem4493400 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (@lem4493399 A B b g). Qed.
Lemma lem4493401 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4493402 {B : Type'} : (term423 B) = (term423 B).
Proof. exact (eq_refl (term423 B)). Qed.
Lemma lem4493403 {A B : Type'} (b : B) (g : A -> B) : (term424 B b) = (term425 A B b g).
Proof. exact (MK_COMB (@lem4493402 B) (@lem4493398 A B b g)). Qed.
Lemma lem4493404 {A B : Type'} (b : B) (g : A -> B) : (term425 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term425 A B b g)). Qed.
Lemma lem4493405 {B : Type'} (b : B) : (term426 B b) = (term426 B b).
Proof. exact (eq_refl (term426 B b)). Qed.
Lemma lem4493406 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = ((term424 B b) = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4493405 B b) (@lem4493404 A B b g)). Qed.
Lemma lem4493407 {B : Type'} (b : B) : (term424 B b) = b.
Proof. exact (eq_refl (term424 B b)). Qed.
Lemma lem4493408 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4493409 {B : Type'} (b : B) : (term426 B b) = (@eq B b).
Proof. exact (MK_COMB (@lem4493408 B) (@lem4493407 B b)). Qed.
Lemma lem4493410 {A B : Type'} (b : B) (g : A -> B) : (term421 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term421 A B b g)). Qed.
Lemma lem4493411 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term421 A B b g)) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4493409 B b) (@lem4493410 A B b g)). Qed.
Lemma lem4493412 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = (b = (term421 A B b g)).
Proof. exact (TRANS (@lem4493406 A B b g) (@lem4493411 A B b g)). Qed.
Lemma lem4493413 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4493412 A B b g) (@lem4493403 A B b g)). Qed.
Lemma lem4493414 {B : Type'} (b : B) : (@eq B b) = (@eq B b).
Proof. exact (eq_refl (@eq B b)). Qed.
Lemma lem4493415 {A B : Type'} (b : B) (g : A -> B) : (b = b) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4493414 B b) (@lem4493413 A B b g)). Qed.
Lemma lem4493416 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4493415 A B b g) (@lem4493401 B b)). Qed.
Lemma lem4493417 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem4493418 {A B : Type'} : (term427 A B) = (term427 A B).
Proof. exact (eq_refl (term427 A B)). Qed.
Lemma lem4493419 {A B : Type'} (b : B) (g : A -> B) : (term428 A B g) = (term429 A B b g).
Proof. exact (MK_COMB (@lem4493418 A B) (@lem4493400 A B b g)). Qed.
Lemma lem4493420 {A B : Type'} (b : B) (g : A -> B) : (term429 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term429 A B b g)). Qed.
Lemma lem4493421 {A B : Type'} (g : A -> B) : (term430 A B g) = (term430 A B g).
Proof. exact (eq_refl (term430 A B g)). Qed.
Lemma lem4493422 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = ((term428 A B g) = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4493421 A B g) (@lem4493420 A B b g)). Qed.
Lemma lem4493423 {A B : Type'} (g : A -> B) : (term428 A B g) = g.
Proof. exact (eq_refl (term428 A B g)). Qed.
Lemma lem4493424 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4493425 {A B : Type'} (g : A -> B) : (term430 A B g) = (@eq (A -> B) g).
Proof. exact (MK_COMB (@lem4493424 A B) (@lem4493423 A B g)). Qed.
Lemma lem4493426 {A B : Type'} (b : B) (g : A -> B) : (term422 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term422 A B b g)). Qed.
Lemma lem4493427 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term422 A B b g)) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4493425 A B g) (@lem4493426 A B b g)). Qed.
Lemma lem4493428 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = (g = (term422 A B b g)).
Proof. exact (TRANS (@lem4493422 A B b g) (@lem4493427 A B b g)). Qed.
Lemma lem4493429 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4493428 A B b g) (@lem4493419 A B b g)). Qed.
Lemma lem4493430 {A B : Type'} (g : A -> B) : (@eq (A -> B) g) = (@eq (A -> B) g).
Proof. exact (eq_refl (@eq (A -> B) g)). Qed.
Lemma lem4493431 {A B : Type'} (b : B) (g : A -> B) : (g = g) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4493430 A B g) (@lem4493429 A B b g)). Qed.
Lemma lem4493432 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4493431 A B b g) (@lem4493417 A B g)). Qed.
Lemma lem4493433 {A B : Type'} (a : A) : (term431 A B a) = (term431 A B a).
Proof. exact (eq_refl (term431 A B a)). Qed.
Lemma lem4493434 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term432 A B a b) = (term433 A B a b g).
Proof. exact (MK_COMB (@lem4493433 A B a) (@lem4493416 A B b g)). Qed.
Lemma lem4493435 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term433 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term433 A B a b g)). Qed.
Lemma lem4493436 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term435 A B a b).
Proof. exact (eq_refl (term435 A B a b)). Qed.
Lemma lem4493437 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term432 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4493436 A B a b) (@lem4493435 A B a b g)). Qed.
Lemma lem4493438 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4493439 {A B : Type'} : (@eq ((A -> B) -> A -> B)) = (@eq ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@eq ((A -> B) -> A -> B))). Qed.
Lemma lem4493440 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term437 A B a b).
Proof. exact (MK_COMB (@lem4493439 A B) (@lem4493438 A B a b)). Qed.
Lemma lem4493441 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term434 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term434 A B a b g)). Qed.
Lemma lem4493442 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term434 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4493440 A B a b) (@lem4493441 A B a b g)). Qed.
Lemma lem4493443 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (TRANS (@lem4493437 A B a b g) (@lem4493442 A B a b g)). Qed.
Lemma lem4493444 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term436 A B a b) = (term434 A B a b g).
Proof. exact (EQ_MP (@lem4493443 A B a b g) (@lem4493434 A B a b g)). Qed.
Lemma lem4493445 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term439 A B a b g).
Proof. exact (MK_COMB (@lem4493444 A B a b g) (@lem4493432 A B b g)). Qed.
Lemma lem4493446 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term439 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term439 A B a b g)). Qed.
Lemma lem4493447 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term441 A B a b g).
Proof. exact (eq_refl (term441 A B a b g)). Qed.
Lemma lem4493448 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term438 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4493447 A B a b g) (@lem4493446 A B a b g)). Qed.
Lemma lem4493449 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4493450 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4493451 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term443 A B a b g).
Proof. exact (MK_COMB (@lem4493450 A B) (@lem4493449 A B a b g)). Qed.
Lemma lem4493452 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term440 A B a b g)). Qed.
Lemma lem4493453 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term440 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4493451 A B a b g) (@lem4493452 A B a b g)). Qed.
Lemma lem4493454 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (TRANS (@lem4493448 A B a b g) (@lem4493453 A B a b g)). Qed.
Lemma lem4493455 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term442 A B a b g) = (term440 A B a b g).
Proof. exact (EQ_MP (@lem4493454 A B a b g) (@lem4493445 A B a b g)). Qed.
Lemma lem4493456 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term442 A B a b g).
Proof. exact (SYM (@lem4493455 A B a b g)). Qed.
Lemma lem4493457 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term444 A B a b g)). Qed.
Lemma lem4493458 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term442 A B a b g).
Proof. exact (TRANS (@lem4493457 A B a b g) (@lem4493456 A B a b g)). Qed.
Lemma lem4493459 {A B : Type'} (a : A) (b : B) : term445 A B a b.
Proof. exact (fun g : A -> B => @lem4493458 A B a b g). Qed.
Lemma lem4493460 {A B : Type'} (a : A) : term446 A B a.
Proof. exact (fun b : B => @lem4493459 A B a b). Qed.
Lemma lem4493461 {A B : Type'} (a : A) : term447 A B a.
Proof. exact (ex_intro (term448 A B a) (term449 A B a) (@lem4493460 A B a)). Qed.
Lemma lem4493463 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem4493464 {A B : Type'} (a : A -> B) (b : A -> B) : (a = b) = (@GEQ (A -> B) a b).
Proof. exact (@lem4493463 (A -> B) a b). Qed.
Lemma lem4493465 {A B : Type'} (_52323 : type1215 A B) (a : A) (b : B) (g : A -> B) : ((term450 A B _52323 b g) = (term442 A B a b g)) = (term451 A B _52323 a b g).
Proof. exact (@lem4493464 A B (term450 A B _52323 b g) (term442 A B a b g)). Qed.
Lemma lem4493466 {A B : Type'} (_52323 : type1215 A B) (a : A) (b : B) : (term452 A B _52323 a b) = (term453 A B _52323 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4493465 A B _52323 a b g)). Qed.
Lemma lem4493467 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4493468 {A B : Type'} (_52323 : type1215 A B) (a : A) (b : B) : (term454 A B _52323 a b) = (term455 A B _52323 a b).
Proof. exact (MK_COMB (@lem4493467 A B) (@lem4493466 A B _52323 a b)). Qed.
Lemma lem4493469 {A B : Type'} (_52323 : type1215 A B) (a : A) : (term456 A B _52323 a) = (term457 A B _52323 a).
Proof. exact (fun_ext (fun b : B => @lem4493468 A B _52323 a b)). Qed.
Lemma lem4493470 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4493471 {A B : Type'} (_52323 : type1215 A B) (a : A) : (term458 A B _52323 a) = (term459 A B _52323 a).
Proof. exact (MK_COMB (@lem4493470 B) (@lem4493469 A B _52323 a)). Qed.
Lemma lem4493472 {A B : Type'} (a : A) : (term448 A B a) = (term460 A B a).
Proof. exact (fun_ext (fun _52323 : type1215 A B => @lem4493471 A B _52323 a)). Qed.
Lemma lem4493473 {A B : Type'} : (@ex ((prod B (A -> B)) -> A -> B)) = (@ex ((prod B (A -> B)) -> A -> B)).
Proof. exact (eq_refl (@ex ((prod B (A -> B)) -> A -> B))). Qed.
Lemma lem4493474 {A B : Type'} (a : A) : (term447 A B a) = (term461 A B a).
Proof. exact (MK_COMB (@lem4493473 A B) (@lem4493472 A B a)). Qed.
Lemma lem4493475 {A B : Type'} (a : A) : term461 A B a.
Proof. exact (EQ_MP (@lem4493474 A B a) (@lem4493461 A B a)). Qed.
Lemma lem4493477 {_5076 : Type'} (P : _5076 -> Prop) : term462 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem4493478 {A B : Type'} (P : type326 A B) : term463 A B P.
Proof. exact (@lem4493477 (type1215 A B) P). Qed.
Lemma lem4493479 {A B : Type'} (a : A) : term464 A B a.
Proof. exact (@lem4493478 A B (term460 A B a)). Qed.
Lemma lem4493480 {A B : Type'} (a : A) : term465 A B a.
Proof. exact (@lem4493479 A B a (@lem4493475 A B a)). Qed.
Lemma lem4493481 {A B : Type'} (a : A) : (term465 A B a) = (term466 A B a).
Proof. exact (eq_refl (term465 A B a)). Qed.
Lemma lem4493482 {A B : Type'} (a : A) : term466 A B a.
Proof. exact (EQ_MP (@lem4493481 A B a) (@lem4493480 A B a)). Qed.
Lemma lem4493483 {A B : Type'} (a : A) (b : B) : term467 A B a b.
Proof. exact (@lem4493482 A B a b). Qed.
Lemma lem4493484 {A B : Type'} (a : A) (b : B) : (term467 A B a b) = (term468 A B a b).
Proof. exact (eq_refl (term467 A B a b)). Qed.
Lemma lem4493485 {A B : Type'} (a : A) (b : B) : term468 A B a b.
Proof. exact (EQ_MP (@lem4493484 A B a b) (@lem4493483 A B a b)). Qed.
Lemma lem4493486 {A B : Type'} (a : A) (b : B) (g : A -> B) : term469 A B a b g.
Proof. exact (@lem4493485 A B a b g). Qed.
Lemma lem4493487 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term469 A B a b g) = (term470 A B a b g).
Proof. exact (eq_refl (term469 A B a b g)). Qed.
Lemma lem4493488 {A B : Type'} (a : A) (b : B) (g : A -> B) : term470 A B a b g.
Proof. exact (EQ_MP (@lem4493487 A B a b g) (@lem4493486 A B a b g)). Qed.
Lemma lem4493490 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem4493491 {A B : Type'} (a : A -> B) (b : A -> B) : (@GEQ (A -> B) a b) = (a = b).
Proof. exact (@lem4493490 (A -> B) a b). Qed.
Lemma lem4493492 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term470 A B a b g) = ((term471 A B a b g) = (term442 A B a b g)).
Proof. exact (@lem4493491 A B (term471 A B a b g) (term442 A B a b g)). Qed.
Lemma lem4493493 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (EQ_MP (@lem4493492 A B a b g) (@lem4493488 A B a b g)). Qed.
Lemma lem4493494 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (@lem4493493 A B a b g). Qed.
Lemma lem4493495 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) : (term471 A B a p1 p2) = (term442 A B a p1 p2).
Proof. exact (@lem4493494 A B a p1 p2). Qed.
Lemma lem4493502 {A B : Type'} (x : A -> B) : (@eq (A -> B) x) = (@eq (A -> B) x).
Proof. exact (eq_refl (@eq (A -> B) x)). Qed.
Lemma lem4493503 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (p2 : A -> B) : (x = (term471 A B a p1 p2)) = (x = (term442 A B a p1 p2)).
Proof. exact (MK_COMB (@lem4493502 A B x) (@lem4493495 A B a p1 p2)). Qed.
Lemma lem4493508 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493509 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (p2 : A -> B) : (term472 A B x a p1 p2) = (term473 A B x a p1 p2).
Proof. exact (MK_COMB (@lem4493508) (@lem4493503 A B x a p1 p2)). Qed.
Lemma lem4493511 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term49 _83064 x P) = (term50 _83064 P x).
Proof. exact (EQ_MP (@lem4492342 _83064 P x) (@lem4492341 _83064 P x)). Qed.
Lemma lem4493512 {A B : Type'} (P : type915 A B) (x : type1658 A B) : (term474 A B x P) = (term475 A B P x).
Proof. exact (@lem4493511 (type1658 A B) P x). Qed.
Lemma lem4493513 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term476 A B p1 p2 t s d) = (term477 A B t s d p1 p2).
Proof. exact (@lem4493512 A B (term478 A B t s d) (@pair B (A -> B) p1 p2)). Qed.
Lemma lem4493514 {A B : Type'} (GEN_PVAR_147 : type1658 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term479 A B t s d GEN_PVAR_147) = (term480 A B GEN_PVAR_147 t s d).
Proof. exact (eq_refl (term479 A B t s d GEN_PVAR_147)). Qed.
Lemma lem4493515 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term481 A B t s d) = (term482 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_147 : type1658 A B => @lem4493514 A B GEN_PVAR_147 t s d)). Qed.
Lemma lem4493516 {A B : Type'} : (@GSPEC (prod B (A -> B))) = (@GSPEC (prod B (A -> B))).
Proof. exact (eq_refl (@GSPEC (prod B (A -> B)))). Qed.
Lemma lem4493517 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term483 A B t s d) = (term401 A B t s d).
Proof. exact (MK_COMB (@lem4493516 A B) (@lem4493515 A B t s d)). Qed.
Lemma lem4493518 {A B : Type'} (p1 : B) (p2 : A -> B) : (term484 A B p1 p2) = (term484 A B p1 p2).
Proof. exact (eq_refl (term484 A B p1 p2)). Qed.
Lemma lem4493519 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term476 A B p1 p2 t s d) = (term485 A B p1 p2 t s d).
Proof. exact (MK_COMB (@lem4493518 A B p1 p2) (@lem4493517 A B t s d)). Qed.
Lemma lem4493520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493521 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term486 A B p1 p2 t s d) = (term487 A B p1 p2 t s d).
Proof. exact (MK_COMB (@lem4493520) (@lem4493519 A B p1 p2 t s d)). Qed.
Lemma lem4493522 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term477 A B t s d p1 p2) = (term488 A B p1 p2 t s d).
Proof. exact (eq_refl (term477 A B t s d p1 p2)). Qed.
Lemma lem4493523 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term476 A B p1 p2 t s d) = (term477 A B t s d p1 p2)) = ((term485 A B p1 p2 t s d) = (term488 A B p1 p2 t s d)).
Proof. exact (MK_COMB (@lem4493521 A B p1 p2 t s d) (@lem4493522 A B p1 p2 t s d)). Qed.
Lemma lem4493524 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term485 A B p1 p2 t s d) = (term488 A B p1 p2 t s d).
Proof. exact (EQ_MP (@lem4493523 A B p1 p2 t s d) (@lem4493513 A B t s d p1 p2)). Qed.
Lemma lem4493538 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4493539 {A B : Type'} (f : type1533 A B) (y : Prop) : (term489 A B f y) = (f y).
Proof. exact (@lem4493538 Prop (type1217 A B) f y). Qed.
Lemma lem4493540 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d).
Proof. exact (@lem4493539 A B (term492 A B p1 p2) (term493 A B b g t s d)). Qed.
Lemma lem4493541 {A B : Type'} (p : Prop) (p1 : B) (p2 : A -> B) : (term494 A B p1 p2 p) = (term495 A B p p1 p2).
Proof. exact (eq_refl (term494 A B p1 p2 p)). Qed.
Lemma lem4493542 {A B : Type'} (p1 : B) (p2 : A -> B) : (term496 A B p1 p2) = (term492 A B p1 p2).
Proof. exact (fun_ext (fun p : Prop => @lem4493541 A B p p1 p2)). Qed.
Lemma lem4493543 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term493 A B b g t s d) = (term493 A B b g t s d).
Proof. exact (eq_refl (term493 A B b g t s d)). Qed.
Lemma lem4493544 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d).
Proof. exact (MK_COMB (@lem4493542 A B p1 p2) (@lem4493543 A B b g t s d)). Qed.
Lemma lem4493545 {A B : Type'} : (@eq ((prod B (A -> B)) -> Prop)) = (@eq ((prod B (A -> B)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod B (A -> B)) -> Prop))). Qed.
Lemma lem4493546 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term497 A B p1 p2 b g t s d) = (term498 A B p1 p2 b g t s d).
Proof. exact (MK_COMB (@lem4493545 A B) (@lem4493544 A B p1 p2 b g t s d)). Qed.
Lemma lem4493547 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2).
Proof. exact (eq_refl (term491 A B p1 p2 b g t s d)). Qed.
Lemma lem4493548 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : ((term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d)) = ((term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2)).
Proof. exact (MK_COMB (@lem4493546 A B p1 p2 b g t s d) (@lem4493547 A B b g t s d p1 p2)). Qed.
Lemma lem4493549 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2).
Proof. exact (EQ_MP (@lem4493548 A B b g t s d p1 p2) (@lem4493540 A B p1 p2 b g t s d)). Qed.
Lemma lem4493555 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term44 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem4492335 _83095 p x) (@lem4492334 _83095 p x)). Qed.
Lemma lem4493556 {A B : Type'} (p : type572 A B) (x : A -> B) : (term235 A B x p) = (p x).
Proof. exact (@lem4493555 (A -> B) p x). Qed.
Lemma lem4493557 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (g : A -> B) : (term500 A B g t s d) = (term501 A B t s d g).
Proof. exact (@lem4493556 A B (term502 A B t s d) g). Qed.
Lemma lem4493558 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term501 A B t s d f) = (term186 A B t s f d).
Proof. exact (eq_refl (term501 A B t s d f)). Qed.
Lemma lem4493559 {A B : Type'} (GEN_PVAR_146 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_146) = (@SETSPEC (A -> B) GEN_PVAR_146).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_146)). Qed.
Lemma lem4493560 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term503 A B GEN_PVAR_146 t s d f) = (term188 A B GEN_PVAR_146 t s f d).
Proof. exact (MK_COMB (@lem4493559 A B GEN_PVAR_146) (@lem4493558 A B t s f d)). Qed.
Lemma lem4493561 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4493562 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term504 A B GEN_PVAR_146 t s d f) = (term190 A B GEN_PVAR_146 t s d f).
Proof. exact (MK_COMB (@lem4493560 A B GEN_PVAR_146 t s f d) (@lem4493561 A B f)). Qed.
Lemma lem4493563 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term505 A B GEN_PVAR_146 t s d) = (term192 A B GEN_PVAR_146 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4493562 A B GEN_PVAR_146 t s d f)). Qed.
Lemma lem4493564 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493565 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term506 A B GEN_PVAR_146 t s d) = (term194 A B GEN_PVAR_146 t s d).
Proof. exact (MK_COMB (@lem4493564 A B) (@lem4493563 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4493566 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_146 : A -> B => @lem4493565 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4493567 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4493568 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B t s d) = (term198 A B t s d).
Proof. exact (MK_COMB (@lem4493567 A B) (@lem4493566 A B t s d)). Qed.
Lemma lem4493569 {A B : Type'} (g : A -> B) : (@IN (A -> B) g) = (@IN (A -> B) g).
Proof. exact (eq_refl (@IN (A -> B) g)). Qed.
Lemma lem4493570 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term500 A B g t s d) = (term509 A B g t s d).
Proof. exact (MK_COMB (@lem4493569 A B g) (@lem4493568 A B t s d)). Qed.
Lemma lem4493571 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493572 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term510 A B g t s d) = (term511 A B g t s d).
Proof. exact (MK_COMB (@lem4493571) (@lem4493570 A B g t s d)). Qed.
Lemma lem4493573 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term501 A B t s d g) = (term186 A B t s g d).
Proof. exact (eq_refl (term501 A B t s d g)). Qed.
Lemma lem4493574 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : ((term500 A B g t s d) = (term501 A B t s d g)) = ((term509 A B g t s d) = (term186 A B t s g d)).
Proof. exact (MK_COMB (@lem4493572 A B g t s d) (@lem4493573 A B t s g d)). Qed.
Lemma lem4493575 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term509 A B g t s d) = (term186 A B t s g d).
Proof. exact (EQ_MP (@lem4493574 A B t s g d) (@lem4493557 A B t s d g)). Qed.
Lemma lem4493598 {B : Type'} (b : B) (t : B -> Prop) : (term512 B b t) = (term512 B b t).
Proof. exact (eq_refl (term512 B b t)). Qed.
Lemma lem4493599 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term493 A B b g t s d) = (term513 A B b t s g d).
Proof. exact (MK_COMB (@lem4493598 B b t) (@lem4493575 A B t s g d)). Qed.
Lemma lem4493602 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493603 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term514 A B b g t s d) = (term515 A B b t s g d).
Proof. exact (MK_COMB (@lem4493602) (@lem4493599 A B b t s g d)). Qed.
Lemma lem4493608 {A B : Type'} (p1 : B) (p2 : A -> B) (t : type1658 A B) : ((@pair B (A -> B) p1 p2) = t) = ((@pair B (A -> B) p1 p2) = t).
Proof. exact (eq_refl ((@pair B (A -> B) p1 p2) = t)). Qed.
Lemma lem4493609 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) (t' : type1658 A B) : (term516 A B b g t s d p1 p2 t') = (term517 A B b t s g d p1 p2 t').
Proof. exact (MK_COMB (@lem4493603 A B b t s g d) (@lem4493608 A B p1 p2 t')). Qed.
Lemma lem4493612 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term499 A B b g t s d p1 p2) = (term518 A B b t s g d p1 p2).
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4493609 A B b t s g d p1 p2 t')). Qed.
Lemma lem4493613 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term518 A B b t s g d p1 p2).
Proof. exact (TRANS (@lem4493549 A B b g t s d p1 p2) (@lem4493612 A B b t s g d p1 p2)). Qed.
Lemma lem4493614 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4493615 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term519 A B p1 p2 t s d b g) = (term520 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4493613 A B b t s g d p1 p2) (@lem4493614 A B b g)). Qed.
Lemma lem4493617 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4493618 {A B : Type'} (f : type1217 A B) (y : type1658 A B) : (term521 A B f y) = (f y).
Proof. exact (@lem4493617 (type1658 A B) Prop f y). Qed.
Lemma lem4493619 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term522 A B t s d p1 p2 b g) = (term520 A B t s d p1 p2 b g).
Proof. exact (@lem4493618 A B (term518 A B b t s g d p1 p2) (@pair B (A -> B) b g)). Qed.
Lemma lem4493620 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) (t' : type1658 A B) : (term523 A B b t s g d p1 p2 t') = (term517 A B b t s g d p1 p2 t').
Proof. exact (eq_refl (term523 A B b t s g d p1 p2 t')). Qed.
Lemma lem4493621 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term524 A B b t s g d p1 p2) = (term518 A B b t s g d p1 p2).
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4493620 A B b t s g d p1 p2 t')). Qed.
Lemma lem4493622 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4493623 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term522 A B t s d p1 p2 b g) = (term520 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4493621 A B b t s g d p1 p2) (@lem4493622 A B b g)). Qed.
Lemma lem4493624 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493625 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term525 A B t s d p1 p2 b g) = (term526 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4493624) (@lem4493623 A B t s d p1 p2 b g)). Qed.
Lemma lem4493626 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term520 A B t s d p1 p2 b g) = (term527 A B t s d p1 p2 b g).
Proof. exact (eq_refl (term520 A B t s d p1 p2 b g)). Qed.
Lemma lem4493627 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : ((term522 A B t s d p1 p2 b g) = (term520 A B t s d p1 p2 b g)) = ((term520 A B t s d p1 p2 b g) = (term527 A B t s d p1 p2 b g)).
Proof. exact (MK_COMB (@lem4493625 A B t s d p1 p2 b g) (@lem4493626 A B t s d p1 p2 b g)). Qed.
Lemma lem4493628 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term520 A B t s d p1 p2 b g) = (term527 A B t s d p1 p2 b g).
Proof. exact (EQ_MP (@lem4493627 A B t s d p1 p2 b g) (@lem4493619 A B t s d p1 p2 b g)). Qed.
Lemma lem4493659 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term519 A B p1 p2 t s d b g) = (term527 A B t s d p1 p2 b g).
Proof. exact (TRANS (@lem4493615 A B t s d p1 p2 b g) (@lem4493628 A B t s d p1 p2 b g)). Qed.
Lemma lem4493660 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) : (term528 A B p1 p2 t s d b) = (term529 A B t s d p1 p2 b).
Proof. exact (fun_ext (fun g : A -> B => @lem4493659 A B t s d p1 p2 b g)). Qed.
Lemma lem4493661 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493662 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) : (term530 A B p1 p2 t s d b) = (term531 A B t s d p1 p2 b).
Proof. exact (MK_COMB (@lem4493661 A B) (@lem4493660 A B t s d p1 p2 b)). Qed.
Lemma lem4493669 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term532 A B p1 p2 t s d) = (term533 A B t s d p1 p2).
Proof. exact (fun_ext (fun b : B => @lem4493662 A B t s d p1 p2 b)). Qed.
Lemma lem4493670 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493671 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term488 A B p1 p2 t s d) = (term534 A B t s d p1 p2).
Proof. exact (MK_COMB (@lem4493670 B) (@lem4493669 A B t s d p1 p2)). Qed.
Lemma lem4493678 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term485 A B p1 p2 t s d) = (term534 A B t s d p1 p2).
Proof. exact (TRANS (@lem4493524 A B p1 p2 t s d) (@lem4493671 A B t s d p1 p2)). Qed.
Lemma lem4493679 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term413 A B x a p1 p2 t s d) = (term535 A B x a t s d p1 p2).
Proof. exact (MK_COMB (@lem4493509 A B x a p1 p2) (@lem4493678 A B t s d p1 p2)). Qed.
Lemma lem4493682 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) : (term415 A B x a p1 t s d) = (term536 A B x a t s d p1).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4493679 A B x a t s d p1 p2)). Qed.
Lemma lem4493683 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493684 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) : (term417 A B x a p1 t s d) = (term537 A B x a t s d p1).
Proof. exact (MK_COMB (@lem4493683 A B) (@lem4493682 A B x a t s d p1)). Qed.
Lemma lem4493691 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term419 A B x a t s d) = (term538 A B x a t s d).
Proof. exact (fun_ext (fun p1 : B => @lem4493684 A B x a t s d p1)). Qed.
Lemma lem4493692 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493693 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term420 A B x a t s d) = (term539 A B x a t s d).
Proof. exact (MK_COMB (@lem4493692 B) (@lem4493691 A B x a t s d)). Qed.
Lemma lem4493700 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term398 A B x a t s d) = (term539 A B x a t s d).
Proof. exact (TRANS (@lem4493384 A B x a t s d) (@lem4493693 A B x a t s d)). Qed.
Lemma lem4493701 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term392 A B x t a s d) = (term398 A B x a t s d)) = ((term363 A B t a s x d) = (term539 A B x a t s d)).
Proof. exact (MK_COMB (@lem4493350 A B t a s x d) (@lem4493700 A B x a t s d)). Qed.
Lemma lem4493706 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term540 A B a t s d) = (term541 A B a t s d).
Proof. exact (fun_ext (fun x : A -> B => @lem4493701 A B x a t s d)). Qed.
Lemma lem4493707 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4493708 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term382 A B a t s d) = (term542 A B a t s d).
Proof. exact (MK_COMB (@lem4493707 A B) (@lem4493706 A B a t s d)). Qed.
Lemma lem4493715 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term369 A B t a s d) = (term375 A B a t s d)) = (term542 A B a t s d).
Proof. exact (TRANS (@lem4493294 A B a t s d) (@lem4493708 A B a t s d)). Qed.
Lemma lem4493716 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term542 A B a t s d) = ((term369 A B t a s d) = (term375 A B a t s d)).
Proof. exact (SYM (@lem4493715 A B a t s d)). Qed.
Lemma lem4493768 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492289 t1 t2 t3) (@lem4492288 t1 t2 t3)). Qed.
Lemma lem4493769 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term513 A B b t s g d) = (term543 A B b t s g d).
Proof. exact (@lem4493768 (@IN B b t) (term174 A B s g t) (term184 A B s g d)). Qed.
Lemma lem4493788 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493789 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term515 A B b t s g d) = (term544 A B b t s g d).
Proof. exact (MK_COMB (@lem4493788) (@lem4493769 A B b t s g d)). Qed.
Lemma lem4493791 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : ((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b).
Proof. exact (EQ_MP (@lem4492301 A B x a y b) (@lem4492300 A B x a y b)). Qed.
Lemma lem4493792 {A B : Type'} (x : B) (a : B) (y : A -> B) (b : A -> B) : ((@pair B (A -> B) x y) = (@pair B (A -> B) a b)) = (term545 A B x a y b).
Proof. exact (@lem4493791 B (A -> B) x a y b). Qed.
Lemma lem4493793 {A B : Type'} (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : ((@pair B (A -> B) p1 p2) = (@pair B (A -> B) b g)) = (term545 A B p1 b p2 g).
Proof. exact (@lem4493792 A B p1 b p2 g). Qed.
Lemma lem4493800 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term527 A B t s d p1 p2 b g) = (term546 A B t s d p1 b p2 g).
Proof. exact (MK_COMB (@lem4493789 A B b t s g d) (@lem4493793 A B p1 b p2 g)). Qed.
Lemma lem4493802 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492289 t1 t2 t3) (@lem4492288 t1 t2 t3)). Qed.
Lemma lem4493803 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term546 A B t s d p1 b p2 g) = (term547 A B t s d p1 b p2 g).
Proof. exact (@lem4493802 (term543 A B b t s g d) (p1 = b) (p2 = g)). Qed.
Lemma lem4493830 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term527 A B t s d p1 p2 b g) = (term547 A B t s d p1 b p2 g).
Proof. exact (TRANS (@lem4493800 A B t s d p1 b p2 g) (@lem4493803 A B t s d p1 b p2 g)). Qed.
Lemma lem4493831 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term529 A B t s d p1 p2 b) = (term548 A B t s d p1 b p2).
Proof. exact (fun_ext (fun g : A -> B => @lem4493830 A B t s d p1 b p2 g)). Qed.
Lemma lem4493832 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493833 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term531 A B t s d p1 p2 b) = (term549 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4493832 A B) (@lem4493831 A B t s d p1 b p2)). Qed.
Lemma lem4493835 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492280 A P a) (@lem4492279 A P a)). Qed.
Lemma lem4493836 {A B : Type'} (P : type572 A B) (a : A -> B) : (term550 A B P a) = (P a).
Proof. exact (@lem4493835 (A -> B) P a). Qed.
Lemma lem4493837 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term551 A B t s d p1 b p2) = (term552 A B t s d p1 b p2).
Proof. exact (@lem4493836 A B (term553 A B t s d p1 b) p2). Qed.
Lemma lem4493838 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (b : B) : (term552 A B t s d p1 b g) = (term554 A B t s g d p1 b).
Proof. exact (eq_refl (term552 A B t s d p1 b g)). Qed.
Lemma lem4493839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493840 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (b : B) : (term555 A B t s d p1 b g) = (term556 A B t s g d p1 b).
Proof. exact (MK_COMB (@lem4493839) (@lem4493838 A B t s g d p1 b)). Qed.
Lemma lem4493841 {A B : Type'} (p2 : A -> B) (g : A -> B) : (p2 = g) = (p2 = g).
Proof. exact (eq_refl (p2 = g)). Qed.
Lemma lem4493842 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term557 A B t s d p1 b p2 g) = (term547 A B t s d p1 b p2 g).
Proof. exact (MK_COMB (@lem4493840 A B t s g d p1 b) (@lem4493841 A B p2 g)). Qed.
Lemma lem4493843 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term558 A B t s d p1 b p2) = (term548 A B t s d p1 b p2).
Proof. exact (fun_ext (fun g : A -> B => @lem4493842 A B t s d p1 b p2 g)). Qed.
Lemma lem4493844 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493845 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term551 A B t s d p1 b p2) = (term549 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4493844 A B) (@lem4493843 A B t s d p1 b p2)). Qed.
Lemma lem4493846 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493847 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term559 A B t s d p1 b p2) = (term560 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4493846) (@lem4493845 A B t s d p1 b p2)). Qed.
Lemma lem4493848 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term552 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b).
Proof. exact (eq_refl (term552 A B t s d p1 b p2)). Qed.
Lemma lem4493849 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : ((term551 A B t s d p1 b p2) = (term552 A B t s d p1 b p2)) = ((term549 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b)).
Proof. exact (MK_COMB (@lem4493847 A B t s d p1 b p2) (@lem4493848 A B t s p2 d p1 b)). Qed.
Lemma lem4493850 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term549 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b).
Proof. exact (EQ_MP (@lem4493849 A B t s p2 d p1 b) (@lem4493837 A B t s d p1 b p2)). Qed.
Lemma lem4493873 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term531 A B t s d p1 p2 b) = (term554 A B t s p2 d p1 b).
Proof. exact (TRANS (@lem4493833 A B t s d p1 b p2) (@lem4493850 A B t s p2 d p1 b)). Qed.
Lemma lem4493874 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term533 A B t s d p1 p2) = (term561 A B t s p2 d p1).
Proof. exact (fun_ext (fun b : B => @lem4493873 A B t s p2 d p1 b)). Qed.
Lemma lem4493875 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493876 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term534 A B t s d p1 p2) = (term562 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4493875 B) (@lem4493874 A B t s p2 d p1)). Qed.
Lemma lem4493878 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492280 A P a) (@lem4492279 A P a)). Qed.
Lemma lem4493879 {B : Type'} (P : B -> Prop) (a : B) : (term12 B P a) = (P a).
Proof. exact (@lem4493878 B P a). Qed.
Lemma lem4493880 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term563 A B t s p2 d p1) = (term564 A B t s p2 d p1).
Proof. exact (@lem4493879 B (term565 A B t s p2 d) p1). Qed.
Lemma lem4493881 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term564 A B t s p2 d b) = (term543 A B b t s p2 d).
Proof. exact (eq_refl (term564 A B t s p2 d b)). Qed.
Lemma lem4493882 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493883 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term566 A B t s p2 d b) = (term544 A B b t s p2 d).
Proof. exact (MK_COMB (@lem4493882) (@lem4493881 A B b t s p2 d)). Qed.
Lemma lem4493884 {B : Type'} (p1 : B) (b : B) : (p1 = b) = (p1 = b).
Proof. exact (eq_refl (p1 = b)). Qed.
Lemma lem4493885 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term567 A B t s p2 d p1 b) = (term554 A B t s p2 d p1 b).
Proof. exact (MK_COMB (@lem4493883 A B b t s p2 d) (@lem4493884 B p1 b)). Qed.
Lemma lem4493886 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term568 A B t s p2 d p1) = (term561 A B t s p2 d p1).
Proof. exact (fun_ext (fun b : B => @lem4493885 A B t s p2 d p1 b)). Qed.
Lemma lem4493887 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493888 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term563 A B t s p2 d p1) = (term562 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4493887 B) (@lem4493886 A B t s p2 d p1)). Qed.
Lemma lem4493889 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4493890 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term569 A B t s p2 d p1) = (term570 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4493889) (@lem4493888 A B t s p2 d p1)). Qed.
Lemma lem4493891 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term564 A B t s p2 d p1) = (term543 A B p1 t s p2 d).
Proof. exact (eq_refl (term564 A B t s p2 d p1)). Qed.
Lemma lem4493892 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : ((term563 A B t s p2 d p1) = (term564 A B t s p2 d p1)) = ((term562 A B t s p2 d p1) = (term543 A B p1 t s p2 d)).
Proof. exact (MK_COMB (@lem4493890 A B t s p2 d p1) (@lem4493891 A B p1 t s p2 d)). Qed.
Lemma lem4493893 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term562 A B t s p2 d p1) = (term543 A B p1 t s p2 d).
Proof. exact (EQ_MP (@lem4493892 A B p1 t s p2 d) (@lem4493880 A B t s p2 d p1)). Qed.
Lemma lem4493912 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term534 A B t s d p1 p2) = (term543 A B p1 t s p2 d).
Proof. exact (TRANS (@lem4493876 A B t s p2 d p1) (@lem4493893 A B p1 t s p2 d)). Qed.
Lemma lem4493913 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (p2 : A -> B) : (term473 A B x a p1 p2) = (term473 A B x a p1 p2).
Proof. exact (eq_refl (term473 A B x a p1 p2)). Qed.
Lemma lem4493914 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term535 A B x a t s d p1 p2) = (term571 A B x a p1 t s p2 d).
Proof. exact (MK_COMB (@lem4493913 A B x a p1 p2) (@lem4493912 A B p1 t s p2 d)). Qed.
Lemma lem4493916 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492289 t1 t2 t3) (@lem4492288 t1 t2 t3)). Qed.
Lemma lem4493917 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term571 A B x a p1 t s p2 d) = (term572 A B x a p1 t s p2 d).
Proof. exact (@lem4493916 (x = (term442 A B a p1 p2)) (term573 A B p1 s p2 t) (term184 A B s p2 d)). Qed.
Lemma lem4493921 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492289 t1 t2 t3) (@lem4492288 t1 t2 t3)). Qed.
Lemma lem4493922 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term574 A B x a p1 s p2 t) = (term575 A B x a p1 s p2 t).
Proof. exact (@lem4493921 (x = (term442 A B a p1 p2)) (@IN B p1 t) (term174 A B s p2 t)). Qed.
Lemma lem4493939 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4493940 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term576 A B x a p1 s p2 t) = (term577 A B x a p1 s p2 t).
Proof. exact (MK_COMB (@lem4493939) (@lem4493922 A B x a p1 s p2 t)). Qed.
Lemma lem4493949 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term184 A B s p2 d) = (term184 A B s p2 d).
Proof. exact (eq_refl (term184 A B s p2 d)). Qed.
Lemma lem4493950 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term572 A B x a p1 t s p2 d) = (term578 A B x a p1 t s p2 d).
Proof. exact (MK_COMB (@lem4493940 A B x a p1 s p2 t) (@lem4493949 A B s p2 d)). Qed.
Lemma lem4493953 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term571 A B x a p1 t s p2 d) = (term578 A B x a p1 t s p2 d).
Proof. exact (TRANS (@lem4493917 A B x a p1 t s p2 d) (@lem4493950 A B x a p1 t s p2 d)). Qed.
Lemma lem4493954 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term535 A B x a t s d p1 p2) = (term578 A B x a p1 t s p2 d).
Proof. exact (TRANS (@lem4493914 A B x a p1 t s p2 d) (@lem4493953 A B x a p1 t s p2 d)). Qed.
Lemma lem4493955 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term536 A B x a t s d p1) = (term579 A B x a p1 t s d).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4493954 A B x a p1 t s p2 d)). Qed.
Lemma lem4493956 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4493957 {A B : Type'} (x : A -> B) (a : A) (p1 : B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term537 A B x a t s d p1) = (term580 A B x a p1 t s d).
Proof. exact (MK_COMB (@lem4493956 A B) (@lem4493955 A B x a p1 t s d)). Qed.
Lemma lem4493962 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term538 A B x a t s d) = (term581 A B x a t s d).
Proof. exact (fun_ext (fun p1 : B => @lem4493957 A B x a p1 t s d)). Qed.
Lemma lem4493963 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4493964 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term539 A B x a t s d) = (term582 A B x a t s d).
Proof. exact (MK_COMB (@lem4493963 B) (@lem4493962 A B x a t s d)). Qed.
Lemma lem4493969 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (x : A -> B) (d : B) : (term395 A B t a s x d) = (term395 A B t a s x d).
Proof. exact (eq_refl (term395 A B t a s x d)). Qed.
Lemma lem4493970 {A B : Type'} (x : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term363 A B t a s x d) = (term539 A B x a t s d)) = ((term363 A B t a s x d) = (term582 A B x a t s d)).
Proof. exact (MK_COMB (@lem4493969 A B t a s x d) (@lem4493964 A B x a t s d)). Qed.
Lemma lem4493973 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term541 A B a t s d) = (term583 A B a t s d).
Proof. exact (fun_ext (fun x : A -> B => @lem4493970 A B x a t s d)). Qed.
Lemma lem4493974 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4493975 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term542 A B a t s d) = (term584 A B a t s d).
Proof. exact (MK_COMB (@lem4493974 A B) (@lem4493973 A B a t s d)). Qed.
Lemma lem4493980 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term584 A B a t s d) = (term542 A B a t s d).
Proof. exact (SYM (@lem4493975 A B a t s d)). Qed.
Lemma lem4493992 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term77 A x y s) = (term78 A y x s).
Proof. exact (EQ_MP (@lem4492235 A y x s) (@lem4492234 A y x s)). Qed.
Lemma lem4493993 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term77 A x y s) = (term78 A y x s).
Proof. exact (@lem4493992 A y x s). Qed.
Lemma lem4493994 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term77 A x a s) = (term78 A a x s).
Proof. exact (@lem4493993 A a x s). Qed.
Lemma lem4493999 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494000 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term353 A x a s) = (term585 A a x s).
Proof. exact (MK_COMB (@lem4493999) (@lem4493994 A a x s)). Qed.
Lemma lem4494001 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term169 A B f x t).
Proof. exact (eq_refl (term169 A B f x t)). Qed.
Lemma lem4494002 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term354 A B a s f x t) = (term586 A B a s f x t).
Proof. exact (MK_COMB (@lem4494000 A a x s) (@lem4494001 A B f x t)). Qed.
Lemma lem4494005 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term355 A B a s f t) = (term587 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4494002 A B a s f x t)). Qed.
Lemma lem4494006 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494007 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term356 A B a s f t) = (term588 A B a s f t).
Proof. exact (MK_COMB (@lem4494006 A) (@lem4494005 A B a s f t)). Qed.
Lemma lem4494012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494013 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term357 A B a s f t) = (term589 A B a s f t).
Proof. exact (MK_COMB (@lem4494012) (@lem4494007 A B a s f t)). Qed.
Lemma lem4494021 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term77 A x y s) = (term78 A y x s).
Proof. exact (EQ_MP (@lem4492235 A y x s) (@lem4492234 A y x s)). Qed.
Lemma lem4494022 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term77 A x y s) = (term78 A y x s).
Proof. exact (@lem4494021 A y x s). Qed.
Lemma lem4494023 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term77 A x a s) = (term78 A a x s).
Proof. exact (@lem4494022 A a x s). Qed.
Lemma lem4494028 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4494029 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term358 A x a s) = (term590 A a x s).
Proof. exact (MK_COMB (@lem4494028) (@lem4494023 A a x s)). Qed.
Lemma lem4494030 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494031 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term359 A x a s) = (term591 A a x s).
Proof. exact (MK_COMB (@lem4494030) (@lem4494029 A a x s)). Qed.
Lemma lem4494034 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((f x) = d).
Proof. exact (eq_refl ((f x) = d)). Qed.
Lemma lem4494035 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term360 A B a s f x d) = (term592 A B a s f x d).
Proof. exact (MK_COMB (@lem4494031 A a x s) (@lem4494034 A B f x d)). Qed.
Lemma lem4494038 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term361 A B a s f d) = (term593 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4494035 A B a s f x d)). Qed.
Lemma lem4494039 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494040 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term362 A B a s f d) = (term594 A B a s f d).
Proof. exact (MK_COMB (@lem4494039 A) (@lem4494038 A B a s f d)). Qed.
Lemma lem4494045 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term363 A B t a s f d) = (term595 A B t a s f d).
Proof. exact (MK_COMB (@lem4494013 A B a s f t) (@lem4494040 A B a s f d)). Qed.
Lemma lem4494048 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4494049 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term395 A B t a s f d) = (term596 A B t a s f d).
Proof. exact (MK_COMB (@lem4494048) (@lem4494045 A B t a s f d)). Qed.
Lemma lem4494084 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term582 A B f a t s d) = (term582 A B f a t s d).
Proof. exact (eq_refl (term582 A B f a t s d)). Qed.
Lemma lem4494085 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term363 A B t a s f d) = (term582 A B f a t s d)) = ((term595 A B t a s f d) = (term582 A B f a t s d)).
Proof. exact (MK_COMB (@lem4494049 A B t a s f d) (@lem4494084 A B f a t s d)). Qed.
Lemma lem4494088 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term595 A B t a s f d) = (term582 A B f a t s d)) = ((term363 A B t a s f d) = (term582 A B f a t s d)).
Proof. exact (SYM (@lem4494085 A B f a t s d)). Qed.
Lemma lem4494089 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term595 A B t a s f d) : term595 A B t a s f d.
Proof. exact (h1). Qed.
Lemma lem4494090 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term594 A B a s f d.
Proof. exact (h1). Qed.
Lemma lem4494091 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term588 A B a s f t.
Proof. exact (h1). Qed.
Lemma lem4494101 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (EQ_MP (@lem4492226 A B f g) (@lem4492225 A B f g)). Qed.
Lemma lem4494102 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (@lem4494101 A B f g). Qed.
Lemma lem4494103 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (f = (term597 A B a s f d)) = (term598 A B a s f d).
Proof. exact (@lem4494102 A B f (term597 A B a s f d)). Qed.
Lemma lem4494113 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4494114 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4494113 A B f y). Qed.
Lemma lem4494115 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term599 A B a s f d x) = (term600 A B a s f d x).
Proof. exact (@lem4494114 A B (term597 A B a s f d) x). Qed.
Lemma lem4494116 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term600 A B a s f d x) = (term601 A B a s f d x).
Proof. exact (eq_refl (term600 A B a s f d x)). Qed.
Lemma lem4494117 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term602 A B a s f d) = (term597 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4494116 A B a s f d x)). Qed.
Lemma lem4494118 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4494119 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term599 A B a s f d x) = (term600 A B a s f d x).
Proof. exact (MK_COMB (@lem4494117 A B a s f d) (@lem4494118 A x)). Qed.
Lemma lem4494120 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494121 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term603 A B a s f d x) = (term604 A B a s f d x).
Proof. exact (MK_COMB (@lem4494120 B) (@lem4494119 A B a s f d x)). Qed.
Lemma lem4494122 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term600 A B a s f d x) = (term601 A B a s f d x).
Proof. exact (eq_refl (term600 A B a s f d x)). Qed.
Lemma lem4494123 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : ((term599 A B a s f d x) = (term600 A B a s f d x)) = ((term600 A B a s f d x) = (term601 A B a s f d x)).
Proof. exact (MK_COMB (@lem4494121 A B a s f d x) (@lem4494122 A B a s f d x)). Qed.
Lemma lem4494124 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term600 A B a s f d x) = (term601 A B a s f d x).
Proof. exact (EQ_MP (@lem4494123 A B a s f d x) (@lem4494115 A B a s f d x)). Qed.
Lemma lem4494132 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4494133 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4494132 A B f y). Qed.
Lemma lem4494134 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (@lem4494133 A B (term607 A B s f d) x). Qed.
Lemma lem4494135 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494136 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term609 A B s f d) = (term607 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4494135 A B s f x d)). Qed.
Lemma lem4494137 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4494138 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (MK_COMB (@lem4494136 A B s f d) (@lem4494137 A x)). Qed.
Lemma lem4494139 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494140 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term610 A B s f d x) = (term611 A B s f d x).
Proof. exact (MK_COMB (@lem4494139 B) (@lem4494138 A B s f d x)). Qed.
Lemma lem4494141 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494142 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((term605 A B s f d x) = (term606 A B s f d x)) = ((term606 A B s f d x) = (term608 A B s f x d)).
Proof. exact (MK_COMB (@lem4494140 A B s f d x) (@lem4494141 A B s f x d)). Qed.
Lemma lem4494143 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (EQ_MP (@lem4494142 A B s f x d) (@lem4494134 A B s f d x)). Qed.
Lemma lem4494144 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term612 A B x f a) = (term612 A B x f a).
Proof. exact (eq_refl (term612 A B x f a)). Qed.
Lemma lem4494145 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term601 A B a s f d x) = (term613 A B a s f x d).
Proof. exact (MK_COMB (@lem4494144 A B x f a) (@lem4494143 A B s f x d)). Qed.
Lemma lem4494148 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term600 A B a s f d x) = (term613 A B a s f x d).
Proof. exact (TRANS (@lem4494124 A B a s f d x) (@lem4494145 A B a s f x d)). Qed.
Lemma lem4494149 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term262 A B f x).
Proof. exact (eq_refl (term262 A B f x)). Qed.
Lemma lem4494150 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((f x) = (term600 A B a s f d x)) = ((f x) = (term613 A B a s f x d)).
Proof. exact (MK_COMB (@lem4494149 A B f x) (@lem4494148 A B a s f x d)). Qed.
Lemma lem4494155 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term614 A B a s f d) = (term615 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4494150 A B a s f x d)). Qed.
Lemma lem4494156 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494157 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term598 A B a s f d) = (term616 A B a s f d).
Proof. exact (MK_COMB (@lem4494156 A) (@lem4494155 A B a s f d)). Qed.
Lemma lem4494162 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (f = (term597 A B a s f d)) = (term616 A B a s f d).
Proof. exact (TRANS (@lem4494103 A B a s f d) (@lem4494157 A B a s f d)). Qed.
Lemma lem4494163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494164 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term617 A B a s f d) = (term618 A B a s f d).
Proof. exact (MK_COMB (@lem4494163) (@lem4494162 A B a s f d)). Qed.
Lemma lem4494165 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term169 A B f a t) = (term169 A B f a t).
Proof. exact (eq_refl (term169 A B f a t)). Qed.
Lemma lem4494166 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term619 A B s d f a t) = (term620 A B s d f a t).
Proof. exact (MK_COMB (@lem4494164 A B a s f d) (@lem4494165 A B f a t)). Qed.
Lemma lem4494169 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494170 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term621 A B s d f a t) = (term622 A B s d f a t).
Proof. exact (MK_COMB (@lem4494169) (@lem4494166 A B s d f a t)). Qed.
Lemma lem4494178 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4494179 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4494178 A B f y). Qed.
Lemma lem4494180 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (@lem4494179 A B (term607 A B s f d) x). Qed.
Lemma lem4494181 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494182 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term609 A B s f d) = (term607 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4494181 A B s f x d)). Qed.
Lemma lem4494183 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4494184 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (MK_COMB (@lem4494182 A B s f d) (@lem4494183 A x)). Qed.
Lemma lem4494185 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494186 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term610 A B s f d x) = (term611 A B s f d x).
Proof. exact (MK_COMB (@lem4494185 B) (@lem4494184 A B s f d x)). Qed.
Lemma lem4494187 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494188 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((term605 A B s f d x) = (term606 A B s f d x)) = ((term606 A B s f d x) = (term608 A B s f x d)).
Proof. exact (MK_COMB (@lem4494186 A B s f d x) (@lem4494187 A B s f x d)). Qed.
Lemma lem4494189 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (EQ_MP (@lem4494188 A B s f x d) (@lem4494180 A B s f d x)). Qed.
Lemma lem4494190 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4494191 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term623 A B s f d x) = (term624 A B s f x d).
Proof. exact (MK_COMB (@lem4494190 B) (@lem4494189 A B s f x d)). Qed.
Lemma lem4494192 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4494193 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) (t : B -> Prop) : (term625 A B s f d x t) = (term626 A B s f x d t).
Proof. exact (MK_COMB (@lem4494191 A B s f x d) (@lem4494192 B t)). Qed.
Lemma lem4494194 {A : Type'} (x : A) (s : A -> Prop) : (term168 A x s) = (term168 A x s).
Proof. exact (eq_refl (term168 A x s)). Qed.
Lemma lem4494195 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) (t : B -> Prop) : (term627 A B s f d x t) = (term628 A B s f x d t).
Proof. exact (MK_COMB (@lem4494194 A x s) (@lem4494193 A B s f x d t)). Qed.
Lemma lem4494198 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term629 A B s f d t) = (term630 A B s f d t).
Proof. exact (fun_ext (fun x : A => @lem4494195 A B s f x d t)). Qed.
Lemma lem4494199 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494200 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term631 A B s f d t) = (term632 A B s f d t).
Proof. exact (MK_COMB (@lem4494199 A) (@lem4494198 A B s f d t)). Qed.
Lemma lem4494205 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term633 A B a s f d t) = (term634 A B a s f d t).
Proof. exact (MK_COMB (@lem4494170 A B s d f a t) (@lem4494200 A B s f d t)). Qed.
Lemma lem4494208 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494209 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term635 A B a s f d t) = (term636 A B a s f d t).
Proof. exact (MK_COMB (@lem4494208) (@lem4494205 A B a s f d t)). Qed.
Lemma lem4494221 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4494222 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4494221 A B f y). Qed.
Lemma lem4494223 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (@lem4494222 A B (term607 A B s f d) x). Qed.
Lemma lem4494224 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494225 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term609 A B s f d) = (term607 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4494224 A B s f x d)). Qed.
Lemma lem4494226 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4494227 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term605 A B s f d x) = (term606 A B s f d x).
Proof. exact (MK_COMB (@lem4494225 A B s f d) (@lem4494226 A x)). Qed.
Lemma lem4494228 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494229 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) : (term610 A B s f d x) = (term611 A B s f d x).
Proof. exact (MK_COMB (@lem4494228 B) (@lem4494227 A B s f d x)). Qed.
Lemma lem4494230 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (eq_refl (term606 A B s f d x)). Qed.
Lemma lem4494231 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((term605 A B s f d x) = (term606 A B s f d x)) = ((term606 A B s f d x) = (term608 A B s f x d)).
Proof. exact (MK_COMB (@lem4494229 A B s f d x) (@lem4494230 A B s f x d)). Qed.
Lemma lem4494232 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term606 A B s f d x) = (term608 A B s f x d).
Proof. exact (EQ_MP (@lem4494231 A B s f x d) (@lem4494223 A B s f d x)). Qed.
Lemma lem4494233 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494234 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term611 A B s f d x) = (term637 A B s f x d).
Proof. exact (MK_COMB (@lem4494233 B) (@lem4494232 A B s f x d)). Qed.
Lemma lem4494235 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494236 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((term606 A B s f d x) = d) = ((term608 A B s f x d) = d).
Proof. exact (MK_COMB (@lem4494234 A B s f x d) (@lem4494235 B d)). Qed.
Lemma lem4494241 {A : Type'} (x : A) (s : A -> Prop) : (term179 A x s) = (term179 A x s).
Proof. exact (eq_refl (term179 A x s)). Qed.
Lemma lem4494242 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term638 A B s f x d) = (term639 A B s f x d).
Proof. exact (MK_COMB (@lem4494241 A x s) (@lem4494236 A B s f x d)). Qed.
Lemma lem4494245 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term640 A B s f d) = (term641 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4494242 A B s f x d)). Qed.
Lemma lem4494246 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494247 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term642 A B s f d) = (term643 A B s f d).
Proof. exact (MK_COMB (@lem4494246 A) (@lem4494245 A B s f d)). Qed.
Lemma lem4494252 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term644 A B a t s f d) = (term645 A B a t s f d).
Proof. exact (MK_COMB (@lem4494209 A B a s f d t) (@lem4494247 A B s f d)). Qed.
Lemma lem4494255 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term645 A B a t s f d) = (term644 A B a t s f d).
Proof. exact (SYM (@lem4494252 A B a t s f d)). Qed.
Lemma lem4494257 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4494258 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term645 A B a t s f d) = (term647 A B a t s f d).
Proof. exact (@lem4494257 (term645 A B a t s f d)). Qed.
Lemma lem4494259 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term647 A B a t s f d) = (term645 A B a t s f d).
Proof. exact (SYM (@lem4494258 A B a t s f d)). Qed.
Lemma lem4494260 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term648 A B a t s f d) : term648 A B a t s f d.
Proof. exact (h1). Qed.
Lemma lem4494263 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term649 A B s0 n m a t s f d) : term649 A B s0 n m a t s f d.
Proof. exact (h1). Qed.
Lemma lem4494264 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term650 A B s0 n m a t s f d.
Proof. exact (fun h0 : term649 A B s0 n m a t s f d => @lem4494263 A B s0 n m a t s f d h0). Qed.
Lemma lem4494265 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term650 A B s0 n m a t s f d) : term650 A B s0 n m a t s f d.
Proof. exact (h1). Qed.
Lemma lem4494266 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term649 A B s0 n m a t s f d) : term649 A B s0 n m a t s f d.
Proof. exact (h1). Qed.
Lemma lem4494267 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term650 A B s0 n m a t s f d) (h2 : term649 A B s0 n m a t s f d) : term649 A B s0 n m a t s f d.
Proof. exact (@lem4494265 A B s0 n m a t s f d h1 (@lem4494266 A B s0 n m a t s f d h2)). Qed.
Lemma lem4494268 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term649 A B s0 n m a t s f d) : term651 A B s0 n m a t s f d.
Proof. exact (fun h0 : term650 A B s0 n m a t s f d => @lem4494267 A B s0 n m a t s f d h0 h1). Qed.
Lemma lem4494269 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term650 A B s0 n m a t s f d) : term650 A B s0 n m a t s f d.
Proof. exact (h1). Qed.
Lemma lem4494270 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term650 A B s0 n m a t s f d) (h2 : term649 A B s0 n m a t s f d) : term649 A B s0 n m a t s f d.
Proof. exact (@lem4494268 A B s0 n m a t s f d h2 (@lem4494269 A B s0 n m a t s f d h1)). Qed.
Lemma lem4494271 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term650 A B s0 n m a t s f d) : term650 A B s0 n m a t s f d.
Proof. exact (fun h0 : term649 A B s0 n m a t s f d => @lem4494270 A B s0 n m a t s f d h1 h0). Qed.
Lemma lem4494272 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term652 A B s0 n m a t s f d.
Proof. exact (fun h0 : term650 A B s0 n m a t s f d => @lem4494271 A B s0 n m a t s f d h0). Qed.
Lemma lem4494275 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term650 A B s0 n m a t s f d.
Proof. exact (@lem4494272 A B s0 n m a t s f d (@lem4494264 A B s0 n m a t s f d)). Qed.
Lemma lem4494276 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term650 A B s0 n m a t s f d.
Proof. exact (@lem4494275 A B s0 n m a t s f d). Qed.
Lemma lem4494358 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4494359 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term647 A B a t s f d) = (term653 A B a t s f d).
Proof. exact (@lem4494358 (term648 A B a t s f d)). Qed.
Lemma lem4494361 (t : Prop) : (term654 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem4494362 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term653 A B a t s f d) = (term645 A B a t s f d).
Proof. exact (@lem4494361 (term645 A B a t s f d)). Qed.
Lemma lem4494365 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term647 A B a t s f d) = (term645 A B a t s f d).
Proof. exact (TRANS (@lem4494359 A B a t s f d) (@lem4494362 A B a t s f d)). Qed.
Lemma lem4494386 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term655 A B a s f d) = (term655 A B a s f d).
Proof. exact (eq_refl (term655 A B a s f d)). Qed.
Lemma lem4494387 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term656 A B a t s f d) = (term657 A B a t s f d).
Proof. exact (MK_COMB (@lem4494386 A B a s f d) (@lem4494365 A B a t s f d)). Qed.
Lemma lem4494390 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term658 A B a s f t) = (term658 A B a s f t).
Proof. exact (eq_refl (term658 A B a s f t)). Qed.
Lemma lem4494391 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term659 A B a t s f d) = (term660 A B a t s f d).
Proof. exact (MK_COMB (@lem4494390 A B a s f t) (@lem4494387 A B a t s f d)). Qed.
Lemma lem4494394 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term352 A B t s d n m) = (term352 A B t s d n m).
Proof. exact (eq_refl (term352 A B t s d n m)). Qed.
Lemma lem4494395 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term661 A B n m a t s f d) = (term662 A B n m a t s f d).
Proof. exact (MK_COMB (@lem4494394 A B t s d n m) (@lem4494391 A B a t s f d)). Qed.
Lemma lem4494398 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4494399 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term664 A B n m a t s f d) = (term665 A B n m a t s f d).
Proof. exact (MK_COMB (@lem4494398 B t n) (@lem4494395 A B n m a t s f d)). Qed.
Lemma lem4494402 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4494403 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term667 A B s0 n m a t s f d) = (term668 A B s0 n m a t s f d).
Proof. exact (MK_COMB (@lem4494402 A s0 a s) (@lem4494399 A B n m a t s f d)). Qed.
Lemma lem4494406 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4494407 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term669 A B s0 n m a t s f d) = (term670 A B s0 n m a t s f d).
Proof. exact (MK_COMB (@lem4494406 A a s) (@lem4494403 A B s0 n m a t s f d)). Qed.
Lemma lem4494410 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4494411 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term649 A B s0 n m a t s f d) = (term671 A B s0 n m a t s f d).
Proof. exact (MK_COMB (@lem4494410 A s m) (@lem4494407 A B s0 n m a t s f d)). Qed.
Lemma lem4494414 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term672 A B n m a t s f d) = (term673 A B n m a t s f d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4494411 A B s0 n m a t s f d)). Qed.
Lemma lem4494415 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494416 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term674 A B n m a t s f d) = (term675 A B n m a t s f d).
Proof. exact (MK_COMB (@lem4494415 A) (@lem4494414 A B n m a t s f d)). Qed.
Lemma lem4494421 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term676 A B m a t s f d) = (term677 A B m a t s f d).
Proof. exact (fun_ext (fun n : nat => @lem4494416 A B n m a t s f d)). Qed.
Lemma lem4494422 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4494423 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term678 A B m a t s f d) = (term679 A B m a t s f d).
Proof. exact (MK_COMB (@lem4494422) (@lem4494421 A B m a t s f d)). Qed.
Lemma lem4494428 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term680 A B a t s f d) = (term681 A B a t s f d).
Proof. exact (fun_ext (fun m : nat => @lem4494423 A B m a t s f d)). Qed.
Lemma lem4494429 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4494430 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term682 A B a t s f d) = (term683 A B a t s f d).
Proof. exact (MK_COMB (@lem4494429) (@lem4494428 A B a t s f d)). Qed.
Lemma lem4494435 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term684 A B t s f d) = (term685 A B t s f d).
Proof. exact (fun_ext (fun a : A => @lem4494430 A B a t s f d)). Qed.
Lemma lem4494436 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494437 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term686 A B t s f d) = (term687 A B t s f d).
Proof. exact (MK_COMB (@lem4494436 A) (@lem4494435 A B t s f d)). Qed.
Lemma lem4494442 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term688 A B s f d) = (term689 A B s f d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4494437 A B t s f d)). Qed.
Lemma lem4494443 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4494444 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term690 A B s f d) = (term691 A B s f d).
Proof. exact (MK_COMB (@lem4494443 B) (@lem4494442 A B s f d)). Qed.
Lemma lem4494449 {A B : Type'} (f : A -> B) (d : B) : (term692 A B f d) = (term693 A B f d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4494444 A B s f d)). Qed.
Lemma lem4494450 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494451 {A B : Type'} (f : A -> B) (d : B) : (term694 A B f d) = (term695 A B f d).
Proof. exact (MK_COMB (@lem4494450 A) (@lem4494449 A B f d)). Qed.
Lemma lem4494456 {A B : Type'} (d : B) : (term696 A B d) = (term697 A B d).
Proof. exact (fun_ext (fun f : A -> B => @lem4494451 A B f d)). Qed.
Lemma lem4494457 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4494458 {A B : Type'} (d : B) : (term698 A B d) = (term699 A B d).
Proof. exact (MK_COMB (@lem4494457 A B) (@lem4494456 A B d)). Qed.
Lemma lem4494463 {A B : Type'} : (term700 A B) = (term701 A B).
Proof. exact (fun_ext (fun d : B => @lem4494458 A B d)). Qed.
Lemma lem4494464 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4494471 {A B : Type'} : (term702 A B) = (term703 A B).
Proof. exact (MK_COMB (@lem4494464 B) (@lem4494463 A B)). Qed.
Lemma lem4494472 {A B : Type'} (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : _52327 = (term704 A B).
Proof. exact (h1). Qed.
Lemma lem4494473 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4494474 {A B : Type'} (t : B -> Prop) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t) = (term705 A B t).
Proof. exact (MK_COMB (@lem4494472 A B _52327 h1) (@lem4494473 B t)). Qed.
Lemma lem4494475 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4494476 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term707 A B _52327 t) = (term707 A B _52327 t).
Proof. exact (eq_refl (term707 A B _52327 t)). Qed.
Lemma lem4494477 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term705 A B t)) = ((_52327 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4494476 A B _52327 t) (@lem4494475 A B t)). Qed.
Lemma lem4494478 {A B : Type'} (t : B -> Prop) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t) = (term706 A B t).
Proof. exact (EQ_MP (@lem4494477 A B _52327 t) (@lem4494474 A B t _52327 h1)). Qed.
Lemma lem4494479 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4494480 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t s) = (term708 A B t s).
Proof. exact (MK_COMB (@lem4494478 A B t _52327 h1) (@lem4494479 A s)). Qed.
Lemma lem4494481 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4494482 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _52327 t s) = (term710 A B _52327 t s).
Proof. exact (eq_refl (term710 A B _52327 t s)). Qed.
Lemma lem4494483 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term708 A B t s)) = ((_52327 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4494482 A B _52327 t s) (@lem4494481 A B t s)). Qed.
Lemma lem4494484 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t s) = (term709 A B t s).
Proof. exact (EQ_MP (@lem4494483 A B _52327 t s) (@lem4494480 A B t s _52327 h1)). Qed.
Lemma lem4494485 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494486 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t s d) = (term711 A B t s d).
Proof. exact (MK_COMB (@lem4494484 A B t s _52327 h1) (@lem4494485 B d)). Qed.
Lemma lem4494487 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4494488 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _52327 t s d) = (term712 A B _52327 t s d).
Proof. exact (eq_refl (term712 A B _52327 t s d)). Qed.
Lemma lem4494489 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term711 A B t s d)) = ((_52327 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4494488 A B _52327 t s d) (@lem4494487 A B t s d)). Qed.
Lemma lem4494490 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (_52327 t s d) = (term196 A B t s d).
Proof. exact (EQ_MP (@lem4494489 A B _52327 t s d) (@lem4494486 A B t s d _52327 h1)). Qed.
Lemma lem4494518 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term639 A B s f x d) = (term639 A B s f x d).
Proof. exact (eq_refl (term639 A B s f x d)). Qed.
Lemma lem4494519 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term641 A B s f d) = (term641 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4494518 A B s f x d)). Qed.
Lemma lem4494520 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494521 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term643 A B s f d) = (term643 A B s f d).
Proof. exact (MK_COMB (@lem4494520 A) (@lem4494519 A B s f d)). Qed.
Lemma lem4494546 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) (t : B -> Prop) : (term628 A B s f x d t) = (term628 A B s f x d t).
Proof. exact (eq_refl (term628 A B s f x d t)). Qed.
Lemma lem4494547 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term630 A B s f d t) = (term630 A B s f d t).
Proof. exact (fun_ext (fun x : A => @lem4494546 A B s f x d t)). Qed.
Lemma lem4494548 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494549 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term632 A B s f d t) = (term632 A B s f d t).
Proof. exact (MK_COMB (@lem4494548 A) (@lem4494547 A B s f d t)). Qed.
Lemma lem4494556 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term169 A B f a t) = (term169 A B f a t).
Proof. exact (eq_refl (term169 A B f a t)). Qed.
Lemma lem4494587 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((f x) = (term613 A B a s f x d)) = ((f x) = (term613 A B a s f x d)).
Proof. exact (eq_refl ((f x) = (term613 A B a s f x d))). Qed.
Lemma lem4494588 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term615 A B a s f d) = (term615 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4494587 A B a s f x d)). Qed.
Lemma lem4494589 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494590 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term616 A B a s f d) = (term616 A B a s f d).
Proof. exact (MK_COMB (@lem4494589 A) (@lem4494588 A B a s f d)). Qed.
Lemma lem4494591 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494592 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term618 A B a s f d) = (term618 A B a s f d).
Proof. exact (MK_COMB (@lem4494591) (@lem4494590 A B a s f d)). Qed.
Lemma lem4494593 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term620 A B s d f a t) = (term620 A B s d f a t).
Proof. exact (MK_COMB (@lem4494592 A B a s f d) (@lem4494556 A B f a t)). Qed.
Lemma lem4494594 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494595 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term622 A B s d f a t) = (term622 A B s d f a t).
Proof. exact (MK_COMB (@lem4494594) (@lem4494593 A B s d f a t)). Qed.
Lemma lem4494596 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term634 A B a s f d t) = (term634 A B a s f d t).
Proof. exact (MK_COMB (@lem4494595 A B s d f a t) (@lem4494549 A B s f d t)). Qed.
Lemma lem4494597 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494598 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : (term636 A B a s f d t) = (term636 A B a s f d t).
Proof. exact (MK_COMB (@lem4494597) (@lem4494596 A B a s f d t)). Qed.
Lemma lem4494599 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term645 A B a t s f d) = (term645 A B a t s f d).
Proof. exact (MK_COMB (@lem4494598 A B a s f d t) (@lem4494521 A B s f d)). Qed.
Lemma lem4494624 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term592 A B a s f x d) = (term592 A B a s f x d).
Proof. exact (eq_refl (term592 A B a s f x d)). Qed.
Lemma lem4494625 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term593 A B a s f d) = (term593 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4494624 A B a s f x d)). Qed.
Lemma lem4494626 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494627 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term594 A B a s f d) = (term594 A B a s f d).
Proof. exact (MK_COMB (@lem4494626 A) (@lem4494625 A B a s f d)). Qed.
Lemma lem4494628 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494629 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term655 A B a s f d) = (term655 A B a s f d).
Proof. exact (MK_COMB (@lem4494628) (@lem4494627 A B a s f d)). Qed.
Lemma lem4494630 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term657 A B a t s f d) = (term657 A B a t s f d).
Proof. exact (MK_COMB (@lem4494629 A B a s f d) (@lem4494599 A B a t s f d)). Qed.
Lemma lem4494653 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term586 A B a s f x t) = (term586 A B a s f x t).
Proof. exact (eq_refl (term586 A B a s f x t)). Qed.
Lemma lem4494654 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term587 A B a s f t) = (term587 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4494653 A B a s f x t)). Qed.
Lemma lem4494655 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494656 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term588 A B a s f t) = (term588 A B a s f t).
Proof. exact (MK_COMB (@lem4494655 A) (@lem4494654 A B a s f t)). Qed.
Lemma lem4494657 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494658 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term658 A B a s f t) = (term658 A B a s f t).
Proof. exact (MK_COMB (@lem4494657) (@lem4494656 A B a s f t)). Qed.
Lemma lem4494659 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term660 A B a t s f d) = (term660 A B a t s f d).
Proof. exact (MK_COMB (@lem4494658 A B a s f t) (@lem4494630 A B a t s f d)). Qed.
Lemma lem4494664 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4494666 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term196 A B t s d) = (_52327 t s d).
Proof. exact (SYM (@lem4494490 A B t s d _52327 h1)). Qed.
Lemma lem4494667 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term196 A B t s d) = (_52327 t s d).
Proof. exact (@lem4494666 A B t s d _52327 h1). Qed.
Lemma lem4494668 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4494669 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term198 A B t s d) = (term713 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4494668 A B) (@lem4494667 A B t s d _52327 h1)). Qed.
Lemma lem4494670 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4494671 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term200 A B t s d) = (term714 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4494670 A B) (@lem4494669 A B t s d _52327 h1)). Qed.
Lemma lem4494672 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term349 A B t s d n m) = (term715 A B _52327 t s d n m).
Proof. exact (MK_COMB (@lem4494671 A B t s d _52327 h1) (@lem4494664 n m)). Qed.
Lemma lem4494673 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494674 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term352 A B t s d n m) = (term716 A B _52327 t s d n m).
Proof. exact (MK_COMB (@lem4494673) (@lem4494672 A B t s d n m _52327 h1)). Qed.
Lemma lem4494675 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term662 A B n m a t s f d) = (term717 A B _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494674 A B t s d n m _52327 h1) (@lem4494659 A B a t s f d)). Qed.
Lemma lem4494682 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4494683 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term665 A B n m a t s f d) = (term718 A B _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494682 B t n) (@lem4494675 A B n m a t s f d _52327 h1)). Qed.
Lemma lem4494694 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4494695 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term668 A B s0 n m a t s f d) = (term719 A B s0 _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494694 A s0 a s) (@lem4494683 A B n m a t s f d _52327 h1)). Qed.
Lemma lem4494704 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4494705 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term670 A B s0 n m a t s f d) = (term720 A B s0 _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494704 A a s) (@lem4494695 A B s0 n m a t s f d _52327 h1)). Qed.
Lemma lem4494712 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4494713 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term671 A B s0 n m a t s f d) = (term721 A B s0 _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494712 A s m) (@lem4494705 A B s0 n m a t s f d _52327 h1)). Qed.
Lemma lem4494714 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term673 A B n m a t s f d) = (term722 A B _52327 n m a t s f d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4494713 A B s0 n m a t s f d _52327 h1)). Qed.
Lemma lem4494715 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494716 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term675 A B n m a t s f d) = (term723 A B _52327 n m a t s f d).
Proof. exact (MK_COMB (@lem4494715 A) (@lem4494714 A B n m a t s f d _52327 h1)). Qed.
Lemma lem4494717 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term677 A B m a t s f d) = (term724 A B _52327 m a t s f d).
Proof. exact (fun_ext (fun n : nat => @lem4494716 A B n m a t s f d _52327 h1)). Qed.
Lemma lem4494718 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4494719 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term679 A B m a t s f d) = (term725 A B _52327 m a t s f d).
Proof. exact (MK_COMB (@lem4494718) (@lem4494717 A B m a t s f d _52327 h1)). Qed.
Lemma lem4494720 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term681 A B a t s f d) = (term726 A B _52327 a t s f d).
Proof. exact (fun_ext (fun m : nat => @lem4494719 A B m a t s f d _52327 h1)). Qed.
Lemma lem4494721 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4494722 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term683 A B a t s f d) = (term727 A B _52327 a t s f d).
Proof. exact (MK_COMB (@lem4494721) (@lem4494720 A B a t s f d _52327 h1)). Qed.
Lemma lem4494723 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term685 A B t s f d) = (term728 A B _52327 t s f d).
Proof. exact (fun_ext (fun a : A => @lem4494722 A B a t s f d _52327 h1)). Qed.
Lemma lem4494724 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494725 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term687 A B t s f d) = (term729 A B _52327 t s f d).
Proof. exact (MK_COMB (@lem4494724 A) (@lem4494723 A B t s f d _52327 h1)). Qed.
Lemma lem4494726 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term689 A B s f d) = (term730 A B _52327 s f d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4494725 A B t s f d _52327 h1)). Qed.
Lemma lem4494727 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4494728 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term691 A B s f d) = (term731 A B _52327 s f d).
Proof. exact (MK_COMB (@lem4494727 B) (@lem4494726 A B s f d _52327 h1)). Qed.
Lemma lem4494729 {A B : Type'} (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term693 A B f d) = (term732 A B _52327 f d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4494728 A B s f d _52327 h1)). Qed.
Lemma lem4494730 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494731 {A B : Type'} (f : A -> B) (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term695 A B f d) = (term733 A B _52327 f d).
Proof. exact (MK_COMB (@lem4494730 A) (@lem4494729 A B f d _52327 h1)). Qed.
Lemma lem4494732 {A B : Type'} (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term697 A B d) = (term734 A B _52327 d).
Proof. exact (fun_ext (fun f : A -> B => @lem4494731 A B f d _52327 h1)). Qed.
Lemma lem4494733 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4494734 {A B : Type'} (d : B) (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term699 A B d) = (term735 A B _52327 d).
Proof. exact (MK_COMB (@lem4494733 A B) (@lem4494732 A B d _52327 h1)). Qed.
Lemma lem4494735 {A B : Type'} (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term701 A B) = (term736 A B _52327).
Proof. exact (fun_ext (fun d : B => @lem4494734 A B d _52327 h1)). Qed.
Lemma lem4494736 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4494737 {A B : Type'} (_52327 : type839 A B) (h1 : _52327 = (term704 A B)) : (term703 A B) = (term737 A B _52327).
Proof. exact (MK_COMB (@lem4494736 B) (@lem4494735 A B _52327 h1)). Qed.
Lemma lem4494738 {A B : Type'} (_52327 : type839 A B) : term738 A B _52327.
Proof. exact (fun h0 : _52327 = (term704 A B) => @lem4494737 A B _52327 h0). Qed.
Lemma lem4494739 {A B : Type'} : term739 A B.
Proof. exact (fun _52327 : type839 A B => @lem4494738 A B _52327). Qed.
Lemma lem4494741 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4494742 {A B : Type'} (P : Prop) (c : type839 A B) (Q : type214 A B) : term741 A B P c Q.
Proof. exact (@lem4494741 (type839 A B) P c Q). Qed.
Lemma lem4494743 {A B : Type'} : term742 A B.
Proof. exact (@lem4494742 A B (term703 A B) (term704 A B) (term743 A B)). Qed.
Lemma lem4494744 {A B : Type'} (_52327 : type839 A B) : (term744 A B _52327) = (term737 A B _52327).
Proof. exact (eq_refl (term744 A B _52327)). Qed.
Lemma lem4494745 {A B : Type'} : (term745 A B) = (term745 A B).
Proof. exact (eq_refl (term745 A B)). Qed.
Lemma lem4494746 {A B : Type'} (_52327 : type839 A B) : ((term703 A B) = (term744 A B _52327)) = ((term703 A B) = (term737 A B _52327)).
Proof. exact (MK_COMB (@lem4494745 A B) (@lem4494744 A B _52327)). Qed.
Lemma lem4494747 {A B : Type'} (_52327 : type839 A B) : (term746 A B _52327) = (term746 A B _52327).
Proof. exact (eq_refl (term746 A B _52327)). Qed.
Lemma lem4494748 {A B : Type'} (_52327 : type839 A B) : (term747 A B _52327) = (term738 A B _52327).
Proof. exact (MK_COMB (@lem4494747 A B _52327) (@lem4494746 A B _52327)). Qed.
Lemma lem4494749 {A B : Type'} : (term748 A B) = (term749 A B).
Proof. exact (fun_ext (fun _52327 : type839 A B => @lem4494748 A B _52327)). Qed.
Lemma lem4494750 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4494751 {A B : Type'} : (term750 A B) = (term739 A B).
Proof. exact (MK_COMB (@lem4494750 A B) (@lem4494749 A B)). Qed.
Lemma lem4494752 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494753 {A B : Type'} : (term751 A B) = (term752 A B).
Proof. exact (MK_COMB (@lem4494752) (@lem4494751 A B)). Qed.
Lemma lem4494754 {A B : Type'} (_52327 : type839 A B) : (term744 A B _52327) = (term737 A B _52327).
Proof. exact (eq_refl (term744 A B _52327)). Qed.
Lemma lem4494755 {A B : Type'} (_52327 : type839 A B) : (term746 A B _52327) = (term746 A B _52327).
Proof. exact (eq_refl (term746 A B _52327)). Qed.
Lemma lem4494756 {A B : Type'} (_52327 : type839 A B) : (term753 A B _52327) = (term754 A B _52327).
Proof. exact (MK_COMB (@lem4494755 A B _52327) (@lem4494754 A B _52327)). Qed.
Lemma lem4494757 {A B : Type'} : (term755 A B) = (term756 A B).
Proof. exact (fun_ext (fun _52327 : type839 A B => @lem4494756 A B _52327)). Qed.
Lemma lem4494758 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4494759 {A B : Type'} : (term757 A B) = (term758 A B).
Proof. exact (MK_COMB (@lem4494758 A B) (@lem4494757 A B)). Qed.
Lemma lem4494760 {A B : Type'} : (term745 A B) = (term745 A B).
Proof. exact (eq_refl (term745 A B)). Qed.
Lemma lem4494761 {A B : Type'} : ((term703 A B) = (term757 A B)) = ((term703 A B) = (term758 A B)).
Proof. exact (MK_COMB (@lem4494760 A B) (@lem4494759 A B)). Qed.
Lemma lem4494762 {A B : Type'} : (term742 A B) = (term759 A B).
Proof. exact (MK_COMB (@lem4494753 A B) (@lem4494761 A B)). Qed.
Lemma lem4494763 {A B : Type'} : term759 A B.
Proof. exact (EQ_MP (@lem4494762 A B) (@lem4494743 A B)). Qed.
Lemma lem4494764 {A B : Type'} : (term703 A B) = (term758 A B).
Proof. exact (@lem4494763 A B (@lem4494739 A B)). Qed.
Lemma lem4494766 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4494767 {A B : Type'} (s : type839 A B) (t : type839 A B) : (s = (term762 A B t)) = (term763 A B s t).
Proof. exact (@lem4494766 (type674 A B) (B -> Prop) s t). Qed.
Lemma lem4494768 {A B : Type'} (_52327 : type839 A B) : (_52327 = (term764 A B)) = (term765 A B _52327).
Proof. exact (@lem4494767 A B _52327 (term704 A B)). Qed.
Lemma lem4494769 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4494770 {A B : Type'} : (term764 A B) = (term704 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4494769 A B t)). Qed.
Lemma lem4494771 {A B : Type'} (_52327 : type839 A B) : (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _52327) = (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _52327).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _52327)). Qed.
Lemma lem4494772 {A B : Type'} (_52327 : type839 A B) : (_52327 = (term764 A B)) = (_52327 = (term704 A B)).
Proof. exact (MK_COMB (@lem4494771 A B _52327) (@lem4494770 A B)). Qed.
Lemma lem4494773 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4494774 {A B : Type'} (_52327 : type839 A B) : (term766 A B _52327) = (term767 A B _52327).
Proof. exact (MK_COMB (@lem4494773) (@lem4494772 A B _52327)). Qed.
Lemma lem4494775 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4494776 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term707 A B _52327 t) = (term707 A B _52327 t).
Proof. exact (eq_refl (term707 A B _52327 t)). Qed.
Lemma lem4494777 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term705 A B t)) = ((_52327 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4494776 A B _52327 t) (@lem4494775 A B t)). Qed.
Lemma lem4494778 {A B : Type'} (_52327 : type839 A B) : (term768 A B _52327) = (term769 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4494777 A B _52327 t)). Qed.
Lemma lem4494779 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4494780 {A B : Type'} (_52327 : type839 A B) : (term765 A B _52327) = (term770 A B _52327).
Proof. exact (MK_COMB (@lem4494779 B) (@lem4494778 A B _52327)). Qed.
Lemma lem4494781 {A B : Type'} (_52327 : type839 A B) : ((_52327 = (term764 A B)) = (term765 A B _52327)) = ((_52327 = (term704 A B)) = (term770 A B _52327)).
Proof. exact (MK_COMB (@lem4494774 A B _52327) (@lem4494780 A B _52327)). Qed.
Lemma lem4494782 {A B : Type'} (_52327 : type839 A B) : (_52327 = (term704 A B)) = (term770 A B _52327).
Proof. exact (EQ_MP (@lem4494781 A B _52327) (@lem4494768 A B _52327)). Qed.
Lemma lem4494784 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4494785 {A B : Type'} (s : type674 A B) (t : type674 A B) : (s = (term771 A B t)) = (term772 A B s t).
Proof. exact (@lem4494784 (type1446 A B) (A -> Prop) s t). Qed.
Lemma lem4494786 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term773 A B t)) = (term774 A B _52327 t).
Proof. exact (@lem4494785 A B (_52327 t) (term706 A B t)). Qed.
Lemma lem4494787 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4494788 {A B : Type'} (t : B -> Prop) : (term773 A B t) = (term706 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4494787 A B t s)). Qed.
Lemma lem4494789 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term707 A B _52327 t) = (term707 A B _52327 t).
Proof. exact (eq_refl (term707 A B _52327 t)). Qed.
Lemma lem4494790 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term773 A B t)) = ((_52327 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4494789 A B _52327 t) (@lem4494788 A B t)). Qed.
Lemma lem4494791 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4494792 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term775 A B _52327 t) = (term776 A B _52327 t).
Proof. exact (MK_COMB (@lem4494791) (@lem4494790 A B _52327 t)). Qed.
Lemma lem4494793 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4494794 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _52327 t s) = (term710 A B _52327 t s).
Proof. exact (eq_refl (term710 A B _52327 t s)). Qed.
Lemma lem4494795 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term708 A B t s)) = ((_52327 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4494794 A B _52327 t s) (@lem4494793 A B t s)). Qed.
Lemma lem4494796 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term777 A B _52327 t) = (term778 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4494795 A B _52327 t s)). Qed.
Lemma lem4494797 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494798 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term774 A B _52327 t) = (term779 A B _52327 t).
Proof. exact (MK_COMB (@lem4494797 A) (@lem4494796 A B _52327 t)). Qed.
Lemma lem4494799 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (((_52327 t) = (term773 A B t)) = (term774 A B _52327 t)) = (((_52327 t) = (term706 A B t)) = (term779 A B _52327 t)).
Proof. exact (MK_COMB (@lem4494792 A B _52327 t) (@lem4494798 A B _52327 t)). Qed.
Lemma lem4494800 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term706 A B t)) = (term779 A B _52327 t).
Proof. exact (EQ_MP (@lem4494799 A B _52327 t) (@lem4494786 A B _52327 t)). Qed.
Lemma lem4494802 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4494803 {A B : Type'} (s : type1446 A B) (t : type1446 A B) : (s = (term780 A B t)) = (term781 A B s t).
Proof. exact (@lem4494802 (type572 A B) B s t). Qed.
Lemma lem4494804 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term782 A B t s)) = (term783 A B _52327 t s).
Proof. exact (@lem4494803 A B (_52327 t s) (term709 A B t s)). Qed.
Lemma lem4494805 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4494806 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term782 A B t s) = (term709 A B t s).
Proof. exact (fun_ext (fun d : B => @lem4494805 A B t s d)). Qed.
Lemma lem4494807 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _52327 t s) = (term710 A B _52327 t s).
Proof. exact (eq_refl (term710 A B _52327 t s)). Qed.
Lemma lem4494808 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term782 A B t s)) = ((_52327 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4494807 A B _52327 t s) (@lem4494806 A B t s)). Qed.
Lemma lem4494809 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4494810 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term784 A B _52327 t s) = (term785 A B _52327 t s).
Proof. exact (MK_COMB (@lem4494809) (@lem4494808 A B _52327 t s)). Qed.
Lemma lem4494811 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4494812 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _52327 t s d) = (term712 A B _52327 t s d).
Proof. exact (eq_refl (term712 A B _52327 t s d)). Qed.
Lemma lem4494813 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term711 A B t s d)) = ((_52327 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4494812 A B _52327 t s d) (@lem4494811 A B t s d)). Qed.
Lemma lem4494814 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term786 A B _52327 t s) = (term787 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4494813 A B _52327 t s d)). Qed.
Lemma lem4494815 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4494816 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term783 A B _52327 t s) = (term788 A B _52327 t s).
Proof. exact (MK_COMB (@lem4494815 B) (@lem4494814 A B _52327 t s)). Qed.
Lemma lem4494817 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (((_52327 t s) = (term782 A B t s)) = (term783 A B _52327 t s)) = (((_52327 t s) = (term709 A B t s)) = (term788 A B _52327 t s)).
Proof. exact (MK_COMB (@lem4494810 A B _52327 t s) (@lem4494816 A B _52327 t s)). Qed.
Lemma lem4494818 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term709 A B t s)) = (term788 A B _52327 t s).
Proof. exact (EQ_MP (@lem4494817 A B _52327 t s) (@lem4494804 A B _52327 t s)). Qed.
Lemma lem4494820 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4494821 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = (term789 A B t)) = (term790 A B s t).
Proof. exact (@lem4494820 Prop (A -> B) s t). Qed.
Lemma lem4494822 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term791 A B t s d)) = (term792 A B _52327 t s d).
Proof. exact (@lem4494821 A B (_52327 t s d) (term196 A B t s d)). Qed.
Lemma lem4494823 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4494824 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term791 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4494823 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4494825 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _52327 t s d) = (term712 A B _52327 t s d).
Proof. exact (eq_refl (term712 A B _52327 t s d)). Qed.
Lemma lem4494826 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term791 A B t s d)) = ((_52327 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4494825 A B _52327 t s d) (@lem4494824 A B t s d)). Qed.
Lemma lem4494827 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4494828 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term794 A B _52327 t s d) = (term795 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4494827) (@lem4494826 A B _52327 t s d)). Qed.
Lemma lem4494829 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4494830 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _52327 t s d GEN_PVAR_148) = (term796 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4494831 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d GEN_PVAR_148) = (term793 A B t s d GEN_PVAR_148)) = ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4494830 A B _52327 t s d GEN_PVAR_148) (@lem4494829 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4494832 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term797 A B _52327 t s d) = (term798 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4494831 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4494833 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4494834 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term792 A B _52327 t s d) = (term799 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4494833 A B) (@lem4494832 A B _52327 t s d)). Qed.
Lemma lem4494835 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (((_52327 t s d) = (term791 A B t s d)) = (term792 A B _52327 t s d)) = (((_52327 t s d) = (term196 A B t s d)) = (term799 A B _52327 t s d)).
Proof. exact (MK_COMB (@lem4494828 A B _52327 t s d) (@lem4494834 A B _52327 t s d)). Qed.
Lemma lem4494836 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term196 A B t s d)) = (term799 A B _52327 t s d).
Proof. exact (EQ_MP (@lem4494835 A B _52327 t s d) (@lem4494822 A B _52327 t s d)). Qed.
Lemma lem4494837 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d))). Qed.
Lemma lem4494838 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _52327 t s d) = (term798 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4494837 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4494839 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4494840 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _52327 t s d) = (term799 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4494839 A B) (@lem4494838 A B _52327 t s d)). Qed.
Lemma lem4494841 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d) = (term196 A B t s d)) = (term799 A B _52327 t s d).
Proof. exact (TRANS (@lem4494836 A B _52327 t s d) (@lem4494840 A B _52327 t s d)). Qed.
Lemma lem4494842 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term787 A B _52327 t s) = (term800 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4494841 A B _52327 t s d)). Qed.
Lemma lem4494843 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4494844 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term788 A B _52327 t s) = (term801 A B _52327 t s).
Proof. exact (MK_COMB (@lem4494843 B) (@lem4494842 A B _52327 t s)). Qed.
Lemma lem4494845 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_52327 t s) = (term709 A B t s)) = (term801 A B _52327 t s).
Proof. exact (TRANS (@lem4494818 A B _52327 t s) (@lem4494844 A B _52327 t s)). Qed.
Lemma lem4494846 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term778 A B _52327 t) = (term802 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4494845 A B _52327 t s)). Qed.
Lemma lem4494847 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4494848 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term779 A B _52327 t) = (term803 A B _52327 t).
Proof. exact (MK_COMB (@lem4494847 A) (@lem4494846 A B _52327 t)). Qed.
Lemma lem4494849 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((_52327 t) = (term706 A B t)) = (term803 A B _52327 t).
Proof. exact (TRANS (@lem4494800 A B _52327 t) (@lem4494848 A B _52327 t)). Qed.
Lemma lem4494850 {A B : Type'} (_52327 : type839 A B) : (term769 A B _52327) = (term804 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4494849 A B _52327 t)). Qed.
Lemma lem4494851 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4494852 {A B : Type'} (_52327 : type839 A B) : (term770 A B _52327) = (term805 A B _52327).
Proof. exact (MK_COMB (@lem4494851 B) (@lem4494850 A B _52327)). Qed.
Lemma lem4494853 {A B : Type'} (_52327 : type839 A B) : (_52327 = (term704 A B)) = (term805 A B _52327).
Proof. exact (TRANS (@lem4494782 A B _52327) (@lem4494852 A B _52327)). Qed.
Lemma lem4494854 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494855 {A B : Type'} (_52327 : type839 A B) : (term746 A B _52327) = (term806 A B _52327).
Proof. exact (MK_COMB (@lem4494854) (@lem4494853 A B _52327)). Qed.
Lemma lem4494856 {A B : Type'} (_52327 : type839 A B) : (term737 A B _52327) = (term737 A B _52327).
Proof. exact (eq_refl (term737 A B _52327)). Qed.
Lemma lem4494857 {A B : Type'} (_52327 : type839 A B) : (term754 A B _52327) = (term807 A B _52327).
Proof. exact (MK_COMB (@lem4494855 A B _52327) (@lem4494856 A B _52327)). Qed.
Lemma lem4494858 {A B : Type'} : (term756 A B) = (term808 A B).
Proof. exact (fun_ext (fun _52327 : type839 A B => @lem4494857 A B _52327)). Qed.
Lemma lem4494859 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4494860 {A B : Type'} : (term758 A B) = (term809 A B).
Proof. exact (MK_COMB (@lem4494859 A B) (@lem4494858 A B)). Qed.
Lemma lem4494861 {A B : Type'} : (term745 A B) = (term745 A B).
Proof. exact (eq_refl (term745 A B)). Qed.
Lemma lem4494862 {A B : Type'} : ((term703 A B) = (term758 A B)) = ((term703 A B) = (term809 A B)).
Proof. exact (MK_COMB (@lem4494861 A B) (@lem4494860 A B)). Qed.
Lemma lem4494865 {A B : Type'} : (term703 A B) = (term809 A B).
Proof. exact (EQ_MP (@lem4494862 A B) (@lem4494764 A B)). Qed.
Lemma lem4494866 {A B : Type'} : (term702 A B) = (term809 A B).
Proof. exact (TRANS (@lem4494471 A B) (@lem4494865 A B)). Qed.
Lemma lem4494870 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem4494871 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4494872 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term178 A x s) = (~ False).
Proof. exact (MK_COMB (@lem4494871) (@lem4494870 A x s h1)). Qed.
Lemma lem4494874 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4494875 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term178 A x s) = True.
Proof. exact (TRANS (@lem4494872 A x s h1) (@lem4494874)). Qed.
Lemma lem4494876 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494877 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term179 A x s) = (imp True).
Proof. exact (MK_COMB (@lem4494876) (@lem4494875 A x s h1)). Qed.
Lemma lem4494879 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem4494880 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4494881 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term810 A B x s) = (@COND B False).
Proof. exact (MK_COMB (@lem4494880 B) (@lem4494879 A x s h1)). Qed.
Lemma lem4494882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4494883 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term811 A B s f x) = (term812 A B f x).
Proof. exact (MK_COMB (@lem4494881 A B x s h1) (@lem4494882 A B f x)). Qed.
Lemma lem4494884 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494885 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = (term813 A B f x d).
Proof. exact (MK_COMB (@lem4494883 A B f x s h1) (@lem4494884 B d)). Qed.
Lemma lem4494887 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4494888 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4494887 B t1 t2). Qed.
Lemma lem4494889 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term813 A B f x d) = d.
Proof. exact (@lem4494888 B (f x) d). Qed.
Lemma lem4494890 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = d.
Proof. exact (TRANS (@lem4494885 A B f d x s h1) (@lem4494889 A B f x d)). Qed.
Lemma lem4494891 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494892 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term637 A B s f x d) = (@eq B d).
Proof. exact (MK_COMB (@lem4494891 B) (@lem4494890 A B f d x s h1)). Qed.
Lemma lem4494893 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494894 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : ((term608 A B s f x d) = d) = (d = d).
Proof. exact (MK_COMB (@lem4494892 A B f d x s h1) (@lem4494893 B d)). Qed.
Lemma lem4494896 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem4494897 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem4494896 B x). Qed.
Lemma lem4494898 {B : Type'} (d : B) : (d = d) = True.
Proof. exact (@lem4494897 B d). Qed.
Lemma lem4494899 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : ((term608 A B s f x d) = d) = True.
Proof. exact (TRANS (@lem4494894 A B f d x s h1) (@lem4494898 B d)). Qed.
Lemma lem4494900 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term639 A B s f x d) = (True -> True).
Proof. exact (MK_COMB (@lem4494877 A x s h1) (@lem4494899 A B f d x s h1)). Qed.
Lemma lem4494902 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4494903 : (True -> True) = True.
Proof. exact (@lem4494902 True). Qed.
Lemma lem4494904 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term639 A B s f x d) = True.
Proof. exact (TRANS (@lem4494900 A B f d x s h1) (@lem4494903)). Qed.
Lemma lem4494905 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : term814 A B s f x d.
Proof. exact (fun h0 : (@IN A x s) = False => @lem4494904 A B f d x s h0). Qed.
Lemma lem4494907 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem4494908 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4494909 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term178 A x s) = (~ True).
Proof. exact (MK_COMB (@lem4494908) (@lem4494907 A x s h1)). Qed.
Lemma lem4494911 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem4494912 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term178 A x s) = False.
Proof. exact (TRANS (@lem4494909 A x s h1) (@lem4494911)). Qed.
Lemma lem4494913 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494914 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term179 A x s) = (imp False).
Proof. exact (MK_COMB (@lem4494913) (@lem4494912 A x s h1)). Qed.
Lemma lem4494916 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem4494917 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4494918 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term810 A B x s) = (@COND B True).
Proof. exact (MK_COMB (@lem4494917 B) (@lem4494916 A x s h1)). Qed.
Lemma lem4494919 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4494920 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term811 A B s f x) = (term815 A B f x).
Proof. exact (MK_COMB (@lem4494918 A B x s h1) (@lem4494919 A B f x)). Qed.
Lemma lem4494921 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494922 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (term816 A B f x d).
Proof. exact (MK_COMB (@lem4494920 A B f x s h1) (@lem4494921 B d)). Qed.
Lemma lem4494924 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4494925 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4494924 B t2 t1). Qed.
Lemma lem4494926 {A B : Type'} (d : B) (f : A -> B) (x : A) : (term816 A B f x d) = (f x).
Proof. exact (@lem4494925 B d (f x)). Qed.
Lemma lem4494927 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (f x).
Proof. exact (TRANS (@lem4494922 A B f d x s h1) (@lem4494926 A B d f x)). Qed.
Lemma lem4494928 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4494929 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term637 A B s f x d) = (term262 A B f x).
Proof. exact (MK_COMB (@lem4494928 B) (@lem4494927 A B d f x s h1)). Qed.
Lemma lem4494930 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494931 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : ((term608 A B s f x d) = d) = ((f x) = d).
Proof. exact (MK_COMB (@lem4494929 A B d f x s h1) (@lem4494930 B d)). Qed.
Lemma lem4494934 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term639 A B s f x d) = (term817 A B f x d).
Proof. exact (MK_COMB (@lem4494914 A x s h1) (@lem4494931 A B f d x s h1)). Qed.
Lemma lem4494936 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4494937 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term817 A B f x d) = True.
Proof. exact (@lem4494936 ((f x) = d)). Qed.
Lemma lem4494938 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term639 A B s f x d) = True.
Proof. exact (TRANS (@lem4494934 A B f d x s h1) (@lem4494937 A B f x d)). Qed.
Lemma lem4494939 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : term818 A B s f x d.
Proof. exact (fun h0 : (@IN A x s) = True => @lem4494938 A B f d x s h0). Qed.
Lemma lem4494940 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : term819 A B s f x d.
Proof. exact (conj (@lem4494905 A B s f x d) (@lem4494939 A B s f x d)). Qed.
Lemma lem4494942 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4494943 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) : term821 A B f d x s.
Proof. exact (@lem4494942 (term639 A B s f x d) True (@IN A x s) True). Qed.
Lemma lem4494944 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) : (term639 A B s f x d) = (term822 A x s).
Proof. exact (@lem4494943 A B f d x s (@lem4494940 A B s f x d)). Qed.
Lemma lem4494946 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4494947 {A : Type'} (x : A) (s : A -> Prop) : (term823 A x s) = True.
Proof. exact (@lem4494946 (@IN A x s)). Qed.
Lemma lem4494949 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4494950 {A : Type'} (x : A) (s : A -> Prop) : (term824 A x s) = True.
Proof. exact (@lem4494949 (term178 A x s)). Qed.
Lemma lem4494951 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4494952 {A : Type'} (x : A) (s : A -> Prop) : (term825 A x s) = (and True).
Proof. exact (MK_COMB (@lem4494951) (@lem4494950 A x s)). Qed.
Lemma lem4494953 {A : Type'} (x : A) (s : A -> Prop) : (term822 A x s) = (True /\ True).
Proof. exact (MK_COMB (@lem4494952 A x s) (@lem4494947 A x s)). Qed.
Lemma lem4494955 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4494956 : (True /\ True) = True.
Proof. exact (@lem4494955 True). Qed.
Lemma lem4494957 {A : Type'} (x : A) (s : A -> Prop) : (term822 A x s) = True.
Proof. exact (TRANS (@lem4494953 A x s) (@lem4494956)). Qed.
Lemma lem4494962 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term639 A B s f x d) = True.
Proof. exact (TRANS (@lem4494944 A B f d x s) (@lem4494957 A x s)). Qed.
Lemma lem4494963 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term641 A B s f d) = (term173 A).
Proof. exact (fun_ext (fun x : A => @lem4494962 A B s f x d)). Qed.
Lemma lem4494964 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4494965 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term643 A B s f d) = (term175 A).
Proof. exact (MK_COMB (@lem4494964 A) (@lem4494963 A B s f d)). Qed.
Lemma lem4494969 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem4494970 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494971 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term168 A x s) = (imp False).
Proof. exact (MK_COMB (@lem4494970) (@lem4494969 A x s h1)). Qed.
Lemma lem4494973 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem4494974 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4494975 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term810 A B x s) = (@COND B False).
Proof. exact (MK_COMB (@lem4494974 B) (@lem4494973 A x s h1)). Qed.
Lemma lem4494976 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4494977 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term811 A B s f x) = (term812 A B f x).
Proof. exact (MK_COMB (@lem4494975 A B x s h1) (@lem4494976 A B f x)). Qed.
Lemma lem4494978 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4494979 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = (term813 A B f x d).
Proof. exact (MK_COMB (@lem4494977 A B f x s h1) (@lem4494978 B d)). Qed.
Lemma lem4494981 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4494982 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4494981 B t1 t2). Qed.
Lemma lem4494983 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term813 A B f x d) = d.
Proof. exact (@lem4494982 B (f x) d). Qed.
Lemma lem4494984 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = d.
Proof. exact (TRANS (@lem4494979 A B f d x s h1) (@lem4494983 A B f x d)). Qed.
Lemma lem4494985 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4494986 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term624 A B s f x d) = (@IN B d).
Proof. exact (MK_COMB (@lem4494985 B) (@lem4494984 A B f d x s h1)). Qed.
Lemma lem4494987 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4494988 {A B : Type'} (f : A -> B) (d : B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term626 A B s f x d t) = (@IN B d t).
Proof. exact (MK_COMB (@lem4494986 A B f d x s h1) (@lem4494987 B t)). Qed.
Lemma lem4494989 {A B : Type'} (f : A -> B) (d : B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term628 A B s f x d t) = (term826 B d t).
Proof. exact (MK_COMB (@lem4494971 A x s h1) (@lem4494988 A B f d t x s h1)). Qed.
Lemma lem4494991 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4494992 {B : Type'} (d : B) (t : B -> Prop) : (term826 B d t) = True.
Proof. exact (@lem4494991 (@IN B d t)). Qed.
Lemma lem4494993 {A B : Type'} (f : A -> B) (d : B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term628 A B s f x d t) = True.
Proof. exact (TRANS (@lem4494989 A B f d t x s h1) (@lem4494992 B d t)). Qed.
Lemma lem4494994 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) (t : B -> Prop) : term827 A B s f x d t.
Proof. exact (fun h0 : (@IN A x s) = False => @lem4494993 A B f d t x s h0). Qed.
Lemma lem4494996 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem4494997 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4494998 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term168 A x s) = (imp True).
Proof. exact (MK_COMB (@lem4494997) (@lem4494996 A x s h1)). Qed.
Lemma lem4495000 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem4495001 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4495002 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term810 A B x s) = (@COND B True).
Proof. exact (MK_COMB (@lem4495001 B) (@lem4495000 A x s h1)). Qed.
Lemma lem4495003 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4495004 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term811 A B s f x) = (term815 A B f x).
Proof. exact (MK_COMB (@lem4495002 A B x s h1) (@lem4495003 A B f x)). Qed.
Lemma lem4495005 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4495006 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (term816 A B f x d).
Proof. exact (MK_COMB (@lem4495004 A B f x s h1) (@lem4495005 B d)). Qed.
Lemma lem4495008 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4495009 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4495008 B t2 t1). Qed.
Lemma lem4495010 {A B : Type'} (d : B) (f : A -> B) (x : A) : (term816 A B f x d) = (f x).
Proof. exact (@lem4495009 B d (f x)). Qed.
Lemma lem4495011 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (f x).
Proof. exact (TRANS (@lem4495006 A B f d x s h1) (@lem4495010 A B d f x)). Qed.
Lemma lem4495012 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4495013 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term624 A B s f x d) = (term828 A B f x).
Proof. exact (MK_COMB (@lem4495012 B) (@lem4495011 A B d f x s h1)). Qed.
Lemma lem4495014 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4495015 {A B : Type'} (d : B) (f : A -> B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term626 A B s f x d t) = (term169 A B f x t).
Proof. exact (MK_COMB (@lem4495013 A B d f x s h1) (@lem4495014 B t)). Qed.
Lemma lem4495016 {A B : Type'} (d : B) (f : A -> B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term628 A B s f x d t) = (term829 A B f x t).
Proof. exact (MK_COMB (@lem4494998 A x s h1) (@lem4495015 A B d f t x s h1)). Qed.
Lemma lem4495018 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4495019 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term829 A B f x t) = (term169 A B f x t).
Proof. exact (@lem4495018 (term169 A B f x t)). Qed.
Lemma lem4495020 {A B : Type'} (d : B) (f : A -> B) (t : B -> Prop) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term628 A B s f x d t) = (term169 A B f x t).
Proof. exact (TRANS (@lem4495016 A B d f t x s h1) (@lem4495019 A B f x t)). Qed.
Lemma lem4495021 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (x : A) (t : B -> Prop) : term830 A B s d f x t.
Proof. exact (fun h0 : (@IN A x s) = True => @lem4495020 A B d f t x s h0). Qed.
Lemma lem4495022 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (x : A) (t : B -> Prop) : term831 A B s d f x t.
Proof. exact (conj (@lem4494994 A B s f x d t) (@lem4495021 A B s d f x t)). Qed.
Lemma lem4495024 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4495025 {A B : Type'} (d : B) (f : A -> B) (t : B -> Prop) (x : A) (s : A -> Prop) : term832 A B d f t x s.
Proof. exact (@lem4495024 (term628 A B s f x d t) (term169 A B f x t) (@IN A x s) True). Qed.
Lemma lem4495026 {A B : Type'} (d : B) (f : A -> B) (t : B -> Prop) (x : A) (s : A -> Prop) : (term628 A B s f x d t) = (term833 A B f t x s).
Proof. exact (@lem4495025 A B d f t x s (@lem4495022 A B s d f x t)). Qed.
Lemma lem4495028 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4495029 {A : Type'} (x : A) (s : A -> Prop) : (term823 A x s) = True.
Proof. exact (@lem4495028 (@IN A x s)). Qed.
Lemma lem4495034 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term834 A B s f x t) = (term834 A B s f x t).
Proof. exact (eq_refl (term834 A B s f x t)). Qed.
Lemma lem4495035 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term833 A B f t x s) = (term835 A B s f x t).
Proof. exact (MK_COMB (@lem4495034 A B s f x t) (@lem4495029 A x s)). Qed.
Lemma lem4495037 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4495038 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term835 A B s f x t) = (term836 A B s f x t).
Proof. exact (@lem4495037 (term836 A B s f x t)). Qed.
Lemma lem4495039 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term833 A B f t x s) = (term836 A B s f x t).
Proof. exact (TRANS (@lem4495035 A B s f x t) (@lem4495038 A B s f x t)). Qed.
Lemma lem4495050 {A B : Type'} (d : B) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term628 A B s f x d t) = (term836 A B s f x t).
Proof. exact (TRANS (@lem4495026 A B d f t x s) (@lem4495039 A B s f x t)). Qed.
Lemma lem4495051 {A B : Type'} (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term630 A B s f d t) = (term837 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4495050 A B d s f x t)). Qed.
Lemma lem4495052 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495053 {A B : Type'} (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term632 A B s f d t) = (term838 A B s f t).
Proof. exact (MK_COMB (@lem4495052 A) (@lem4495051 A B d s f t)). Qed.
Lemma lem4495054 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term169 A B f a t) = (term169 A B f a t).
Proof. exact (eq_refl (term169 A B f a t)). Qed.
Lemma lem4495058 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4495059 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4495060 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4495059 B) (@lem4495058 A x a h1)). Qed.
Lemma lem4495061 {A B : Type'} (f : A -> B) (a : A) : (f a) = (f a).
Proof. exact (eq_refl (f a)). Qed.
Lemma lem4495062 {A B : Type'} (f : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term612 A B x f a) = (term812 A B f a).
Proof. exact (MK_COMB (@lem4495060 A B x a h1) (@lem4495061 A B f a)). Qed.
Lemma lem4495063 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term608 A B s f x d) = (term608 A B s f x d).
Proof. exact (eq_refl (term608 A B s f x d)). Qed.
Lemma lem4495064 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : (term613 A B a s f x d) = (term840 A B a s f x d).
Proof. exact (MK_COMB (@lem4495062 A B f x a h1) (@lem4495063 A B s f x d)). Qed.
Lemma lem4495066 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4495067 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4495066 B t1 t2). Qed.
Lemma lem4495068 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term840 A B a s f x d) = (term608 A B s f x d).
Proof. exact (@lem4495067 B (f a) (term608 A B s f x d)). Qed.
Lemma lem4495069 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : (term613 A B a s f x d) = (term608 A B s f x d).
Proof. exact (TRANS (@lem4495064 A B s f d x a h1) (@lem4495068 A B a s f x d)). Qed.
Lemma lem4495070 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term262 A B f x).
Proof. exact (eq_refl (term262 A B f x)). Qed.
Lemma lem4495071 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : ((f x) = (term613 A B a s f x d)) = ((f x) = (term608 A B s f x d)).
Proof. exact (MK_COMB (@lem4495070 A B f x) (@lem4495069 A B s f d x a h1)). Qed.
Lemma lem4495074 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : term841 A B a s f x d.
Proof. exact (fun h0 : (x = a) = False => @lem4495071 A B s f d x a h0). Qed.
Lemma lem4495076 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4495077 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4495078 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4495077 B) (@lem4495076 A x a h1)). Qed.
Lemma lem4495079 {A B : Type'} (f : A -> B) (a : A) : (f a) = (f a).
Proof. exact (eq_refl (f a)). Qed.
Lemma lem4495080 {A B : Type'} (f : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term612 A B x f a) = (term815 A B f a).
Proof. exact (MK_COMB (@lem4495078 A B x a h1) (@lem4495079 A B f a)). Qed.
Lemma lem4495081 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term608 A B s f x d) = (term608 A B s f x d).
Proof. exact (eq_refl (term608 A B s f x d)). Qed.
Lemma lem4495082 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = True) : (term613 A B a s f x d) = (term842 A B a s f x d).
Proof. exact (MK_COMB (@lem4495080 A B f x a h1) (@lem4495081 A B s f x d)). Qed.
Lemma lem4495084 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4495085 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4495084 B t2 t1). Qed.
Lemma lem4495086 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) : (term842 A B a s f x d) = (f a).
Proof. exact (@lem4495085 B (term608 A B s f x d) (f a)). Qed.
Lemma lem4495087 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term613 A B a s f x d) = (f a).
Proof. exact (TRANS (@lem4495082 A B s f d x a h1) (@lem4495086 A B s x d f a)). Qed.
Lemma lem4495088 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term262 A B f x).
Proof. exact (eq_refl (term262 A B f x)). Qed.
Lemma lem4495089 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : ((f x) = (term613 A B a s f x d)) = ((f x) = (f a)).
Proof. exact (MK_COMB (@lem4495088 A B f x) (@lem4495087 A B s d f x a h1)). Qed.
Lemma lem4495092 {A B : Type'} (s : A -> Prop) (d : B) (x : A) (f : A -> B) (a : A) : term843 A B s d x f a.
Proof. exact (fun h0 : (x = a) = True => @lem4495089 A B s d f x a h0). Qed.
Lemma lem4495093 {A B : Type'} (s : A -> Prop) (d : B) (x : A) (f : A -> B) (a : A) : term844 A B s d x f a.
Proof. exact (conj (@lem4495074 A B a s f x d) (@lem4495092 A B s d x f a)). Qed.
Lemma lem4495095 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4495096 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : term845 A B a s f x d.
Proof. exact (@lem4495095 ((f x) = (term613 A B a s f x d)) ((f x) = (f a)) (x = a) ((f x) = (term608 A B s f x d))). Qed.
Lemma lem4495111 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : ((f x) = (term613 A B a s f x d)) = (term846 A B a s f x d).
Proof. exact (@lem4495096 A B a s f x d (@lem4495093 A B s d x f a)). Qed.
Lemma lem4495123 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem4495124 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4495125 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term810 A B x s) = (@COND B False).
Proof. exact (MK_COMB (@lem4495124 B) (@lem4495123 A x s h1)). Qed.
Lemma lem4495126 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4495127 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term811 A B s f x) = (term812 A B f x).
Proof. exact (MK_COMB (@lem4495125 A B x s h1) (@lem4495126 A B f x)). Qed.
Lemma lem4495128 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4495129 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = (term813 A B f x d).
Proof. exact (MK_COMB (@lem4495127 A B f x s h1) (@lem4495128 B d)). Qed.
Lemma lem4495131 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4495132 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4495131 B t1 t2). Qed.
Lemma lem4495133 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term813 A B f x d) = d.
Proof. exact (@lem4495132 B (f x) d). Qed.
Lemma lem4495134 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term608 A B s f x d) = d.
Proof. exact (TRANS (@lem4495129 A B f d x s h1) (@lem4495133 A B f x d)). Qed.
Lemma lem4495135 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term262 A B f x).
Proof. exact (eq_refl (term262 A B f x)). Qed.
Lemma lem4495136 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : ((f x) = (term608 A B s f x d)) = ((f x) = d).
Proof. exact (MK_COMB (@lem4495135 A B f x) (@lem4495134 A B f d x s h1)). Qed.
Lemma lem4495139 {A : Type'} (x : A) (a : A) : (term847 A x a) = (term847 A x a).
Proof. exact (eq_refl (term847 A x a)). Qed.
Lemma lem4495140 {A B : Type'} (a : A) (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term848 A B a s f x d) = (term849 A B a f x d).
Proof. exact (MK_COMB (@lem4495139 A x a) (@lem4495136 A B f d x s h1)). Qed.
Lemma lem4495143 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term850 A B x f a) = (term850 A B x f a).
Proof. exact (eq_refl (term850 A B x f a)). Qed.
Lemma lem4495144 {A B : Type'} (a : A) (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term846 A B a s f x d) = (term851 A B a f x d).
Proof. exact (MK_COMB (@lem4495143 A B x f a) (@lem4495140 A B a f d x s h1)). Qed.
Lemma lem4495147 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : term852 A B s a f x d.
Proof. exact (fun h0 : (@IN A x s) = False => @lem4495144 A B a f d x s h0). Qed.
Lemma lem4495157 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem4495158 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4495159 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term810 A B x s) = (@COND B True).
Proof. exact (MK_COMB (@lem4495158 B) (@lem4495157 A x s h1)). Qed.
Lemma lem4495160 {A B : Type'} (f : A -> B) (x : A) : (f x) = (f x).
Proof. exact (eq_refl (f x)). Qed.
Lemma lem4495161 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term811 A B s f x) = (term815 A B f x).
Proof. exact (MK_COMB (@lem4495159 A B x s h1) (@lem4495160 A B f x)). Qed.
Lemma lem4495162 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4495163 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (term816 A B f x d).
Proof. exact (MK_COMB (@lem4495161 A B f x s h1) (@lem4495162 B d)). Qed.
Lemma lem4495165 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4495166 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4495165 B t2 t1). Qed.
Lemma lem4495167 {A B : Type'} (d : B) (f : A -> B) (x : A) : (term816 A B f x d) = (f x).
Proof. exact (@lem4495166 B d (f x)). Qed.
Lemma lem4495168 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term608 A B s f x d) = (f x).
Proof. exact (TRANS (@lem4495163 A B f d x s h1) (@lem4495167 A B d f x)). Qed.
Lemma lem4495169 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term262 A B f x).
Proof. exact (eq_refl (term262 A B f x)). Qed.
Lemma lem4495170 {A B : Type'} (d : B) (f : A -> B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : ((f x) = (term608 A B s f x d)) = ((f x) = (f x)).
Proof. exact (MK_COMB (@lem4495169 A B f x) (@lem4495168 A B d f x s h1)). Qed.
Lemma lem4495172 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem4495173 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem4495172 B x). Qed.
Lemma lem4495174 {A B : Type'} (f : A -> B) (x : A) : ((f x) = (f x)) = True.
Proof. exact (@lem4495173 B (f x)). Qed.
Lemma lem4495175 {A B : Type'} (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : ((f x) = (term608 A B s f x d)) = True.
Proof. exact (TRANS (@lem4495170 A B d f x s h1) (@lem4495174 A B f x)). Qed.
Lemma lem4495176 {A : Type'} (x : A) (a : A) : (term847 A x a) = (term847 A x a).
Proof. exact (eq_refl (term847 A x a)). Qed.
Lemma lem4495177 {A B : Type'} (f : A -> B) (d : B) (a : A) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term848 A B a s f x d) = (term853 A x a).
Proof. exact (MK_COMB (@lem4495176 A x a) (@lem4495175 A B f d x s h1)). Qed.
Lemma lem4495179 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4495180 {A : Type'} (x : A) (a : A) : (term853 A x a) = True.
Proof. exact (@lem4495179 (x = a)). Qed.
Lemma lem4495181 {A B : Type'} (a : A) (f : A -> B) (d : B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term848 A B a s f x d) = True.
Proof. exact (TRANS (@lem4495177 A B f d a x s h1) (@lem4495180 A x a)). Qed.
Lemma lem4495182 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term850 A B x f a) = (term850 A B x f a).
Proof. exact (eq_refl (term850 A B x f a)). Qed.
Lemma lem4495183 {A B : Type'} (d : B) (f : A -> B) (a : A) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term846 A B a s f x d) = (term854 A B x f a).
Proof. exact (MK_COMB (@lem4495182 A B x f a) (@lem4495181 A B a f d x s h1)). Qed.
Lemma lem4495185 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4495186 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term854 A B x f a) = (term855 A B x f a).
Proof. exact (@lem4495185 (term855 A B x f a)). Qed.
Lemma lem4495189 {A B : Type'} (d : B) (f : A -> B) (a : A) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term846 A B a s f x d) = (term855 A B x f a).
Proof. exact (TRANS (@lem4495183 A B d f a x s h1) (@lem4495186 A B x f a)). Qed.
Lemma lem4495190 {A B : Type'} (s : A -> Prop) (d : B) (x : A) (f : A -> B) (a : A) : term856 A B s d x f a.
Proof. exact (fun h0 : (@IN A x s) = True => @lem4495189 A B d f a x s h0). Qed.
Lemma lem4495191 {A B : Type'} (s : A -> Prop) (d : B) (x : A) (f : A -> B) (a : A) : term857 A B s d x f a.
Proof. exact (conj (@lem4495147 A B s a f x d) (@lem4495190 A B s d x f a)). Qed.
Lemma lem4495193 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4495194 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : term858 A B s a f x d.
Proof. exact (@lem4495193 (term846 A B a s f x d) (term855 A B x f a) (@IN A x s) (term851 A B a f x d)). Qed.
Lemma lem4495247 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term846 A B a s f x d) = (term859 A B s a f x d).
Proof. exact (@lem4495194 A B s a f x d (@lem4495191 A B s d x f a)). Qed.
Lemma lem4495248 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term860 A B a s f x d) = (term860 A B a s f x d).
Proof. exact (eq_refl (term860 A B a s f x d)). Qed.
Lemma lem4495249 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (((f x) = (term613 A B a s f x d)) = (term846 A B a s f x d)) = (((f x) = (term613 A B a s f x d)) = (term859 A B s a f x d)).
Proof. exact (MK_COMB (@lem4495248 A B a s f x d) (@lem4495247 A B s a f x d)). Qed.
Lemma lem4495250 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : ((f x) = (term613 A B a s f x d)) = (term859 A B s a f x d).
Proof. exact (EQ_MP (@lem4495249 A B s a f x d) (@lem4495111 A B a s f x d)). Qed.
Lemma lem4495251 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term615 A B a s f d) = (term861 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4495250 A B s a f x d)). Qed.
Lemma lem4495252 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495253 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term616 A B a s f d) = (term862 A B s a f d).
Proof. exact (MK_COMB (@lem4495252 A) (@lem4495251 A B s a f d)). Qed.
Lemma lem4495254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495255 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term618 A B a s f d) = (term863 A B s a f d).
Proof. exact (MK_COMB (@lem4495254) (@lem4495253 A B s a f d)). Qed.
Lemma lem4495256 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term620 A B s d f a t) = (term864 A B s d f a t).
Proof. exact (MK_COMB (@lem4495255 A B s a f d) (@lem4495054 A B f a t)). Qed.
Lemma lem4495257 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495258 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term622 A B s d f a t) = (term865 A B s d f a t).
Proof. exact (MK_COMB (@lem4495257) (@lem4495256 A B s d f a t)). Qed.
Lemma lem4495259 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term634 A B a s f d t) = (term866 A B d a s f t).
Proof. exact (MK_COMB (@lem4495258 A B s d f a t) (@lem4495053 A B d s f t)). Qed.
Lemma lem4495260 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495261 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term636 A B a s f d t) = (term867 A B d a s f t).
Proof. exact (MK_COMB (@lem4495260) (@lem4495259 A B d a s f t)). Qed.
Lemma lem4495262 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term645 A B a t s f d) = (term868 A B d a s f t).
Proof. exact (MK_COMB (@lem4495261 A B d a s f t) (@lem4494965 A B s f d)). Qed.
Lemma lem4495273 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term592 A B a s f x d) = (term592 A B a s f x d).
Proof. exact (eq_refl (term592 A B a s f x d)). Qed.
Lemma lem4495274 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term593 A B a s f d) = (term593 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4495273 A B a s f x d)). Qed.
Lemma lem4495275 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495276 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term594 A B a s f d) = (term594 A B a s f d).
Proof. exact (MK_COMB (@lem4495275 A) (@lem4495274 A B a s f d)). Qed.
Lemma lem4495277 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4495278 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term655 A B a s f d) = (term655 A B a s f d).
Proof. exact (MK_COMB (@lem4495277) (@lem4495276 A B a s f d)). Qed.
Lemma lem4495279 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term657 A B a t s f d) = (term869 A B d a s f t).
Proof. exact (MK_COMB (@lem4495278 A B a s f d) (@lem4495262 A B d a s f t)). Qed.
Lemma lem4495288 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term586 A B a s f x t) = (term586 A B a s f x t).
Proof. exact (eq_refl (term586 A B a s f x t)). Qed.
Lemma lem4495289 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term587 A B a s f t) = (term587 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4495288 A B a s f x t)). Qed.
Lemma lem4495290 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495291 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term588 A B a s f t) = (term588 A B a s f t).
Proof. exact (MK_COMB (@lem4495290 A) (@lem4495289 A B a s f t)). Qed.
Lemma lem4495292 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4495293 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term658 A B a s f t) = (term658 A B a s f t).
Proof. exact (MK_COMB (@lem4495292) (@lem4495291 A B a s f t)). Qed.
Lemma lem4495294 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term660 A B a t s f d) = (term870 A B d a s f t).
Proof. exact (MK_COMB (@lem4495293 A B a s f t) (@lem4495279 A B d a s f t)). Qed.
Lemma lem4495297 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _52327 t s d n m) = (term716 A B _52327 t s d n m).
Proof. exact (eq_refl (term716 A B _52327 t s d n m)). Qed.
Lemma lem4495298 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term717 A B _52327 n m a t s f d) = (term871 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495297 A B _52327 t s d n m) (@lem4495294 A B d a s f t)). Qed.
Lemma lem4495301 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4495302 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term718 A B _52327 n m a t s f d) = (term872 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495301 B t n) (@lem4495298 A B _52327 n m d a s f t)). Qed.
Lemma lem4495305 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4495306 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term719 A B s0 _52327 n m a t s f d) = (term873 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495305 A s0 a s) (@lem4495302 A B _52327 n m d a s f t)). Qed.
Lemma lem4495311 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4495312 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term720 A B s0 _52327 n m a t s f d) = (term874 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495311 A a s) (@lem4495306 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495315 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4495316 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term721 A B s0 _52327 n m a t s f d) = (term875 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495315 A s m) (@lem4495312 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495317 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term722 A B _52327 n m a t s f d) = (term876 A B _52327 n m d a s f t).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4495316 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495318 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495319 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term723 A B _52327 n m a t s f d) = (term877 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495318 A) (@lem4495317 A B _52327 n m d a s f t)). Qed.
Lemma lem4495320 {A B : Type'} (_52327 : type839 A B) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term724 A B _52327 m a t s f d) = (term878 A B _52327 m d a s f t).
Proof. exact (fun_ext (fun n : nat => @lem4495319 A B _52327 n m d a s f t)). Qed.
Lemma lem4495321 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4495322 {A B : Type'} (_52327 : type839 A B) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term725 A B _52327 m a t s f d) = (term879 A B _52327 m d a s f t).
Proof. exact (MK_COMB (@lem4495321) (@lem4495320 A B _52327 m d a s f t)). Qed.
Lemma lem4495323 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term726 A B _52327 a t s f d) = (term880 A B _52327 d a s f t).
Proof. exact (fun_ext (fun m : nat => @lem4495322 A B _52327 m d a s f t)). Qed.
Lemma lem4495324 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4495325 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term727 A B _52327 a t s f d) = (term881 A B _52327 d a s f t).
Proof. exact (MK_COMB (@lem4495324) (@lem4495323 A B _52327 d a s f t)). Qed.
Lemma lem4495326 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term728 A B _52327 t s f d) = (term882 A B _52327 d s f t).
Proof. exact (fun_ext (fun a : A => @lem4495325 A B _52327 d a s f t)). Qed.
Lemma lem4495327 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495328 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term729 A B _52327 t s f d) = (term883 A B _52327 d s f t).
Proof. exact (MK_COMB (@lem4495327 A) (@lem4495326 A B _52327 d s f t)). Qed.
Lemma lem4495329 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) : (term730 A B _52327 s f d) = (term884 A B _52327 d s f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4495328 A B _52327 d s f t)). Qed.
Lemma lem4495330 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4495331 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) : (term731 A B _52327 s f d) = (term885 A B _52327 d s f).
Proof. exact (MK_COMB (@lem4495330 B) (@lem4495329 A B _52327 d s f)). Qed.
Lemma lem4495332 {A B : Type'} (_52327 : type839 A B) (d : B) (f : A -> B) : (term732 A B _52327 f d) = (term886 A B _52327 d f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4495331 A B _52327 d s f)). Qed.
Lemma lem4495333 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495334 {A B : Type'} (_52327 : type839 A B) (d : B) (f : A -> B) : (term733 A B _52327 f d) = (term887 A B _52327 d f).
Proof. exact (MK_COMB (@lem4495333 A) (@lem4495332 A B _52327 d f)). Qed.
Lemma lem4495335 {A B : Type'} (_52327 : type839 A B) (d : B) : (term734 A B _52327 d) = (term888 A B _52327 d).
Proof. exact (fun_ext (fun f : A -> B => @lem4495334 A B _52327 d f)). Qed.
Lemma lem4495336 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495337 {A B : Type'} (_52327 : type839 A B) (d : B) : (term735 A B _52327 d) = (term889 A B _52327 d).
Proof. exact (MK_COMB (@lem4495336 A B) (@lem4495335 A B _52327 d)). Qed.
Lemma lem4495338 {A B : Type'} (_52327 : type839 A B) : (term736 A B _52327) = (term890 A B _52327).
Proof. exact (fun_ext (fun d : B => @lem4495337 A B _52327 d)). Qed.
Lemma lem4495339 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495340 {A B : Type'} (_52327 : type839 A B) : (term737 A B _52327) = (term891 A B _52327).
Proof. exact (MK_COMB (@lem4495339 B) (@lem4495338 A B _52327)). Qed.
Lemma lem4495341 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495342 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4495341 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495343 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4495344 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495343 A B) (@lem4495342 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495347 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _52327 t s d GEN_PVAR_148) = (term796 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495348 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4495347 A B _52327 t s d GEN_PVAR_148) (@lem4495344 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495349 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _52327 t s d) = (term798 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4495348 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495350 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495351 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _52327 t s d) = (term799 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495350 A B) (@lem4495349 A B _52327 t s d)). Qed.
Lemma lem4495352 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _52327 t s) = (term800 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495351 A B _52327 t s d)). Qed.
Lemma lem4495353 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495354 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _52327 t s) = (term801 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495353 B) (@lem4495352 A B _52327 t s)). Qed.
Lemma lem4495355 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term802 A B _52327 t) = (term802 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4495354 A B _52327 t s)). Qed.
Lemma lem4495356 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495357 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term803 A B _52327 t) = (term803 A B _52327 t).
Proof. exact (MK_COMB (@lem4495356 A) (@lem4495355 A B _52327 t)). Qed.
Lemma lem4495358 {A B : Type'} (_52327 : type839 A B) : (term804 A B _52327) = (term804 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4495357 A B _52327 t)). Qed.
Lemma lem4495359 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4495360 {A B : Type'} (_52327 : type839 A B) : (term805 A B _52327) = (term805 A B _52327).
Proof. exact (MK_COMB (@lem4495359 B) (@lem4495358 A B _52327)). Qed.
Lemma lem4495361 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4495362 {A B : Type'} (_52327 : type839 A B) : (term806 A B _52327) = (term806 A B _52327).
Proof. exact (MK_COMB (@lem4495361) (@lem4495360 A B _52327)). Qed.
Lemma lem4495363 {A B : Type'} (_52327 : type839 A B) : (term807 A B _52327) = (term892 A B _52327).
Proof. exact (MK_COMB (@lem4495362 A B _52327) (@lem4495340 A B _52327)). Qed.
Lemma lem4495364 {A B : Type'} : (term808 A B) = (term893 A B).
Proof. exact (fun_ext (fun _52327 : type839 A B => @lem4495363 A B _52327)). Qed.
Lemma lem4495365 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4495366 {A B : Type'} : (term809 A B) = (term894 A B).
Proof. exact (MK_COMB (@lem4495365 A B) (@lem4495364 A B)). Qed.
Lemma lem4495367 {A B : Type'} : (term702 A B) = (term894 A B).
Proof. exact (TRANS (@lem4494866 A B) (@lem4495366 A B)). Qed.
Lemma lem4495541 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem4495542 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (@lem4495541 A t). Qed.
Lemma lem4495543 {A : Type'} : (term175 A) = True.
Proof. exact (@lem4495542 A True). Qed.
Lemma lem4495544 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term867 A B d a s f t) = (term867 A B d a s f t).
Proof. exact (eq_refl (term867 A B d a s f t)). Qed.
Lemma lem4495545 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term868 A B d a s f t) = (term895 A B d a s f t).
Proof. exact (MK_COMB (@lem4495544 A B d a s f t) (@lem4495543 A)). Qed.
Lemma lem4495547 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem4495548 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term895 A B d a s f t) = (term866 A B d a s f t).
Proof. exact (@lem4495547 (term866 A B d a s f t)). Qed.
Lemma lem4495581 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term868 A B d a s f t) = (term866 A B d a s f t).
Proof. exact (TRANS (@lem4495545 A B d a s f t) (@lem4495548 A B d a s f t)). Qed.
Lemma lem4495582 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term655 A B a s f d) = (term655 A B a s f d).
Proof. exact (eq_refl (term655 A B a s f d)). Qed.
Lemma lem4495583 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term869 A B d a s f t) = (term896 A B d a s f t).
Proof. exact (MK_COMB (@lem4495582 A B a s f d) (@lem4495581 A B d a s f t)). Qed.
Lemma lem4495586 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term658 A B a s f t) = (term658 A B a s f t).
Proof. exact (eq_refl (term658 A B a s f t)). Qed.
Lemma lem4495587 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term870 A B d a s f t) = (term897 A B d a s f t).
Proof. exact (MK_COMB (@lem4495586 A B a s f t) (@lem4495583 A B d a s f t)). Qed.
Lemma lem4495590 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _52327 t s d n m) = (term716 A B _52327 t s d n m).
Proof. exact (eq_refl (term716 A B _52327 t s d n m)). Qed.
Lemma lem4495591 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term871 A B _52327 n m d a s f t) = (term898 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495590 A B _52327 t s d n m) (@lem4495587 A B d a s f t)). Qed.
Lemma lem4495594 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4495595 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term872 A B _52327 n m d a s f t) = (term899 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495594 B t n) (@lem4495591 A B _52327 n m d a s f t)). Qed.
Lemma lem4495598 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4495599 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term873 A B s0 _52327 n m d a s f t) = (term900 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495598 A s0 a s) (@lem4495595 A B _52327 n m d a s f t)). Qed.
Lemma lem4495602 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4495603 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term874 A B s0 _52327 n m d a s f t) = (term901 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495602 A a s) (@lem4495599 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495606 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4495607 {A B : Type'} (s0 : A -> Prop) (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term875 A B s0 _52327 n m d a s f t) = (term902 A B s0 _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495606 A s m) (@lem4495603 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495610 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term876 A B _52327 n m d a s f t) = (term903 A B _52327 n m d a s f t).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4495607 A B s0 _52327 n m d a s f t)). Qed.
Lemma lem4495611 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495612 {A B : Type'} (_52327 : type839 A B) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term877 A B _52327 n m d a s f t) = (term904 A B _52327 n m d a s f t).
Proof. exact (MK_COMB (@lem4495611 A) (@lem4495610 A B _52327 n m d a s f t)). Qed.
Lemma lem4495619 {A B : Type'} (_52327 : type839 A B) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term878 A B _52327 m d a s f t) = (term905 A B _52327 m d a s f t).
Proof. exact (fun_ext (fun n : nat => @lem4495612 A B _52327 n m d a s f t)). Qed.
Lemma lem4495620 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4495621 {A B : Type'} (_52327 : type839 A B) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term879 A B _52327 m d a s f t) = (term906 A B _52327 m d a s f t).
Proof. exact (MK_COMB (@lem4495620) (@lem4495619 A B _52327 m d a s f t)). Qed.
Lemma lem4495628 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term880 A B _52327 d a s f t) = (term907 A B _52327 d a s f t).
Proof. exact (fun_ext (fun m : nat => @lem4495621 A B _52327 m d a s f t)). Qed.
Lemma lem4495629 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4495630 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term881 A B _52327 d a s f t) = (term908 A B _52327 d a s f t).
Proof. exact (MK_COMB (@lem4495629) (@lem4495628 A B _52327 d a s f t)). Qed.
Lemma lem4495637 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term882 A B _52327 d s f t) = (term909 A B _52327 d s f t).
Proof. exact (fun_ext (fun a : A => @lem4495630 A B _52327 d a s f t)). Qed.
Lemma lem4495638 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4495639 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term883 A B _52327 d s f t) = (term910 A B _52327 d s f t).
Proof. exact (MK_COMB (@lem4495638 A) (@lem4495637 A B _52327 d s f t)). Qed.
Lemma lem4495646 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) : (term884 A B _52327 d s f) = (term911 A B _52327 d s f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4495639 A B _52327 d s f t)). Qed.
Lemma lem4495647 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4495648 {A B : Type'} (_52327 : type839 A B) (d : B) (s : A -> Prop) (f : A -> B) : (term885 A B _52327 d s f) = (term912 A B _52327 d s f).
Proof. exact (MK_COMB (@lem4495647 B) (@lem4495646 A B _52327 d s f)). Qed.
Lemma lem4495655 {A B : Type'} (_52327 : type839 A B) (d : B) (f : A -> B) : (term886 A B _52327 d f) = (term913 A B _52327 d f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4495648 A B _52327 d s f)). Qed.
Lemma lem4495656 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495657 {A B : Type'} (_52327 : type839 A B) (d : B) (f : A -> B) : (term887 A B _52327 d f) = (term914 A B _52327 d f).
Proof. exact (MK_COMB (@lem4495656 A) (@lem4495655 A B _52327 d f)). Qed.
Lemma lem4495664 {A B : Type'} (_52327 : type839 A B) (d : B) : (term888 A B _52327 d) = (term915 A B _52327 d).
Proof. exact (fun_ext (fun f : A -> B => @lem4495657 A B _52327 d f)). Qed.
Lemma lem4495665 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495666 {A B : Type'} (_52327 : type839 A B) (d : B) : (term889 A B _52327 d) = (term916 A B _52327 d).
Proof. exact (MK_COMB (@lem4495665 A B) (@lem4495664 A B _52327 d)). Qed.
Lemma lem4495673 {A B : Type'} (_52327 : type839 A B) : (term890 A B _52327) = (term917 A B _52327).
Proof. exact (fun_ext (fun d : B => @lem4495666 A B _52327 d)). Qed.
Lemma lem4495674 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495675 {A B : Type'} (_52327 : type839 A B) : (term891 A B _52327) = (term918 A B _52327).
Proof. exact (MK_COMB (@lem4495674 B) (@lem4495673 A B _52327)). Qed.
Lemma lem4495682 {A B : Type'} (_52327 : type839 A B) : (term806 A B _52327) = (term806 A B _52327).
Proof. exact (eq_refl (term806 A B _52327)). Qed.
Lemma lem4495683 {A B : Type'} (_52327 : type839 A B) : (term892 A B _52327) = (term919 A B _52327).
Proof. exact (MK_COMB (@lem4495682 A B _52327) (@lem4495675 A B _52327)). Qed.
Lemma lem4495686 {A B : Type'} : (term893 A B) = (term920 A B).
Proof. exact (fun_ext (fun _52327 : type839 A B => @lem4495683 A B _52327)). Qed.
Lemma lem4495687 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4495688 {A B : Type'} : (term894 A B) = (term921 A B).
Proof. exact (MK_COMB (@lem4495687 A B) (@lem4495686 A B)). Qed.
Lemma lem4495695 {A B : Type'} : (term702 A B) = (term921 A B).
Proof. exact (TRANS (@lem4495367 A B) (@lem4495688 A B)). Qed.
Lemma lem4495696 {A B : Type'} : (term921 A B) = (term702 A B).
Proof. exact (SYM (@lem4495695 A B)). Qed.
Lemma lem4495697 {A B : Type'} (_52327 : type839 A B) (h1 : term805 A B _52327) : term805 A B _52327.
Proof. exact (h1). Qed.
Lemma lem4495703 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term588 A B a s f t.
Proof. exact (h1). Qed.
Lemma lem4495704 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term594 A B a s f d.
Proof. exact (h1). Qed.
Lemma lem4495706 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4495707 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term866 A B d a s f t) = (term922 A B d a s f t).
Proof. exact (@lem4495706 (term866 A B d a s f t)). Qed.
Lemma lem4495708 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term922 A B d a s f t) = (term866 A B d a s f t).
Proof. exact (SYM (@lem4495707 A B d a s f t)). Qed.
Lemma lem4495709 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term923 A B d a s f t) : term923 A B d a s f t.
Proof. exact (h1). Qed.
Lemma lem4495713 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495714 {A B : Type'} (P : type572 A B) : (term924 A B P) = (term925 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem4495715 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term927 A B GEN_PVAR_148 t s d).
Proof. exact (@lem4495714 A B (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495716 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495717 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4495719 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term929 A B GEN_PVAR_148 t s d f) = (term930 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4495717) (@lem4495716 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495720 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term931 A B GEN_PVAR_148 t s d) = (term932 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4495719 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495721 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495722 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term927 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495721 A B) (@lem4495720 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495723 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4495715 A B GEN_PVAR_148 t s d) (@lem4495722 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495724 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4495713 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4495725 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4495726 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495725 A B) (@lem4495724 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495728 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _52327 t s d GEN_PVAR_148) = (term934 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495729 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _52327 GEN_PVAR_148 t s d) = (term935 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495728 A B _52327 t s d GEN_PVAR_148) (@lem4495726 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495731 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term936 A B _52327 t s d GEN_PVAR_148) = (term936 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term936 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495732 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term937 A B _52327 GEN_PVAR_148 t s d) = (term938 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495731 A B _52327 t s d GEN_PVAR_148) (@lem4495723 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495733 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495734 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term939 A B _52327 GEN_PVAR_148 t s d) = (term940 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495733) (@lem4495732 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495735 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term941 A B _52327 GEN_PVAR_148 t s d) = (term942 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495734 A B _52327 GEN_PVAR_148 t s d) (@lem4495729 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495736 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term941 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_52327 t s d GEN_PVAR_148) (term194 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4495737 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_52327 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term942 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4495736 A B _52327 GEN_PVAR_148 t s d) (@lem4495735 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495738 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _52327 t s d) = (term943 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4495737 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495739 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495740 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _52327 t s d) = (term944 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495739 A B) (@lem4495738 A B _52327 t s d)). Qed.
Lemma lem4495741 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _52327 t s) = (term945 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495740 A B _52327 t s d)). Qed.
Lemma lem4495742 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495743 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _52327 t s) = (term946 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495742 B) (@lem4495741 A B _52327 t s)). Qed.
Lemma lem4495744 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term802 A B _52327 t) = (term947 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4495743 A B _52327 t s)). Qed.
Lemma lem4495745 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4495746 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term803 A B _52327 t) = (term948 A B _52327 t).
Proof. exact (MK_COMB (@lem4495745 A) (@lem4495744 A B _52327 t)). Qed.
Lemma lem4495747 {A B : Type'} (_52327 : type839 A B) : (term804 A B _52327) = (term949 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4495746 A B _52327 t)). Qed.
Lemma lem4495748 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4495749 {A B : Type'} (_52327 : type839 A B) : (term805 A B _52327) = (term950 A B _52327).
Proof. exact (MK_COMB (@lem4495748 B) (@lem4495747 A B _52327)). Qed.
Lemma lem4495763 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4495764 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term953 A B P Q) = (term954 A B P Q).
Proof. exact (@lem4495763 (A -> B) P Q). Qed.
Lemma lem4495765 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _52327 t s d) = (term956 A B _52327 t s d).
Proof. exact (@lem4495764 A B (term957 A B _52327 t s d) (term958 A B _52327 t s d)). Qed.
Lemma lem4495766 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _52327 t s d GEN_PVAR_148) = (term938 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495767 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495768 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term960 A B _52327 t s d GEN_PVAR_148) = (term940 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495767) (@lem4495766 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495769 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _52327 t s d GEN_PVAR_148) = (term935 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495770 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term962 A B _52327 t s d GEN_PVAR_148) = (term942 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4495768 A B _52327 GEN_PVAR_148 t s d) (@lem4495769 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495771 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term963 A B _52327 t s d) = (term943 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4495770 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495772 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495773 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _52327 t s d) = (term944 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495772 A B) (@lem4495771 A B _52327 t s d)). Qed.
Lemma lem4495774 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4495775 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term964 A B _52327 t s d) = (term965 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495774) (@lem4495773 A B _52327 t s d)). Qed.
Lemma lem4495776 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _52327 t s d GEN_PVAR_148) = (term938 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495777 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term966 A B _52327 t s d) = (term957 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4495776 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495778 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495779 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term967 A B _52327 t s d) = (term968 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495778 A B) (@lem4495777 A B _52327 t s d)). Qed.
Lemma lem4495780 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495781 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term969 A B _52327 t s d) = (term970 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495780) (@lem4495779 A B _52327 t s d)). Qed.
Lemma lem4495782 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _52327 t s d GEN_PVAR_148) = (term935 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4495783 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term971 A B _52327 t s d) = (term958 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4495782 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4495784 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4495785 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term972 A B _52327 t s d) = (term973 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495784 A B) (@lem4495783 A B _52327 t s d)). Qed.
Lemma lem4495786 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term956 A B _52327 t s d) = (term974 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495781 A B _52327 t s d) (@lem4495785 A B _52327 t s d)). Qed.
Lemma lem4495787 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term955 A B _52327 t s d) = (term956 A B _52327 t s d)) = ((term944 A B _52327 t s d) = (term974 A B _52327 t s d)).
Proof. exact (MK_COMB (@lem4495775 A B _52327 t s d) (@lem4495786 A B _52327 t s d)). Qed.
Lemma lem4495788 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term944 A B _52327 t s d) = (term974 A B _52327 t s d).
Proof. exact (EQ_MP (@lem4495787 A B _52327 t s d) (@lem4495765 A B _52327 t s d)). Qed.
Lemma lem4495909 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term945 A B _52327 t s) = (term975 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495788 A B _52327 t s d)). Qed.
Lemma lem4495910 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495911 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _52327 t s) = (term976 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495910 B) (@lem4495909 A B _52327 t s)). Qed.
Lemma lem4495913 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4495914 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term951 B P Q) = (term952 B P Q).
Proof. exact (@lem4495913 B P Q). Qed.
Lemma lem4495915 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _52327 t s) = (term978 A B _52327 t s).
Proof. exact (@lem4495914 B (term979 A B _52327 t s) (term980 A B _52327 t s)). Qed.
Lemma lem4495916 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _52327 t s d) = (term968 A B _52327 t s d).
Proof. exact (eq_refl (term981 A B _52327 t s d)). Qed.
Lemma lem4495917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495918 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term982 A B _52327 t s d) = (term970 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495917) (@lem4495916 A B _52327 t s d)). Qed.
Lemma lem4495919 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _52327 t s d) = (term973 A B _52327 t s d).
Proof. exact (eq_refl (term983 A B _52327 t s d)). Qed.
Lemma lem4495920 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term984 A B _52327 t s d) = (term974 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4495918 A B _52327 t s d) (@lem4495919 A B _52327 t s d)). Qed.
Lemma lem4495921 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term985 A B _52327 t s) = (term975 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495920 A B _52327 t s d)). Qed.
Lemma lem4495922 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495923 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _52327 t s) = (term976 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495922 B) (@lem4495921 A B _52327 t s)). Qed.
Lemma lem4495924 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4495925 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term986 A B _52327 t s) = (term987 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495924) (@lem4495923 A B _52327 t s)). Qed.
Lemma lem4495926 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _52327 t s d) = (term968 A B _52327 t s d).
Proof. exact (eq_refl (term981 A B _52327 t s d)). Qed.
Lemma lem4495927 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term988 A B _52327 t s) = (term979 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495926 A B _52327 t s d)). Qed.
Lemma lem4495928 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495929 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term989 A B _52327 t s) = (term990 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495928 B) (@lem4495927 A B _52327 t s)). Qed.
Lemma lem4495930 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4495931 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term991 A B _52327 t s) = (term992 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495930) (@lem4495929 A B _52327 t s)). Qed.
Lemma lem4495932 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _52327 t s d) = (term973 A B _52327 t s d).
Proof. exact (eq_refl (term983 A B _52327 t s d)). Qed.
Lemma lem4495933 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term993 A B _52327 t s) = (term980 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4495932 A B _52327 t s d)). Qed.
Lemma lem4495934 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4495935 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term994 A B _52327 t s) = (term995 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495934 B) (@lem4495933 A B _52327 t s)). Qed.
Lemma lem4495936 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term978 A B _52327 t s) = (term996 A B _52327 t s).
Proof. exact (MK_COMB (@lem4495931 A B _52327 t s) (@lem4495935 A B _52327 t s)). Qed.
Lemma lem4495937 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term977 A B _52327 t s) = (term978 A B _52327 t s)) = ((term976 A B _52327 t s) = (term996 A B _52327 t s)).
Proof. exact (MK_COMB (@lem4495925 A B _52327 t s) (@lem4495936 A B _52327 t s)). Qed.
Lemma lem4495938 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term976 A B _52327 t s) = (term996 A B _52327 t s).
Proof. exact (EQ_MP (@lem4495937 A B _52327 t s) (@lem4495915 A B _52327 t s)). Qed.
Lemma lem4496067 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _52327 t s) = (term996 A B _52327 t s).
Proof. exact (TRANS (@lem4495911 A B _52327 t s) (@lem4495938 A B _52327 t s)). Qed.
Lemma lem4496068 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term947 A B _52327 t) = (term997 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496067 A B _52327 t s)). Qed.
Lemma lem4496069 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496070 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term948 A B _52327 t) = (term998 A B _52327 t).
Proof. exact (MK_COMB (@lem4496069 A) (@lem4496068 A B _52327 t)). Qed.
Lemma lem4496072 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4496073 {A : Type'} (P : type686 A) (Q : type686 A) : (term999 A P Q) = (term1000 A P Q).
Proof. exact (@lem4496072 (A -> Prop) P Q). Qed.
Lemma lem4496074 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1001 A B _52327 t) = (term1002 A B _52327 t).
Proof. exact (@lem4496073 A (term1003 A B _52327 t) (term1004 A B _52327 t)). Qed.
Lemma lem4496075 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _52327 t s) = (term990 A B _52327 t s).
Proof. exact (eq_refl (term1005 A B _52327 t s)). Qed.
Lemma lem4496076 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496077 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1006 A B _52327 t s) = (term992 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496076) (@lem4496075 A B _52327 t s)). Qed.
Lemma lem4496078 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _52327 t s) = (term995 A B _52327 t s).
Proof. exact (eq_refl (term1007 A B _52327 t s)). Qed.
Lemma lem4496079 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1008 A B _52327 t s) = (term996 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496077 A B _52327 t s) (@lem4496078 A B _52327 t s)). Qed.
Lemma lem4496080 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1009 A B _52327 t) = (term997 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496079 A B _52327 t s)). Qed.
Lemma lem4496081 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496082 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1001 A B _52327 t) = (term998 A B _52327 t).
Proof. exact (MK_COMB (@lem4496081 A) (@lem4496080 A B _52327 t)). Qed.
Lemma lem4496083 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496084 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1010 A B _52327 t) = (term1011 A B _52327 t).
Proof. exact (MK_COMB (@lem4496083) (@lem4496082 A B _52327 t)). Qed.
Lemma lem4496085 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _52327 t s) = (term990 A B _52327 t s).
Proof. exact (eq_refl (term1005 A B _52327 t s)). Qed.
Lemma lem4496086 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1012 A B _52327 t) = (term1003 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496085 A B _52327 t s)). Qed.
Lemma lem4496087 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496088 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1013 A B _52327 t) = (term1014 A B _52327 t).
Proof. exact (MK_COMB (@lem4496087 A) (@lem4496086 A B _52327 t)). Qed.
Lemma lem4496089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496090 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1015 A B _52327 t) = (term1016 A B _52327 t).
Proof. exact (MK_COMB (@lem4496089) (@lem4496088 A B _52327 t)). Qed.
Lemma lem4496091 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _52327 t s) = (term995 A B _52327 t s).
Proof. exact (eq_refl (term1007 A B _52327 t s)). Qed.
Lemma lem4496092 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1017 A B _52327 t) = (term1004 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496091 A B _52327 t s)). Qed.
Lemma lem4496093 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496094 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1018 A B _52327 t) = (term1019 A B _52327 t).
Proof. exact (MK_COMB (@lem4496093 A) (@lem4496092 A B _52327 t)). Qed.
Lemma lem4496095 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1002 A B _52327 t) = (term1020 A B _52327 t).
Proof. exact (MK_COMB (@lem4496090 A B _52327 t) (@lem4496094 A B _52327 t)). Qed.
Lemma lem4496096 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((term1001 A B _52327 t) = (term1002 A B _52327 t)) = ((term998 A B _52327 t) = (term1020 A B _52327 t)).
Proof. exact (MK_COMB (@lem4496084 A B _52327 t) (@lem4496095 A B _52327 t)). Qed.
Lemma lem4496097 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term998 A B _52327 t) = (term1020 A B _52327 t).
Proof. exact (EQ_MP (@lem4496096 A B _52327 t) (@lem4496074 A B _52327 t)). Qed.
Lemma lem4496234 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term948 A B _52327 t) = (term1020 A B _52327 t).
Proof. exact (TRANS (@lem4496070 A B _52327 t) (@lem4496097 A B _52327 t)). Qed.
Lemma lem4496235 {A B : Type'} (_52327 : type839 A B) : (term949 A B _52327) = (term1021 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496234 A B _52327 t)). Qed.
Lemma lem4496236 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496237 {A B : Type'} (_52327 : type839 A B) : (term950 A B _52327) = (term1022 A B _52327).
Proof. exact (MK_COMB (@lem4496236 B) (@lem4496235 A B _52327)). Qed.
Lemma lem4496239 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4496240 {B : Type'} (P : type686 B) (Q : type686 B) : (term999 B P Q) = (term1000 B P Q).
Proof. exact (@lem4496239 (B -> Prop) P Q). Qed.
Lemma lem4496241 {A B : Type'} (_52327 : type839 A B) : (term1023 A B _52327) = (term1024 A B _52327).
Proof. exact (@lem4496240 B (term1025 A B _52327) (term1026 A B _52327)). Qed.
Lemma lem4496242 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1027 A B _52327 t) = (term1014 A B _52327 t).
Proof. exact (eq_refl (term1027 A B _52327 t)). Qed.
Lemma lem4496243 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496244 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1028 A B _52327 t) = (term1016 A B _52327 t).
Proof. exact (MK_COMB (@lem4496243) (@lem4496242 A B _52327 t)). Qed.
Lemma lem4496245 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1029 A B _52327 t) = (term1019 A B _52327 t).
Proof. exact (eq_refl (term1029 A B _52327 t)). Qed.
Lemma lem4496246 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1030 A B _52327 t) = (term1020 A B _52327 t).
Proof. exact (MK_COMB (@lem4496244 A B _52327 t) (@lem4496245 A B _52327 t)). Qed.
Lemma lem4496247 {A B : Type'} (_52327 : type839 A B) : (term1031 A B _52327) = (term1021 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496246 A B _52327 t)). Qed.
Lemma lem4496248 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496249 {A B : Type'} (_52327 : type839 A B) : (term1023 A B _52327) = (term1022 A B _52327).
Proof. exact (MK_COMB (@lem4496248 B) (@lem4496247 A B _52327)). Qed.
Lemma lem4496250 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496251 {A B : Type'} (_52327 : type839 A B) : (term1032 A B _52327) = (term1033 A B _52327).
Proof. exact (MK_COMB (@lem4496250) (@lem4496249 A B _52327)). Qed.
Lemma lem4496252 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1027 A B _52327 t) = (term1014 A B _52327 t).
Proof. exact (eq_refl (term1027 A B _52327 t)). Qed.
Lemma lem4496253 {A B : Type'} (_52327 : type839 A B) : (term1034 A B _52327) = (term1025 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496252 A B _52327 t)). Qed.
Lemma lem4496254 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496255 {A B : Type'} (_52327 : type839 A B) : (term1035 A B _52327) = (term1036 A B _52327).
Proof. exact (MK_COMB (@lem4496254 B) (@lem4496253 A B _52327)). Qed.
Lemma lem4496256 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496257 {A B : Type'} (_52327 : type839 A B) : (term1037 A B _52327) = (term1038 A B _52327).
Proof. exact (MK_COMB (@lem4496256) (@lem4496255 A B _52327)). Qed.
Lemma lem4496258 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1029 A B _52327 t) = (term1019 A B _52327 t).
Proof. exact (eq_refl (term1029 A B _52327 t)). Qed.
Lemma lem4496259 {A B : Type'} (_52327 : type839 A B) : (term1039 A B _52327) = (term1026 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496258 A B _52327 t)). Qed.
Lemma lem4496260 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496261 {A B : Type'} (_52327 : type839 A B) : (term1040 A B _52327) = (term1041 A B _52327).
Proof. exact (MK_COMB (@lem4496260 B) (@lem4496259 A B _52327)). Qed.
Lemma lem4496262 {A B : Type'} (_52327 : type839 A B) : (term1024 A B _52327) = (term1042 A B _52327).
Proof. exact (MK_COMB (@lem4496257 A B _52327) (@lem4496261 A B _52327)). Qed.
Lemma lem4496263 {A B : Type'} (_52327 : type839 A B) : ((term1023 A B _52327) = (term1024 A B _52327)) = ((term1022 A B _52327) = (term1042 A B _52327)).
Proof. exact (MK_COMB (@lem4496251 A B _52327) (@lem4496262 A B _52327)). Qed.
Lemma lem4496264 {A B : Type'} (_52327 : type839 A B) : (term1022 A B _52327) = (term1042 A B _52327).
Proof. exact (EQ_MP (@lem4496263 A B _52327) (@lem4496241 A B _52327)). Qed.
Lemma lem4496409 {A B : Type'} (_52327 : type839 A B) : (term950 A B _52327) = (term1042 A B _52327).
Proof. exact (TRANS (@lem4496237 A B _52327) (@lem4496264 A B _52327)). Qed.
Lemma lem4496411 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1043 A P Q) = (term1044 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4496412 {A B : Type'} (P : Prop) (Q : type572 A B) : (term1045 A B P Q) = (term1046 A B P Q).
Proof. exact (@lem4496411 (A -> B) P Q). Qed.
Lemma lem4496413 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _52327 GEN_PVAR_148 t s d) = (term1048 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (@lem4496412 A B (term1049 A B _52327 t s d GEN_PVAR_148) (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4496414 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496415 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1050 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4496414 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496416 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4496417 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1051 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4496416 A B) (@lem4496415 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4496418 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _52327 t s d GEN_PVAR_148) = (term934 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4496419 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _52327 GEN_PVAR_148 t s d) = (term935 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4496418 A B _52327 t s d GEN_PVAR_148) (@lem4496417 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4496420 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496421 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1052 A B _52327 GEN_PVAR_148 t s d) = (term1053 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4496420) (@lem4496419 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496422 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496423 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _52327 t s d GEN_PVAR_148) = (term934 A B _52327 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4496424 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1054 A B _52327 GEN_PVAR_148 t s d f) = (term1055 A B _52327 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4496423 A B _52327 t s d GEN_PVAR_148) (@lem4496422 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496425 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1056 A B _52327 GEN_PVAR_148 t s d) = (term1057 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4496424 A B _52327 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496426 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4496427 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1048 A B _52327 GEN_PVAR_148 t s d) = (term1058 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4496426 A B) (@lem4496425 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496428 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1047 A B _52327 GEN_PVAR_148 t s d) = (term1048 A B _52327 GEN_PVAR_148 t s d)) = ((term935 A B _52327 GEN_PVAR_148 t s d) = (term1058 A B _52327 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4496421 A B _52327 GEN_PVAR_148 t s d) (@lem4496427 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496429 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _52327 GEN_PVAR_148 t s d) = (term1058 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4496428 A B _52327 GEN_PVAR_148 t s d) (@lem4496413 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496430 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term958 A B _52327 t s d) = (term1059 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4496429 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496431 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4496432 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _52327 t s d) = (term1060 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4496431 A B) (@lem4496430 A B _52327 t s d)). Qed.
Lemma lem4496434 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4496435 {A B : Type'} (P : type523 A B) : (term1063 A B P) = (term1064 A B P).
Proof. exact (@lem4496434 (A -> B) (A -> B) P). Qed.
Lemma lem4496436 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _52327 t s d) = (term1066 A B _52327 t s d).
Proof. exact (@lem4496435 A B (term1067 A B _52327 t s d)). Qed.
Lemma lem4496437 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _52327 t s d GEN_PVAR_148) = (term1057 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4496438 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4496439 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _52327 t s d GEN_PVAR_148 f) = (term1070 A B _52327 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4496437 A B _52327 GEN_PVAR_148 t s d) (@lem4496438 A B f)). Qed.
Lemma lem4496440 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1070 A B _52327 GEN_PVAR_148 t s d f) = (term1055 A B _52327 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1070 A B _52327 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496441 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _52327 t s d GEN_PVAR_148 f) = (term1055 A B _52327 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4496439 A B _52327 GEN_PVAR_148 t s d f) (@lem4496440 A B _52327 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496442 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1071 A B _52327 t s d GEN_PVAR_148) = (term1057 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4496441 A B _52327 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4496443 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4496444 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1072 A B _52327 t s d GEN_PVAR_148) = (term1058 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4496443 A B) (@lem4496442 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496445 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1073 A B _52327 t s d) = (term1059 A B _52327 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4496444 A B _52327 GEN_PVAR_148 t s d)). Qed.
Lemma lem4496446 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4496447 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _52327 t s d) = (term1060 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4496446 A B) (@lem4496445 A B _52327 t s d)). Qed.
Lemma lem4496448 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496449 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1074 A B _52327 t s d) = (term1075 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4496448) (@lem4496447 A B _52327 t s d)). Qed.
Lemma lem4496450 {A B : Type'} (_52327 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _52327 t s d GEN_PVAR_148) = (term1057 A B _52327 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _52327 t s d GEN_PVAR_148)). Qed.
Lemma lem4496451 {A B : Type'} (f : type549 A B) (GEN_PVAR_148 : A -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4496452 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _52327 t s d f GEN_PVAR_148) = (term1077 A B _52327 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4496450 A B _52327 GEN_PVAR_148 t s d) (@lem4496451 A B f GEN_PVAR_148)). Qed.
Lemma lem4496453 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1077 A B _52327 t s d f GEN_PVAR_148) = (term1078 A B _52327 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1077 A B _52327 t s d f GEN_PVAR_148)). Qed.
Lemma lem4496454 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _52327 t s d f GEN_PVAR_148) = (term1078 A B _52327 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4496452 A B _52327 t s d f GEN_PVAR_148) (@lem4496453 A B _52327 t s d f GEN_PVAR_148)). Qed.
Lemma lem4496455 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1079 A B _52327 t s d f) = (term1080 A B _52327 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4496454 A B _52327 t s d f GEN_PVAR_148)). Qed.
Lemma lem4496456 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4496457 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1081 A B _52327 t s d f) = (term1082 A B _52327 t s d f).
Proof. exact (MK_COMB (@lem4496456 A B) (@lem4496455 A B _52327 t s d f)). Qed.
Lemma lem4496458 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1083 A B _52327 t s d) = (term1084 A B _52327 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4496457 A B _52327 t s d f)). Qed.
Lemma lem4496459 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4496460 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1066 A B _52327 t s d) = (term1085 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4496459 A B) (@lem4496458 A B _52327 t s d)). Qed.
Lemma lem4496461 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1065 A B _52327 t s d) = (term1066 A B _52327 t s d)) = ((term1060 A B _52327 t s d) = (term1085 A B _52327 t s d)).
Proof. exact (MK_COMB (@lem4496449 A B _52327 t s d) (@lem4496460 A B _52327 t s d)). Qed.
Lemma lem4496462 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1060 A B _52327 t s d) = (term1085 A B _52327 t s d).
Proof. exact (EQ_MP (@lem4496461 A B _52327 t s d) (@lem4496436 A B _52327 t s d)). Qed.
Lemma lem4496463 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _52327 t s d) = (term1085 A B _52327 t s d).
Proof. exact (TRANS (@lem4496432 A B _52327 t s d) (@lem4496462 A B _52327 t s d)). Qed.
Lemma lem4496464 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term980 A B _52327 t s) = (term1086 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4496463 A B _52327 t s d)). Qed.
Lemma lem4496465 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4496466 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _52327 t s) = (term1087 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496465 B) (@lem4496464 A B _52327 t s)). Qed.
Lemma lem4496468 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4496469 {A B : Type'} (P : type1435 A B) : (term1088 A B P) = (term1089 A B P).
Proof. exact (@lem4496468 B (type549 A B) P). Qed.
Lemma lem4496470 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _52327 t s) = (term1091 A B _52327 t s).
Proof. exact (@lem4496469 A B (term1092 A B _52327 t s)). Qed.
Lemma lem4496471 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _52327 t s d) = (term1084 A B _52327 t s d).
Proof. exact (eq_refl (term1093 A B _52327 t s d)). Qed.
Lemma lem4496472 {A B : Type'} (f : type549 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4496473 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _52327 t s d f) = (term1095 A B _52327 t s d f).
Proof. exact (MK_COMB (@lem4496471 A B _52327 t s d) (@lem4496472 A B f)). Qed.
Lemma lem4496474 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1095 A B _52327 t s d f) = (term1082 A B _52327 t s d f).
Proof. exact (eq_refl (term1095 A B _52327 t s d f)). Qed.
Lemma lem4496475 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _52327 t s d f) = (term1082 A B _52327 t s d f).
Proof. exact (TRANS (@lem4496473 A B _52327 t s d f) (@lem4496474 A B _52327 t s d f)). Qed.
Lemma lem4496476 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1096 A B _52327 t s d) = (term1084 A B _52327 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4496475 A B _52327 t s d f)). Qed.
Lemma lem4496477 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4496478 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1097 A B _52327 t s d) = (term1085 A B _52327 t s d).
Proof. exact (MK_COMB (@lem4496477 A B) (@lem4496476 A B _52327 t s d)). Qed.
Lemma lem4496479 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1098 A B _52327 t s) = (term1086 A B _52327 t s).
Proof. exact (fun_ext (fun d : B => @lem4496478 A B _52327 t s d)). Qed.
Lemma lem4496480 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4496481 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _52327 t s) = (term1087 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496480 B) (@lem4496479 A B _52327 t s)). Qed.
Lemma lem4496482 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496483 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1099 A B _52327 t s) = (term1100 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496482) (@lem4496481 A B _52327 t s)). Qed.
Lemma lem4496484 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _52327 t s d) = (term1084 A B _52327 t s d).
Proof. exact (eq_refl (term1093 A B _52327 t s d)). Qed.
Lemma lem4496485 {A B : Type'} (f : type1444 A B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4496486 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _52327 t s f d) = (term1102 A B _52327 t s f d).
Proof. exact (MK_COMB (@lem4496484 A B _52327 t s d) (@lem4496485 A B f d)). Qed.
Lemma lem4496487 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1102 A B _52327 t s f d) = (term1103 A B _52327 t s f d).
Proof. exact (eq_refl (term1102 A B _52327 t s f d)). Qed.
Lemma lem4496488 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _52327 t s f d) = (term1103 A B _52327 t s f d).
Proof. exact (TRANS (@lem4496486 A B _52327 t s f d) (@lem4496487 A B _52327 t s f d)). Qed.
Lemma lem4496489 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1104 A B _52327 t s f) = (term1105 A B _52327 t s f).
Proof. exact (fun_ext (fun d : B => @lem4496488 A B _52327 t s f d)). Qed.
Lemma lem4496490 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4496491 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1106 A B _52327 t s f) = (term1107 A B _52327 t s f).
Proof. exact (MK_COMB (@lem4496490 B) (@lem4496489 A B _52327 t s f)). Qed.
Lemma lem4496492 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1108 A B _52327 t s) = (term1109 A B _52327 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4496491 A B _52327 t s f)). Qed.
Lemma lem4496493 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496494 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1091 A B _52327 t s) = (term1110 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496493 A B) (@lem4496492 A B _52327 t s)). Qed.
Lemma lem4496495 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term1090 A B _52327 t s) = (term1091 A B _52327 t s)) = ((term1087 A B _52327 t s) = (term1110 A B _52327 t s)).
Proof. exact (MK_COMB (@lem4496483 A B _52327 t s) (@lem4496494 A B _52327 t s)). Qed.
Lemma lem4496496 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1087 A B _52327 t s) = (term1110 A B _52327 t s).
Proof. exact (EQ_MP (@lem4496495 A B _52327 t s) (@lem4496470 A B _52327 t s)). Qed.
Lemma lem4496497 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _52327 t s) = (term1110 A B _52327 t s).
Proof. exact (TRANS (@lem4496466 A B _52327 t s) (@lem4496496 A B _52327 t s)). Qed.
Lemma lem4496498 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1004 A B _52327 t) = (term1111 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496497 A B _52327 t s)). Qed.
Lemma lem4496499 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496500 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1019 A B _52327 t) = (term1112 A B _52327 t).
Proof. exact (MK_COMB (@lem4496499 A) (@lem4496498 A B _52327 t)). Qed.
Lemma lem4496502 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4496503 {A B : Type'} (P : type647 A B) : (term1113 A B P) = (term1114 A B P).
Proof. exact (@lem4496502 (A -> Prop) (type1444 A B) P). Qed.
Lemma lem4496504 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1115 A B _52327 t) = (term1116 A B _52327 t).
Proof. exact (@lem4496503 A B (term1117 A B _52327 t)). Qed.
Lemma lem4496505 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _52327 t s) = (term1109 A B _52327 t s).
Proof. exact (eq_refl (term1118 A B _52327 t s)). Qed.
Lemma lem4496506 {A B : Type'} (f : type1444 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4496507 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _52327 t s f) = (term1120 A B _52327 t s f).
Proof. exact (MK_COMB (@lem4496505 A B _52327 t s) (@lem4496506 A B f)). Qed.
Lemma lem4496508 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1120 A B _52327 t s f) = (term1107 A B _52327 t s f).
Proof. exact (eq_refl (term1120 A B _52327 t s f)). Qed.
Lemma lem4496509 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _52327 t s f) = (term1107 A B _52327 t s f).
Proof. exact (TRANS (@lem4496507 A B _52327 t s f) (@lem4496508 A B _52327 t s f)). Qed.
Lemma lem4496510 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1121 A B _52327 t s) = (term1109 A B _52327 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4496509 A B _52327 t s f)). Qed.
Lemma lem4496511 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496512 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1122 A B _52327 t s) = (term1110 A B _52327 t s).
Proof. exact (MK_COMB (@lem4496511 A B) (@lem4496510 A B _52327 t s)). Qed.
Lemma lem4496513 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1123 A B _52327 t) = (term1111 A B _52327 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496512 A B _52327 t s)). Qed.
Lemma lem4496514 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496515 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1115 A B _52327 t) = (term1112 A B _52327 t).
Proof. exact (MK_COMB (@lem4496514 A) (@lem4496513 A B _52327 t)). Qed.
Lemma lem4496516 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496517 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1124 A B _52327 t) = (term1125 A B _52327 t).
Proof. exact (MK_COMB (@lem4496516) (@lem4496515 A B _52327 t)). Qed.
Lemma lem4496518 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _52327 t s) = (term1109 A B _52327 t s).
Proof. exact (eq_refl (term1118 A B _52327 t s)). Qed.
Lemma lem4496519 {A B : Type'} (f : type673 A B) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4496520 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _52327 t f s) = (term1127 A B _52327 t f s).
Proof. exact (MK_COMB (@lem4496518 A B _52327 t s) (@lem4496519 A B f s)). Qed.
Lemma lem4496521 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1127 A B _52327 t f s) = (term1128 A B _52327 t f s).
Proof. exact (eq_refl (term1127 A B _52327 t f s)). Qed.
Lemma lem4496522 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _52327 t f s) = (term1128 A B _52327 t f s).
Proof. exact (TRANS (@lem4496520 A B _52327 t f s) (@lem4496521 A B _52327 t f s)). Qed.
Lemma lem4496523 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1129 A B _52327 t f) = (term1130 A B _52327 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4496522 A B _52327 t f s)). Qed.
Lemma lem4496524 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4496525 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1131 A B _52327 t f) = (term1132 A B _52327 t f).
Proof. exact (MK_COMB (@lem4496524 A) (@lem4496523 A B _52327 t f)). Qed.
Lemma lem4496526 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1133 A B _52327 t) = (term1134 A B _52327 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4496525 A B _52327 t f)). Qed.
Lemma lem4496527 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496528 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1116 A B _52327 t) = (term1135 A B _52327 t).
Proof. exact (MK_COMB (@lem4496527 A B) (@lem4496526 A B _52327 t)). Qed.
Lemma lem4496529 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : ((term1115 A B _52327 t) = (term1116 A B _52327 t)) = ((term1112 A B _52327 t) = (term1135 A B _52327 t)).
Proof. exact (MK_COMB (@lem4496517 A B _52327 t) (@lem4496528 A B _52327 t)). Qed.
Lemma lem4496530 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1112 A B _52327 t) = (term1135 A B _52327 t).
Proof. exact (EQ_MP (@lem4496529 A B _52327 t) (@lem4496504 A B _52327 t)). Qed.
Lemma lem4496531 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1019 A B _52327 t) = (term1135 A B _52327 t).
Proof. exact (TRANS (@lem4496500 A B _52327 t) (@lem4496530 A B _52327 t)). Qed.
Lemma lem4496532 {A B : Type'} (_52327 : type839 A B) : (term1026 A B _52327) = (term1136 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496531 A B _52327 t)). Qed.
Lemma lem4496533 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496534 {A B : Type'} (_52327 : type839 A B) : (term1041 A B _52327) = (term1137 A B _52327).
Proof. exact (MK_COMB (@lem4496533 B) (@lem4496532 A B _52327)). Qed.
Lemma lem4496536 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4496537 {A B : Type'} (P : type820 A B) : (term1138 A B P) = (term1139 A B P).
Proof. exact (@lem4496536 (B -> Prop) (type673 A B) P). Qed.
Lemma lem4496538 {A B : Type'} (_52327 : type839 A B) : (term1140 A B _52327) = (term1141 A B _52327).
Proof. exact (@lem4496537 A B (term1142 A B _52327)). Qed.
Lemma lem4496539 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1143 A B _52327 t) = (term1134 A B _52327 t).
Proof. exact (eq_refl (term1143 A B _52327 t)). Qed.
Lemma lem4496540 {A B : Type'} (f : type673 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4496541 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _52327 t f) = (term1145 A B _52327 t f).
Proof. exact (MK_COMB (@lem4496539 A B _52327 t) (@lem4496540 A B f)). Qed.
Lemma lem4496542 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1145 A B _52327 t f) = (term1132 A B _52327 t f).
Proof. exact (eq_refl (term1145 A B _52327 t f)). Qed.
Lemma lem4496543 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _52327 t f) = (term1132 A B _52327 t f).
Proof. exact (TRANS (@lem4496541 A B _52327 t f) (@lem4496542 A B _52327 t f)). Qed.
Lemma lem4496544 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1146 A B _52327 t) = (term1134 A B _52327 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4496543 A B _52327 t f)). Qed.
Lemma lem4496545 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496546 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1147 A B _52327 t) = (term1135 A B _52327 t).
Proof. exact (MK_COMB (@lem4496545 A B) (@lem4496544 A B _52327 t)). Qed.
Lemma lem4496547 {A B : Type'} (_52327 : type839 A B) : (term1148 A B _52327) = (term1136 A B _52327).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496546 A B _52327 t)). Qed.
Lemma lem4496548 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496549 {A B : Type'} (_52327 : type839 A B) : (term1140 A B _52327) = (term1137 A B _52327).
Proof. exact (MK_COMB (@lem4496548 B) (@lem4496547 A B _52327)). Qed.
Lemma lem4496550 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496551 {A B : Type'} (_52327 : type839 A B) : (term1149 A B _52327) = (term1150 A B _52327).
Proof. exact (MK_COMB (@lem4496550) (@lem4496549 A B _52327)). Qed.
Lemma lem4496552 {A B : Type'} (_52327 : type839 A B) (t : B -> Prop) : (term1143 A B _52327 t) = (term1134 A B _52327 t).
Proof. exact (eq_refl (term1143 A B _52327 t)). Qed.
Lemma lem4496553 {A B : Type'} (f : type838 A B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4496554 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _52327 f t) = (term1152 A B _52327 f t).
Proof. exact (MK_COMB (@lem4496552 A B _52327 t) (@lem4496553 A B f t)). Qed.
Lemma lem4496555 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1152 A B _52327 f t) = (term1153 A B _52327 f t).
Proof. exact (eq_refl (term1152 A B _52327 f t)). Qed.
Lemma lem4496556 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _52327 f t) = (term1153 A B _52327 f t).
Proof. exact (TRANS (@lem4496554 A B _52327 f t) (@lem4496555 A B _52327 f t)). Qed.
Lemma lem4496557 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) : (term1154 A B _52327 f) = (term1155 A B _52327 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4496556 A B _52327 f t)). Qed.
Lemma lem4496558 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4496559 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) : (term1156 A B _52327 f) = (term1157 A B _52327 f).
Proof. exact (MK_COMB (@lem4496558 B) (@lem4496557 A B _52327 f)). Qed.
Lemma lem4496560 {A B : Type'} (_52327 : type839 A B) : (term1158 A B _52327) = (term1159 A B _52327).
Proof. exact (fun_ext (fun f : type838 A B => @lem4496559 A B _52327 f)). Qed.
Lemma lem4496561 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496562 {A B : Type'} (_52327 : type839 A B) : (term1141 A B _52327) = (term1160 A B _52327).
Proof. exact (MK_COMB (@lem4496561 A B) (@lem4496560 A B _52327)). Qed.
Lemma lem4496563 {A B : Type'} (_52327 : type839 A B) : ((term1140 A B _52327) = (term1141 A B _52327)) = ((term1137 A B _52327) = (term1160 A B _52327)).
Proof. exact (MK_COMB (@lem4496551 A B _52327) (@lem4496562 A B _52327)). Qed.
Lemma lem4496564 {A B : Type'} (_52327 : type839 A B) : (term1137 A B _52327) = (term1160 A B _52327).
Proof. exact (EQ_MP (@lem4496563 A B _52327) (@lem4496538 A B _52327)). Qed.
Lemma lem4496565 {A B : Type'} (_52327 : type839 A B) : (term1041 A B _52327) = (term1160 A B _52327).
Proof. exact (TRANS (@lem4496534 A B _52327) (@lem4496564 A B _52327)). Qed.
Lemma lem4496566 {A B : Type'} (_52327 : type839 A B) : (term1038 A B _52327) = (term1038 A B _52327).
Proof. exact (eq_refl (term1038 A B _52327)). Qed.
Lemma lem4496567 {A B : Type'} (_52327 : type839 A B) : (term1042 A B _52327) = (term1161 A B _52327).
Proof. exact (MK_COMB (@lem4496566 A B _52327) (@lem4496565 A B _52327)). Qed.
Lemma lem4496569 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4496570 {A B : Type'} (P : Prop) (Q : type213 A B) : (term1164 A B P Q) = (term1165 A B P Q).
Proof. exact (@lem4496569 (type838 A B) P Q). Qed.
Lemma lem4496571 {A B : Type'} (_52327 : type839 A B) : (term1166 A B _52327) = (term1167 A B _52327).
Proof. exact (@lem4496570 A B (term1036 A B _52327) (term1159 A B _52327)). Qed.
Lemma lem4496572 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) : (term1168 A B _52327 f) = (term1157 A B _52327 f).
Proof. exact (eq_refl (term1168 A B _52327 f)). Qed.
Lemma lem4496573 {A B : Type'} (_52327 : type839 A B) : (term1169 A B _52327) = (term1159 A B _52327).
Proof. exact (fun_ext (fun f : type838 A B => @lem4496572 A B _52327 f)). Qed.
Lemma lem4496574 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496575 {A B : Type'} (_52327 : type839 A B) : (term1170 A B _52327) = (term1160 A B _52327).
Proof. exact (MK_COMB (@lem4496574 A B) (@lem4496573 A B _52327)). Qed.
Lemma lem4496576 {A B : Type'} (_52327 : type839 A B) : (term1038 A B _52327) = (term1038 A B _52327).
Proof. exact (eq_refl (term1038 A B _52327)). Qed.
Lemma lem4496577 {A B : Type'} (_52327 : type839 A B) : (term1166 A B _52327) = (term1161 A B _52327).
Proof. exact (MK_COMB (@lem4496576 A B _52327) (@lem4496575 A B _52327)). Qed.
Lemma lem4496578 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496579 {A B : Type'} (_52327 : type839 A B) : (term1171 A B _52327) = (term1172 A B _52327).
Proof. exact (MK_COMB (@lem4496578) (@lem4496577 A B _52327)). Qed.
Lemma lem4496580 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) : (term1168 A B _52327 f) = (term1157 A B _52327 f).
Proof. exact (eq_refl (term1168 A B _52327 f)). Qed.
Lemma lem4496581 {A B : Type'} (_52327 : type839 A B) : (term1038 A B _52327) = (term1038 A B _52327).
Proof. exact (eq_refl (term1038 A B _52327)). Qed.
Lemma lem4496582 {A B : Type'} (_52327 : type839 A B) (f : type838 A B) : (term1173 A B _52327 f) = (term1174 A B _52327 f).
Proof. exact (MK_COMB (@lem4496581 A B _52327) (@lem4496580 A B _52327 f)). Qed.
Lemma lem4496583 {A B : Type'} (_52327 : type839 A B) : (term1175 A B _52327) = (term1176 A B _52327).
Proof. exact (fun_ext (fun f : type838 A B => @lem4496582 A B _52327 f)). Qed.
Lemma lem4496584 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4496585 {A B : Type'} (_52327 : type839 A B) : (term1167 A B _52327) = (term1177 A B _52327).
Proof. exact (MK_COMB (@lem4496584 A B) (@lem4496583 A B _52327)). Qed.
Lemma lem4496586 {A B : Type'} (_52327 : type839 A B) : ((term1166 A B _52327) = (term1167 A B _52327)) = ((term1161 A B _52327) = (term1177 A B _52327)).
Proof. exact (MK_COMB (@lem4496579 A B _52327) (@lem4496585 A B _52327)). Qed.
Lemma lem4496587 {A B : Type'} (_52327 : type839 A B) : (term1161 A B _52327) = (term1177 A B _52327).
Proof. exact (EQ_MP (@lem4496586 A B _52327) (@lem4496571 A B _52327)). Qed.
Lemma lem4496588 {A B : Type'} (_52327 : type839 A B) : (term1042 A B _52327) = (term1177 A B _52327).
Proof. exact (TRANS (@lem4496567 A B _52327) (@lem4496587 A B _52327)). Qed.
Lemma lem4496589 {A B : Type'} (_52327 : type839 A B) : (term950 A B _52327) = (term1177 A B _52327).
Proof. exact (TRANS (@lem4496409 A B _52327) (@lem4496588 A B _52327)). Qed.
Lemma lem4496590 {A B : Type'} (_52327 : type839 A B) : (term805 A B _52327) = (term1177 A B _52327).
Proof. exact (TRANS (@lem4495749 A B _52327) (@lem4496589 A B _52327)). Qed.
Lemma lem4496591 {A B : Type'} (_52327 : type839 A B) (h1 : term805 A B _52327) : term1177 A B _52327.
Proof. exact (EQ_MP (@lem4496590 A B _52327) (@lem4495697 A B _52327 h1)). Qed.
Lemma lem4496628 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term590 A a x s) = (term1178 A a x s).
Proof. exact (@lem17160 (x = a) (@IN A x s)). Qed.
Lemma lem4496629 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term169 A B f x t).
Proof. exact (eq_refl (term169 A B f x t)). Qed.
Lemma lem4496630 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496631 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1179 A a x s) = (term1180 A a x s).
Proof. exact (MK_COMB (@lem4496630) (@lem4496628 A a x s)). Qed.
Lemma lem4496632 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1181 A B a s f x t) = (term1182 A B a s f x t).
Proof. exact (MK_COMB (@lem4496631 A a x s) (@lem4496629 A B f x t)). Qed.
Lemma lem4496633 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term586 A B a s f x t) = (term1181 A B a s f x t).
Proof. exact (@lem17265 (term78 A a x s) (term169 A B f x t)). Qed.
Lemma lem4496634 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term586 A B a s f x t) = (term1182 A B a s f x t).
Proof. exact (TRANS (@lem4496633 A B a s f x t) (@lem4496632 A B a s f x t)). Qed.
Lemma lem4496635 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term587 A B a s f t) = (term1183 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4496634 A B a s f x t)). Qed.
Lemma lem4496636 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4496689 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term588 A B a s f t) = (term1184 A B a s f t).
Proof. exact (MK_COMB (@lem4496636 A) (@lem4496635 A B a s f t)). Qed.
Lemma lem4496690 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1184 A B a s f t.
Proof. exact (EQ_MP (@lem4496689 A B a s f t) (@lem4495703 A B a s f t h1)). Qed.
Lemma lem4496697 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1185 A a x s) = (term78 A a x s).
Proof. exact (@lem16933 (term78 A a x s)). Qed.
Lemma lem4496698 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((f x) = d).
Proof. exact (eq_refl ((f x) = d)). Qed.
Lemma lem4496699 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496700 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1186 A a x s) = (term1187 A a x s).
Proof. exact (MK_COMB (@lem4496699) (@lem4496697 A a x s)). Qed.
Lemma lem4496701 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term1188 A B a s f x d) = (term1189 A B a s f x d).
Proof. exact (MK_COMB (@lem4496700 A a x s) (@lem4496698 A B f x d)). Qed.
Lemma lem4496702 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term592 A B a s f x d) = (term1188 A B a s f x d).
Proof. exact (@lem17265 (term590 A a x s) ((f x) = d)). Qed.
Lemma lem4496703 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term592 A B a s f x d) = (term1189 A B a s f x d).
Proof. exact (TRANS (@lem4496702 A B a s f x d) (@lem4496701 A B a s f x d)). Qed.
Lemma lem4496704 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term593 A B a s f d) = (term1190 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4496703 A B a s f x d)). Qed.
Lemma lem4496705 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4496758 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term594 A B a s f d) = (term1191 A B a s f d).
Proof. exact (MK_COMB (@lem4496705 A) (@lem4496704 A B a s f d)). Qed.
Lemma lem4496759 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1191 A B a s f d.
Proof. exact (EQ_MP (@lem4496758 A B a s f d) (@lem4495704 A B a s f d h1)). Qed.
Lemma lem4496762 {A : Type'} (x : A) (s : A -> Prop) : (term1192 A x s) = (@IN A x s).
Proof. exact (@lem16933 (@IN A x s)). Qed.
Lemma lem4496765 {A : Type'} (x : A) (a : A) : (term1193 A x a) = (x = a).
Proof. exact (@lem16933 (x = a)). Qed.
Lemma lem4496766 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1194 A B x f a) = (term1194 A B x f a).
Proof. exact (eq_refl (term1194 A B x f a)). Qed.
Lemma lem4496767 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496768 {A : Type'} (x : A) (a : A) : (term1195 A x a) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4496767) (@lem4496765 A x a)). Qed.
Lemma lem4496769 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1197 A B x f a) = (term1198 A B x f a).
Proof. exact (MK_COMB (@lem4496768 A x a) (@lem4496766 A B x f a)). Qed.
Lemma lem4496770 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1199 A B x f a) = (term1197 A B x f a).
Proof. exact (@lem17160 (term1200 A x a) ((f x) = (f a))). Qed.
Lemma lem4496771 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1199 A B x f a) = (term1198 A B x f a).
Proof. exact (TRANS (@lem4496770 A B x f a) (@lem4496769 A B x f a)). Qed.
Lemma lem4496772 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496773 {A : Type'} (x : A) (s : A -> Prop) : (term1201 A x s) = (term512 A x s).
Proof. exact (MK_COMB (@lem4496772) (@lem4496762 A x s)). Qed.
Lemma lem4496774 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1202 A B s x f a) = (term1203 A B s x f a).
Proof. exact (MK_COMB (@lem4496773 A x s) (@lem4496771 A B x f a)). Qed.
Lemma lem4496775 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1204 A B s x f a) = (term1202 A B s x f a).
Proof. exact (@lem17160 (term178 A x s) (term855 A B x f a)). Qed.
Lemma lem4496776 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1204 A B s x f a) = (term1203 A B s x f a).
Proof. exact (TRANS (@lem4496775 A B s x f a) (@lem4496774 A B s x f a)). Qed.
Lemma lem4496780 {A : Type'} (x : A) (a : A) : (term1193 A x a) = (x = a).
Proof. exact (@lem16933 (x = a)). Qed.
Lemma lem4496781 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1194 A B x f a) = (term1194 A B x f a).
Proof. exact (eq_refl (term1194 A B x f a)). Qed.
Lemma lem4496782 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496783 {A : Type'} (x : A) (a : A) : (term1195 A x a) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4496782) (@lem4496780 A x a)). Qed.
Lemma lem4496784 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1197 A B x f a) = (term1198 A B x f a).
Proof. exact (MK_COMB (@lem4496783 A x a) (@lem4496781 A B x f a)). Qed.
Lemma lem4496785 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1199 A B x f a) = (term1197 A B x f a).
Proof. exact (@lem17160 (term1200 A x a) ((f x) = (f a))). Qed.
Lemma lem4496786 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1199 A B x f a) = (term1198 A B x f a).
Proof. exact (TRANS (@lem4496785 A B x f a) (@lem4496784 A B x f a)). Qed.
Lemma lem4496793 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1205 A B a f x d) = (term1206 A B a f x d).
Proof. exact (@lem17160 (x = a) ((f x) = d)). Qed.
Lemma lem4496794 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496795 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1207 A B x f a) = (term1208 A B x f a).
Proof. exact (MK_COMB (@lem4496794) (@lem4496786 A B x f a)). Qed.
Lemma lem4496796 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1209 A B a f x d) = (term1210 A B a f x d).
Proof. exact (MK_COMB (@lem4496795 A B x f a) (@lem4496793 A B a f x d)). Qed.
Lemma lem4496797 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1211 A B a f x d) = (term1209 A B a f x d).
Proof. exact (@lem17045 (term855 A B x f a) (term849 A B a f x d)). Qed.
Lemma lem4496798 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1211 A B a f x d) = (term1210 A B a f x d).
Proof. exact (TRANS (@lem4496797 A B a f x d) (@lem4496796 A B a f x d)). Qed.
Lemma lem4496800 {A : Type'} (x : A) (s : A -> Prop) : (term1212 A x s) = (term1212 A x s).
Proof. exact (eq_refl (term1212 A x s)). Qed.
Lemma lem4496801 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1213 A B s a f x d) = (term1214 A B s a f x d).
Proof. exact (MK_COMB (@lem4496800 A x s) (@lem4496798 A B a f x d)). Qed.
Lemma lem4496802 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1215 A B s a f x d) = (term1213 A B s a f x d).
Proof. exact (@lem17160 (@IN A x s) (term851 A B a f x d)). Qed.
Lemma lem4496803 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1215 A B s a f x d) = (term1214 A B s a f x d).
Proof. exact (TRANS (@lem4496802 A B s a f x d) (@lem4496801 A B s a f x d)). Qed.
Lemma lem4496804 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496805 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1216 A B s x f a) = (term1217 A B s x f a).
Proof. exact (MK_COMB (@lem4496804) (@lem4496776 A B s x f a)). Qed.
Lemma lem4496806 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1218 A B s a f x d) = (term1219 A B s a f x d).
Proof. exact (MK_COMB (@lem4496805 A B s x f a) (@lem4496803 A B s a f x d)). Qed.
Lemma lem4496807 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1220 A B s a f x d) = (term1218 A B s a f x d).
Proof. exact (@lem17045 (term1221 A B s x f a) (term1222 A B s a f x d)). Qed.
Lemma lem4496808 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1220 A B s a f x d) = (term1219 A B s a f x d).
Proof. exact (TRANS (@lem4496807 A B s a f x d) (@lem4496806 A B s a f x d)). Qed.
Lemma lem4496809 {A : Type'} (P : A -> Prop) : (term1223 A P) = (term1224 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4496810 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1225 A B s a f d) = (term1226 A B s a f d).
Proof. exact (@lem4496809 A (term861 A B s a f d)). Qed.
Lemma lem4496811 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1227 A B s a f d x) = (term859 A B s a f x d).
Proof. exact (eq_refl (term1227 A B s a f d x)). Qed.
Lemma lem4496812 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4496813 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1228 A B s a f d x) = (term1220 A B s a f x d).
Proof. exact (MK_COMB (@lem4496812) (@lem4496811 A B s a f x d)). Qed.
Lemma lem4496814 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1228 A B s a f d x) = (term1219 A B s a f x d).
Proof. exact (TRANS (@lem4496813 A B s a f x d) (@lem4496808 A B s a f x d)). Qed.
Lemma lem4496815 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1229 A B s a f d) = (term1230 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4496814 A B s a f x d)). Qed.
Lemma lem4496816 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4496817 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1226 A B s a f d) = (term1231 A B s a f d).
Proof. exact (MK_COMB (@lem4496816 A) (@lem4496815 A B s a f d)). Qed.
Lemma lem4496818 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1225 A B s a f d) = (term1231 A B s a f d).
Proof. exact (TRANS (@lem4496810 A B s a f d) (@lem4496817 A B s a f d)). Qed.
Lemma lem4496819 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1232 A B f a t).
Proof. exact (eq_refl (term1232 A B f a t)). Qed.
Lemma lem4496820 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496821 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1233 A B s a f d) = (term1234 A B s a f d).
Proof. exact (MK_COMB (@lem4496820) (@lem4496818 A B s a f d)). Qed.
Lemma lem4496822 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1235 A B s d f a t) = (term1236 A B s d f a t).
Proof. exact (MK_COMB (@lem4496821 A B s a f d) (@lem4496819 A B f a t)). Qed.
Lemma lem4496823 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1237 A B s d f a t) = (term1235 A B s d f a t).
Proof. exact (@lem17045 (term862 A B s a f d) (term169 A B f a t)). Qed.
Lemma lem4496824 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1237 A B s d f a t) = (term1236 A B s d f a t).
Proof. exact (TRANS (@lem4496823 A B s d f a t) (@lem4496822 A B s d f a t)). Qed.
Lemma lem4496827 {A : Type'} (x : A) (s : A -> Prop) : (term1192 A x s) = (@IN A x s).
Proof. exact (@lem16933 (@IN A x s)). Qed.
Lemma lem4496828 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1232 A B f x t) = (term1232 A B f x t).
Proof. exact (eq_refl (term1232 A B f x t)). Qed.
Lemma lem4496829 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4496830 {A : Type'} (x : A) (s : A -> Prop) : (term1201 A x s) = (term512 A x s).
Proof. exact (MK_COMB (@lem4496829) (@lem4496827 A x s)). Qed.
Lemma lem4496831 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1238 A B s f x t) = (term1239 A B s f x t).
Proof. exact (MK_COMB (@lem4496830 A x s) (@lem4496828 A B f x t)). Qed.
Lemma lem4496832 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1240 A B s f x t) = (term1238 A B s f x t).
Proof. exact (@lem17160 (term178 A x s) (term169 A B f x t)). Qed.
Lemma lem4496833 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1240 A B s f x t) = (term1239 A B s f x t).
Proof. exact (TRANS (@lem4496832 A B s f x t) (@lem4496831 A B s f x t)). Qed.
Lemma lem4496834 {A : Type'} (P : A -> Prop) : (term1223 A P) = (term1224 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4496835 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1241 A B s f t) = (term1242 A B s f t).
Proof. exact (@lem4496834 A (term837 A B s f t)). Qed.
Lemma lem4496836 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1243 A B s f t x) = (term836 A B s f x t).
Proof. exact (eq_refl (term1243 A B s f t x)). Qed.
Lemma lem4496837 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4496838 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1244 A B s f t x) = (term1240 A B s f x t).
Proof. exact (MK_COMB (@lem4496837) (@lem4496836 A B s f x t)). Qed.
Lemma lem4496839 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1244 A B s f t x) = (term1239 A B s f x t).
Proof. exact (TRANS (@lem4496838 A B s f x t) (@lem4496833 A B s f x t)). Qed.
Lemma lem4496840 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1245 A B s f t) = (term1246 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4496839 A B s f x t)). Qed.
Lemma lem4496841 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4496842 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1242 A B s f t) = (term1247 A B s f t).
Proof. exact (MK_COMB (@lem4496841 A) (@lem4496840 A B s f t)). Qed.
Lemma lem4496843 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1241 A B s f t) = (term1247 A B s f t).
Proof. exact (TRANS (@lem4496835 A B s f t) (@lem4496842 A B s f t)). Qed.
Lemma lem4496844 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496845 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1248 A B s d f a t) = (term1249 A B s d f a t).
Proof. exact (MK_COMB (@lem4496844) (@lem4496824 A B s d f a t)). Qed.
Lemma lem4496846 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1250 A B d a s f t) = (term1251 A B d a s f t).
Proof. exact (MK_COMB (@lem4496845 A B s d f a t) (@lem4496843 A B s f t)). Qed.
Lemma lem4496847 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term923 A B d a s f t) = (term1250 A B d a s f t).
Proof. exact (@lem17045 (term864 A B s d f a t) (term838 A B s f t)). Qed.
Lemma lem4496848 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term923 A B d a s f t) = (term1251 A B d a s f t).
Proof. exact (TRANS (@lem4496847 A B d a s f t) (@lem4496846 A B d a s f t)). Qed.
Lemma lem4496850 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1252 A P Q) = (term1253 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem4496851 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1252 A P Q) = (term1253 A P Q).
Proof. exact (@lem4496850 A P Q). Qed.
Lemma lem4496852 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1254 A B s a f d) = (term1255 A B s a f d).
Proof. exact (@lem4496851 A (term1256 A B s f a) (term1257 A B s a f d)). Qed.
Lemma lem4496853 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1258 A B s f a x) = (term1203 A B s x f a).
Proof. exact (eq_refl (term1258 A B s f a x)). Qed.
Lemma lem4496854 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496855 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1259 A B s f a x) = (term1217 A B s x f a).
Proof. exact (MK_COMB (@lem4496854) (@lem4496853 A B s x f a)). Qed.
Lemma lem4496856 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1260 A B s a f d x) = (term1214 A B s a f x d).
Proof. exact (eq_refl (term1260 A B s a f d x)). Qed.
Lemma lem4496857 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1261 A B s a f d x) = (term1219 A B s a f x d).
Proof. exact (MK_COMB (@lem4496855 A B s x f a) (@lem4496856 A B s a f x d)). Qed.
Lemma lem4496858 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1262 A B s a f d) = (term1230 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4496857 A B s a f x d)). Qed.
Lemma lem4496859 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4496860 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1254 A B s a f d) = (term1231 A B s a f d).
Proof. exact (MK_COMB (@lem4496859 A) (@lem4496858 A B s a f d)). Qed.
Lemma lem4496861 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4496862 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1263 A B s a f d) = (term1264 A B s a f d).
Proof. exact (MK_COMB (@lem4496861) (@lem4496860 A B s a f d)). Qed.
Lemma lem4496863 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1258 A B s f a x) = (term1203 A B s x f a).
Proof. exact (eq_refl (term1258 A B s f a x)). Qed.
Lemma lem4496864 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1265 A B s f a) = (term1256 A B s f a).
Proof. exact (fun_ext (fun x : A => @lem4496863 A B s x f a)). Qed.
Lemma lem4496865 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4496866 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1266 A B s f a) = (term1267 A B s f a).
Proof. exact (MK_COMB (@lem4496865 A) (@lem4496864 A B s f a)). Qed.
Lemma lem4496867 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496868 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1268 A B s f a) = (term1269 A B s f a).
Proof. exact (MK_COMB (@lem4496867) (@lem4496866 A B s f a)). Qed.
Lemma lem4496869 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1260 A B s a f d x) = (term1214 A B s a f x d).
Proof. exact (eq_refl (term1260 A B s a f d x)). Qed.
Lemma lem4496870 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1270 A B s a f d) = (term1257 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4496869 A B s a f x d)). Qed.
Lemma lem4496871 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4496872 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1271 A B s a f d) = (term1272 A B s a f d).
Proof. exact (MK_COMB (@lem4496871 A) (@lem4496870 A B s a f d)). Qed.
Lemma lem4496873 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1255 A B s a f d) = (term1273 A B s a f d).
Proof. exact (MK_COMB (@lem4496868 A B s f a) (@lem4496872 A B s a f d)). Qed.
Lemma lem4496874 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : ((term1254 A B s a f d) = (term1255 A B s a f d)) = ((term1231 A B s a f d) = (term1273 A B s a f d)).
Proof. exact (MK_COMB (@lem4496862 A B s a f d) (@lem4496873 A B s a f d)). Qed.
Lemma lem4496875 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1231 A B s a f d) = (term1273 A B s a f d).
Proof. exact (EQ_MP (@lem4496874 A B s a f d) (@lem4496852 A B s a f d)). Qed.
Lemma lem4496972 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496973 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1234 A B s a f d) = (term1274 A B s a f d).
Proof. exact (MK_COMB (@lem4496972) (@lem4496875 A B s a f d)). Qed.
Lemma lem4496974 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1232 A B f a t).
Proof. exact (eq_refl (term1232 A B f a t)). Qed.
Lemma lem4496975 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1236 A B s d f a t) = (term1275 A B s d f a t).
Proof. exact (MK_COMB (@lem4496973 A B s a f d) (@lem4496974 A B f a t)). Qed.
Lemma lem4496976 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4496977 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1249 A B s d f a t) = (term1276 A B s d f a t).
Proof. exact (MK_COMB (@lem4496976) (@lem4496975 A B s d f a t)). Qed.
Lemma lem4497026 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1247 A B s f t) = (term1247 A B s f t).
Proof. exact (eq_refl (term1247 A B s f t)). Qed.
Lemma lem4497027 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1251 A B d a s f t) = (term1277 A B d a s f t).
Proof. exact (MK_COMB (@lem4496977 A B s d f a t) (@lem4497026 A B s f t)). Qed.
Lemma lem4497029 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem4497030 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (@lem4497029 A P Q). Qed.
Lemma lem4497031 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1255 A B s a f d) = (term1254 A B s a f d).
Proof. exact (@lem4497030 A (term1256 A B s f a) (term1257 A B s a f d)). Qed.
Lemma lem4497032 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1258 A B s f a x) = (term1203 A B s x f a).
Proof. exact (eq_refl (term1258 A B s f a x)). Qed.
Lemma lem4497033 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1265 A B s f a) = (term1256 A B s f a).
Proof. exact (fun_ext (fun x : A => @lem4497032 A B s x f a)). Qed.
Lemma lem4497034 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497035 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1266 A B s f a) = (term1267 A B s f a).
Proof. exact (MK_COMB (@lem4497034 A) (@lem4497033 A B s f a)). Qed.
Lemma lem4497036 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497037 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) : (term1268 A B s f a) = (term1269 A B s f a).
Proof. exact (MK_COMB (@lem4497036) (@lem4497035 A B s f a)). Qed.
Lemma lem4497038 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1260 A B s a f d x) = (term1214 A B s a f x d).
Proof. exact (eq_refl (term1260 A B s a f d x)). Qed.
Lemma lem4497039 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1270 A B s a f d) = (term1257 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4497038 A B s a f x d)). Qed.
Lemma lem4497040 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497041 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1271 A B s a f d) = (term1272 A B s a f d).
Proof. exact (MK_COMB (@lem4497040 A) (@lem4497039 A B s a f d)). Qed.
Lemma lem4497042 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1255 A B s a f d) = (term1273 A B s a f d).
Proof. exact (MK_COMB (@lem4497037 A B s f a) (@lem4497041 A B s a f d)). Qed.
Lemma lem4497043 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4497044 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1278 A B s a f d) = (term1279 A B s a f d).
Proof. exact (MK_COMB (@lem4497043) (@lem4497042 A B s a f d)). Qed.
Lemma lem4497045 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1258 A B s f a x) = (term1203 A B s x f a).
Proof. exact (eq_refl (term1258 A B s f a x)). Qed.
Lemma lem4497046 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497047 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1259 A B s f a x) = (term1217 A B s x f a).
Proof. exact (MK_COMB (@lem4497046) (@lem4497045 A B s x f a)). Qed.
Lemma lem4497048 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1260 A B s a f d x) = (term1214 A B s a f x d).
Proof. exact (eq_refl (term1260 A B s a f d x)). Qed.
Lemma lem4497049 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1261 A B s a f d x) = (term1219 A B s a f x d).
Proof. exact (MK_COMB (@lem4497047 A B s x f a) (@lem4497048 A B s a f x d)). Qed.
Lemma lem4497050 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1262 A B s a f d) = (term1230 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4497049 A B s a f x d)). Qed.
Lemma lem4497051 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497052 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1254 A B s a f d) = (term1231 A B s a f d).
Proof. exact (MK_COMB (@lem4497051 A) (@lem4497050 A B s a f d)). Qed.
Lemma lem4497053 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : ((term1255 A B s a f d) = (term1254 A B s a f d)) = ((term1273 A B s a f d) = (term1231 A B s a f d)).
Proof. exact (MK_COMB (@lem4497044 A B s a f d) (@lem4497052 A B s a f d)). Qed.
Lemma lem4497054 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1273 A B s a f d) = (term1231 A B s a f d).
Proof. exact (EQ_MP (@lem4497053 A B s a f d) (@lem4497031 A B s a f d)). Qed.
Lemma lem4497055 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497056 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1274 A B s a f d) = (term1234 A B s a f d).
Proof. exact (MK_COMB (@lem4497055) (@lem4497054 A B s a f d)). Qed.
Lemma lem4497057 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1232 A B f a t).
Proof. exact (eq_refl (term1232 A B f a t)). Qed.
Lemma lem4497058 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1275 A B s d f a t) = (term1236 A B s d f a t).
Proof. exact (MK_COMB (@lem4497056 A B s a f d) (@lem4497057 A B f a t)). Qed.
Lemma lem4497060 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1280 A P Q) = (term1281 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4497061 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1280 A P Q) = (term1281 A P Q).
Proof. exact (@lem4497060 A P Q). Qed.
Lemma lem4497062 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1282 A B s d f a t) = (term1283 A B s d f a t).
Proof. exact (@lem4497061 A (term1230 A B s a f d) (term1232 A B f a t)). Qed.
Lemma lem4497063 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1284 A B s a f d x) = (term1219 A B s a f x d).
Proof. exact (eq_refl (term1284 A B s a f d x)). Qed.
Lemma lem4497064 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1285 A B s a f d) = (term1230 A B s a f d).
Proof. exact (fun_ext (fun x : A => @lem4497063 A B s a f x d)). Qed.
Lemma lem4497065 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497066 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1286 A B s a f d) = (term1231 A B s a f d).
Proof. exact (MK_COMB (@lem4497065 A) (@lem4497064 A B s a f d)). Qed.
Lemma lem4497067 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497068 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (d : B) : (term1287 A B s a f d) = (term1234 A B s a f d).
Proof. exact (MK_COMB (@lem4497067) (@lem4497066 A B s a f d)). Qed.
Lemma lem4497069 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1232 A B f a t).
Proof. exact (eq_refl (term1232 A B f a t)). Qed.
Lemma lem4497070 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1282 A B s d f a t) = (term1236 A B s d f a t).
Proof. exact (MK_COMB (@lem4497068 A B s a f d) (@lem4497069 A B f a t)). Qed.
Lemma lem4497071 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4497072 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1288 A B s d f a t) = (term1289 A B s d f a t).
Proof. exact (MK_COMB (@lem4497071) (@lem4497070 A B s d f a t)). Qed.
Lemma lem4497073 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1284 A B s a f d x) = (term1219 A B s a f x d).
Proof. exact (eq_refl (term1284 A B s a f d x)). Qed.
Lemma lem4497074 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497075 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1290 A B s a f d x) = (term1291 A B s a f x d).
Proof. exact (MK_COMB (@lem4497074) (@lem4497073 A B s a f x d)). Qed.
Lemma lem4497076 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1232 A B f a t).
Proof. exact (eq_refl (term1232 A B f a t)). Qed.
Lemma lem4497077 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1292 A B s d x f a t) = (term1293 A B s x d f a t).
Proof. exact (MK_COMB (@lem4497075 A B s a f x d) (@lem4497076 A B f a t)). Qed.
Lemma lem4497078 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1294 A B s d f a t) = (term1295 A B s d f a t).
Proof. exact (fun_ext (fun x : A => @lem4497077 A B s x d f a t)). Qed.
Lemma lem4497079 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497080 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1283 A B s d f a t) = (term1296 A B s d f a t).
Proof. exact (MK_COMB (@lem4497079 A) (@lem4497078 A B s d f a t)). Qed.
Lemma lem4497081 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : ((term1282 A B s d f a t) = (term1283 A B s d f a t)) = ((term1236 A B s d f a t) = (term1296 A B s d f a t)).
Proof. exact (MK_COMB (@lem4497072 A B s d f a t) (@lem4497080 A B s d f a t)). Qed.
Lemma lem4497082 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1236 A B s d f a t) = (term1296 A B s d f a t).
Proof. exact (EQ_MP (@lem4497081 A B s d f a t) (@lem4497062 A B s d f a t)). Qed.
Lemma lem4497083 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1275 A B s d f a t) = (term1296 A B s d f a t).
Proof. exact (TRANS (@lem4497058 A B s d f a t) (@lem4497082 A B s d f a t)). Qed.
Lemma lem4497084 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497085 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1276 A B s d f a t) = (term1297 A B s d f a t).
Proof. exact (MK_COMB (@lem4497084) (@lem4497083 A B s d f a t)). Qed.
Lemma lem4497086 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1247 A B s f t) = (term1247 A B s f t).
Proof. exact (eq_refl (term1247 A B s f t)). Qed.
Lemma lem4497087 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1277 A B d a s f t) = (term1298 A B d a s f t).
Proof. exact (MK_COMB (@lem4497085 A B s d f a t) (@lem4497086 A B s f t)). Qed.
Lemma lem4497089 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem4497090 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (@lem4497089 A P Q). Qed.
Lemma lem4497091 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1299 A B d a s f t) = (term1300 A B d a s f t).
Proof. exact (@lem4497090 A (term1295 A B s d f a t) (term1246 A B s f t)). Qed.
Lemma lem4497092 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1301 A B s d f a t x) = (term1293 A B s x d f a t).
Proof. exact (eq_refl (term1301 A B s d f a t x)). Qed.
Lemma lem4497093 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1302 A B s d f a t) = (term1295 A B s d f a t).
Proof. exact (fun_ext (fun x : A => @lem4497092 A B s x d f a t)). Qed.
Lemma lem4497094 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497095 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1303 A B s d f a t) = (term1296 A B s d f a t).
Proof. exact (MK_COMB (@lem4497094 A) (@lem4497093 A B s d f a t)). Qed.
Lemma lem4497096 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497097 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1304 A B s d f a t) = (term1297 A B s d f a t).
Proof. exact (MK_COMB (@lem4497096) (@lem4497095 A B s d f a t)). Qed.
Lemma lem4497098 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1305 A B s f t x) = (term1239 A B s f x t).
Proof. exact (eq_refl (term1305 A B s f t x)). Qed.
Lemma lem4497099 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1306 A B s f t) = (term1246 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4497098 A B s f x t)). Qed.
Lemma lem4497100 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497101 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1307 A B s f t) = (term1247 A B s f t).
Proof. exact (MK_COMB (@lem4497100 A) (@lem4497099 A B s f t)). Qed.
Lemma lem4497102 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1299 A B d a s f t) = (term1298 A B d a s f t).
Proof. exact (MK_COMB (@lem4497097 A B s d f a t) (@lem4497101 A B s f t)). Qed.
Lemma lem4497103 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4497104 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1308 A B d a s f t) = (term1309 A B d a s f t).
Proof. exact (MK_COMB (@lem4497103) (@lem4497102 A B d a s f t)). Qed.
Lemma lem4497105 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1301 A B s d f a t x) = (term1293 A B s x d f a t).
Proof. exact (eq_refl (term1301 A B s d f a t x)). Qed.
Lemma lem4497106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497107 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1310 A B s d f a t x) = (term1311 A B s x d f a t).
Proof. exact (MK_COMB (@lem4497106) (@lem4497105 A B s x d f a t)). Qed.
Lemma lem4497108 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1305 A B s f t x) = (term1239 A B s f x t).
Proof. exact (eq_refl (term1305 A B s f t x)). Qed.
Lemma lem4497109 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1312 A B d a s f t x) = (term1313 A B d a s f x t).
Proof. exact (MK_COMB (@lem4497107 A B s x d f a t) (@lem4497108 A B s f x t)). Qed.
Lemma lem4497110 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1314 A B d a s f t) = (term1315 A B d a s f t).
Proof. exact (fun_ext (fun x : A => @lem4497109 A B d a s f x t)). Qed.
Lemma lem4497111 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4497112 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1300 A B d a s f t) = (term1316 A B d a s f t).
Proof. exact (MK_COMB (@lem4497111 A) (@lem4497110 A B d a s f t)). Qed.
Lemma lem4497113 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : ((term1299 A B d a s f t) = (term1300 A B d a s f t)) = ((term1298 A B d a s f t) = (term1316 A B d a s f t)).
Proof. exact (MK_COMB (@lem4497104 A B d a s f t) (@lem4497112 A B d a s f t)). Qed.
Lemma lem4497114 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1298 A B d a s f t) = (term1316 A B d a s f t).
Proof. exact (EQ_MP (@lem4497113 A B d a s f t) (@lem4497091 A B d a s f t)). Qed.
Lemma lem4497115 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1277 A B d a s f t) = (term1316 A B d a s f t).
Proof. exact (TRANS (@lem4497087 A B d a s f t) (@lem4497114 A B d a s f t)). Qed.
Lemma lem4497116 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1251 A B d a s f t) = (term1316 A B d a s f t).
Proof. exact (TRANS (@lem4497027 A B d a s f t) (@lem4497115 A B d a s f t)). Qed.
Lemma lem4497117 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term923 A B d a s f t) = (term1316 A B d a s f t).
Proof. exact (TRANS (@lem4496848 A B d a s f t) (@lem4497116 A B d a s f t)). Qed.
Lemma lem4497118 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term923 A B d a s f t) : term1316 A B d a s f t.
Proof. exact (EQ_MP (@lem4497117 A B d a s f t) (@lem4495709 A B d a s f t h1)). Qed.
Lemma lem4497119 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1313 A B d a s f x t) : term1313 A B d a s f x t.
Proof. exact (h1). Qed.
Lemma lem4497265 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4497270 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497272 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497270 A B f x). Qed.
Lemma lem4497273 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497274 {A B : Type'} (f : A -> B) (x : A) : (term828 A B f x) = (term1317 A B f x).
Proof. exact (MK_COMB (@lem4497265 B) (@lem4497272 A B f x)). Qed.
Lemma lem4497275 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term1318 A B f x t).
Proof. exact (MK_COMB (@lem4497274 A B f x) (@lem4497273 B t)). Qed.
Lemma lem4497277 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497278 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4497277 B (type686 B) f x). Qed.
Lemma lem4497279 {A B : Type'} (f : A -> B) (x : A) : (term1317 A B f x) = (term1319 A B f x).
Proof. exact (@lem4497278 B (@IN B) (@I (A -> B) f x)). Qed.
Lemma lem4497280 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497281 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1318 A B f x t) = (term1320 A B f x t).
Proof. exact (MK_COMB (@lem4497279 A B f x) (@lem4497280 B t)). Qed.
Lemma lem4497283 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497284 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4497283 (B -> Prop) Prop f x). Qed.
Lemma lem4497285 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1320 A B f x t) = (term1321 A B f x t).
Proof. exact (@lem4497284 B (term1319 A B f x) t). Qed.
Lemma lem4497286 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1318 A B f x t) = (term1321 A B f x t).
Proof. exact (TRANS (@lem4497281 A B f x t) (@lem4497285 A B f x t)). Qed.
Lemma lem4497287 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term1321 A B f x t).
Proof. exact (TRANS (@lem4497275 A B f x t) (@lem4497286 A B f x t)). Qed.
Lemma lem4497288 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497295 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497296 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4497295 A (type686 A) f x). Qed.
Lemma lem4497297 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4497296 A (@IN A) x). Qed.
Lemma lem4497298 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4497299 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4497297 A x) (@lem4497298 A s)). Qed.
Lemma lem4497301 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497302 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4497301 (A -> Prop) Prop f x). Qed.
Lemma lem4497303 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4497302 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4497305 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4497299 A x s) (@lem4497303 A x s)). Qed.
Lemma lem4497306 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4497288) (@lem4497305 A x s)). Qed.
Lemma lem4497315 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4497316 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1178 A a x s) = (term1325 A a x s).
Proof. exact (MK_COMB (@lem4497315 A x a) (@lem4497306 A x s)). Qed.
Lemma lem4497317 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497318 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1180 A a x s) = (term1326 A a x s).
Proof. exact (MK_COMB (@lem4497317) (@lem4497316 A a x s)). Qed.
Lemma lem4497319 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1182 A B a s f x t) = (term1327 A B a s f x t).
Proof. exact (MK_COMB (@lem4497318 A a x s) (@lem4497287 A B f x t)). Qed.
Lemma lem4497320 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1183 A B a s f t) = (term1328 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4497319 A B a s f x t)). Qed.
Lemma lem4497321 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4497322 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1184 A B a s f t) = (term1329 A B a s f t).
Proof. exact (MK_COMB (@lem4497321 A) (@lem4497320 A B a s f t)). Qed.
Lemma lem4497323 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1329 A B a s f t.
Proof. exact (EQ_MP (@lem4497322 A B a s f t) (@lem4496690 A B a s f t h1)). Qed.
Lemma lem4497324 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4497329 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497331 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497329 A B f x). Qed.
Lemma lem4497332 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4497333 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term1330 A B f x).
Proof. exact (MK_COMB (@lem4497324 B) (@lem4497331 A B f x)). Qed.
Lemma lem4497334 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((@I (A -> B) f x) = d).
Proof. exact (MK_COMB (@lem4497333 A B f x) (@lem4497332 B d)). Qed.
Lemma lem4497341 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497342 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4497341 A (type686 A) f x). Qed.
Lemma lem4497343 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4497342 A (@IN A) x). Qed.
Lemma lem4497344 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4497345 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4497343 A x) (@lem4497344 A s)). Qed.
Lemma lem4497347 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497348 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4497347 (A -> Prop) Prop f x). Qed.
Lemma lem4497349 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4497348 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4497351 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4497345 A x s) (@lem4497349 A x s)). Qed.
Lemma lem4497358 {A : Type'} (x : A) (a : A) : (term847 A x a) = (term847 A x a).
Proof. exact (eq_refl (term847 A x a)). Qed.
Lemma lem4497359 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term78 A a x s) = (term1331 A a x s).
Proof. exact (MK_COMB (@lem4497358 A x a) (@lem4497351 A x s)). Qed.
Lemma lem4497360 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497361 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term1187 A a x s) = (term1332 A a x s).
Proof. exact (MK_COMB (@lem4497360) (@lem4497359 A a x s)). Qed.
Lemma lem4497362 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term1189 A B a s f x d) = (term1333 A B a s f x d).
Proof. exact (MK_COMB (@lem4497361 A a x s) (@lem4497334 A B f x d)). Qed.
Lemma lem4497363 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term1190 A B a s f d) = (term1334 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4497362 A B a s f x d)). Qed.
Lemma lem4497364 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4497365 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term1191 A B a s f d) = (term1335 A B a s f d).
Proof. exact (MK_COMB (@lem4497364 A) (@lem4497363 A B a s f d)). Qed.
Lemma lem4497366 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1335 A B a s f d.
Proof. exact (EQ_MP (@lem4497365 A B a s f d) (@lem4496759 A B a s f d h1)). Qed.
Lemma lem4497367 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497368 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4497373 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497375 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497373 A B f x). Qed.
Lemma lem4497376 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497377 {A B : Type'} (f : A -> B) (x : A) : (term828 A B f x) = (term1317 A B f x).
Proof. exact (MK_COMB (@lem4497368 B) (@lem4497375 A B f x)). Qed.
Lemma lem4497378 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term1318 A B f x t).
Proof. exact (MK_COMB (@lem4497377 A B f x) (@lem4497376 B t)). Qed.
Lemma lem4497380 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497381 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4497380 B (type686 B) f x). Qed.
Lemma lem4497382 {A B : Type'} (f : A -> B) (x : A) : (term1317 A B f x) = (term1319 A B f x).
Proof. exact (@lem4497381 B (@IN B) (@I (A -> B) f x)). Qed.
Lemma lem4497383 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497384 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1318 A B f x t) = (term1320 A B f x t).
Proof. exact (MK_COMB (@lem4497382 A B f x) (@lem4497383 B t)). Qed.
Lemma lem4497386 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497387 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4497386 (B -> Prop) Prop f x). Qed.
Lemma lem4497388 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1320 A B f x t) = (term1321 A B f x t).
Proof. exact (@lem4497387 B (term1319 A B f x) t). Qed.
Lemma lem4497389 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1318 A B f x t) = (term1321 A B f x t).
Proof. exact (TRANS (@lem4497384 A B f x t) (@lem4497388 A B f x t)). Qed.
Lemma lem4497390 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term169 A B f x t) = (term1321 A B f x t).
Proof. exact (TRANS (@lem4497378 A B f x t) (@lem4497389 A B f x t)). Qed.
Lemma lem4497391 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1232 A B f x t) = (term1336 A B f x t).
Proof. exact (MK_COMB (@lem4497367) (@lem4497390 A B f x t)). Qed.
Lemma lem4497398 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497399 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4497398 A (type686 A) f x). Qed.
Lemma lem4497400 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4497399 A (@IN A) x). Qed.
Lemma lem4497401 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4497402 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4497400 A x) (@lem4497401 A s)). Qed.
Lemma lem4497404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497405 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4497404 (A -> Prop) Prop f x). Qed.
Lemma lem4497406 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4497405 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4497408 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4497402 A x s) (@lem4497406 A x s)). Qed.
Lemma lem4497409 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4497410 {A : Type'} (x : A) (s : A -> Prop) : (term512 A x s) = (term1337 A x s).
Proof. exact (MK_COMB (@lem4497409) (@lem4497408 A x s)). Qed.
Lemma lem4497411 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1239 A B s f x t) = (term1338 A B s f x t).
Proof. exact (MK_COMB (@lem4497410 A x s) (@lem4497391 A B f x t)). Qed.
Lemma lem4497412 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497413 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4497418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497419 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497418 A B f x). Qed.
Lemma lem4497421 {A B : Type'} (f : A -> B) (a : A) : (f a) = (@I (A -> B) f a).
Proof. exact (@lem4497419 A B f a). Qed.
Lemma lem4497422 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497423 {A B : Type'} (f : A -> B) (a : A) : (term828 A B f a) = (term1317 A B f a).
Proof. exact (MK_COMB (@lem4497413 B) (@lem4497421 A B f a)). Qed.
Lemma lem4497424 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term169 A B f a t) = (term1318 A B f a t).
Proof. exact (MK_COMB (@lem4497423 A B f a) (@lem4497422 B t)). Qed.
Lemma lem4497426 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497427 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4497426 B (type686 B) f x). Qed.
Lemma lem4497428 {A B : Type'} (f : A -> B) (a : A) : (term1317 A B f a) = (term1319 A B f a).
Proof. exact (@lem4497427 B (@IN B) (@I (A -> B) f a)). Qed.
Lemma lem4497429 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4497430 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1318 A B f a t) = (term1320 A B f a t).
Proof. exact (MK_COMB (@lem4497428 A B f a) (@lem4497429 B t)). Qed.
Lemma lem4497432 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497433 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4497432 (B -> Prop) Prop f x). Qed.
Lemma lem4497434 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1320 A B f a t) = (term1321 A B f a t).
Proof. exact (@lem4497433 B (term1319 A B f a) t). Qed.
Lemma lem4497435 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1318 A B f a t) = (term1321 A B f a t).
Proof. exact (TRANS (@lem4497430 A B f a t) (@lem4497434 A B f a t)). Qed.
Lemma lem4497436 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term169 A B f a t) = (term1321 A B f a t).
Proof. exact (TRANS (@lem4497424 A B f a t) (@lem4497435 A B f a t)). Qed.
Lemma lem4497437 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1232 A B f a t) = (term1336 A B f a t).
Proof. exact (MK_COMB (@lem4497412) (@lem4497436 A B f a t)). Qed.
Lemma lem4497438 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497439 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4497444 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497446 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497444 A B f x). Qed.
Lemma lem4497447 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4497448 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term1330 A B f x).
Proof. exact (MK_COMB (@lem4497439 B) (@lem4497446 A B f x)). Qed.
Lemma lem4497449 {A B : Type'} (f : A -> B) (x : A) (d : B) : ((f x) = d) = ((@I (A -> B) f x) = d).
Proof. exact (MK_COMB (@lem4497448 A B f x) (@lem4497447 B d)). Qed.
Lemma lem4497450 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term1339 A B f x d) = (term1340 A B f x d).
Proof. exact (MK_COMB (@lem4497438) (@lem4497449 A B f x d)). Qed.
Lemma lem4497459 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4497460 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1206 A B a f x d) = (term1341 A B a f x d).
Proof. exact (MK_COMB (@lem4497459 A x a) (@lem4497450 A B f x d)). Qed.
Lemma lem4497461 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497462 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4497467 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497469 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497467 A B f x). Qed.
Lemma lem4497474 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497475 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497474 A B f x). Qed.
Lemma lem4497477 {A B : Type'} (f : A -> B) (a : A) : (f a) = (@I (A -> B) f a).
Proof. exact (@lem4497475 A B f a). Qed.
Lemma lem4497478 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term1330 A B f x).
Proof. exact (MK_COMB (@lem4497462 B) (@lem4497469 A B f x)). Qed.
Lemma lem4497479 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((f x) = (f a)) = ((@I (A -> B) f x) = (@I (A -> B) f a)).
Proof. exact (MK_COMB (@lem4497478 A B f x) (@lem4497477 A B f a)). Qed.
Lemma lem4497480 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1194 A B x f a) = (term1342 A B x f a).
Proof. exact (MK_COMB (@lem4497461) (@lem4497479 A B x f a)). Qed.
Lemma lem4497487 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4497488 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1198 A B x f a) = (term1343 A B x f a).
Proof. exact (MK_COMB (@lem4497487 A x a) (@lem4497480 A B x f a)). Qed.
Lemma lem4497489 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497490 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1208 A B x f a) = (term1344 A B x f a).
Proof. exact (MK_COMB (@lem4497489) (@lem4497488 A B x f a)). Qed.
Lemma lem4497491 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) : (term1210 A B a f x d) = (term1345 A B a f x d).
Proof. exact (MK_COMB (@lem4497490 A B x f a) (@lem4497460 A B a f x d)). Qed.
Lemma lem4497492 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497499 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497500 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4497499 A (type686 A) f x). Qed.
Lemma lem4497501 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4497500 A (@IN A) x). Qed.
Lemma lem4497502 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4497503 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4497501 A x) (@lem4497502 A s)). Qed.
Lemma lem4497505 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497506 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4497505 (A -> Prop) Prop f x). Qed.
Lemma lem4497507 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4497506 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4497509 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4497503 A x s) (@lem4497507 A x s)). Qed.
Lemma lem4497510 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4497492) (@lem4497509 A x s)). Qed.
Lemma lem4497511 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4497512 {A : Type'} (x : A) (s : A -> Prop) : (term1212 A x s) = (term1346 A x s).
Proof. exact (MK_COMB (@lem4497511) (@lem4497510 A x s)). Qed.
Lemma lem4497513 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1214 A B s a f x d) = (term1347 A B s a f x d).
Proof. exact (MK_COMB (@lem4497512 A x s) (@lem4497491 A B a f x d)). Qed.
Lemma lem4497514 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4497515 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4497520 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497522 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497520 A B f x). Qed.
Lemma lem4497527 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497528 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4497527 A B f x). Qed.
Lemma lem4497530 {A B : Type'} (f : A -> B) (a : A) : (f a) = (@I (A -> B) f a).
Proof. exact (@lem4497528 A B f a). Qed.
Lemma lem4497531 {A B : Type'} (f : A -> B) (x : A) : (term262 A B f x) = (term1330 A B f x).
Proof. exact (MK_COMB (@lem4497515 B) (@lem4497522 A B f x)). Qed.
Lemma lem4497532 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((f x) = (f a)) = ((@I (A -> B) f x) = (@I (A -> B) f a)).
Proof. exact (MK_COMB (@lem4497531 A B f x) (@lem4497530 A B f a)). Qed.
Lemma lem4497533 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1194 A B x f a) = (term1342 A B x f a).
Proof. exact (MK_COMB (@lem4497514) (@lem4497532 A B x f a)). Qed.
Lemma lem4497540 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4497541 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1198 A B x f a) = (term1343 A B x f a).
Proof. exact (MK_COMB (@lem4497540 A x a) (@lem4497533 A B x f a)). Qed.
Lemma lem4497548 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497549 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4497548 A (type686 A) f x). Qed.
Lemma lem4497550 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4497549 A (@IN A) x). Qed.
Lemma lem4497551 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4497552 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4497550 A x) (@lem4497551 A s)). Qed.
Lemma lem4497554 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4497555 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4497554 (A -> Prop) Prop f x). Qed.
Lemma lem4497556 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4497555 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4497558 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4497552 A x s) (@lem4497556 A x s)). Qed.
Lemma lem4497559 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4497560 {A : Type'} (x : A) (s : A -> Prop) : (term512 A x s) = (term1337 A x s).
Proof. exact (MK_COMB (@lem4497559) (@lem4497558 A x s)). Qed.
Lemma lem4497561 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1203 A B s x f a) = (term1348 A B s x f a).
Proof. exact (MK_COMB (@lem4497560 A x s) (@lem4497541 A B x f a)). Qed.
Lemma lem4497562 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497563 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) : (term1217 A B s x f a) = (term1349 A B s x f a).
Proof. exact (MK_COMB (@lem4497562) (@lem4497561 A B s x f a)). Qed.
Lemma lem4497564 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1219 A B s a f x d) = (term1350 A B s a f x d).
Proof. exact (MK_COMB (@lem4497563 A B s x f a) (@lem4497513 A B s a f x d)). Qed.
Lemma lem4497565 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497566 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) : (term1291 A B s a f x d) = (term1351 A B s a f x d).
Proof. exact (MK_COMB (@lem4497565) (@lem4497564 A B s a f x d)). Qed.
Lemma lem4497567 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1293 A B s x d f a t) = (term1352 A B s x d f a t).
Proof. exact (MK_COMB (@lem4497566 A B s a f x d) (@lem4497437 A B f a t)). Qed.
Lemma lem4497568 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4497569 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) : (term1311 A B s x d f a t) = (term1353 A B s x d f a t).
Proof. exact (MK_COMB (@lem4497568) (@lem4497567 A B s x d f a t)). Qed.
Lemma lem4497570 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1313 A B d a s f x t) = (term1354 A B d a s f x t).
Proof. exact (MK_COMB (@lem4497569 A B s x d f a t) (@lem4497411 A B s f x t)). Qed.
Lemma lem4497571 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1313 A B d a s f x t) : term1354 A B d a s f x t.
Proof. exact (EQ_MP (@lem4497570 A B d a s f x t) (@lem4497119 A B d a s f x t h1)). Qed.
Lemma lem4498061 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term1352 A B s x d f a t) : term1352 A B s x d f a t.
Proof. exact (h1). Qed.
Lemma lem4498062 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1338 A B s f x t.
Proof. exact (h1). Qed.
Lemma lem4498063 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1350 A B s a f x d) : term1350 A B s a f x d.
Proof. exact (h1). Qed.
Lemma lem4498065 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1348 A B s x f a.
Proof. exact (h1). Qed.
Lemma lem4498066 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1347 A B s a f x d) : term1347 A B s a f x d.
Proof. exact (h1). Qed.
Lemma lem4498067 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1343 A B x f a.
Proof. exact (proj2 (@lem4498065 A B s x f a h1)). Qed.
Lemma lem4498071 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1347 A B s a f x d) : term1345 A B a f x d.
Proof. exact (proj2 (@lem4498066 A B s a f x d h1)). Qed.
Lemma lem4498073 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : term1343 A B x f a.
Proof. exact (h1). Qed.
Lemma lem4498074 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1341 A B a f x d.
Proof. exact (h1). Qed.
Lemma lem4498615 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term1333 A B a s f x d) = (term1333 A B a s f x d).
Proof. exact (eq_refl (term1333 A B a s f x d)). Qed.
Lemma lem4498616 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term1334 A B a s f d) = (term1334 A B a s f d).
Proof. exact (fun_ext (fun x : A => @lem4498615 A B a s f x d)). Qed.
Lemma lem4498617 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4498619 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) : (term1335 A B a s f d) = (term1335 A B a s f d).
Proof. exact (MK_COMB (@lem4498617 A) (@lem4498616 A B a s f d)). Qed.
Lemma lem4498620 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1335 A B a s f d.
Proof. exact (EQ_MP (@lem4498619 A B a s f d) (@lem4497366 A B a s f d h1)). Qed.
Lemma lem4498835 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1327 A B a s f x t) = (term1355 A B a s f x t).
Proof. exact (@lem19699 (term1200 A x a) (term1323 A x s) (term1321 A B f x t)). Qed.
Lemma lem4498836 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1328 A B a s f t) = (term1356 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4498835 A B a s f x t)). Qed.
Lemma lem4498837 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4498839 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1329 A B a s f t) = (term1357 A B a s f t).
Proof. exact (MK_COMB (@lem4498837 A) (@lem4498836 A B a s f t)). Qed.
Lemma lem4498840 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1357 A B a s f t.
Proof. exact (EQ_MP (@lem4498839 A B a s f t) (@lem4497323 A B a s f t h1)). Qed.
Lemma lem4499028 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (h1 : term1336 A B f a t) : term1336 A B f a t.
Proof. exact (h1). Qed.
Lemma lem4499066 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term1327 A B a s f x t) = (term1355 A B a s f x t).
Proof. exact (@lem19699 (term1200 A x a) (term1323 A x s) (term1321 A B f x t)). Qed.
Lemma lem4499067 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1328 A B a s f t) = (term1356 A B a s f t).
Proof. exact (fun_ext (fun x : A => @lem4499066 A B a s f x t)). Qed.
Lemma lem4499068 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4499070 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term1329 A B a s f t) = (term1357 A B a s f t).
Proof. exact (MK_COMB (@lem4499068 A) (@lem4499067 A B a s f t)). Qed.
Lemma lem4499071 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1357 A B a s f t.
Proof. exact (EQ_MP (@lem4499070 A B a s f t) (@lem4497323 A B a s f t h1)). Qed.
Lemma lem4499333 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1358 A B a s f d _52351.
Proof. exact (@lem4498620 A B a s f d h1 _52351). Qed.
Lemma lem4499334 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52351 : A) (d : B) : (term1358 A B a s f d _52351) = (term1333 A B a s f _52351 d).
Proof. exact (eq_refl (term1358 A B a s f d _52351)). Qed.
Lemma lem4499335 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1333 A B a s f _52351 d.
Proof. exact (EQ_MP (@lem4499334 A B a s f _52351 d) (@lem4499333 A B _52351 a s f d h1)). Qed.
Lemma lem4499363 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1359 A B a s f t _52361.
Proof. exact (@lem4498840 A B a s f t h1 _52361). Qed.
Lemma lem4499364 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52361 : A) (t : B -> Prop) : (term1359 A B a s f t _52361) = (term1355 A B a s f _52361 t).
Proof. exact (eq_refl (term1359 A B a s f t _52361)). Qed.
Lemma lem4499365 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1355 A B a s f _52361 t.
Proof. exact (EQ_MP (@lem4499364 A B a s f _52361 t) (@lem4499363 A B _52361 a s f t h1)). Qed.
Lemma lem4499396 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1359 A B a s f t _52372.
Proof. exact (@lem4499071 A B a s f t h1 _52372). Qed.
Lemma lem4499397 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52372 : A) (t : B -> Prop) : (term1359 A B a s f t _52372) = (term1355 A B a s f _52372 t).
Proof. exact (eq_refl (term1359 A B a s f t _52372)). Qed.
Lemma lem4499398 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1355 A B a s f _52372 t.
Proof. exact (EQ_MP (@lem4499397 A B a s f _52372 t) (@lem4499396 A B _52372 a s f t h1)). Qed.
Lemma lem4499476 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : x = a.
Proof. exact (proj1 (@lem4498067 A B s x f a h1)). Qed.
Lemma lem4499478 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1342 A B x f a.
Proof. exact (proj2 (@lem4498067 A B s x f a h1)). Qed.
Lemma lem4499528 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : x = a.
Proof. exact (proj1 (@lem4498073 A B x f a h1)). Qed.
Lemma lem4499530 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : term1342 A B x f a.
Proof. exact (proj2 (@lem4498073 A B x f a h1)). Qed.
Lemma lem4499563 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52351 : A) (d : B) : (term1333 A B a s f _52351 d) = (term1360 A B a s f _52351 d).
Proof. exact (@lem4492221 (_52351 = a) (term1322 A _52351 s) ((@I (A -> B) f _52351) = d)). Qed.
Lemma lem4499630 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (h1 : term1336 A B f a t) : term1336 A B f a t.
Proof. exact (h1). Qed.
Lemma lem4499832 {A B : Type'} (f : A -> B) (a : A) : (term1361 A B f a) = (term1361 A B f a).
Proof. exact (eq_refl (term1361 A B f a)). Qed.
Lemma lem4499833 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : (term1362 A B f a x) = (term1363 A B f a).
Proof. exact (MK_COMB (@lem4499832 A B f a) (@lem4499476 A B s x f a h1)). Qed.
Lemma lem4499834 {A B : Type'} (f : A -> B) (a : A) : (term1363 A B f a) = (term1364 A B f a).
Proof. exact (eq_refl (term1363 A B f a)). Qed.
Lemma lem4499835 {A B : Type'} (f : A -> B) (a : A) (x : A) : (term1365 A B f a x) = (term1365 A B f a x).
Proof. exact (eq_refl (term1365 A B f a x)). Qed.
Lemma lem4499836 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1363 A B f a)) = ((term1362 A B f a x) = (term1364 A B f a)).
Proof. exact (MK_COMB (@lem4499835 A B f a x) (@lem4499834 A B f a)). Qed.
Lemma lem4499837 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1362 A B f a x) = (term1342 A B x f a).
Proof. exact (eq_refl (term1362 A B f a x)). Qed.
Lemma lem4499838 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4499839 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1365 A B f a x) = (term1366 A B x f a).
Proof. exact (MK_COMB (@lem4499838) (@lem4499837 A B x f a)). Qed.
Lemma lem4499840 {A B : Type'} (f : A -> B) (a : A) : (term1364 A B f a) = (term1364 A B f a).
Proof. exact (eq_refl (term1364 A B f a)). Qed.
Lemma lem4499841 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1364 A B f a)) = ((term1342 A B x f a) = (term1364 A B f a)).
Proof. exact (MK_COMB (@lem4499839 A B x f a) (@lem4499840 A B f a)). Qed.
Lemma lem4499842 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1363 A B f a)) = ((term1342 A B x f a) = (term1364 A B f a)).
Proof. exact (TRANS (@lem4499836 A B x f a) (@lem4499841 A B x f a)). Qed.
Lemma lem4499843 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : (term1342 A B x f a) = (term1364 A B f a).
Proof. exact (EQ_MP (@lem4499842 A B x f a) (@lem4499833 A B s x f a h1)). Qed.
Lemma lem4500012 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1364 A B f a.
Proof. exact (EQ_MP (@lem4499843 A B s x f a h1) (@lem4499478 A B s x f a h1)). Qed.
Lemma lem4500180 {A B : Type'} (f : A -> B) (a : A) : (term1361 A B f a) = (term1361 A B f a).
Proof. exact (eq_refl (term1361 A B f a)). Qed.
Lemma lem4500181 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : (term1362 A B f a x) = (term1363 A B f a).
Proof. exact (MK_COMB (@lem4500180 A B f a) (@lem4499528 A B x f a h1)). Qed.
Lemma lem4500182 {A B : Type'} (f : A -> B) (a : A) : (term1363 A B f a) = (term1364 A B f a).
Proof. exact (eq_refl (term1363 A B f a)). Qed.
Lemma lem4500183 {A B : Type'} (f : A -> B) (a : A) (x : A) : (term1365 A B f a x) = (term1365 A B f a x).
Proof. exact (eq_refl (term1365 A B f a x)). Qed.
Lemma lem4500184 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1363 A B f a)) = ((term1362 A B f a x) = (term1364 A B f a)).
Proof. exact (MK_COMB (@lem4500183 A B f a x) (@lem4500182 A B f a)). Qed.
Lemma lem4500185 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1362 A B f a x) = (term1342 A B x f a).
Proof. exact (eq_refl (term1362 A B f a x)). Qed.
Lemma lem4500186 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4500187 {A B : Type'} (x : A) (f : A -> B) (a : A) : (term1365 A B f a x) = (term1366 A B x f a).
Proof. exact (MK_COMB (@lem4500186) (@lem4500185 A B x f a)). Qed.
Lemma lem4500188 {A B : Type'} (f : A -> B) (a : A) : (term1364 A B f a) = (term1364 A B f a).
Proof. exact (eq_refl (term1364 A B f a)). Qed.
Lemma lem4500189 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1364 A B f a)) = ((term1342 A B x f a) = (term1364 A B f a)).
Proof. exact (MK_COMB (@lem4500187 A B x f a) (@lem4500188 A B f a)). Qed.
Lemma lem4500190 {A B : Type'} (x : A) (f : A -> B) (a : A) : ((term1362 A B f a x) = (term1363 A B f a)) = ((term1342 A B x f a) = (term1364 A B f a)).
Proof. exact (TRANS (@lem4500184 A B x f a) (@lem4500189 A B x f a)). Qed.
Lemma lem4500191 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : (term1342 A B x f a) = (term1364 A B f a).
Proof. exact (EQ_MP (@lem4500190 A B x f a) (@lem4500181 A B x f a h1)). Qed.
Lemma lem4500360 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : term1364 A B f a.
Proof. exact (EQ_MP (@lem4500191 A B x f a h1) (@lem4499530 A B x f a h1)). Qed.
Lemma lem4500472 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1360 A B a s f _52351 d.
Proof. exact (EQ_MP (@lem4499563 A B a s f _52351 d) (@lem4499335 A B _52351 a s f d h1)). Qed.
Lemma lem4500542 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1340 A B f x d.
Proof. exact (proj2 (@lem4498074 A B a f x d h1)). Qed.
Lemma lem4500696 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (h1 : term1336 A B f a t) : term1336 A B f a t.
Proof. exact (h1). Qed.
Lemma lem4500710 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1367 A B a f _52361 t.
Proof. exact (proj1 (@lem4499365 A B _52361 a s f t h1)). Qed.
Lemma lem4500864 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1336 A B f x t.
Proof. exact (proj2 (@lem4498062 A B s f x t h1)). Qed.
Lemma lem4500892 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1368 A B s f _52372 t.
Proof. exact (proj2 (@lem4499398 A B _52372 a s f t h1)). Qed.
Lemma lem4501302 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4501303 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4501302 B x). Qed.
Lemma lem4501304 {A B : Type'} (f : A -> B) (a : A) : (@I (A -> B) f a) = (@I (A -> B) f a).
Proof. exact (@lem4501303 B (@I (A -> B) f a)). Qed.
Lemma lem4501305 {A B : Type'} (f : A -> B) (a : A) : term1369 A B f a.
Proof. exact (fun h0 : term1364 A B f a => @lem4501304 A B f a). Qed.
Lemma lem4501307 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4501308 {A B : Type'} (f : A -> B) (a : A) : (term1369 A B f a) = ((@I (A -> B) f a) = (@I (A -> B) f a)).
Proof. exact (@lem4501307 ((@I (A -> B) f a) = (@I (A -> B) f a))). Qed.
Lemma lem4501309 {A B : Type'} (f : A -> B) (a : A) : (@I (A -> B) f a) = (@I (A -> B) f a).
Proof. exact (EQ_MP (@lem4501308 A B f a) (@lem4501305 A B f a)). Qed.
Lemma lem4501312 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4501314 {A B : Type'} (f : A -> B) (a : A) : (term1364 A B f a) = (term1371 A B f a).
Proof. exact (@lem4501312 ((@I (A -> B) f a) = (@I (A -> B) f a))). Qed.
Lemma lem4501317 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1371 A B f a.
Proof. exact (EQ_MP (@lem4501314 A B f a) (@lem4500012 A B s x f a h1)). Qed.
Lemma lem4501320 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : False.
Proof. exact (@lem4501317 A B s x f a h1 (@lem4501309 A B f a)). Qed.
Lemma lem4501321 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : term1372.
Proof. exact (fun h0 : ~ False => @lem4501320 A B s x f a h1). Qed.
Lemma lem4501323 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4501324 : term1372 = False.
Proof. exact (@lem4501323 False). Qed.
Lemma lem4501735 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4501736 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4501735 B x). Qed.
Lemma lem4501737 {A B : Type'} (f : A -> B) (a : A) : (@I (A -> B) f a) = (@I (A -> B) f a).
Proof. exact (@lem4501736 B (@I (A -> B) f a)). Qed.
Lemma lem4501738 {A B : Type'} (f : A -> B) (a : A) : term1369 A B f a.
Proof. exact (fun h0 : term1364 A B f a => @lem4501737 A B f a). Qed.
Lemma lem4501740 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4501741 {A B : Type'} (f : A -> B) (a : A) : (term1369 A B f a) = ((@I (A -> B) f a) = (@I (A -> B) f a)).
Proof. exact (@lem4501740 ((@I (A -> B) f a) = (@I (A -> B) f a))). Qed.
Lemma lem4501742 {A B : Type'} (f : A -> B) (a : A) : (@I (A -> B) f a) = (@I (A -> B) f a).
Proof. exact (EQ_MP (@lem4501741 A B f a) (@lem4501738 A B f a)). Qed.
Lemma lem4501745 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4501747 {A B : Type'} (f : A -> B) (a : A) : (term1364 A B f a) = (term1371 A B f a).
Proof. exact (@lem4501745 ((@I (A -> B) f a) = (@I (A -> B) f a))). Qed.
Lemma lem4501750 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : term1371 A B f a.
Proof. exact (EQ_MP (@lem4501747 A B f a) (@lem4500360 A B x f a h1)). Qed.
Lemma lem4501753 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : False.
Proof. exact (@lem4501750 A B x f a h1 (@lem4501742 A B f a)). Qed.
Lemma lem4501754 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : term1372.
Proof. exact (fun h0 : ~ False => @lem4501753 A B x f a h1). Qed.
Lemma lem4501756 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4501757 : term1372 = False.
Proof. exact (@lem4501756 False). Qed.
Lemma lem4502168 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1200 A x a.
Proof. exact (proj1 (@lem4498074 A B a f x d h1)). Qed.
Lemma lem4502169 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1373 A x a.
Proof. exact (fun h0 : x = a => @lem4502168 A B a f x d h1). Qed.
Lemma lem4502171 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4502172 {A : Type'} (x : A) (a : A) : (term1373 A x a) = (term1200 A x a).
Proof. exact (@lem4502171 (x = a)). Qed.
Lemma lem4502173 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1200 A x a.
Proof. exact (EQ_MP (@lem4502172 A x a) (@lem4502169 A B a f x d h1)). Qed.
Lemma lem4502175 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1347 A B s a f x d) : term1323 A x s.
Proof. exact (proj1 (@lem4498066 A B s a f x d h1)). Qed.
Lemma lem4502176 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1347 A B s a f x d) : term1375 A x s.
Proof. exact (fun h0 : term1322 A x s => @lem4502175 A B s a f x d h1). Qed.
Lemma lem4502178 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4502179 {A : Type'} (x : A) (s : A -> Prop) : (term1375 A x s) = (term1323 A x s).
Proof. exact (@lem4502178 (term1322 A x s)). Qed.
Lemma lem4502180 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1347 A B s a f x d) : term1323 A x s.
Proof. exact (EQ_MP (@lem4502179 A x s) (@lem4502176 A B s a f x d h1)). Qed.
Lemma lem4502198 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4502199 {A B : Type'} (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : (term1376 A B s f _52351 d) = (term1377 A B f d _52351 s).
Proof. exact (@lem4502198 ((@I (A -> B) f _52351) = d) (term1322 A _52351 s)). Qed.
Lemma lem4502207 {A : Type'} (_52351 : A) (a : A) : (term847 A _52351 a) = (term847 A _52351 a).
Proof. exact (eq_refl (term847 A _52351 a)). Qed.
Lemma lem4502208 {A B : Type'} (a : A) (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : (term1360 A B a s f _52351 d) = (term1378 A B a f d _52351 s).
Proof. exact (MK_COMB (@lem4502207 A _52351 a) (@lem4502199 A B f d _52351 s)). Qed.
Lemma lem4502219 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4502220 {A B : Type'} (a : A) (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : (term1379 A B a s f _52351 d) = (term1380 A B a f d _52351 s).
Proof. exact (MK_COMB (@lem4502219) (@lem4502208 A B a f d _52351 s)). Qed.
Lemma lem4502224 (q : Prop) (p : Prop) (r : Prop) : (term70 p q r) = (term70 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4502225 {A B : Type'} (a : A) (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : (term1381 A B f d a _52351 s) = (term1378 A B a f d _52351 s).
Proof. exact (@lem4502224 (_52351 = a) ((@I (A -> B) f _52351) = d) (term1322 A _52351 s)). Qed.
Lemma lem4502245 {A B : Type'} (a : A) (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : ((term1360 A B a s f _52351 d) = (term1381 A B f d a _52351 s)) = ((term1378 A B a f d _52351 s) = (term1378 A B a f d _52351 s)).
Proof. exact (MK_COMB (@lem4502220 A B a f d _52351 s) (@lem4502225 A B a f d _52351 s)). Qed.
Lemma lem4502247 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4502248 (x : Prop) : (x = x) = True.
Proof. exact (@lem4502247 Prop x). Qed.
Lemma lem4502249 {A B : Type'} (a : A) (f : A -> B) (d : B) (_52351 : A) (s : A -> Prop) : ((term1378 A B a f d _52351 s) = (term1378 A B a f d _52351 s)) = True.
Proof. exact (@lem4502248 (term1378 A B a f d _52351 s)). Qed.
Lemma lem4502250 {A B : Type'} (f : A -> B) (d : B) (a : A) (_52351 : A) (s : A -> Prop) : ((term1360 A B a s f _52351 d) = (term1381 A B f d a _52351 s)) = True.
Proof. exact (TRANS (@lem4502245 A B a f d _52351 s) (@lem4502249 A B a f d _52351 s)). Qed.
Lemma lem4502251 {A B : Type'} (f : A -> B) (d : B) (a : A) (_52351 : A) (s : A -> Prop) : True = ((term1360 A B a s f _52351 d) = (term1381 A B f d a _52351 s)).
Proof. exact (SYM (@lem4502250 A B f d a _52351 s)). Qed.
Lemma lem4502252 {A B : Type'} (f : A -> B) (d : B) (a : A) (_52351 : A) (s : A -> Prop) : (term1360 A B a s f _52351 d) = (term1381 A B f d a _52351 s).
Proof. exact (EQ_MP (@lem4502251 A B f d a _52351 s) (@lem0)). Qed.
Lemma lem4502253 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1381 A B f d a _52351 s.
Proof. exact (EQ_MP (@lem4502252 A B f d a _52351 s) (@lem4500472 A B _52351 a s f d h1)). Qed.
Lemma lem4502255 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4502256 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52351 : A) (d : B) : (term1381 A B f d a _52351 s) = (term1383 A B a s f _52351 d).
Proof. exact (@lem4502255 (term1331 A a _52351 s) ((@I (A -> B) f _52351) = d)). Qed.
Lemma lem4502258 (a : Prop) (b : Prop) : (term1384 a b) = (term1385 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4502259 {A : Type'} (a : A) (_52351 : A) (s : A -> Prop) : (term1386 A a _52351 s) = (term1325 A a _52351 s).
Proof. exact (@lem4502258 (_52351 = a) (term1322 A _52351 s)). Qed.
Lemma lem4502260 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4502261 {A : Type'} (a : A) (_52351 : A) (s : A -> Prop) : (term1387 A a _52351 s) = (term1388 A a _52351 s).
Proof. exact (MK_COMB (@lem4502260) (@lem4502259 A a _52351 s)). Qed.
Lemma lem4502262 {A B : Type'} (f : A -> B) (_52351 : A) (d : B) : ((@I (A -> B) f _52351) = d) = ((@I (A -> B) f _52351) = d).
Proof. exact (eq_refl ((@I (A -> B) f _52351) = d)). Qed.
Lemma lem4502263 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52351 : A) (d : B) : (term1383 A B a s f _52351 d) = (term1389 A B a s f _52351 d).
Proof. exact (MK_COMB (@lem4502261 A a _52351 s) (@lem4502262 A B f _52351 d)). Qed.
Lemma lem4502264 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (_52351 : A) (d : B) : (term1381 A B f d a _52351 s) = (term1389 A B a s f _52351 d).
Proof. exact (TRANS (@lem4502256 A B a s f _52351 d) (@lem4502263 A B a s f _52351 d)). Qed.
Lemma lem4502266 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) (h2 : term1347 A B s a f x d) : term1325 A a x s.
Proof. exact (conj (@lem4502173 A B a f x d h1) (@lem4502180 A B s a f x d h2)). Qed.
Lemma lem4502268 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1389 A B a s f _52351 d.
Proof. exact (EQ_MP (@lem4502264 A B a s f _52351 d) (@lem4502253 A B _52351 a s f d h1)). Qed.
Lemma lem4502269 {A B : Type'} (_52351 : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1389 A B a s f _52351 d.
Proof. exact (@lem4502268 A B _52351 a s f d h1). Qed.
Lemma lem4502270 {A B : Type'} (x : A) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term594 A B a s f d) : term1389 A B a s f x d.
Proof. exact (@lem4502269 A B x a s f d h1). Qed.
Lemma lem4502273 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : (@I (A -> B) f x) = d.
Proof. exact (@lem4502270 A B x a s f d h1 (@lem4502266 A B s a f x d h2 h3)). Qed.
Lemma lem4502274 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : term1390 A B f x d.
Proof. exact (fun h0 : term1340 A B f x d => @lem4502273 A B s a f x d h1 h2 h3). Qed.
Lemma lem4502276 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4502277 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term1390 A B f x d) = ((@I (A -> B) f x) = d).
Proof. exact (@lem4502276 ((@I (A -> B) f x) = d)). Qed.
Lemma lem4502278 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : (@I (A -> B) f x) = d.
Proof. exact (EQ_MP (@lem4502277 A B f x d) (@lem4502274 A B s a f x d h1 h2 h3)). Qed.
Lemma lem4502281 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4502283 {A B : Type'} (f : A -> B) (x : A) (d : B) : (term1340 A B f x d) = (term1391 A B f x d).
Proof. exact (@lem4502281 ((@I (A -> B) f x) = d)). Qed.
Lemma lem4502286 {A B : Type'} (a : A) (f : A -> B) (x : A) (d : B) (h1 : term1341 A B a f x d) : term1391 A B f x d.
Proof. exact (EQ_MP (@lem4502283 A B f x d) (@lem4500542 A B a f x d h1)). Qed.
Lemma lem4502289 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : False.
Proof. exact (@lem4502286 A B a f x d h2 (@lem4502278 A B s a f x d h1 h2 h3)). Qed.
Lemma lem4502290 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : term1372.
Proof. exact (fun h0 : ~ False => @lem4502289 A B s a f x d h1 h2 h3). Qed.
Lemma lem4502292 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4502293 : term1372 = False.
Proof. exact (@lem4502292 False). Qed.
Lemma lem4502704 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem4502705 {A : Type'} (x : A) : x = x.
Proof. exact (@lem4502704 A x). Qed.
Lemma lem4502706 {A : Type'} (a : A) : a = a.
Proof. exact (@lem4502705 A a). Qed.
Lemma lem4502707 {A : Type'} (a : A) : term1392 A a.
Proof. exact (fun h0 : term1393 A a => @lem4502706 A a). Qed.
Lemma lem4502709 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4502710 {A : Type'} (a : A) : (term1392 A a) = (a = a).
Proof. exact (@lem4502709 (a = a)). Qed.
Lemma lem4502711 {A : Type'} (a : A) : a = a.
Proof. exact (EQ_MP (@lem4502710 A a) (@lem4502707 A a)). Qed.
Lemma lem4502717 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4502718 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : (term1367 A B a f _52361 t) = (term1394 A B f t _52361 a).
Proof. exact (@lem4502717 (term1321 A B f _52361 t) (term1200 A _52361 a)). Qed.
Lemma lem4502726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4502727 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : (term1395 A B a f _52361 t) = (term1396 A B f t _52361 a).
Proof. exact (MK_COMB (@lem4502726) (@lem4502718 A B f t _52361 a)). Qed.
Lemma lem4502735 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : (term1394 A B f t _52361 a) = (term1394 A B f t _52361 a).
Proof. exact (eq_refl (term1394 A B f t _52361 a)). Qed.
Lemma lem4502736 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : ((term1367 A B a f _52361 t) = (term1394 A B f t _52361 a)) = ((term1394 A B f t _52361 a) = (term1394 A B f t _52361 a)).
Proof. exact (MK_COMB (@lem4502727 A B f t _52361 a) (@lem4502735 A B f t _52361 a)). Qed.
Lemma lem4502738 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4502739 (x : Prop) : (x = x) = True.
Proof. exact (@lem4502738 Prop x). Qed.
Lemma lem4502740 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : ((term1394 A B f t _52361 a) = (term1394 A B f t _52361 a)) = True.
Proof. exact (@lem4502739 (term1394 A B f t _52361 a)). Qed.
Lemma lem4502741 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : ((term1367 A B a f _52361 t) = (term1394 A B f t _52361 a)) = True.
Proof. exact (TRANS (@lem4502736 A B f t _52361 a) (@lem4502740 A B f t _52361 a)). Qed.
Lemma lem4502742 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : True = ((term1367 A B a f _52361 t) = (term1394 A B f t _52361 a)).
Proof. exact (SYM (@lem4502741 A B f t _52361 a)). Qed.
Lemma lem4502743 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52361 : A) (a : A) : (term1367 A B a f _52361 t) = (term1394 A B f t _52361 a).
Proof. exact (EQ_MP (@lem4502742 A B f t _52361 a) (@lem0)). Qed.
Lemma lem4502744 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1394 A B f t _52361 a.
Proof. exact (EQ_MP (@lem4502743 A B f t _52361 a) (@lem4500710 A B _52361 a s f t h1)). Qed.
Lemma lem4502746 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4502747 {A B : Type'} (a : A) (f : A -> B) (_52361 : A) (t : B -> Prop) : (term1394 A B f t _52361 a) = (term1397 A B a f _52361 t).
Proof. exact (@lem4502746 (term1200 A _52361 a) (term1321 A B f _52361 t)). Qed.
Lemma lem4502749 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4502750 {A : Type'} (_52361 : A) (a : A) : (term1193 A _52361 a) = (_52361 = a).
Proof. exact (@lem4502749 (_52361 = a)). Qed.
Lemma lem4502751 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4502752 {A : Type'} (_52361 : A) (a : A) : (term1398 A _52361 a) = (term1399 A _52361 a).
Proof. exact (MK_COMB (@lem4502751) (@lem4502750 A _52361 a)). Qed.
Lemma lem4502753 {A B : Type'} (f : A -> B) (_52361 : A) (t : B -> Prop) : (term1321 A B f _52361 t) = (term1321 A B f _52361 t).
Proof. exact (eq_refl (term1321 A B f _52361 t)). Qed.
Lemma lem4502754 {A B : Type'} (a : A) (f : A -> B) (_52361 : A) (t : B -> Prop) : (term1397 A B a f _52361 t) = (term1400 A B a f _52361 t).
Proof. exact (MK_COMB (@lem4502752 A _52361 a) (@lem4502753 A B f _52361 t)). Qed.
Lemma lem4502755 {A B : Type'} (a : A) (f : A -> B) (_52361 : A) (t : B -> Prop) : (term1394 A B f t _52361 a) = (term1400 A B a f _52361 t).
Proof. exact (TRANS (@lem4502747 A B a f _52361 t) (@lem4502754 A B a f _52361 t)). Qed.
Lemma lem4502758 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1400 A B a f _52361 t.
Proof. exact (EQ_MP (@lem4502755 A B a f _52361 t) (@lem4502744 A B _52361 a s f t h1)). Qed.
Lemma lem4502759 {A B : Type'} (_52361 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1400 A B a f _52361 t.
Proof. exact (@lem4502758 A B _52361 a s f t h1). Qed.
Lemma lem4502760 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1401 A B f a t.
Proof. exact (@lem4502759 A B a a s f t h1). Qed.
Lemma lem4502763 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1321 A B f a t.
Proof. exact (@lem4502760 A B a s f t h1 (@lem4502711 A a)). Qed.
Lemma lem4502764 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1402 A B f a t.
Proof. exact (fun h0 : term1336 A B f a t => @lem4502763 A B a s f t h1). Qed.
Lemma lem4502766 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4502767 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1402 A B f a t) = (term1321 A B f a t).
Proof. exact (@lem4502766 (term1321 A B f a t)). Qed.
Lemma lem4502768 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1321 A B f a t.
Proof. exact (EQ_MP (@lem4502767 A B f a t) (@lem4502764 A B a s f t h1)). Qed.
Lemma lem4502771 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4502773 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) : (term1336 A B f a t) = (term1403 A B f a t).
Proof. exact (@lem4502771 (term1321 A B f a t)). Qed.
Lemma lem4502776 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (h1 : term1336 A B f a t) : term1403 A B f a t.
Proof. exact (EQ_MP (@lem4502773 A B f a t) (@lem4500696 A B f a t h1)). Qed.
Lemma lem4502779 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (@lem4502776 A B f a t h2 (@lem4502768 A B a s f t h1)). Qed.
Lemma lem4502780 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : term1372.
Proof. exact (fun h0 : ~ False => @lem4502779 A B s f a t h1 h2). Qed.
Lemma lem4502782 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4502783 : term1372 = False.
Proof. exact (@lem4502782 False). Qed.
Lemma lem4502784 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (EQ_MP (@lem4502783) (@lem4502780 A B s f a t h1 h2)). Qed.
Lemma lem4503194 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1322 A x s.
Proof. exact (proj1 (@lem4498062 A B s f x t h1)). Qed.
Lemma lem4503195 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1404 A x s.
Proof. exact (fun h0 : term1323 A x s => @lem4503194 A B s f x t h1). Qed.
Lemma lem4503197 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4503198 {A : Type'} (x : A) (s : A -> Prop) : (term1404 A x s) = (term1322 A x s).
Proof. exact (@lem4503197 (term1322 A x s)). Qed.
Lemma lem4503199 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1322 A x s.
Proof. exact (EQ_MP (@lem4503198 A x s) (@lem4503195 A B s f x t h1)). Qed.
Lemma lem4503205 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4503206 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : (term1368 A B s f _52372 t) = (term1405 A B f t _52372 s).
Proof. exact (@lem4503205 (term1321 A B f _52372 t) (term1323 A _52372 s)). Qed.
Lemma lem4503212 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4503213 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : (term1406 A B s f _52372 t) = (term1407 A B f t _52372 s).
Proof. exact (MK_COMB (@lem4503212) (@lem4503206 A B f t _52372 s)). Qed.
Lemma lem4503219 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : (term1405 A B f t _52372 s) = (term1405 A B f t _52372 s).
Proof. exact (eq_refl (term1405 A B f t _52372 s)). Qed.
Lemma lem4503220 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : ((term1368 A B s f _52372 t) = (term1405 A B f t _52372 s)) = ((term1405 A B f t _52372 s) = (term1405 A B f t _52372 s)).
Proof. exact (MK_COMB (@lem4503213 A B f t _52372 s) (@lem4503219 A B f t _52372 s)). Qed.
Lemma lem4503222 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4503223 (x : Prop) : (x = x) = True.
Proof. exact (@lem4503222 Prop x). Qed.
Lemma lem4503224 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : ((term1405 A B f t _52372 s) = (term1405 A B f t _52372 s)) = True.
Proof. exact (@lem4503223 (term1405 A B f t _52372 s)). Qed.
Lemma lem4503225 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : ((term1368 A B s f _52372 t) = (term1405 A B f t _52372 s)) = True.
Proof. exact (TRANS (@lem4503220 A B f t _52372 s) (@lem4503224 A B f t _52372 s)). Qed.
Lemma lem4503226 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : True = ((term1368 A B s f _52372 t) = (term1405 A B f t _52372 s)).
Proof. exact (SYM (@lem4503225 A B f t _52372 s)). Qed.
Lemma lem4503227 {A B : Type'} (f : A -> B) (t : B -> Prop) (_52372 : A) (s : A -> Prop) : (term1368 A B s f _52372 t) = (term1405 A B f t _52372 s).
Proof. exact (EQ_MP (@lem4503226 A B f t _52372 s) (@lem0)). Qed.
Lemma lem4503228 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1405 A B f t _52372 s.
Proof. exact (EQ_MP (@lem4503227 A B f t _52372 s) (@lem4500892 A B _52372 a s f t h1)). Qed.
Lemma lem4503230 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4503231 {A B : Type'} (s : A -> Prop) (f : A -> B) (_52372 : A) (t : B -> Prop) : (term1405 A B f t _52372 s) = (term1408 A B s f _52372 t).
Proof. exact (@lem4503230 (term1323 A _52372 s) (term1321 A B f _52372 t)). Qed.
Lemma lem4503233 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4503234 {A : Type'} (_52372 : A) (s : A -> Prop) : (term1409 A _52372 s) = (term1322 A _52372 s).
Proof. exact (@lem4503233 (term1322 A _52372 s)). Qed.
Lemma lem4503235 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4503236 {A : Type'} (_52372 : A) (s : A -> Prop) : (term1410 A _52372 s) = (term1411 A _52372 s).
Proof. exact (MK_COMB (@lem4503235) (@lem4503234 A _52372 s)). Qed.
Lemma lem4503237 {A B : Type'} (f : A -> B) (_52372 : A) (t : B -> Prop) : (term1321 A B f _52372 t) = (term1321 A B f _52372 t).
Proof. exact (eq_refl (term1321 A B f _52372 t)). Qed.
Lemma lem4503238 {A B : Type'} (s : A -> Prop) (f : A -> B) (_52372 : A) (t : B -> Prop) : (term1408 A B s f _52372 t) = (term1412 A B s f _52372 t).
Proof. exact (MK_COMB (@lem4503236 A _52372 s) (@lem4503237 A B f _52372 t)). Qed.
Lemma lem4503239 {A B : Type'} (s : A -> Prop) (f : A -> B) (_52372 : A) (t : B -> Prop) : (term1405 A B f t _52372 s) = (term1412 A B s f _52372 t).
Proof. exact (TRANS (@lem4503231 A B s f _52372 t) (@lem4503238 A B s f _52372 t)). Qed.
Lemma lem4503242 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1412 A B s f _52372 t.
Proof. exact (EQ_MP (@lem4503239 A B s f _52372 t) (@lem4503228 A B _52372 a s f t h1)). Qed.
Lemma lem4503243 {A B : Type'} (_52372 : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1412 A B s f _52372 t.
Proof. exact (@lem4503242 A B _52372 a s f t h1). Qed.
Lemma lem4503244 {A B : Type'} (x : A) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term588 A B a s f t) : term1412 A B s f x t.
Proof. exact (@lem4503243 A B x a s f t h1). Qed.
Lemma lem4503247 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : term1321 A B f x t.
Proof. exact (@lem4503244 A B x a s f t h1 (@lem4503199 A B s f x t h2)). Qed.
Lemma lem4503248 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : term1402 A B f x t.
Proof. exact (fun h0 : term1336 A B f x t => @lem4503247 A B a s f x t h1 h2). Qed.
Lemma lem4503250 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4503251 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1402 A B f x t) = (term1321 A B f x t).
Proof. exact (@lem4503250 (term1321 A B f x t)). Qed.
Lemma lem4503252 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : term1321 A B f x t.
Proof. exact (EQ_MP (@lem4503251 A B f x t) (@lem4503248 A B a s f x t h1 h2)). Qed.
Lemma lem4503255 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4503257 {A B : Type'} (f : A -> B) (x : A) (t : B -> Prop) : (term1336 A B f x t) = (term1403 A B f x t).
Proof. exact (@lem4503255 (term1321 A B f x t)). Qed.
Lemma lem4503260 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term1338 A B s f x t) : term1403 A B f x t.
Proof. exact (EQ_MP (@lem4503257 A B f x t) (@lem4500864 A B s f x t h1)). Qed.
Lemma lem4503263 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : False.
Proof. exact (@lem4503260 A B s f x t h2 (@lem4503252 A B a s f x t h1 h2)). Qed.
Lemma lem4503264 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : term1372.
Proof. exact (fun h0 : ~ False => @lem4503263 A B a s f x t h1 h2). Qed.
Lemma lem4503266 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4503267 : term1372 = False.
Proof. exact (@lem4503266 False). Qed.
Lemma lem4503269 {A B : Type'} (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1338 A B s f x t) : False.
Proof. exact (EQ_MP (@lem4503267) (@lem4503264 A B a s f x t h1 h2)). Qed.
Lemma lem4503270 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : (term1336 A B f a t) = False.
Proof. exact (prop_ext (fun h3 : term1336 A B f a t => @lem4502784 A B s f a t h1 h2) (fun h3 : False => @lem4500696 A B f a t h2)). Qed.
Lemma lem4503272 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (EQ_MP (@lem4503270 A B s f a t h1 h2) (@lem4500696 A B f a t h2)). Qed.
Lemma lem4503273 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1341 A B a f x d) (h3 : term1347 A B s a f x d) : False.
Proof. exact (EQ_MP (@lem4502293) (@lem4502290 A B s a f x d h1 h2 h3)). Qed.
Lemma lem4503275 {A B : Type'} (x : A) (f : A -> B) (a : A) (h1 : term1343 A B x f a) : False.
Proof. exact (EQ_MP (@lem4501757) (@lem4501754 A B x f a h1)). Qed.
Lemma lem4503277 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (a : A) (h1 : term1348 A B s x f a) : False.
Proof. exact (EQ_MP (@lem4501324) (@lem4501321 A B s x f a h1)). Qed.
Lemma lem4503278 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : (term1336 A B f a t) = False.
Proof. exact (prop_ext (fun h3 : term1336 A B f a t => @lem4503272 A B s f a t h1 h2) (fun h3 : False => @lem4499630 A B f a t h2)). Qed.
Lemma lem4503279 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (EQ_MP (@lem4503278 A B s f a t h1 h2) (@lem4499630 A B f a t h2)). Qed.
Lemma lem4503280 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : (term1336 A B f a t) = False.
Proof. exact (prop_ext (fun h3 : term1336 A B f a t => @lem4503279 A B s f a t h1 h2) (fun h3 : False => @lem4499028 A B f a t h2)). Qed.
Lemma lem4503281 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (EQ_MP (@lem4503280 A B s f a t h1 h2) (@lem4499028 A B f a t h2)). Qed.
Lemma lem4503282 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : (term1336 A B f a t) = False.
Proof. exact (prop_ext (fun h3 : term1336 A B f a t => @lem4503281 A B s f a t h1 h2) (fun h3 : False => @lem4499028 A B f a t h2)). Qed.
Lemma lem4503283 {A B : Type'} (s : A -> Prop) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term588 A B a s f t) (h2 : term1336 A B f a t) : False.
Proof. exact (EQ_MP (@lem4503282 A B s f a t h1 h2) (@lem4499028 A B f a t h2)). Qed.
Lemma lem4503284 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1347 A B s a f x d) : False.
Proof. exact (or_elim (@lem4498071 A B s a f x d h2) (fun h0 : term1343 A B x f a => @lem4503275 A B x f a h0) (fun h0 : term1341 A B a f x d => @lem4503273 A B s a f x d h1 h0 h2)). Qed.
Lemma lem4503285 {A B : Type'} (s : A -> Prop) (a : A) (f : A -> B) (x : A) (d : B) (h1 : term594 A B a s f d) (h2 : term1350 A B s a f x d) : False.
Proof. exact (or_elim (@lem4498063 A B s a f x d h2) (fun h0 : term1348 A B s x f a => @lem4503277 A B s x f a h0) (fun h0 : term1347 A B s a f x d => @lem4503284 A B s a f x d h1 h0)). Qed.
Lemma lem4503286 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term1352 A B s x d f a t) : False.
Proof. exact (or_elim (@lem4498061 A B s x d f a t h3) (fun h0 : term1350 A B s a f x d => @lem4503285 A B s a f x d h1 h0) (fun h0 : term1336 A B f a t => @lem4503283 A B s f a t h2 h0)). Qed.
Lemma lem4503287 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term1313 A B d a s f x t) : False.
Proof. exact (or_elim (@lem4497571 A B d a s f x t h3) (fun h0 : term1352 A B s x d f a t => @lem4503286 A B s x d f a t h1 h2 h0) (fun h0 : term1338 A B s f x t => @lem4503269 A B a s f x t h2 h0)). Qed.
Lemma lem4503288 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) (h4 : term1313 A B d a s f x t) : False.
Proof. exact (ex_elim (@lem4496591 A B _52327 h3) (fun f' : type838 A B => fun h0 : term1176 A B _52327 f' => @lem4503287 A B d a s f x t h1 h2 h4)). Qed.
Lemma lem4503289 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) (h4 : term923 A B d a s f t) : False.
Proof. exact (ex_elim (@lem4497118 A B d a s f t h4) (fun x : A => fun h0 : term1315 A B d a s f t x => @lem4503288 A B _52327 d a s f x t h1 h2 h3 h0)). Qed.
Lemma lem4503290 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) (h4 : term923 A B d a s f t) : (term923 A B d a s f t) = False.
Proof. exact (prop_ext (fun h5 : term923 A B d a s f t => @lem4503289 A B _52327 d a s f t h1 h2 h3 h4) (fun h5 : False => @lem4495709 A B d a s f t h4)). Qed.
Lemma lem4503291 {A B : Type'} (_52327 : type839 A B) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) (h4 : term923 A B d a s f t) : False.
Proof. exact (EQ_MP (@lem4503290 A B _52327 d a s f t h1 h2 h3 h4) (@lem4495709 A B d a s f t h4)). Qed.
Lemma lem4503292 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) : term922 A B d a s f t.
Proof. exact (fun h0 : term923 A B d a s f t => @lem4503291 A B _52327 d a s f t h1 h2 h3 h0). Qed.
Lemma lem4503293 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term805 A B _52327) : term866 A B d a s f t.
Proof. exact (EQ_MP (@lem4495708 A B d a s f t) (@lem4503292 A B d a s f t _52327 h1 h2 h3)). Qed.
Lemma lem4503294 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term588 A B a s f t) (h2 : term805 A B _52327) : term896 A B d a s f t.
Proof. exact (fun h0 : term594 A B a s f d => @lem4503293 A B d a s f t _52327 h0 h1 h2). Qed.
Lemma lem4503295 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term897 A B d a s f t.
Proof. exact (fun h0 : term588 A B a s f t => @lem4503294 A B d a s f t _52327 h0 h1). Qed.
Lemma lem4503296 {A B : Type'} (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term898 A B _52327 n m d a s f t.
Proof. exact (fun h0 : term715 A B _52327 t s d n m => @lem4503295 A B d a s f t _52327 h1). Qed.
Lemma lem4503297 {A B : Type'} (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term899 A B _52327 n m d a s f t.
Proof. exact (fun h0 : @HAS_SIZE B t n => @lem4503296 A B n m d a s f t _52327 h1). Qed.
Lemma lem4503298 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term900 A B s0 _52327 n m d a s f t.
Proof. exact (fun h0 : s0 = (@INSERT A a s) => @lem4503297 A B n m d a s f t _52327 h1). Qed.
Lemma lem4503299 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term901 A B s0 _52327 n m d a s f t.
Proof. exact (fun h0 : term178 A a s => @lem4503298 A B s0 n m d a s f t _52327 h1). Qed.
Lemma lem4503300 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term902 A B s0 _52327 n m d a s f t.
Proof. exact (fun h0 : @HAS_SIZE A s m => @lem4503299 A B s0 n m d a s f t _52327 h1). Qed.
Lemma lem4503305 {A B : Type'} (n : nat) (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term904 A B _52327 n m d a s f t.
Proof. exact (fun s0 : A -> Prop => @lem4503300 A B s0 n m d a s f t _52327 h1). Qed.
Lemma lem4503310 {A B : Type'} (m : nat) (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term906 A B _52327 m d a s f t.
Proof. exact (fun n : nat => @lem4503305 A B n m d a s f t _52327 h1). Qed.
Lemma lem4503315 {A B : Type'} (d : B) (a : A) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term908 A B _52327 d a s f t.
Proof. exact (fun m : nat => @lem4503310 A B m d a s f t _52327 h1). Qed.
Lemma lem4503320 {A B : Type'} (d : B) (s : A -> Prop) (f : A -> B) (t : B -> Prop) (_52327 : type839 A B) (h1 : term805 A B _52327) : term910 A B _52327 d s f t.
Proof. exact (fun a : A => @lem4503315 A B d a s f t _52327 h1). Qed.
Lemma lem4503325 {A B : Type'} (d : B) (s : A -> Prop) (f : A -> B) (_52327 : type839 A B) (h1 : term805 A B _52327) : term912 A B _52327 d s f.
Proof. exact (fun t : B -> Prop => @lem4503320 A B d s f t _52327 h1). Qed.
Lemma lem4503330 {A B : Type'} (d : B) (f : A -> B) (_52327 : type839 A B) (h1 : term805 A B _52327) : term914 A B _52327 d f.
Proof. exact (fun s : A -> Prop => @lem4503325 A B d s f _52327 h1). Qed.
Lemma lem4503335 {A B : Type'} (d : B) (_52327 : type839 A B) (h1 : term805 A B _52327) : term916 A B _52327 d.
Proof. exact (fun f : A -> B => @lem4503330 A B d f _52327 h1). Qed.
Lemma lem4503340 {A B : Type'} (_52327 : type839 A B) (h1 : term805 A B _52327) : term918 A B _52327.
Proof. exact (fun d : B => @lem4503335 A B d _52327 h1). Qed.
Lemma lem4503341 {A B : Type'} (_52327 : type839 A B) : term919 A B _52327.
Proof. exact (fun h0 : term805 A B _52327 => @lem4503340 A B _52327 h0). Qed.
Lemma lem4503346 {A B : Type'} : term921 A B.
Proof. exact (fun _52327 : type839 A B => @lem4503341 A B _52327). Qed.
Lemma lem4503347 {A B : Type'} : term702 A B.
Proof. exact (EQ_MP (@lem4495696 A B) (@lem4503346 A B)). Qed.
Lemma lem4503348 {A B : Type'} (d : B) : term1413 A B d.
Proof. exact (@lem4503347 A B d). Qed.
Lemma lem4503349 {A B : Type'} (d : B) : (term1413 A B d) = (term698 A B d).
Proof. exact (eq_refl (term1413 A B d)). Qed.
Lemma lem4503350 {A B : Type'} (d : B) : term698 A B d.
Proof. exact (EQ_MP (@lem4503349 A B d) (@lem4503348 A B d)). Qed.
Lemma lem4503351 {A B : Type'} (d : B) (f : A -> B) : term1414 A B d f.
Proof. exact (@lem4503350 A B d f). Qed.
Lemma lem4503352 {A B : Type'} (f : A -> B) (d : B) : (term1414 A B d f) = (term694 A B f d).
Proof. exact (eq_refl (term1414 A B d f)). Qed.
Lemma lem4503353 {A B : Type'} (f : A -> B) (d : B) : term694 A B f d.
Proof. exact (EQ_MP (@lem4503352 A B f d) (@lem4503351 A B d f)). Qed.
Lemma lem4503354 {A B : Type'} (f : A -> B) (d : B) (s : A -> Prop) : term1415 A B f d s.
Proof. exact (@lem4503353 A B f d s). Qed.
Lemma lem4503355 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term1415 A B f d s) = (term690 A B s f d).
Proof. exact (eq_refl (term1415 A B f d s)). Qed.
Lemma lem4503356 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : term690 A B s f d.
Proof. exact (EQ_MP (@lem4503355 A B s f d) (@lem4503354 A B f d s)). Qed.
Lemma lem4503357 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) (t : B -> Prop) : term1416 A B s f d t.
Proof. exact (@lem4503356 A B s f d t). Qed.
Lemma lem4503358 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term1416 A B s f d t) = (term686 A B t s f d).
Proof. exact (eq_refl (term1416 A B s f d t)). Qed.
Lemma lem4503359 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term686 A B t s f d.
Proof. exact (EQ_MP (@lem4503358 A B t s f d) (@lem4503357 A B s f d t)). Qed.
Lemma lem4503360 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (a : A) : term1417 A B t s f d a.
Proof. exact (@lem4503359 A B t s f d a). Qed.
Lemma lem4503361 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term1417 A B t s f d a) = (term682 A B a t s f d).
Proof. exact (eq_refl (term1417 A B t s f d a)). Qed.
Lemma lem4503362 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term682 A B a t s f d.
Proof. exact (EQ_MP (@lem4503361 A B a t s f d) (@lem4503360 A B t s f d a)). Qed.
Lemma lem4503363 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (m : nat) : term1418 A B a t s f d m.
Proof. exact (@lem4503362 A B a t s f d m). Qed.
Lemma lem4503364 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term1418 A B a t s f d m) = (term678 A B m a t s f d).
Proof. exact (eq_refl (term1418 A B a t s f d m)). Qed.
Lemma lem4503365 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term678 A B m a t s f d.
Proof. exact (EQ_MP (@lem4503364 A B m a t s f d) (@lem4503363 A B a t s f d m)). Qed.
Lemma lem4503366 {A B : Type'} (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (n : nat) : term1419 A B m a t s f d n.
Proof. exact (@lem4503365 A B m a t s f d n). Qed.
Lemma lem4503367 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term1419 A B m a t s f d n) = (term674 A B n m a t s f d).
Proof. exact (eq_refl (term1419 A B m a t s f d n)). Qed.
Lemma lem4503368 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term674 A B n m a t s f d.
Proof. exact (EQ_MP (@lem4503367 A B n m a t s f d) (@lem4503366 A B m a t s f d n)). Qed.
Lemma lem4503369 {A B : Type'} (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) (s0 : A -> Prop) : term1420 A B n m a t s f d s0.
Proof. exact (@lem4503368 A B n m a t s f d s0). Qed.
Lemma lem4503370 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term1420 A B n m a t s f d s0) = (term649 A B s0 n m a t s f d).
Proof. exact (eq_refl (term1420 A B n m a t s f d s0)). Qed.
Lemma lem4503371 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term649 A B s0 n m a t s f d.
Proof. exact (EQ_MP (@lem4503370 A B s0 n m a t s f d) (@lem4503369 A B n m a t s f d s0)). Qed.
Lemma lem4503373 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (a : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : term649 A B s0 n m a t s f d.
Proof. exact (@lem4494276 A B s0 n m a t s f d (@lem4503371 A B s0 n m a t s f d)). Qed.
Lemma lem4503374 {A B : Type'} (s0 : A -> Prop) (n : nat) (a : A) (t : B -> Prop) (f : A -> B) (d : B) (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : term669 A B s0 n m a t s f d.
Proof. exact (@lem4503373 A B s0 n m a t s f d (@lem4493112 A s m h1)). Qed.
Lemma lem4503375 {A B : Type'} (s0 : A -> Prop) (n : nat) (t : B -> Prop) (f : A -> B) (d : B) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : @HAS_SIZE A s m) : term667 A B s0 n m a t s f d.
Proof. exact (@lem4503374 A B s0 n a t f d s m h2 (@lem4493114 A a s h1)). Qed.
Lemma lem4503376 {A B : Type'} (n : nat) (t : B -> Prop) (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) : term664 A B n m a t s f d.
Proof. exact (@lem4503375 A B s0 n t f d a s m h1 h3 (@lem4493113 A s0 a s h2)). Qed.
Lemma lem4503377 {A B : Type'} (f : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term661 A B n m a t s f d.
Proof. exact (@lem4503376 A B n t f d s0 a s m h1 h2 h3 (@lem4493109 B t n h4)). Qed.
Lemma lem4503378 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term659 A B a t s f d.
Proof. exact (@lem4503377 A B f d s0 a s m t n h1 h2 h3 h4 (@lem4493274 A B t s d n m h5)). Qed.
Lemma lem4503379 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term588 A B a s f t) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term656 A B a t s f d.
Proof. exact (@lem4503378 A B f s0 a t s d n m h2 h3 h4 h5 h6 (@lem4494091 A B a s f t h1)). Qed.
Lemma lem4503380 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term647 A B a t s f d.
Proof. exact (@lem4503379 A B f s0 a t s d n m h2 h3 h4 h5 h6 h7 (@lem4494090 A B a s f d h1)). Qed.
Lemma lem4503381 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term648 A B a t s f d) (h4 : term178 A a s) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : False.
Proof. exact (@lem4503380 A B f s0 a t s d n m h1 h2 h4 h5 h6 h7 h8 (@lem4494260 A B a t s f d h3)). Qed.
Lemma lem4503382 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term648 A B a t s f d) (h4 : term178 A a s) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : (term648 A B a t s f d) = False.
Proof. exact (prop_ext (fun h9 : term648 A B a t s f d => @lem4503381 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : False => @lem4494260 A B a t s f d h3)). Qed.
Lemma lem4503383 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term648 A B a t s f d) (h4 : term178 A a s) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : False.
Proof. exact (EQ_MP (@lem4503382 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (@lem4494260 A B a t s f d h3)). Qed.
Lemma lem4503384 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term647 A B a t s f d.
Proof. exact (fun h0 : term648 A B a t s f d => @lem4503383 A B f s0 a t s d n m h1 h2 h0 h3 h4 h5 h6 h7). Qed.
Lemma lem4503385 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term645 A B a t s f d.
Proof. exact (EQ_MP (@lem4494259 A B a t s f d) (@lem4503384 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4503386 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term644 A B a t s f d.
Proof. exact (EQ_MP (@lem4494255 A B a t s f d) (@lem4503385 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4503387 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term1421 A B f a t s d.
Proof. exact (ex_intro (term1422 A B f a t s d) (term607 A B s f d) (@lem4503386 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4503388 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term582 A B f a t s d.
Proof. exact (ex_intro (term581 A B f a t s d) (f a) (@lem4503387 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4503389 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term595 A B t a s f d) : term594 A B a s f d.
Proof. exact (proj2 (@lem4494089 A B t a s f d h1)). Qed.
Lemma lem4503390 {A B : Type'} (t : B -> Prop) (a : A) (s : A -> Prop) (f : A -> B) (d : B) (h1 : term595 A B t a s f d) : term588 A B a s f t.
Proof. exact (proj1 (@lem4494089 A B t a s f d h1)). Qed.
Lemma lem4503391 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term594 A B a s f d) = (term582 A B f a t s d).
Proof. exact (prop_ext (fun h8 : term594 A B a s f d => @lem4503388 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (fun h8 : term582 A B f a t s d => @lem4494090 A B a s f d h1)). Qed.
Lemma lem4503392 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term582 A B f a t s d.
Proof. exact (EQ_MP (@lem4503391 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4494090 A B a s f d h1)). Qed.
Lemma lem4503393 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term588 A B a s f t) = (term582 A B f a t s d).
Proof. exact (prop_ext (fun h8 : term588 A B a s f t => @lem4503392 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (fun h8 : term582 A B f a t s d => @lem4494091 A B a s f t h2)). Qed.
Lemma lem4503394 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term594 A B a s f d) (h2 : term588 A B a s f t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term582 A B f a t s d.
Proof. exact (EQ_MP (@lem4503393 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4494091 A B a s f t h2)). Qed.
Lemma lem4503395 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term588 A B a s f t) (h2 : term178 A a s) (h3 : term595 A B t a s f d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term594 A B a s f d) = (term582 A B f a t s d).
Proof. exact (prop_ext (fun h8 : term594 A B a s f d => @lem4503394 A B f s0 a t s d n m h8 h1 h2 h4 h5 h6 h7) (fun h8 : term582 A B f a t s d => @lem4503389 A B t a s f d h3)). Qed.
Lemma lem4503396 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term588 A B a s f t) (h2 : term178 A a s) (h3 : term595 A B t a s f d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term582 A B f a t s d.
Proof. exact (EQ_MP (@lem4503395 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4503389 A B t a s f d h3)). Qed.
Lemma lem4503397 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term595 A B t a s f d) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : (term588 A B a s f t) = (term582 A B f a t s d).
Proof. exact (prop_ext (fun h7 : term588 A B a s f t => @lem4503396 A B f s0 a t s d n m h7 h1 h2 h3 h4 h5 h6) (fun h7 : term582 A B f a t s d => @lem4503390 A B t a s f d h2)). Qed.
Lemma lem4503398 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term595 A B t a s f d) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term582 A B f a t s d.
Proof. exact (EQ_MP (@lem4503397 A B f s0 a t s d n m h1 h2 h3 h4 h5 h6) (@lem4503390 A B t a s f d h2)). Qed.
Lemma lem4503399 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1423 A B f a t s d.
Proof. exact (fun h0 : term595 A B t a s f d => @lem4503398 A B f s0 a t s d n m h1 h0 h2 h3 h4 h5). Qed.
Lemma lem4503400 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : term582 A B f a t s d) : term582 A B f a t s d.
Proof. exact (h1). Qed.
Lemma lem4503401 {A B : Type'} (f : A -> B) (a : A) (b : B) (t : B -> Prop) (s : A -> Prop) (d : B) (h1 : term580 A B f a b t s d) : term580 A B f a b t s d.
Proof. exact (h1). Qed.
Lemma lem4503402 {A B : Type'} (f : A -> B) (a : A) (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term578 A B f a b t s g d) : term578 A B f a b t s g d.
Proof. exact (h1). Qed.
Lemma lem4503403 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term184 A B s g d.
Proof. exact (h1). Qed.
Lemma lem4503404 {A B : Type'} (f : A -> B) (a : A) (b : B) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term575 A B f a b s g t) : term575 A B f a b s g t.
Proof. exact (h1). Qed.
Lemma lem4503405 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term174 A B s g t.
Proof. exact (h1). Qed.
Lemma lem4503406 {A B : Type'} (f : A -> B) (a : A) (g : A -> B) (b : B) (t : B -> Prop) (h1 : term1424 A B f a g b t) : term1424 A B f a g b t.
Proof. exact (h1). Qed.
Lemma lem4503407 {B : Type'} (b : B) (t : B -> Prop) (h1 : @IN B b t) : @IN B b t.
Proof. exact (h1). Qed.
Lemma lem4503408 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : f = (term442 A B a b g).
Proof. exact (h1). Qed.
Lemma lem4503442 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : f = (term442 A B a b g).
Proof. exact (h1). Qed.
Lemma lem4503447 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4503448 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (f x) = (term1425 A B a b g x).
Proof. exact (MK_COMB (@lem4503442 A B f a b g h1) (@lem4503447 A x)). Qed.
Lemma lem4503450 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4503451 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4503450 A B f y). Qed.
Lemma lem4503452 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1426 A B a b g x) = (term1425 A B a b g x).
Proof. exact (@lem4503451 A B (term442 A B a b g) x). Qed.
Lemma lem4503453 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4503454 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term1428 A B a b g) = (term442 A B a b g).
Proof. exact (fun_ext (fun x : A => @lem4503453 A B a b g x)). Qed.
Lemma lem4503455 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4503456 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1426 A B a b g x) = (term1425 A B a b g x).
Proof. exact (MK_COMB (@lem4503454 A B a b g) (@lem4503455 A x)). Qed.
Lemma lem4503457 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4503458 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1429 A B a b g x) = (term1430 A B a b g x).
Proof. exact (MK_COMB (@lem4503457 B) (@lem4503456 A B a b g x)). Qed.
Lemma lem4503459 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4503460 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : ((term1426 A B a b g x) = (term1425 A B a b g x)) = ((term1425 A B a b g x) = (term1427 A B a b g x)).
Proof. exact (MK_COMB (@lem4503458 A B a b g x) (@lem4503459 A B a b g x)). Qed.
Lemma lem4503461 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (EQ_MP (@lem4503460 A B a b g x) (@lem4503452 A B a b g x)). Qed.
Lemma lem4503466 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (f x) = (term1427 A B a b g x).
Proof. exact (TRANS (@lem4503448 A B x f a b g h1) (@lem4503461 A B a b g x)). Qed.
Lemma lem4503467 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4503468 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term828 A B f x) = (term1431 A B a b g x).
Proof. exact (MK_COMB (@lem4503467 B) (@lem4503466 A B x f a b g h1)). Qed.
Lemma lem4503469 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4503470 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term169 A B f x t) = (term1432 A B a b g x t).
Proof. exact (MK_COMB (@lem4503468 A B x f a b g h1) (@lem4503469 B t)). Qed.
Lemma lem4503471 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term585 A a x s) = (term585 A a x s).
Proof. exact (eq_refl (term585 A a x s)). Qed.
Lemma lem4503472 {A B : Type'} (s : A -> Prop) (x : A) (t : B -> Prop) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term586 A B a s f x t) = (term1433 A B s a b g x t).
Proof. exact (MK_COMB (@lem4503471 A a x s) (@lem4503470 A B x t f a b g h1)). Qed.
Lemma lem4503475 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term587 A B a s f t) = (term1434 A B s a b g t).
Proof. exact (fun_ext (fun x : A => @lem4503472 A B s x t f a b g h1)). Qed.
Lemma lem4503476 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503477 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term588 A B a s f t) = (term1435 A B s a b g t).
Proof. exact (MK_COMB (@lem4503476 A) (@lem4503475 A B s t f a b g h1)). Qed.
Lemma lem4503482 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4503483 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term589 A B a s f t) = (term1436 A B s a b g t).
Proof. exact (MK_COMB (@lem4503482) (@lem4503477 A B s t f a b g h1)). Qed.
Lemma lem4503497 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : f = (term442 A B a b g).
Proof. exact (h1). Qed.
Lemma lem4503502 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4503503 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (f x) = (term1425 A B a b g x).
Proof. exact (MK_COMB (@lem4503497 A B f a b g h1) (@lem4503502 A x)). Qed.
Lemma lem4503505 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4503506 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4503505 A B f y). Qed.
Lemma lem4503507 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1426 A B a b g x) = (term1425 A B a b g x).
Proof. exact (@lem4503506 A B (term442 A B a b g) x). Qed.
Lemma lem4503508 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4503509 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term1428 A B a b g) = (term442 A B a b g).
Proof. exact (fun_ext (fun x : A => @lem4503508 A B a b g x)). Qed.
Lemma lem4503510 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4503511 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1426 A B a b g x) = (term1425 A B a b g x).
Proof. exact (MK_COMB (@lem4503509 A B a b g) (@lem4503510 A x)). Qed.
Lemma lem4503512 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4503513 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1429 A B a b g x) = (term1430 A B a b g x).
Proof. exact (MK_COMB (@lem4503512 B) (@lem4503511 A B a b g x)). Qed.
Lemma lem4503514 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4503515 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : ((term1426 A B a b g x) = (term1425 A B a b g x)) = ((term1425 A B a b g x) = (term1427 A B a b g x)).
Proof. exact (MK_COMB (@lem4503513 A B a b g x) (@lem4503514 A B a b g x)). Qed.
Lemma lem4503516 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (EQ_MP (@lem4503515 A B a b g x) (@lem4503507 A B a b g x)). Qed.
Lemma lem4503521 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (f x) = (term1427 A B a b g x).
Proof. exact (TRANS (@lem4503503 A B x f a b g h1) (@lem4503516 A B a b g x)). Qed.
Lemma lem4503522 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4503523 {A B : Type'} (x : A) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term262 A B f x) = (term1437 A B a b g x).
Proof. exact (MK_COMB (@lem4503522 B) (@lem4503521 A B x f a b g h1)). Qed.
Lemma lem4503524 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4503525 {A B : Type'} (x : A) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : ((f x) = d) = ((term1427 A B a b g x) = d).
Proof. exact (MK_COMB (@lem4503523 A B x f a b g h1) (@lem4503524 B d)). Qed.
Lemma lem4503528 {A : Type'} (a : A) (x : A) (s : A -> Prop) : (term591 A a x s) = (term591 A a x s).
Proof. exact (eq_refl (term591 A a x s)). Qed.
Lemma lem4503529 {A B : Type'} (s : A -> Prop) (x : A) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term592 A B a s f x d) = (term1438 A B s a b g x d).
Proof. exact (MK_COMB (@lem4503528 A a x s) (@lem4503525 A B x d f a b g h1)). Qed.
Lemma lem4503532 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term593 A B a s f d) = (term1439 A B s a b g d).
Proof. exact (fun_ext (fun x : A => @lem4503529 A B s x d f a b g h1)). Qed.
Lemma lem4503533 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503534 {A B : Type'} (s : A -> Prop) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term594 A B a s f d) = (term1440 A B s a b g d).
Proof. exact (MK_COMB (@lem4503533 A) (@lem4503532 A B s d f a b g h1)). Qed.
Lemma lem4503539 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term595 A B t a s f d) = (term1441 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503483 A B s t f a b g h1) (@lem4503534 A B s d f a b g h1)). Qed.
Lemma lem4503542 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) (a : A) (b : B) (g : A -> B) (h1 : f = (term442 A B a b g)) : (term1441 A B t s a b g d) = (term595 A B t a s f d).
Proof. exact (SYM (@lem4503539 A B t s d f a b g h1)). Qed.
Lemma lem4503544 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4503545 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1441 A B t s a b g d) = (term1442 A B t s a b g d).
Proof. exact (@lem4503544 (term1441 A B t s a b g d)). Qed.
Lemma lem4503546 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1442 A B t s a b g d) = (term1441 A B t s a b g d).
Proof. exact (SYM (@lem4503545 A B t s a b g d)). Qed.
Lemma lem4503547 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1443 A B t s a b g d) : term1443 A B t s a b g d.
Proof. exact (h1). Qed.
Lemma lem4503550 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1444 A B s0 n m f t s a b g d) : term1444 A B s0 n m f t s a b g d.
Proof. exact (h1). Qed.
Lemma lem4503551 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1445 A B s0 n m f t s a b g d.
Proof. exact (fun h0 : term1444 A B s0 n m f t s a b g d => @lem4503550 A B s0 n m f t s a b g d h0). Qed.
Lemma lem4503552 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1445 A B s0 n m f t s a b g d) : term1445 A B s0 n m f t s a b g d.
Proof. exact (h1). Qed.
Lemma lem4503553 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1444 A B s0 n m f t s a b g d) : term1444 A B s0 n m f t s a b g d.
Proof. exact (h1). Qed.
Lemma lem4503554 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1445 A B s0 n m f t s a b g d) (h2 : term1444 A B s0 n m f t s a b g d) : term1444 A B s0 n m f t s a b g d.
Proof. exact (@lem4503552 A B s0 n m f t s a b g d h1 (@lem4503553 A B s0 n m f t s a b g d h2)). Qed.
Lemma lem4503555 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1444 A B s0 n m f t s a b g d) : term1446 A B s0 n m f t s a b g d.
Proof. exact (fun h0 : term1445 A B s0 n m f t s a b g d => @lem4503554 A B s0 n m f t s a b g d h0 h1). Qed.
Lemma lem4503556 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1445 A B s0 n m f t s a b g d) : term1445 A B s0 n m f t s a b g d.
Proof. exact (h1). Qed.
Lemma lem4503557 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1445 A B s0 n m f t s a b g d) (h2 : term1444 A B s0 n m f t s a b g d) : term1444 A B s0 n m f t s a b g d.
Proof. exact (@lem4503555 A B s0 n m f t s a b g d h2 (@lem4503556 A B s0 n m f t s a b g d h1)). Qed.
Lemma lem4503558 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (h1 : term1445 A B s0 n m f t s a b g d) : term1445 A B s0 n m f t s a b g d.
Proof. exact (fun h0 : term1444 A B s0 n m f t s a b g d => @lem4503557 A B s0 n m f t s a b g d h1 h0). Qed.
Lemma lem4503559 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1447 A B s0 n m f t s a b g d.
Proof. exact (fun h0 : term1445 A B s0 n m f t s a b g d => @lem4503558 A B s0 n m f t s a b g d h0). Qed.
Lemma lem4503562 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1445 A B s0 n m f t s a b g d.
Proof. exact (@lem4503559 A B s0 n m f t s a b g d (@lem4503551 A B s0 n m f t s a b g d)). Qed.
Lemma lem4503563 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1445 A B s0 n m f t s a b g d.
Proof. exact (@lem4503562 A B s0 n m f t s a b g d). Qed.
Lemma lem4503653 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4503654 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1442 A B t s a b g d) = (term1448 A B t s a b g d).
Proof. exact (@lem4503653 (term1443 A B t s a b g d)). Qed.
Lemma lem4503656 (t : Prop) : (term654 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem4503657 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1448 A B t s a b g d) = (term1441 A B t s a b g d).
Proof. exact (@lem4503656 (term1441 A B t s a b g d)). Qed.
Lemma lem4503660 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1442 A B t s a b g d) = (term1441 A B t s a b g d).
Proof. exact (TRANS (@lem4503654 A B t s a b g d) (@lem4503657 A B t s a b g d)). Qed.
Lemma lem4503677 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1449 A B s g d) = (term1449 A B s g d).
Proof. exact (eq_refl (term1449 A B s g d)). Qed.
Lemma lem4503678 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1450 A B t s a b g d) = (term1451 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503677 A B s g d) (@lem4503660 A B t s a b g d)). Qed.
Lemma lem4503681 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1452 A B s g t) = (term1452 A B s g t).
Proof. exact (eq_refl (term1452 A B s g t)). Qed.
Lemma lem4503682 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1453 A B t s a b g d) = (term1454 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503681 A B s g t) (@lem4503678 A B t s a b g d)). Qed.
Lemma lem4503685 {B : Type'} (b : B) (t : B -> Prop) : (term168 B b t) = (term168 B b t).
Proof. exact (eq_refl (term168 B b t)). Qed.
Lemma lem4503686 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1455 A B t s a b g d) = (term1456 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503685 B b t) (@lem4503682 A B t s a b g d)). Qed.
Lemma lem4503689 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) : (term1457 A B f a b g) = (term1457 A B f a b g).
Proof. exact (eq_refl (term1457 A B f a b g)). Qed.
Lemma lem4503690 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1458 A B f t s a b g d) = (term1459 A B f t s a b g d).
Proof. exact (MK_COMB (@lem4503689 A B f a b g) (@lem4503686 A B t s a b g d)). Qed.
Lemma lem4503693 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term352 A B t s d n m) = (term352 A B t s d n m).
Proof. exact (eq_refl (term352 A B t s d n m)). Qed.
Lemma lem4503694 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1460 A B n m f t s a b g d) = (term1461 A B n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503693 A B t s d n m) (@lem4503690 A B f t s a b g d)). Qed.
Lemma lem4503697 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4503698 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1462 A B n m f t s a b g d) = (term1463 A B n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503697 B t n) (@lem4503694 A B n m f t s a b g d)). Qed.
Lemma lem4503701 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4503702 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1464 A B s0 n m f t s a b g d) = (term1465 A B s0 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503701 A s0 a s) (@lem4503698 A B n m f t s a b g d)). Qed.
Lemma lem4503705 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4503706 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1466 A B s0 n m f t s a b g d) = (term1467 A B s0 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503705 A a s) (@lem4503702 A B s0 n m f t s a b g d)). Qed.
Lemma lem4503709 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4503710 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1444 A B s0 n m f t s a b g d) = (term1468 A B s0 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503709 A s m) (@lem4503706 A B s0 n m f t s a b g d)). Qed.
Lemma lem4503713 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1469 A B n m f t s a b g d) = (term1470 A B n m f t s a b g d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4503710 A B s0 n m f t s a b g d)). Qed.
Lemma lem4503714 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4503715 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1471 A B n m f t s a b g d) = (term1472 A B n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503714 A) (@lem4503713 A B n m f t s a b g d)). Qed.
Lemma lem4503720 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1473 A B m f t s a b g d) = (term1474 A B m f t s a b g d).
Proof. exact (fun_ext (fun n : nat => @lem4503715 A B n m f t s a b g d)). Qed.
Lemma lem4503721 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4503722 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1475 A B m f t s a b g d) = (term1476 A B m f t s a b g d).
Proof. exact (MK_COMB (@lem4503721) (@lem4503720 A B m f t s a b g d)). Qed.
Lemma lem4503727 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1477 A B f t s a b g d) = (term1478 A B f t s a b g d).
Proof. exact (fun_ext (fun m : nat => @lem4503722 A B m f t s a b g d)). Qed.
Lemma lem4503728 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4503729 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1479 A B f t s a b g d) = (term1480 A B f t s a b g d).
Proof. exact (MK_COMB (@lem4503728) (@lem4503727 A B f t s a b g d)). Qed.
Lemma lem4503734 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1481 A B t s a b g d) = (term1482 A B t s a b g d).
Proof. exact (fun_ext (fun f : A -> B => @lem4503729 A B f t s a b g d)). Qed.
Lemma lem4503735 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4503736 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1483 A B t s a b g d) = (term1484 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503735 A B) (@lem4503734 A B t s a b g d)). Qed.
Lemma lem4503741 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1485 A B s a b g d) = (term1486 A B s a b g d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4503736 A B t s a b g d)). Qed.
Lemma lem4503742 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4503743 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1487 A B s a b g d) = (term1488 A B s a b g d).
Proof. exact (MK_COMB (@lem4503742 B) (@lem4503741 A B s a b g d)). Qed.
Lemma lem4503748 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) : (term1489 A B a b g d) = (term1490 A B a b g d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4503743 A B s a b g d)). Qed.
Lemma lem4503749 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4503750 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) : (term1491 A B a b g d) = (term1492 A B a b g d).
Proof. exact (MK_COMB (@lem4503749 A) (@lem4503748 A B a b g d)). Qed.
Lemma lem4503755 {A B : Type'} (b : B) (g : A -> B) (d : B) : (term1493 A B b g d) = (term1494 A B b g d).
Proof. exact (fun_ext (fun a : A => @lem4503750 A B a b g d)). Qed.
Lemma lem4503756 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503757 {A B : Type'} (b : B) (g : A -> B) (d : B) : (term1495 A B b g d) = (term1496 A B b g d).
Proof. exact (MK_COMB (@lem4503756 A) (@lem4503755 A B b g d)). Qed.
Lemma lem4503762 {A B : Type'} (g : A -> B) (d : B) : (term1497 A B g d) = (term1498 A B g d).
Proof. exact (fun_ext (fun b : B => @lem4503757 A B b g d)). Qed.
Lemma lem4503763 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4503764 {A B : Type'} (g : A -> B) (d : B) : (term1499 A B g d) = (term1500 A B g d).
Proof. exact (MK_COMB (@lem4503763 B) (@lem4503762 A B g d)). Qed.
Lemma lem4503769 {A B : Type'} (d : B) : (term1501 A B d) = (term1502 A B d).
Proof. exact (fun_ext (fun g : A -> B => @lem4503764 A B g d)). Qed.
Lemma lem4503770 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4503771 {A B : Type'} (d : B) : (term1503 A B d) = (term1504 A B d).
Proof. exact (MK_COMB (@lem4503770 A B) (@lem4503769 A B d)). Qed.
Lemma lem4503776 {A B : Type'} : (term1505 A B) = (term1506 A B).
Proof. exact (fun_ext (fun d : B => @lem4503771 A B d)). Qed.
Lemma lem4503777 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4503784 {A B : Type'} : (term1507 A B) = (term1508 A B).
Proof. exact (MK_COMB (@lem4503777 B) (@lem4503776 A B)). Qed.
Lemma lem4503785 {A B : Type'} (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : _53005 = (term704 A B).
Proof. exact (h1). Qed.
Lemma lem4503786 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4503787 {A B : Type'} (t : B -> Prop) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t) = (term705 A B t).
Proof. exact (MK_COMB (@lem4503785 A B _53005 h1) (@lem4503786 B t)). Qed.
Lemma lem4503788 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4503789 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term707 A B _53005 t) = (term707 A B _53005 t).
Proof. exact (eq_refl (term707 A B _53005 t)). Qed.
Lemma lem4503790 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term705 A B t)) = ((_53005 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4503789 A B _53005 t) (@lem4503788 A B t)). Qed.
Lemma lem4503791 {A B : Type'} (t : B -> Prop) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t) = (term706 A B t).
Proof. exact (EQ_MP (@lem4503790 A B _53005 t) (@lem4503787 A B t _53005 h1)). Qed.
Lemma lem4503792 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4503793 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t s) = (term708 A B t s).
Proof. exact (MK_COMB (@lem4503791 A B t _53005 h1) (@lem4503792 A s)). Qed.
Lemma lem4503794 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4503795 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53005 t s) = (term710 A B _53005 t s).
Proof. exact (eq_refl (term710 A B _53005 t s)). Qed.
Lemma lem4503796 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term708 A B t s)) = ((_53005 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4503795 A B _53005 t s) (@lem4503794 A B t s)). Qed.
Lemma lem4503797 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t s) = (term709 A B t s).
Proof. exact (EQ_MP (@lem4503796 A B _53005 t s) (@lem4503793 A B t s _53005 h1)). Qed.
Lemma lem4503798 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4503799 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t s d) = (term711 A B t s d).
Proof. exact (MK_COMB (@lem4503797 A B t s _53005 h1) (@lem4503798 B d)). Qed.
Lemma lem4503800 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4503801 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53005 t s d) = (term712 A B _53005 t s d).
Proof. exact (eq_refl (term712 A B _53005 t s d)). Qed.
Lemma lem4503802 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term711 A B t s d)) = ((_53005 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4503801 A B _53005 t s d) (@lem4503800 A B t s d)). Qed.
Lemma lem4503803 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (_53005 t s d) = (term196 A B t s d).
Proof. exact (EQ_MP (@lem4503802 A B _53005 t s d) (@lem4503799 A B t s d _53005 h1)). Qed.
Lemma lem4503839 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (d : B) : (term1438 A B s a b g x d) = (term1438 A B s a b g x d).
Proof. exact (eq_refl (term1438 A B s a b g x d)). Qed.
Lemma lem4503840 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1439 A B s a b g d) = (term1439 A B s a b g d).
Proof. exact (fun_ext (fun x : A => @lem4503839 A B s a b g x d)). Qed.
Lemma lem4503841 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503842 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1440 A B s a b g d) = (term1440 A B s a b g d).
Proof. exact (MK_COMB (@lem4503841 A) (@lem4503840 A B s a b g d)). Qed.
Lemma lem4503875 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (t : B -> Prop) : (term1433 A B s a b g x t) = (term1433 A B s a b g x t).
Proof. exact (eq_refl (term1433 A B s a b g x t)). Qed.
Lemma lem4503876 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1434 A B s a b g t) = (term1434 A B s a b g t).
Proof. exact (fun_ext (fun x : A => @lem4503875 A B s a b g x t)). Qed.
Lemma lem4503877 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503878 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1435 A B s a b g t) = (term1435 A B s a b g t).
Proof. exact (MK_COMB (@lem4503877 A) (@lem4503876 A B s a b g t)). Qed.
Lemma lem4503879 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4503880 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1436 A B s a b g t) = (term1436 A B s a b g t).
Proof. exact (MK_COMB (@lem4503879) (@lem4503878 A B s a b g t)). Qed.
Lemma lem4503881 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1441 A B t s a b g d) = (term1441 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503880 A B s a b g t) (@lem4503842 A B s a b g d)). Qed.
Lemma lem4503898 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term180 A B s g x d) = (term180 A B s g x d).
Proof. exact (eq_refl (term180 A B s g x d)). Qed.
Lemma lem4503899 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term182 A B s g d) = (term182 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4503898 A B s g x d)). Qed.
Lemma lem4503900 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503901 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term184 A B s g d) = (term184 A B s g d).
Proof. exact (MK_COMB (@lem4503900 A) (@lem4503899 A B s g d)). Qed.
Lemma lem4503902 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4503903 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1449 A B s g d) = (term1449 A B s g d).
Proof. exact (MK_COMB (@lem4503902) (@lem4503901 A B s g d)). Qed.
Lemma lem4503904 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1451 A B t s a b g d) = (term1451 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503903 A B s g d) (@lem4503881 A B t s a b g d)). Qed.
Lemma lem4503919 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term170 A B s g x t) = (term170 A B s g x t).
Proof. exact (eq_refl (term170 A B s g x t)). Qed.
Lemma lem4503920 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term172 A B s g t) = (term172 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4503919 A B s g x t)). Qed.
Lemma lem4503921 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4503922 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term174 A B s g t) = (term174 A B s g t).
Proof. exact (MK_COMB (@lem4503921 A) (@lem4503920 A B s g t)). Qed.
Lemma lem4503923 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4503924 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1452 A B s g t) = (term1452 A B s g t).
Proof. exact (MK_COMB (@lem4503923) (@lem4503922 A B s g t)). Qed.
Lemma lem4503925 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1454 A B t s a b g d) = (term1454 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503924 A B s g t) (@lem4503904 A B t s a b g d)). Qed.
Lemma lem4503932 {B : Type'} (b : B) (t : B -> Prop) : (term168 B b t) = (term168 B b t).
Proof. exact (eq_refl (term168 B b t)). Qed.
Lemma lem4503933 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1456 A B t s a b g d) = (term1456 A B t s a b g d).
Proof. exact (MK_COMB (@lem4503932 B b t) (@lem4503925 A B t s a b g d)). Qed.
Lemma lem4503946 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1427 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1427 A B a b g x)). Qed.
Lemma lem4503947 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term442 A B a b g) = (term442 A B a b g).
Proof. exact (fun_ext (fun x : A => @lem4503946 A B a b g x)). Qed.
Lemma lem4503950 {A B : Type'} (f : A -> B) : (@eq (A -> B) f) = (@eq (A -> B) f).
Proof. exact (eq_refl (@eq (A -> B) f)). Qed.
Lemma lem4503951 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) : (f = (term442 A B a b g)) = (f = (term442 A B a b g)).
Proof. exact (MK_COMB (@lem4503950 A B f) (@lem4503947 A B a b g)). Qed.
Lemma lem4503952 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4503953 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) : (term1457 A B f a b g) = (term1457 A B f a b g).
Proof. exact (MK_COMB (@lem4503952) (@lem4503951 A B f a b g)). Qed.
Lemma lem4503954 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1459 A B f t s a b g d) = (term1459 A B f t s a b g d).
Proof. exact (MK_COMB (@lem4503953 A B f a b g) (@lem4503933 A B t s a b g d)). Qed.
Lemma lem4503959 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4503961 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term196 A B t s d) = (_53005 t s d).
Proof. exact (SYM (@lem4503803 A B t s d _53005 h1)). Qed.
Lemma lem4503962 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term196 A B t s d) = (_53005 t s d).
Proof. exact (@lem4503961 A B t s d _53005 h1). Qed.
Lemma lem4503963 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4503964 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term198 A B t s d) = (term713 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4503963 A B) (@lem4503962 A B t s d _53005 h1)). Qed.
Lemma lem4503965 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4503966 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term200 A B t s d) = (term714 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4503965 A B) (@lem4503964 A B t s d _53005 h1)). Qed.
Lemma lem4503967 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term349 A B t s d n m) = (term715 A B _53005 t s d n m).
Proof. exact (MK_COMB (@lem4503966 A B t s d _53005 h1) (@lem4503959 n m)). Qed.
Lemma lem4503968 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4503969 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term352 A B t s d n m) = (term716 A B _53005 t s d n m).
Proof. exact (MK_COMB (@lem4503968) (@lem4503967 A B t s d n m _53005 h1)). Qed.
Lemma lem4503970 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1461 A B n m f t s a b g d) = (term1509 A B _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503969 A B t s d n m _53005 h1) (@lem4503954 A B f t s a b g d)). Qed.
Lemma lem4503977 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4503978 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1463 A B n m f t s a b g d) = (term1510 A B _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503977 B t n) (@lem4503970 A B n m f t s a b g d _53005 h1)). Qed.
Lemma lem4503989 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4503990 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1465 A B s0 n m f t s a b g d) = (term1511 A B s0 _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503989 A s0 a s) (@lem4503978 A B n m f t s a b g d _53005 h1)). Qed.
Lemma lem4503999 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4504000 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1467 A B s0 n m f t s a b g d) = (term1512 A B s0 _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4503999 A a s) (@lem4503990 A B s0 n m f t s a b g d _53005 h1)). Qed.
Lemma lem4504007 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4504008 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1468 A B s0 n m f t s a b g d) = (term1513 A B s0 _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4504007 A s m) (@lem4504000 A B s0 n m f t s a b g d _53005 h1)). Qed.
Lemma lem4504009 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1470 A B n m f t s a b g d) = (term1514 A B _53005 n m f t s a b g d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4504008 A B s0 n m f t s a b g d _53005 h1)). Qed.
Lemma lem4504010 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504011 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1472 A B n m f t s a b g d) = (term1515 A B _53005 n m f t s a b g d).
Proof. exact (MK_COMB (@lem4504010 A) (@lem4504009 A B n m f t s a b g d _53005 h1)). Qed.
Lemma lem4504012 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1474 A B m f t s a b g d) = (term1516 A B _53005 m f t s a b g d).
Proof. exact (fun_ext (fun n : nat => @lem4504011 A B n m f t s a b g d _53005 h1)). Qed.
Lemma lem4504013 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504014 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1476 A B m f t s a b g d) = (term1517 A B _53005 m f t s a b g d).
Proof. exact (MK_COMB (@lem4504013) (@lem4504012 A B m f t s a b g d _53005 h1)). Qed.
Lemma lem4504015 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1478 A B f t s a b g d) = (term1518 A B _53005 f t s a b g d).
Proof. exact (fun_ext (fun m : nat => @lem4504014 A B m f t s a b g d _53005 h1)). Qed.
Lemma lem4504016 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504017 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1480 A B f t s a b g d) = (term1519 A B _53005 f t s a b g d).
Proof. exact (MK_COMB (@lem4504016) (@lem4504015 A B f t s a b g d _53005 h1)). Qed.
Lemma lem4504018 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1482 A B t s a b g d) = (term1520 A B _53005 t s a b g d).
Proof. exact (fun_ext (fun f : A -> B => @lem4504017 A B f t s a b g d _53005 h1)). Qed.
Lemma lem4504019 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504020 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1484 A B t s a b g d) = (term1521 A B _53005 t s a b g d).
Proof. exact (MK_COMB (@lem4504019 A B) (@lem4504018 A B t s a b g d _53005 h1)). Qed.
Lemma lem4504021 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1486 A B s a b g d) = (term1522 A B _53005 s a b g d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504020 A B t s a b g d _53005 h1)). Qed.
Lemma lem4504022 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504023 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1488 A B s a b g d) = (term1523 A B _53005 s a b g d).
Proof. exact (MK_COMB (@lem4504022 B) (@lem4504021 A B s a b g d _53005 h1)). Qed.
Lemma lem4504024 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1490 A B a b g d) = (term1524 A B _53005 a b g d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504023 A B s a b g d _53005 h1)). Qed.
Lemma lem4504025 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504026 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1492 A B a b g d) = (term1525 A B _53005 a b g d).
Proof. exact (MK_COMB (@lem4504025 A) (@lem4504024 A B a b g d _53005 h1)). Qed.
Lemma lem4504027 {A B : Type'} (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1494 A B b g d) = (term1526 A B _53005 b g d).
Proof. exact (fun_ext (fun a : A => @lem4504026 A B a b g d _53005 h1)). Qed.
Lemma lem4504028 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504029 {A B : Type'} (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1496 A B b g d) = (term1527 A B _53005 b g d).
Proof. exact (MK_COMB (@lem4504028 A) (@lem4504027 A B b g d _53005 h1)). Qed.
Lemma lem4504030 {A B : Type'} (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1498 A B g d) = (term1528 A B _53005 g d).
Proof. exact (fun_ext (fun b : B => @lem4504029 A B b g d _53005 h1)). Qed.
Lemma lem4504031 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504032 {A B : Type'} (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1500 A B g d) = (term1529 A B _53005 g d).
Proof. exact (MK_COMB (@lem4504031 B) (@lem4504030 A B g d _53005 h1)). Qed.
Lemma lem4504033 {A B : Type'} (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1502 A B d) = (term1530 A B _53005 d).
Proof. exact (fun_ext (fun g : A -> B => @lem4504032 A B g d _53005 h1)). Qed.
Lemma lem4504034 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504035 {A B : Type'} (d : B) (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1504 A B d) = (term1531 A B _53005 d).
Proof. exact (MK_COMB (@lem4504034 A B) (@lem4504033 A B d _53005 h1)). Qed.
Lemma lem4504036 {A B : Type'} (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1506 A B) = (term1532 A B _53005).
Proof. exact (fun_ext (fun d : B => @lem4504035 A B d _53005 h1)). Qed.
Lemma lem4504037 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504038 {A B : Type'} (_53005 : type839 A B) (h1 : _53005 = (term704 A B)) : (term1508 A B) = (term1533 A B _53005).
Proof. exact (MK_COMB (@lem4504037 B) (@lem4504036 A B _53005 h1)). Qed.
Lemma lem4504039 {A B : Type'} (_53005 : type839 A B) : term1534 A B _53005.
Proof. exact (fun h0 : _53005 = (term704 A B) => @lem4504038 A B _53005 h0). Qed.
Lemma lem4504040 {A B : Type'} : term1535 A B.
Proof. exact (fun _53005 : type839 A B => @lem4504039 A B _53005). Qed.
Lemma lem4504042 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4504043 {A B : Type'} (P : Prop) (c : type839 A B) (Q : type214 A B) : term741 A B P c Q.
Proof. exact (@lem4504042 (type839 A B) P c Q). Qed.
Lemma lem4504044 {A B : Type'} : term1536 A B.
Proof. exact (@lem4504043 A B (term1508 A B) (term704 A B) (term1537 A B)). Qed.
Lemma lem4504045 {A B : Type'} (_53005 : type839 A B) : (term1538 A B _53005) = (term1533 A B _53005).
Proof. exact (eq_refl (term1538 A B _53005)). Qed.
Lemma lem4504046 {A B : Type'} : (term1539 A B) = (term1539 A B).
Proof. exact (eq_refl (term1539 A B)). Qed.
Lemma lem4504047 {A B : Type'} (_53005 : type839 A B) : ((term1508 A B) = (term1538 A B _53005)) = ((term1508 A B) = (term1533 A B _53005)).
Proof. exact (MK_COMB (@lem4504046 A B) (@lem4504045 A B _53005)). Qed.
Lemma lem4504048 {A B : Type'} (_53005 : type839 A B) : (term746 A B _53005) = (term746 A B _53005).
Proof. exact (eq_refl (term746 A B _53005)). Qed.
Lemma lem4504049 {A B : Type'} (_53005 : type839 A B) : (term1540 A B _53005) = (term1534 A B _53005).
Proof. exact (MK_COMB (@lem4504048 A B _53005) (@lem4504047 A B _53005)). Qed.
Lemma lem4504050 {A B : Type'} : (term1541 A B) = (term1542 A B).
Proof. exact (fun_ext (fun _53005 : type839 A B => @lem4504049 A B _53005)). Qed.
Lemma lem4504051 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4504052 {A B : Type'} : (term1543 A B) = (term1535 A B).
Proof. exact (MK_COMB (@lem4504051 A B) (@lem4504050 A B)). Qed.
Lemma lem4504053 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504054 {A B : Type'} : (term1544 A B) = (term1545 A B).
Proof. exact (MK_COMB (@lem4504053) (@lem4504052 A B)). Qed.
Lemma lem4504055 {A B : Type'} (_53005 : type839 A B) : (term1538 A B _53005) = (term1533 A B _53005).
Proof. exact (eq_refl (term1538 A B _53005)). Qed.
Lemma lem4504056 {A B : Type'} (_53005 : type839 A B) : (term746 A B _53005) = (term746 A B _53005).
Proof. exact (eq_refl (term746 A B _53005)). Qed.
Lemma lem4504057 {A B : Type'} (_53005 : type839 A B) : (term1546 A B _53005) = (term1547 A B _53005).
Proof. exact (MK_COMB (@lem4504056 A B _53005) (@lem4504055 A B _53005)). Qed.
Lemma lem4504058 {A B : Type'} : (term1548 A B) = (term1549 A B).
Proof. exact (fun_ext (fun _53005 : type839 A B => @lem4504057 A B _53005)). Qed.
Lemma lem4504059 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4504060 {A B : Type'} : (term1550 A B) = (term1551 A B).
Proof. exact (MK_COMB (@lem4504059 A B) (@lem4504058 A B)). Qed.
Lemma lem4504061 {A B : Type'} : (term1539 A B) = (term1539 A B).
Proof. exact (eq_refl (term1539 A B)). Qed.
Lemma lem4504062 {A B : Type'} : ((term1508 A B) = (term1550 A B)) = ((term1508 A B) = (term1551 A B)).
Proof. exact (MK_COMB (@lem4504061 A B) (@lem4504060 A B)). Qed.
Lemma lem4504063 {A B : Type'} : (term1536 A B) = (term1552 A B).
Proof. exact (MK_COMB (@lem4504054 A B) (@lem4504062 A B)). Qed.
Lemma lem4504064 {A B : Type'} : term1552 A B.
Proof. exact (EQ_MP (@lem4504063 A B) (@lem4504044 A B)). Qed.
Lemma lem4504065 {A B : Type'} : (term1508 A B) = (term1551 A B).
Proof. exact (@lem4504064 A B (@lem4504040 A B)). Qed.
Lemma lem4504067 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504068 {A B : Type'} (s : type839 A B) (t : type839 A B) : (s = (term762 A B t)) = (term763 A B s t).
Proof. exact (@lem4504067 (type674 A B) (B -> Prop) s t). Qed.
Lemma lem4504069 {A B : Type'} (_53005 : type839 A B) : (_53005 = (term764 A B)) = (term765 A B _53005).
Proof. exact (@lem4504068 A B _53005 (term704 A B)). Qed.
Lemma lem4504070 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4504071 {A B : Type'} : (term764 A B) = (term704 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504070 A B t)). Qed.
Lemma lem4504072 {A B : Type'} (_53005 : type839 A B) : (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53005) = (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53005).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53005)). Qed.
Lemma lem4504073 {A B : Type'} (_53005 : type839 A B) : (_53005 = (term764 A B)) = (_53005 = (term704 A B)).
Proof. exact (MK_COMB (@lem4504072 A B _53005) (@lem4504071 A B)). Qed.
Lemma lem4504074 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504075 {A B : Type'} (_53005 : type839 A B) : (term766 A B _53005) = (term767 A B _53005).
Proof. exact (MK_COMB (@lem4504074) (@lem4504073 A B _53005)). Qed.
Lemma lem4504076 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4504077 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term707 A B _53005 t) = (term707 A B _53005 t).
Proof. exact (eq_refl (term707 A B _53005 t)). Qed.
Lemma lem4504078 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term705 A B t)) = ((_53005 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4504077 A B _53005 t) (@lem4504076 A B t)). Qed.
Lemma lem4504079 {A B : Type'} (_53005 : type839 A B) : (term768 A B _53005) = (term769 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504078 A B _53005 t)). Qed.
Lemma lem4504080 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504081 {A B : Type'} (_53005 : type839 A B) : (term765 A B _53005) = (term770 A B _53005).
Proof. exact (MK_COMB (@lem4504080 B) (@lem4504079 A B _53005)). Qed.
Lemma lem4504082 {A B : Type'} (_53005 : type839 A B) : ((_53005 = (term764 A B)) = (term765 A B _53005)) = ((_53005 = (term704 A B)) = (term770 A B _53005)).
Proof. exact (MK_COMB (@lem4504075 A B _53005) (@lem4504081 A B _53005)). Qed.
Lemma lem4504083 {A B : Type'} (_53005 : type839 A B) : (_53005 = (term704 A B)) = (term770 A B _53005).
Proof. exact (EQ_MP (@lem4504082 A B _53005) (@lem4504069 A B _53005)). Qed.
Lemma lem4504085 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504086 {A B : Type'} (s : type674 A B) (t : type674 A B) : (s = (term771 A B t)) = (term772 A B s t).
Proof. exact (@lem4504085 (type1446 A B) (A -> Prop) s t). Qed.
Lemma lem4504087 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term773 A B t)) = (term774 A B _53005 t).
Proof. exact (@lem4504086 A B (_53005 t) (term706 A B t)). Qed.
Lemma lem4504088 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4504089 {A B : Type'} (t : B -> Prop) : (term773 A B t) = (term706 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504088 A B t s)). Qed.
Lemma lem4504090 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term707 A B _53005 t) = (term707 A B _53005 t).
Proof. exact (eq_refl (term707 A B _53005 t)). Qed.
Lemma lem4504091 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term773 A B t)) = ((_53005 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4504090 A B _53005 t) (@lem4504089 A B t)). Qed.
Lemma lem4504092 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504093 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term775 A B _53005 t) = (term776 A B _53005 t).
Proof. exact (MK_COMB (@lem4504092) (@lem4504091 A B _53005 t)). Qed.
Lemma lem4504094 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4504095 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53005 t s) = (term710 A B _53005 t s).
Proof. exact (eq_refl (term710 A B _53005 t s)). Qed.
Lemma lem4504096 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term708 A B t s)) = ((_53005 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4504095 A B _53005 t s) (@lem4504094 A B t s)). Qed.
Lemma lem4504097 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term777 A B _53005 t) = (term778 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504096 A B _53005 t s)). Qed.
Lemma lem4504098 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504099 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term774 A B _53005 t) = (term779 A B _53005 t).
Proof. exact (MK_COMB (@lem4504098 A) (@lem4504097 A B _53005 t)). Qed.
Lemma lem4504100 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (((_53005 t) = (term773 A B t)) = (term774 A B _53005 t)) = (((_53005 t) = (term706 A B t)) = (term779 A B _53005 t)).
Proof. exact (MK_COMB (@lem4504093 A B _53005 t) (@lem4504099 A B _53005 t)). Qed.
Lemma lem4504101 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term706 A B t)) = (term779 A B _53005 t).
Proof. exact (EQ_MP (@lem4504100 A B _53005 t) (@lem4504087 A B _53005 t)). Qed.
Lemma lem4504103 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504104 {A B : Type'} (s : type1446 A B) (t : type1446 A B) : (s = (term780 A B t)) = (term781 A B s t).
Proof. exact (@lem4504103 (type572 A B) B s t). Qed.
Lemma lem4504105 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term782 A B t s)) = (term783 A B _53005 t s).
Proof. exact (@lem4504104 A B (_53005 t s) (term709 A B t s)). Qed.
Lemma lem4504106 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4504107 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term782 A B t s) = (term709 A B t s).
Proof. exact (fun_ext (fun d : B => @lem4504106 A B t s d)). Qed.
Lemma lem4504108 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53005 t s) = (term710 A B _53005 t s).
Proof. exact (eq_refl (term710 A B _53005 t s)). Qed.
Lemma lem4504109 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term782 A B t s)) = ((_53005 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4504108 A B _53005 t s) (@lem4504107 A B t s)). Qed.
Lemma lem4504110 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504111 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term784 A B _53005 t s) = (term785 A B _53005 t s).
Proof. exact (MK_COMB (@lem4504110) (@lem4504109 A B _53005 t s)). Qed.
Lemma lem4504112 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4504113 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53005 t s d) = (term712 A B _53005 t s d).
Proof. exact (eq_refl (term712 A B _53005 t s d)). Qed.
Lemma lem4504114 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term711 A B t s d)) = ((_53005 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4504113 A B _53005 t s d) (@lem4504112 A B t s d)). Qed.
Lemma lem4504115 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term786 A B _53005 t s) = (term787 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4504114 A B _53005 t s d)). Qed.
Lemma lem4504116 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504117 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term783 A B _53005 t s) = (term788 A B _53005 t s).
Proof. exact (MK_COMB (@lem4504116 B) (@lem4504115 A B _53005 t s)). Qed.
Lemma lem4504118 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (((_53005 t s) = (term782 A B t s)) = (term783 A B _53005 t s)) = (((_53005 t s) = (term709 A B t s)) = (term788 A B _53005 t s)).
Proof. exact (MK_COMB (@lem4504111 A B _53005 t s) (@lem4504117 A B _53005 t s)). Qed.
Lemma lem4504119 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term709 A B t s)) = (term788 A B _53005 t s).
Proof. exact (EQ_MP (@lem4504118 A B _53005 t s) (@lem4504105 A B _53005 t s)). Qed.
Lemma lem4504121 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504122 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = (term789 A B t)) = (term790 A B s t).
Proof. exact (@lem4504121 Prop (A -> B) s t). Qed.
Lemma lem4504123 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term791 A B t s d)) = (term792 A B _53005 t s d).
Proof. exact (@lem4504122 A B (_53005 t s d) (term196 A B t s d)). Qed.
Lemma lem4504124 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4504125 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term791 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4504124 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504126 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53005 t s d) = (term712 A B _53005 t s d).
Proof. exact (eq_refl (term712 A B _53005 t s d)). Qed.
Lemma lem4504127 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term791 A B t s d)) = ((_53005 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4504126 A B _53005 t s d) (@lem4504125 A B t s d)). Qed.
Lemma lem4504128 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504129 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term794 A B _53005 t s d) = (term795 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4504128) (@lem4504127 A B _53005 t s d)). Qed.
Lemma lem4504130 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4504131 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _53005 t s d GEN_PVAR_148) = (term796 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4504132 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term793 A B t s d GEN_PVAR_148)) = ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4504131 A B _53005 t s d GEN_PVAR_148) (@lem4504130 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504133 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term797 A B _53005 t s d) = (term798 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4504132 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4504134 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504135 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term792 A B _53005 t s d) = (term799 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4504134 A B) (@lem4504133 A B _53005 t s d)). Qed.
Lemma lem4504136 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (((_53005 t s d) = (term791 A B t s d)) = (term792 A B _53005 t s d)) = (((_53005 t s d) = (term196 A B t s d)) = (term799 A B _53005 t s d)).
Proof. exact (MK_COMB (@lem4504129 A B _53005 t s d) (@lem4504135 A B _53005 t s d)). Qed.
Lemma lem4504137 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term196 A B t s d)) = (term799 A B _53005 t s d).
Proof. exact (EQ_MP (@lem4504136 A B _53005 t s d) (@lem4504123 A B _53005 t s d)). Qed.
Lemma lem4504138 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d))). Qed.
Lemma lem4504139 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53005 t s d) = (term798 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4504138 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4504140 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504141 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53005 t s d) = (term799 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4504140 A B) (@lem4504139 A B _53005 t s d)). Qed.
Lemma lem4504142 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d) = (term196 A B t s d)) = (term799 A B _53005 t s d).
Proof. exact (TRANS (@lem4504137 A B _53005 t s d) (@lem4504141 A B _53005 t s d)). Qed.
Lemma lem4504143 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term787 A B _53005 t s) = (term800 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4504142 A B _53005 t s d)). Qed.
Lemma lem4504144 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504145 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term788 A B _53005 t s) = (term801 A B _53005 t s).
Proof. exact (MK_COMB (@lem4504144 B) (@lem4504143 A B _53005 t s)). Qed.
Lemma lem4504146 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53005 t s) = (term709 A B t s)) = (term801 A B _53005 t s).
Proof. exact (TRANS (@lem4504119 A B _53005 t s) (@lem4504145 A B _53005 t s)). Qed.
Lemma lem4504147 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term778 A B _53005 t) = (term802 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504146 A B _53005 t s)). Qed.
Lemma lem4504148 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504149 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term779 A B _53005 t) = (term803 A B _53005 t).
Proof. exact (MK_COMB (@lem4504148 A) (@lem4504147 A B _53005 t)). Qed.
Lemma lem4504150 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((_53005 t) = (term706 A B t)) = (term803 A B _53005 t).
Proof. exact (TRANS (@lem4504101 A B _53005 t) (@lem4504149 A B _53005 t)). Qed.
Lemma lem4504151 {A B : Type'} (_53005 : type839 A B) : (term769 A B _53005) = (term804 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504150 A B _53005 t)). Qed.
Lemma lem4504152 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504153 {A B : Type'} (_53005 : type839 A B) : (term770 A B _53005) = (term805 A B _53005).
Proof. exact (MK_COMB (@lem4504152 B) (@lem4504151 A B _53005)). Qed.
Lemma lem4504154 {A B : Type'} (_53005 : type839 A B) : (_53005 = (term704 A B)) = (term805 A B _53005).
Proof. exact (TRANS (@lem4504083 A B _53005) (@lem4504153 A B _53005)). Qed.
Lemma lem4504155 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504156 {A B : Type'} (_53005 : type839 A B) : (term746 A B _53005) = (term806 A B _53005).
Proof. exact (MK_COMB (@lem4504155) (@lem4504154 A B _53005)). Qed.
Lemma lem4504157 {A B : Type'} (_53005 : type839 A B) : (term1533 A B _53005) = (term1533 A B _53005).
Proof. exact (eq_refl (term1533 A B _53005)). Qed.
Lemma lem4504158 {A B : Type'} (_53005 : type839 A B) : (term1547 A B _53005) = (term1553 A B _53005).
Proof. exact (MK_COMB (@lem4504156 A B _53005) (@lem4504157 A B _53005)). Qed.
Lemma lem4504159 {A B : Type'} : (term1549 A B) = (term1554 A B).
Proof. exact (fun_ext (fun _53005 : type839 A B => @lem4504158 A B _53005)). Qed.
Lemma lem4504160 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4504161 {A B : Type'} : (term1551 A B) = (term1555 A B).
Proof. exact (MK_COMB (@lem4504160 A B) (@lem4504159 A B)). Qed.
Lemma lem4504162 {A B : Type'} : (term1539 A B) = (term1539 A B).
Proof. exact (eq_refl (term1539 A B)). Qed.
Lemma lem4504163 {A B : Type'} : ((term1508 A B) = (term1551 A B)) = ((term1508 A B) = (term1555 A B)).
Proof. exact (MK_COMB (@lem4504162 A B) (@lem4504161 A B)). Qed.
Lemma lem4504164 {A B : Type'} : (term1508 A B) = (term1555 A B).
Proof. exact (EQ_MP (@lem4504163 A B) (@lem4504065 A B)). Qed.
Lemma lem4504165 {A B : Type'} (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : _53006 = (term1556 A B).
Proof. exact (h1). Qed.
Lemma lem4504166 {A : Type'} (a : A) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem4504167 {A B : Type'} (a : A) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a) = (term1557 A B a).
Proof. exact (MK_COMB (@lem4504165 A B _53006 h1) (@lem4504166 A a)). Qed.
Lemma lem4504168 {A B : Type'} (a : A) : (term1557 A B a) = (term431 A B a).
Proof. exact (eq_refl (term1557 A B a)). Qed.
Lemma lem4504169 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1558 A B _53006 a) = (term1558 A B _53006 a).
Proof. exact (eq_refl (term1558 A B _53006 a)). Qed.
Lemma lem4504170 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term1557 A B a)) = ((_53006 a) = (term431 A B a)).
Proof. exact (MK_COMB (@lem4504169 A B _53006 a) (@lem4504168 A B a)). Qed.
Lemma lem4504171 {A B : Type'} (a : A) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a) = (term431 A B a).
Proof. exact (EQ_MP (@lem4504170 A B _53006 a) (@lem4504167 A B a _53006 h1)). Qed.
Lemma lem4504172 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504173 {A B : Type'} (a : A) (b : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a b) = (term432 A B a b).
Proof. exact (MK_COMB (@lem4504171 A B a _53006 h1) (@lem4504172 B b)). Qed.
Lemma lem4504174 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4504175 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1559 A B _53006 a b) = (term1559 A B _53006 a b).
Proof. exact (eq_refl (term1559 A B _53006 a b)). Qed.
Lemma lem4504176 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term432 A B a b)) = ((_53006 a b) = (term436 A B a b)).
Proof. exact (MK_COMB (@lem4504175 A B _53006 a b) (@lem4504174 A B a b)). Qed.
Lemma lem4504177 {A B : Type'} (a : A) (b : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a b) = (term436 A B a b).
Proof. exact (EQ_MP (@lem4504176 A B _53006 a b) (@lem4504173 A B a b _53006 h1)). Qed.
Lemma lem4504178 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem4504179 {A B : Type'} (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a b g) = (term438 A B a b g).
Proof. exact (MK_COMB (@lem4504177 A B a b _53006 h1) (@lem4504178 A B g)). Qed.
Lemma lem4504180 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4504181 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1560 A B _53006 a b g) = (term1560 A B _53006 a b g).
Proof. exact (eq_refl (term1560 A B _53006 a b g)). Qed.
Lemma lem4504182 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term438 A B a b g)) = ((_53006 a b g) = (term442 A B a b g)).
Proof. exact (MK_COMB (@lem4504181 A B _53006 a b g) (@lem4504180 A B a b g)). Qed.
Lemma lem4504183 {A B : Type'} (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (_53006 a b g) = (term442 A B a b g).
Proof. exact (EQ_MP (@lem4504182 A B _53006 a b g) (@lem4504179 A B a b g _53006 h1)). Qed.
Lemma lem4504219 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (d : B) : (term1438 A B s a b g x d) = (term1438 A B s a b g x d).
Proof. exact (eq_refl (term1438 A B s a b g x d)). Qed.
Lemma lem4504220 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1439 A B s a b g d) = (term1439 A B s a b g d).
Proof. exact (fun_ext (fun x : A => @lem4504219 A B s a b g x d)). Qed.
Lemma lem4504221 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504222 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1440 A B s a b g d) = (term1440 A B s a b g d).
Proof. exact (MK_COMB (@lem4504221 A) (@lem4504220 A B s a b g d)). Qed.
Lemma lem4504255 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (t : B -> Prop) : (term1433 A B s a b g x t) = (term1433 A B s a b g x t).
Proof. exact (eq_refl (term1433 A B s a b g x t)). Qed.
Lemma lem4504256 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1434 A B s a b g t) = (term1434 A B s a b g t).
Proof. exact (fun_ext (fun x : A => @lem4504255 A B s a b g x t)). Qed.
Lemma lem4504257 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504258 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1435 A B s a b g t) = (term1435 A B s a b g t).
Proof. exact (MK_COMB (@lem4504257 A) (@lem4504256 A B s a b g t)). Qed.
Lemma lem4504259 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4504260 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (t : B -> Prop) : (term1436 A B s a b g t) = (term1436 A B s a b g t).
Proof. exact (MK_COMB (@lem4504259) (@lem4504258 A B s a b g t)). Qed.
Lemma lem4504261 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1441 A B t s a b g d) = (term1441 A B t s a b g d).
Proof. exact (MK_COMB (@lem4504260 A B s a b g t) (@lem4504222 A B s a b g d)). Qed.
Lemma lem4504278 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term180 A B s g x d) = (term180 A B s g x d).
Proof. exact (eq_refl (term180 A B s g x d)). Qed.
Lemma lem4504279 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term182 A B s g d) = (term182 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4504278 A B s g x d)). Qed.
Lemma lem4504280 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504281 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term184 A B s g d) = (term184 A B s g d).
Proof. exact (MK_COMB (@lem4504280 A) (@lem4504279 A B s g d)). Qed.
Lemma lem4504282 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504283 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1449 A B s g d) = (term1449 A B s g d).
Proof. exact (MK_COMB (@lem4504282) (@lem4504281 A B s g d)). Qed.
Lemma lem4504284 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1451 A B t s a b g d) = (term1451 A B t s a b g d).
Proof. exact (MK_COMB (@lem4504283 A B s g d) (@lem4504261 A B t s a b g d)). Qed.
Lemma lem4504299 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term170 A B s g x t) = (term170 A B s g x t).
Proof. exact (eq_refl (term170 A B s g x t)). Qed.
Lemma lem4504300 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term172 A B s g t) = (term172 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4504299 A B s g x t)). Qed.
Lemma lem4504301 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504302 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term174 A B s g t) = (term174 A B s g t).
Proof. exact (MK_COMB (@lem4504301 A) (@lem4504300 A B s g t)). Qed.
Lemma lem4504303 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504304 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1452 A B s g t) = (term1452 A B s g t).
Proof. exact (MK_COMB (@lem4504303) (@lem4504302 A B s g t)). Qed.
Lemma lem4504305 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1454 A B t s a b g d) = (term1454 A B t s a b g d).
Proof. exact (MK_COMB (@lem4504304 A B s g t) (@lem4504284 A B t s a b g d)). Qed.
Lemma lem4504312 {B : Type'} (b : B) (t : B -> Prop) : (term168 B b t) = (term168 B b t).
Proof. exact (eq_refl (term168 B b t)). Qed.
Lemma lem4504313 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1456 A B t s a b g d) = (term1456 A B t s a b g d).
Proof. exact (MK_COMB (@lem4504312 B b t) (@lem4504305 A B t s a b g d)). Qed.
Lemma lem4504315 {A B : Type'} (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term442 A B a b g) = (_53006 a b g).
Proof. exact (SYM (@lem4504183 A B a b g _53006 h1)). Qed.
Lemma lem4504316 {A B : Type'} (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term442 A B a b g) = (_53006 a b g).
Proof. exact (@lem4504315 A B a b g _53006 h1). Qed.
Lemma lem4504319 {A B : Type'} (f : A -> B) : (@eq (A -> B) f) = (@eq (A -> B) f).
Proof. exact (eq_refl (@eq (A -> B) f)). Qed.
Lemma lem4504320 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (f = (term442 A B a b g)) = (f = (_53006 a b g)).
Proof. exact (MK_COMB (@lem4504319 A B f) (@lem4504316 A B a b g _53006 h1)). Qed.
Lemma lem4504321 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504322 {A B : Type'} (f : A -> B) (a : A) (b : B) (g : A -> B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1457 A B f a b g) = (term1561 A B f _53006 a b g).
Proof. exact (MK_COMB (@lem4504321) (@lem4504320 A B f a b g _53006 h1)). Qed.
Lemma lem4504323 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1459 A B f t s a b g d) = (term1562 A B f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504322 A B f a b g _53006 h1) (@lem4504313 A B t s a b g d)). Qed.
Lemma lem4504342 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _53005 t s d n m) = (term716 A B _53005 t s d n m).
Proof. exact (eq_refl (term716 A B _53005 t s d n m)). Qed.
Lemma lem4504343 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1509 A B _53005 n m f t s a b g d) = (term1563 A B _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504342 A B _53005 t s d n m) (@lem4504323 A B f t s a b g d _53006 h1)). Qed.
Lemma lem4504350 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4504351 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1510 A B _53005 n m f t s a b g d) = (term1564 A B _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504350 B t n) (@lem4504343 A B _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504362 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4504363 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1511 A B s0 _53005 n m f t s a b g d) = (term1565 A B s0 _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504362 A s0 a s) (@lem4504351 A B _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504372 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4504373 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1512 A B s0 _53005 n m f t s a b g d) = (term1566 A B s0 _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504372 A a s) (@lem4504363 A B s0 _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504380 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4504381 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1513 A B s0 _53005 n m f t s a b g d) = (term1567 A B s0 _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504380 A s m) (@lem4504373 A B s0 _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504382 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1514 A B _53005 n m f t s a b g d) = (term1568 A B _53005 n m f _53006 t s a b g d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4504381 A B s0 _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504383 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504384 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1515 A B _53005 n m f t s a b g d) = (term1569 A B _53005 n m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504383 A) (@lem4504382 A B _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504385 {A B : Type'} (_53005 : type839 A B) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1516 A B _53005 m f t s a b g d) = (term1570 A B _53005 m f _53006 t s a b g d).
Proof. exact (fun_ext (fun n : nat => @lem4504384 A B _53005 n m f t s a b g d _53006 h1)). Qed.
Lemma lem4504386 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504387 {A B : Type'} (_53005 : type839 A B) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1517 A B _53005 m f t s a b g d) = (term1571 A B _53005 m f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504386) (@lem4504385 A B _53005 m f t s a b g d _53006 h1)). Qed.
Lemma lem4504388 {A B : Type'} (_53005 : type839 A B) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1518 A B _53005 f t s a b g d) = (term1572 A B _53005 f _53006 t s a b g d).
Proof. exact (fun_ext (fun m : nat => @lem4504387 A B _53005 m f t s a b g d _53006 h1)). Qed.
Lemma lem4504389 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504390 {A B : Type'} (_53005 : type839 A B) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1519 A B _53005 f t s a b g d) = (term1573 A B _53005 f _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504389) (@lem4504388 A B _53005 f t s a b g d _53006 h1)). Qed.
Lemma lem4504391 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1520 A B _53005 t s a b g d) = (term1574 A B _53005 _53006 t s a b g d).
Proof. exact (fun_ext (fun f : A -> B => @lem4504390 A B _53005 f t s a b g d _53006 h1)). Qed.
Lemma lem4504392 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504393 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1521 A B _53005 t s a b g d) = (term1575 A B _53005 _53006 t s a b g d).
Proof. exact (MK_COMB (@lem4504392 A B) (@lem4504391 A B _53005 t s a b g d _53006 h1)). Qed.
Lemma lem4504394 {A B : Type'} (_53005 : type839 A B) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1522 A B _53005 s a b g d) = (term1576 A B _53005 _53006 s a b g d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504393 A B _53005 t s a b g d _53006 h1)). Qed.
Lemma lem4504395 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504396 {A B : Type'} (_53005 : type839 A B) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1523 A B _53005 s a b g d) = (term1577 A B _53005 _53006 s a b g d).
Proof. exact (MK_COMB (@lem4504395 B) (@lem4504394 A B _53005 s a b g d _53006 h1)). Qed.
Lemma lem4504397 {A B : Type'} (_53005 : type839 A B) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1524 A B _53005 a b g d) = (term1578 A B _53005 _53006 a b g d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504396 A B _53005 s a b g d _53006 h1)). Qed.
Lemma lem4504398 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504399 {A B : Type'} (_53005 : type839 A B) (a : A) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1525 A B _53005 a b g d) = (term1579 A B _53005 _53006 a b g d).
Proof. exact (MK_COMB (@lem4504398 A) (@lem4504397 A B _53005 a b g d _53006 h1)). Qed.
Lemma lem4504400 {A B : Type'} (_53005 : type839 A B) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1526 A B _53005 b g d) = (term1580 A B _53005 _53006 b g d).
Proof. exact (fun_ext (fun a : A => @lem4504399 A B _53005 a b g d _53006 h1)). Qed.
Lemma lem4504401 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504402 {A B : Type'} (_53005 : type839 A B) (b : B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1527 A B _53005 b g d) = (term1581 A B _53005 _53006 b g d).
Proof. exact (MK_COMB (@lem4504401 A) (@lem4504400 A B _53005 b g d _53006 h1)). Qed.
Lemma lem4504403 {A B : Type'} (_53005 : type839 A B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1528 A B _53005 g d) = (term1582 A B _53005 _53006 g d).
Proof. exact (fun_ext (fun b : B => @lem4504402 A B _53005 b g d _53006 h1)). Qed.
Lemma lem4504404 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504405 {A B : Type'} (_53005 : type839 A B) (g : A -> B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1529 A B _53005 g d) = (term1583 A B _53005 _53006 g d).
Proof. exact (MK_COMB (@lem4504404 B) (@lem4504403 A B _53005 g d _53006 h1)). Qed.
Lemma lem4504406 {A B : Type'} (_53005 : type839 A B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1530 A B _53005 d) = (term1584 A B _53005 _53006 d).
Proof. exact (fun_ext (fun g : A -> B => @lem4504405 A B _53005 g d _53006 h1)). Qed.
Lemma lem4504407 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504408 {A B : Type'} (_53005 : type839 A B) (d : B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1531 A B _53005 d) = (term1585 A B _53005 _53006 d).
Proof. exact (MK_COMB (@lem4504407 A B) (@lem4504406 A B _53005 d _53006 h1)). Qed.
Lemma lem4504409 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1532 A B _53005) = (term1586 A B _53005 _53006).
Proof. exact (fun_ext (fun d : B => @lem4504408 A B _53005 d _53006 h1)). Qed.
Lemma lem4504410 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504411 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1533 A B _53005) = (term1587 A B _53005 _53006).
Proof. exact (MK_COMB (@lem4504410 B) (@lem4504409 A B _53005 _53006 h1)). Qed.
Lemma lem4504412 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4504429 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term180 A B s f x d) = (term180 A B s f x d).
Proof. exact (eq_refl (term180 A B s f x d)). Qed.
Lemma lem4504430 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term182 A B s f d) = (term182 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4504429 A B s f x d)). Qed.
Lemma lem4504431 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504432 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term184 A B s f d) = (term184 A B s f d).
Proof. exact (MK_COMB (@lem4504431 A) (@lem4504430 A B s f d)). Qed.
Lemma lem4504447 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term170 A B s f x t) = (term170 A B s f x t).
Proof. exact (eq_refl (term170 A B s f x t)). Qed.
Lemma lem4504448 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term172 A B s f t) = (term172 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4504447 A B s f x t)). Qed.
Lemma lem4504449 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504450 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term174 A B s f t) = (term174 A B s f t).
Proof. exact (MK_COMB (@lem4504449 A) (@lem4504448 A B s f t)). Qed.
Lemma lem4504451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4504452 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term177 A B s f t) = (term177 A B s f t).
Proof. exact (MK_COMB (@lem4504451) (@lem4504450 A B s f t)). Qed.
Lemma lem4504453 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term186 A B t s f d) = (term186 A B t s f d).
Proof. exact (MK_COMB (@lem4504452 A B s f t) (@lem4504432 A B s f d)). Qed.
Lemma lem4504456 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4504457 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term188 A B GEN_PVAR_148 t s f d) = (term188 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4504456 A B GEN_PVAR_148) (@lem4504453 A B t s f d)). Qed.
Lemma lem4504458 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4504457 A B GEN_PVAR_148 t s f d) (@lem4504412 A B f)). Qed.
Lemma lem4504459 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4504458 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4504460 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4504461 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4504460 A B) (@lem4504459 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504472 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _53005 t s d GEN_PVAR_148) = (term796 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4504473 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4504472 A B _53005 t s d GEN_PVAR_148) (@lem4504461 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504474 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53005 t s d) = (term798 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4504473 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4504475 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504476 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53005 t s d) = (term799 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4504475 A B) (@lem4504474 A B _53005 t s d)). Qed.
Lemma lem4504477 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _53005 t s) = (term800 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4504476 A B _53005 t s d)). Qed.
Lemma lem4504478 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504479 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _53005 t s) = (term801 A B _53005 t s).
Proof. exact (MK_COMB (@lem4504478 B) (@lem4504477 A B _53005 t s)). Qed.
Lemma lem4504480 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term802 A B _53005 t) = (term802 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504479 A B _53005 t s)). Qed.
Lemma lem4504481 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504482 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term803 A B _53005 t) = (term803 A B _53005 t).
Proof. exact (MK_COMB (@lem4504481 A) (@lem4504480 A B _53005 t)). Qed.
Lemma lem4504483 {A B : Type'} (_53005 : type839 A B) : (term804 A B _53005) = (term804 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504482 A B _53005 t)). Qed.
Lemma lem4504484 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504485 {A B : Type'} (_53005 : type839 A B) : (term805 A B _53005) = (term805 A B _53005).
Proof. exact (MK_COMB (@lem4504484 B) (@lem4504483 A B _53005)). Qed.
Lemma lem4504486 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504487 {A B : Type'} (_53005 : type839 A B) : (term806 A B _53005) = (term806 A B _53005).
Proof. exact (MK_COMB (@lem4504486) (@lem4504485 A B _53005)). Qed.
Lemma lem4504488 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1553 A B _53005) = (term1588 A B _53005 _53006).
Proof. exact (MK_COMB (@lem4504487 A B _53005) (@lem4504411 A B _53005 _53006 h1)). Qed.
Lemma lem4504489 {A B : Type'} (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1554 A B) = (term1589 A B _53006).
Proof. exact (fun_ext (fun _53005 : type839 A B => @lem4504488 A B _53005 _53006 h1)). Qed.
Lemma lem4504490 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4504491 {A B : Type'} (_53006 : type1403 A B) (h1 : _53006 = (term1556 A B)) : (term1555 A B) = (term1590 A B _53006).
Proof. exact (MK_COMB (@lem4504490 A B) (@lem4504489 A B _53006 h1)). Qed.
Lemma lem4504492 {A B : Type'} (_53006 : type1403 A B) : term1591 A B _53006.
Proof. exact (fun h0 : _53006 = (term1556 A B) => @lem4504491 A B _53006 h0). Qed.
Lemma lem4504493 {A B : Type'} : term1592 A B.
Proof. exact (fun _53006 : type1403 A B => @lem4504492 A B _53006). Qed.
Lemma lem4504495 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4504496 {A B : Type'} (P : Prop) (c : type1403 A B) (Q : type422 A B) : term1593 A B P c Q.
Proof. exact (@lem4504495 (type1403 A B) P c Q). Qed.
Lemma lem4504497 {A B : Type'} : term1594 A B.
Proof. exact (@lem4504496 A B (term1555 A B) (term1556 A B) (term1595 A B)). Qed.
Lemma lem4504498 {A B : Type'} (_53006 : type1403 A B) : (term1596 A B _53006) = (term1590 A B _53006).
Proof. exact (eq_refl (term1596 A B _53006)). Qed.
Lemma lem4504499 {A B : Type'} : (term1597 A B) = (term1597 A B).
Proof. exact (eq_refl (term1597 A B)). Qed.
Lemma lem4504500 {A B : Type'} (_53006 : type1403 A B) : ((term1555 A B) = (term1596 A B _53006)) = ((term1555 A B) = (term1590 A B _53006)).
Proof. exact (MK_COMB (@lem4504499 A B) (@lem4504498 A B _53006)). Qed.
Lemma lem4504501 {A B : Type'} (_53006 : type1403 A B) : (term1598 A B _53006) = (term1598 A B _53006).
Proof. exact (eq_refl (term1598 A B _53006)). Qed.
Lemma lem4504502 {A B : Type'} (_53006 : type1403 A B) : (term1599 A B _53006) = (term1591 A B _53006).
Proof. exact (MK_COMB (@lem4504501 A B _53006) (@lem4504500 A B _53006)). Qed.
Lemma lem4504503 {A B : Type'} : (term1600 A B) = (term1601 A B).
Proof. exact (fun_ext (fun _53006 : type1403 A B => @lem4504502 A B _53006)). Qed.
Lemma lem4504504 {A B : Type'} : (@all (A -> B -> (A -> B) -> A -> B)) = (@all (A -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@all (A -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4504505 {A B : Type'} : (term1602 A B) = (term1592 A B).
Proof. exact (MK_COMB (@lem4504504 A B) (@lem4504503 A B)). Qed.
Lemma lem4504506 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504507 {A B : Type'} : (term1603 A B) = (term1604 A B).
Proof. exact (MK_COMB (@lem4504506) (@lem4504505 A B)). Qed.
Lemma lem4504508 {A B : Type'} (_53006 : type1403 A B) : (term1596 A B _53006) = (term1590 A B _53006).
Proof. exact (eq_refl (term1596 A B _53006)). Qed.
Lemma lem4504509 {A B : Type'} (_53006 : type1403 A B) : (term1598 A B _53006) = (term1598 A B _53006).
Proof. exact (eq_refl (term1598 A B _53006)). Qed.
Lemma lem4504510 {A B : Type'} (_53006 : type1403 A B) : (term1605 A B _53006) = (term1606 A B _53006).
Proof. exact (MK_COMB (@lem4504509 A B _53006) (@lem4504508 A B _53006)). Qed.
Lemma lem4504511 {A B : Type'} : (term1607 A B) = (term1608 A B).
Proof. exact (fun_ext (fun _53006 : type1403 A B => @lem4504510 A B _53006)). Qed.
Lemma lem4504512 {A B : Type'} : (@all (A -> B -> (A -> B) -> A -> B)) = (@all (A -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@all (A -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4504513 {A B : Type'} : (term1609 A B) = (term1610 A B).
Proof. exact (MK_COMB (@lem4504512 A B) (@lem4504511 A B)). Qed.
Lemma lem4504514 {A B : Type'} : (term1597 A B) = (term1597 A B).
Proof. exact (eq_refl (term1597 A B)). Qed.
Lemma lem4504515 {A B : Type'} : ((term1555 A B) = (term1609 A B)) = ((term1555 A B) = (term1610 A B)).
Proof. exact (MK_COMB (@lem4504514 A B) (@lem4504513 A B)). Qed.
Lemma lem4504516 {A B : Type'} : (term1594 A B) = (term1611 A B).
Proof. exact (MK_COMB (@lem4504507 A B) (@lem4504515 A B)). Qed.
Lemma lem4504517 {A B : Type'} : term1611 A B.
Proof. exact (EQ_MP (@lem4504516 A B) (@lem4504497 A B)). Qed.
Lemma lem4504518 {A B : Type'} : (term1555 A B) = (term1610 A B).
Proof. exact (@lem4504517 A B (@lem4504493 A B)). Qed.
Lemma lem4504520 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504521 {A B : Type'} (s : type1403 A B) (t : type1403 A B) : (s = (term1612 A B t)) = (term1613 A B s t).
Proof. exact (@lem4504520 (type1444 A B) A s t). Qed.
Lemma lem4504522 {A B : Type'} (_53006 : type1403 A B) : (_53006 = (term1614 A B)) = (term1615 A B _53006).
Proof. exact (@lem4504521 A B _53006 (term1556 A B)). Qed.
Lemma lem4504523 {A B : Type'} (a : A) : (term1557 A B a) = (term431 A B a).
Proof. exact (eq_refl (term1557 A B a)). Qed.
Lemma lem4504524 {A B : Type'} : (term1614 A B) = (term1556 A B).
Proof. exact (fun_ext (fun a : A => @lem4504523 A B a)). Qed.
Lemma lem4504525 {A B : Type'} (_53006 : type1403 A B) : (@eq (A -> B -> (A -> B) -> A -> B) _53006) = (@eq (A -> B -> (A -> B) -> A -> B) _53006).
Proof. exact (eq_refl (@eq (A -> B -> (A -> B) -> A -> B) _53006)). Qed.
Lemma lem4504526 {A B : Type'} (_53006 : type1403 A B) : (_53006 = (term1614 A B)) = (_53006 = (term1556 A B)).
Proof. exact (MK_COMB (@lem4504525 A B _53006) (@lem4504524 A B)). Qed.
Lemma lem4504527 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504528 {A B : Type'} (_53006 : type1403 A B) : (term1616 A B _53006) = (term1617 A B _53006).
Proof. exact (MK_COMB (@lem4504527) (@lem4504526 A B _53006)). Qed.
Lemma lem4504529 {A B : Type'} (a : A) : (term1557 A B a) = (term431 A B a).
Proof. exact (eq_refl (term1557 A B a)). Qed.
Lemma lem4504530 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1558 A B _53006 a) = (term1558 A B _53006 a).
Proof. exact (eq_refl (term1558 A B _53006 a)). Qed.
Lemma lem4504531 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term1557 A B a)) = ((_53006 a) = (term431 A B a)).
Proof. exact (MK_COMB (@lem4504530 A B _53006 a) (@lem4504529 A B a)). Qed.
Lemma lem4504532 {A B : Type'} (_53006 : type1403 A B) : (term1618 A B _53006) = (term1619 A B _53006).
Proof. exact (fun_ext (fun a : A => @lem4504531 A B _53006 a)). Qed.
Lemma lem4504533 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504534 {A B : Type'} (_53006 : type1403 A B) : (term1615 A B _53006) = (term1620 A B _53006).
Proof. exact (MK_COMB (@lem4504533 A) (@lem4504532 A B _53006)). Qed.
Lemma lem4504535 {A B : Type'} (_53006 : type1403 A B) : ((_53006 = (term1614 A B)) = (term1615 A B _53006)) = ((_53006 = (term1556 A B)) = (term1620 A B _53006)).
Proof. exact (MK_COMB (@lem4504528 A B _53006) (@lem4504534 A B _53006)). Qed.
Lemma lem4504536 {A B : Type'} (_53006 : type1403 A B) : (_53006 = (term1556 A B)) = (term1620 A B _53006).
Proof. exact (EQ_MP (@lem4504535 A B _53006) (@lem4504522 A B _53006)). Qed.
Lemma lem4504538 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504539 {A B : Type'} (s : type1444 A B) (t : type1444 A B) : (s = (term1621 A B t)) = (term1622 A B s t).
Proof. exact (@lem4504538 (type549 A B) B s t). Qed.
Lemma lem4504540 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term1623 A B a)) = (term1624 A B _53006 a).
Proof. exact (@lem4504539 A B (_53006 a) (term431 A B a)). Qed.
Lemma lem4504541 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4504542 {A B : Type'} (a : A) : (term1623 A B a) = (term431 A B a).
Proof. exact (fun_ext (fun b : B => @lem4504541 A B a b)). Qed.
Lemma lem4504543 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1558 A B _53006 a) = (term1558 A B _53006 a).
Proof. exact (eq_refl (term1558 A B _53006 a)). Qed.
Lemma lem4504544 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term1623 A B a)) = ((_53006 a) = (term431 A B a)).
Proof. exact (MK_COMB (@lem4504543 A B _53006 a) (@lem4504542 A B a)). Qed.
Lemma lem4504545 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504546 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1625 A B _53006 a) = (term1626 A B _53006 a).
Proof. exact (MK_COMB (@lem4504545) (@lem4504544 A B _53006 a)). Qed.
Lemma lem4504547 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4504548 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1559 A B _53006 a b) = (term1559 A B _53006 a b).
Proof. exact (eq_refl (term1559 A B _53006 a b)). Qed.
Lemma lem4504549 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term432 A B a b)) = ((_53006 a b) = (term436 A B a b)).
Proof. exact (MK_COMB (@lem4504548 A B _53006 a b) (@lem4504547 A B a b)). Qed.
Lemma lem4504550 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1627 A B _53006 a) = (term1628 A B _53006 a).
Proof. exact (fun_ext (fun b : B => @lem4504549 A B _53006 a b)). Qed.
Lemma lem4504551 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504552 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1624 A B _53006 a) = (term1629 A B _53006 a).
Proof. exact (MK_COMB (@lem4504551 B) (@lem4504550 A B _53006 a)). Qed.
Lemma lem4504553 {A B : Type'} (_53006 : type1403 A B) (a : A) : (((_53006 a) = (term1623 A B a)) = (term1624 A B _53006 a)) = (((_53006 a) = (term431 A B a)) = (term1629 A B _53006 a)).
Proof. exact (MK_COMB (@lem4504546 A B _53006 a) (@lem4504552 A B _53006 a)). Qed.
Lemma lem4504554 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term431 A B a)) = (term1629 A B _53006 a).
Proof. exact (EQ_MP (@lem4504553 A B _53006 a) (@lem4504540 A B _53006 a)). Qed.
Lemma lem4504556 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504557 {A B : Type'} (s : type549 A B) (t : type549 A B) : (s = (term1630 A B t)) = (term1631 A B s t).
Proof. exact (@lem4504556 (A -> B) (A -> B) s t). Qed.
Lemma lem4504558 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term1632 A B a b)) = (term1633 A B _53006 a b).
Proof. exact (@lem4504557 A B (_53006 a b) (term436 A B a b)). Qed.
Lemma lem4504559 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4504560 {A B : Type'} (a : A) (b : B) : (term1632 A B a b) = (term436 A B a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4504559 A B a b g)). Qed.
Lemma lem4504561 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1559 A B _53006 a b) = (term1559 A B _53006 a b).
Proof. exact (eq_refl (term1559 A B _53006 a b)). Qed.
Lemma lem4504562 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term1632 A B a b)) = ((_53006 a b) = (term436 A B a b)).
Proof. exact (MK_COMB (@lem4504561 A B _53006 a b) (@lem4504560 A B a b)). Qed.
Lemma lem4504563 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504564 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1634 A B _53006 a b) = (term1635 A B _53006 a b).
Proof. exact (MK_COMB (@lem4504563) (@lem4504562 A B _53006 a b)). Qed.
Lemma lem4504565 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4504566 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1560 A B _53006 a b g) = (term1560 A B _53006 a b g).
Proof. exact (eq_refl (term1560 A B _53006 a b g)). Qed.
Lemma lem4504567 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term438 A B a b g)) = ((_53006 a b g) = (term442 A B a b g)).
Proof. exact (MK_COMB (@lem4504566 A B _53006 a b g) (@lem4504565 A B a b g)). Qed.
Lemma lem4504568 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1636 A B _53006 a b) = (term1637 A B _53006 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4504567 A B _53006 a b g)). Qed.
Lemma lem4504569 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504570 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1633 A B _53006 a b) = (term1638 A B _53006 a b).
Proof. exact (MK_COMB (@lem4504569 A B) (@lem4504568 A B _53006 a b)). Qed.
Lemma lem4504571 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (((_53006 a b) = (term1632 A B a b)) = (term1633 A B _53006 a b)) = (((_53006 a b) = (term436 A B a b)) = (term1638 A B _53006 a b)).
Proof. exact (MK_COMB (@lem4504564 A B _53006 a b) (@lem4504570 A B _53006 a b)). Qed.
Lemma lem4504572 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term436 A B a b)) = (term1638 A B _53006 a b).
Proof. exact (EQ_MP (@lem4504571 A B _53006 a b) (@lem4504558 A B _53006 a b)). Qed.
Lemma lem4504574 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4504575 {A B : Type'} (s : A -> B) (t : A -> B) : (s = (term1639 A B t)) = (term3 A B s t).
Proof. exact (@lem4504574 B A s t). Qed.
Lemma lem4504576 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term1428 A B a b g)) = (term1640 A B _53006 a b g).
Proof. exact (@lem4504575 A B (_53006 a b g) (term442 A B a b g)). Qed.
Lemma lem4504577 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4504578 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term1428 A B a b g) = (term442 A B a b g).
Proof. exact (fun_ext (fun x : A => @lem4504577 A B a b g x)). Qed.
Lemma lem4504579 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1560 A B _53006 a b g) = (term1560 A B _53006 a b g).
Proof. exact (eq_refl (term1560 A B _53006 a b g)). Qed.
Lemma lem4504580 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term1428 A B a b g)) = ((_53006 a b g) = (term442 A B a b g)).
Proof. exact (MK_COMB (@lem4504579 A B _53006 a b g) (@lem4504578 A B a b g)). Qed.
Lemma lem4504581 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4504582 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1641 A B _53006 a b g) = (term1642 A B _53006 a b g).
Proof. exact (MK_COMB (@lem4504581) (@lem4504580 A B _53006 a b g)). Qed.
Lemma lem4504583 {A B : Type'} (a : A) (b : B) (g : A -> B) (x : A) : (term1425 A B a b g x) = (term1427 A B a b g x).
Proof. exact (eq_refl (term1425 A B a b g x)). Qed.
Lemma lem4504584 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : (term1643 A B _53006 a b g x) = (term1643 A B _53006 a b g x).
Proof. exact (eq_refl (term1643 A B _53006 a b g x)). Qed.
Lemma lem4504585 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : ((_53006 a b g x) = (term1425 A B a b g x)) = ((_53006 a b g x) = (term1427 A B a b g x)).
Proof. exact (MK_COMB (@lem4504584 A B _53006 a b g x) (@lem4504583 A B a b g x)). Qed.
Lemma lem4504586 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1644 A B _53006 a b g) = (term1645 A B _53006 a b g).
Proof. exact (fun_ext (fun x : A => @lem4504585 A B _53006 a b g x)). Qed.
Lemma lem4504587 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504588 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1640 A B _53006 a b g) = (term1646 A B _53006 a b g).
Proof. exact (MK_COMB (@lem4504587 A) (@lem4504586 A B _53006 a b g)). Qed.
Lemma lem4504589 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (((_53006 a b g) = (term1428 A B a b g)) = (term1640 A B _53006 a b g)) = (((_53006 a b g) = (term442 A B a b g)) = (term1646 A B _53006 a b g)).
Proof. exact (MK_COMB (@lem4504582 A B _53006 a b g) (@lem4504588 A B _53006 a b g)). Qed.
Lemma lem4504590 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term442 A B a b g)) = (term1646 A B _53006 a b g).
Proof. exact (EQ_MP (@lem4504589 A B _53006 a b g) (@lem4504576 A B _53006 a b g)). Qed.
Lemma lem4504591 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : ((_53006 a b g x) = (term1427 A B a b g x)) = ((_53006 a b g x) = (term1427 A B a b g x)).
Proof. exact (eq_refl ((_53006 a b g x) = (term1427 A B a b g x))). Qed.
Lemma lem4504592 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1645 A B _53006 a b g) = (term1645 A B _53006 a b g).
Proof. exact (fun_ext (fun x : A => @lem4504591 A B _53006 a b g x)). Qed.
Lemma lem4504593 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504594 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1646 A B _53006 a b g) = (term1646 A B _53006 a b g).
Proof. exact (MK_COMB (@lem4504593 A) (@lem4504592 A B _53006 a b g)). Qed.
Lemma lem4504595 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : ((_53006 a b g) = (term442 A B a b g)) = (term1646 A B _53006 a b g).
Proof. exact (TRANS (@lem4504590 A B _53006 a b g) (@lem4504594 A B _53006 a b g)). Qed.
Lemma lem4504596 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1637 A B _53006 a b) = (term1647 A B _53006 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4504595 A B _53006 a b g)). Qed.
Lemma lem4504597 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504598 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1638 A B _53006 a b) = (term1648 A B _53006 a b).
Proof. exact (MK_COMB (@lem4504597 A B) (@lem4504596 A B _53006 a b)). Qed.
Lemma lem4504599 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : ((_53006 a b) = (term436 A B a b)) = (term1648 A B _53006 a b).
Proof. exact (TRANS (@lem4504572 A B _53006 a b) (@lem4504598 A B _53006 a b)). Qed.
Lemma lem4504600 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1628 A B _53006 a) = (term1649 A B _53006 a).
Proof. exact (fun_ext (fun b : B => @lem4504599 A B _53006 a b)). Qed.
Lemma lem4504601 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504602 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1629 A B _53006 a) = (term1650 A B _53006 a).
Proof. exact (MK_COMB (@lem4504601 B) (@lem4504600 A B _53006 a)). Qed.
Lemma lem4504603 {A B : Type'} (_53006 : type1403 A B) (a : A) : ((_53006 a) = (term431 A B a)) = (term1650 A B _53006 a).
Proof. exact (TRANS (@lem4504554 A B _53006 a) (@lem4504602 A B _53006 a)). Qed.
Lemma lem4504604 {A B : Type'} (_53006 : type1403 A B) : (term1619 A B _53006) = (term1651 A B _53006).
Proof. exact (fun_ext (fun a : A => @lem4504603 A B _53006 a)). Qed.
Lemma lem4504605 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504606 {A B : Type'} (_53006 : type1403 A B) : (term1620 A B _53006) = (term1652 A B _53006).
Proof. exact (MK_COMB (@lem4504605 A) (@lem4504604 A B _53006)). Qed.
Lemma lem4504607 {A B : Type'} (_53006 : type1403 A B) : (_53006 = (term1556 A B)) = (term1652 A B _53006).
Proof. exact (TRANS (@lem4504536 A B _53006) (@lem4504606 A B _53006)). Qed.
Lemma lem4504608 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504609 {A B : Type'} (_53006 : type1403 A B) : (term1598 A B _53006) = (term1653 A B _53006).
Proof. exact (MK_COMB (@lem4504608) (@lem4504607 A B _53006)). Qed.
Lemma lem4504610 {A B : Type'} (_53006 : type1403 A B) : (term1590 A B _53006) = (term1590 A B _53006).
Proof. exact (eq_refl (term1590 A B _53006)). Qed.
Lemma lem4504611 {A B : Type'} (_53006 : type1403 A B) : (term1606 A B _53006) = (term1654 A B _53006).
Proof. exact (MK_COMB (@lem4504609 A B _53006) (@lem4504610 A B _53006)). Qed.
Lemma lem4504612 {A B : Type'} : (term1608 A B) = (term1655 A B).
Proof. exact (fun_ext (fun _53006 : type1403 A B => @lem4504611 A B _53006)). Qed.
Lemma lem4504613 {A B : Type'} : (@all (A -> B -> (A -> B) -> A -> B)) = (@all (A -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@all (A -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4504614 {A B : Type'} : (term1610 A B) = (term1656 A B).
Proof. exact (MK_COMB (@lem4504613 A B) (@lem4504612 A B)). Qed.
Lemma lem4504615 {A B : Type'} : (term1597 A B) = (term1597 A B).
Proof. exact (eq_refl (term1597 A B)). Qed.
Lemma lem4504616 {A B : Type'} : ((term1555 A B) = (term1610 A B)) = ((term1555 A B) = (term1656 A B)).
Proof. exact (MK_COMB (@lem4504615 A B) (@lem4504614 A B)). Qed.
Lemma lem4504619 {A B : Type'} : (term1555 A B) = (term1656 A B).
Proof. exact (EQ_MP (@lem4504616 A B) (@lem4504518 A B)). Qed.
Lemma lem4504620 {A B : Type'} : (term1508 A B) = (term1656 A B).
Proof. exact (TRANS (@lem4504164 A B) (@lem4504619 A B)). Qed.
Lemma lem4504621 {A B : Type'} : (term1507 A B) = (term1656 A B).
Proof. exact (TRANS (@lem4503784 A B) (@lem4504620 A B)). Qed.
Lemma lem4504625 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4504626 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4504627 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term847 A x a) = (or False).
Proof. exact (MK_COMB (@lem4504626) (@lem4504625 A x a h1)). Qed.
Lemma lem4504628 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4504629 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term78 A a x s) = (term1657 A x s).
Proof. exact (MK_COMB (@lem4504627 A x a h1) (@lem4504628 A x s)). Qed.
Lemma lem4504631 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem1833 t)). Qed.
Lemma lem4504632 {A : Type'} (x : A) (s : A -> Prop) : (term1657 A x s) = (@IN A x s).
Proof. exact (@lem4504631 (@IN A x s)). Qed.
Lemma lem4504633 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term78 A a x s) = (@IN A x s).
Proof. exact (TRANS (@lem4504629 A s x a h1) (@lem4504632 A x s)). Qed.
Lemma lem4504634 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4504635 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term590 A a x s) = (term178 A x s).
Proof. exact (MK_COMB (@lem4504634) (@lem4504633 A s x a h1)). Qed.
Lemma lem4504636 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504637 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term591 A a x s) = (term179 A x s).
Proof. exact (MK_COMB (@lem4504636) (@lem4504635 A s x a h1)). Qed.
Lemma lem4504639 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4504640 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504641 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4504640 B) (@lem4504639 A x a h1)). Qed.
Lemma lem4504642 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504643 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1658 A B x a b) = (@COND B False b).
Proof. exact (MK_COMB (@lem4504641 A B x a h1) (@lem4504642 B b)). Qed.
Lemma lem4504644 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504645 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (term1659 A B b g x).
Proof. exact (MK_COMB (@lem4504643 A B b x a h1) (@lem4504644 A B g x)). Qed.
Lemma lem4504647 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4504648 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4504647 B t1 t2). Qed.
Lemma lem4504649 {A B : Type'} (b : B) (g : A -> B) (x : A) : (term1659 A B b g x) = (g x).
Proof. exact (@lem4504648 B b (g x)). Qed.
Lemma lem4504650 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (g x).
Proof. exact (TRANS (@lem4504645 A B b g x a h1) (@lem4504649 A B b g x)). Qed.
Lemma lem4504651 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4504652 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1437 A B a b g x) = (term262 A B g x).
Proof. exact (MK_COMB (@lem4504651 B) (@lem4504650 A B b g x a h1)). Qed.
Lemma lem4504653 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4504654 {A B : Type'} (b : B) (g : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : ((term1427 A B a b g x) = d) = ((g x) = d).
Proof. exact (MK_COMB (@lem4504652 A B b g x a h1) (@lem4504653 B d)). Qed.
Lemma lem4504657 {A B : Type'} (b : B) (s : A -> Prop) (g : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1438 A B s a b g x d) = (term180 A B s g x d).
Proof. exact (MK_COMB (@lem4504637 A s x a h1) (@lem4504654 A B b g d x a h1)). Qed.
Lemma lem4504660 {A B : Type'} (a : A) (b : B) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : term1660 A B a b s g x d.
Proof. exact (fun h0 : (x = a) = False => @lem4504657 A B b s g d x a h0). Qed.
Lemma lem4504662 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4504663 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4504664 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term847 A x a) = (or True).
Proof. exact (MK_COMB (@lem4504663) (@lem4504662 A x a h1)). Qed.
Lemma lem4504665 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4504666 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term78 A a x s) = (term1661 A x s).
Proof. exact (MK_COMB (@lem4504664 A x a h1) (@lem4504665 A x s)). Qed.
Lemma lem4504668 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem1831 t)). Qed.
Lemma lem4504669 {A : Type'} (x : A) (s : A -> Prop) : (term1661 A x s) = True.
Proof. exact (@lem4504668 (@IN A x s)). Qed.
Lemma lem4504670 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term78 A a x s) = True.
Proof. exact (TRANS (@lem4504666 A s x a h1) (@lem4504669 A x s)). Qed.
Lemma lem4504671 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4504672 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term590 A a x s) = (~ True).
Proof. exact (MK_COMB (@lem4504671) (@lem4504670 A s x a h1)). Qed.
Lemma lem4504674 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem4504675 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term590 A a x s) = False.
Proof. exact (TRANS (@lem4504672 A s x a h1) (@lem4504674)). Qed.
Lemma lem4504676 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504677 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term591 A a x s) = (imp False).
Proof. exact (MK_COMB (@lem4504676) (@lem4504675 A s x a h1)). Qed.
Lemma lem4504679 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4504680 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504681 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4504680 B) (@lem4504679 A x a h1)). Qed.
Lemma lem4504682 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504683 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1658 A B x a b) = (@COND B True b).
Proof. exact (MK_COMB (@lem4504681 A B x a h1) (@lem4504682 B b)). Qed.
Lemma lem4504684 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504685 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = (term1662 A B b g x).
Proof. exact (MK_COMB (@lem4504683 A B b x a h1) (@lem4504684 A B g x)). Qed.
Lemma lem4504687 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4504688 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4504687 B t2 t1). Qed.
Lemma lem4504689 {A B : Type'} (g : A -> B) (x : A) (b : B) : (term1662 A B b g x) = b.
Proof. exact (@lem4504688 B (g x) b). Qed.
Lemma lem4504690 {A B : Type'} (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = b.
Proof. exact (TRANS (@lem4504685 A B b g x a h1) (@lem4504689 A B g x b)). Qed.
Lemma lem4504691 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4504692 {A B : Type'} (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1437 A B a b g x) = (@eq B b).
Proof. exact (MK_COMB (@lem4504691 B) (@lem4504690 A B g b x a h1)). Qed.
Lemma lem4504693 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4504694 {A B : Type'} (g : A -> B) (b : B) (d : B) (x : A) (a : A) (h1 : (x = a) = True) : ((term1427 A B a b g x) = d) = (b = d).
Proof. exact (MK_COMB (@lem4504692 A B g b x a h1) (@lem4504693 B d)). Qed.
Lemma lem4504697 {A B : Type'} (s : A -> Prop) (g : A -> B) (b : B) (d : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1438 A B s a b g x d) = (term1663 B b d).
Proof. exact (MK_COMB (@lem4504677 A s x a h1) (@lem4504694 A B g b d x a h1)). Qed.
Lemma lem4504699 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4504700 {B : Type'} (b : B) (d : B) : (term1663 B b d) = True.
Proof. exact (@lem4504699 (b = d)). Qed.
Lemma lem4504701 {A B : Type'} (s : A -> Prop) (b : B) (g : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1438 A B s a b g x d) = True.
Proof. exact (TRANS (@lem4504697 A B s g b d x a h1) (@lem4504700 B b d)). Qed.
Lemma lem4504702 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (d : B) : term1664 A B s a b g x d.
Proof. exact (fun h0 : (x = a) = True => @lem4504701 A B s b g d x a h0). Qed.
Lemma lem4504703 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (x : A) (d : B) : term1665 A B s a b g x d.
Proof. exact (conj (@lem4504660 A B a b s g x d) (@lem4504702 A B s a b g x d)). Qed.
Lemma lem4504705 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4504706 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : term1666 A B b a s g x d.
Proof. exact (@lem4504705 (term1438 A B s a b g x d) True (x = a) (term180 A B s g x d)). Qed.
Lemma lem4504707 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1438 A B s a b g x d) = (term1667 A B a s g x d).
Proof. exact (@lem4504706 A B b a s g x d (@lem4504703 A B s a b g x d)). Qed.
Lemma lem4504710 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1668 A B a s g x d) = (term1668 A B a s g x d).
Proof. exact (eq_refl (term1668 A B a s g x d)). Qed.
Lemma lem4504712 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4504713 {A : Type'} (x : A) (a : A) : (term1669 A x a) = True.
Proof. exact (@lem4504712 (term1200 A x a)). Qed.
Lemma lem4504714 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4504715 {A : Type'} (x : A) (a : A) : (term1670 A x a) = (and True).
Proof. exact (MK_COMB (@lem4504714) (@lem4504713 A x a)). Qed.
Lemma lem4504716 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1667 A B a s g x d) = (term1671 A B a s g x d).
Proof. exact (MK_COMB (@lem4504715 A x a) (@lem4504710 A B a s g x d)). Qed.
Lemma lem4504718 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4504719 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1671 A B a s g x d) = (term1668 A B a s g x d).
Proof. exact (@lem4504718 (term1668 A B a s g x d)). Qed.
Lemma lem4504720 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1667 A B a s g x d) = (term1668 A B a s g x d).
Proof. exact (TRANS (@lem4504716 A B a s g x d) (@lem4504719 A B a s g x d)). Qed.
Lemma lem4504735 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1438 A B s a b g x d) = (term1668 A B a s g x d).
Proof. exact (TRANS (@lem4504707 A B b a s g x d) (@lem4504720 A B a s g x d)). Qed.
Lemma lem4504736 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1439 A B s a b g d) = (term1672 A B a s g d).
Proof. exact (fun_ext (fun x : A => @lem4504735 A B b a s g x d)). Qed.
Lemma lem4504737 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504738 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1440 A B s a b g d) = (term1673 A B a s g d).
Proof. exact (MK_COMB (@lem4504737 A) (@lem4504736 A B b a s g d)). Qed.
Lemma lem4504742 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4504743 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4504744 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term847 A x a) = (or False).
Proof. exact (MK_COMB (@lem4504743) (@lem4504742 A x a h1)). Qed.
Lemma lem4504745 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4504746 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term78 A a x s) = (term1657 A x s).
Proof. exact (MK_COMB (@lem4504744 A x a h1) (@lem4504745 A x s)). Qed.
Lemma lem4504748 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem1833 t)). Qed.
Lemma lem4504749 {A : Type'} (x : A) (s : A -> Prop) : (term1657 A x s) = (@IN A x s).
Proof. exact (@lem4504748 (@IN A x s)). Qed.
Lemma lem4504750 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term78 A a x s) = (@IN A x s).
Proof. exact (TRANS (@lem4504746 A s x a h1) (@lem4504749 A x s)). Qed.
Lemma lem4504751 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504752 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term585 A a x s) = (term168 A x s).
Proof. exact (MK_COMB (@lem4504751) (@lem4504750 A s x a h1)). Qed.
Lemma lem4504754 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4504755 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504756 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4504755 B) (@lem4504754 A x a h1)). Qed.
Lemma lem4504757 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504758 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1658 A B x a b) = (@COND B False b).
Proof. exact (MK_COMB (@lem4504756 A B x a h1) (@lem4504757 B b)). Qed.
Lemma lem4504759 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504760 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (term1659 A B b g x).
Proof. exact (MK_COMB (@lem4504758 A B b x a h1) (@lem4504759 A B g x)). Qed.
Lemma lem4504762 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4504763 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4504762 B t1 t2). Qed.
Lemma lem4504764 {A B : Type'} (b : B) (g : A -> B) (x : A) : (term1659 A B b g x) = (g x).
Proof. exact (@lem4504763 B b (g x)). Qed.
Lemma lem4504765 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (g x).
Proof. exact (TRANS (@lem4504760 A B b g x a h1) (@lem4504764 A B b g x)). Qed.
Lemma lem4504766 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4504767 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1431 A B a b g x) = (term828 A B g x).
Proof. exact (MK_COMB (@lem4504766 B) (@lem4504765 A B b g x a h1)). Qed.
Lemma lem4504768 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4504769 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term1432 A B a b g x t) = (term169 A B g x t).
Proof. exact (MK_COMB (@lem4504767 A B b g x a h1) (@lem4504768 B t)). Qed.
Lemma lem4504770 {A B : Type'} (b : B) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term1433 A B s a b g x t) = (term170 A B s g x t).
Proof. exact (MK_COMB (@lem4504752 A s x a h1) (@lem4504769 A B b g t x a h1)). Qed.
Lemma lem4504773 {A B : Type'} (a : A) (b : B) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : term1674 A B a b s g x t.
Proof. exact (fun h0 : (x = a) = False => @lem4504770 A B b s g t x a h0). Qed.
Lemma lem4504775 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4504776 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4504777 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term847 A x a) = (or True).
Proof. exact (MK_COMB (@lem4504776) (@lem4504775 A x a h1)). Qed.
Lemma lem4504778 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4504779 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term78 A a x s) = (term1661 A x s).
Proof. exact (MK_COMB (@lem4504777 A x a h1) (@lem4504778 A x s)). Qed.
Lemma lem4504781 (t : Prop) : (True \/ t) = True.
Proof. exact (proj1 (@lem1831 t)). Qed.
Lemma lem4504782 {A : Type'} (x : A) (s : A -> Prop) : (term1661 A x s) = True.
Proof. exact (@lem4504781 (@IN A x s)). Qed.
Lemma lem4504783 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term78 A a x s) = True.
Proof. exact (TRANS (@lem4504779 A s x a h1) (@lem4504782 A x s)). Qed.
Lemma lem4504784 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504785 {A : Type'} (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term585 A a x s) = (imp True).
Proof. exact (MK_COMB (@lem4504784) (@lem4504783 A s x a h1)). Qed.
Lemma lem4504787 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4504788 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504789 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4504788 B) (@lem4504787 A x a h1)). Qed.
Lemma lem4504790 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504791 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1658 A B x a b) = (@COND B True b).
Proof. exact (MK_COMB (@lem4504789 A B x a h1) (@lem4504790 B b)). Qed.
Lemma lem4504792 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504793 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = (term1662 A B b g x).
Proof. exact (MK_COMB (@lem4504791 A B b x a h1) (@lem4504792 A B g x)). Qed.
Lemma lem4504795 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4504796 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4504795 B t2 t1). Qed.
Lemma lem4504797 {A B : Type'} (g : A -> B) (x : A) (b : B) : (term1662 A B b g x) = b.
Proof. exact (@lem4504796 B (g x) b). Qed.
Lemma lem4504798 {A B : Type'} (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = b.
Proof. exact (TRANS (@lem4504793 A B b g x a h1) (@lem4504797 A B g x b)). Qed.
Lemma lem4504799 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4504800 {A B : Type'} (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1431 A B a b g x) = (@IN B b).
Proof. exact (MK_COMB (@lem4504799 B) (@lem4504798 A B g b x a h1)). Qed.
Lemma lem4504801 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4504802 {A B : Type'} (g : A -> B) (b : B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term1432 A B a b g x t) = (@IN B b t).
Proof. exact (MK_COMB (@lem4504800 A B g b x a h1) (@lem4504801 B t)). Qed.
Lemma lem4504803 {A B : Type'} (s : A -> Prop) (g : A -> B) (b : B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term1433 A B s a b g x t) = (term1675 B b t).
Proof. exact (MK_COMB (@lem4504785 A s x a h1) (@lem4504802 A B g b t x a h1)). Qed.
Lemma lem4504805 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4504806 {B : Type'} (b : B) (t : B -> Prop) : (term1675 B b t) = (@IN B b t).
Proof. exact (@lem4504805 (@IN B b t)). Qed.
Lemma lem4504807 {A B : Type'} (s : A -> Prop) (g : A -> B) (b : B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = True) : (term1433 A B s a b g x t) = (@IN B b t).
Proof. exact (TRANS (@lem4504803 A B s g b t x a h1) (@lem4504806 B b t)). Qed.
Lemma lem4504808 {A B : Type'} (s : A -> Prop) (a : A) (g : A -> B) (x : A) (b : B) (t : B -> Prop) : term1676 A B s a g x b t.
Proof. exact (fun h0 : (x = a) = True => @lem4504807 A B s g b t x a h0). Qed.
Lemma lem4504809 {A B : Type'} (s : A -> Prop) (a : A) (g : A -> B) (x : A) (b : B) (t : B -> Prop) : term1677 A B s a g x b t.
Proof. exact (conj (@lem4504773 A B a b s g x t) (@lem4504808 A B s a g x b t)). Qed.
Lemma lem4504811 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4504812 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : term1678 A B b a s g x t.
Proof. exact (@lem4504811 (term1433 A B s a b g x t) (@IN B b t) (x = a) (term170 A B s g x t)). Qed.
Lemma lem4504849 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1433 A B s a b g x t) = (term1679 A B b a s g x t).
Proof. exact (@lem4504812 A B b a s g x t (@lem4504809 A B s a g x b t)). Qed.
Lemma lem4504850 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1434 A B s a b g t) = (term1680 A B b a s g t).
Proof. exact (fun_ext (fun x : A => @lem4504849 A B b a s g x t)). Qed.
Lemma lem4504851 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504852 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1435 A B s a b g t) = (term1681 A B b a s g t).
Proof. exact (MK_COMB (@lem4504851 A) (@lem4504850 A B b a s g t)). Qed.
Lemma lem4504853 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4504854 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1436 A B s a b g t) = (term1682 A B b a s g t).
Proof. exact (MK_COMB (@lem4504853) (@lem4504852 A B b a s g t)). Qed.
Lemma lem4504855 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1441 A B t s a b g d) = (term1683 A B b t a s g d).
Proof. exact (MK_COMB (@lem4504854 A B b a s g t) (@lem4504738 A B b a s g d)). Qed.
Lemma lem4504862 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term180 A B s g x d) = (term180 A B s g x d).
Proof. exact (eq_refl (term180 A B s g x d)). Qed.
Lemma lem4504863 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term182 A B s g d) = (term182 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4504862 A B s g x d)). Qed.
Lemma lem4504864 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504865 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term184 A B s g d) = (term184 A B s g d).
Proof. exact (MK_COMB (@lem4504864 A) (@lem4504863 A B s g d)). Qed.
Lemma lem4504866 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504867 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1449 A B s g d) = (term1449 A B s g d).
Proof. exact (MK_COMB (@lem4504866) (@lem4504865 A B s g d)). Qed.
Lemma lem4504868 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1451 A B t s a b g d) = (term1684 A B b t a s g d).
Proof. exact (MK_COMB (@lem4504867 A B s g d) (@lem4504855 A B b t a s g d)). Qed.
Lemma lem4504873 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term170 A B s g x t) = (term170 A B s g x t).
Proof. exact (eq_refl (term170 A B s g x t)). Qed.
Lemma lem4504874 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term172 A B s g t) = (term172 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4504873 A B s g x t)). Qed.
Lemma lem4504875 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504876 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term174 A B s g t) = (term174 A B s g t).
Proof. exact (MK_COMB (@lem4504875 A) (@lem4504874 A B s g t)). Qed.
Lemma lem4504877 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504878 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1452 A B s g t) = (term1452 A B s g t).
Proof. exact (MK_COMB (@lem4504877) (@lem4504876 A B s g t)). Qed.
Lemma lem4504879 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1454 A B t s a b g d) = (term1685 A B b t a s g d).
Proof. exact (MK_COMB (@lem4504878 A B s g t) (@lem4504868 A B b t a s g d)). Qed.
Lemma lem4504882 {B : Type'} (b : B) (t : B -> Prop) : (term168 B b t) = (term168 B b t).
Proof. exact (eq_refl (term168 B b t)). Qed.
Lemma lem4504883 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1456 A B t s a b g d) = (term1686 A B b t a s g d).
Proof. exact (MK_COMB (@lem4504882 B b t) (@lem4504879 A B b t a s g d)). Qed.
Lemma lem4504886 {A B : Type'} (f : A -> B) (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1561 A B f _53006 a b g) = (term1561 A B f _53006 a b g).
Proof. exact (eq_refl (term1561 A B f _53006 a b g)). Qed.
Lemma lem4504887 {A B : Type'} (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1562 A B f _53006 t s a b g d) = (term1687 A B f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504886 A B f _53006 a b g) (@lem4504883 A B b t a s g d)). Qed.
Lemma lem4504890 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _53005 t s d n m) = (term716 A B _53005 t s d n m).
Proof. exact (eq_refl (term716 A B _53005 t s d n m)). Qed.
Lemma lem4504891 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1563 A B _53005 n m f _53006 t s a b g d) = (term1688 A B _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504890 A B _53005 t s d n m) (@lem4504887 A B f _53006 b t a s g d)). Qed.
Lemma lem4504894 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4504895 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1564 A B _53005 n m f _53006 t s a b g d) = (term1689 A B _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504894 B t n) (@lem4504891 A B _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504898 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4504899 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1565 A B s0 _53005 n m f _53006 t s a b g d) = (term1690 A B s0 _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504898 A s0 a s) (@lem4504895 A B _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504904 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4504905 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1566 A B s0 _53005 n m f _53006 t s a b g d) = (term1691 A B s0 _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504904 A a s) (@lem4504899 A B s0 _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504908 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4504909 {A B : Type'} (s0 : A -> Prop) (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1567 A B s0 _53005 n m f _53006 t s a b g d) = (term1692 A B s0 _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504908 A s m) (@lem4504905 A B s0 _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504910 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1568 A B _53005 n m f _53006 t s a b g d) = (term1693 A B _53005 n m f _53006 b t a s g d).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4504909 A B s0 _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504911 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504912 {A B : Type'} (_53005 : type839 A B) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1569 A B _53005 n m f _53006 t s a b g d) = (term1694 A B _53005 n m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504911 A) (@lem4504910 A B _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504913 {A B : Type'} (_53005 : type839 A B) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1570 A B _53005 m f _53006 t s a b g d) = (term1695 A B _53005 m f _53006 b t a s g d).
Proof. exact (fun_ext (fun n : nat => @lem4504912 A B _53005 n m f _53006 b t a s g d)). Qed.
Lemma lem4504914 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504915 {A B : Type'} (_53005 : type839 A B) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1571 A B _53005 m f _53006 t s a b g d) = (term1696 A B _53005 m f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504914) (@lem4504913 A B _53005 m f _53006 b t a s g d)). Qed.
Lemma lem4504916 {A B : Type'} (_53005 : type839 A B) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1572 A B _53005 f _53006 t s a b g d) = (term1697 A B _53005 f _53006 b t a s g d).
Proof. exact (fun_ext (fun m : nat => @lem4504915 A B _53005 m f _53006 b t a s g d)). Qed.
Lemma lem4504917 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4504918 {A B : Type'} (_53005 : type839 A B) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1573 A B _53005 f _53006 t s a b g d) = (term1698 A B _53005 f _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504917) (@lem4504916 A B _53005 f _53006 b t a s g d)). Qed.
Lemma lem4504919 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1574 A B _53005 _53006 t s a b g d) = (term1699 A B _53005 _53006 b t a s g d).
Proof. exact (fun_ext (fun f : A -> B => @lem4504918 A B _53005 f _53006 b t a s g d)). Qed.
Lemma lem4504920 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504921 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1575 A B _53005 _53006 t s a b g d) = (term1700 A B _53005 _53006 b t a s g d).
Proof. exact (MK_COMB (@lem4504920 A B) (@lem4504919 A B _53005 _53006 b t a s g d)). Qed.
Lemma lem4504922 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1576 A B _53005 _53006 s a b g d) = (term1701 A B _53005 _53006 b a s g d).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504921 A B _53005 _53006 b t a s g d)). Qed.
Lemma lem4504923 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504924 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1577 A B _53005 _53006 s a b g d) = (term1702 A B _53005 _53006 b a s g d).
Proof. exact (MK_COMB (@lem4504923 B) (@lem4504922 A B _53005 _53006 b a s g d)). Qed.
Lemma lem4504925 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (a : A) (g : A -> B) (d : B) : (term1578 A B _53005 _53006 a b g d) = (term1703 A B _53005 _53006 b a g d).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504924 A B _53005 _53006 b a s g d)). Qed.
Lemma lem4504926 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504927 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (a : A) (g : A -> B) (d : B) : (term1579 A B _53005 _53006 a b g d) = (term1704 A B _53005 _53006 b a g d).
Proof. exact (MK_COMB (@lem4504926 A) (@lem4504925 A B _53005 _53006 b a g d)). Qed.
Lemma lem4504928 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (g : A -> B) (d : B) : (term1580 A B _53005 _53006 b g d) = (term1705 A B _53005 _53006 b g d).
Proof. exact (fun_ext (fun a : A => @lem4504927 A B _53005 _53006 b a g d)). Qed.
Lemma lem4504929 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4504930 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (b : B) (g : A -> B) (d : B) : (term1581 A B _53005 _53006 b g d) = (term1706 A B _53005 _53006 b g d).
Proof. exact (MK_COMB (@lem4504929 A) (@lem4504928 A B _53005 _53006 b g d)). Qed.
Lemma lem4504931 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (g : A -> B) (d : B) : (term1582 A B _53005 _53006 g d) = (term1707 A B _53005 _53006 g d).
Proof. exact (fun_ext (fun b : B => @lem4504930 A B _53005 _53006 b g d)). Qed.
Lemma lem4504932 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504933 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (g : A -> B) (d : B) : (term1583 A B _53005 _53006 g d) = (term1708 A B _53005 _53006 g d).
Proof. exact (MK_COMB (@lem4504932 B) (@lem4504931 A B _53005 _53006 g d)). Qed.
Lemma lem4504934 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (d : B) : (term1584 A B _53005 _53006 d) = (term1709 A B _53005 _53006 d).
Proof. exact (fun_ext (fun g : A -> B => @lem4504933 A B _53005 _53006 g d)). Qed.
Lemma lem4504935 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504936 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) (d : B) : (term1585 A B _53005 _53006 d) = (term1710 A B _53005 _53006 d).
Proof. exact (MK_COMB (@lem4504935 A B) (@lem4504934 A B _53005 _53006 d)). Qed.
Lemma lem4504937 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) : (term1586 A B _53005 _53006) = (term1711 A B _53005 _53006).
Proof. exact (fun_ext (fun d : B => @lem4504936 A B _53005 _53006 d)). Qed.
Lemma lem4504938 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504939 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) : (term1587 A B _53005 _53006) = (term1712 A B _53005 _53006).
Proof. exact (MK_COMB (@lem4504938 B) (@lem4504937 A B _53005 _53006)). Qed.
Lemma lem4504940 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4504941 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4504940 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4504942 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4504943 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4504942 A B) (@lem4504941 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504946 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _53005 t s d GEN_PVAR_148) = (term796 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4504947 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4504946 A B _53005 t s d GEN_PVAR_148) (@lem4504943 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4504948 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53005 t s d) = (term798 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4504947 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4504949 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4504950 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53005 t s d) = (term799 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4504949 A B) (@lem4504948 A B _53005 t s d)). Qed.
Lemma lem4504951 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _53005 t s) = (term800 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4504950 A B _53005 t s d)). Qed.
Lemma lem4504952 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4504953 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _53005 t s) = (term801 A B _53005 t s).
Proof. exact (MK_COMB (@lem4504952 B) (@lem4504951 A B _53005 t s)). Qed.
Lemma lem4504954 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term802 A B _53005 t) = (term802 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4504953 A B _53005 t s)). Qed.
Lemma lem4504955 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4504956 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term803 A B _53005 t) = (term803 A B _53005 t).
Proof. exact (MK_COMB (@lem4504955 A) (@lem4504954 A B _53005 t)). Qed.
Lemma lem4504957 {A B : Type'} (_53005 : type839 A B) : (term804 A B _53005) = (term804 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4504956 A B _53005 t)). Qed.
Lemma lem4504958 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4504959 {A B : Type'} (_53005 : type839 A B) : (term805 A B _53005) = (term805 A B _53005).
Proof. exact (MK_COMB (@lem4504958 B) (@lem4504957 A B _53005)). Qed.
Lemma lem4504960 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4504961 {A B : Type'} (_53005 : type839 A B) : (term806 A B _53005) = (term806 A B _53005).
Proof. exact (MK_COMB (@lem4504960) (@lem4504959 A B _53005)). Qed.
Lemma lem4504962 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) : (term1588 A B _53005 _53006) = (term1713 A B _53005 _53006).
Proof. exact (MK_COMB (@lem4504961 A B _53005) (@lem4504939 A B _53005 _53006)). Qed.
Lemma lem4504963 {A B : Type'} (_53006 : type1403 A B) : (term1589 A B _53006) = (term1714 A B _53006).
Proof. exact (fun_ext (fun _53005 : type839 A B => @lem4504962 A B _53005 _53006)). Qed.
Lemma lem4504964 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4504965 {A B : Type'} (_53006 : type1403 A B) : (term1590 A B _53006) = (term1715 A B _53006).
Proof. exact (MK_COMB (@lem4504964 A B) (@lem4504963 A B _53006)). Qed.
Lemma lem4504969 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4504970 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504971 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4504970 B) (@lem4504969 A x a h1)). Qed.
Lemma lem4504972 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504973 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1658 A B x a b) = (@COND B False b).
Proof. exact (MK_COMB (@lem4504971 A B x a h1) (@lem4504972 B b)). Qed.
Lemma lem4504974 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504975 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (term1659 A B b g x).
Proof. exact (MK_COMB (@lem4504973 A B b x a h1) (@lem4504974 A B g x)). Qed.
Lemma lem4504977 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4504978 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4504977 B t1 t2). Qed.
Lemma lem4504979 {A B : Type'} (b : B) (g : A -> B) (x : A) : (term1659 A B b g x) = (g x).
Proof. exact (@lem4504978 B b (g x)). Qed.
Lemma lem4504980 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a b g x) = (g x).
Proof. exact (TRANS (@lem4504975 A B b g x a h1) (@lem4504979 A B b g x)). Qed.
Lemma lem4504981 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : (term1643 A B _53006 a b g x) = (term1643 A B _53006 a b g x).
Proof. exact (eq_refl (term1643 A B _53006 a b g x)). Qed.
Lemma lem4504982 {A B : Type'} (_53006 : type1403 A B) (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : ((_53006 a b g x) = (term1427 A B a b g x)) = ((_53006 a b g x) = (g x)).
Proof. exact (MK_COMB (@lem4504981 A B _53006 a b g x) (@lem4504980 A B b g x a h1)). Qed.
Lemma lem4504985 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : term1716 A B _53006 a b g x.
Proof. exact (fun h0 : (x = a) = False => @lem4504982 A B _53006 b g x a h0). Qed.
Lemma lem4504987 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4504988 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4504989 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4504988 B) (@lem4504987 A x a h1)). Qed.
Lemma lem4504990 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4504991 {A B : Type'} (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1658 A B x a b) = (@COND B True b).
Proof. exact (MK_COMB (@lem4504989 A B x a h1) (@lem4504990 B b)). Qed.
Lemma lem4504992 {A B : Type'} (g : A -> B) (x : A) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem4504993 {A B : Type'} (b : B) (g : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = (term1662 A B b g x).
Proof. exact (MK_COMB (@lem4504991 A B b x a h1) (@lem4504992 A B g x)). Qed.
Lemma lem4504995 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4504996 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4504995 B t2 t1). Qed.
Lemma lem4504997 {A B : Type'} (g : A -> B) (x : A) (b : B) : (term1662 A B b g x) = b.
Proof. exact (@lem4504996 B (g x) b). Qed.
Lemma lem4504998 {A B : Type'} (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a b g x) = b.
Proof. exact (TRANS (@lem4504993 A B b g x a h1) (@lem4504997 A B g x b)). Qed.
Lemma lem4504999 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : (term1643 A B _53006 a b g x) = (term1643 A B _53006 a b g x).
Proof. exact (eq_refl (term1643 A B _53006 a b g x)). Qed.
Lemma lem4505000 {A B : Type'} (_53006 : type1403 A B) (g : A -> B) (b : B) (x : A) (a : A) (h1 : (x = a) = True) : ((_53006 a b g x) = (term1427 A B a b g x)) = ((_53006 a b g x) = b).
Proof. exact (MK_COMB (@lem4504999 A B _53006 a b g x) (@lem4504998 A B g b x a h1)). Qed.
Lemma lem4505003 {A B : Type'} (_53006 : type1403 A B) (a : A) (g : A -> B) (x : A) (b : B) : term1717 A B _53006 a g x b.
Proof. exact (fun h0 : (x = a) = True => @lem4505000 A B _53006 g b x a h0). Qed.
Lemma lem4505004 {A B : Type'} (_53006 : type1403 A B) (a : A) (g : A -> B) (x : A) (b : B) : term1718 A B _53006 a g x b.
Proof. exact (conj (@lem4504985 A B _53006 a b g x) (@lem4505003 A B _53006 a g x b)). Qed.
Lemma lem4505006 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4505007 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : term1719 A B _53006 a b g x.
Proof. exact (@lem4505006 ((_53006 a b g x) = (term1427 A B a b g x)) ((_53006 a b g x) = b) (x = a) ((_53006 a b g x) = (g x))). Qed.
Lemma lem4505040 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) (x : A) : ((_53006 a b g x) = (term1427 A B a b g x)) = (term1720 A B _53006 a b g x).
Proof. exact (@lem4505007 A B _53006 a b g x (@lem4505004 A B _53006 a g x b)). Qed.
Lemma lem4505041 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1645 A B _53006 a b g) = (term1721 A B _53006 a b g).
Proof. exact (fun_ext (fun x : A => @lem4505040 A B _53006 a b g x)). Qed.
Lemma lem4505042 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4505043 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) (g : A -> B) : (term1646 A B _53006 a b g) = (term1722 A B _53006 a b g).
Proof. exact (MK_COMB (@lem4505042 A) (@lem4505041 A B _53006 a b g)). Qed.
Lemma lem4505044 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1647 A B _53006 a b) = (term1723 A B _53006 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4505043 A B _53006 a b g)). Qed.
Lemma lem4505045 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505046 {A B : Type'} (_53006 : type1403 A B) (a : A) (b : B) : (term1648 A B _53006 a b) = (term1724 A B _53006 a b).
Proof. exact (MK_COMB (@lem4505045 A B) (@lem4505044 A B _53006 a b)). Qed.
Lemma lem4505047 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1649 A B _53006 a) = (term1725 A B _53006 a).
Proof. exact (fun_ext (fun b : B => @lem4505046 A B _53006 a b)). Qed.
Lemma lem4505048 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4505049 {A B : Type'} (_53006 : type1403 A B) (a : A) : (term1650 A B _53006 a) = (term1726 A B _53006 a).
Proof. exact (MK_COMB (@lem4505048 B) (@lem4505047 A B _53006 a)). Qed.
Lemma lem4505050 {A B : Type'} (_53006 : type1403 A B) : (term1651 A B _53006) = (term1727 A B _53006).
Proof. exact (fun_ext (fun a : A => @lem4505049 A B _53006 a)). Qed.
Lemma lem4505051 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4505052 {A B : Type'} (_53006 : type1403 A B) : (term1652 A B _53006) = (term1728 A B _53006).
Proof. exact (MK_COMB (@lem4505051 A) (@lem4505050 A B _53006)). Qed.
Lemma lem4505053 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4505054 {A B : Type'} (_53006 : type1403 A B) : (term1653 A B _53006) = (term1729 A B _53006).
Proof. exact (MK_COMB (@lem4505053) (@lem4505052 A B _53006)). Qed.
Lemma lem4505055 {A B : Type'} (_53006 : type1403 A B) : (term1654 A B _53006) = (term1730 A B _53006).
Proof. exact (MK_COMB (@lem4505054 A B _53006) (@lem4504965 A B _53006)). Qed.
Lemma lem4505056 {A B : Type'} : (term1655 A B) = (term1731 A B).
Proof. exact (fun_ext (fun _53006 : type1403 A B => @lem4505055 A B _53006)). Qed.
Lemma lem4505057 {A B : Type'} : (@all (A -> B -> (A -> B) -> A -> B)) = (@all (A -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@all (A -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4505058 {A B : Type'} : (term1656 A B) = (term1732 A B).
Proof. exact (MK_COMB (@lem4505057 A B) (@lem4505056 A B)). Qed.
Lemma lem4505275 {A B : Type'} : (term1507 A B) = (term1732 A B).
Proof. exact (TRANS (@lem4504621 A B) (@lem4505058 A B)). Qed.
Lemma lem4505276 {A B : Type'} : (term1732 A B) = (term1507 A B).
Proof. exact (SYM (@lem4505275 A B)). Qed.
Lemma lem4505278 {A B : Type'} (_53005 : type839 A B) (h1 : term805 A B _53005) : term805 A B _53005.
Proof. exact (h1). Qed.
Lemma lem4505286 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term174 A B s g t.
Proof. exact (h1). Qed.
Lemma lem4505287 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term184 A B s g d.
Proof. exact (h1). Qed.
Lemma lem4505289 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4505290 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1683 A B b t a s g d) = (term1733 A B b t a s g d).
Proof. exact (@lem4505289 (term1683 A B b t a s g d)). Qed.
Lemma lem4505291 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1733 A B b t a s g d) = (term1683 A B b t a s g d).
Proof. exact (SYM (@lem4505290 A B b t a s g d)). Qed.
Lemma lem4505292 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term1734 A B b t a s g d) : term1734 A B b t a s g d.
Proof. exact (h1). Qed.
Lemma lem4505889 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4505890 {A B : Type'} (P : type572 A B) : (term924 A B P) = (term925 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem4505891 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term927 A B GEN_PVAR_148 t s d).
Proof. exact (@lem4505890 A B (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505892 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4505893 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4505895 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term929 A B GEN_PVAR_148 t s d f) = (term930 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4505893) (@lem4505892 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4505896 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term931 A B GEN_PVAR_148 t s d) = (term932 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4505895 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4505897 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505898 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term927 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505897 A B) (@lem4505896 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505899 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4505891 A B GEN_PVAR_148 t s d) (@lem4505898 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505900 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4505889 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4505901 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4505902 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505901 A B) (@lem4505900 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505904 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53005 t s d GEN_PVAR_148) = (term934 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505905 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _53005 GEN_PVAR_148 t s d) = (term935 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505904 A B _53005 t s d GEN_PVAR_148) (@lem4505902 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505907 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term936 A B _53005 t s d GEN_PVAR_148) = (term936 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term936 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505908 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term937 A B _53005 GEN_PVAR_148 t s d) = (term938 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505907 A B _53005 t s d GEN_PVAR_148) (@lem4505899 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505909 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4505910 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term939 A B _53005 GEN_PVAR_148 t s d) = (term940 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505909) (@lem4505908 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505911 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term941 A B _53005 GEN_PVAR_148 t s d) = (term942 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505910 A B _53005 GEN_PVAR_148 t s d) (@lem4505905 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505912 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term941 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53005 t s d GEN_PVAR_148) (term194 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4505913 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53005 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term942 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4505912 A B _53005 GEN_PVAR_148 t s d) (@lem4505911 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505914 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53005 t s d) = (term943 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4505913 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505915 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505916 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53005 t s d) = (term944 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505915 A B) (@lem4505914 A B _53005 t s d)). Qed.
Lemma lem4505917 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _53005 t s) = (term945 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4505916 A B _53005 t s d)). Qed.
Lemma lem4505918 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4505919 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _53005 t s) = (term946 A B _53005 t s).
Proof. exact (MK_COMB (@lem4505918 B) (@lem4505917 A B _53005 t s)). Qed.
Lemma lem4505920 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term802 A B _53005 t) = (term947 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4505919 A B _53005 t s)). Qed.
Lemma lem4505921 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4505922 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term803 A B _53005 t) = (term948 A B _53005 t).
Proof. exact (MK_COMB (@lem4505921 A) (@lem4505920 A B _53005 t)). Qed.
Lemma lem4505923 {A B : Type'} (_53005 : type839 A B) : (term804 A B _53005) = (term949 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4505922 A B _53005 t)). Qed.
Lemma lem4505924 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4505925 {A B : Type'} (_53005 : type839 A B) : (term805 A B _53005) = (term950 A B _53005).
Proof. exact (MK_COMB (@lem4505924 B) (@lem4505923 A B _53005)). Qed.
Lemma lem4505939 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4505940 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term953 A B P Q) = (term954 A B P Q).
Proof. exact (@lem4505939 (A -> B) P Q). Qed.
Lemma lem4505941 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _53005 t s d) = (term956 A B _53005 t s d).
Proof. exact (@lem4505940 A B (term957 A B _53005 t s d) (term958 A B _53005 t s d)). Qed.
Lemma lem4505942 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _53005 t s d GEN_PVAR_148) = (term938 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4505944 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term960 A B _53005 t s d GEN_PVAR_148) = (term940 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505943) (@lem4505942 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505945 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _53005 t s d GEN_PVAR_148) = (term935 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505946 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term962 A B _53005 t s d GEN_PVAR_148) = (term942 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4505944 A B _53005 GEN_PVAR_148 t s d) (@lem4505945 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505947 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term963 A B _53005 t s d) = (term943 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4505946 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505948 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505949 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _53005 t s d) = (term944 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505948 A B) (@lem4505947 A B _53005 t s d)). Qed.
Lemma lem4505950 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4505951 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term964 A B _53005 t s d) = (term965 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505950) (@lem4505949 A B _53005 t s d)). Qed.
Lemma lem4505952 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _53005 t s d GEN_PVAR_148) = (term938 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505953 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term966 A B _53005 t s d) = (term957 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4505952 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505954 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505955 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term967 A B _53005 t s d) = (term968 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505954 A B) (@lem4505953 A B _53005 t s d)). Qed.
Lemma lem4505956 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4505957 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term969 A B _53005 t s d) = (term970 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505956) (@lem4505955 A B _53005 t s d)). Qed.
Lemma lem4505958 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _53005 t s d GEN_PVAR_148) = (term935 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4505959 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term971 A B _53005 t s d) = (term958 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4505958 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4505960 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4505961 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term972 A B _53005 t s d) = (term973 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505960 A B) (@lem4505959 A B _53005 t s d)). Qed.
Lemma lem4505962 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term956 A B _53005 t s d) = (term974 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4505957 A B _53005 t s d) (@lem4505961 A B _53005 t s d)). Qed.
Lemma lem4505963 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term955 A B _53005 t s d) = (term956 A B _53005 t s d)) = ((term944 A B _53005 t s d) = (term974 A B _53005 t s d)).
Proof. exact (MK_COMB (@lem4505951 A B _53005 t s d) (@lem4505962 A B _53005 t s d)). Qed.
Lemma lem4505964 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term944 A B _53005 t s d) = (term974 A B _53005 t s d).
Proof. exact (EQ_MP (@lem4505963 A B _53005 t s d) (@lem4505941 A B _53005 t s d)). Qed.
Lemma lem4506085 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term945 A B _53005 t s) = (term975 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4505964 A B _53005 t s d)). Qed.
Lemma lem4506086 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506087 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _53005 t s) = (term976 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506086 B) (@lem4506085 A B _53005 t s)). Qed.
Lemma lem4506089 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4506090 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term951 B P Q) = (term952 B P Q).
Proof. exact (@lem4506089 B P Q). Qed.
Lemma lem4506091 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _53005 t s) = (term978 A B _53005 t s).
Proof. exact (@lem4506090 B (term979 A B _53005 t s) (term980 A B _53005 t s)). Qed.
Lemma lem4506092 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _53005 t s d) = (term968 A B _53005 t s d).
Proof. exact (eq_refl (term981 A B _53005 t s d)). Qed.
Lemma lem4506093 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506094 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term982 A B _53005 t s d) = (term970 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506093) (@lem4506092 A B _53005 t s d)). Qed.
Lemma lem4506095 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _53005 t s d) = (term973 A B _53005 t s d).
Proof. exact (eq_refl (term983 A B _53005 t s d)). Qed.
Lemma lem4506096 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term984 A B _53005 t s d) = (term974 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506094 A B _53005 t s d) (@lem4506095 A B _53005 t s d)). Qed.
Lemma lem4506097 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term985 A B _53005 t s) = (term975 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4506096 A B _53005 t s d)). Qed.
Lemma lem4506098 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506099 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _53005 t s) = (term976 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506098 B) (@lem4506097 A B _53005 t s)). Qed.
Lemma lem4506100 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506101 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term986 A B _53005 t s) = (term987 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506100) (@lem4506099 A B _53005 t s)). Qed.
Lemma lem4506102 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _53005 t s d) = (term968 A B _53005 t s d).
Proof. exact (eq_refl (term981 A B _53005 t s d)). Qed.
Lemma lem4506103 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term988 A B _53005 t s) = (term979 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4506102 A B _53005 t s d)). Qed.
Lemma lem4506104 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506105 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term989 A B _53005 t s) = (term990 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506104 B) (@lem4506103 A B _53005 t s)). Qed.
Lemma lem4506106 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506107 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term991 A B _53005 t s) = (term992 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506106) (@lem4506105 A B _53005 t s)). Qed.
Lemma lem4506108 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _53005 t s d) = (term973 A B _53005 t s d).
Proof. exact (eq_refl (term983 A B _53005 t s d)). Qed.
Lemma lem4506109 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term993 A B _53005 t s) = (term980 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4506108 A B _53005 t s d)). Qed.
Lemma lem4506110 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506111 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term994 A B _53005 t s) = (term995 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506110 B) (@lem4506109 A B _53005 t s)). Qed.
Lemma lem4506112 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term978 A B _53005 t s) = (term996 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506107 A B _53005 t s) (@lem4506111 A B _53005 t s)). Qed.
Lemma lem4506113 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term977 A B _53005 t s) = (term978 A B _53005 t s)) = ((term976 A B _53005 t s) = (term996 A B _53005 t s)).
Proof. exact (MK_COMB (@lem4506101 A B _53005 t s) (@lem4506112 A B _53005 t s)). Qed.
Lemma lem4506114 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term976 A B _53005 t s) = (term996 A B _53005 t s).
Proof. exact (EQ_MP (@lem4506113 A B _53005 t s) (@lem4506091 A B _53005 t s)). Qed.
Lemma lem4506243 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _53005 t s) = (term996 A B _53005 t s).
Proof. exact (TRANS (@lem4506087 A B _53005 t s) (@lem4506114 A B _53005 t s)). Qed.
Lemma lem4506244 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term947 A B _53005 t) = (term997 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506243 A B _53005 t s)). Qed.
Lemma lem4506245 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506246 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term948 A B _53005 t) = (term998 A B _53005 t).
Proof. exact (MK_COMB (@lem4506245 A) (@lem4506244 A B _53005 t)). Qed.
Lemma lem4506248 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4506249 {A : Type'} (P : type686 A) (Q : type686 A) : (term999 A P Q) = (term1000 A P Q).
Proof. exact (@lem4506248 (A -> Prop) P Q). Qed.
Lemma lem4506250 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1001 A B _53005 t) = (term1002 A B _53005 t).
Proof. exact (@lem4506249 A (term1003 A B _53005 t) (term1004 A B _53005 t)). Qed.
Lemma lem4506251 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _53005 t s) = (term990 A B _53005 t s).
Proof. exact (eq_refl (term1005 A B _53005 t s)). Qed.
Lemma lem4506252 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506253 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1006 A B _53005 t s) = (term992 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506252) (@lem4506251 A B _53005 t s)). Qed.
Lemma lem4506254 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _53005 t s) = (term995 A B _53005 t s).
Proof. exact (eq_refl (term1007 A B _53005 t s)). Qed.
Lemma lem4506255 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1008 A B _53005 t s) = (term996 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506253 A B _53005 t s) (@lem4506254 A B _53005 t s)). Qed.
Lemma lem4506256 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1009 A B _53005 t) = (term997 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506255 A B _53005 t s)). Qed.
Lemma lem4506257 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506258 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1001 A B _53005 t) = (term998 A B _53005 t).
Proof. exact (MK_COMB (@lem4506257 A) (@lem4506256 A B _53005 t)). Qed.
Lemma lem4506259 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506260 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1010 A B _53005 t) = (term1011 A B _53005 t).
Proof. exact (MK_COMB (@lem4506259) (@lem4506258 A B _53005 t)). Qed.
Lemma lem4506261 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _53005 t s) = (term990 A B _53005 t s).
Proof. exact (eq_refl (term1005 A B _53005 t s)). Qed.
Lemma lem4506262 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1012 A B _53005 t) = (term1003 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506261 A B _53005 t s)). Qed.
Lemma lem4506263 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506264 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1013 A B _53005 t) = (term1014 A B _53005 t).
Proof. exact (MK_COMB (@lem4506263 A) (@lem4506262 A B _53005 t)). Qed.
Lemma lem4506265 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506266 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1015 A B _53005 t) = (term1016 A B _53005 t).
Proof. exact (MK_COMB (@lem4506265) (@lem4506264 A B _53005 t)). Qed.
Lemma lem4506267 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _53005 t s) = (term995 A B _53005 t s).
Proof. exact (eq_refl (term1007 A B _53005 t s)). Qed.
Lemma lem4506268 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1017 A B _53005 t) = (term1004 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506267 A B _53005 t s)). Qed.
Lemma lem4506269 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506270 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1018 A B _53005 t) = (term1019 A B _53005 t).
Proof. exact (MK_COMB (@lem4506269 A) (@lem4506268 A B _53005 t)). Qed.
Lemma lem4506271 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1002 A B _53005 t) = (term1020 A B _53005 t).
Proof. exact (MK_COMB (@lem4506266 A B _53005 t) (@lem4506270 A B _53005 t)). Qed.
Lemma lem4506272 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((term1001 A B _53005 t) = (term1002 A B _53005 t)) = ((term998 A B _53005 t) = (term1020 A B _53005 t)).
Proof. exact (MK_COMB (@lem4506260 A B _53005 t) (@lem4506271 A B _53005 t)). Qed.
Lemma lem4506273 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term998 A B _53005 t) = (term1020 A B _53005 t).
Proof. exact (EQ_MP (@lem4506272 A B _53005 t) (@lem4506250 A B _53005 t)). Qed.
Lemma lem4506410 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term948 A B _53005 t) = (term1020 A B _53005 t).
Proof. exact (TRANS (@lem4506246 A B _53005 t) (@lem4506273 A B _53005 t)). Qed.
Lemma lem4506411 {A B : Type'} (_53005 : type839 A B) : (term949 A B _53005) = (term1021 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506410 A B _53005 t)). Qed.
Lemma lem4506412 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506413 {A B : Type'} (_53005 : type839 A B) : (term950 A B _53005) = (term1022 A B _53005).
Proof. exact (MK_COMB (@lem4506412 B) (@lem4506411 A B _53005)). Qed.
Lemma lem4506415 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4506416 {B : Type'} (P : type686 B) (Q : type686 B) : (term999 B P Q) = (term1000 B P Q).
Proof. exact (@lem4506415 (B -> Prop) P Q). Qed.
Lemma lem4506417 {A B : Type'} (_53005 : type839 A B) : (term1023 A B _53005) = (term1024 A B _53005).
Proof. exact (@lem4506416 B (term1025 A B _53005) (term1026 A B _53005)). Qed.
Lemma lem4506418 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1027 A B _53005 t) = (term1014 A B _53005 t).
Proof. exact (eq_refl (term1027 A B _53005 t)). Qed.
Lemma lem4506419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506420 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1028 A B _53005 t) = (term1016 A B _53005 t).
Proof. exact (MK_COMB (@lem4506419) (@lem4506418 A B _53005 t)). Qed.
Lemma lem4506421 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1029 A B _53005 t) = (term1019 A B _53005 t).
Proof. exact (eq_refl (term1029 A B _53005 t)). Qed.
Lemma lem4506422 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1030 A B _53005 t) = (term1020 A B _53005 t).
Proof. exact (MK_COMB (@lem4506420 A B _53005 t) (@lem4506421 A B _53005 t)). Qed.
Lemma lem4506423 {A B : Type'} (_53005 : type839 A B) : (term1031 A B _53005) = (term1021 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506422 A B _53005 t)). Qed.
Lemma lem4506424 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506425 {A B : Type'} (_53005 : type839 A B) : (term1023 A B _53005) = (term1022 A B _53005).
Proof. exact (MK_COMB (@lem4506424 B) (@lem4506423 A B _53005)). Qed.
Lemma lem4506426 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506427 {A B : Type'} (_53005 : type839 A B) : (term1032 A B _53005) = (term1033 A B _53005).
Proof. exact (MK_COMB (@lem4506426) (@lem4506425 A B _53005)). Qed.
Lemma lem4506428 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1027 A B _53005 t) = (term1014 A B _53005 t).
Proof. exact (eq_refl (term1027 A B _53005 t)). Qed.
Lemma lem4506429 {A B : Type'} (_53005 : type839 A B) : (term1034 A B _53005) = (term1025 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506428 A B _53005 t)). Qed.
Lemma lem4506430 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506431 {A B : Type'} (_53005 : type839 A B) : (term1035 A B _53005) = (term1036 A B _53005).
Proof. exact (MK_COMB (@lem4506430 B) (@lem4506429 A B _53005)). Qed.
Lemma lem4506432 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506433 {A B : Type'} (_53005 : type839 A B) : (term1037 A B _53005) = (term1038 A B _53005).
Proof. exact (MK_COMB (@lem4506432) (@lem4506431 A B _53005)). Qed.
Lemma lem4506434 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1029 A B _53005 t) = (term1019 A B _53005 t).
Proof. exact (eq_refl (term1029 A B _53005 t)). Qed.
Lemma lem4506435 {A B : Type'} (_53005 : type839 A B) : (term1039 A B _53005) = (term1026 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506434 A B _53005 t)). Qed.
Lemma lem4506436 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506437 {A B : Type'} (_53005 : type839 A B) : (term1040 A B _53005) = (term1041 A B _53005).
Proof. exact (MK_COMB (@lem4506436 B) (@lem4506435 A B _53005)). Qed.
Lemma lem4506438 {A B : Type'} (_53005 : type839 A B) : (term1024 A B _53005) = (term1042 A B _53005).
Proof. exact (MK_COMB (@lem4506433 A B _53005) (@lem4506437 A B _53005)). Qed.
Lemma lem4506439 {A B : Type'} (_53005 : type839 A B) : ((term1023 A B _53005) = (term1024 A B _53005)) = ((term1022 A B _53005) = (term1042 A B _53005)).
Proof. exact (MK_COMB (@lem4506427 A B _53005) (@lem4506438 A B _53005)). Qed.
Lemma lem4506440 {A B : Type'} (_53005 : type839 A B) : (term1022 A B _53005) = (term1042 A B _53005).
Proof. exact (EQ_MP (@lem4506439 A B _53005) (@lem4506417 A B _53005)). Qed.
Lemma lem4506585 {A B : Type'} (_53005 : type839 A B) : (term950 A B _53005) = (term1042 A B _53005).
Proof. exact (TRANS (@lem4506413 A B _53005) (@lem4506440 A B _53005)). Qed.
Lemma lem4506587 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1043 A P Q) = (term1044 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4506588 {A B : Type'} (P : Prop) (Q : type572 A B) : (term1045 A B P Q) = (term1046 A B P Q).
Proof. exact (@lem4506587 (A -> B) P Q). Qed.
Lemma lem4506589 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _53005 GEN_PVAR_148 t s d) = (term1048 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (@lem4506588 A B (term1049 A B _53005 t s d GEN_PVAR_148) (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4506590 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506591 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1050 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4506590 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506592 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4506593 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1051 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4506592 A B) (@lem4506591 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4506594 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53005 t s d GEN_PVAR_148) = (term934 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4506595 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _53005 GEN_PVAR_148 t s d) = (term935 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4506594 A B _53005 t s d GEN_PVAR_148) (@lem4506593 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4506596 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506597 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1052 A B _53005 GEN_PVAR_148 t s d) = (term1053 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4506596) (@lem4506595 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506598 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506599 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53005 t s d GEN_PVAR_148) = (term934 A B _53005 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4506600 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1054 A B _53005 GEN_PVAR_148 t s d f) = (term1055 A B _53005 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4506599 A B _53005 t s d GEN_PVAR_148) (@lem4506598 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506601 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1056 A B _53005 GEN_PVAR_148 t s d) = (term1057 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4506600 A B _53005 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506602 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4506603 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1048 A B _53005 GEN_PVAR_148 t s d) = (term1058 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4506602 A B) (@lem4506601 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506604 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1047 A B _53005 GEN_PVAR_148 t s d) = (term1048 A B _53005 GEN_PVAR_148 t s d)) = ((term935 A B _53005 GEN_PVAR_148 t s d) = (term1058 A B _53005 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4506597 A B _53005 GEN_PVAR_148 t s d) (@lem4506603 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506605 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _53005 GEN_PVAR_148 t s d) = (term1058 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4506604 A B _53005 GEN_PVAR_148 t s d) (@lem4506589 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506606 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term958 A B _53005 t s d) = (term1059 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4506605 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506607 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4506608 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _53005 t s d) = (term1060 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506607 A B) (@lem4506606 A B _53005 t s d)). Qed.
Lemma lem4506610 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4506611 {A B : Type'} (P : type523 A B) : (term1063 A B P) = (term1064 A B P).
Proof. exact (@lem4506610 (A -> B) (A -> B) P). Qed.
Lemma lem4506612 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _53005 t s d) = (term1066 A B _53005 t s d).
Proof. exact (@lem4506611 A B (term1067 A B _53005 t s d)). Qed.
Lemma lem4506613 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _53005 t s d GEN_PVAR_148) = (term1057 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4506614 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4506615 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _53005 t s d GEN_PVAR_148 f) = (term1070 A B _53005 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4506613 A B _53005 GEN_PVAR_148 t s d) (@lem4506614 A B f)). Qed.
Lemma lem4506616 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1070 A B _53005 GEN_PVAR_148 t s d f) = (term1055 A B _53005 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1070 A B _53005 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506617 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _53005 t s d GEN_PVAR_148 f) = (term1055 A B _53005 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4506615 A B _53005 GEN_PVAR_148 t s d f) (@lem4506616 A B _53005 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506618 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1071 A B _53005 t s d GEN_PVAR_148) = (term1057 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4506617 A B _53005 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4506619 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4506620 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1072 A B _53005 t s d GEN_PVAR_148) = (term1058 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4506619 A B) (@lem4506618 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506621 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1073 A B _53005 t s d) = (term1059 A B _53005 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4506620 A B _53005 GEN_PVAR_148 t s d)). Qed.
Lemma lem4506622 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4506623 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _53005 t s d) = (term1060 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506622 A B) (@lem4506621 A B _53005 t s d)). Qed.
Lemma lem4506624 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506625 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1074 A B _53005 t s d) = (term1075 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506624) (@lem4506623 A B _53005 t s d)). Qed.
Lemma lem4506626 {A B : Type'} (_53005 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _53005 t s d GEN_PVAR_148) = (term1057 A B _53005 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _53005 t s d GEN_PVAR_148)). Qed.
Lemma lem4506627 {A B : Type'} (f : type549 A B) (GEN_PVAR_148 : A -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4506628 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _53005 t s d f GEN_PVAR_148) = (term1077 A B _53005 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4506626 A B _53005 GEN_PVAR_148 t s d) (@lem4506627 A B f GEN_PVAR_148)). Qed.
Lemma lem4506629 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1077 A B _53005 t s d f GEN_PVAR_148) = (term1078 A B _53005 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1077 A B _53005 t s d f GEN_PVAR_148)). Qed.
Lemma lem4506630 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _53005 t s d f GEN_PVAR_148) = (term1078 A B _53005 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4506628 A B _53005 t s d f GEN_PVAR_148) (@lem4506629 A B _53005 t s d f GEN_PVAR_148)). Qed.
Lemma lem4506631 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1079 A B _53005 t s d f) = (term1080 A B _53005 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4506630 A B _53005 t s d f GEN_PVAR_148)). Qed.
Lemma lem4506632 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4506633 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1081 A B _53005 t s d f) = (term1082 A B _53005 t s d f).
Proof. exact (MK_COMB (@lem4506632 A B) (@lem4506631 A B _53005 t s d f)). Qed.
Lemma lem4506634 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1083 A B _53005 t s d) = (term1084 A B _53005 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4506633 A B _53005 t s d f)). Qed.
Lemma lem4506635 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4506636 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1066 A B _53005 t s d) = (term1085 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506635 A B) (@lem4506634 A B _53005 t s d)). Qed.
Lemma lem4506637 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1065 A B _53005 t s d) = (term1066 A B _53005 t s d)) = ((term1060 A B _53005 t s d) = (term1085 A B _53005 t s d)).
Proof. exact (MK_COMB (@lem4506625 A B _53005 t s d) (@lem4506636 A B _53005 t s d)). Qed.
Lemma lem4506638 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1060 A B _53005 t s d) = (term1085 A B _53005 t s d).
Proof. exact (EQ_MP (@lem4506637 A B _53005 t s d) (@lem4506612 A B _53005 t s d)). Qed.
Lemma lem4506639 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _53005 t s d) = (term1085 A B _53005 t s d).
Proof. exact (TRANS (@lem4506608 A B _53005 t s d) (@lem4506638 A B _53005 t s d)). Qed.
Lemma lem4506640 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term980 A B _53005 t s) = (term1086 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4506639 A B _53005 t s d)). Qed.
Lemma lem4506641 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506642 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _53005 t s) = (term1087 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506641 B) (@lem4506640 A B _53005 t s)). Qed.
Lemma lem4506644 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4506645 {A B : Type'} (P : type1435 A B) : (term1088 A B P) = (term1089 A B P).
Proof. exact (@lem4506644 B (type549 A B) P). Qed.
Lemma lem4506646 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _53005 t s) = (term1091 A B _53005 t s).
Proof. exact (@lem4506645 A B (term1092 A B _53005 t s)). Qed.
Lemma lem4506647 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _53005 t s d) = (term1084 A B _53005 t s d).
Proof. exact (eq_refl (term1093 A B _53005 t s d)). Qed.
Lemma lem4506648 {A B : Type'} (f : type549 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4506649 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _53005 t s d f) = (term1095 A B _53005 t s d f).
Proof. exact (MK_COMB (@lem4506647 A B _53005 t s d) (@lem4506648 A B f)). Qed.
Lemma lem4506650 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1095 A B _53005 t s d f) = (term1082 A B _53005 t s d f).
Proof. exact (eq_refl (term1095 A B _53005 t s d f)). Qed.
Lemma lem4506651 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _53005 t s d f) = (term1082 A B _53005 t s d f).
Proof. exact (TRANS (@lem4506649 A B _53005 t s d f) (@lem4506650 A B _53005 t s d f)). Qed.
Lemma lem4506652 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1096 A B _53005 t s d) = (term1084 A B _53005 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4506651 A B _53005 t s d f)). Qed.
Lemma lem4506653 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4506654 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1097 A B _53005 t s d) = (term1085 A B _53005 t s d).
Proof. exact (MK_COMB (@lem4506653 A B) (@lem4506652 A B _53005 t s d)). Qed.
Lemma lem4506655 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1098 A B _53005 t s) = (term1086 A B _53005 t s).
Proof. exact (fun_ext (fun d : B => @lem4506654 A B _53005 t s d)). Qed.
Lemma lem4506656 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506657 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _53005 t s) = (term1087 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506656 B) (@lem4506655 A B _53005 t s)). Qed.
Lemma lem4506658 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506659 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1099 A B _53005 t s) = (term1100 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506658) (@lem4506657 A B _53005 t s)). Qed.
Lemma lem4506660 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _53005 t s d) = (term1084 A B _53005 t s d).
Proof. exact (eq_refl (term1093 A B _53005 t s d)). Qed.
Lemma lem4506661 {A B : Type'} (f : type1444 A B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4506662 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _53005 t s f d) = (term1102 A B _53005 t s f d).
Proof. exact (MK_COMB (@lem4506660 A B _53005 t s d) (@lem4506661 A B f d)). Qed.
Lemma lem4506663 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1102 A B _53005 t s f d) = (term1103 A B _53005 t s f d).
Proof. exact (eq_refl (term1102 A B _53005 t s f d)). Qed.
Lemma lem4506664 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _53005 t s f d) = (term1103 A B _53005 t s f d).
Proof. exact (TRANS (@lem4506662 A B _53005 t s f d) (@lem4506663 A B _53005 t s f d)). Qed.
Lemma lem4506665 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1104 A B _53005 t s f) = (term1105 A B _53005 t s f).
Proof. exact (fun_ext (fun d : B => @lem4506664 A B _53005 t s f d)). Qed.
Lemma lem4506666 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4506667 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1106 A B _53005 t s f) = (term1107 A B _53005 t s f).
Proof. exact (MK_COMB (@lem4506666 B) (@lem4506665 A B _53005 t s f)). Qed.
Lemma lem4506668 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1108 A B _53005 t s) = (term1109 A B _53005 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4506667 A B _53005 t s f)). Qed.
Lemma lem4506669 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506670 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1091 A B _53005 t s) = (term1110 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506669 A B) (@lem4506668 A B _53005 t s)). Qed.
Lemma lem4506671 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term1090 A B _53005 t s) = (term1091 A B _53005 t s)) = ((term1087 A B _53005 t s) = (term1110 A B _53005 t s)).
Proof. exact (MK_COMB (@lem4506659 A B _53005 t s) (@lem4506670 A B _53005 t s)). Qed.
Lemma lem4506672 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1087 A B _53005 t s) = (term1110 A B _53005 t s).
Proof. exact (EQ_MP (@lem4506671 A B _53005 t s) (@lem4506646 A B _53005 t s)). Qed.
Lemma lem4506673 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _53005 t s) = (term1110 A B _53005 t s).
Proof. exact (TRANS (@lem4506642 A B _53005 t s) (@lem4506672 A B _53005 t s)). Qed.
Lemma lem4506674 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1004 A B _53005 t) = (term1111 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506673 A B _53005 t s)). Qed.
Lemma lem4506675 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506676 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1019 A B _53005 t) = (term1112 A B _53005 t).
Proof. exact (MK_COMB (@lem4506675 A) (@lem4506674 A B _53005 t)). Qed.
Lemma lem4506678 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4506679 {A B : Type'} (P : type647 A B) : (term1113 A B P) = (term1114 A B P).
Proof. exact (@lem4506678 (A -> Prop) (type1444 A B) P). Qed.
Lemma lem4506680 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1115 A B _53005 t) = (term1116 A B _53005 t).
Proof. exact (@lem4506679 A B (term1117 A B _53005 t)). Qed.
Lemma lem4506681 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _53005 t s) = (term1109 A B _53005 t s).
Proof. exact (eq_refl (term1118 A B _53005 t s)). Qed.
Lemma lem4506682 {A B : Type'} (f : type1444 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4506683 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _53005 t s f) = (term1120 A B _53005 t s f).
Proof. exact (MK_COMB (@lem4506681 A B _53005 t s) (@lem4506682 A B f)). Qed.
Lemma lem4506684 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1120 A B _53005 t s f) = (term1107 A B _53005 t s f).
Proof. exact (eq_refl (term1120 A B _53005 t s f)). Qed.
Lemma lem4506685 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _53005 t s f) = (term1107 A B _53005 t s f).
Proof. exact (TRANS (@lem4506683 A B _53005 t s f) (@lem4506684 A B _53005 t s f)). Qed.
Lemma lem4506686 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1121 A B _53005 t s) = (term1109 A B _53005 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4506685 A B _53005 t s f)). Qed.
Lemma lem4506687 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506688 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1122 A B _53005 t s) = (term1110 A B _53005 t s).
Proof. exact (MK_COMB (@lem4506687 A B) (@lem4506686 A B _53005 t s)). Qed.
Lemma lem4506689 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1123 A B _53005 t) = (term1111 A B _53005 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506688 A B _53005 t s)). Qed.
Lemma lem4506690 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506691 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1115 A B _53005 t) = (term1112 A B _53005 t).
Proof. exact (MK_COMB (@lem4506690 A) (@lem4506689 A B _53005 t)). Qed.
Lemma lem4506692 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506693 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1124 A B _53005 t) = (term1125 A B _53005 t).
Proof. exact (MK_COMB (@lem4506692) (@lem4506691 A B _53005 t)). Qed.
Lemma lem4506694 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _53005 t s) = (term1109 A B _53005 t s).
Proof. exact (eq_refl (term1118 A B _53005 t s)). Qed.
Lemma lem4506695 {A B : Type'} (f : type673 A B) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4506696 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _53005 t f s) = (term1127 A B _53005 t f s).
Proof. exact (MK_COMB (@lem4506694 A B _53005 t s) (@lem4506695 A B f s)). Qed.
Lemma lem4506697 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1127 A B _53005 t f s) = (term1128 A B _53005 t f s).
Proof. exact (eq_refl (term1127 A B _53005 t f s)). Qed.
Lemma lem4506698 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _53005 t f s) = (term1128 A B _53005 t f s).
Proof. exact (TRANS (@lem4506696 A B _53005 t f s) (@lem4506697 A B _53005 t f s)). Qed.
Lemma lem4506699 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1129 A B _53005 t f) = (term1130 A B _53005 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4506698 A B _53005 t f s)). Qed.
Lemma lem4506700 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4506701 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1131 A B _53005 t f) = (term1132 A B _53005 t f).
Proof. exact (MK_COMB (@lem4506700 A) (@lem4506699 A B _53005 t f)). Qed.
Lemma lem4506702 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1133 A B _53005 t) = (term1134 A B _53005 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4506701 A B _53005 t f)). Qed.
Lemma lem4506703 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506704 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1116 A B _53005 t) = (term1135 A B _53005 t).
Proof. exact (MK_COMB (@lem4506703 A B) (@lem4506702 A B _53005 t)). Qed.
Lemma lem4506705 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : ((term1115 A B _53005 t) = (term1116 A B _53005 t)) = ((term1112 A B _53005 t) = (term1135 A B _53005 t)).
Proof. exact (MK_COMB (@lem4506693 A B _53005 t) (@lem4506704 A B _53005 t)). Qed.
Lemma lem4506706 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1112 A B _53005 t) = (term1135 A B _53005 t).
Proof. exact (EQ_MP (@lem4506705 A B _53005 t) (@lem4506680 A B _53005 t)). Qed.
Lemma lem4506707 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1019 A B _53005 t) = (term1135 A B _53005 t).
Proof. exact (TRANS (@lem4506676 A B _53005 t) (@lem4506706 A B _53005 t)). Qed.
Lemma lem4506708 {A B : Type'} (_53005 : type839 A B) : (term1026 A B _53005) = (term1136 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506707 A B _53005 t)). Qed.
Lemma lem4506709 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506710 {A B : Type'} (_53005 : type839 A B) : (term1041 A B _53005) = (term1137 A B _53005).
Proof. exact (MK_COMB (@lem4506709 B) (@lem4506708 A B _53005)). Qed.
Lemma lem4506712 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4506713 {A B : Type'} (P : type820 A B) : (term1138 A B P) = (term1139 A B P).
Proof. exact (@lem4506712 (B -> Prop) (type673 A B) P). Qed.
Lemma lem4506714 {A B : Type'} (_53005 : type839 A B) : (term1140 A B _53005) = (term1141 A B _53005).
Proof. exact (@lem4506713 A B (term1142 A B _53005)). Qed.
Lemma lem4506715 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1143 A B _53005 t) = (term1134 A B _53005 t).
Proof. exact (eq_refl (term1143 A B _53005 t)). Qed.
Lemma lem4506716 {A B : Type'} (f : type673 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4506717 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _53005 t f) = (term1145 A B _53005 t f).
Proof. exact (MK_COMB (@lem4506715 A B _53005 t) (@lem4506716 A B f)). Qed.
Lemma lem4506718 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1145 A B _53005 t f) = (term1132 A B _53005 t f).
Proof. exact (eq_refl (term1145 A B _53005 t f)). Qed.
Lemma lem4506719 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _53005 t f) = (term1132 A B _53005 t f).
Proof. exact (TRANS (@lem4506717 A B _53005 t f) (@lem4506718 A B _53005 t f)). Qed.
Lemma lem4506720 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1146 A B _53005 t) = (term1134 A B _53005 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4506719 A B _53005 t f)). Qed.
Lemma lem4506721 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506722 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1147 A B _53005 t) = (term1135 A B _53005 t).
Proof. exact (MK_COMB (@lem4506721 A B) (@lem4506720 A B _53005 t)). Qed.
Lemma lem4506723 {A B : Type'} (_53005 : type839 A B) : (term1148 A B _53005) = (term1136 A B _53005).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506722 A B _53005 t)). Qed.
Lemma lem4506724 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506725 {A B : Type'} (_53005 : type839 A B) : (term1140 A B _53005) = (term1137 A B _53005).
Proof. exact (MK_COMB (@lem4506724 B) (@lem4506723 A B _53005)). Qed.
Lemma lem4506726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506727 {A B : Type'} (_53005 : type839 A B) : (term1149 A B _53005) = (term1150 A B _53005).
Proof. exact (MK_COMB (@lem4506726) (@lem4506725 A B _53005)). Qed.
Lemma lem4506728 {A B : Type'} (_53005 : type839 A B) (t : B -> Prop) : (term1143 A B _53005 t) = (term1134 A B _53005 t).
Proof. exact (eq_refl (term1143 A B _53005 t)). Qed.
Lemma lem4506729 {A B : Type'} (f : type838 A B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4506730 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _53005 f t) = (term1152 A B _53005 f t).
Proof. exact (MK_COMB (@lem4506728 A B _53005 t) (@lem4506729 A B f t)). Qed.
Lemma lem4506731 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1152 A B _53005 f t) = (term1153 A B _53005 f t).
Proof. exact (eq_refl (term1152 A B _53005 f t)). Qed.
Lemma lem4506732 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _53005 f t) = (term1153 A B _53005 f t).
Proof. exact (TRANS (@lem4506730 A B _53005 f t) (@lem4506731 A B _53005 f t)). Qed.
Lemma lem4506733 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) : (term1154 A B _53005 f) = (term1155 A B _53005 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4506732 A B _53005 f t)). Qed.
Lemma lem4506734 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4506735 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) : (term1156 A B _53005 f) = (term1157 A B _53005 f).
Proof. exact (MK_COMB (@lem4506734 B) (@lem4506733 A B _53005 f)). Qed.
Lemma lem4506736 {A B : Type'} (_53005 : type839 A B) : (term1158 A B _53005) = (term1159 A B _53005).
Proof. exact (fun_ext (fun f : type838 A B => @lem4506735 A B _53005 f)). Qed.
Lemma lem4506737 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506738 {A B : Type'} (_53005 : type839 A B) : (term1141 A B _53005) = (term1160 A B _53005).
Proof. exact (MK_COMB (@lem4506737 A B) (@lem4506736 A B _53005)). Qed.
Lemma lem4506739 {A B : Type'} (_53005 : type839 A B) : ((term1140 A B _53005) = (term1141 A B _53005)) = ((term1137 A B _53005) = (term1160 A B _53005)).
Proof. exact (MK_COMB (@lem4506727 A B _53005) (@lem4506738 A B _53005)). Qed.
Lemma lem4506740 {A B : Type'} (_53005 : type839 A B) : (term1137 A B _53005) = (term1160 A B _53005).
Proof. exact (EQ_MP (@lem4506739 A B _53005) (@lem4506714 A B _53005)). Qed.
Lemma lem4506741 {A B : Type'} (_53005 : type839 A B) : (term1041 A B _53005) = (term1160 A B _53005).
Proof. exact (TRANS (@lem4506710 A B _53005) (@lem4506740 A B _53005)). Qed.
Lemma lem4506742 {A B : Type'} (_53005 : type839 A B) : (term1038 A B _53005) = (term1038 A B _53005).
Proof. exact (eq_refl (term1038 A B _53005)). Qed.
Lemma lem4506743 {A B : Type'} (_53005 : type839 A B) : (term1042 A B _53005) = (term1161 A B _53005).
Proof. exact (MK_COMB (@lem4506742 A B _53005) (@lem4506741 A B _53005)). Qed.
Lemma lem4506745 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4506746 {A B : Type'} (P : Prop) (Q : type213 A B) : (term1164 A B P Q) = (term1165 A B P Q).
Proof. exact (@lem4506745 (type838 A B) P Q). Qed.
Lemma lem4506747 {A B : Type'} (_53005 : type839 A B) : (term1166 A B _53005) = (term1167 A B _53005).
Proof. exact (@lem4506746 A B (term1036 A B _53005) (term1159 A B _53005)). Qed.
Lemma lem4506748 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) : (term1168 A B _53005 f) = (term1157 A B _53005 f).
Proof. exact (eq_refl (term1168 A B _53005 f)). Qed.
Lemma lem4506749 {A B : Type'} (_53005 : type839 A B) : (term1169 A B _53005) = (term1159 A B _53005).
Proof. exact (fun_ext (fun f : type838 A B => @lem4506748 A B _53005 f)). Qed.
Lemma lem4506750 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506751 {A B : Type'} (_53005 : type839 A B) : (term1170 A B _53005) = (term1160 A B _53005).
Proof. exact (MK_COMB (@lem4506750 A B) (@lem4506749 A B _53005)). Qed.
Lemma lem4506752 {A B : Type'} (_53005 : type839 A B) : (term1038 A B _53005) = (term1038 A B _53005).
Proof. exact (eq_refl (term1038 A B _53005)). Qed.
Lemma lem4506753 {A B : Type'} (_53005 : type839 A B) : (term1166 A B _53005) = (term1161 A B _53005).
Proof. exact (MK_COMB (@lem4506752 A B _53005) (@lem4506751 A B _53005)). Qed.
Lemma lem4506754 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4506755 {A B : Type'} (_53005 : type839 A B) : (term1171 A B _53005) = (term1172 A B _53005).
Proof. exact (MK_COMB (@lem4506754) (@lem4506753 A B _53005)). Qed.
Lemma lem4506756 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) : (term1168 A B _53005 f) = (term1157 A B _53005 f).
Proof. exact (eq_refl (term1168 A B _53005 f)). Qed.
Lemma lem4506757 {A B : Type'} (_53005 : type839 A B) : (term1038 A B _53005) = (term1038 A B _53005).
Proof. exact (eq_refl (term1038 A B _53005)). Qed.
Lemma lem4506758 {A B : Type'} (_53005 : type839 A B) (f : type838 A B) : (term1173 A B _53005 f) = (term1174 A B _53005 f).
Proof. exact (MK_COMB (@lem4506757 A B _53005) (@lem4506756 A B _53005 f)). Qed.
Lemma lem4506759 {A B : Type'} (_53005 : type839 A B) : (term1175 A B _53005) = (term1176 A B _53005).
Proof. exact (fun_ext (fun f : type838 A B => @lem4506758 A B _53005 f)). Qed.
Lemma lem4506760 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4506761 {A B : Type'} (_53005 : type839 A B) : (term1167 A B _53005) = (term1177 A B _53005).
Proof. exact (MK_COMB (@lem4506760 A B) (@lem4506759 A B _53005)). Qed.
Lemma lem4506762 {A B : Type'} (_53005 : type839 A B) : ((term1166 A B _53005) = (term1167 A B _53005)) = ((term1161 A B _53005) = (term1177 A B _53005)).
Proof. exact (MK_COMB (@lem4506755 A B _53005) (@lem4506761 A B _53005)). Qed.
Lemma lem4506763 {A B : Type'} (_53005 : type839 A B) : (term1161 A B _53005) = (term1177 A B _53005).
Proof. exact (EQ_MP (@lem4506762 A B _53005) (@lem4506747 A B _53005)). Qed.
Lemma lem4506764 {A B : Type'} (_53005 : type839 A B) : (term1042 A B _53005) = (term1177 A B _53005).
Proof. exact (TRANS (@lem4506743 A B _53005) (@lem4506763 A B _53005)). Qed.
Lemma lem4506765 {A B : Type'} (_53005 : type839 A B) : (term950 A B _53005) = (term1177 A B _53005).
Proof. exact (TRANS (@lem4506585 A B _53005) (@lem4506764 A B _53005)). Qed.
Lemma lem4506766 {A B : Type'} (_53005 : type839 A B) : (term805 A B _53005) = (term1177 A B _53005).
Proof. exact (TRANS (@lem4505925 A B _53005) (@lem4506765 A B _53005)). Qed.
Lemma lem4506767 {A B : Type'} (_53005 : type839 A B) (h1 : term805 A B _53005) : term1177 A B _53005.
Proof. exact (EQ_MP (@lem4506766 A B _53005) (@lem4505278 A B _53005 h1)). Qed.
Lemma lem4506809 {B : Type'} (b : B) (t : B -> Prop) (h1 : @IN B b t) : @IN B b t.
Proof. exact (h1). Qed.
Lemma lem4506816 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term170 A B s g x t) = (term836 A B s g x t).
Proof. exact (@lem17265 (@IN A x s) (term169 A B g x t)). Qed.
Lemma lem4506817 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term172 A B s g t) = (term837 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4506816 A B s g x t)). Qed.
Lemma lem4506818 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4506871 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term174 A B s g t) = (term838 A B s g t).
Proof. exact (MK_COMB (@lem4506818 A) (@lem4506817 A B s g t)). Qed.
Lemma lem4506872 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term838 A B s g t.
Proof. exact (EQ_MP (@lem4506871 A B s g t) (@lem4505286 A B s g t h1)). Qed.
Lemma lem4506875 {A : Type'} (x : A) (s : A -> Prop) : (term1192 A x s) = (@IN A x s).
Proof. exact (@lem16933 (@IN A x s)). Qed.
Lemma lem4506876 {A B : Type'} (g : A -> B) (x : A) (d : B) : ((g x) = d) = ((g x) = d).
Proof. exact (eq_refl ((g x) = d)). Qed.
Lemma lem4506877 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4506878 {A : Type'} (x : A) (s : A -> Prop) : (term1735 A x s) = (term1736 A x s).
Proof. exact (MK_COMB (@lem4506877) (@lem4506875 A x s)). Qed.
Lemma lem4506879 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1737 A B s g x d) = (term1738 A B s g x d).
Proof. exact (MK_COMB (@lem4506878 A x s) (@lem4506876 A B g x d)). Qed.
Lemma lem4506880 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term180 A B s g x d) = (term1737 A B s g x d).
Proof. exact (@lem17265 (term178 A x s) ((g x) = d)). Qed.
Lemma lem4506881 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term180 A B s g x d) = (term1738 A B s g x d).
Proof. exact (TRANS (@lem4506880 A B s g x d) (@lem4506879 A B s g x d)). Qed.
Lemma lem4506882 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term182 A B s g d) = (term1739 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4506881 A B s g x d)). Qed.
Lemma lem4506883 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4506936 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term184 A B s g d) = (term1740 A B s g d).
Proof. exact (MK_COMB (@lem4506883 A) (@lem4506882 A B s g d)). Qed.
Lemma lem4506937 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1740 A B s g d.
Proof. exact (EQ_MP (@lem4506936 A B s g d) (@lem4505287 A B s g d h1)). Qed.
Lemma lem4506940 {A : Type'} (x : A) (a : A) : (term1193 A x a) = (x = a).
Proof. exact (@lem16933 (x = a)). Qed.
Lemma lem4506941 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term178 B b t).
Proof. exact (eq_refl (term178 B b t)). Qed.
Lemma lem4506942 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4506943 {A : Type'} (x : A) (a : A) : (term1195 A x a) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4506942) (@lem4506940 A x a)). Qed.
Lemma lem4506944 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1741 A B x a b t) = (term1742 A B x a b t).
Proof. exact (MK_COMB (@lem4506943 A x a) (@lem4506941 B b t)). Qed.
Lemma lem4506945 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1743 A B x a b t) = (term1741 A B x a b t).
Proof. exact (@lem17160 (term1200 A x a) (@IN B b t)). Qed.
Lemma lem4506946 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1743 A B x a b t) = (term1742 A B x a b t).
Proof. exact (TRANS (@lem4506945 A B x a b t) (@lem4506944 A B x a b t)). Qed.
Lemma lem4506954 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1744 A B s g x t) = (term1239 A B s g x t).
Proof. exact (@lem17362 (@IN A x s) (term169 A B g x t)). Qed.
Lemma lem4506956 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4506957 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1745 A B a s g x t) = (term1746 A B a s g x t).
Proof. exact (MK_COMB (@lem4506956 A x a) (@lem4506954 A B s g x t)). Qed.
Lemma lem4506958 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1747 A B a s g x t) = (term1745 A B a s g x t).
Proof. exact (@lem17160 (x = a) (term170 A B s g x t)). Qed.
Lemma lem4506959 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1747 A B a s g x t) = (term1746 A B a s g x t).
Proof. exact (TRANS (@lem4506958 A B a s g x t) (@lem4506957 A B a s g x t)). Qed.
Lemma lem4506960 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4506961 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1748 A B x a b t) = (term1749 A B x a b t).
Proof. exact (MK_COMB (@lem4506960) (@lem4506946 A B x a b t)). Qed.
Lemma lem4506962 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1750 A B b a s g x t) = (term1751 A B b a s g x t).
Proof. exact (MK_COMB (@lem4506961 A B x a b t) (@lem4506959 A B a s g x t)). Qed.
Lemma lem4506963 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1752 A B b a s g x t) = (term1750 A B b a s g x t).
Proof. exact (@lem17045 (term1753 A B x a b t) (term1754 A B a s g x t)). Qed.
Lemma lem4506964 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1752 A B b a s g x t) = (term1751 A B b a s g x t).
Proof. exact (TRANS (@lem4506963 A B b a s g x t) (@lem4506962 A B b a s g x t)). Qed.
Lemma lem4506965 {A : Type'} (P : A -> Prop) : (term1223 A P) = (term1224 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4506966 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1755 A B b a s g t) = (term1756 A B b a s g t).
Proof. exact (@lem4506965 A (term1680 A B b a s g t)). Qed.
Lemma lem4506967 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1757 A B b a s g t x) = (term1679 A B b a s g x t).
Proof. exact (eq_refl (term1757 A B b a s g t x)). Qed.
Lemma lem4506968 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4506969 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1758 A B b a s g t x) = (term1752 A B b a s g x t).
Proof. exact (MK_COMB (@lem4506968) (@lem4506967 A B b a s g x t)). Qed.
Lemma lem4506970 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1758 A B b a s g t x) = (term1751 A B b a s g x t).
Proof. exact (TRANS (@lem4506969 A B b a s g x t) (@lem4506964 A B b a s g x t)). Qed.
Lemma lem4506971 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1759 A B b a s g t) = (term1760 A B b a s g t).
Proof. exact (fun_ext (fun x : A => @lem4506970 A B b a s g x t)). Qed.
Lemma lem4506972 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4506973 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1756 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (MK_COMB (@lem4506972 A) (@lem4506971 A B b a s g t)). Qed.
Lemma lem4506974 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1755 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (TRANS (@lem4506966 A B b a s g t) (@lem4506973 A B b a s g t)). Qed.
Lemma lem4506982 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1762 A B s g x d) = (term1763 A B s g x d).
Proof. exact (@lem17362 (term178 A x s) ((g x) = d)). Qed.
Lemma lem4506984 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4506985 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1764 A B a s g x d) = (term1765 A B a s g x d).
Proof. exact (MK_COMB (@lem4506984 A x a) (@lem4506982 A B s g x d)). Qed.
Lemma lem4506986 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1766 A B a s g x d) = (term1764 A B a s g x d).
Proof. exact (@lem17160 (x = a) (term180 A B s g x d)). Qed.
Lemma lem4506987 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1766 A B a s g x d) = (term1765 A B a s g x d).
Proof. exact (TRANS (@lem4506986 A B a s g x d) (@lem4506985 A B a s g x d)). Qed.
Lemma lem4506988 {A : Type'} (P : A -> Prop) : (term1223 A P) = (term1224 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4506989 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1767 A B a s g d) = (term1768 A B a s g d).
Proof. exact (@lem4506988 A (term1672 A B a s g d)). Qed.
Lemma lem4506990 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1769 A B a s g d x) = (term1668 A B a s g x d).
Proof. exact (eq_refl (term1769 A B a s g d x)). Qed.
Lemma lem4506991 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4506992 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1770 A B a s g d x) = (term1766 A B a s g x d).
Proof. exact (MK_COMB (@lem4506991) (@lem4506990 A B a s g x d)). Qed.
Lemma lem4506993 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1770 A B a s g d x) = (term1765 A B a s g x d).
Proof. exact (TRANS (@lem4506992 A B a s g x d) (@lem4506987 A B a s g x d)). Qed.
Lemma lem4506994 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1771 A B a s g d) = (term1772 A B a s g d).
Proof. exact (fun_ext (fun x : A => @lem4506993 A B a s g x d)). Qed.
Lemma lem4506995 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4506996 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1768 A B a s g d) = (term1773 A B a s g d).
Proof. exact (MK_COMB (@lem4506995 A) (@lem4506994 A B a s g d)). Qed.
Lemma lem4506997 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1767 A B a s g d) = (term1773 A B a s g d).
Proof. exact (TRANS (@lem4506989 A B a s g d) (@lem4506996 A B a s g d)). Qed.
Lemma lem4506998 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4506999 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1774 A B b a s g t) = (term1775 A B b a s g t).
Proof. exact (MK_COMB (@lem4506998) (@lem4506974 A B b a s g t)). Qed.
Lemma lem4507000 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1776 A B b t a s g d) = (term1777 A B b t a s g d).
Proof. exact (MK_COMB (@lem4506999 A B b a s g t) (@lem4506997 A B a s g d)). Qed.
Lemma lem4507001 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1734 A B b t a s g d) = (term1776 A B b t a s g d).
Proof. exact (@lem17045 (term1681 A B b a s g t) (term1673 A B a s g d)). Qed.
Lemma lem4507002 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1734 A B b t a s g d) = (term1777 A B b t a s g d).
Proof. exact (TRANS (@lem4507001 A B b t a s g d) (@lem4507000 A B b t a s g d)). Qed.
Lemma lem4507004 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1252 A P Q) = (term1253 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem4507005 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1252 A P Q) = (term1253 A P Q).
Proof. exact (@lem4507004 A P Q). Qed.
Lemma lem4507006 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1778 A B b a s g t) = (term1779 A B b a s g t).
Proof. exact (@lem4507005 A (term1780 A B a b t) (term1781 A B a s g t)). Qed.
Lemma lem4507007 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1782 A B a b t x) = (term1742 A B x a b t).
Proof. exact (eq_refl (term1782 A B a b t x)). Qed.
Lemma lem4507008 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507009 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1783 A B a b t x) = (term1749 A B x a b t).
Proof. exact (MK_COMB (@lem4507008) (@lem4507007 A B x a b t)). Qed.
Lemma lem4507010 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1784 A B a s g t x) = (term1746 A B a s g x t).
Proof. exact (eq_refl (term1784 A B a s g t x)). Qed.
Lemma lem4507011 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1785 A B b a s g t x) = (term1751 A B b a s g x t).
Proof. exact (MK_COMB (@lem4507009 A B x a b t) (@lem4507010 A B a s g x t)). Qed.
Lemma lem4507012 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1786 A B b a s g t) = (term1760 A B b a s g t).
Proof. exact (fun_ext (fun x : A => @lem4507011 A B b a s g x t)). Qed.
Lemma lem4507013 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507014 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1778 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (MK_COMB (@lem4507013 A) (@lem4507012 A B b a s g t)). Qed.
Lemma lem4507015 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4507016 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1787 A B b a s g t) = (term1788 A B b a s g t).
Proof. exact (MK_COMB (@lem4507015) (@lem4507014 A B b a s g t)). Qed.
Lemma lem4507017 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1782 A B a b t x) = (term1742 A B x a b t).
Proof. exact (eq_refl (term1782 A B a b t x)). Qed.
Lemma lem4507018 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1789 A B a b t) = (term1780 A B a b t).
Proof. exact (fun_ext (fun x : A => @lem4507017 A B x a b t)). Qed.
Lemma lem4507019 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507020 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1790 A B a b t) = (term1791 A B a b t).
Proof. exact (MK_COMB (@lem4507019 A) (@lem4507018 A B a b t)). Qed.
Lemma lem4507021 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507022 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1792 A B a b t) = (term1793 A B a b t).
Proof. exact (MK_COMB (@lem4507021) (@lem4507020 A B a b t)). Qed.
Lemma lem4507023 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1784 A B a s g t x) = (term1746 A B a s g x t).
Proof. exact (eq_refl (term1784 A B a s g t x)). Qed.
Lemma lem4507024 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1794 A B a s g t) = (term1781 A B a s g t).
Proof. exact (fun_ext (fun x : A => @lem4507023 A B a s g x t)). Qed.
Lemma lem4507025 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507026 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1795 A B a s g t) = (term1796 A B a s g t).
Proof. exact (MK_COMB (@lem4507025 A) (@lem4507024 A B a s g t)). Qed.
Lemma lem4507027 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1779 A B b a s g t) = (term1797 A B b a s g t).
Proof. exact (MK_COMB (@lem4507022 A B a b t) (@lem4507026 A B a s g t)). Qed.
Lemma lem4507028 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : ((term1778 A B b a s g t) = (term1779 A B b a s g t)) = ((term1761 A B b a s g t) = (term1797 A B b a s g t)).
Proof. exact (MK_COMB (@lem4507016 A B b a s g t) (@lem4507027 A B b a s g t)). Qed.
Lemma lem4507029 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1761 A B b a s g t) = (term1797 A B b a s g t).
Proof. exact (EQ_MP (@lem4507028 A B b a s g t) (@lem4507006 A B b a s g t)). Qed.
Lemma lem4507051 {A : Type'} (P : A -> Prop) (Q : Prop) : (term97 A P Q) = (term96 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem4507052 {A : Type'} (P : A -> Prop) (Q : Prop) : (term97 A P Q) = (term96 A P Q).
Proof. exact (@lem4507051 A P Q). Qed.
Lemma lem4507053 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1798 A B a b t) = (term1799 A B a b t).
Proof. exact (@lem4507052 A (term1800 A a) (term178 B b t)). Qed.
Lemma lem4507054 {A : Type'} (x : A) (a : A) : (term1801 A a x) = (x = a).
Proof. exact (eq_refl (term1801 A a x)). Qed.
Lemma lem4507055 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507056 {A : Type'} (x : A) (a : A) : (term1802 A a x) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4507055) (@lem4507054 A x a)). Qed.
Lemma lem4507057 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term178 B b t).
Proof. exact (eq_refl (term178 B b t)). Qed.
Lemma lem4507058 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1803 A B a x b t) = (term1742 A B x a b t).
Proof. exact (MK_COMB (@lem4507056 A x a) (@lem4507057 B b t)). Qed.
Lemma lem4507059 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1804 A B a b t) = (term1780 A B a b t).
Proof. exact (fun_ext (fun x : A => @lem4507058 A B x a b t)). Qed.
Lemma lem4507060 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507061 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1798 A B a b t) = (term1791 A B a b t).
Proof. exact (MK_COMB (@lem4507060 A) (@lem4507059 A B a b t)). Qed.
Lemma lem4507062 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4507063 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1805 A B a b t) = (term1806 A B a b t).
Proof. exact (MK_COMB (@lem4507062) (@lem4507061 A B a b t)). Qed.
Lemma lem4507064 {A : Type'} (x : A) (a : A) : (term1801 A a x) = (x = a).
Proof. exact (eq_refl (term1801 A a x)). Qed.
Lemma lem4507065 {A : Type'} (a : A) : (term1807 A a) = (term1800 A a).
Proof. exact (fun_ext (fun x : A => @lem4507064 A x a)). Qed.
Lemma lem4507066 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507067 {A : Type'} (a : A) : (term1808 A a) = (term1809 A a).
Proof. exact (MK_COMB (@lem4507066 A) (@lem4507065 A a)). Qed.
Lemma lem4507068 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507069 {A : Type'} (a : A) : (term1810 A a) = (term1811 A a).
Proof. exact (MK_COMB (@lem4507068) (@lem4507067 A a)). Qed.
Lemma lem4507070 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term178 B b t).
Proof. exact (eq_refl (term178 B b t)). Qed.
Lemma lem4507071 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1799 A B a b t) = (term1812 A B a b t).
Proof. exact (MK_COMB (@lem4507069 A a) (@lem4507070 B b t)). Qed.
Lemma lem4507072 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : ((term1798 A B a b t) = (term1799 A B a b t)) = ((term1791 A B a b t) = (term1812 A B a b t)).
Proof. exact (MK_COMB (@lem4507063 A B a b t) (@lem4507071 A B a b t)). Qed.
Lemma lem4507073 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1791 A B a b t) = (term1812 A B a b t).
Proof. exact (EQ_MP (@lem4507072 A B a b t) (@lem4507053 A B a b t)). Qed.
Lemma lem4507078 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507079 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1793 A B a b t) = (term1813 A B a b t).
Proof. exact (MK_COMB (@lem4507078) (@lem4507073 A B a b t)). Qed.
Lemma lem4507128 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1796 A B a s g t) = (term1796 A B a s g t).
Proof. exact (eq_refl (term1796 A B a s g t)). Qed.
Lemma lem4507129 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1797 A B b a s g t) = (term1814 A B b a s g t).
Proof. exact (MK_COMB (@lem4507079 A B a b t) (@lem4507128 A B a s g t)). Qed.
Lemma lem4507130 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1761 A B b a s g t) = (term1814 A B b a s g t).
Proof. exact (TRANS (@lem4507029 A B b a s g t) (@lem4507129 A B b a s g t)). Qed.
Lemma lem4507131 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507132 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1775 A B b a s g t) = (term1815 A B b a s g t).
Proof. exact (MK_COMB (@lem4507131) (@lem4507130 A B b a s g t)). Qed.
Lemma lem4507181 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1773 A B a s g d) = (term1773 A B a s g d).
Proof. exact (eq_refl (term1773 A B a s g d)). Qed.
Lemma lem4507182 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1777 A B b t a s g d) = (term1816 A B b t a s g d).
Proof. exact (MK_COMB (@lem4507132 A B b a s g t) (@lem4507181 A B a s g d)). Qed.
Lemma lem4507184 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4507185 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (@lem4507184 A P Q). Qed.
Lemma lem4507186 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1799 A B a b t) = (term1798 A B a b t).
Proof. exact (@lem4507185 A (term1800 A a) (term178 B b t)). Qed.
Lemma lem4507187 {A : Type'} (x : A) (a : A) : (term1801 A a x) = (x = a).
Proof. exact (eq_refl (term1801 A a x)). Qed.
Lemma lem4507188 {A : Type'} (a : A) : (term1807 A a) = (term1800 A a).
Proof. exact (fun_ext (fun x : A => @lem4507187 A x a)). Qed.
Lemma lem4507189 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507190 {A : Type'} (a : A) : (term1808 A a) = (term1809 A a).
Proof. exact (MK_COMB (@lem4507189 A) (@lem4507188 A a)). Qed.
Lemma lem4507191 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507192 {A : Type'} (a : A) : (term1810 A a) = (term1811 A a).
Proof. exact (MK_COMB (@lem4507191) (@lem4507190 A a)). Qed.
Lemma lem4507193 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term178 B b t).
Proof. exact (eq_refl (term178 B b t)). Qed.
Lemma lem4507194 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1799 A B a b t) = (term1812 A B a b t).
Proof. exact (MK_COMB (@lem4507192 A a) (@lem4507193 B b t)). Qed.
Lemma lem4507195 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4507196 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1817 A B a b t) = (term1818 A B a b t).
Proof. exact (MK_COMB (@lem4507195) (@lem4507194 A B a b t)). Qed.
Lemma lem4507197 {A : Type'} (x : A) (a : A) : (term1801 A a x) = (x = a).
Proof. exact (eq_refl (term1801 A a x)). Qed.
Lemma lem4507198 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507199 {A : Type'} (x : A) (a : A) : (term1802 A a x) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4507198) (@lem4507197 A x a)). Qed.
Lemma lem4507200 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term178 B b t).
Proof. exact (eq_refl (term178 B b t)). Qed.
Lemma lem4507201 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1803 A B a x b t) = (term1742 A B x a b t).
Proof. exact (MK_COMB (@lem4507199 A x a) (@lem4507200 B b t)). Qed.
Lemma lem4507202 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1804 A B a b t) = (term1780 A B a b t).
Proof. exact (fun_ext (fun x : A => @lem4507201 A B x a b t)). Qed.
Lemma lem4507203 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507204 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1798 A B a b t) = (term1791 A B a b t).
Proof. exact (MK_COMB (@lem4507203 A) (@lem4507202 A B a b t)). Qed.
Lemma lem4507205 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : ((term1799 A B a b t) = (term1798 A B a b t)) = ((term1812 A B a b t) = (term1791 A B a b t)).
Proof. exact (MK_COMB (@lem4507196 A B a b t) (@lem4507204 A B a b t)). Qed.
Lemma lem4507206 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1812 A B a b t) = (term1791 A B a b t).
Proof. exact (EQ_MP (@lem4507205 A B a b t) (@lem4507186 A B a b t)). Qed.
Lemma lem4507207 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507208 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1813 A B a b t) = (term1793 A B a b t).
Proof. exact (MK_COMB (@lem4507207) (@lem4507206 A B a b t)). Qed.
Lemma lem4507209 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1796 A B a s g t) = (term1796 A B a s g t).
Proof. exact (eq_refl (term1796 A B a s g t)). Qed.
Lemma lem4507210 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1814 A B b a s g t) = (term1797 A B b a s g t).
Proof. exact (MK_COMB (@lem4507208 A B a b t) (@lem4507209 A B a s g t)). Qed.
Lemma lem4507212 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem4507213 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (@lem4507212 A P Q). Qed.
Lemma lem4507214 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1779 A B b a s g t) = (term1778 A B b a s g t).
Proof. exact (@lem4507213 A (term1780 A B a b t) (term1781 A B a s g t)). Qed.
Lemma lem4507215 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1782 A B a b t x) = (term1742 A B x a b t).
Proof. exact (eq_refl (term1782 A B a b t x)). Qed.
Lemma lem4507216 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1789 A B a b t) = (term1780 A B a b t).
Proof. exact (fun_ext (fun x : A => @lem4507215 A B x a b t)). Qed.
Lemma lem4507217 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507218 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1790 A B a b t) = (term1791 A B a b t).
Proof. exact (MK_COMB (@lem4507217 A) (@lem4507216 A B a b t)). Qed.
Lemma lem4507219 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507220 {A B : Type'} (a : A) (b : B) (t : B -> Prop) : (term1792 A B a b t) = (term1793 A B a b t).
Proof. exact (MK_COMB (@lem4507219) (@lem4507218 A B a b t)). Qed.
Lemma lem4507221 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1784 A B a s g t x) = (term1746 A B a s g x t).
Proof. exact (eq_refl (term1784 A B a s g t x)). Qed.
Lemma lem4507222 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1794 A B a s g t) = (term1781 A B a s g t).
Proof. exact (fun_ext (fun x : A => @lem4507221 A B a s g x t)). Qed.
Lemma lem4507223 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507224 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1795 A B a s g t) = (term1796 A B a s g t).
Proof. exact (MK_COMB (@lem4507223 A) (@lem4507222 A B a s g t)). Qed.
Lemma lem4507225 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1779 A B b a s g t) = (term1797 A B b a s g t).
Proof. exact (MK_COMB (@lem4507220 A B a b t) (@lem4507224 A B a s g t)). Qed.
Lemma lem4507226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4507227 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1819 A B b a s g t) = (term1820 A B b a s g t).
Proof. exact (MK_COMB (@lem4507226) (@lem4507225 A B b a s g t)). Qed.
Lemma lem4507228 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1782 A B a b t x) = (term1742 A B x a b t).
Proof. exact (eq_refl (term1782 A B a b t x)). Qed.
Lemma lem4507229 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507230 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1783 A B a b t x) = (term1749 A B x a b t).
Proof. exact (MK_COMB (@lem4507229) (@lem4507228 A B x a b t)). Qed.
Lemma lem4507231 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1784 A B a s g t x) = (term1746 A B a s g x t).
Proof. exact (eq_refl (term1784 A B a s g t x)). Qed.
Lemma lem4507232 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1785 A B b a s g t x) = (term1751 A B b a s g x t).
Proof. exact (MK_COMB (@lem4507230 A B x a b t) (@lem4507231 A B a s g x t)). Qed.
Lemma lem4507233 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1786 A B b a s g t) = (term1760 A B b a s g t).
Proof. exact (fun_ext (fun x : A => @lem4507232 A B b a s g x t)). Qed.
Lemma lem4507234 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507235 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1778 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (MK_COMB (@lem4507234 A) (@lem4507233 A B b a s g t)). Qed.
Lemma lem4507236 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : ((term1779 A B b a s g t) = (term1778 A B b a s g t)) = ((term1797 A B b a s g t) = (term1761 A B b a s g t)).
Proof. exact (MK_COMB (@lem4507227 A B b a s g t) (@lem4507235 A B b a s g t)). Qed.
Lemma lem4507237 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1797 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (EQ_MP (@lem4507236 A B b a s g t) (@lem4507214 A B b a s g t)). Qed.
Lemma lem4507238 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1814 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (TRANS (@lem4507210 A B b a s g t) (@lem4507237 A B b a s g t)). Qed.
Lemma lem4507239 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507240 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1815 A B b a s g t) = (term1775 A B b a s g t).
Proof. exact (MK_COMB (@lem4507239) (@lem4507238 A B b a s g t)). Qed.
Lemma lem4507241 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1773 A B a s g d) = (term1773 A B a s g d).
Proof. exact (eq_refl (term1773 A B a s g d)). Qed.
Lemma lem4507242 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1816 A B b t a s g d) = (term1777 A B b t a s g d).
Proof. exact (MK_COMB (@lem4507240 A B b a s g t) (@lem4507241 A B a s g d)). Qed.
Lemma lem4507244 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem4507245 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1253 A P Q) = (term1252 A P Q).
Proof. exact (@lem4507244 A P Q). Qed.
Lemma lem4507246 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1821 A B b t a s g d) = (term1822 A B b t a s g d).
Proof. exact (@lem4507245 A (term1760 A B b a s g t) (term1772 A B a s g d)). Qed.
Lemma lem4507247 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1823 A B b a s g t x) = (term1751 A B b a s g x t).
Proof. exact (eq_refl (term1823 A B b a s g t x)). Qed.
Lemma lem4507248 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1824 A B b a s g t) = (term1760 A B b a s g t).
Proof. exact (fun_ext (fun x : A => @lem4507247 A B b a s g x t)). Qed.
Lemma lem4507249 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507250 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1825 A B b a s g t) = (term1761 A B b a s g t).
Proof. exact (MK_COMB (@lem4507249 A) (@lem4507248 A B b a s g t)). Qed.
Lemma lem4507251 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507252 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1826 A B b a s g t) = (term1775 A B b a s g t).
Proof. exact (MK_COMB (@lem4507251) (@lem4507250 A B b a s g t)). Qed.
Lemma lem4507253 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1827 A B a s g d x) = (term1765 A B a s g x d).
Proof. exact (eq_refl (term1827 A B a s g d x)). Qed.
Lemma lem4507254 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1828 A B a s g d) = (term1772 A B a s g d).
Proof. exact (fun_ext (fun x : A => @lem4507253 A B a s g x d)). Qed.
Lemma lem4507255 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507256 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1829 A B a s g d) = (term1773 A B a s g d).
Proof. exact (MK_COMB (@lem4507255 A) (@lem4507254 A B a s g d)). Qed.
Lemma lem4507257 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1821 A B b t a s g d) = (term1777 A B b t a s g d).
Proof. exact (MK_COMB (@lem4507252 A B b a s g t) (@lem4507256 A B a s g d)). Qed.
Lemma lem4507258 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4507259 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1830 A B b t a s g d) = (term1831 A B b t a s g d).
Proof. exact (MK_COMB (@lem4507258) (@lem4507257 A B b t a s g d)). Qed.
Lemma lem4507260 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1823 A B b a s g t x) = (term1751 A B b a s g x t).
Proof. exact (eq_refl (term1823 A B b a s g t x)). Qed.
Lemma lem4507261 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507262 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1832 A B b a s g t x) = (term1833 A B b a s g x t).
Proof. exact (MK_COMB (@lem4507261) (@lem4507260 A B b a s g x t)). Qed.
Lemma lem4507263 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1827 A B a s g d x) = (term1765 A B a s g x d).
Proof. exact (eq_refl (term1827 A B a s g d x)). Qed.
Lemma lem4507264 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1834 A B b t a s g d x) = (term1835 A B b t a s g x d).
Proof. exact (MK_COMB (@lem4507262 A B b a s g x t) (@lem4507263 A B a s g x d)). Qed.
Lemma lem4507265 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1836 A B b t a s g d) = (term1837 A B b t a s g d).
Proof. exact (fun_ext (fun x : A => @lem4507264 A B b t a s g x d)). Qed.
Lemma lem4507266 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4507267 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1822 A B b t a s g d) = (term1838 A B b t a s g d).
Proof. exact (MK_COMB (@lem4507266 A) (@lem4507265 A B b t a s g d)). Qed.
Lemma lem4507268 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : ((term1821 A B b t a s g d) = (term1822 A B b t a s g d)) = ((term1777 A B b t a s g d) = (term1838 A B b t a s g d)).
Proof. exact (MK_COMB (@lem4507259 A B b t a s g d) (@lem4507267 A B b t a s g d)). Qed.
Lemma lem4507269 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1777 A B b t a s g d) = (term1838 A B b t a s g d).
Proof. exact (EQ_MP (@lem4507268 A B b t a s g d) (@lem4507246 A B b t a s g d)). Qed.
Lemma lem4507270 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1816 A B b t a s g d) = (term1838 A B b t a s g d).
Proof. exact (TRANS (@lem4507242 A B b t a s g d) (@lem4507269 A B b t a s g d)). Qed.
Lemma lem4507271 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1777 A B b t a s g d) = (term1838 A B b t a s g d).
Proof. exact (TRANS (@lem4507182 A B b t a s g d) (@lem4507270 A B b t a s g d)). Qed.
Lemma lem4507272 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) : (term1734 A B b t a s g d) = (term1838 A B b t a s g d).
Proof. exact (TRANS (@lem4507002 A B b t a s g d) (@lem4507271 A B b t a s g d)). Qed.
Lemma lem4507273 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term1734 A B b t a s g d) : term1838 A B b t a s g d.
Proof. exact (EQ_MP (@lem4507272 A B b t a s g d) (@lem4505292 A B b t a s g d h1)). Qed.
Lemma lem4507274 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1835 A B b t a s g x d) : term1835 A B b t a s g x d.
Proof. exact (h1). Qed.
Lemma lem4507588 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507589 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4507588 B (type686 B) f x). Qed.
Lemma lem4507590 {B : Type'} (b : B) : (@IN B b) = (@I (B -> (B -> Prop) -> Prop) (@IN B) b).
Proof. exact (@lem4507589 B (@IN B) b). Qed.
Lemma lem4507591 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507592 {B : Type'} (b : B) (t : B -> Prop) : (@IN B b t) = (@I (B -> (B -> Prop) -> Prop) (@IN B) b t).
Proof. exact (MK_COMB (@lem4507590 B b) (@lem4507591 B t)). Qed.
Lemma lem4507594 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507595 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4507594 (B -> Prop) Prop f x). Qed.
Lemma lem4507596 {B : Type'} (b : B) (t : B -> Prop) : (@I (B -> (B -> Prop) -> Prop) (@IN B) b t) = (term1322 B b t).
Proof. exact (@lem4507595 B (@I (B -> (B -> Prop) -> Prop) (@IN B) b) t). Qed.
Lemma lem4507598 {B : Type'} (b : B) (t : B -> Prop) : (@IN B b t) = (term1322 B b t).
Proof. exact (TRANS (@lem4507592 B b t) (@lem4507596 B b t)). Qed.
Lemma lem4507600 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4507605 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507606 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4507605 A B f x). Qed.
Lemma lem4507608 {A B : Type'} (g : A -> B) (x : A) : (g x) = (@I (A -> B) g x).
Proof. exact (@lem4507606 A B g x). Qed.
Lemma lem4507609 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507610 {A B : Type'} (g : A -> B) (x : A) : (term828 A B g x) = (term1317 A B g x).
Proof. exact (MK_COMB (@lem4507600 B) (@lem4507608 A B g x)). Qed.
Lemma lem4507611 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term169 A B g x t) = (term1318 A B g x t).
Proof. exact (MK_COMB (@lem4507610 A B g x) (@lem4507609 B t)). Qed.
Lemma lem4507613 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507614 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4507613 B (type686 B) f x). Qed.
Lemma lem4507615 {A B : Type'} (g : A -> B) (x : A) : (term1317 A B g x) = (term1319 A B g x).
Proof. exact (@lem4507614 B (@IN B) (@I (A -> B) g x)). Qed.
Lemma lem4507616 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507617 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1318 A B g x t) = (term1320 A B g x t).
Proof. exact (MK_COMB (@lem4507615 A B g x) (@lem4507616 B t)). Qed.
Lemma lem4507619 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507620 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4507619 (B -> Prop) Prop f x). Qed.
Lemma lem4507621 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1320 A B g x t) = (term1321 A B g x t).
Proof. exact (@lem4507620 B (term1319 A B g x) t). Qed.
Lemma lem4507622 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1318 A B g x t) = (term1321 A B g x t).
Proof. exact (TRANS (@lem4507617 A B g x t) (@lem4507621 A B g x t)). Qed.
Lemma lem4507623 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term169 A B g x t) = (term1321 A B g x t).
Proof. exact (TRANS (@lem4507611 A B g x t) (@lem4507622 A B g x t)). Qed.
Lemma lem4507624 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4507631 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507632 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4507631 A (type686 A) f x). Qed.
Lemma lem4507633 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4507632 A (@IN A) x). Qed.
Lemma lem4507634 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4507635 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4507633 A x) (@lem4507634 A s)). Qed.
Lemma lem4507637 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507638 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4507637 (A -> Prop) Prop f x). Qed.
Lemma lem4507639 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4507638 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4507641 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4507635 A x s) (@lem4507639 A x s)). Qed.
Lemma lem4507642 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4507624) (@lem4507641 A x s)). Qed.
Lemma lem4507643 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507644 {A : Type'} (x : A) (s : A -> Prop) : (term1839 A x s) = (term1840 A x s).
Proof. exact (MK_COMB (@lem4507643) (@lem4507642 A x s)). Qed.
Lemma lem4507645 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term836 A B s g x t) = (term1368 A B s g x t).
Proof. exact (MK_COMB (@lem4507644 A x s) (@lem4507623 A B g x t)). Qed.
Lemma lem4507646 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term837 A B s g t) = (term1841 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4507645 A B s g x t)). Qed.
Lemma lem4507647 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4507648 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term838 A B s g t) = (term1842 A B s g t).
Proof. exact (MK_COMB (@lem4507647 A) (@lem4507646 A B s g t)). Qed.
Lemma lem4507649 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1842 A B s g t.
Proof. exact (EQ_MP (@lem4507648 A B s g t) (@lem4506872 A B s g t h1)). Qed.
Lemma lem4507650 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4507655 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507656 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4507655 A B f x). Qed.
Lemma lem4507658 {A B : Type'} (g : A -> B) (x : A) : (g x) = (@I (A -> B) g x).
Proof. exact (@lem4507656 A B g x). Qed.
Lemma lem4507659 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4507660 {A B : Type'} (g : A -> B) (x : A) : (term262 A B g x) = (term1330 A B g x).
Proof. exact (MK_COMB (@lem4507650 B) (@lem4507658 A B g x)). Qed.
Lemma lem4507661 {A B : Type'} (g : A -> B) (x : A) (d : B) : ((g x) = d) = ((@I (A -> B) g x) = d).
Proof. exact (MK_COMB (@lem4507660 A B g x) (@lem4507659 B d)). Qed.
Lemma lem4507668 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507669 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4507668 A (type686 A) f x). Qed.
Lemma lem4507670 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4507669 A (@IN A) x). Qed.
Lemma lem4507671 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4507672 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4507670 A x) (@lem4507671 A s)). Qed.
Lemma lem4507674 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507675 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4507674 (A -> Prop) Prop f x). Qed.
Lemma lem4507676 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4507675 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4507678 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4507672 A x s) (@lem4507676 A x s)). Qed.
Lemma lem4507679 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507680 {A : Type'} (x : A) (s : A -> Prop) : (term1736 A x s) = (term1843 A x s).
Proof. exact (MK_COMB (@lem4507679) (@lem4507678 A x s)). Qed.
Lemma lem4507681 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1738 A B s g x d) = (term1376 A B s g x d).
Proof. exact (MK_COMB (@lem4507680 A x s) (@lem4507661 A B g x d)). Qed.
Lemma lem4507682 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1739 A B s g d) = (term1844 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4507681 A B s g x d)). Qed.
Lemma lem4507683 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4507684 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1740 A B s g d) = (term1845 A B s g d).
Proof. exact (MK_COMB (@lem4507683 A) (@lem4507682 A B s g d)). Qed.
Lemma lem4507685 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1845 A B s g d.
Proof. exact (EQ_MP (@lem4507684 A B s g d) (@lem4506937 A B s g d h1)). Qed.
Lemma lem4507686 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4507687 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4507692 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507693 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4507692 A B f x). Qed.
Lemma lem4507695 {A B : Type'} (g : A -> B) (x : A) : (g x) = (@I (A -> B) g x).
Proof. exact (@lem4507693 A B g x). Qed.
Lemma lem4507696 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4507697 {A B : Type'} (g : A -> B) (x : A) : (term262 A B g x) = (term1330 A B g x).
Proof. exact (MK_COMB (@lem4507687 B) (@lem4507695 A B g x)). Qed.
Lemma lem4507698 {A B : Type'} (g : A -> B) (x : A) (d : B) : ((g x) = d) = ((@I (A -> B) g x) = d).
Proof. exact (MK_COMB (@lem4507697 A B g x) (@lem4507696 B d)). Qed.
Lemma lem4507699 {A B : Type'} (g : A -> B) (x : A) (d : B) : (term1339 A B g x d) = (term1340 A B g x d).
Proof. exact (MK_COMB (@lem4507686) (@lem4507698 A B g x d)). Qed.
Lemma lem4507700 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4507707 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507708 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4507707 A (type686 A) f x). Qed.
Lemma lem4507709 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4507708 A (@IN A) x). Qed.
Lemma lem4507710 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4507711 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4507709 A x) (@lem4507710 A s)). Qed.
Lemma lem4507713 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507714 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4507713 (A -> Prop) Prop f x). Qed.
Lemma lem4507715 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4507714 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4507717 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4507711 A x s) (@lem4507715 A x s)). Qed.
Lemma lem4507718 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4507700) (@lem4507717 A x s)). Qed.
Lemma lem4507719 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507720 {A : Type'} (x : A) (s : A -> Prop) : (term1212 A x s) = (term1346 A x s).
Proof. exact (MK_COMB (@lem4507719) (@lem4507718 A x s)). Qed.
Lemma lem4507721 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1763 A B s g x d) = (term1846 A B s g x d).
Proof. exact (MK_COMB (@lem4507720 A x s) (@lem4507699 A B g x d)). Qed.
Lemma lem4507730 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4507731 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1765 A B a s g x d) = (term1847 A B a s g x d).
Proof. exact (MK_COMB (@lem4507730 A x a) (@lem4507721 A B s g x d)). Qed.
Lemma lem4507732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4507733 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4507738 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507739 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4507738 A B f x). Qed.
Lemma lem4507741 {A B : Type'} (g : A -> B) (x : A) : (g x) = (@I (A -> B) g x).
Proof. exact (@lem4507739 A B g x). Qed.
Lemma lem4507742 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507743 {A B : Type'} (g : A -> B) (x : A) : (term828 A B g x) = (term1317 A B g x).
Proof. exact (MK_COMB (@lem4507733 B) (@lem4507741 A B g x)). Qed.
Lemma lem4507744 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term169 A B g x t) = (term1318 A B g x t).
Proof. exact (MK_COMB (@lem4507743 A B g x) (@lem4507742 B t)). Qed.
Lemma lem4507746 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507747 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4507746 B (type686 B) f x). Qed.
Lemma lem4507748 {A B : Type'} (g : A -> B) (x : A) : (term1317 A B g x) = (term1319 A B g x).
Proof. exact (@lem4507747 B (@IN B) (@I (A -> B) g x)). Qed.
Lemma lem4507749 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507750 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1318 A B g x t) = (term1320 A B g x t).
Proof. exact (MK_COMB (@lem4507748 A B g x) (@lem4507749 B t)). Qed.
Lemma lem4507752 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507753 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4507752 (B -> Prop) Prop f x). Qed.
Lemma lem4507754 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1320 A B g x t) = (term1321 A B g x t).
Proof. exact (@lem4507753 B (term1319 A B g x) t). Qed.
Lemma lem4507755 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1318 A B g x t) = (term1321 A B g x t).
Proof. exact (TRANS (@lem4507750 A B g x t) (@lem4507754 A B g x t)). Qed.
Lemma lem4507756 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term169 A B g x t) = (term1321 A B g x t).
Proof. exact (TRANS (@lem4507744 A B g x t) (@lem4507755 A B g x t)). Qed.
Lemma lem4507757 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1232 A B g x t) = (term1336 A B g x t).
Proof. exact (MK_COMB (@lem4507732) (@lem4507756 A B g x t)). Qed.
Lemma lem4507764 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507765 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4507764 A (type686 A) f x). Qed.
Lemma lem4507766 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4507765 A (@IN A) x). Qed.
Lemma lem4507767 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4507768 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4507766 A x) (@lem4507767 A s)). Qed.
Lemma lem4507770 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507771 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4507770 (A -> Prop) Prop f x). Qed.
Lemma lem4507772 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4507771 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4507774 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4507768 A x s) (@lem4507772 A x s)). Qed.
Lemma lem4507775 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4507776 {A : Type'} (x : A) (s : A -> Prop) : (term512 A x s) = (term1337 A x s).
Proof. exact (MK_COMB (@lem4507775) (@lem4507774 A x s)). Qed.
Lemma lem4507777 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1239 A B s g x t) = (term1338 A B s g x t).
Proof. exact (MK_COMB (@lem4507776 A x s) (@lem4507757 A B g x t)). Qed.
Lemma lem4507786 {A : Type'} (x : A) (a : A) : (term1324 A x a) = (term1324 A x a).
Proof. exact (eq_refl (term1324 A x a)). Qed.
Lemma lem4507787 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1746 A B a s g x t) = (term1848 A B a s g x t).
Proof. exact (MK_COMB (@lem4507786 A x a) (@lem4507777 A B s g x t)). Qed.
Lemma lem4507788 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4507795 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507796 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4507795 B (type686 B) f x). Qed.
Lemma lem4507797 {B : Type'} (b : B) : (@IN B b) = (@I (B -> (B -> Prop) -> Prop) (@IN B) b).
Proof. exact (@lem4507796 B (@IN B) b). Qed.
Lemma lem4507798 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4507799 {B : Type'} (b : B) (t : B -> Prop) : (@IN B b t) = (@I (B -> (B -> Prop) -> Prop) (@IN B) b t).
Proof. exact (MK_COMB (@lem4507797 B b) (@lem4507798 B t)). Qed.
Lemma lem4507801 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4507802 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4507801 (B -> Prop) Prop f x). Qed.
Lemma lem4507803 {B : Type'} (b : B) (t : B -> Prop) : (@I (B -> (B -> Prop) -> Prop) (@IN B) b t) = (term1322 B b t).
Proof. exact (@lem4507802 B (@I (B -> (B -> Prop) -> Prop) (@IN B) b) t). Qed.
Lemma lem4507805 {B : Type'} (b : B) (t : B -> Prop) : (@IN B b t) = (term1322 B b t).
Proof. exact (TRANS (@lem4507799 B b t) (@lem4507803 B b t)). Qed.
Lemma lem4507806 {B : Type'} (b : B) (t : B -> Prop) : (term178 B b t) = (term1323 B b t).
Proof. exact (MK_COMB (@lem4507788) (@lem4507805 B b t)). Qed.
Lemma lem4507813 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4507814 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1742 A B x a b t) = (term1849 A B x a b t).
Proof. exact (MK_COMB (@lem4507813 A x a) (@lem4507806 B b t)). Qed.
Lemma lem4507815 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507816 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) : (term1749 A B x a b t) = (term1850 A B x a b t).
Proof. exact (MK_COMB (@lem4507815) (@lem4507814 A B x a b t)). Qed.
Lemma lem4507817 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1751 A B b a s g x t) = (term1851 A B b a s g x t).
Proof. exact (MK_COMB (@lem4507816 A B x a b t) (@lem4507787 A B a s g x t)). Qed.
Lemma lem4507818 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4507819 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1833 A B b a s g x t) = (term1852 A B b a s g x t).
Proof. exact (MK_COMB (@lem4507818) (@lem4507817 A B b a s g x t)). Qed.
Lemma lem4507820 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1835 A B b t a s g x d) = (term1853 A B b t a s g x d).
Proof. exact (MK_COMB (@lem4507819 A B b a s g x t) (@lem4507731 A B a s g x d)). Qed.
Lemma lem4507821 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1835 A B b t a s g x d) : term1853 A B b t a s g x d.
Proof. exact (EQ_MP (@lem4507820 A B b t a s g x d) (@lem4507274 A B b t a s g x d h1)). Qed.
Lemma lem4508313 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1851 A B b a s g x t) : term1851 A B b a s g x t.
Proof. exact (h1). Qed.
Lemma lem4508314 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1847 A B a s g x d.
Proof. exact (h1). Qed.
Lemma lem4508315 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) : term1849 A B x a b t.
Proof. exact (h1). Qed.
Lemma lem4508316 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1848 A B a s g x t.
Proof. exact (h1). Qed.
Lemma lem4508319 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1338 A B s g x t.
Proof. exact (proj2 (@lem4508316 A B a s g x t h1)). Qed.
Lemma lem4508323 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1846 A B s g x d.
Proof. exact (proj2 (@lem4508314 A B a s g x d h1)). Qed.
Lemma lem4508633 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) : (term1368 A B s g x t) = (term1368 A B s g x t).
Proof. exact (eq_refl (term1368 A B s g x t)). Qed.
Lemma lem4508634 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1841 A B s g t) = (term1841 A B s g t).
Proof. exact (fun_ext (fun x : A => @lem4508633 A B s g x t)). Qed.
Lemma lem4508635 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4508637 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) : (term1842 A B s g t) = (term1842 A B s g t).
Proof. exact (MK_COMB (@lem4508635 A) (@lem4508634 A B s g t)). Qed.
Lemma lem4508638 {A B : Type'} (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1842 A B s g t.
Proof. exact (EQ_MP (@lem4508637 A B s g t) (@lem4507649 A B s g t h1)). Qed.
Lemma lem4508921 {A B : Type'} (s : A -> Prop) (g : A -> B) (x : A) (d : B) : (term1376 A B s g x d) = (term1376 A B s g x d).
Proof. exact (eq_refl (term1376 A B s g x d)). Qed.
Lemma lem4508922 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1844 A B s g d) = (term1844 A B s g d).
Proof. exact (fun_ext (fun x : A => @lem4508921 A B s g x d)). Qed.
Lemma lem4508923 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4508925 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) : (term1845 A B s g d) = (term1845 A B s g d).
Proof. exact (MK_COMB (@lem4508923 A) (@lem4508922 A B s g d)). Qed.
Lemma lem4508926 {A B : Type'} (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1845 A B s g d.
Proof. exact (EQ_MP (@lem4508925 A B s g d) (@lem4507685 A B s g d h1)). Qed.
Lemma lem4509205 {A B : Type'} (_53026 : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1854 A B s g t _53026.
Proof. exact (@lem4508638 A B s g t h1 _53026). Qed.
Lemma lem4509206 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53026 : A) (t : B -> Prop) : (term1854 A B s g t _53026) = (term1368 A B s g _53026 t).
Proof. exact (eq_refl (term1854 A B s g t _53026)). Qed.
Lemma lem4509265 {A B : Type'} (_53046 : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1855 A B s g d _53046.
Proof. exact (@lem4508926 A B s g d h1 _53046). Qed.
Lemma lem4509266 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53046 : A) (d : B) : (term1855 A B s g d _53046) = (term1376 A B s g _53046 d).
Proof. exact (eq_refl (term1855 A B s g d _53046)). Qed.
Lemma lem4510072 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) : term1323 B b t.
Proof. exact (proj2 (@lem4508315 A B x a b t h1)). Qed.
Lemma lem4510394 {A B : Type'} (_53026 : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1368 A B s g _53026 t.
Proof. exact (EQ_MP (@lem4509206 A B s g _53026 t) (@lem4509205 A B _53026 s g t h1)). Qed.
Lemma lem4510506 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1336 A B g x t.
Proof. exact (proj2 (@lem4508319 A B a s g x t h1)). Qed.
Lemma lem4510842 {A B : Type'} (_53046 : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1376 A B s g _53046 d.
Proof. exact (EQ_MP (@lem4509266 A B s g _53046 d) (@lem4509265 A B _53046 s g d h1)). Qed.
Lemma lem4510940 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1340 A B g x d.
Proof. exact (proj2 (@lem4508323 A B a s g x d h1)). Qed.
Lemma lem4511367 {B : Type'} (b : B) (t : B -> Prop) (h1 : @IN B b t) : term1322 B b t.
Proof. exact (EQ_MP (@lem4507598 B b t) (@lem4506809 B b t h1)). Qed.
Lemma lem4511368 {B : Type'} (b : B) (t : B -> Prop) (h1 : @IN B b t) : term1404 B b t.
Proof. exact (fun h0 : term1323 B b t => @lem4511367 B b t h1). Qed.
Lemma lem4511370 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4511371 {B : Type'} (b : B) (t : B -> Prop) : (term1404 B b t) = (term1322 B b t).
Proof. exact (@lem4511370 (term1322 B b t)). Qed.
Lemma lem4511372 {B : Type'} (b : B) (t : B -> Prop) (h1 : @IN B b t) : term1322 B b t.
Proof. exact (EQ_MP (@lem4511371 B b t) (@lem4511368 B b t h1)). Qed.
Lemma lem4511375 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4511377 {B : Type'} (b : B) (t : B -> Prop) : (term1323 B b t) = (term1856 B b t).
Proof. exact (@lem4511375 (term1322 B b t)). Qed.
Lemma lem4511380 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) : term1856 B b t.
Proof. exact (EQ_MP (@lem4511377 B b t) (@lem4510072 A B x a b t h1)). Qed.
Lemma lem4511383 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) (h2 : @IN B b t) : False.
Proof. exact (@lem4511380 A B x a b t h1 (@lem4511372 B b t h2)). Qed.
Lemma lem4511384 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) (h2 : @IN B b t) : term1372.
Proof. exact (fun h0 : ~ False => @lem4511383 A B x a b t h1 h2). Qed.
Lemma lem4511386 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4511387 : term1372 = False.
Proof. exact (@lem4511386 False). Qed.
Lemma lem4511815 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1322 A x s.
Proof. exact (proj1 (@lem4508319 A B a s g x t h1)). Qed.
Lemma lem4511816 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1404 A x s.
Proof. exact (fun h0 : term1323 A x s => @lem4511815 A B a s g x t h1). Qed.
Lemma lem4511818 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4511819 {A : Type'} (x : A) (s : A -> Prop) : (term1404 A x s) = (term1322 A x s).
Proof. exact (@lem4511818 (term1322 A x s)). Qed.
Lemma lem4511820 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1322 A x s.
Proof. exact (EQ_MP (@lem4511819 A x s) (@lem4511816 A B a s g x t h1)). Qed.
Lemma lem4511826 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4511827 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : (term1368 A B s g _53026 t) = (term1405 A B g t _53026 s).
Proof. exact (@lem4511826 (term1321 A B g _53026 t) (term1323 A _53026 s)). Qed.
Lemma lem4511833 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4511834 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : (term1406 A B s g _53026 t) = (term1407 A B g t _53026 s).
Proof. exact (MK_COMB (@lem4511833) (@lem4511827 A B g t _53026 s)). Qed.
Lemma lem4511840 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : (term1405 A B g t _53026 s) = (term1405 A B g t _53026 s).
Proof. exact (eq_refl (term1405 A B g t _53026 s)). Qed.
Lemma lem4511841 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : ((term1368 A B s g _53026 t) = (term1405 A B g t _53026 s)) = ((term1405 A B g t _53026 s) = (term1405 A B g t _53026 s)).
Proof. exact (MK_COMB (@lem4511834 A B g t _53026 s) (@lem4511840 A B g t _53026 s)). Qed.
Lemma lem4511843 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4511844 (x : Prop) : (x = x) = True.
Proof. exact (@lem4511843 Prop x). Qed.
Lemma lem4511845 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : ((term1405 A B g t _53026 s) = (term1405 A B g t _53026 s)) = True.
Proof. exact (@lem4511844 (term1405 A B g t _53026 s)). Qed.
Lemma lem4511846 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : ((term1368 A B s g _53026 t) = (term1405 A B g t _53026 s)) = True.
Proof. exact (TRANS (@lem4511841 A B g t _53026 s) (@lem4511845 A B g t _53026 s)). Qed.
Lemma lem4511847 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : True = ((term1368 A B s g _53026 t) = (term1405 A B g t _53026 s)).
Proof. exact (SYM (@lem4511846 A B g t _53026 s)). Qed.
Lemma lem4511848 {A B : Type'} (g : A -> B) (t : B -> Prop) (_53026 : A) (s : A -> Prop) : (term1368 A B s g _53026 t) = (term1405 A B g t _53026 s).
Proof. exact (EQ_MP (@lem4511847 A B g t _53026 s) (@lem0)). Qed.
Lemma lem4511849 {A B : Type'} (_53026 : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1405 A B g t _53026 s.
Proof. exact (EQ_MP (@lem4511848 A B g t _53026 s) (@lem4510394 A B _53026 s g t h1)). Qed.
Lemma lem4511851 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4511852 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53026 : A) (t : B -> Prop) : (term1405 A B g t _53026 s) = (term1408 A B s g _53026 t).
Proof. exact (@lem4511851 (term1323 A _53026 s) (term1321 A B g _53026 t)). Qed.
Lemma lem4511854 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4511855 {A : Type'} (_53026 : A) (s : A -> Prop) : (term1409 A _53026 s) = (term1322 A _53026 s).
Proof. exact (@lem4511854 (term1322 A _53026 s)). Qed.
Lemma lem4511856 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4511857 {A : Type'} (_53026 : A) (s : A -> Prop) : (term1410 A _53026 s) = (term1411 A _53026 s).
Proof. exact (MK_COMB (@lem4511856) (@lem4511855 A _53026 s)). Qed.
Lemma lem4511858 {A B : Type'} (g : A -> B) (_53026 : A) (t : B -> Prop) : (term1321 A B g _53026 t) = (term1321 A B g _53026 t).
Proof. exact (eq_refl (term1321 A B g _53026 t)). Qed.
Lemma lem4511859 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53026 : A) (t : B -> Prop) : (term1408 A B s g _53026 t) = (term1412 A B s g _53026 t).
Proof. exact (MK_COMB (@lem4511857 A _53026 s) (@lem4511858 A B g _53026 t)). Qed.
Lemma lem4511860 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53026 : A) (t : B -> Prop) : (term1405 A B g t _53026 s) = (term1412 A B s g _53026 t).
Proof. exact (TRANS (@lem4511852 A B s g _53026 t) (@lem4511859 A B s g _53026 t)). Qed.
Lemma lem4511863 {A B : Type'} (_53026 : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1412 A B s g _53026 t.
Proof. exact (EQ_MP (@lem4511860 A B s g _53026 t) (@lem4511849 A B _53026 s g t h1)). Qed.
Lemma lem4511864 {A B : Type'} (_53026 : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1412 A B s g _53026 t.
Proof. exact (@lem4511863 A B _53026 s g t h1). Qed.
Lemma lem4511865 {A B : Type'} (x : A) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term174 A B s g t) : term1412 A B s g x t.
Proof. exact (@lem4511864 A B x s g t h1). Qed.
Lemma lem4511868 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : term1321 A B g x t.
Proof. exact (@lem4511865 A B x s g t h1 (@lem4511820 A B a s g x t h2)). Qed.
Lemma lem4511869 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : term1402 A B g x t.
Proof. exact (fun h0 : term1336 A B g x t => @lem4511868 A B a s g x t h1 h2). Qed.
Lemma lem4511871 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4511872 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1402 A B g x t) = (term1321 A B g x t).
Proof. exact (@lem4511871 (term1321 A B g x t)). Qed.
Lemma lem4511873 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : term1321 A B g x t.
Proof. exact (EQ_MP (@lem4511872 A B g x t) (@lem4511869 A B a s g x t h1 h2)). Qed.
Lemma lem4511876 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4511878 {A B : Type'} (g : A -> B) (x : A) (t : B -> Prop) : (term1336 A B g x t) = (term1403 A B g x t).
Proof. exact (@lem4511876 (term1321 A B g x t)). Qed.
Lemma lem4511881 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term1848 A B a s g x t) : term1403 A B g x t.
Proof. exact (EQ_MP (@lem4511878 A B g x t) (@lem4510506 A B a s g x t h1)). Qed.
Lemma lem4511884 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : False.
Proof. exact (@lem4511881 A B a s g x t h2 (@lem4511873 A B a s g x t h1 h2)). Qed.
Lemma lem4511885 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : term1372.
Proof. exact (fun h0 : ~ False => @lem4511884 A B a s g x t h1 h2). Qed.
Lemma lem4511887 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4511888 : term1372 = False.
Proof. exact (@lem4511887 False). Qed.
Lemma lem4512316 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1323 A x s.
Proof. exact (proj1 (@lem4508323 A B a s g x d h1)). Qed.
Lemma lem4512317 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1375 A x s.
Proof. exact (fun h0 : term1322 A x s => @lem4512316 A B a s g x d h1). Qed.
Lemma lem4512319 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4512320 {A : Type'} (x : A) (s : A -> Prop) : (term1375 A x s) = (term1323 A x s).
Proof. exact (@lem4512319 (term1322 A x s)). Qed.
Lemma lem4512321 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1323 A x s.
Proof. exact (EQ_MP (@lem4512320 A x s) (@lem4512317 A B a s g x d h1)). Qed.
Lemma lem4512327 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4512328 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : (term1376 A B s g _53046 d) = (term1377 A B g d _53046 s).
Proof. exact (@lem4512327 ((@I (A -> B) g _53046) = d) (term1322 A _53046 s)). Qed.
Lemma lem4512336 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4512337 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : (term1857 A B s g _53046 d) = (term1858 A B g d _53046 s).
Proof. exact (MK_COMB (@lem4512336) (@lem4512328 A B g d _53046 s)). Qed.
Lemma lem4512345 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : (term1377 A B g d _53046 s) = (term1377 A B g d _53046 s).
Proof. exact (eq_refl (term1377 A B g d _53046 s)). Qed.
Lemma lem4512346 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : ((term1376 A B s g _53046 d) = (term1377 A B g d _53046 s)) = ((term1377 A B g d _53046 s) = (term1377 A B g d _53046 s)).
Proof. exact (MK_COMB (@lem4512337 A B g d _53046 s) (@lem4512345 A B g d _53046 s)). Qed.
Lemma lem4512348 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4512349 (x : Prop) : (x = x) = True.
Proof. exact (@lem4512348 Prop x). Qed.
Lemma lem4512350 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : ((term1377 A B g d _53046 s) = (term1377 A B g d _53046 s)) = True.
Proof. exact (@lem4512349 (term1377 A B g d _53046 s)). Qed.
Lemma lem4512351 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : ((term1376 A B s g _53046 d) = (term1377 A B g d _53046 s)) = True.
Proof. exact (TRANS (@lem4512346 A B g d _53046 s) (@lem4512350 A B g d _53046 s)). Qed.
Lemma lem4512352 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : True = ((term1376 A B s g _53046 d) = (term1377 A B g d _53046 s)).
Proof. exact (SYM (@lem4512351 A B g d _53046 s)). Qed.
Lemma lem4512353 {A B : Type'} (g : A -> B) (d : B) (_53046 : A) (s : A -> Prop) : (term1376 A B s g _53046 d) = (term1377 A B g d _53046 s).
Proof. exact (EQ_MP (@lem4512352 A B g d _53046 s) (@lem0)). Qed.
Lemma lem4512354 {A B : Type'} (_53046 : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1377 A B g d _53046 s.
Proof. exact (EQ_MP (@lem4512353 A B g d _53046 s) (@lem4510842 A B _53046 s g d h1)). Qed.
Lemma lem4512356 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4512359 {A B : Type'} (s : A -> Prop) (g : A -> B) (_53046 : A) (d : B) : (term1377 A B g d _53046 s) = (term1859 A B s g _53046 d).
Proof. exact (@lem4512356 (term1322 A _53046 s) ((@I (A -> B) g _53046) = d)). Qed.
Lemma lem4512362 {A B : Type'} (_53046 : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1859 A B s g _53046 d.
Proof. exact (EQ_MP (@lem4512359 A B s g _53046 d) (@lem4512354 A B _53046 s g d h1)). Qed.
Lemma lem4512363 {A B : Type'} (_53046 : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1859 A B s g _53046 d.
Proof. exact (@lem4512362 A B _53046 s g d h1). Qed.
Lemma lem4512364 {A B : Type'} (x : A) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term184 A B s g d) : term1859 A B s g x d.
Proof. exact (@lem4512363 A B x s g d h1). Qed.
Lemma lem4512367 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : (@I (A -> B) g x) = d.
Proof. exact (@lem4512364 A B x s g d h1 (@lem4512321 A B a s g x d h2)). Qed.
Lemma lem4512368 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : term1390 A B g x d.
Proof. exact (fun h0 : term1340 A B g x d => @lem4512367 A B a s g x d h1 h2). Qed.
Lemma lem4512370 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4512371 {A B : Type'} (g : A -> B) (x : A) (d : B) : (term1390 A B g x d) = ((@I (A -> B) g x) = d).
Proof. exact (@lem4512370 ((@I (A -> B) g x) = d)). Qed.
Lemma lem4512372 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : (@I (A -> B) g x) = d.
Proof. exact (EQ_MP (@lem4512371 A B g x d) (@lem4512368 A B a s g x d h1 h2)). Qed.
Lemma lem4512375 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4512377 {A B : Type'} (g : A -> B) (x : A) (d : B) : (term1340 A B g x d) = (term1391 A B g x d).
Proof. exact (@lem4512375 ((@I (A -> B) g x) = d)). Qed.
Lemma lem4512380 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term1847 A B a s g x d) : term1391 A B g x d.
Proof. exact (EQ_MP (@lem4512377 A B g x d) (@lem4510940 A B a s g x d h1)). Qed.
Lemma lem4512383 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : False.
Proof. exact (@lem4512380 A B a s g x d h2 (@lem4512372 A B a s g x d h1 h2)). Qed.
Lemma lem4512384 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : term1372.
Proof. exact (fun h0 : ~ False => @lem4512383 A B a s g x d h1 h2). Qed.
Lemma lem4512386 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4512387 : term1372 = False.
Proof. exact (@lem4512386 False). Qed.
Lemma lem4512390 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term1847 A B a s g x d) : False.
Proof. exact (EQ_MP (@lem4512387) (@lem4512384 A B a s g x d h1 h2)). Qed.
Lemma lem4512392 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term1848 A B a s g x t) : False.
Proof. exact (EQ_MP (@lem4511888) (@lem4511885 A B a s g x t h1 h2)). Qed.
Lemma lem4512395 {A B : Type'} (x : A) (a : A) (b : B) (t : B -> Prop) (h1 : term1849 A B x a b t) (h2 : @IN B b t) : False.
Proof. exact (EQ_MP (@lem4511387) (@lem4511384 A B x a b t h1 h2)). Qed.
Lemma lem4512396 {A B : Type'} (b : B) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : @IN B b t) (h3 : term1851 A B b a s g x t) : False.
Proof. exact (or_elim (@lem4508313 A B b a s g x t h3) (fun h0 : term1849 A B x a b t => @lem4512395 A B x a b t h0 h2) (fun h0 : term1848 A B a s g x t => @lem4512392 A B a s g x t h1 h0)). Qed.
Lemma lem4512397 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : @IN B b t) (h4 : term1835 A B b t a s g x d) : False.
Proof. exact (or_elim (@lem4507821 A B b t a s g x d h4) (fun h0 : term1851 A B b a s g x t => @lem4512396 A B b a s g x t h2 h3 h0) (fun h0 : term1847 A B a s g x d => @lem4512390 A B a s g x d h1 h0)). Qed.
Lemma lem4512398 {A B : Type'} (_53005 : type839 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (x : A) (d : B) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : @IN B b t) (h5 : term1835 A B b t a s g x d) : False.
Proof. exact (ex_elim (@lem4506767 A B _53005 h3) (fun f' : type838 A B => fun h0 : term1176 A B _53005 f' => @lem4512397 A B b t a s g x d h1 h2 h4 h5)). Qed.
Lemma lem4512399 {A B : Type'} (_53005 : type839 A B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : term1734 A B b t a s g d) (h5 : @IN B b t) : False.
Proof. exact (ex_elim (@lem4507273 A B b t a s g d h4) (fun x : A => fun h0 : term1837 A B b t a s g d x => @lem4512398 A B _53005 b t a s g x d h1 h2 h3 h5 h0)). Qed.
Lemma lem4512400 {A B : Type'} (_53005 : type839 A B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : term1734 A B b t a s g d) (h5 : @IN B b t) : (@IN B b t) = False.
Proof. exact (prop_ext (fun h6 : @IN B b t => @lem4512399 A B _53005 a s g d b t h1 h2 h3 h4 h5) (fun h6 : False => @lem4506809 B b t h5)). Qed.
Lemma lem4512401 {A B : Type'} (_53005 : type839 A B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : term1734 A B b t a s g d) (h5 : @IN B b t) : False.
Proof. exact (EQ_MP (@lem4512400 A B _53005 a s g d b t h1 h2 h3 h4 h5) (@lem4506809 B b t h5)). Qed.
Lemma lem4512402 {A B : Type'} (_53005 : type839 A B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : term1734 A B b t a s g d) (h5 : @IN B b t) : (term1734 A B b t a s g d) = False.
Proof. exact (prop_ext (fun h6 : term1734 A B b t a s g d => @lem4512401 A B _53005 a s g d b t h1 h2 h3 h4 h5) (fun h6 : False => @lem4505292 A B b t a s g d h4)). Qed.
Lemma lem4512403 {A B : Type'} (_53005 : type839 A B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : term1734 A B b t a s g d) (h5 : @IN B b t) : False.
Proof. exact (EQ_MP (@lem4512402 A B _53005 a s g d b t h1 h2 h3 h4 h5) (@lem4505292 A B b t a s g d h4)). Qed.
Lemma lem4512404 {A B : Type'} (a : A) (d : B) (s : A -> Prop) (g : A -> B) (_53005 : type839 A B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : @IN B b t) : term1733 A B b t a s g d.
Proof. exact (fun h0 : term1734 A B b t a s g d => @lem4512403 A B _53005 a s g d b t h1 h2 h3 h0 h4). Qed.
Lemma lem4512405 {A B : Type'} (a : A) (d : B) (s : A -> Prop) (g : A -> B) (_53005 : type839 A B) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term805 A B _53005) (h4 : @IN B b t) : term1683 A B b t a s g d.
Proof. exact (EQ_MP (@lem4505291 A B b t a s g d) (@lem4512404 A B a d s g _53005 b t h1 h2 h3 h4)). Qed.
Lemma lem4512406 {A B : Type'} (a : A) (d : B) (s : A -> Prop) (g : A -> B) (_53005 : type839 A B) (b : B) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term805 A B _53005) (h3 : @IN B b t) : term1684 A B b t a s g d.
Proof. exact (fun h0 : term184 A B s g d => @lem4512405 A B a d s g _53005 b t h0 h1 h2 h3). Qed.
Lemma lem4512407 {A B : Type'} (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (b : B) (t : B -> Prop) (h1 : term805 A B _53005) (h2 : @IN B b t) : term1685 A B b t a s g d.
Proof. exact (fun h0 : term174 A B s g t => @lem4512406 A B a d s g _53005 b t h0 h1 h2). Qed.
Lemma lem4512408 {A B : Type'} (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1686 A B b t a s g d.
Proof. exact (fun h0 : @IN B b t => @lem4512407 A B a s g d _53005 b t h1 h0). Qed.
Lemma lem4512409 {A B : Type'} (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1687 A B f _53006 b t a s g d.
Proof. exact (fun h0 : f = (_53006 a b g) => @lem4512408 A B b t a s g d _53005 h1). Qed.
Lemma lem4512410 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1688 A B _53005 n m f _53006 b t a s g d.
Proof. exact (fun h0 : term715 A B _53005 t s d n m => @lem4512409 A B f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512411 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1689 A B _53005 n m f _53006 b t a s g d.
Proof. exact (fun h0 : @HAS_SIZE B t n => @lem4512410 A B n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512412 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1690 A B s0 _53005 n m f _53006 b t a s g d.
Proof. exact (fun h0 : s0 = (@INSERT A a s) => @lem4512411 A B n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512413 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1691 A B s0 _53005 n m f _53006 b t a s g d.
Proof. exact (fun h0 : term178 A a s => @lem4512412 A B s0 n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512414 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1692 A B s0 _53005 n m f _53006 b t a s g d.
Proof. exact (fun h0 : @HAS_SIZE A s m => @lem4512413 A B s0 n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512419 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1694 A B _53005 n m f _53006 b t a s g d.
Proof. exact (fun s0 : A -> Prop => @lem4512414 A B s0 n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512424 {A B : Type'} (m : nat) (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1696 A B _53005 m f _53006 b t a s g d.
Proof. exact (fun n : nat => @lem4512419 A B n m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512429 {A B : Type'} (f : A -> B) (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1698 A B _53005 f _53006 b t a s g d.
Proof. exact (fun m : nat => @lem4512424 A B m f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512434 {A B : Type'} (_53006 : type1403 A B) (b : B) (t : B -> Prop) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1700 A B _53005 _53006 b t a s g d.
Proof. exact (fun f : A -> B => @lem4512429 A B f _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512439 {A B : Type'} (_53006 : type1403 A B) (b : B) (a : A) (s : A -> Prop) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1702 A B _53005 _53006 b a s g d.
Proof. exact (fun t : B -> Prop => @lem4512434 A B _53006 b t a s g d _53005 h1). Qed.
Lemma lem4512444 {A B : Type'} (_53006 : type1403 A B) (b : B) (a : A) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1704 A B _53005 _53006 b a g d.
Proof. exact (fun s : A -> Prop => @lem4512439 A B _53006 b a s g d _53005 h1). Qed.
Lemma lem4512449 {A B : Type'} (_53006 : type1403 A B) (b : B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1706 A B _53005 _53006 b g d.
Proof. exact (fun a : A => @lem4512444 A B _53006 b a g d _53005 h1). Qed.
Lemma lem4512454 {A B : Type'} (_53006 : type1403 A B) (g : A -> B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1708 A B _53005 _53006 g d.
Proof. exact (fun b : B => @lem4512449 A B _53006 b g d _53005 h1). Qed.
Lemma lem4512459 {A B : Type'} (_53006 : type1403 A B) (d : B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1710 A B _53005 _53006 d.
Proof. exact (fun g : A -> B => @lem4512454 A B _53006 g d _53005 h1). Qed.
Lemma lem4512464 {A B : Type'} (_53006 : type1403 A B) (_53005 : type839 A B) (h1 : term805 A B _53005) : term1712 A B _53005 _53006.
Proof. exact (fun d : B => @lem4512459 A B _53006 d _53005 h1). Qed.
Lemma lem4512465 {A B : Type'} (_53005 : type839 A B) (_53006 : type1403 A B) : term1713 A B _53005 _53006.
Proof. exact (fun h0 : term805 A B _53005 => @lem4512464 A B _53006 _53005 h0). Qed.
Lemma lem4512470 {A B : Type'} (_53006 : type1403 A B) : term1715 A B _53006.
Proof. exact (fun _53005 : type839 A B => @lem4512465 A B _53005 _53006). Qed.
Lemma lem4512471 {A B : Type'} (_53006 : type1403 A B) : term1730 A B _53006.
Proof. exact (fun h0 : term1728 A B _53006 => @lem4512470 A B _53006). Qed.
Lemma lem4512476 {A B : Type'} : term1732 A B.
Proof. exact (fun _53006 : type1403 A B => @lem4512471 A B _53006). Qed.
Lemma lem4512477 {A B : Type'} : term1507 A B.
Proof. exact (EQ_MP (@lem4505276 A B) (@lem4512476 A B)). Qed.
Lemma lem4512478 {A B : Type'} (d : B) : term1860 A B d.
Proof. exact (@lem4512477 A B d). Qed.
Lemma lem4512479 {A B : Type'} (d : B) : (term1860 A B d) = (term1503 A B d).
Proof. exact (eq_refl (term1860 A B d)). Qed.
Lemma lem4512480 {A B : Type'} (d : B) : term1503 A B d.
Proof. exact (EQ_MP (@lem4512479 A B d) (@lem4512478 A B d)). Qed.
Lemma lem4512481 {A B : Type'} (d : B) (g : A -> B) : term1861 A B d g.
Proof. exact (@lem4512480 A B d g). Qed.
Lemma lem4512482 {A B : Type'} (g : A -> B) (d : B) : (term1861 A B d g) = (term1499 A B g d).
Proof. exact (eq_refl (term1861 A B d g)). Qed.
Lemma lem4512483 {A B : Type'} (g : A -> B) (d : B) : term1499 A B g d.
Proof. exact (EQ_MP (@lem4512482 A B g d) (@lem4512481 A B d g)). Qed.
Lemma lem4512484 {A B : Type'} (g : A -> B) (d : B) (b : B) : term1862 A B g d b.
Proof. exact (@lem4512483 A B g d b). Qed.
Lemma lem4512485 {A B : Type'} (b : B) (g : A -> B) (d : B) : (term1862 A B g d b) = (term1495 A B b g d).
Proof. exact (eq_refl (term1862 A B g d b)). Qed.
Lemma lem4512486 {A B : Type'} (b : B) (g : A -> B) (d : B) : term1495 A B b g d.
Proof. exact (EQ_MP (@lem4512485 A B b g d) (@lem4512484 A B g d b)). Qed.
Lemma lem4512487 {A B : Type'} (b : B) (g : A -> B) (d : B) (a : A) : term1863 A B b g d a.
Proof. exact (@lem4512486 A B b g d a). Qed.
Lemma lem4512488 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) : (term1863 A B b g d a) = (term1491 A B a b g d).
Proof. exact (eq_refl (term1863 A B b g d a)). Qed.
Lemma lem4512489 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) : term1491 A B a b g d.
Proof. exact (EQ_MP (@lem4512488 A B a b g d) (@lem4512487 A B b g d a)). Qed.
Lemma lem4512490 {A B : Type'} (a : A) (b : B) (g : A -> B) (d : B) (s : A -> Prop) : term1864 A B a b g d s.
Proof. exact (@lem4512489 A B a b g d s). Qed.
Lemma lem4512491 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1864 A B a b g d s) = (term1487 A B s a b g d).
Proof. exact (eq_refl (term1864 A B a b g d s)). Qed.
Lemma lem4512492 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1487 A B s a b g d.
Proof. exact (EQ_MP (@lem4512491 A B s a b g d) (@lem4512490 A B a b g d s)). Qed.
Lemma lem4512493 {A B : Type'} (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (t : B -> Prop) : term1865 A B s a b g d t.
Proof. exact (@lem4512492 A B s a b g d t). Qed.
Lemma lem4512494 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1865 A B s a b g d t) = (term1483 A B t s a b g d).
Proof. exact (eq_refl (term1865 A B s a b g d t)). Qed.
Lemma lem4512495 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1483 A B t s a b g d.
Proof. exact (EQ_MP (@lem4512494 A B t s a b g d) (@lem4512493 A B s a b g d t)). Qed.
Lemma lem4512496 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (f : A -> B) : term1866 A B t s a b g d f.
Proof. exact (@lem4512495 A B t s a b g d f). Qed.
Lemma lem4512497 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1866 A B t s a b g d f) = (term1479 A B f t s a b g d).
Proof. exact (eq_refl (term1866 A B t s a b g d f)). Qed.
Lemma lem4512498 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1479 A B f t s a b g d.
Proof. exact (EQ_MP (@lem4512497 A B f t s a b g d) (@lem4512496 A B t s a b g d f)). Qed.
Lemma lem4512499 {A B : Type'} (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (m : nat) : term1867 A B f t s a b g d m.
Proof. exact (@lem4512498 A B f t s a b g d m). Qed.
Lemma lem4512500 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1867 A B f t s a b g d m) = (term1475 A B m f t s a b g d).
Proof. exact (eq_refl (term1867 A B f t s a b g d m)). Qed.
Lemma lem4512501 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1475 A B m f t s a b g d.
Proof. exact (EQ_MP (@lem4512500 A B m f t s a b g d) (@lem4512499 A B f t s a b g d m)). Qed.
Lemma lem4512502 {A B : Type'} (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (n : nat) : term1868 A B m f t s a b g d n.
Proof. exact (@lem4512501 A B m f t s a b g d n). Qed.
Lemma lem4512503 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1868 A B m f t s a b g d n) = (term1471 A B n m f t s a b g d).
Proof. exact (eq_refl (term1868 A B m f t s a b g d n)). Qed.
Lemma lem4512504 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1471 A B n m f t s a b g d.
Proof. exact (EQ_MP (@lem4512503 A B n m f t s a b g d) (@lem4512502 A B m f t s a b g d n)). Qed.
Lemma lem4512505 {A B : Type'} (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (s0 : A -> Prop) : term1869 A B n m f t s a b g d s0.
Proof. exact (@lem4512504 A B n m f t s a b g d s0). Qed.
Lemma lem4512506 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : (term1869 A B n m f t s a b g d s0) = (term1444 A B s0 n m f t s a b g d).
Proof. exact (eq_refl (term1869 A B n m f t s a b g d s0)). Qed.
Lemma lem4512507 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1444 A B s0 n m f t s a b g d.
Proof. exact (EQ_MP (@lem4512506 A B s0 n m f t s a b g d) (@lem4512505 A B n m f t s a b g d s0)). Qed.
Lemma lem4512509 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (a : A) (b : B) (g : A -> B) (d : B) : term1444 A B s0 n m f t s a b g d.
Proof. exact (@lem4503563 A B s0 n m f t s a b g d (@lem4512507 A B s0 n m f t s a b g d)). Qed.
Lemma lem4512510 {A B : Type'} (s0 : A -> Prop) (n : nat) (f : A -> B) (t : B -> Prop) (a : A) (b : B) (g : A -> B) (d : B) (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : term1466 A B s0 n m f t s a b g d.
Proof. exact (@lem4512509 A B s0 n m f t s a b g d (@lem4493112 A s m h1)). Qed.
Lemma lem4512511 {A B : Type'} (s0 : A -> Prop) (n : nat) (f : A -> B) (t : B -> Prop) (b : B) (g : A -> B) (d : B) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : @HAS_SIZE A s m) : term1464 A B s0 n m f t s a b g d.
Proof. exact (@lem4512510 A B s0 n f t a b g d s m h2 (@lem4493114 A a s h1)). Qed.
Lemma lem4512512 {A B : Type'} (n : nat) (f : A -> B) (t : B -> Prop) (b : B) (g : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) : term1462 A B n m f t s a b g d.
Proof. exact (@lem4512511 A B s0 n f t b g d a s m h1 h3 (@lem4493113 A s0 a s h2)). Qed.
Lemma lem4512513 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term1460 A B n m f t s a b g d.
Proof. exact (@lem4512512 A B n f t b g d s0 a s m h1 h2 h3 (@lem4493109 B t n h4)). Qed.
Lemma lem4512514 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1458 A B f t s a b g d.
Proof. exact (@lem4512513 A B f b g d s0 a s m t n h1 h2 h3 h4 (@lem4493274 A B t s d n m h5)). Qed.
Lemma lem4512515 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : f = (term442 A B a b g)) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term1455 A B t s a b g d.
Proof. exact (@lem4512514 A B f b g s0 a t s d n m h1 h3 h4 h5 h6 (@lem4503408 A B f a b g h2)). Qed.
Lemma lem4512516 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term178 A a s) (h2 : f = (term442 A B a b g)) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) (h7 : @IN B b t) : term1453 A B t s a b g d.
Proof. exact (@lem4512515 A B f b g s0 a t s d n m h1 h2 h3 h4 h5 h6 (@lem4503407 B b t h7)). Qed.
Lemma lem4512517 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term174 A B s g t) (h2 : term178 A a s) (h3 : f = (term442 A B a b g)) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) (h8 : @IN B b t) : term1450 A B t s a b g d.
Proof. exact (@lem4512516 A B f g s0 a s d n m b t h2 h3 h4 h5 h6 h7 h8 (@lem4503405 A B s g t h1)). Qed.
Lemma lem4512518 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term1442 A B t s a b g d.
Proof. exact (@lem4512517 A B f g s0 a s d n m b t h2 h3 h4 h5 h6 h7 h8 h9 (@lem4503403 A B s g d h1)). Qed.
Lemma lem4512519 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term1443 A B t s a b g d) (h4 : term178 A a s) (h5 : f = (term442 A B a b g)) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B b t) : False.
Proof. exact (@lem4512518 A B f g s0 a s d n m b t h1 h2 h4 h5 h6 h7 h8 h9 h10 (@lem4503547 A B t s a b g d h3)). Qed.
Lemma lem4512520 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term1443 A B t s a b g d) (h4 : term178 A a s) (h5 : f = (term442 A B a b g)) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B b t) : (term1443 A B t s a b g d) = False.
Proof. exact (prop_ext (fun h11 : term1443 A B t s a b g d => @lem4512519 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : False => @lem4503547 A B t s a b g d h3)). Qed.
Lemma lem4512521 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term1443 A B t s a b g d) (h4 : term178 A a s) (h5 : f = (term442 A B a b g)) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B b t) : False.
Proof. exact (EQ_MP (@lem4512520 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4503547 A B t s a b g d h3)). Qed.
Lemma lem4512522 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term1442 A B t s a b g d.
Proof. exact (fun h0 : term1443 A B t s a b g d => @lem4512521 A B f g s0 a s d n m b t h1 h2 h0 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4512523 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term1441 A B t s a b g d.
Proof. exact (EQ_MP (@lem4503546 A B t s a b g d) (@lem4512522 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4512524 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4503542 A B t s d f a b g h4) (@lem4512523 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4512525 {A B : Type'} (f : A -> B) (a : A) (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term578 A B f a b t s g d) : term184 A B s g d.
Proof. exact (proj2 (@lem4503402 A B f a b t s g d h1)). Qed.
Lemma lem4512526 {A B : Type'} (f : A -> B) (a : A) (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (h1 : term578 A B f a b t s g d) : term575 A B f a b s g t.
Proof. exact (proj1 (@lem4503402 A B f a b t s g d h1)). Qed.
Lemma lem4512527 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : (term184 A B s g d) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h10 : term184 A B s g d => @lem4512524 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : term595 A B t a s f d => @lem4503403 A B s g d h1)). Qed.
Lemma lem4512528 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512527 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4503403 A B s g d h1)). Qed.
Lemma lem4512529 {A B : Type'} (f : A -> B) (a : A) (b : B) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term575 A B f a b s g t) : term174 A B s g t.
Proof. exact (proj2 (@lem4503404 A B f a b s g t h1)). Qed.
Lemma lem4512530 {A B : Type'} (f : A -> B) (a : A) (b : B) (s : A -> Prop) (g : A -> B) (t : B -> Prop) (h1 : term575 A B f a b s g t) : term1424 A B f a g b t.
Proof. exact (proj1 (@lem4503404 A B f a b s g t h1)). Qed.
Lemma lem4512531 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : (term174 A B s g t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h10 : term174 A B s g t => @lem4512528 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : term595 A B t a s f d => @lem4503405 A B s g t h2)). Qed.
Lemma lem4512532 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512531 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4503405 A B s g t h2)). Qed.
Lemma lem4512533 {A B : Type'} (f : A -> B) (a : A) (g : A -> B) (b : B) (t : B -> Prop) (h1 : term1424 A B f a g b t) : @IN B b t.
Proof. exact (proj2 (@lem4503406 A B f a g b t h1)). Qed.
Lemma lem4512534 {A B : Type'} (f : A -> B) (a : A) (g : A -> B) (b : B) (t : B -> Prop) (h1 : term1424 A B f a g b t) : f = (term442 A B a b g).
Proof. exact (proj1 (@lem4503406 A B f a g b t h1)). Qed.
Lemma lem4512535 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : (@IN B b t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h10 : @IN B b t => @lem4512532 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : term595 A B t a s f d => @lem4503407 B b t h9)). Qed.
Lemma lem4512536 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512535 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4503407 B b t h9)). Qed.
Lemma lem4512537 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : (f = (term442 A B a b g)) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h10 : f = (term442 A B a b g) => @lem4512536 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : term595 A B t a s f d => @lem4503408 A B f a b g h4)). Qed.
Lemma lem4512538 {A B : Type'} (f : A -> B) (g : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (b : B) (t : B -> Prop) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : f = (term442 A B a b g)) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B b t) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512537 A B f g s0 a s d n m b t h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4503408 A B f a b g h4)). Qed.
Lemma lem4512539 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : term1424 A B f a g b t) (h5 : f = (term442 A B a b g)) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : (@IN B b t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h10 : @IN B b t => @lem4512538 A B f g s0 a s d n m b t h1 h2 h3 h5 h6 h7 h8 h9 h10) (fun h10 : term595 A B t a s f d => @lem4512533 A B f a g b t h4)). Qed.
Lemma lem4512540 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : term1424 A B f a g b t) (h5 : f = (term442 A B a b g)) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512539 A B f b g s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4512533 A B f a g b t h4)). Qed.
Lemma lem4512541 {A B : Type'} (f : A -> B) (g : A -> B) (b : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : term1424 A B f a g b t) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : (f = (term442 A B a b g)) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h9 : f = (term442 A B a b g) => @lem4512540 A B f b g s0 a t s d n m h1 h2 h3 h4 h9 h5 h6 h7 h8) (fun h9 : term595 A B t a s f d => @lem4512534 A B f a g b t h4)). Qed.
Lemma lem4512542 {A B : Type'} (f : A -> B) (g : A -> B) (b : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term174 A B s g t) (h3 : term178 A a s) (h4 : term1424 A B f a g b t) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512541 A B f g b s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (@lem4512534 A B f a g b t h4)). Qed.
Lemma lem4512543 {A B : Type'} (f : A -> B) (g : A -> B) (b : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term178 A a s) (h3 : term575 A B f a b s g t) (h4 : term1424 A B f a g b t) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : (term174 A B s g t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h9 : term174 A B s g t => @lem4512542 A B f g b s0 a t s d n m h1 h9 h2 h4 h5 h6 h7 h8) (fun h9 : term595 A B t a s f d => @lem4512529 A B f a b s g t h3)). Qed.
Lemma lem4512544 {A B : Type'} (f : A -> B) (g : A -> B) (b : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term178 A a s) (h3 : term575 A B f a b s g t) (h4 : term1424 A B f a g b t) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512543 A B f g b s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (@lem4512529 A B f a b s g t h3)). Qed.
Lemma lem4512545 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term178 A a s) (h3 : term575 A B f a b s g t) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term1424 A B f a g b t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h8 : term1424 A B f a g b t => @lem4512544 A B f g b s0 a t s d n m h1 h2 h3 h8 h4 h5 h6 h7) (fun h8 : term595 A B t a s f d => @lem4512530 A B f a b s g t h3)). Qed.
Lemma lem4512546 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term184 A B s g d) (h2 : term178 A a s) (h3 : term575 A B f a b s g t) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512545 A B f b g s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4512530 A B f a b s g t h3)). Qed.
Lemma lem4512547 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term578 A B f a b t s g d) (h3 : term575 A B f a b s g t) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term184 A B s g d) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h8 : term184 A B s g d => @lem4512546 A B f b g s0 a t s d n m h8 h1 h3 h4 h5 h6 h7) (fun h8 : term595 A B t a s f d => @lem4512525 A B f a b t s g d h2)). Qed.
Lemma lem4512548 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term578 A B f a b t s g d) (h3 : term575 A B f a b s g t) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512547 A B f b g s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4512525 A B f a b t s g d h2)). Qed.
Lemma lem4512549 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term578 A B f a b t s g d) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : (term575 A B f a b s g t) = (term595 A B t a s f d).
Proof. exact (prop_ext (fun h7 : term575 A B f a b s g t => @lem4512548 A B f b g s0 a t s d n m h1 h2 h7 h3 h4 h5 h6) (fun h7 : term595 A B t a s f d => @lem4512526 A B f a b t s g d h2)). Qed.
Lemma lem4512550 {A B : Type'} (f : A -> B) (b : B) (g : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term578 A B f a b t s g d) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (EQ_MP (@lem4512549 A B f b g s0 a t s d n m h1 h2 h3 h4 h5 h6) (@lem4512526 A B f a b t s g d h2)). Qed.
Lemma lem4512551 {A B : Type'} (f : A -> B) (b : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term580 A B f a b t s d) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (ex_elim (@lem4503401 A B f a b t s d h1) (fun g : A -> B => fun h0 : term579 A B f a b t s d g => @lem4512550 A B f b g s0 a t s d n m h2 h0 h3 h4 h5 h6)). Qed.
Lemma lem4512552 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term582 A B f a t s d) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term595 A B t a s f d.
Proof. exact (ex_elim (@lem4503400 A B f a t s d h1) (fun b : B => fun h0 : term581 A B f a t s d b => @lem4512551 A B f b s0 a t s d n m h0 h2 h3 h4 h5 h6)). Qed.
Lemma lem4512553 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1870 A B t a s f d.
Proof. exact (fun h0 : term582 A B f a t s d => @lem4512552 A B f s0 a t s d n m h0 h1 h2 h3 h4 h5). Qed.
Lemma lem4512554 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1871 A B t a s f d.
Proof. exact (conj (@lem4503399 A B f s0 a t s d n m h1 h2 h3 h4 h5) (@lem4512553 A B f s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4512555 {A B : Type'} (f : A -> B) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1871 A B t a s f d) = ((term595 A B t a s f d) = (term582 A B f a t s d)).
Proof. exact (@lem32 (term595 A B t a s f d) (term582 A B f a t s d)). Qed.
Lemma lem4512556 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : (term595 A B t a s f d) = (term582 A B f a t s d).
Proof. exact (EQ_MP (@lem4512555 A B f a t s d) (@lem4512554 A B f s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4512557 {A B : Type'} (f : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : (term363 A B t a s f d) = (term582 A B f a t s d).
Proof. exact (EQ_MP (@lem4494088 A B f a t s d) (@lem4512556 A B f s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4512562 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term584 A B a t s d.
Proof. exact (fun f : A -> B => @lem4512557 A B f s0 a t s d n m h1 h2 h3 h4 h5). Qed.
Lemma lem4512563 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term542 A B a t s d.
Proof. exact (EQ_MP (@lem4493980 A B a t s d) (@lem4512562 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4512564 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : (term369 A B t a s d) = (term375 A B a t s d).
Proof. exact (EQ_MP (@lem4493716 A B a t s d) (@lem4512563 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4512566 {A B : Type'} (f : A -> B) (s : A -> Prop) (n : nat) : term60 A B f s n.
Proof. exact (EQ_MP (@lem4492200 A B f s n) (@lem4492199 A B f s n)). Qed.
Lemma lem4512567 {A B : Type'} (f : type1215 A B) (s : type1217 A B) (n : nat) : term1872 A B f s n.
Proof. exact (@lem4512566 (type1658 A B) (A -> B) f s n). Qed.
Lemma lem4512568 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : term1873 A B a t s d n m.
Proof. exact (@lem4512567 A B (term400 A B a) (term401 A B t s d) (term371 n m)). Qed.
Lemma lem4512569 {A B : Type'} (s : A -> Prop) : term1874 A B s.
Proof. exact (@lem4324156 A B s). Qed.
Lemma lem4512570 {A B : Type'} (s : A -> Prop) : (term1874 A B s) = (term1875 A B s).
Proof. exact (eq_refl (term1874 A B s)). Qed.
Lemma lem4512571 {A B : Type'} (s : A -> Prop) : term1875 A B s.
Proof. exact (EQ_MP (@lem4512570 A B s) (@lem4512569 A B s)). Qed.
Lemma lem4512572 {A B : Type'} (s : A -> Prop) (m : nat) : term1876 A B s m.
Proof. exact (@lem4512571 A B s m). Qed.
Lemma lem4512573 {A B : Type'} (s : A -> Prop) (m : nat) : (term1876 A B s m) = (term1877 A B s m).
Proof. exact (eq_refl (term1876 A B s m)). Qed.
Lemma lem4512574 {A B : Type'} (s : A -> Prop) (m : nat) : term1877 A B s m.
Proof. exact (EQ_MP (@lem4512573 A B s m) (@lem4512572 A B s m)). Qed.
Lemma lem4512575 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) : term1878 A B s m t.
Proof. exact (@lem4512574 A B s m t). Qed.
Lemma lem4512576 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) : (term1878 A B s m t) = (term1879 A B s t m).
Proof. exact (eq_refl (term1878 A B s m t)). Qed.
Lemma lem4512577 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) : term1879 A B s t m.
Proof. exact (EQ_MP (@lem4512576 A B s t m) (@lem4512575 A B s m t)). Qed.
Lemma lem4512578 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) (n : nat) : term1880 A B s t m n.
Proof. exact (@lem4512577 A B s t m n). Qed.
Lemma lem4512579 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) (n : nat) : (term1880 A B s t m n) = (term1881 A B s t m n).
Proof. exact (eq_refl (term1880 A B s t m n)). Qed.
Lemma lem4512580 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) (n : nat) : term1881 A B s t m n.
Proof. exact (EQ_MP (@lem4512579 A B s t m n) (@lem4512578 A B s t m n)). Qed.
Lemma lem4512581 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term347 A B s m t n) : term347 A B s m t n.
Proof. exact (h1). Qed.
Lemma lem4512582 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term347 A B s m t n) : term1882 A B s t m n.
Proof. exact (@lem4512580 A B s t m n (@lem4512581 A B s m t n h1)). Qed.
Lemma lem4512583 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) (n : nat) : (term1882 A B s t m n) = ((term1882 A B s t m n) = True).
Proof. exact (@lem7 (term1882 A B s t m n)). Qed.
Lemma lem4512584 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term347 A B s m t n) : (term1882 A B s t m n) = True.
Proof. exact (EQ_MP (@lem4512583 A B s t m n) (@lem4512582 A B s m t n h1)). Qed.
Lemma lem4512590 : term1883.
Proof. exact (proj2 (@lem86199)). Qed.
Lemma lem4512591 (m : nat) : term1884 m.
Proof. exact (@lem4512590 m). Qed.
Lemma lem4512592 (m : nat) : (term1884 m) = (term1885 m).
Proof. exact (eq_refl (term1884 m)). Qed.
Lemma lem4512593 (m : nat) : term1885 m.
Proof. exact (EQ_MP (@lem4512592 m) (@lem4512591 m)). Qed.
Lemma lem4512594 (m : nat) (n : nat) : term1886 m n.
Proof. exact (@lem4512593 m n). Qed.
Lemma lem4512595 (m : nat) (n : nat) : (term1886 m n) = ((term371 m n) = (term1887 m n)).
Proof. exact (eq_refl (term1886 m n)). Qed.
Lemma lem4512605 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = ((@HAS_SIZE B t n) = True).
Proof. exact (@lem7 (@HAS_SIZE B t n)). Qed.
Lemma lem4512607 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term349 A B t s d n m) = ((term349 A B t s d n m) = True).
Proof. exact (@lem7 (term349 A B t s d n m)). Qed.
Lemma lem4513259 (m : nat) (n : nat) : (term371 m n) = (term1887 m n).
Proof. exact (EQ_MP (@lem4512595 m n) (@lem4512594 m n)). Qed.
Lemma lem4513260 (n : nat) (m : nat) : (term371 n m) = (term1887 n m).
Proof. exact (@lem4513259 n m). Qed.
Lemma lem4513261 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term1888 A B t s d) = (term1888 A B t s d).
Proof. exact (eq_refl (term1888 A B t s d)). Qed.
Lemma lem4513262 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term1889 A B t s d n m) = (term1890 A B t s d n m).
Proof. exact (MK_COMB (@lem4513261 A B t s d) (@lem4513260 n m)). Qed.
Lemma lem4513264 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (m : nat) (n : nat) : term1891 A B s t m n.
Proof. exact (fun h0 : term347 A B s m t n => @lem4512584 A B s m t n h0). Qed.
Lemma lem4513265 {A B : Type'} (s : B -> Prop) (t : type572 A B) (m : nat) (n : nat) : term1892 A B s t m n.
Proof. exact (@lem4513264 B (A -> B) s t m n). Qed.
Lemma lem4513266 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : term1893 A B t s d n m.
Proof. exact (@lem4513265 A B t (term198 A B t s d) n (Nat.pow n m)). Qed.
Lemma lem4513270 {B : Type'} (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE B t n) : (@HAS_SIZE B t n) = True.
Proof. exact (EQ_MP (@lem4512605 B t n) (@lem4493109 B t n h1)). Qed.
Lemma lem4513271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4513272 {B : Type'} (t : B -> Prop) (n : nat) (h1 : @HAS_SIZE B t n) : (term346 B t n) = (and True).
Proof. exact (MK_COMB (@lem4513271) (@lem4513270 B t n h1)). Qed.
Lemma lem4513274 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term349 A B t s d n m) : (term349 A B t s d n m) = True.
Proof. exact (EQ_MP (@lem4512607 A B t s d n m) (@lem4493274 A B t s d n m h1)). Qed.
Lemma lem4513275 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term349 A B t s d n m) : (term349 A B t s d n m) = True.
Proof. exact (@lem4513274 A B t s d n m h1). Qed.
Lemma lem4513276 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1894 A B t s d n m) = (True /\ True).
Proof. exact (MK_COMB (@lem4513272 B t n h1) (@lem4513275 A B t s d n m h2)). Qed.
Lemma lem4513278 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4513279 : (True /\ True) = True.
Proof. exact (@lem4513278 True). Qed.
Lemma lem4513280 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1894 A B t s d n m) = True.
Proof. exact (TRANS (@lem4513276 A B t s d n m h1 h2) (@lem4513279)). Qed.
Lemma lem4513281 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : True = (term1894 A B t s d n m).
Proof. exact (SYM (@lem4513280 A B t s d n m h1 h2)). Qed.
Lemma lem4513282 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : term1894 A B t s d n m.
Proof. exact (EQ_MP (@lem4513281 A B t s d n m h1 h2) (@lem0)). Qed.
Lemma lem4513283 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1890 A B t s d n m) = True.
Proof. exact (@lem4513266 A B t s d n m (@lem4513282 A B t s d n m h1 h2)). Qed.
Lemma lem4513284 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1889 A B t s d n m) = True.
Proof. exact (TRANS (@lem4513262 A B t s d n m) (@lem4513283 A B t s d n m h1 h2)). Qed.
Lemma lem4513285 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1895 A B t s d a) = (term1895 A B t s d a).
Proof. exact (eq_refl (term1895 A B t s d a)). Qed.
Lemma lem4513286 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1896 A B a t s d n m) = (term1897 A B t s d a).
Proof. exact (MK_COMB (@lem4513285 A B t s d a) (@lem4513284 A B t s d n m h1 h2)). Qed.
Lemma lem4513288 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4513289 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1897 A B t s d a) = (term1898 A B t s d a).
Proof. exact (@lem4513288 (term1898 A B t s d a)). Qed.
Lemma lem4513863 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1896 A B a t s d n m) = (term1898 A B t s d a).
Proof. exact (TRANS (@lem4513286 A B a t s d n m h1 h2) (@lem4513289 A B t s d a)). Qed.
Lemma lem4513864 {A B : Type'} (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : @HAS_SIZE B t n) (h2 : term349 A B t s d n m) : (term1898 A B t s d a) = (term1896 A B a t s d n m).
Proof. exact (SYM (@lem4513863 A B a t s d n m h1 h2)). Qed.
Lemma lem4513870 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term52 _5106 _5107 P) = (term53 _5106 _5107 P).
Proof. exact (EQ_MP (@lem4492170 _5106 _5107 P) (@lem4492169 _5106 _5107 P)). Qed.
Lemma lem4513871 {A B : Type'} (P : type1217 A B) : (term1899 A B P) = (term1900 A B P).
Proof. exact (@lem4513870 (A -> B) B P). Qed.
Lemma lem4513872 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1901 A B t s d a) = (term1902 A B t s d a).
Proof. exact (@lem4513871 A B (term1903 A B t s d a)). Qed.
Lemma lem4513873 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (x : type1658 A B) : (term1904 A B t s d a x) = (term1905 A B t s d a x).
Proof. exact (eq_refl (term1904 A B t s d a x)). Qed.
Lemma lem4513874 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1906 A B t s d a) = (term1903 A B t s d a).
Proof. exact (fun_ext (fun x : type1658 A B => @lem4513873 A B t s d a x)). Qed.
Lemma lem4513875 {A B : Type'} : (@all (prod B (A -> B))) = (@all (prod B (A -> B))).
Proof. exact (eq_refl (@all (prod B (A -> B)))). Qed.
Lemma lem4513876 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1901 A B t s d a) = (term1898 A B t s d a).
Proof. exact (MK_COMB (@lem4513875 A B) (@lem4513874 A B t s d a)). Qed.
Lemma lem4513877 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4513878 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1907 A B t s d a) = (term1908 A B t s d a).
Proof. exact (MK_COMB (@lem4513877) (@lem4513876 A B t s d a)). Qed.
Lemma lem4513879 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1909 A B t s d a p1 p2) = (term1910 A B t s d a p1 p2).
Proof. exact (eq_refl (term1909 A B t s d a p1 p2)). Qed.
Lemma lem4513880 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1911 A B t s d a p1) = (term1912 A B t s d a p1).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4513879 A B t s d a p1 p2)). Qed.
Lemma lem4513881 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4513882 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1913 A B t s d a p1) = (term1914 A B t s d a p1).
Proof. exact (MK_COMB (@lem4513881 A B) (@lem4513880 A B t s d a p1)). Qed.
Lemma lem4513883 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1915 A B t s d a) = (term1916 A B t s d a).
Proof. exact (fun_ext (fun p1 : B => @lem4513882 A B t s d a p1)). Qed.
Lemma lem4513884 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4513885 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1902 A B t s d a) = (term1917 A B t s d a).
Proof. exact (MK_COMB (@lem4513884 B) (@lem4513883 A B t s d a)). Qed.
Lemma lem4513886 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : ((term1901 A B t s d a) = (term1902 A B t s d a)) = ((term1898 A B t s d a) = (term1917 A B t s d a)).
Proof. exact (MK_COMB (@lem4513878 A B t s d a) (@lem4513885 A B t s d a)). Qed.
Lemma lem4513887 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1898 A B t s d a) = (term1917 A B t s d a).
Proof. exact (EQ_MP (@lem4513886 A B t s d a) (@lem4513872 A B t s d a)). Qed.
Lemma lem4513905 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term52 _5106 _5107 P) = (term53 _5106 _5107 P).
Proof. exact (EQ_MP (@lem4492170 _5106 _5107 P) (@lem4492169 _5106 _5107 P)). Qed.
Lemma lem4513906 {A B : Type'} (P : type1217 A B) : (term1899 A B P) = (term1900 A B P).
Proof. exact (@lem4513905 (A -> B) B P). Qed.
Lemma lem4513907 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1918 A B t s d a p1 p2) = (term1919 A B t s d a p1 p2).
Proof. exact (@lem4513906 A B (term1920 A B t s d a p1 p2)). Qed.
Lemma lem4513908 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) (y : type1658 A B) : (term1921 A B t s d a p1 p2 y) = (term1922 A B t s d a p1 p2 y).
Proof. exact (eq_refl (term1921 A B t s d a p1 p2 y)). Qed.
Lemma lem4513909 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1923 A B t s d a p1 p2) = (term1920 A B t s d a p1 p2).
Proof. exact (fun_ext (fun y : type1658 A B => @lem4513908 A B t s d a p1 p2 y)). Qed.
Lemma lem4513910 {A B : Type'} : (@all (prod B (A -> B))) = (@all (prod B (A -> B))).
Proof. exact (eq_refl (@all (prod B (A -> B)))). Qed.
Lemma lem4513911 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1918 A B t s d a p1 p2) = (term1910 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4513910 A B) (@lem4513909 A B t s d a p1 p2)). Qed.
Lemma lem4513912 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4513913 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1924 A B t s d a p1 p2) = (term1925 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4513912) (@lem4513911 A B t s d a p1 p2)). Qed.
Lemma lem4513914 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) : (term1926 A B t s d a p1 p2 p1' p2') = (term1927 A B t s d a p1 p2 p1' p2').
Proof. exact (eq_refl (term1926 A B t s d a p1 p2 p1' p2')). Qed.
Lemma lem4513915 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) (p1' : B) : (term1928 A B t s d a p1 p2 p1') = (term1929 A B t s d a p1 p2 p1').
Proof. exact (fun_ext (fun p2' : A -> B => @lem4513914 A B t s d a p1 p2 p1' p2')). Qed.
Lemma lem4513916 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4513917 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) (p1' : B) : (term1930 A B t s d a p1 p2 p1') = (term1931 A B t s d a p1 p2 p1').
Proof. exact (MK_COMB (@lem4513916 A B) (@lem4513915 A B t s d a p1 p2 p1')). Qed.
Lemma lem4513918 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1932 A B t s d a p1 p2) = (term1933 A B t s d a p1 p2).
Proof. exact (fun_ext (fun p1' : B => @lem4513917 A B t s d a p1 p2 p1')). Qed.
Lemma lem4513919 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4513920 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1919 A B t s d a p1 p2) = (term1934 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4513919 B) (@lem4513918 A B t s d a p1 p2)). Qed.
Lemma lem4513921 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : ((term1918 A B t s d a p1 p2) = (term1919 A B t s d a p1 p2)) = ((term1910 A B t s d a p1 p2) = (term1934 A B t s d a p1 p2)).
Proof. exact (MK_COMB (@lem4513913 A B t s d a p1 p2) (@lem4513920 A B t s d a p1 p2)). Qed.
Lemma lem4513922 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1910 A B t s d a p1 p2) = (term1934 A B t s d a p1 p2).
Proof. exact (EQ_MP (@lem4513921 A B t s d a p1 p2) (@lem4513907 A B t s d a p1 p2)). Qed.
Lemma lem4513938 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492117 t1 t2 t3) (@lem4492116 t1 t2 t3)). Qed.
Lemma lem4513939 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1935 A B t s d p1 p2 a p1' p2') = (term1936 A B t s d p1 p2 a p1' p2').
Proof. exact (@lem4513938 (term485 A B p1 p2 t s d) (term485 A B p1' p2' t s d) ((term471 A B a p1 p2) = (term471 A B a p1' p2'))). Qed.
Lemma lem4513945 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term49 _83064 x P) = (term50 _83064 P x).
Proof. exact (EQ_MP (@lem4492167 _83064 P x) (@lem4492166 _83064 P x)). Qed.
Lemma lem4513946 {A B : Type'} (P : type915 A B) (x : type1658 A B) : (term474 A B x P) = (term475 A B P x).
Proof. exact (@lem4513945 (type1658 A B) P x). Qed.
Lemma lem4513947 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term476 A B p1 p2 t s d) = (term477 A B t s d p1 p2).
Proof. exact (@lem4513946 A B (term478 A B t s d) (@pair B (A -> B) p1 p2)). Qed.
Lemma lem4513948 {A B : Type'} (GEN_PVAR_147 : type1658 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term479 A B t s d GEN_PVAR_147) = (term480 A B GEN_PVAR_147 t s d).
Proof. exact (eq_refl (term479 A B t s d GEN_PVAR_147)). Qed.
Lemma lem4513949 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term481 A B t s d) = (term482 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_147 : type1658 A B => @lem4513948 A B GEN_PVAR_147 t s d)). Qed.
Lemma lem4513950 {A B : Type'} : (@GSPEC (prod B (A -> B))) = (@GSPEC (prod B (A -> B))).
Proof. exact (eq_refl (@GSPEC (prod B (A -> B)))). Qed.
Lemma lem4513951 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term483 A B t s d) = (term401 A B t s d).
Proof. exact (MK_COMB (@lem4513950 A B) (@lem4513949 A B t s d)). Qed.
Lemma lem4513952 {A B : Type'} (p1 : B) (p2 : A -> B) : (term484 A B p1 p2) = (term484 A B p1 p2).
Proof. exact (eq_refl (term484 A B p1 p2)). Qed.
Lemma lem4513953 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term476 A B p1 p2 t s d) = (term485 A B p1 p2 t s d).
Proof. exact (MK_COMB (@lem4513952 A B p1 p2) (@lem4513951 A B t s d)). Qed.
Lemma lem4513954 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4513955 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term486 A B p1 p2 t s d) = (term487 A B p1 p2 t s d).
Proof. exact (MK_COMB (@lem4513954) (@lem4513953 A B p1 p2 t s d)). Qed.
Lemma lem4513956 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term477 A B t s d p1 p2) = (term488 A B p1 p2 t s d).
Proof. exact (eq_refl (term477 A B t s d p1 p2)). Qed.
Lemma lem4513957 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term476 A B p1 p2 t s d) = (term477 A B t s d p1 p2)) = ((term485 A B p1 p2 t s d) = (term488 A B p1 p2 t s d)).
Proof. exact (MK_COMB (@lem4513955 A B p1 p2 t s d) (@lem4513956 A B p1 p2 t s d)). Qed.
Lemma lem4513958 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term485 A B p1 p2 t s d) = (term488 A B p1 p2 t s d).
Proof. exact (EQ_MP (@lem4513957 A B p1 p2 t s d) (@lem4513947 A B t s d p1 p2)). Qed.
Lemma lem4513968 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4513969 {A B : Type'} (f : type1533 A B) (y : Prop) : (term489 A B f y) = (f y).
Proof. exact (@lem4513968 Prop (type1217 A B) f y). Qed.
Lemma lem4513970 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d).
Proof. exact (@lem4513969 A B (term492 A B p1 p2) (term493 A B b g t s d)). Qed.
Lemma lem4513971 {A B : Type'} (p : Prop) (p1 : B) (p2 : A -> B) : (term494 A B p1 p2 p) = (term495 A B p p1 p2).
Proof. exact (eq_refl (term494 A B p1 p2 p)). Qed.
Lemma lem4513972 {A B : Type'} (p1 : B) (p2 : A -> B) : (term496 A B p1 p2) = (term492 A B p1 p2).
Proof. exact (fun_ext (fun p : Prop => @lem4513971 A B p p1 p2)). Qed.
Lemma lem4513973 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term493 A B b g t s d) = (term493 A B b g t s d).
Proof. exact (eq_refl (term493 A B b g t s d)). Qed.
Lemma lem4513974 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d).
Proof. exact (MK_COMB (@lem4513972 A B p1 p2) (@lem4513973 A B b g t s d)). Qed.
Lemma lem4513975 {A B : Type'} : (@eq ((prod B (A -> B)) -> Prop)) = (@eq ((prod B (A -> B)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod B (A -> B)) -> Prop))). Qed.
Lemma lem4513976 {A B : Type'} (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term497 A B p1 p2 b g t s d) = (term498 A B p1 p2 b g t s d).
Proof. exact (MK_COMB (@lem4513975 A B) (@lem4513974 A B p1 p2 b g t s d)). Qed.
Lemma lem4513977 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2).
Proof. exact (eq_refl (term491 A B p1 p2 b g t s d)). Qed.
Lemma lem4513978 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : ((term490 A B p1 p2 b g t s d) = (term491 A B p1 p2 b g t s d)) = ((term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2)).
Proof. exact (MK_COMB (@lem4513976 A B p1 p2 b g t s d) (@lem4513977 A B b g t s d p1 p2)). Qed.
Lemma lem4513979 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term499 A B b g t s d p1 p2).
Proof. exact (EQ_MP (@lem4513978 A B b g t s d p1 p2) (@lem4513970 A B p1 p2 b g t s d)). Qed.
Lemma lem4513985 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term44 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem4492160 _83095 p x) (@lem4492159 _83095 p x)). Qed.
Lemma lem4513986 {A B : Type'} (p : type572 A B) (x : A -> B) : (term235 A B x p) = (p x).
Proof. exact (@lem4513985 (A -> B) p x). Qed.
Lemma lem4513987 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (g : A -> B) : (term500 A B g t s d) = (term501 A B t s d g).
Proof. exact (@lem4513986 A B (term502 A B t s d) g). Qed.
Lemma lem4513988 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term501 A B t s d f) = (term186 A B t s f d).
Proof. exact (eq_refl (term501 A B t s d f)). Qed.
Lemma lem4513989 {A B : Type'} (GEN_PVAR_146 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_146) = (@SETSPEC (A -> B) GEN_PVAR_146).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_146)). Qed.
Lemma lem4513990 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term503 A B GEN_PVAR_146 t s d f) = (term188 A B GEN_PVAR_146 t s f d).
Proof. exact (MK_COMB (@lem4513989 A B GEN_PVAR_146) (@lem4513988 A B t s f d)). Qed.
Lemma lem4513991 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4513992 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term504 A B GEN_PVAR_146 t s d f) = (term190 A B GEN_PVAR_146 t s d f).
Proof. exact (MK_COMB (@lem4513990 A B GEN_PVAR_146 t s f d) (@lem4513991 A B f)). Qed.
Lemma lem4513993 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term505 A B GEN_PVAR_146 t s d) = (term192 A B GEN_PVAR_146 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4513992 A B GEN_PVAR_146 t s d f)). Qed.
Lemma lem4513994 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4513995 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term506 A B GEN_PVAR_146 t s d) = (term194 A B GEN_PVAR_146 t s d).
Proof. exact (MK_COMB (@lem4513994 A B) (@lem4513993 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4513996 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_146 : A -> B => @lem4513995 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4513997 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4513998 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B t s d) = (term198 A B t s d).
Proof. exact (MK_COMB (@lem4513997 A B) (@lem4513996 A B t s d)). Qed.
Lemma lem4513999 {A B : Type'} (g : A -> B) : (@IN (A -> B) g) = (@IN (A -> B) g).
Proof. exact (eq_refl (@IN (A -> B) g)). Qed.
Lemma lem4514000 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term500 A B g t s d) = (term509 A B g t s d).
Proof. exact (MK_COMB (@lem4513999 A B g) (@lem4513998 A B t s d)). Qed.
Lemma lem4514001 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514002 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term510 A B g t s d) = (term511 A B g t s d).
Proof. exact (MK_COMB (@lem4514001) (@lem4514000 A B g t s d)). Qed.
Lemma lem4514003 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term501 A B t s d g) = (term186 A B t s g d).
Proof. exact (eq_refl (term501 A B t s d g)). Qed.
Lemma lem4514004 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : ((term500 A B g t s d) = (term501 A B t s d g)) = ((term509 A B g t s d) = (term186 A B t s g d)).
Proof. exact (MK_COMB (@lem4514002 A B g t s d) (@lem4514003 A B t s g d)). Qed.
Lemma lem4514005 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term509 A B g t s d) = (term186 A B t s g d).
Proof. exact (EQ_MP (@lem4514004 A B t s g d) (@lem4513987 A B t s d g)). Qed.
Lemma lem4514026 {B : Type'} (b : B) (t : B -> Prop) : (term512 B b t) = (term512 B b t).
Proof. exact (eq_refl (term512 B b t)). Qed.
Lemma lem4514027 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term493 A B b g t s d) = (term513 A B b t s g d).
Proof. exact (MK_COMB (@lem4514026 B b t) (@lem4514005 A B t s g d)). Qed.
Lemma lem4514029 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492117 t1 t2 t3) (@lem4492116 t1 t2 t3)). Qed.
Lemma lem4514030 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term513 A B b t s g d) = (term543 A B b t s g d).
Proof. exact (@lem4514029 (@IN B b t) (term174 A B s g t) (term184 A B s g d)). Qed.
Lemma lem4514053 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term493 A B b g t s d) = (term543 A B b t s g d).
Proof. exact (TRANS (@lem4514027 A B b t s g d) (@lem4514030 A B b t s g d)). Qed.
Lemma lem4514054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514055 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term514 A B b g t s d) = (term544 A B b t s g d).
Proof. exact (MK_COMB (@lem4514054) (@lem4514053 A B b t s g d)). Qed.
Lemma lem4514058 {A B : Type'} (p1 : B) (p2 : A -> B) (t : type1658 A B) : ((@pair B (A -> B) p1 p2) = t) = ((@pair B (A -> B) p1 p2) = t).
Proof. exact (eq_refl ((@pair B (A -> B) p1 p2) = t)). Qed.
Lemma lem4514059 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) (t' : type1658 A B) : (term516 A B b g t s d p1 p2 t') = (term1937 A B b t s g d p1 p2 t').
Proof. exact (MK_COMB (@lem4514055 A B b t s g d) (@lem4514058 A B p1 p2 t')). Qed.
Lemma lem4514062 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term499 A B b g t s d p1 p2) = (term1938 A B b t s g d p1 p2).
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4514059 A B b t s g d p1 p2 t')). Qed.
Lemma lem4514063 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term491 A B p1 p2 b g t s d) = (term1938 A B b t s g d p1 p2).
Proof. exact (TRANS (@lem4513979 A B b g t s d p1 p2) (@lem4514062 A B b t s g d p1 p2)). Qed.
Lemma lem4514064 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4514065 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term519 A B p1 p2 t s d b g) = (term1939 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4514063 A B b t s g d p1 p2) (@lem4514064 A B b g)). Qed.
Lemma lem4514067 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4514068 {A B : Type'} (f : type1217 A B) (y : type1658 A B) : (term521 A B f y) = (f y).
Proof. exact (@lem4514067 (type1658 A B) Prop f y). Qed.
Lemma lem4514069 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term1940 A B t s d p1 p2 b g) = (term1939 A B t s d p1 p2 b g).
Proof. exact (@lem4514068 A B (term1938 A B b t s g d p1 p2) (@pair B (A -> B) b g)). Qed.
Lemma lem4514070 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) (t' : type1658 A B) : (term1941 A B b t s g d p1 p2 t') = (term1937 A B b t s g d p1 p2 t').
Proof. exact (eq_refl (term1941 A B b t s g d p1 p2 t')). Qed.
Lemma lem4514071 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (p2 : A -> B) : (term1942 A B b t s g d p1 p2) = (term1938 A B b t s g d p1 p2).
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4514070 A B b t s g d p1 p2 t')). Qed.
Lemma lem4514072 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4514073 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term1940 A B t s d p1 p2 b g) = (term1939 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4514071 A B b t s g d p1 p2) (@lem4514072 A B b g)). Qed.
Lemma lem4514074 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514075 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term1943 A B t s d p1 p2 b g) = (term1944 A B t s d p1 p2 b g).
Proof. exact (MK_COMB (@lem4514074) (@lem4514073 A B t s d p1 p2 b g)). Qed.
Lemma lem4514076 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term1939 A B t s d p1 p2 b g) = (term1945 A B t s d p1 p2 b g).
Proof. exact (eq_refl (term1939 A B t s d p1 p2 b g)). Qed.
Lemma lem4514077 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : ((term1940 A B t s d p1 p2 b g) = (term1939 A B t s d p1 p2 b g)) = ((term1939 A B t s d p1 p2 b g) = (term1945 A B t s d p1 p2 b g)).
Proof. exact (MK_COMB (@lem4514075 A B t s d p1 p2 b g) (@lem4514076 A B t s d p1 p2 b g)). Qed.
Lemma lem4514078 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (b : B) (g : A -> B) : (term1939 A B t s d p1 p2 b g) = (term1945 A B t s d p1 p2 b g).
Proof. exact (EQ_MP (@lem4514077 A B t s d p1 p2 b g) (@lem4514069 A B t s d p1 p2 b g)). Qed.
Lemma lem4514104 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : ((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b).
Proof. exact (EQ_MP (@lem4492129 A B x a y b) (@lem4492128 A B x a y b)). Qed.
Lemma lem4514105 {A B : Type'} (x : B) (a : B) (y : A -> B) (b : A -> B) : ((@pair B (A -> B) x y) = (@pair B (A -> B) a b)) = (term545 A B x a y b).
Proof. exact (@lem4514104 B (A -> B) x a y b). Qed.
Lemma lem4514106 {A B : Type'} (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : ((@pair B (A -> B) p1 p2) = (@pair B (A -> B) b g)) = (term545 A B p1 b p2 g).
Proof. exact (@lem4514105 A B p1 b p2 g). Qed.
Lemma lem4514113 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term544 A B b t s g d) = (term544 A B b t s g d).
Proof. exact (eq_refl (term544 A B b t s g d)). Qed.
Lemma lem4514114 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term1945 A B t s d p1 p2 b g) = (term546 A B t s d p1 b p2 g).
Proof. exact (MK_COMB (@lem4514113 A B b t s g d) (@lem4514106 A B p1 b p2 g)). Qed.
Lemma lem4514116 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492117 t1 t2 t3) (@lem4492116 t1 t2 t3)). Qed.
Lemma lem4514117 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term546 A B t s d p1 b p2 g) = (term547 A B t s d p1 b p2 g).
Proof. exact (@lem4514116 (term543 A B b t s g d) (p1 = b) (p2 = g)). Qed.
Lemma lem4514148 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term1945 A B t s d p1 p2 b g) = (term547 A B t s d p1 b p2 g).
Proof. exact (TRANS (@lem4514114 A B t s d p1 b p2 g) (@lem4514117 A B t s d p1 b p2 g)). Qed.
Lemma lem4514149 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term1939 A B t s d p1 p2 b g) = (term547 A B t s d p1 b p2 g).
Proof. exact (TRANS (@lem4514078 A B t s d p1 p2 b g) (@lem4514148 A B t s d p1 b p2 g)). Qed.
Lemma lem4514150 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term519 A B p1 p2 t s d b g) = (term547 A B t s d p1 b p2 g).
Proof. exact (TRANS (@lem4514065 A B t s d p1 p2 b g) (@lem4514149 A B t s d p1 b p2 g)). Qed.
Lemma lem4514151 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term528 A B p1 p2 t s d b) = (term548 A B t s d p1 b p2).
Proof. exact (fun_ext (fun g : A -> B => @lem4514150 A B t s d p1 b p2 g)). Qed.
Lemma lem4514152 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4514153 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term530 A B p1 p2 t s d b) = (term549 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4514152 A B) (@lem4514151 A B t s d p1 b p2)). Qed.
Lemma lem4514158 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term532 A B p1 p2 t s d) = (term1946 A B t s d p1 p2).
Proof. exact (fun_ext (fun b : B => @lem4514153 A B t s d p1 b p2)). Qed.
Lemma lem4514159 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514160 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term488 A B p1 p2 t s d) = (term1947 A B t s d p1 p2).
Proof. exact (MK_COMB (@lem4514159 B) (@lem4514158 A B t s d p1 p2)). Qed.
Lemma lem4514165 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term485 A B p1 p2 t s d) = (term1947 A B t s d p1 p2).
Proof. exact (TRANS (@lem4513958 A B p1 p2 t s d) (@lem4514160 A B t s d p1 p2)). Qed.
Lemma lem4514166 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514167 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) : (term1948 A B p1 p2 t s d) = (term1949 A B t s d p1 p2).
Proof. exact (MK_COMB (@lem4514166) (@lem4514165 A B t s d p1 p2)). Qed.
Lemma lem4514169 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term49 _83064 x P) = (term50 _83064 P x).
Proof. exact (EQ_MP (@lem4492167 _83064 P x) (@lem4492166 _83064 P x)). Qed.
Lemma lem4514170 {A B : Type'} (P : type915 A B) (x : type1658 A B) : (term474 A B x P) = (term475 A B P x).
Proof. exact (@lem4514169 (type1658 A B) P x). Qed.
Lemma lem4514171 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term476 A B p1' p2' t s d) = (term477 A B t s d p1' p2').
Proof. exact (@lem4514170 A B (term478 A B t s d) (@pair B (A -> B) p1' p2')). Qed.
Lemma lem4514172 {A B : Type'} (GEN_PVAR_147 : type1658 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term479 A B t s d GEN_PVAR_147) = (term480 A B GEN_PVAR_147 t s d).
Proof. exact (eq_refl (term479 A B t s d GEN_PVAR_147)). Qed.
Lemma lem4514173 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term481 A B t s d) = (term482 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_147 : type1658 A B => @lem4514172 A B GEN_PVAR_147 t s d)). Qed.
Lemma lem4514174 {A B : Type'} : (@GSPEC (prod B (A -> B))) = (@GSPEC (prod B (A -> B))).
Proof. exact (eq_refl (@GSPEC (prod B (A -> B)))). Qed.
Lemma lem4514175 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term483 A B t s d) = (term401 A B t s d).
Proof. exact (MK_COMB (@lem4514174 A B) (@lem4514173 A B t s d)). Qed.
Lemma lem4514176 {A B : Type'} (p1' : B) (p2' : A -> B) : (term484 A B p1' p2') = (term484 A B p1' p2').
Proof. exact (eq_refl (term484 A B p1' p2')). Qed.
Lemma lem4514177 {A B : Type'} (p1' : B) (p2' : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term476 A B p1' p2' t s d) = (term485 A B p1' p2' t s d).
Proof. exact (MK_COMB (@lem4514176 A B p1' p2') (@lem4514175 A B t s d)). Qed.
Lemma lem4514178 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514179 {A B : Type'} (p1' : B) (p2' : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term486 A B p1' p2' t s d) = (term487 A B p1' p2' t s d).
Proof. exact (MK_COMB (@lem4514178) (@lem4514177 A B p1' p2' t s d)). Qed.
Lemma lem4514180 {A B : Type'} (p1' : B) (p2' : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term477 A B t s d p1' p2') = (term488 A B p1' p2' t s d).
Proof. exact (eq_refl (term477 A B t s d p1' p2')). Qed.
Lemma lem4514181 {A B : Type'} (p1' : B) (p2' : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term476 A B p1' p2' t s d) = (term477 A B t s d p1' p2')) = ((term485 A B p1' p2' t s d) = (term488 A B p1' p2' t s d)).
Proof. exact (MK_COMB (@lem4514179 A B p1' p2' t s d) (@lem4514180 A B p1' p2' t s d)). Qed.
Lemma lem4514182 {A B : Type'} (p1' : B) (p2' : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term485 A B p1' p2' t s d) = (term488 A B p1' p2' t s d).
Proof. exact (EQ_MP (@lem4514181 A B p1' p2' t s d) (@lem4514171 A B t s d p1' p2')). Qed.
Lemma lem4514192 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4514193 {A B : Type'} (f : type1533 A B) (y : Prop) : (term489 A B f y) = (f y).
Proof. exact (@lem4514192 Prop (type1217 A B) f y). Qed.
Lemma lem4514194 {A B : Type'} (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1' p2' b g t s d) = (term491 A B p1' p2' b g t s d).
Proof. exact (@lem4514193 A B (term492 A B p1' p2') (term493 A B b g t s d)). Qed.
Lemma lem4514195 {A B : Type'} (p : Prop) (p1' : B) (p2' : A -> B) : (term494 A B p1' p2' p) = (term495 A B p p1' p2').
Proof. exact (eq_refl (term494 A B p1' p2' p)). Qed.
Lemma lem4514196 {A B : Type'} (p1' : B) (p2' : A -> B) : (term496 A B p1' p2') = (term492 A B p1' p2').
Proof. exact (fun_ext (fun p : Prop => @lem4514195 A B p p1' p2')). Qed.
Lemma lem4514197 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term493 A B b g t s d) = (term493 A B b g t s d).
Proof. exact (eq_refl (term493 A B b g t s d)). Qed.
Lemma lem4514198 {A B : Type'} (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term490 A B p1' p2' b g t s d) = (term491 A B p1' p2' b g t s d).
Proof. exact (MK_COMB (@lem4514196 A B p1' p2') (@lem4514197 A B b g t s d)). Qed.
Lemma lem4514199 {A B : Type'} : (@eq ((prod B (A -> B)) -> Prop)) = (@eq ((prod B (A -> B)) -> Prop)).
Proof. exact (eq_refl (@eq ((prod B (A -> B)) -> Prop))). Qed.
Lemma lem4514200 {A B : Type'} (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term497 A B p1' p2' b g t s d) = (term498 A B p1' p2' b g t s d).
Proof. exact (MK_COMB (@lem4514199 A B) (@lem4514198 A B p1' p2' b g t s d)). Qed.
Lemma lem4514201 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term491 A B p1' p2' b g t s d) = (term499 A B b g t s d p1' p2').
Proof. exact (eq_refl (term491 A B p1' p2' b g t s d)). Qed.
Lemma lem4514202 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : ((term490 A B p1' p2' b g t s d) = (term491 A B p1' p2' b g t s d)) = ((term491 A B p1' p2' b g t s d) = (term499 A B b g t s d p1' p2')).
Proof. exact (MK_COMB (@lem4514200 A B p1' p2' b g t s d) (@lem4514201 A B b g t s d p1' p2')). Qed.
Lemma lem4514203 {A B : Type'} (b : B) (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term491 A B p1' p2' b g t s d) = (term499 A B b g t s d p1' p2').
Proof. exact (EQ_MP (@lem4514202 A B b g t s d p1' p2') (@lem4514194 A B p1' p2' b g t s d)). Qed.
Lemma lem4514209 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term44 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem4492160 _83095 p x) (@lem4492159 _83095 p x)). Qed.
Lemma lem4514210 {A B : Type'} (p : type572 A B) (x : A -> B) : (term235 A B x p) = (p x).
Proof. exact (@lem4514209 (A -> B) p x). Qed.
Lemma lem4514211 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (g : A -> B) : (term500 A B g t s d) = (term501 A B t s d g).
Proof. exact (@lem4514210 A B (term502 A B t s d) g). Qed.
Lemma lem4514212 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term501 A B t s d f) = (term186 A B t s f d).
Proof. exact (eq_refl (term501 A B t s d f)). Qed.
Lemma lem4514213 {A B : Type'} (GEN_PVAR_146 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_146) = (@SETSPEC (A -> B) GEN_PVAR_146).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_146)). Qed.
Lemma lem4514214 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term503 A B GEN_PVAR_146 t s d f) = (term188 A B GEN_PVAR_146 t s f d).
Proof. exact (MK_COMB (@lem4514213 A B GEN_PVAR_146) (@lem4514212 A B t s f d)). Qed.
Lemma lem4514215 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4514216 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term504 A B GEN_PVAR_146 t s d f) = (term190 A B GEN_PVAR_146 t s d f).
Proof. exact (MK_COMB (@lem4514214 A B GEN_PVAR_146 t s f d) (@lem4514215 A B f)). Qed.
Lemma lem4514217 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term505 A B GEN_PVAR_146 t s d) = (term192 A B GEN_PVAR_146 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4514216 A B GEN_PVAR_146 t s d f)). Qed.
Lemma lem4514218 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4514219 {A B : Type'} (GEN_PVAR_146 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term506 A B GEN_PVAR_146 t s d) = (term194 A B GEN_PVAR_146 t s d).
Proof. exact (MK_COMB (@lem4514218 A B) (@lem4514217 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4514220 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_146 : A -> B => @lem4514219 A B GEN_PVAR_146 t s d)). Qed.
Lemma lem4514221 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4514222 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B t s d) = (term198 A B t s d).
Proof. exact (MK_COMB (@lem4514221 A B) (@lem4514220 A B t s d)). Qed.
Lemma lem4514223 {A B : Type'} (g : A -> B) : (@IN (A -> B) g) = (@IN (A -> B) g).
Proof. exact (eq_refl (@IN (A -> B) g)). Qed.
Lemma lem4514224 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term500 A B g t s d) = (term509 A B g t s d).
Proof. exact (MK_COMB (@lem4514223 A B g) (@lem4514222 A B t s d)). Qed.
Lemma lem4514225 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514226 {A B : Type'} (g : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term510 A B g t s d) = (term511 A B g t s d).
Proof. exact (MK_COMB (@lem4514225) (@lem4514224 A B g t s d)). Qed.
Lemma lem4514227 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term501 A B t s d g) = (term186 A B t s g d).
Proof. exact (eq_refl (term501 A B t s d g)). Qed.
Lemma lem4514228 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : ((term500 A B g t s d) = (term501 A B t s d g)) = ((term509 A B g t s d) = (term186 A B t s g d)).
Proof. exact (MK_COMB (@lem4514226 A B g t s d) (@lem4514227 A B t s g d)). Qed.
Lemma lem4514229 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term509 A B g t s d) = (term186 A B t s g d).
Proof. exact (EQ_MP (@lem4514228 A B t s g d) (@lem4514211 A B t s d g)). Qed.
Lemma lem4514250 {B : Type'} (b : B) (t : B -> Prop) : (term512 B b t) = (term512 B b t).
Proof. exact (eq_refl (term512 B b t)). Qed.
Lemma lem4514251 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term493 A B b g t s d) = (term513 A B b t s g d).
Proof. exact (MK_COMB (@lem4514250 B b t) (@lem4514229 A B t s g d)). Qed.
Lemma lem4514253 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492117 t1 t2 t3) (@lem4492116 t1 t2 t3)). Qed.
Lemma lem4514254 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term513 A B b t s g d) = (term543 A B b t s g d).
Proof. exact (@lem4514253 (@IN B b t) (term174 A B s g t) (term184 A B s g d)). Qed.
Lemma lem4514277 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term493 A B b g t s d) = (term543 A B b t s g d).
Proof. exact (TRANS (@lem4514251 A B b t s g d) (@lem4514254 A B b t s g d)). Qed.
Lemma lem4514278 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514279 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term514 A B b g t s d) = (term544 A B b t s g d).
Proof. exact (MK_COMB (@lem4514278) (@lem4514277 A B b t s g d)). Qed.
Lemma lem4514282 {A B : Type'} (p1' : B) (p2' : A -> B) (t : type1658 A B) : ((@pair B (A -> B) p1' p2') = t) = ((@pair B (A -> B) p1' p2') = t).
Proof. exact (eq_refl ((@pair B (A -> B) p1' p2') = t)). Qed.
Lemma lem4514283 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (p2' : A -> B) (t' : type1658 A B) : (term516 A B b g t s d p1' p2' t') = (term1937 A B b t s g d p1' p2' t').
Proof. exact (MK_COMB (@lem4514279 A B b t s g d) (@lem4514282 A B p1' p2' t')). Qed.
Lemma lem4514286 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (p2' : A -> B) : (term499 A B b g t s d p1' p2') = (term1938 A B b t s g d p1' p2').
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4514283 A B b t s g d p1' p2' t')). Qed.
Lemma lem4514287 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (p2' : A -> B) : (term491 A B p1' p2' b g t s d) = (term1938 A B b t s g d p1' p2').
Proof. exact (TRANS (@lem4514203 A B b g t s d p1' p2') (@lem4514286 A B b t s g d p1' p2')). Qed.
Lemma lem4514288 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4514289 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term519 A B p1' p2' t s d b g) = (term1939 A B t s d p1' p2' b g).
Proof. exact (MK_COMB (@lem4514287 A B b t s g d p1' p2') (@lem4514288 A B b g)). Qed.
Lemma lem4514291 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4514292 {A B : Type'} (f : type1217 A B) (y : type1658 A B) : (term521 A B f y) = (f y).
Proof. exact (@lem4514291 (type1658 A B) Prop f y). Qed.
Lemma lem4514293 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term1940 A B t s d p1' p2' b g) = (term1939 A B t s d p1' p2' b g).
Proof. exact (@lem4514292 A B (term1938 A B b t s g d p1' p2') (@pair B (A -> B) b g)). Qed.
Lemma lem4514294 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (p2' : A -> B) (t' : type1658 A B) : (term1941 A B b t s g d p1' p2' t') = (term1937 A B b t s g d p1' p2' t').
Proof. exact (eq_refl (term1941 A B b t s g d p1' p2' t')). Qed.
Lemma lem4514295 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (p2' : A -> B) : (term1942 A B b t s g d p1' p2') = (term1938 A B b t s g d p1' p2').
Proof. exact (fun_ext (fun t' : type1658 A B => @lem4514294 A B b t s g d p1' p2' t')). Qed.
Lemma lem4514296 {A B : Type'} (b : B) (g : A -> B) : (@pair B (A -> B) b g) = (@pair B (A -> B) b g).
Proof. exact (eq_refl (@pair B (A -> B) b g)). Qed.
Lemma lem4514297 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term1940 A B t s d p1' p2' b g) = (term1939 A B t s d p1' p2' b g).
Proof. exact (MK_COMB (@lem4514295 A B b t s g d p1' p2') (@lem4514296 A B b g)). Qed.
Lemma lem4514298 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514299 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term1943 A B t s d p1' p2' b g) = (term1944 A B t s d p1' p2' b g).
Proof. exact (MK_COMB (@lem4514298) (@lem4514297 A B t s d p1' p2' b g)). Qed.
Lemma lem4514300 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term1939 A B t s d p1' p2' b g) = (term1945 A B t s d p1' p2' b g).
Proof. exact (eq_refl (term1939 A B t s d p1' p2' b g)). Qed.
Lemma lem4514301 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : ((term1940 A B t s d p1' p2' b g) = (term1939 A B t s d p1' p2' b g)) = ((term1939 A B t s d p1' p2' b g) = (term1945 A B t s d p1' p2' b g)).
Proof. exact (MK_COMB (@lem4514299 A B t s d p1' p2' b g) (@lem4514300 A B t s d p1' p2' b g)). Qed.
Lemma lem4514302 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) (b : B) (g : A -> B) : (term1939 A B t s d p1' p2' b g) = (term1945 A B t s d p1' p2' b g).
Proof. exact (EQ_MP (@lem4514301 A B t s d p1' p2' b g) (@lem4514293 A B t s d p1' p2' b g)). Qed.
Lemma lem4514328 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : ((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b).
Proof. exact (EQ_MP (@lem4492129 A B x a y b) (@lem4492128 A B x a y b)). Qed.
Lemma lem4514329 {A B : Type'} (x : B) (a : B) (y : A -> B) (b : A -> B) : ((@pair B (A -> B) x y) = (@pair B (A -> B) a b)) = (term545 A B x a y b).
Proof. exact (@lem4514328 B (A -> B) x a y b). Qed.
Lemma lem4514330 {A B : Type'} (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : ((@pair B (A -> B) p1' p2') = (@pair B (A -> B) b g)) = (term545 A B p1' b p2' g).
Proof. exact (@lem4514329 A B p1' b p2' g). Qed.
Lemma lem4514337 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) : (term544 A B b t s g d) = (term544 A B b t s g d).
Proof. exact (eq_refl (term544 A B b t s g d)). Qed.
Lemma lem4514338 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term1945 A B t s d p1' p2' b g) = (term546 A B t s d p1' b p2' g).
Proof. exact (MK_COMB (@lem4514337 A B b t s g d) (@lem4514330 A B p1' b p2' g)). Qed.
Lemma lem4514340 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term30 t1 t2 t3) = (term31 t1 t2 t3).
Proof. exact (EQ_MP (@lem4492117 t1 t2 t3) (@lem4492116 t1 t2 t3)). Qed.
Lemma lem4514341 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term546 A B t s d p1' b p2' g) = (term547 A B t s d p1' b p2' g).
Proof. exact (@lem4514340 (term543 A B b t s g d) (p1' = b) (p2' = g)). Qed.
Lemma lem4514372 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term1945 A B t s d p1' p2' b g) = (term547 A B t s d p1' b p2' g).
Proof. exact (TRANS (@lem4514338 A B t s d p1' b p2' g) (@lem4514341 A B t s d p1' b p2' g)). Qed.
Lemma lem4514373 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term1939 A B t s d p1' p2' b g) = (term547 A B t s d p1' b p2' g).
Proof. exact (TRANS (@lem4514302 A B t s d p1' p2' b g) (@lem4514372 A B t s d p1' b p2' g)). Qed.
Lemma lem4514374 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term519 A B p1' p2' t s d b g) = (term547 A B t s d p1' b p2' g).
Proof. exact (TRANS (@lem4514289 A B t s d p1' p2' b g) (@lem4514373 A B t s d p1' b p2' g)). Qed.
Lemma lem4514375 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term528 A B p1' p2' t s d b) = (term548 A B t s d p1' b p2').
Proof. exact (fun_ext (fun g : A -> B => @lem4514374 A B t s d p1' b p2' g)). Qed.
Lemma lem4514376 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4514377 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term530 A B p1' p2' t s d b) = (term549 A B t s d p1' b p2').
Proof. exact (MK_COMB (@lem4514376 A B) (@lem4514375 A B t s d p1' b p2')). Qed.
Lemma lem4514382 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term532 A B p1' p2' t s d) = (term1946 A B t s d p1' p2').
Proof. exact (fun_ext (fun b : B => @lem4514377 A B t s d p1' b p2')). Qed.
Lemma lem4514383 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514384 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term488 A B p1' p2' t s d) = (term1947 A B t s d p1' p2').
Proof. exact (MK_COMB (@lem4514383 B) (@lem4514382 A B t s d p1' p2')). Qed.
Lemma lem4514389 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term485 A B p1' p2' t s d) = (term1947 A B t s d p1' p2').
Proof. exact (TRANS (@lem4514182 A B p1' p2' t s d) (@lem4514384 A B t s d p1' p2')). Qed.
Lemma lem4514390 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term1950 A B p1 p2 p1' p2' t s d) = (term1951 A B p1 p2 t s d p1' p2').
Proof. exact (MK_COMB (@lem4514167 A B t s d p1 p2) (@lem4514389 A B t s d p1' p2')). Qed.
Lemma lem4514393 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514394 {A B : Type'} (p1 : B) (p2 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (p2' : A -> B) : (term1952 A B p1 p2 p1' p2' t s d) = (term1953 A B p1 p2 t s d p1' p2').
Proof. exact (MK_COMB (@lem4514393) (@lem4514390 A B p1 p2 t s d p1' p2')). Qed.
Lemma lem4514397 {A B : Type'} (a0 : B) (a1 : A -> B) : a0 = (term421 A B a0 a1).
Proof. exact (@lem51128 B (A -> B) a0 a1). Qed.
Lemma lem4514398 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (@lem4514397 A B b g). Qed.
Lemma lem4514399 {A B : Type'} (a0 : B) (a1 : A -> B) : a1 = (term422 A B a0 a1).
Proof. exact (@lem51159 B (A -> B) a0 a1). Qed.
Lemma lem4514400 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (@lem4514399 A B b g). Qed.
Lemma lem4514401 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4514402 {B : Type'} : (term423 B) = (term423 B).
Proof. exact (eq_refl (term423 B)). Qed.
Lemma lem4514403 {A B : Type'} (b : B) (g : A -> B) : (term424 B b) = (term425 A B b g).
Proof. exact (MK_COMB (@lem4514402 B) (@lem4514398 A B b g)). Qed.
Lemma lem4514404 {A B : Type'} (b : B) (g : A -> B) : (term425 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term425 A B b g)). Qed.
Lemma lem4514405 {B : Type'} (b : B) : (term426 B b) = (term426 B b).
Proof. exact (eq_refl (term426 B b)). Qed.
Lemma lem4514406 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = ((term424 B b) = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514405 B b) (@lem4514404 A B b g)). Qed.
Lemma lem4514407 {B : Type'} (b : B) : (term424 B b) = b.
Proof. exact (eq_refl (term424 B b)). Qed.
Lemma lem4514408 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4514409 {B : Type'} (b : B) : (term426 B b) = (@eq B b).
Proof. exact (MK_COMB (@lem4514408 B) (@lem4514407 B b)). Qed.
Lemma lem4514410 {A B : Type'} (b : B) (g : A -> B) : (term421 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term421 A B b g)). Qed.
Lemma lem4514411 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term421 A B b g)) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514409 B b) (@lem4514410 A B b g)). Qed.
Lemma lem4514412 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = (b = (term421 A B b g)).
Proof. exact (TRANS (@lem4514406 A B b g) (@lem4514411 A B b g)). Qed.
Lemma lem4514413 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4514412 A B b g) (@lem4514403 A B b g)). Qed.
Lemma lem4514414 {B : Type'} (b : B) : (@eq B b) = (@eq B b).
Proof. exact (eq_refl (@eq B b)). Qed.
Lemma lem4514415 {A B : Type'} (b : B) (g : A -> B) : (b = b) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514414 B b) (@lem4514413 A B b g)). Qed.
Lemma lem4514416 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4514415 A B b g) (@lem4514401 B b)). Qed.
Lemma lem4514417 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem4514418 {A B : Type'} : (term427 A B) = (term427 A B).
Proof. exact (eq_refl (term427 A B)). Qed.
Lemma lem4514419 {A B : Type'} (b : B) (g : A -> B) : (term428 A B g) = (term429 A B b g).
Proof. exact (MK_COMB (@lem4514418 A B) (@lem4514400 A B b g)). Qed.
Lemma lem4514420 {A B : Type'} (b : B) (g : A -> B) : (term429 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term429 A B b g)). Qed.
Lemma lem4514421 {A B : Type'} (g : A -> B) : (term430 A B g) = (term430 A B g).
Proof. exact (eq_refl (term430 A B g)). Qed.
Lemma lem4514422 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = ((term428 A B g) = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514421 A B g) (@lem4514420 A B b g)). Qed.
Lemma lem4514423 {A B : Type'} (g : A -> B) : (term428 A B g) = g.
Proof. exact (eq_refl (term428 A B g)). Qed.
Lemma lem4514424 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4514425 {A B : Type'} (g : A -> B) : (term430 A B g) = (@eq (A -> B) g).
Proof. exact (MK_COMB (@lem4514424 A B) (@lem4514423 A B g)). Qed.
Lemma lem4514426 {A B : Type'} (b : B) (g : A -> B) : (term422 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term422 A B b g)). Qed.
Lemma lem4514427 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term422 A B b g)) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514425 A B g) (@lem4514426 A B b g)). Qed.
Lemma lem4514428 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = (g = (term422 A B b g)).
Proof. exact (TRANS (@lem4514422 A B b g) (@lem4514427 A B b g)). Qed.
Lemma lem4514429 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4514428 A B b g) (@lem4514419 A B b g)). Qed.
Lemma lem4514430 {A B : Type'} (g : A -> B) : (@eq (A -> B) g) = (@eq (A -> B) g).
Proof. exact (eq_refl (@eq (A -> B) g)). Qed.
Lemma lem4514431 {A B : Type'} (b : B) (g : A -> B) : (g = g) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514430 A B g) (@lem4514429 A B b g)). Qed.
Lemma lem4514432 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4514431 A B b g) (@lem4514417 A B g)). Qed.
Lemma lem4514433 {A B : Type'} (a : A) : (term431 A B a) = (term431 A B a).
Proof. exact (eq_refl (term431 A B a)). Qed.
Lemma lem4514434 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term432 A B a b) = (term433 A B a b g).
Proof. exact (MK_COMB (@lem4514433 A B a) (@lem4514416 A B b g)). Qed.
Lemma lem4514435 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term433 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term433 A B a b g)). Qed.
Lemma lem4514436 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term435 A B a b).
Proof. exact (eq_refl (term435 A B a b)). Qed.
Lemma lem4514437 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term432 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4514436 A B a b) (@lem4514435 A B a b g)). Qed.
Lemma lem4514438 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4514439 {A B : Type'} : (@eq ((A -> B) -> A -> B)) = (@eq ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@eq ((A -> B) -> A -> B))). Qed.
Lemma lem4514440 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term437 A B a b).
Proof. exact (MK_COMB (@lem4514439 A B) (@lem4514438 A B a b)). Qed.
Lemma lem4514441 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term434 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term434 A B a b g)). Qed.
Lemma lem4514442 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term434 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4514440 A B a b) (@lem4514441 A B a b g)). Qed.
Lemma lem4514443 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (TRANS (@lem4514437 A B a b g) (@lem4514442 A B a b g)). Qed.
Lemma lem4514444 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term436 A B a b) = (term434 A B a b g).
Proof. exact (EQ_MP (@lem4514443 A B a b g) (@lem4514434 A B a b g)). Qed.
Lemma lem4514445 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term439 A B a b g).
Proof. exact (MK_COMB (@lem4514444 A B a b g) (@lem4514432 A B b g)). Qed.
Lemma lem4514446 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term439 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term439 A B a b g)). Qed.
Lemma lem4514447 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term441 A B a b g).
Proof. exact (eq_refl (term441 A B a b g)). Qed.
Lemma lem4514448 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term438 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4514447 A B a b g) (@lem4514446 A B a b g)). Qed.
Lemma lem4514449 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4514450 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4514451 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term443 A B a b g).
Proof. exact (MK_COMB (@lem4514450 A B) (@lem4514449 A B a b g)). Qed.
Lemma lem4514452 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term440 A B a b g)). Qed.
Lemma lem4514453 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term440 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4514451 A B a b g) (@lem4514452 A B a b g)). Qed.
Lemma lem4514454 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (TRANS (@lem4514448 A B a b g) (@lem4514453 A B a b g)). Qed.
Lemma lem4514455 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term442 A B a b g) = (term440 A B a b g).
Proof. exact (EQ_MP (@lem4514454 A B a b g) (@lem4514445 A B a b g)). Qed.
Lemma lem4514456 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term442 A B a b g).
Proof. exact (SYM (@lem4514455 A B a b g)). Qed.
Lemma lem4514457 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term444 A B a b g)). Qed.
Lemma lem4514458 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term442 A B a b g).
Proof. exact (TRANS (@lem4514457 A B a b g) (@lem4514456 A B a b g)). Qed.
Lemma lem4514459 {A B : Type'} (a : A) (b : B) : term445 A B a b.
Proof. exact (fun g : A -> B => @lem4514458 A B a b g). Qed.
Lemma lem4514460 {A B : Type'} (a : A) : term446 A B a.
Proof. exact (fun b : B => @lem4514459 A B a b). Qed.
Lemma lem4514461 {A B : Type'} (a : A) : term447 A B a.
Proof. exact (ex_intro (term448 A B a) (term449 A B a) (@lem4514460 A B a)). Qed.
Lemma lem4514463 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem4514464 {A B : Type'} (a : A -> B) (b : A -> B) : (a = b) = (@GEQ (A -> B) a b).
Proof. exact (@lem4514463 (A -> B) a b). Qed.
Lemma lem4514465 {A B : Type'} (_53568 : type1215 A B) (a : A) (b : B) (g : A -> B) : ((term450 A B _53568 b g) = (term442 A B a b g)) = (term451 A B _53568 a b g).
Proof. exact (@lem4514464 A B (term450 A B _53568 b g) (term442 A B a b g)). Qed.
Lemma lem4514466 {A B : Type'} (_53568 : type1215 A B) (a : A) (b : B) : (term452 A B _53568 a b) = (term453 A B _53568 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4514465 A B _53568 a b g)). Qed.
Lemma lem4514467 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514468 {A B : Type'} (_53568 : type1215 A B) (a : A) (b : B) : (term454 A B _53568 a b) = (term455 A B _53568 a b).
Proof. exact (MK_COMB (@lem4514467 A B) (@lem4514466 A B _53568 a b)). Qed.
Lemma lem4514469 {A B : Type'} (_53568 : type1215 A B) (a : A) : (term456 A B _53568 a) = (term457 A B _53568 a).
Proof. exact (fun_ext (fun b : B => @lem4514468 A B _53568 a b)). Qed.
Lemma lem4514470 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514471 {A B : Type'} (_53568 : type1215 A B) (a : A) : (term458 A B _53568 a) = (term459 A B _53568 a).
Proof. exact (MK_COMB (@lem4514470 B) (@lem4514469 A B _53568 a)). Qed.
Lemma lem4514472 {A B : Type'} (a : A) : (term448 A B a) = (term460 A B a).
Proof. exact (fun_ext (fun _53568 : type1215 A B => @lem4514471 A B _53568 a)). Qed.
Lemma lem4514473 {A B : Type'} : (@ex ((prod B (A -> B)) -> A -> B)) = (@ex ((prod B (A -> B)) -> A -> B)).
Proof. exact (eq_refl (@ex ((prod B (A -> B)) -> A -> B))). Qed.
Lemma lem4514474 {A B : Type'} (a : A) : (term447 A B a) = (term461 A B a).
Proof. exact (MK_COMB (@lem4514473 A B) (@lem4514472 A B a)). Qed.
Lemma lem4514475 {A B : Type'} (a : A) : term461 A B a.
Proof. exact (EQ_MP (@lem4514474 A B a) (@lem4514461 A B a)). Qed.
Lemma lem4514477 {_5076 : Type'} (P : _5076 -> Prop) : term462 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem4514478 {A B : Type'} (P : type326 A B) : term463 A B P.
Proof. exact (@lem4514477 (type1215 A B) P). Qed.
Lemma lem4514479 {A B : Type'} (a : A) : term464 A B a.
Proof. exact (@lem4514478 A B (term460 A B a)). Qed.
Lemma lem4514480 {A B : Type'} (a : A) : term465 A B a.
Proof. exact (@lem4514479 A B a (@lem4514475 A B a)). Qed.
Lemma lem4514481 {A B : Type'} (a : A) : (term465 A B a) = (term466 A B a).
Proof. exact (eq_refl (term465 A B a)). Qed.
Lemma lem4514482 {A B : Type'} (a : A) : term466 A B a.
Proof. exact (EQ_MP (@lem4514481 A B a) (@lem4514480 A B a)). Qed.
Lemma lem4514483 {A B : Type'} (a : A) (b : B) : term467 A B a b.
Proof. exact (@lem4514482 A B a b). Qed.
Lemma lem4514484 {A B : Type'} (a : A) (b : B) : (term467 A B a b) = (term468 A B a b).
Proof. exact (eq_refl (term467 A B a b)). Qed.
Lemma lem4514485 {A B : Type'} (a : A) (b : B) : term468 A B a b.
Proof. exact (EQ_MP (@lem4514484 A B a b) (@lem4514483 A B a b)). Qed.
Lemma lem4514486 {A B : Type'} (a : A) (b : B) (g : A -> B) : term469 A B a b g.
Proof. exact (@lem4514485 A B a b g). Qed.
Lemma lem4514487 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term469 A B a b g) = (term470 A B a b g).
Proof. exact (eq_refl (term469 A B a b g)). Qed.
Lemma lem4514488 {A B : Type'} (a : A) (b : B) (g : A -> B) : term470 A B a b g.
Proof. exact (EQ_MP (@lem4514487 A B a b g) (@lem4514486 A B a b g)). Qed.
Lemma lem4514490 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem4514491 {A B : Type'} (a : A -> B) (b : A -> B) : (@GEQ (A -> B) a b) = (a = b).
Proof. exact (@lem4514490 (A -> B) a b). Qed.
Lemma lem4514492 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term470 A B a b g) = ((term471 A B a b g) = (term442 A B a b g)).
Proof. exact (@lem4514491 A B (term471 A B a b g) (term442 A B a b g)). Qed.
Lemma lem4514493 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (EQ_MP (@lem4514492 A B a b g) (@lem4514488 A B a b g)). Qed.
Lemma lem4514494 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (@lem4514493 A B a b g). Qed.
Lemma lem4514495 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) : (term471 A B a p1 p2) = (term442 A B a p1 p2).
Proof. exact (@lem4514494 A B a p1 p2). Qed.
Lemma lem4514500 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4514501 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) : (term1954 A B a p1 p2) = (term443 A B a p1 p2).
Proof. exact (MK_COMB (@lem4514500 A B) (@lem4514495 A B a p1 p2)). Qed.
Lemma lem4514502 {A B : Type'} (a0 : B) (a1 : A -> B) : a0 = (term421 A B a0 a1).
Proof. exact (@lem51128 B (A -> B) a0 a1). Qed.
Lemma lem4514503 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (@lem4514502 A B b g). Qed.
Lemma lem4514504 {A B : Type'} (a0 : B) (a1 : A -> B) : a1 = (term422 A B a0 a1).
Proof. exact (@lem51159 B (A -> B) a0 a1). Qed.
Lemma lem4514505 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (@lem4514504 A B b g). Qed.
Lemma lem4514506 {B : Type'} (b : B) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4514507 {B : Type'} : (term423 B) = (term423 B).
Proof. exact (eq_refl (term423 B)). Qed.
Lemma lem4514508 {A B : Type'} (b : B) (g : A -> B) : (term424 B b) = (term425 A B b g).
Proof. exact (MK_COMB (@lem4514507 B) (@lem4514503 A B b g)). Qed.
Lemma lem4514509 {A B : Type'} (b : B) (g : A -> B) : (term425 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term425 A B b g)). Qed.
Lemma lem4514510 {B : Type'} (b : B) : (term426 B b) = (term426 B b).
Proof. exact (eq_refl (term426 B b)). Qed.
Lemma lem4514511 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = ((term424 B b) = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514510 B b) (@lem4514509 A B b g)). Qed.
Lemma lem4514512 {B : Type'} (b : B) : (term424 B b) = b.
Proof. exact (eq_refl (term424 B b)). Qed.
Lemma lem4514513 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4514514 {B : Type'} (b : B) : (term426 B b) = (@eq B b).
Proof. exact (MK_COMB (@lem4514513 B) (@lem4514512 B b)). Qed.
Lemma lem4514515 {A B : Type'} (b : B) (g : A -> B) : (term421 A B b g) = (term421 A B b g).
Proof. exact (eq_refl (term421 A B b g)). Qed.
Lemma lem4514516 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term421 A B b g)) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514514 B b) (@lem4514515 A B b g)). Qed.
Lemma lem4514517 {A B : Type'} (b : B) (g : A -> B) : ((term424 B b) = (term425 A B b g)) = (b = (term421 A B b g)).
Proof. exact (TRANS (@lem4514511 A B b g) (@lem4514516 A B b g)). Qed.
Lemma lem4514518 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4514517 A B b g) (@lem4514508 A B b g)). Qed.
Lemma lem4514519 {B : Type'} (b : B) : (@eq B b) = (@eq B b).
Proof. exact (eq_refl (@eq B b)). Qed.
Lemma lem4514520 {A B : Type'} (b : B) (g : A -> B) : (b = b) = (b = (term421 A B b g)).
Proof. exact (MK_COMB (@lem4514519 B b) (@lem4514518 A B b g)). Qed.
Lemma lem4514521 {A B : Type'} (b : B) (g : A -> B) : b = (term421 A B b g).
Proof. exact (EQ_MP (@lem4514520 A B b g) (@lem4514506 B b)). Qed.
Lemma lem4514522 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem4514523 {A B : Type'} : (term427 A B) = (term427 A B).
Proof. exact (eq_refl (term427 A B)). Qed.
Lemma lem4514524 {A B : Type'} (b : B) (g : A -> B) : (term428 A B g) = (term429 A B b g).
Proof. exact (MK_COMB (@lem4514523 A B) (@lem4514505 A B b g)). Qed.
Lemma lem4514525 {A B : Type'} (b : B) (g : A -> B) : (term429 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term429 A B b g)). Qed.
Lemma lem4514526 {A B : Type'} (g : A -> B) : (term430 A B g) = (term430 A B g).
Proof. exact (eq_refl (term430 A B g)). Qed.
Lemma lem4514527 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = ((term428 A B g) = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514526 A B g) (@lem4514525 A B b g)). Qed.
Lemma lem4514528 {A B : Type'} (g : A -> B) : (term428 A B g) = g.
Proof. exact (eq_refl (term428 A B g)). Qed.
Lemma lem4514529 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4514530 {A B : Type'} (g : A -> B) : (term430 A B g) = (@eq (A -> B) g).
Proof. exact (MK_COMB (@lem4514529 A B) (@lem4514528 A B g)). Qed.
Lemma lem4514531 {A B : Type'} (b : B) (g : A -> B) : (term422 A B b g) = (term422 A B b g).
Proof. exact (eq_refl (term422 A B b g)). Qed.
Lemma lem4514532 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term422 A B b g)) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514530 A B g) (@lem4514531 A B b g)). Qed.
Lemma lem4514533 {A B : Type'} (b : B) (g : A -> B) : ((term428 A B g) = (term429 A B b g)) = (g = (term422 A B b g)).
Proof. exact (TRANS (@lem4514527 A B b g) (@lem4514532 A B b g)). Qed.
Lemma lem4514534 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4514533 A B b g) (@lem4514524 A B b g)). Qed.
Lemma lem4514535 {A B : Type'} (g : A -> B) : (@eq (A -> B) g) = (@eq (A -> B) g).
Proof. exact (eq_refl (@eq (A -> B) g)). Qed.
Lemma lem4514536 {A B : Type'} (b : B) (g : A -> B) : (g = g) = (g = (term422 A B b g)).
Proof. exact (MK_COMB (@lem4514535 A B g) (@lem4514534 A B b g)). Qed.
Lemma lem4514537 {A B : Type'} (b : B) (g : A -> B) : g = (term422 A B b g).
Proof. exact (EQ_MP (@lem4514536 A B b g) (@lem4514522 A B g)). Qed.
Lemma lem4514538 {A B : Type'} (a : A) : (term431 A B a) = (term431 A B a).
Proof. exact (eq_refl (term431 A B a)). Qed.
Lemma lem4514539 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term432 A B a b) = (term433 A B a b g).
Proof. exact (MK_COMB (@lem4514538 A B a) (@lem4514521 A B b g)). Qed.
Lemma lem4514540 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term433 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term433 A B a b g)). Qed.
Lemma lem4514541 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term435 A B a b).
Proof. exact (eq_refl (term435 A B a b)). Qed.
Lemma lem4514542 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term432 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4514541 A B a b) (@lem4514540 A B a b g)). Qed.
Lemma lem4514543 {A B : Type'} (a : A) (b : B) : (term432 A B a b) = (term436 A B a b).
Proof. exact (eq_refl (term432 A B a b)). Qed.
Lemma lem4514544 {A B : Type'} : (@eq ((A -> B) -> A -> B)) = (@eq ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@eq ((A -> B) -> A -> B))). Qed.
Lemma lem4514545 {A B : Type'} (a : A) (b : B) : (term435 A B a b) = (term437 A B a b).
Proof. exact (MK_COMB (@lem4514544 A B) (@lem4514543 A B a b)). Qed.
Lemma lem4514546 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term434 A B a b g) = (term434 A B a b g).
Proof. exact (eq_refl (term434 A B a b g)). Qed.
Lemma lem4514547 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term434 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (MK_COMB (@lem4514545 A B a b) (@lem4514546 A B a b g)). Qed.
Lemma lem4514548 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term432 A B a b) = (term433 A B a b g)) = ((term436 A B a b) = (term434 A B a b g)).
Proof. exact (TRANS (@lem4514542 A B a b g) (@lem4514547 A B a b g)). Qed.
Lemma lem4514549 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term436 A B a b) = (term434 A B a b g).
Proof. exact (EQ_MP (@lem4514548 A B a b g) (@lem4514539 A B a b g)). Qed.
Lemma lem4514550 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term439 A B a b g).
Proof. exact (MK_COMB (@lem4514549 A B a b g) (@lem4514537 A B b g)). Qed.
Lemma lem4514551 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term439 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term439 A B a b g)). Qed.
Lemma lem4514552 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term441 A B a b g).
Proof. exact (eq_refl (term441 A B a b g)). Qed.
Lemma lem4514553 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term438 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4514552 A B a b g) (@lem4514551 A B a b g)). Qed.
Lemma lem4514554 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term438 A B a b g) = (term442 A B a b g).
Proof. exact (eq_refl (term438 A B a b g)). Qed.
Lemma lem4514555 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem4514556 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term441 A B a b g) = (term443 A B a b g).
Proof. exact (MK_COMB (@lem4514555 A B) (@lem4514554 A B a b g)). Qed.
Lemma lem4514557 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term440 A B a b g)). Qed.
Lemma lem4514558 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term440 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (MK_COMB (@lem4514556 A B a b g) (@lem4514557 A B a b g)). Qed.
Lemma lem4514559 {A B : Type'} (a : A) (b : B) (g : A -> B) : ((term438 A B a b g) = (term439 A B a b g)) = ((term442 A B a b g) = (term440 A B a b g)).
Proof. exact (TRANS (@lem4514553 A B a b g) (@lem4514558 A B a b g)). Qed.
Lemma lem4514560 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term442 A B a b g) = (term440 A B a b g).
Proof. exact (EQ_MP (@lem4514559 A B a b g) (@lem4514550 A B a b g)). Qed.
Lemma lem4514561 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term440 A B a b g) = (term442 A B a b g).
Proof. exact (SYM (@lem4514560 A B a b g)). Qed.
Lemma lem4514562 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term440 A B a b g).
Proof. exact (eq_refl (term444 A B a b g)). Qed.
Lemma lem4514563 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term444 A B a b g) = (term442 A B a b g).
Proof. exact (TRANS (@lem4514562 A B a b g) (@lem4514561 A B a b g)). Qed.
Lemma lem4514564 {A B : Type'} (a : A) (b : B) : term445 A B a b.
Proof. exact (fun g : A -> B => @lem4514563 A B a b g). Qed.
Lemma lem4514565 {A B : Type'} (a : A) : term446 A B a.
Proof. exact (fun b : B => @lem4514564 A B a b). Qed.
Lemma lem4514566 {A B : Type'} (a : A) : term447 A B a.
Proof. exact (ex_intro (term448 A B a) (term449 A B a) (@lem4514565 A B a)). Qed.
Lemma lem4514568 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem4514569 {A B : Type'} (a : A -> B) (b : A -> B) : (a = b) = (@GEQ (A -> B) a b).
Proof. exact (@lem4514568 (A -> B) a b). Qed.
Lemma lem4514570 {A B : Type'} (_53580 : type1215 A B) (a : A) (b : B) (g : A -> B) : ((term450 A B _53580 b g) = (term442 A B a b g)) = (term451 A B _53580 a b g).
Proof. exact (@lem4514569 A B (term450 A B _53580 b g) (term442 A B a b g)). Qed.
Lemma lem4514571 {A B : Type'} (_53580 : type1215 A B) (a : A) (b : B) : (term452 A B _53580 a b) = (term453 A B _53580 a b).
Proof. exact (fun_ext (fun g : A -> B => @lem4514570 A B _53580 a b g)). Qed.
Lemma lem4514572 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514573 {A B : Type'} (_53580 : type1215 A B) (a : A) (b : B) : (term454 A B _53580 a b) = (term455 A B _53580 a b).
Proof. exact (MK_COMB (@lem4514572 A B) (@lem4514571 A B _53580 a b)). Qed.
Lemma lem4514574 {A B : Type'} (_53580 : type1215 A B) (a : A) : (term456 A B _53580 a) = (term457 A B _53580 a).
Proof. exact (fun_ext (fun b : B => @lem4514573 A B _53580 a b)). Qed.
Lemma lem4514575 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514576 {A B : Type'} (_53580 : type1215 A B) (a : A) : (term458 A B _53580 a) = (term459 A B _53580 a).
Proof. exact (MK_COMB (@lem4514575 B) (@lem4514574 A B _53580 a)). Qed.
Lemma lem4514577 {A B : Type'} (a : A) : (term448 A B a) = (term460 A B a).
Proof. exact (fun_ext (fun _53580 : type1215 A B => @lem4514576 A B _53580 a)). Qed.
Lemma lem4514578 {A B : Type'} : (@ex ((prod B (A -> B)) -> A -> B)) = (@ex ((prod B (A -> B)) -> A -> B)).
Proof. exact (eq_refl (@ex ((prod B (A -> B)) -> A -> B))). Qed.
Lemma lem4514579 {A B : Type'} (a : A) : (term447 A B a) = (term461 A B a).
Proof. exact (MK_COMB (@lem4514578 A B) (@lem4514577 A B a)). Qed.
Lemma lem4514580 {A B : Type'} (a : A) : term461 A B a.
Proof. exact (EQ_MP (@lem4514579 A B a) (@lem4514566 A B a)). Qed.
Lemma lem4514582 {_5076 : Type'} (P : _5076 -> Prop) : term462 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem4514583 {A B : Type'} (P : type326 A B) : term463 A B P.
Proof. exact (@lem4514582 (type1215 A B) P). Qed.
Lemma lem4514584 {A B : Type'} (a : A) : term464 A B a.
Proof. exact (@lem4514583 A B (term460 A B a)). Qed.
Lemma lem4514585 {A B : Type'} (a : A) : term465 A B a.
Proof. exact (@lem4514584 A B a (@lem4514580 A B a)). Qed.
Lemma lem4514586 {A B : Type'} (a : A) : (term465 A B a) = (term466 A B a).
Proof. exact (eq_refl (term465 A B a)). Qed.
Lemma lem4514587 {A B : Type'} (a : A) : term466 A B a.
Proof. exact (EQ_MP (@lem4514586 A B a) (@lem4514585 A B a)). Qed.
Lemma lem4514588 {A B : Type'} (a : A) (b : B) : term467 A B a b.
Proof. exact (@lem4514587 A B a b). Qed.
Lemma lem4514589 {A B : Type'} (a : A) (b : B) : (term467 A B a b) = (term468 A B a b).
Proof. exact (eq_refl (term467 A B a b)). Qed.
Lemma lem4514590 {A B : Type'} (a : A) (b : B) : term468 A B a b.
Proof. exact (EQ_MP (@lem4514589 A B a b) (@lem4514588 A B a b)). Qed.
Lemma lem4514591 {A B : Type'} (a : A) (b : B) (g : A -> B) : term469 A B a b g.
Proof. exact (@lem4514590 A B a b g). Qed.
Lemma lem4514592 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term469 A B a b g) = (term470 A B a b g).
Proof. exact (eq_refl (term469 A B a b g)). Qed.
Lemma lem4514593 {A B : Type'} (a : A) (b : B) (g : A -> B) : term470 A B a b g.
Proof. exact (EQ_MP (@lem4514592 A B a b g) (@lem4514591 A B a b g)). Qed.
Lemma lem4514595 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem4514596 {A B : Type'} (a : A -> B) (b : A -> B) : (@GEQ (A -> B) a b) = (a = b).
Proof. exact (@lem4514595 (A -> B) a b). Qed.
Lemma lem4514597 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term470 A B a b g) = ((term471 A B a b g) = (term442 A B a b g)).
Proof. exact (@lem4514596 A B (term471 A B a b g) (term442 A B a b g)). Qed.
Lemma lem4514598 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (EQ_MP (@lem4514597 A B a b g) (@lem4514593 A B a b g)). Qed.
Lemma lem4514599 {A B : Type'} (a : A) (b : B) (g : A -> B) : (term471 A B a b g) = (term442 A B a b g).
Proof. exact (@lem4514598 A B a b g). Qed.
Lemma lem4514600 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) : (term471 A B a p1' p2') = (term442 A B a p1' p2').
Proof. exact (@lem4514599 A B a p1' p2'). Qed.
Lemma lem4514605 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : ((term471 A B a p1 p2) = (term471 A B a p1' p2')) = ((term442 A B a p1 p2) = (term442 A B a p1' p2')).
Proof. exact (MK_COMB (@lem4514501 A B a p1 p2) (@lem4514600 A B a p1' p2')). Qed.
Lemma lem4514608 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1936 A B t s d p1 p2 a p1' p2') = (term1955 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4514394 A B p1 p2 t s d p1' p2') (@lem4514605 A B p1 p2 a p1' p2')). Qed.
Lemma lem4514611 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1935 A B t s d p1 p2 a p1' p2') = (term1955 A B t s d p1 p2 a p1' p2').
Proof. exact (TRANS (@lem4513939 A B t s d p1 p2 a p1' p2') (@lem4514608 A B t s d p1 p2 a p1' p2')). Qed.
Lemma lem4514612 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4514613 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1956 A B t s d p1 p2 a p1' p2') = (term1957 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4514612) (@lem4514611 A B t s d p1 p2 a p1' p2')). Qed.
Lemma lem4514615 {A B : Type'} (x : A) (a : A) (y : B) (b : B) : ((@pair A B x y) = (@pair A B a b)) = (term39 A B x a y b).
Proof. exact (EQ_MP (@lem4492129 A B x a y b) (@lem4492128 A B x a y b)). Qed.
Lemma lem4514616 {A B : Type'} (x : B) (a : B) (y : A -> B) (b : A -> B) : ((@pair B (A -> B) x y) = (@pair B (A -> B) a b)) = (term545 A B x a y b).
Proof. exact (@lem4514615 B (A -> B) x a y b). Qed.
Lemma lem4514617 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : ((@pair B (A -> B) p1 p2) = (@pair B (A -> B) p1' p2')) = (term545 A B p1 p1' p2 p2').
Proof. exact (@lem4514616 A B p1 p1' p2 p2'). Qed.
Lemma lem4514624 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : (term1927 A B t s d a p1 p2 p1' p2') = (term1958 A B t s d a p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem4514613 A B t s d p1 p2 a p1' p2') (@lem4514617 A B p1 p1' p2 p2')). Qed.
Lemma lem4514627 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1929 A B t s d a p1 p2 p1') = (term1959 A B t s d a p1 p1' p2).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4514624 A B t s d a p1 p1' p2 p2')). Qed.
Lemma lem4514628 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514629 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1931 A B t s d a p1 p2 p1') = (term1960 A B t s d a p1 p1' p2).
Proof. exact (MK_COMB (@lem4514628 A B) (@lem4514627 A B t s d a p1 p1' p2)). Qed.
Lemma lem4514636 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1933 A B t s d a p1 p2) = (term1961 A B t s d a p1 p2).
Proof. exact (fun_ext (fun p1' : B => @lem4514629 A B t s d a p1 p1' p2)). Qed.
Lemma lem4514637 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514638 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1934 A B t s d a p1 p2) = (term1962 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4514637 B) (@lem4514636 A B t s d a p1 p2)). Qed.
Lemma lem4514645 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1910 A B t s d a p1 p2) = (term1962 A B t s d a p1 p2).
Proof. exact (TRANS (@lem4513922 A B t s d a p1 p2) (@lem4514638 A B t s d a p1 p2)). Qed.
Lemma lem4514646 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1912 A B t s d a p1) = (term1963 A B t s d a p1).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4514645 A B t s d a p1 p2)). Qed.
Lemma lem4514647 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514648 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1914 A B t s d a p1) = (term1964 A B t s d a p1).
Proof. exact (MK_COMB (@lem4514647 A B) (@lem4514646 A B t s d a p1)). Qed.
Lemma lem4514655 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1916 A B t s d a) = (term1965 A B t s d a).
Proof. exact (fun_ext (fun p1 : B => @lem4514648 A B t s d a p1)). Qed.
Lemma lem4514656 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514657 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1917 A B t s d a) = (term1966 A B t s d a).
Proof. exact (MK_COMB (@lem4514656 B) (@lem4514655 A B t s d a)). Qed.
Lemma lem4514664 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1898 A B t s d a) = (term1966 A B t s d a).
Proof. exact (TRANS (@lem4513887 A B t s d a) (@lem4514657 A B t s d a)). Qed.
Lemma lem4514665 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1966 A B t s d a) = (term1898 A B t s d a).
Proof. exact (SYM (@lem4514664 A B t s d a)). Qed.
Lemma lem4514693 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492108 A P a) (@lem4492107 A P a)). Qed.
Lemma lem4514694 {A B : Type'} (P : type572 A B) (a : A -> B) : (term550 A B P a) = (P a).
Proof. exact (@lem4514693 (A -> B) P a). Qed.
Lemma lem4514695 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term551 A B t s d p1 b p2) = (term552 A B t s d p1 b p2).
Proof. exact (@lem4514694 A B (term553 A B t s d p1 b) p2). Qed.
Lemma lem4514696 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (b : B) : (term552 A B t s d p1 b g) = (term554 A B t s g d p1 b).
Proof. exact (eq_refl (term552 A B t s d p1 b g)). Qed.
Lemma lem4514697 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514698 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1 : B) (b : B) : (term555 A B t s d p1 b g) = (term556 A B t s g d p1 b).
Proof. exact (MK_COMB (@lem4514697) (@lem4514696 A B t s g d p1 b)). Qed.
Lemma lem4514699 {A B : Type'} (p2 : A -> B) (g : A -> B) : (p2 = g) = (p2 = g).
Proof. exact (eq_refl (p2 = g)). Qed.
Lemma lem4514700 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) (g : A -> B) : (term557 A B t s d p1 b p2 g) = (term547 A B t s d p1 b p2 g).
Proof. exact (MK_COMB (@lem4514698 A B t s g d p1 b) (@lem4514699 A B p2 g)). Qed.
Lemma lem4514701 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term558 A B t s d p1 b p2) = (term548 A B t s d p1 b p2).
Proof. exact (fun_ext (fun g : A -> B => @lem4514700 A B t s d p1 b p2 g)). Qed.
Lemma lem4514702 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4514703 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term551 A B t s d p1 b p2) = (term549 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4514702 A B) (@lem4514701 A B t s d p1 b p2)). Qed.
Lemma lem4514704 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514705 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (b : B) (p2 : A -> B) : (term559 A B t s d p1 b p2) = (term560 A B t s d p1 b p2).
Proof. exact (MK_COMB (@lem4514704) (@lem4514703 A B t s d p1 b p2)). Qed.
Lemma lem4514706 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term552 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b).
Proof. exact (eq_refl (term552 A B t s d p1 b p2)). Qed.
Lemma lem4514707 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : ((term551 A B t s d p1 b p2) = (term552 A B t s d p1 b p2)) = ((term549 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b)).
Proof. exact (MK_COMB (@lem4514705 A B t s d p1 b p2) (@lem4514706 A B t s p2 d p1 b)). Qed.
Lemma lem4514708 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term549 A B t s d p1 b p2) = (term554 A B t s p2 d p1 b).
Proof. exact (EQ_MP (@lem4514707 A B t s p2 d p1 b) (@lem4514695 A B t s d p1 b p2)). Qed.
Lemma lem4514731 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term1946 A B t s d p1 p2) = (term561 A B t s p2 d p1).
Proof. exact (fun_ext (fun b : B => @lem4514708 A B t s p2 d p1 b)). Qed.
Lemma lem4514732 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514733 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term1947 A B t s d p1 p2) = (term562 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4514732 B) (@lem4514731 A B t s p2 d p1)). Qed.
Lemma lem4514735 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492108 A P a) (@lem4492107 A P a)). Qed.
Lemma lem4514736 {B : Type'} (P : B -> Prop) (a : B) : (term12 B P a) = (P a).
Proof. exact (@lem4514735 B P a). Qed.
Lemma lem4514737 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term563 A B t s p2 d p1) = (term564 A B t s p2 d p1).
Proof. exact (@lem4514736 B (term565 A B t s p2 d) p1). Qed.
Lemma lem4514738 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term564 A B t s p2 d b) = (term543 A B b t s p2 d).
Proof. exact (eq_refl (term564 A B t s p2 d b)). Qed.
Lemma lem4514739 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514740 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term566 A B t s p2 d b) = (term544 A B b t s p2 d).
Proof. exact (MK_COMB (@lem4514739) (@lem4514738 A B b t s p2 d)). Qed.
Lemma lem4514741 {B : Type'} (p1 : B) (b : B) : (p1 = b) = (p1 = b).
Proof. exact (eq_refl (p1 = b)). Qed.
Lemma lem4514742 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) (b : B) : (term567 A B t s p2 d p1 b) = (term554 A B t s p2 d p1 b).
Proof. exact (MK_COMB (@lem4514740 A B b t s p2 d) (@lem4514741 B p1 b)). Qed.
Lemma lem4514743 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term568 A B t s p2 d p1) = (term561 A B t s p2 d p1).
Proof. exact (fun_ext (fun b : B => @lem4514742 A B t s p2 d p1 b)). Qed.
Lemma lem4514744 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514745 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term563 A B t s p2 d p1) = (term562 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4514744 B) (@lem4514743 A B t s p2 d p1)). Qed.
Lemma lem4514746 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514747 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (p1 : B) : (term569 A B t s p2 d p1) = (term570 A B t s p2 d p1).
Proof. exact (MK_COMB (@lem4514746) (@lem4514745 A B t s p2 d p1)). Qed.
Lemma lem4514748 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term564 A B t s p2 d p1) = (term543 A B p1 t s p2 d).
Proof. exact (eq_refl (term564 A B t s p2 d p1)). Qed.
Lemma lem4514749 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : ((term563 A B t s p2 d p1) = (term564 A B t s p2 d p1)) = ((term562 A B t s p2 d p1) = (term543 A B p1 t s p2 d)).
Proof. exact (MK_COMB (@lem4514747 A B t s p2 d p1) (@lem4514748 A B p1 t s p2 d)). Qed.
Lemma lem4514750 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term562 A B t s p2 d p1) = (term543 A B p1 t s p2 d).
Proof. exact (EQ_MP (@lem4514749 A B p1 t s p2 d) (@lem4514737 A B t s p2 d p1)). Qed.
Lemma lem4514769 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term1947 A B t s d p1 p2) = (term543 A B p1 t s p2 d).
Proof. exact (TRANS (@lem4514733 A B t s p2 d p1) (@lem4514750 A B p1 t s p2 d)). Qed.
Lemma lem4514770 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514771 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) : (term1949 A B t s d p1 p2) = (term544 A B p1 t s p2 d).
Proof. exact (MK_COMB (@lem4514770) (@lem4514769 A B p1 t s p2 d)). Qed.
Lemma lem4514777 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492108 A P a) (@lem4492107 A P a)). Qed.
Lemma lem4514778 {A B : Type'} (P : type572 A B) (a : A -> B) : (term550 A B P a) = (P a).
Proof. exact (@lem4514777 (A -> B) P a). Qed.
Lemma lem4514779 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term551 A B t s d p1' b p2') = (term552 A B t s d p1' b p2').
Proof. exact (@lem4514778 A B (term553 A B t s d p1' b) p2'). Qed.
Lemma lem4514780 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (b : B) : (term552 A B t s d p1' b g) = (term554 A B t s g d p1' b).
Proof. exact (eq_refl (term552 A B t s d p1' b g)). Qed.
Lemma lem4514781 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514782 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (g : A -> B) (d : B) (p1' : B) (b : B) : (term555 A B t s d p1' b g) = (term556 A B t s g d p1' b).
Proof. exact (MK_COMB (@lem4514781) (@lem4514780 A B t s g d p1' b)). Qed.
Lemma lem4514783 {A B : Type'} (p2' : A -> B) (g : A -> B) : (p2' = g) = (p2' = g).
Proof. exact (eq_refl (p2' = g)). Qed.
Lemma lem4514784 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) (g : A -> B) : (term557 A B t s d p1' b p2' g) = (term547 A B t s d p1' b p2' g).
Proof. exact (MK_COMB (@lem4514782 A B t s g d p1' b) (@lem4514783 A B p2' g)). Qed.
Lemma lem4514785 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term558 A B t s d p1' b p2') = (term548 A B t s d p1' b p2').
Proof. exact (fun_ext (fun g : A -> B => @lem4514784 A B t s d p1' b p2' g)). Qed.
Lemma lem4514786 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4514787 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term551 A B t s d p1' b p2') = (term549 A B t s d p1' b p2').
Proof. exact (MK_COMB (@lem4514786 A B) (@lem4514785 A B t s d p1' b p2')). Qed.
Lemma lem4514788 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514789 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1' : B) (b : B) (p2' : A -> B) : (term559 A B t s d p1' b p2') = (term560 A B t s d p1' b p2').
Proof. exact (MK_COMB (@lem4514788) (@lem4514787 A B t s d p1' b p2')). Qed.
Lemma lem4514790 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) (b : B) : (term552 A B t s d p1' b p2') = (term554 A B t s p2' d p1' b).
Proof. exact (eq_refl (term552 A B t s d p1' b p2')). Qed.
Lemma lem4514791 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) (b : B) : ((term551 A B t s d p1' b p2') = (term552 A B t s d p1' b p2')) = ((term549 A B t s d p1' b p2') = (term554 A B t s p2' d p1' b)).
Proof. exact (MK_COMB (@lem4514789 A B t s d p1' b p2') (@lem4514790 A B t s p2' d p1' b)). Qed.
Lemma lem4514792 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) (b : B) : (term549 A B t s d p1' b p2') = (term554 A B t s p2' d p1' b).
Proof. exact (EQ_MP (@lem4514791 A B t s p2' d p1' b) (@lem4514779 A B t s d p1' b p2')). Qed.
Lemma lem4514815 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term1946 A B t s d p1' p2') = (term561 A B t s p2' d p1').
Proof. exact (fun_ext (fun b : B => @lem4514792 A B t s p2' d p1' b)). Qed.
Lemma lem4514816 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514817 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term1947 A B t s d p1' p2') = (term562 A B t s p2' d p1').
Proof. exact (MK_COMB (@lem4514816 B) (@lem4514815 A B t s p2' d p1')). Qed.
Lemma lem4514819 {A : Type'} (P : A -> Prop) (a : A) : (term12 A P a) = (P a).
Proof. exact (EQ_MP (@lem4492108 A P a) (@lem4492107 A P a)). Qed.
Lemma lem4514820 {B : Type'} (P : B -> Prop) (a : B) : (term12 B P a) = (P a).
Proof. exact (@lem4514819 B P a). Qed.
Lemma lem4514821 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term563 A B t s p2' d p1') = (term564 A B t s p2' d p1').
Proof. exact (@lem4514820 B (term565 A B t s p2' d) p1'). Qed.
Lemma lem4514822 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term564 A B t s p2' d b) = (term543 A B b t s p2' d).
Proof. exact (eq_refl (term564 A B t s p2' d b)). Qed.
Lemma lem4514823 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514824 {A B : Type'} (b : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term566 A B t s p2' d b) = (term544 A B b t s p2' d).
Proof. exact (MK_COMB (@lem4514823) (@lem4514822 A B b t s p2' d)). Qed.
Lemma lem4514825 {B : Type'} (p1' : B) (b : B) : (p1' = b) = (p1' = b).
Proof. exact (eq_refl (p1' = b)). Qed.
Lemma lem4514826 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) (b : B) : (term567 A B t s p2' d p1' b) = (term554 A B t s p2' d p1' b).
Proof. exact (MK_COMB (@lem4514824 A B b t s p2' d) (@lem4514825 B p1' b)). Qed.
Lemma lem4514827 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term568 A B t s p2' d p1') = (term561 A B t s p2' d p1').
Proof. exact (fun_ext (fun b : B => @lem4514826 A B t s p2' d p1' b)). Qed.
Lemma lem4514828 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4514829 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term563 A B t s p2' d p1') = (term562 A B t s p2' d p1').
Proof. exact (MK_COMB (@lem4514828 B) (@lem4514827 A B t s p2' d p1')). Qed.
Lemma lem4514830 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4514831 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (p1' : B) : (term569 A B t s p2' d p1') = (term570 A B t s p2' d p1').
Proof. exact (MK_COMB (@lem4514830) (@lem4514829 A B t s p2' d p1')). Qed.
Lemma lem4514832 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term564 A B t s p2' d p1') = (term543 A B p1' t s p2' d).
Proof. exact (eq_refl (term564 A B t s p2' d p1')). Qed.
Lemma lem4514833 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : ((term563 A B t s p2' d p1') = (term564 A B t s p2' d p1')) = ((term562 A B t s p2' d p1') = (term543 A B p1' t s p2' d)).
Proof. exact (MK_COMB (@lem4514831 A B t s p2' d p1') (@lem4514832 A B p1' t s p2' d)). Qed.
Lemma lem4514834 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term562 A B t s p2' d p1') = (term543 A B p1' t s p2' d).
Proof. exact (EQ_MP (@lem4514833 A B p1' t s p2' d) (@lem4514821 A B t s p2' d p1')). Qed.
Lemma lem4514853 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term1947 A B t s d p1' p2') = (term543 A B p1' t s p2' d).
Proof. exact (TRANS (@lem4514817 A B t s p2' d p1') (@lem4514834 A B p1' t s p2' d)). Qed.
Lemma lem4514854 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term1951 A B p1 p2 t s d p1' p2') = (term1967 A B p1 p2 p1' t s p2' d).
Proof. exact (MK_COMB (@lem4514771 A B p1 t s p2 d) (@lem4514853 A B p1' t s p2' d)). Qed.
Lemma lem4514857 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4514858 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term1953 A B p1 p2 t s d p1' p2') = (term1968 A B p1 p2 p1' t s p2' d).
Proof. exact (MK_COMB (@lem4514857) (@lem4514854 A B p1 p2 p1' t s p2' d)). Qed.
Lemma lem4514869 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : ((term442 A B a p1 p2) = (term442 A B a p1' p2')) = ((term442 A B a p1 p2) = (term442 A B a p1' p2')).
Proof. exact (eq_refl ((term442 A B a p1 p2) = (term442 A B a p1' p2'))). Qed.
Lemma lem4514870 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1955 A B t s d p1 p2 a p1' p2') = (term1969 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4514858 A B p1 p2 p1' t s p2' d) (@lem4514869 A B p1 p2 a p1' p2')). Qed.
Lemma lem4514873 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4514874 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1957 A B t s d p1 p2 a p1' p2') = (term1970 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4514873) (@lem4514870 A B t s d p1 p2 a p1' p2')). Qed.
Lemma lem4514881 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : (term545 A B p1 p1' p2 p2') = (term545 A B p1 p1' p2 p2').
Proof. exact (eq_refl (term545 A B p1 p1' p2 p2')). Qed.
Lemma lem4514882 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : (term1958 A B t s d a p1 p1' p2 p2') = (term1971 A B t s d a p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem4514874 A B t s d p1 p2 a p1' p2') (@lem4514881 A B p1 p1' p2 p2')). Qed.
Lemma lem4514885 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1959 A B t s d a p1 p1' p2) = (term1972 A B t s d a p1 p1' p2).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4514882 A B t s d a p1 p1' p2 p2')). Qed.
Lemma lem4514886 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514887 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1960 A B t s d a p1 p1' p2) = (term1973 A B t s d a p1 p1' p2).
Proof. exact (MK_COMB (@lem4514886 A B) (@lem4514885 A B t s d a p1 p1' p2)). Qed.
Lemma lem4514892 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1961 A B t s d a p1 p2) = (term1974 A B t s d a p1 p2).
Proof. exact (fun_ext (fun p1' : B => @lem4514887 A B t s d a p1 p1' p2)). Qed.
Lemma lem4514893 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514894 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1962 A B t s d a p1 p2) = (term1975 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4514893 B) (@lem4514892 A B t s d a p1 p2)). Qed.
Lemma lem4514899 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1963 A B t s d a p1) = (term1976 A B t s d a p1).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4514894 A B t s d a p1 p2)). Qed.
Lemma lem4514900 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4514901 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1964 A B t s d a p1) = (term1977 A B t s d a p1).
Proof. exact (MK_COMB (@lem4514900 A B) (@lem4514899 A B t s d a p1)). Qed.
Lemma lem4514906 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1965 A B t s d a) = (term1978 A B t s d a).
Proof. exact (fun_ext (fun p1 : B => @lem4514901 A B t s d a p1)). Qed.
Lemma lem4514907 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4514908 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1966 A B t s d a) = (term1979 A B t s d a).
Proof. exact (MK_COMB (@lem4514907 B) (@lem4514906 A B t s d a)). Qed.
Lemma lem4514913 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1979 A B t s d a) = (term1966 A B t s d a).
Proof. exact (SYM (@lem4514908 A B t s d a)). Qed.
Lemma lem4514981 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (EQ_MP (@lem4492063 A B f g) (@lem4492062 A B f g)). Qed.
Lemma lem4514982 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (@lem4514981 A B f g). Qed.
Lemma lem4514983 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : ((term442 A B a p1 p2) = (term442 A B a p1' p2')) = (term1980 A B p1 p2 a p1' p2').
Proof. exact (@lem4514982 A B (term442 A B a p1 p2) (term442 A B a p1' p2')). Qed.
Lemma lem4514993 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4514994 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4514993 A B f y). Qed.
Lemma lem4514995 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1426 A B a p1 p2 x) = (term1425 A B a p1 p2 x).
Proof. exact (@lem4514994 A B (term442 A B a p1 p2) x). Qed.
Lemma lem4514996 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1425 A B a p1 p2 x) = (term1427 A B a p1 p2 x).
Proof. exact (eq_refl (term1425 A B a p1 p2 x)). Qed.
Lemma lem4514997 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) : (term1428 A B a p1 p2) = (term442 A B a p1 p2).
Proof. exact (fun_ext (fun x : A => @lem4514996 A B a p1 p2 x)). Qed.
Lemma lem4514998 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4514999 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1426 A B a p1 p2 x) = (term1425 A B a p1 p2 x).
Proof. exact (MK_COMB (@lem4514997 A B a p1 p2) (@lem4514998 A x)). Qed.
Lemma lem4515000 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4515001 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1429 A B a p1 p2 x) = (term1430 A B a p1 p2 x).
Proof. exact (MK_COMB (@lem4515000 B) (@lem4514999 A B a p1 p2 x)). Qed.
Lemma lem4515002 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1425 A B a p1 p2 x) = (term1427 A B a p1 p2 x).
Proof. exact (eq_refl (term1425 A B a p1 p2 x)). Qed.
Lemma lem4515003 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : ((term1426 A B a p1 p2 x) = (term1425 A B a p1 p2 x)) = ((term1425 A B a p1 p2 x) = (term1427 A B a p1 p2 x)).
Proof. exact (MK_COMB (@lem4515001 A B a p1 p2 x) (@lem4515002 A B a p1 p2 x)). Qed.
Lemma lem4515004 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1425 A B a p1 p2 x) = (term1427 A B a p1 p2 x).
Proof. exact (EQ_MP (@lem4515003 A B a p1 p2 x) (@lem4514995 A B a p1 p2 x)). Qed.
Lemma lem4515011 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4515012 {A B : Type'} (a : A) (p1 : B) (p2 : A -> B) (x : A) : (term1430 A B a p1 p2 x) = (term1437 A B a p1 p2 x).
Proof. exact (MK_COMB (@lem4515011 B) (@lem4515004 A B a p1 p2 x)). Qed.
Lemma lem4515014 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem4515015 {A B : Type'} (f : A -> B) (y : A) : (term256 A B f y) = (f y).
Proof. exact (@lem4515014 A B f y). Qed.
Lemma lem4515016 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1426 A B a p1' p2' x) = (term1425 A B a p1' p2' x).
Proof. exact (@lem4515015 A B (term442 A B a p1' p2') x). Qed.
Lemma lem4515017 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1425 A B a p1' p2' x) = (term1427 A B a p1' p2' x).
Proof. exact (eq_refl (term1425 A B a p1' p2' x)). Qed.
Lemma lem4515018 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) : (term1428 A B a p1' p2') = (term442 A B a p1' p2').
Proof. exact (fun_ext (fun x : A => @lem4515017 A B a p1' p2' x)). Qed.
Lemma lem4515019 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4515020 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1426 A B a p1' p2' x) = (term1425 A B a p1' p2' x).
Proof. exact (MK_COMB (@lem4515018 A B a p1' p2') (@lem4515019 A x)). Qed.
Lemma lem4515021 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4515022 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1429 A B a p1' p2' x) = (term1430 A B a p1' p2' x).
Proof. exact (MK_COMB (@lem4515021 B) (@lem4515020 A B a p1' p2' x)). Qed.
Lemma lem4515023 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1425 A B a p1' p2' x) = (term1427 A B a p1' p2' x).
Proof. exact (eq_refl (term1425 A B a p1' p2' x)). Qed.
Lemma lem4515024 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : ((term1426 A B a p1' p2' x) = (term1425 A B a p1' p2' x)) = ((term1425 A B a p1' p2' x) = (term1427 A B a p1' p2' x)).
Proof. exact (MK_COMB (@lem4515022 A B a p1' p2' x) (@lem4515023 A B a p1' p2' x)). Qed.
Lemma lem4515025 {A B : Type'} (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term1425 A B a p1' p2' x) = (term1427 A B a p1' p2' x).
Proof. exact (EQ_MP (@lem4515024 A B a p1' p2' x) (@lem4515016 A B a p1' p2' x)). Qed.
Lemma lem4515032 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (x : A) : ((term1425 A B a p1 p2 x) = (term1425 A B a p1' p2' x)) = ((term1427 A B a p1 p2 x) = (term1427 A B a p1' p2' x)).
Proof. exact (MK_COMB (@lem4515012 A B a p1 p2 x) (@lem4515025 A B a p1' p2' x)). Qed.
Lemma lem4515037 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1981 A B p1 p2 a p1' p2') = (term1982 A B p1 p2 a p1' p2').
Proof. exact (fun_ext (fun x : A => @lem4515032 A B p1 p2 a p1' p2' x)). Qed.
Lemma lem4515038 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515039 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1980 A B p1 p2 a p1' p2') = (term1983 A B p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4515038 A) (@lem4515037 A B p1 p2 a p1' p2')). Qed.
Lemma lem4515044 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : ((term442 A B a p1 p2) = (term442 A B a p1' p2')) = (term1983 A B p1 p2 a p1' p2').
Proof. exact (TRANS (@lem4514983 A B p1 p2 a p1' p2') (@lem4515039 A B p1 p2 a p1' p2')). Qed.
Lemma lem4515045 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) : (term1968 A B p1 p2 p1' t s p2' d) = (term1968 A B p1 p2 p1' t s p2' d).
Proof. exact (eq_refl (term1968 A B p1 p2 p1' t s p2' d)). Qed.
Lemma lem4515046 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1969 A B t s d p1 p2 a p1' p2') = (term1984 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4515045 A B p1 p2 p1' t s p2' d) (@lem4515044 A B p1 p2 a p1' p2')). Qed.
Lemma lem4515049 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515050 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) : (term1970 A B t s d p1 p2 a p1' p2') = (term1985 A B t s d p1 p2 a p1' p2').
Proof. exact (MK_COMB (@lem4515049) (@lem4515046 A B t s d p1 p2 a p1' p2')). Qed.
Lemma lem4515060 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (EQ_MP (@lem4492063 A B f g) (@lem4492062 A B f g)). Qed.
Lemma lem4515061 {A B : Type'} (f : A -> B) (g : A -> B) : (f = g) = (term3 A B f g).
Proof. exact (@lem4515060 A B f g). Qed.
Lemma lem4515062 {A B : Type'} (p2 : A -> B) (p2' : A -> B) : (p2 = p2') = (term3 A B p2 p2').
Proof. exact (@lem4515061 A B p2 p2'). Qed.
Lemma lem4515071 {B : Type'} (p1 : B) (p1' : B) : (term1196 B p1 p1') = (term1196 B p1 p1').
Proof. exact (eq_refl (term1196 B p1 p1')). Qed.
Lemma lem4515072 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : (term545 A B p1 p1' p2 p2') = (term1986 A B p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem4515071 B p1 p1') (@lem4515062 A B p2 p2')). Qed.
Lemma lem4515075 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) : (term1971 A B t s d a p1 p1' p2 p2') = (term1987 A B t s d a p1 p1' p2 p2').
Proof. exact (MK_COMB (@lem4515050 A B t s d p1 p2 a p1' p2') (@lem4515072 A B p1 p1' p2 p2')). Qed.
Lemma lem4515078 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1972 A B t s d a p1 p1' p2) = (term1988 A B t s d a p1 p1' p2).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4515075 A B t s d a p1 p1' p2 p2')). Qed.
Lemma lem4515079 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515080 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p1' : B) (p2 : A -> B) : (term1973 A B t s d a p1 p1' p2) = (term1989 A B t s d a p1 p1' p2).
Proof. exact (MK_COMB (@lem4515079 A B) (@lem4515078 A B t s d a p1 p1' p2)). Qed.
Lemma lem4515085 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1974 A B t s d a p1 p2) = (term1990 A B t s d a p1 p2).
Proof. exact (fun_ext (fun p1' : B => @lem4515080 A B t s d a p1 p1' p2)). Qed.
Lemma lem4515086 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515087 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) (p2 : A -> B) : (term1975 A B t s d a p1 p2) = (term1991 A B t s d a p1 p2).
Proof. exact (MK_COMB (@lem4515086 B) (@lem4515085 A B t s d a p1 p2)). Qed.
Lemma lem4515092 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1976 A B t s d a p1) = (term1992 A B t s d a p1).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4515087 A B t s d a p1 p2)). Qed.
Lemma lem4515093 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515094 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) (p1 : B) : (term1977 A B t s d a p1) = (term1993 A B t s d a p1).
Proof. exact (MK_COMB (@lem4515093 A B) (@lem4515092 A B t s d a p1)). Qed.
Lemma lem4515099 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1978 A B t s d a) = (term1994 A B t s d a).
Proof. exact (fun_ext (fun p1 : B => @lem4515094 A B t s d a p1)). Qed.
Lemma lem4515100 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515101 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1979 A B t s d a) = (term1995 A B t s d a).
Proof. exact (MK_COMB (@lem4515100 B) (@lem4515099 A B t s d a)). Qed.
Lemma lem4515106 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (a : A) : (term1995 A B t s d a) = (term1979 A B t s d a).
Proof. exact (SYM (@lem4515101 A B t s d a)). Qed.
Lemma lem4515107 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1984 A B t s d p1 p2 a p1' p2') : term1984 A B t s d p1 p2 a p1' p2'.
Proof. exact (h1). Qed.
Lemma lem4515108 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : term1983 A B p1 p2 a p1' p2'.
Proof. exact (h1). Qed.
Lemma lem4515109 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term1967 A B p1 p2 p1' t s p2' d) : term1967 A B p1 p2 p1' t s p2' d.
Proof. exact (h1). Qed.
Lemma lem4515110 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term543 A B p1' t s p2' d) : term543 A B p1' t s p2' d.
Proof. exact (h1). Qed.
Lemma lem4515111 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (h1 : term543 A B p1 t s p2 d) : term543 A B p1 t s p2 d.
Proof. exact (h1). Qed.
Lemma lem4515112 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) (h1 : term184 A B s p2 d) : term184 A B s p2 d.
Proof. exact (h1). Qed.
Lemma lem4515113 {A B : Type'} (p1 : B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) (h1 : term573 A B p1 s p2 t) : term573 A B p1 s p2 t.
Proof. exact (h1). Qed.
Lemma lem4515114 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) (h1 : term174 A B s p2 t) : term174 A B s p2 t.
Proof. exact (h1). Qed.
Lemma lem4515115 {B : Type'} (p1 : B) (t : B -> Prop) (h1 : @IN B p1 t) : @IN B p1 t.
Proof. exact (h1). Qed.
Lemma lem4515116 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term184 A B s p2' d) : term184 A B s p2' d.
Proof. exact (h1). Qed.
Lemma lem4515117 {A B : Type'} (p1' : B) (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) (h1 : term573 A B p1' s p2' t) : term573 A B p1' s p2' t.
Proof. exact (h1). Qed.
Lemma lem4515118 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) (h1 : term174 A B s p2' t) : term174 A B s p2' t.
Proof. exact (h1). Qed.
Lemma lem4515119 {B : Type'} (p1' : B) (t : B -> Prop) (h1 : @IN B p1' t) : @IN B p1' t.
Proof. exact (h1). Qed.
Lemma lem4515120 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : term1996 A B p1 p2 p1' p2' a.
Proof. exact (@lem4515108 A B p1 p2 a p1' p2' h1 a). Qed.
Lemma lem4515121 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (a : A) : (term1996 A B p1 p2 p1' p2' a) = ((term1997 A B p1 p2 a) = (term1997 A B p1' p2' a)).
Proof. exact (eq_refl (term1996 A B p1 p2 p1' p2' a)). Qed.
Lemma lem4515122 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : (term1997 A B p1 p2 a) = (term1997 A B p1' p2' a).
Proof. exact (EQ_MP (@lem4515121 A B p1 p2 p1' p2' a) (@lem4515120 A B p1 p2 a p1' p2' h1)). Qed.
Lemma lem4515130 {_2975 _2982 : Type'} (x : _2982) (z : _2975) (y : _2975) : (term1998 _2975 _2982 x y z) = y.
Proof. exact (EQ_MP (@lem15249 _2975 _2982 x z y) (@lem0)). Qed.
Lemma lem4515131 {A B : Type'} (x : A) (z : B) (y : B) : (term1999 A B x y z) = y.
Proof. exact (@lem4515130 B A x z y). Qed.
Lemma lem4515132 {A B : Type'} (p2 : A -> B) (a : A) (p1 : B) : (term1997 A B p1 p2 a) = p1.
Proof. exact (@lem4515131 A B a (p2 a) p1). Qed.
Lemma lem4515133 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4515134 {A B : Type'} (p2 : A -> B) (a : A) (p1 : B) : (term2000 A B p1 p2 a) = (@eq B p1).
Proof. exact (MK_COMB (@lem4515133 B) (@lem4515132 A B p2 a p1)). Qed.
Lemma lem4515136 {_2975 _2982 : Type'} (x : _2982) (z : _2975) (y : _2975) : (term1998 _2975 _2982 x y z) = y.
Proof. exact (EQ_MP (@lem15249 _2975 _2982 x z y) (@lem0)). Qed.
Lemma lem4515137 {A B : Type'} (x : A) (z : B) (y : B) : (term1999 A B x y z) = y.
Proof. exact (@lem4515136 B A x z y). Qed.
Lemma lem4515138 {A B : Type'} (p2' : A -> B) (a : A) (p1' : B) : (term1997 A B p1' p2' a) = p1'.
Proof. exact (@lem4515137 A B a (p2' a) p1'). Qed.
Lemma lem4515139 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : ((term1997 A B p1 p2 a) = (term1997 A B p1' p2' a)) = (p1 = p1').
Proof. exact (MK_COMB (@lem4515134 A B p2 a p1) (@lem4515138 A B p2' a p1')). Qed.
Lemma lem4515142 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515143 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : (term2001 A B p1 p2 p1' p2' a) = (term1399 B p1 p1').
Proof. exact (MK_COMB (@lem4515142) (@lem4515139 A B p2 p2' a p1 p1')). Qed.
Lemma lem4515146 {B : Type'} (p1 : B) (p1' : B) : (p1 = p1') = (p1 = p1').
Proof. exact (eq_refl (p1 = p1')). Qed.
Lemma lem4515147 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : (term2002 A B p2 p2' a p1 p1') = (term2003 B p1 p1').
Proof. exact (MK_COMB (@lem4515143 A B p2 p2' a p1 p1') (@lem4515146 B p1 p1')). Qed.
Lemma lem4515151 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem4515152 {B : Type'} (p1 : B) (p1' : B) : (term2003 B p1 p1') = True.
Proof. exact (@lem4515151 (p1 = p1')). Qed.
Lemma lem4515153 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : (term2002 A B p2 p2' a p1 p1') = True.
Proof. exact (TRANS (@lem4515147 A B p2 p2' a p1 p1') (@lem4515152 B p1 p1')). Qed.
Lemma lem4515154 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : True = (term2002 A B p2 p2' a p1 p1').
Proof. exact (SYM (@lem4515153 A B p2 p2' a p1 p1')). Qed.
Lemma lem4515155 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) (p1 : B) (p1' : B) : term2002 A B p2 p2' a p1 p1'.
Proof. exact (EQ_MP (@lem4515154 A B p2 p2' a p1 p1') (@lem0)). Qed.
Lemma lem4515156 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : p1 = p1'.
Proof. exact (@lem4515155 A B p2 p2' a p1 p1' (@lem4515122 A B p1 p2 a p1' p2' h1)). Qed.
Lemma lem4515157 {A B : Type'} (x : A) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : term2004 A B p1 p2 a p1' p2' x.
Proof. exact (@lem4515108 A B p1 p2 a p1' p2' h1 x). Qed.
Lemma lem4515158 {A B : Type'} (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (x : A) : (term2004 A B p1 p2 a p1' p2' x) = ((term1427 A B a p1 p2 x) = (term1427 A B a p1' p2' x)).
Proof. exact (eq_refl (term2004 A B p1 p2 a p1' p2' x)). Qed.
Lemma lem4515159 {A B : Type'} (x : A) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1983 A B p1 p2 a p1' p2') : (term1427 A B a p1 p2 x) = (term1427 A B a p1' p2' x).
Proof. exact (EQ_MP (@lem4515158 A B p1 p2 a p1' p2' x) (@lem4515157 A B x p1 p2 a p1' p2' h1)). Qed.
Lemma lem4515161 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4515162 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2005 A B p1 a p1' p2 p2' x) = (term2006 A B p1 a p1' p2 p2' x).
Proof. exact (@lem4515161 (term2005 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515163 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2006 A B p1 a p1' p2 p2' x) = (term2005 A B p1 a p1' p2 p2' x).
Proof. exact (SYM (@lem4515162 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515164 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2007 A B p1 a p1' p2 p2' x) : term2007 A B p1 a p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4515167 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4515168 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (fun h0 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x => @lem4515167 A B s0 n m t s d p1 a p1' p2 p2' x h0). Qed.
Lemma lem4515169 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4515170 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4515171 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x) (h2 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4515169 A B s0 n m t s d p1 a p1' p2 p2' x h1 (@lem4515170 A B s0 n m t s d p1 a p1' p2 p2' x h2)). Qed.
Lemma lem4515172 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x) : term2010 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (fun h0 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x => @lem4515171 A B s0 n m t s d p1 a p1' p2 p2' x h0 h1). Qed.
Lemma lem4515173 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4515174 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x) (h2 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4515172 A B s0 n m t s d p1 a p1' p2 p2' x h2 (@lem4515173 A B s0 n m t s d p1 a p1' p2 p2' x h1)). Qed.
Lemma lem4515175 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (fun h0 : term2008 A B s0 n m t s d p1 a p1' p2 p2' x => @lem4515174 A B s0 n m t s d p1 a p1' p2 p2' x h1 h0). Qed.
Lemma lem4515176 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2011 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (fun h0 : term2009 A B s0 n m t s d p1 a p1' p2 p2' x => @lem4515175 A B s0 n m t s d p1 a p1' p2 p2' x h0). Qed.
Lemma lem4515179 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4515176 A B s0 n m t s d p1 a p1' p2 p2' x (@lem4515168 A B s0 n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515180 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2009 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4515179 A B s0 n m t s d p1 a p1' p2 p2' x). Qed.
Lemma lem4515294 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4515295 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2006 A B p1 a p1' p2 p2' x) = (term2012 A B p1 a p1' p2 p2' x).
Proof. exact (@lem4515294 (term2007 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515297 (t : Prop) : (term654 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem4515298 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2012 A B p1 a p1' p2 p2' x) = (term2005 A B p1 a p1' p2 p2' x).
Proof. exact (@lem4515297 (term2005 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515301 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2006 A B p1 a p1' p2 p2' x) = (term2005 A B p1 a p1' p2 p2' x).
Proof. exact (TRANS (@lem4515295 A B p1 a p1' p2 p2' x) (@lem4515298 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515302 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1449 A B s p2' d) = (term1449 A B s p2' d).
Proof. exact (eq_refl (term1449 A B s p2' d)). Qed.
Lemma lem4515303 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2013 A B s d p1 a p1' p2 p2' x) = (term2014 A B s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515302 A B s p2' d) (@lem4515301 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515306 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term1452 A B s p2' t) = (term1452 A B s p2' t).
Proof. exact (eq_refl (term1452 A B s p2' t)). Qed.
Lemma lem4515307 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2015 A B t s d p1 a p1' p2 p2' x) = (term2016 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515306 A B s p2' t) (@lem4515303 A B s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515310 {B : Type'} (p1' : B) (t : B -> Prop) : (term168 B p1' t) = (term168 B p1' t).
Proof. exact (eq_refl (term168 B p1' t)). Qed.
Lemma lem4515311 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2017 A B t s d p1 a p1' p2 p2' x) = (term2018 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515310 B p1' t) (@lem4515307 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515314 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1449 A B s p2 d) = (term1449 A B s p2 d).
Proof. exact (eq_refl (term1449 A B s p2 d)). Qed.
Lemma lem4515315 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2019 A B t s d p1 a p1' p2 p2' x) = (term2020 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515314 A B s p2 d) (@lem4515311 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515318 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term1452 A B s p2 t) = (term1452 A B s p2 t).
Proof. exact (eq_refl (term1452 A B s p2 t)). Qed.
Lemma lem4515319 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2021 A B t s d p1 a p1' p2 p2' x) = (term2022 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515318 A B s p2 t) (@lem4515315 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515322 {B : Type'} (p1 : B) (t : B -> Prop) : (term168 B p1 t) = (term168 B p1 t).
Proof. exact (eq_refl (term168 B p1 t)). Qed.
Lemma lem4515323 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2023 A B t s d p1 a p1' p2 p2' x) = (term2024 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515322 B p1 t) (@lem4515319 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515326 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term352 A B t s d n m) = (term352 A B t s d n m).
Proof. exact (eq_refl (term352 A B t s d n m)). Qed.
Lemma lem4515327 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2025 A B n m t s d p1 a p1' p2 p2' x) = (term2026 A B n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515326 A B t s d n m) (@lem4515323 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515330 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4515331 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2027 A B n m t s d p1 a p1' p2 p2' x) = (term2028 A B n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515330 B t n) (@lem4515327 A B n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515334 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4515335 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2029 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2030 A B s0 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515334 A s0 a s) (@lem4515331 A B n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515338 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4515339 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2031 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2032 A B s0 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515338 A a s) (@lem4515335 A B s0 n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515342 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4515343 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2008 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2033 A B s0 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515342 A s m) (@lem4515339 A B s0 n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515346 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2034 A B n m t s d p1 a p1' p2 p2' x) = (term2035 A B n m t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4515343 A B s0 n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515347 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515348 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2036 A B n m t s d p1 a p1' p2 p2' x) = (term2037 A B n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515347 A) (@lem4515346 A B n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515353 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2038 A B m t s d p1 a p1' p2 p2' x) = (term2039 A B m t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4515348 A B n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515354 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515355 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2040 A B m t s d p1 a p1' p2 p2' x) = (term2041 A B m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515354) (@lem4515353 A B m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515360 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2042 A B t s d p1 a p1' p2 p2' x) = (term2043 A B t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4515355 A B m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515361 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515362 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2044 A B t s d p1 a p1' p2 p2' x) = (term2045 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515361) (@lem4515360 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515367 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2046 A B s d p1 a p1' p2 p2' x) = (term2047 A B s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515362 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515368 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4515369 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2048 A B s d p1 a p1' p2 p2' x) = (term2049 A B s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515368 B) (@lem4515367 A B s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515374 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2050 A B d p1 a p1' p2 p2' x) = (term2051 A B d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515369 A B s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515375 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515376 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2052 A B d p1 a p1' p2 p2' x) = (term2053 A B d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515375 A) (@lem4515374 A B d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515381 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2054 A B p1 a p1' p2 p2' x) = (term2055 A B p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4515376 A B d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515382 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515383 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2056 A B p1 a p1' p2 p2' x) = (term2057 A B p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515382 B) (@lem4515381 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515388 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2058 A B a p1' p2 p2' x) = (term2059 A B a p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4515383 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515389 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515390 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2060 A B a p1' p2 p2' x) = (term2061 A B a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515389 B) (@lem4515388 A B a p1' p2 p2' x)). Qed.
Lemma lem4515395 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2062 A B p1' p2 p2' x) = (term2063 A B p1' p2 p2' x).
Proof. exact (fun_ext (fun a : A => @lem4515390 A B a p1' p2 p2' x)). Qed.
Lemma lem4515396 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515397 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2064 A B p1' p2 p2' x) = (term2065 A B p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515396 A) (@lem4515395 A B p1' p2 p2' x)). Qed.
Lemma lem4515402 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2066 A B p2 p2' x) = (term2067 A B p2 p2' x).
Proof. exact (fun_ext (fun p1' : B => @lem4515397 A B p1' p2 p2' x)). Qed.
Lemma lem4515403 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515404 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2068 A B p2 p2' x) = (term2069 A B p2 p2' x).
Proof. exact (MK_COMB (@lem4515403 B) (@lem4515402 A B p2 p2' x)). Qed.
Lemma lem4515409 {A B : Type'} (p2' : A -> B) (x : A) : (term2070 A B p2' x) = (term2071 A B p2' x).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4515404 A B p2 p2' x)). Qed.
Lemma lem4515410 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515411 {A B : Type'} (p2' : A -> B) (x : A) : (term2072 A B p2' x) = (term2073 A B p2' x).
Proof. exact (MK_COMB (@lem4515410 A B) (@lem4515409 A B p2' x)). Qed.
Lemma lem4515416 {A B : Type'} (x : A) : (term2074 A B x) = (term2075 A B x).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4515411 A B p2' x)). Qed.
Lemma lem4515417 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515418 {A B : Type'} (x : A) : (term2076 A B x) = (term2077 A B x).
Proof. exact (MK_COMB (@lem4515417 A B) (@lem4515416 A B x)). Qed.
Lemma lem4515423 {A B : Type'} : (term2078 A B) = (term2079 A B).
Proof. exact (fun_ext (fun x : A => @lem4515418 A B x)). Qed.
Lemma lem4515424 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515431 {A B : Type'} : (term2080 A B) = (term2081 A B).
Proof. exact (MK_COMB (@lem4515424 A) (@lem4515423 A B)). Qed.
Lemma lem4515432 {A B : Type'} (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : _53582 = (term704 A B).
Proof. exact (h1). Qed.
Lemma lem4515433 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4515434 {A B : Type'} (t : B -> Prop) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t) = (term705 A B t).
Proof. exact (MK_COMB (@lem4515432 A B _53582 h1) (@lem4515433 B t)). Qed.
Lemma lem4515435 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4515436 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term707 A B _53582 t) = (term707 A B _53582 t).
Proof. exact (eq_refl (term707 A B _53582 t)). Qed.
Lemma lem4515437 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term705 A B t)) = ((_53582 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4515436 A B _53582 t) (@lem4515435 A B t)). Qed.
Lemma lem4515438 {A B : Type'} (t : B -> Prop) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t) = (term706 A B t).
Proof. exact (EQ_MP (@lem4515437 A B _53582 t) (@lem4515434 A B t _53582 h1)). Qed.
Lemma lem4515439 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4515440 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t s) = (term708 A B t s).
Proof. exact (MK_COMB (@lem4515438 A B t _53582 h1) (@lem4515439 A s)). Qed.
Lemma lem4515441 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4515442 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53582 t s) = (term710 A B _53582 t s).
Proof. exact (eq_refl (term710 A B _53582 t s)). Qed.
Lemma lem4515443 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term708 A B t s)) = ((_53582 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4515442 A B _53582 t s) (@lem4515441 A B t s)). Qed.
Lemma lem4515444 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t s) = (term709 A B t s).
Proof. exact (EQ_MP (@lem4515443 A B _53582 t s) (@lem4515440 A B t s _53582 h1)). Qed.
Lemma lem4515445 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4515446 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t s d) = (term711 A B t s d).
Proof. exact (MK_COMB (@lem4515444 A B t s _53582 h1) (@lem4515445 B d)). Qed.
Lemma lem4515447 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4515448 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53582 t s d) = (term712 A B _53582 t s d).
Proof. exact (eq_refl (term712 A B _53582 t s d)). Qed.
Lemma lem4515449 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term711 A B t s d)) = ((_53582 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4515448 A B _53582 t s d) (@lem4515447 A B t s d)). Qed.
Lemma lem4515450 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (_53582 t s d) = (term196 A B t s d).
Proof. exact (EQ_MP (@lem4515449 A B _53582 t s d) (@lem4515446 A B t s d _53582 h1)). Qed.
Lemma lem4515492 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2005 A B p1 a p1' p2 p2' x) = (term2005 A B p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2005 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515509 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term180 A B s p2' x d) = (term180 A B s p2' x d).
Proof. exact (eq_refl (term180 A B s p2' x d)). Qed.
Lemma lem4515510 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term182 A B s p2' d) = (term182 A B s p2' d).
Proof. exact (fun_ext (fun x : A => @lem4515509 A B s p2' x d)). Qed.
Lemma lem4515511 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515512 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term184 A B s p2' d) = (term184 A B s p2' d).
Proof. exact (MK_COMB (@lem4515511 A) (@lem4515510 A B s p2' d)). Qed.
Lemma lem4515513 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515514 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1449 A B s p2' d) = (term1449 A B s p2' d).
Proof. exact (MK_COMB (@lem4515513) (@lem4515512 A B s p2' d)). Qed.
Lemma lem4515515 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2014 A B s d p1 a p1' p2 p2' x) = (term2014 A B s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515514 A B s p2' d) (@lem4515492 A B p1 a p1' p2 p2' x)). Qed.
Lemma lem4515530 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2' x t) = (term170 A B s p2' x t).
Proof. exact (eq_refl (term170 A B s p2' x t)). Qed.
Lemma lem4515531 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term172 A B s p2' t) = (term172 A B s p2' t).
Proof. exact (fun_ext (fun x : A => @lem4515530 A B s p2' x t)). Qed.
Lemma lem4515532 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515533 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term174 A B s p2' t) = (term174 A B s p2' t).
Proof. exact (MK_COMB (@lem4515532 A) (@lem4515531 A B s p2' t)). Qed.
Lemma lem4515534 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515535 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term1452 A B s p2' t) = (term1452 A B s p2' t).
Proof. exact (MK_COMB (@lem4515534) (@lem4515533 A B s p2' t)). Qed.
Lemma lem4515536 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2016 A B t s d p1 a p1' p2 p2' x) = (term2016 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515535 A B s p2' t) (@lem4515515 A B s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515543 {B : Type'} (p1' : B) (t : B -> Prop) : (term168 B p1' t) = (term168 B p1' t).
Proof. exact (eq_refl (term168 B p1' t)). Qed.
Lemma lem4515544 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2018 A B t s d p1 a p1' p2 p2' x) = (term2018 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515543 B p1' t) (@lem4515536 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515561 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term180 A B s p2 x d) = (term180 A B s p2 x d).
Proof. exact (eq_refl (term180 A B s p2 x d)). Qed.
Lemma lem4515562 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term182 A B s p2 d) = (term182 A B s p2 d).
Proof. exact (fun_ext (fun x : A => @lem4515561 A B s p2 x d)). Qed.
Lemma lem4515563 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515564 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term184 A B s p2 d) = (term184 A B s p2 d).
Proof. exact (MK_COMB (@lem4515563 A) (@lem4515562 A B s p2 d)). Qed.
Lemma lem4515565 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515566 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1449 A B s p2 d) = (term1449 A B s p2 d).
Proof. exact (MK_COMB (@lem4515565) (@lem4515564 A B s p2 d)). Qed.
Lemma lem4515567 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2020 A B t s d p1 a p1' p2 p2' x) = (term2020 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515566 A B s p2 d) (@lem4515544 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515582 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2 x t) = (term170 A B s p2 x t).
Proof. exact (eq_refl (term170 A B s p2 x t)). Qed.
Lemma lem4515583 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term172 A B s p2 t) = (term172 A B s p2 t).
Proof. exact (fun_ext (fun x : A => @lem4515582 A B s p2 x t)). Qed.
Lemma lem4515584 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515585 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term174 A B s p2 t) = (term174 A B s p2 t).
Proof. exact (MK_COMB (@lem4515584 A) (@lem4515583 A B s p2 t)). Qed.
Lemma lem4515586 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515587 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term1452 A B s p2 t) = (term1452 A B s p2 t).
Proof. exact (MK_COMB (@lem4515586) (@lem4515585 A B s p2 t)). Qed.
Lemma lem4515588 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2022 A B t s d p1 a p1' p2 p2' x) = (term2022 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515587 A B s p2 t) (@lem4515567 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515595 {B : Type'} (p1 : B) (t : B -> Prop) : (term168 B p1 t) = (term168 B p1 t).
Proof. exact (eq_refl (term168 B p1 t)). Qed.
Lemma lem4515596 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2024 A B t s d p1 a p1' p2 p2' x) = (term2024 A B t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515595 B p1 t) (@lem4515588 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515601 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4515603 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term196 A B t s d) = (_53582 t s d).
Proof. exact (SYM (@lem4515450 A B t s d _53582 h1)). Qed.
Lemma lem4515604 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term196 A B t s d) = (_53582 t s d).
Proof. exact (@lem4515603 A B t s d _53582 h1). Qed.
Lemma lem4515605 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4515606 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term198 A B t s d) = (term713 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4515605 A B) (@lem4515604 A B t s d _53582 h1)). Qed.
Lemma lem4515607 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4515608 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term200 A B t s d) = (term714 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4515607 A B) (@lem4515606 A B t s d _53582 h1)). Qed.
Lemma lem4515609 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term349 A B t s d n m) = (term715 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4515608 A B t s d _53582 h1) (@lem4515601 n m)). Qed.
Lemma lem4515610 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515611 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term352 A B t s d n m) = (term716 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4515610) (@lem4515609 A B t s d n m _53582 h1)). Qed.
Lemma lem4515612 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2026 A B n m t s d p1 a p1' p2 p2' x) = (term2082 A B _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515611 A B t s d n m _53582 h1) (@lem4515596 A B t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4515619 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4515620 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2028 A B n m t s d p1 a p1' p2 p2' x) = (term2083 A B _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515619 B t n) (@lem4515612 A B n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515631 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4515632 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2030 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2084 A B s0 _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515631 A s0 a s) (@lem4515620 A B n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515641 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4515642 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2032 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2085 A B s0 _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515641 A a s) (@lem4515632 A B s0 n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515649 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4515650 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2033 A B s0 n m t s d p1 a p1' p2 p2' x) = (term2086 A B s0 _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515649 A s m) (@lem4515642 A B s0 n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515651 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2035 A B n m t s d p1 a p1' p2 p2' x) = (term2087 A B _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4515650 A B s0 n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515652 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515653 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2037 A B n m t s d p1 a p1' p2 p2' x) = (term2088 A B _53582 n m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515652 A) (@lem4515651 A B n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515654 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2039 A B m t s d p1 a p1' p2 p2' x) = (term2089 A B _53582 m t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4515653 A B n m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515655 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515656 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2041 A B m t s d p1 a p1' p2 p2' x) = (term2090 A B _53582 m t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515655) (@lem4515654 A B m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515657 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2043 A B t s d p1 a p1' p2 p2' x) = (term2091 A B _53582 t s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4515656 A B m t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515658 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515659 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2045 A B t s d p1 a p1' p2 p2' x) = (term2092 A B _53582 t s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515658) (@lem4515657 A B t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515660 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2047 A B s d p1 a p1' p2 p2' x) = (term2093 A B _53582 s d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515659 A B t s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515661 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4515662 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2049 A B s d p1 a p1' p2 p2' x) = (term2094 A B _53582 s d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515661 B) (@lem4515660 A B s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515663 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2051 A B d p1 a p1' p2 p2' x) = (term2095 A B _53582 d p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515662 A B s d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515664 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515665 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2053 A B d p1 a p1' p2 p2' x) = (term2096 A B _53582 d p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515664 A) (@lem4515663 A B d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515666 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2055 A B p1 a p1' p2 p2' x) = (term2097 A B _53582 p1 a p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4515665 A B d p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515667 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515668 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2057 A B p1 a p1' p2 p2' x) = (term2098 A B _53582 p1 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515667 B) (@lem4515666 A B p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515669 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2059 A B a p1' p2 p2' x) = (term2099 A B _53582 a p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4515668 A B p1 a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515670 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515671 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2061 A B a p1' p2 p2' x) = (term2100 A B _53582 a p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515670 B) (@lem4515669 A B a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515672 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2063 A B p1' p2 p2' x) = (term2101 A B _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun a : A => @lem4515671 A B a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515673 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515674 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2065 A B p1' p2 p2' x) = (term2102 A B _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4515673 A) (@lem4515672 A B p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515675 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2067 A B p2 p2' x) = (term2103 A B _53582 p2 p2' x).
Proof. exact (fun_ext (fun p1' : B => @lem4515674 A B p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4515676 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515677 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2069 A B p2 p2' x) = (term2104 A B _53582 p2 p2' x).
Proof. exact (MK_COMB (@lem4515676 B) (@lem4515675 A B p2 p2' x _53582 h1)). Qed.
Lemma lem4515678 {A B : Type'} (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2071 A B p2' x) = (term2105 A B _53582 p2' x).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4515677 A B p2 p2' x _53582 h1)). Qed.
Lemma lem4515679 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515680 {A B : Type'} (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2073 A B p2' x) = (term2106 A B _53582 p2' x).
Proof. exact (MK_COMB (@lem4515679 A B) (@lem4515678 A B p2' x _53582 h1)). Qed.
Lemma lem4515681 {A B : Type'} (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2075 A B x) = (term2107 A B _53582 x).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4515680 A B p2' x _53582 h1)). Qed.
Lemma lem4515682 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515683 {A B : Type'} (x : A) (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2077 A B x) = (term2108 A B _53582 x).
Proof. exact (MK_COMB (@lem4515682 A B) (@lem4515681 A B x _53582 h1)). Qed.
Lemma lem4515684 {A B : Type'} (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2079 A B) = (term2109 A B _53582).
Proof. exact (fun_ext (fun x : A => @lem4515683 A B x _53582 h1)). Qed.
Lemma lem4515685 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4515686 {A B : Type'} (_53582 : type839 A B) (h1 : _53582 = (term704 A B)) : (term2081 A B) = (term2110 A B _53582).
Proof. exact (MK_COMB (@lem4515685 A) (@lem4515684 A B _53582 h1)). Qed.
Lemma lem4515687 {A B : Type'} (_53582 : type839 A B) : term2111 A B _53582.
Proof. exact (fun h0 : _53582 = (term704 A B) => @lem4515686 A B _53582 h0). Qed.
Lemma lem4515688 {A B : Type'} : term2112 A B.
Proof. exact (fun _53582 : type839 A B => @lem4515687 A B _53582). Qed.
Lemma lem4515690 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term740 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4515691 {A B : Type'} (P : Prop) (c : type839 A B) (Q : type214 A B) : term741 A B P c Q.
Proof. exact (@lem4515690 (type839 A B) P c Q). Qed.
Lemma lem4515692 {A B : Type'} : term2113 A B.
Proof. exact (@lem4515691 A B (term2081 A B) (term704 A B) (term2114 A B)). Qed.
Lemma lem4515693 {A B : Type'} (_53582 : type839 A B) : (term2115 A B _53582) = (term2110 A B _53582).
Proof. exact (eq_refl (term2115 A B _53582)). Qed.
Lemma lem4515694 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4515695 {A B : Type'} (_53582 : type839 A B) : ((term2081 A B) = (term2115 A B _53582)) = ((term2081 A B) = (term2110 A B _53582)).
Proof. exact (MK_COMB (@lem4515694 A B) (@lem4515693 A B _53582)). Qed.
Lemma lem4515696 {A B : Type'} (_53582 : type839 A B) : (term746 A B _53582) = (term746 A B _53582).
Proof. exact (eq_refl (term746 A B _53582)). Qed.
Lemma lem4515697 {A B : Type'} (_53582 : type839 A B) : (term2117 A B _53582) = (term2111 A B _53582).
Proof. exact (MK_COMB (@lem4515696 A B _53582) (@lem4515695 A B _53582)). Qed.
Lemma lem4515698 {A B : Type'} : (term2118 A B) = (term2119 A B).
Proof. exact (fun_ext (fun _53582 : type839 A B => @lem4515697 A B _53582)). Qed.
Lemma lem4515699 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4515700 {A B : Type'} : (term2120 A B) = (term2112 A B).
Proof. exact (MK_COMB (@lem4515699 A B) (@lem4515698 A B)). Qed.
Lemma lem4515701 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515702 {A B : Type'} : (term2121 A B) = (term2122 A B).
Proof. exact (MK_COMB (@lem4515701) (@lem4515700 A B)). Qed.
Lemma lem4515703 {A B : Type'} (_53582 : type839 A B) : (term2115 A B _53582) = (term2110 A B _53582).
Proof. exact (eq_refl (term2115 A B _53582)). Qed.
Lemma lem4515704 {A B : Type'} (_53582 : type839 A B) : (term746 A B _53582) = (term746 A B _53582).
Proof. exact (eq_refl (term746 A B _53582)). Qed.
Lemma lem4515705 {A B : Type'} (_53582 : type839 A B) : (term2123 A B _53582) = (term2124 A B _53582).
Proof. exact (MK_COMB (@lem4515704 A B _53582) (@lem4515703 A B _53582)). Qed.
Lemma lem4515706 {A B : Type'} : (term2125 A B) = (term2126 A B).
Proof. exact (fun_ext (fun _53582 : type839 A B => @lem4515705 A B _53582)). Qed.
Lemma lem4515707 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4515708 {A B : Type'} : (term2127 A B) = (term2128 A B).
Proof. exact (MK_COMB (@lem4515707 A B) (@lem4515706 A B)). Qed.
Lemma lem4515709 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4515710 {A B : Type'} : ((term2081 A B) = (term2127 A B)) = ((term2081 A B) = (term2128 A B)).
Proof. exact (MK_COMB (@lem4515709 A B) (@lem4515708 A B)). Qed.
Lemma lem4515711 {A B : Type'} : (term2113 A B) = (term2129 A B).
Proof. exact (MK_COMB (@lem4515702 A B) (@lem4515710 A B)). Qed.
Lemma lem4515712 {A B : Type'} : term2129 A B.
Proof. exact (EQ_MP (@lem4515711 A B) (@lem4515692 A B)). Qed.
Lemma lem4515713 {A B : Type'} : (term2081 A B) = (term2128 A B).
Proof. exact (@lem4515712 A B (@lem4515688 A B)). Qed.
Lemma lem4515715 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4515716 {A B : Type'} (s : type839 A B) (t : type839 A B) : (s = (term762 A B t)) = (term763 A B s t).
Proof. exact (@lem4515715 (type674 A B) (B -> Prop) s t). Qed.
Lemma lem4515717 {A B : Type'} (_53582 : type839 A B) : (_53582 = (term764 A B)) = (term765 A B _53582).
Proof. exact (@lem4515716 A B _53582 (term704 A B)). Qed.
Lemma lem4515718 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4515719 {A B : Type'} : (term764 A B) = (term704 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515718 A B t)). Qed.
Lemma lem4515720 {A B : Type'} (_53582 : type839 A B) : (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582) = (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582)). Qed.
Lemma lem4515721 {A B : Type'} (_53582 : type839 A B) : (_53582 = (term764 A B)) = (_53582 = (term704 A B)).
Proof. exact (MK_COMB (@lem4515720 A B _53582) (@lem4515719 A B)). Qed.
Lemma lem4515722 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4515723 {A B : Type'} (_53582 : type839 A B) : (term766 A B _53582) = (term767 A B _53582).
Proof. exact (MK_COMB (@lem4515722) (@lem4515721 A B _53582)). Qed.
Lemma lem4515724 {A B : Type'} (t : B -> Prop) : (term705 A B t) = (term706 A B t).
Proof. exact (eq_refl (term705 A B t)). Qed.
Lemma lem4515725 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term707 A B _53582 t) = (term707 A B _53582 t).
Proof. exact (eq_refl (term707 A B _53582 t)). Qed.
Lemma lem4515726 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term705 A B t)) = ((_53582 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4515725 A B _53582 t) (@lem4515724 A B t)). Qed.
Lemma lem4515727 {A B : Type'} (_53582 : type839 A B) : (term768 A B _53582) = (term769 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515726 A B _53582 t)). Qed.
Lemma lem4515728 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4515729 {A B : Type'} (_53582 : type839 A B) : (term765 A B _53582) = (term770 A B _53582).
Proof. exact (MK_COMB (@lem4515728 B) (@lem4515727 A B _53582)). Qed.
Lemma lem4515730 {A B : Type'} (_53582 : type839 A B) : ((_53582 = (term764 A B)) = (term765 A B _53582)) = ((_53582 = (term704 A B)) = (term770 A B _53582)).
Proof. exact (MK_COMB (@lem4515723 A B _53582) (@lem4515729 A B _53582)). Qed.
Lemma lem4515731 {A B : Type'} (_53582 : type839 A B) : (_53582 = (term704 A B)) = (term770 A B _53582).
Proof. exact (EQ_MP (@lem4515730 A B _53582) (@lem4515717 A B _53582)). Qed.
Lemma lem4515733 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4515734 {A B : Type'} (s : type674 A B) (t : type674 A B) : (s = (term771 A B t)) = (term772 A B s t).
Proof. exact (@lem4515733 (type1446 A B) (A -> Prop) s t). Qed.
Lemma lem4515735 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term773 A B t)) = (term774 A B _53582 t).
Proof. exact (@lem4515734 A B (_53582 t) (term706 A B t)). Qed.
Lemma lem4515736 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4515737 {A B : Type'} (t : B -> Prop) : (term773 A B t) = (term706 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515736 A B t s)). Qed.
Lemma lem4515738 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term707 A B _53582 t) = (term707 A B _53582 t).
Proof. exact (eq_refl (term707 A B _53582 t)). Qed.
Lemma lem4515739 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term773 A B t)) = ((_53582 t) = (term706 A B t)).
Proof. exact (MK_COMB (@lem4515738 A B _53582 t) (@lem4515737 A B t)). Qed.
Lemma lem4515740 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4515741 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term775 A B _53582 t) = (term776 A B _53582 t).
Proof. exact (MK_COMB (@lem4515740) (@lem4515739 A B _53582 t)). Qed.
Lemma lem4515742 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term708 A B t s) = (term709 A B t s).
Proof. exact (eq_refl (term708 A B t s)). Qed.
Lemma lem4515743 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53582 t s) = (term710 A B _53582 t s).
Proof. exact (eq_refl (term710 A B _53582 t s)). Qed.
Lemma lem4515744 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term708 A B t s)) = ((_53582 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4515743 A B _53582 t s) (@lem4515742 A B t s)). Qed.
Lemma lem4515745 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term777 A B _53582 t) = (term778 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515744 A B _53582 t s)). Qed.
Lemma lem4515746 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515747 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term774 A B _53582 t) = (term779 A B _53582 t).
Proof. exact (MK_COMB (@lem4515746 A) (@lem4515745 A B _53582 t)). Qed.
Lemma lem4515748 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (((_53582 t) = (term773 A B t)) = (term774 A B _53582 t)) = (((_53582 t) = (term706 A B t)) = (term779 A B _53582 t)).
Proof. exact (MK_COMB (@lem4515741 A B _53582 t) (@lem4515747 A B _53582 t)). Qed.
Lemma lem4515749 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term706 A B t)) = (term779 A B _53582 t).
Proof. exact (EQ_MP (@lem4515748 A B _53582 t) (@lem4515735 A B _53582 t)). Qed.
Lemma lem4515751 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4515752 {A B : Type'} (s : type1446 A B) (t : type1446 A B) : (s = (term780 A B t)) = (term781 A B s t).
Proof. exact (@lem4515751 (type572 A B) B s t). Qed.
Lemma lem4515753 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term782 A B t s)) = (term783 A B _53582 t s).
Proof. exact (@lem4515752 A B (_53582 t s) (term709 A B t s)). Qed.
Lemma lem4515754 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4515755 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term782 A B t s) = (term709 A B t s).
Proof. exact (fun_ext (fun d : B => @lem4515754 A B t s d)). Qed.
Lemma lem4515756 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term710 A B _53582 t s) = (term710 A B _53582 t s).
Proof. exact (eq_refl (term710 A B _53582 t s)). Qed.
Lemma lem4515757 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term782 A B t s)) = ((_53582 t s) = (term709 A B t s)).
Proof. exact (MK_COMB (@lem4515756 A B _53582 t s) (@lem4515755 A B t s)). Qed.
Lemma lem4515758 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4515759 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term784 A B _53582 t s) = (term785 A B _53582 t s).
Proof. exact (MK_COMB (@lem4515758) (@lem4515757 A B _53582 t s)). Qed.
Lemma lem4515760 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B t s d) = (term196 A B t s d).
Proof. exact (eq_refl (term711 A B t s d)). Qed.
Lemma lem4515761 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53582 t s d) = (term712 A B _53582 t s d).
Proof. exact (eq_refl (term712 A B _53582 t s d)). Qed.
Lemma lem4515762 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term711 A B t s d)) = ((_53582 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4515761 A B _53582 t s d) (@lem4515760 A B t s d)). Qed.
Lemma lem4515763 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term786 A B _53582 t s) = (term787 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4515762 A B _53582 t s d)). Qed.
Lemma lem4515764 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515765 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term783 A B _53582 t s) = (term788 A B _53582 t s).
Proof. exact (MK_COMB (@lem4515764 B) (@lem4515763 A B _53582 t s)). Qed.
Lemma lem4515766 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (((_53582 t s) = (term782 A B t s)) = (term783 A B _53582 t s)) = (((_53582 t s) = (term709 A B t s)) = (term788 A B _53582 t s)).
Proof. exact (MK_COMB (@lem4515759 A B _53582 t s) (@lem4515765 A B _53582 t s)). Qed.
Lemma lem4515767 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term709 A B t s)) = (term788 A B _53582 t s).
Proof. exact (EQ_MP (@lem4515766 A B _53582 t s) (@lem4515753 A B _53582 t s)). Qed.
Lemma lem4515769 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term760 _3571 _3575 t)) = (term761 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4515770 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = (term789 A B t)) = (term790 A B s t).
Proof. exact (@lem4515769 Prop (A -> B) s t). Qed.
Lemma lem4515771 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term791 A B t s d)) = (term792 A B _53582 t s d).
Proof. exact (@lem4515770 A B (_53582 t s d) (term196 A B t s d)). Qed.
Lemma lem4515772 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4515773 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term791 A B t s d) = (term196 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4515772 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4515774 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _53582 t s d) = (term712 A B _53582 t s d).
Proof. exact (eq_refl (term712 A B _53582 t s d)). Qed.
Lemma lem4515775 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term791 A B t s d)) = ((_53582 t s d) = (term196 A B t s d)).
Proof. exact (MK_COMB (@lem4515774 A B _53582 t s d) (@lem4515773 A B t s d)). Qed.
Lemma lem4515776 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4515777 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term794 A B _53582 t s d) = (term795 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4515776) (@lem4515775 A B _53582 t s d)). Qed.
Lemma lem4515778 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term793 A B t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term793 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4515779 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _53582 t s d GEN_PVAR_148) = (term796 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4515780 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d GEN_PVAR_148) = (term793 A B t s d GEN_PVAR_148)) = ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4515779 A B _53582 t s d GEN_PVAR_148) (@lem4515778 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4515781 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term797 A B _53582 t s d) = (term798 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4515780 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4515782 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515783 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term792 A B _53582 t s d) = (term799 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4515782 A B) (@lem4515781 A B _53582 t s d)). Qed.
Lemma lem4515784 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (((_53582 t s d) = (term791 A B t s d)) = (term792 A B _53582 t s d)) = (((_53582 t s d) = (term196 A B t s d)) = (term799 A B _53582 t s d)).
Proof. exact (MK_COMB (@lem4515777 A B _53582 t s d) (@lem4515783 A B _53582 t s d)). Qed.
Lemma lem4515785 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term196 A B t s d)) = (term799 A B _53582 t s d).
Proof. exact (EQ_MP (@lem4515784 A B _53582 t s d) (@lem4515771 A B _53582 t s d)). Qed.
Lemma lem4515786 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d))). Qed.
Lemma lem4515787 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53582 t s d) = (term798 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4515786 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4515788 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4515789 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53582 t s d) = (term799 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4515788 A B) (@lem4515787 A B _53582 t s d)). Qed.
Lemma lem4515790 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d) = (term196 A B t s d)) = (term799 A B _53582 t s d).
Proof. exact (TRANS (@lem4515785 A B _53582 t s d) (@lem4515789 A B _53582 t s d)). Qed.
Lemma lem4515791 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term787 A B _53582 t s) = (term800 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4515790 A B _53582 t s d)). Qed.
Lemma lem4515792 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4515793 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term788 A B _53582 t s) = (term801 A B _53582 t s).
Proof. exact (MK_COMB (@lem4515792 B) (@lem4515791 A B _53582 t s)). Qed.
Lemma lem4515794 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53582 t s) = (term709 A B t s)) = (term801 A B _53582 t s).
Proof. exact (TRANS (@lem4515767 A B _53582 t s) (@lem4515793 A B _53582 t s)). Qed.
Lemma lem4515795 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term778 A B _53582 t) = (term802 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515794 A B _53582 t s)). Qed.
Lemma lem4515796 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515797 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term779 A B _53582 t) = (term803 A B _53582 t).
Proof. exact (MK_COMB (@lem4515796 A) (@lem4515795 A B _53582 t)). Qed.
Lemma lem4515798 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((_53582 t) = (term706 A B t)) = (term803 A B _53582 t).
Proof. exact (TRANS (@lem4515749 A B _53582 t) (@lem4515797 A B _53582 t)). Qed.
Lemma lem4515799 {A B : Type'} (_53582 : type839 A B) : (term769 A B _53582) = (term804 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515798 A B _53582 t)). Qed.
Lemma lem4515800 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4515801 {A B : Type'} (_53582 : type839 A B) : (term770 A B _53582) = (term805 A B _53582).
Proof. exact (MK_COMB (@lem4515800 B) (@lem4515799 A B _53582)). Qed.
Lemma lem4515802 {A B : Type'} (_53582 : type839 A B) : (_53582 = (term704 A B)) = (term805 A B _53582).
Proof. exact (TRANS (@lem4515731 A B _53582) (@lem4515801 A B _53582)). Qed.
Lemma lem4515803 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515804 {A B : Type'} (_53582 : type839 A B) : (term746 A B _53582) = (term806 A B _53582).
Proof. exact (MK_COMB (@lem4515803) (@lem4515802 A B _53582)). Qed.
Lemma lem4515805 {A B : Type'} (_53582 : type839 A B) : (term2110 A B _53582) = (term2110 A B _53582).
Proof. exact (eq_refl (term2110 A B _53582)). Qed.
Lemma lem4515806 {A B : Type'} (_53582 : type839 A B) : (term2124 A B _53582) = (term2130 A B _53582).
Proof. exact (MK_COMB (@lem4515804 A B _53582) (@lem4515805 A B _53582)). Qed.
Lemma lem4515807 {A B : Type'} : (term2126 A B) = (term2131 A B).
Proof. exact (fun_ext (fun _53582 : type839 A B => @lem4515806 A B _53582)). Qed.
Lemma lem4515808 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4515809 {A B : Type'} : (term2128 A B) = (term2132 A B).
Proof. exact (MK_COMB (@lem4515808 A B) (@lem4515807 A B)). Qed.
Lemma lem4515810 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4515811 {A B : Type'} : ((term2081 A B) = (term2128 A B)) = ((term2081 A B) = (term2132 A B)).
Proof. exact (MK_COMB (@lem4515810 A B) (@lem4515809 A B)). Qed.
Lemma lem4515814 {A B : Type'} : (term2081 A B) = (term2132 A B).
Proof. exact (EQ_MP (@lem4515811 A B) (@lem4515713 A B)). Qed.
Lemma lem4515815 {A B : Type'} : (term2080 A B) = (term2132 A B).
Proof. exact (TRANS (@lem4515431 A B) (@lem4515814 A B)). Qed.
Lemma lem4515849 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4515850 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4515851 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4515850 B) (@lem4515849 A x a h1)). Qed.
Lemma lem4515852 {B : Type'} (p1 : B) : p1 = p1.
Proof. exact (eq_refl p1). Qed.
Lemma lem4515853 {A B : Type'} (p1 : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1658 A B x a p1) = (@COND B False p1).
Proof. exact (MK_COMB (@lem4515851 A B x a h1) (@lem4515852 B p1)). Qed.
Lemma lem4515854 {A B : Type'} (p2 : A -> B) (x : A) : (p2 x) = (p2 x).
Proof. exact (eq_refl (p2 x)). Qed.
Lemma lem4515855 {A B : Type'} (p1 : B) (p2 : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a p1 p2 x) = (term1659 A B p1 p2 x).
Proof. exact (MK_COMB (@lem4515853 A B p1 x a h1) (@lem4515854 A B p2 x)). Qed.
Lemma lem4515857 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4515858 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4515857 B t1 t2). Qed.
Lemma lem4515859 {A B : Type'} (p1 : B) (p2 : A -> B) (x : A) : (term1659 A B p1 p2 x) = (p2 x).
Proof. exact (@lem4515858 B p1 (p2 x)). Qed.
Lemma lem4515860 {A B : Type'} (p1 : B) (p2 : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a p1 p2 x) = (p2 x).
Proof. exact (TRANS (@lem4515855 A B p1 p2 x a h1) (@lem4515859 A B p1 p2 x)). Qed.
Lemma lem4515861 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4515862 {A B : Type'} (p1 : B) (p2 : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1437 A B a p1 p2 x) = (term262 A B p2 x).
Proof. exact (MK_COMB (@lem4515861 B) (@lem4515860 A B p1 p2 x a h1)). Qed.
Lemma lem4515864 {A : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (x = a) = False.
Proof. exact (h1). Qed.
Lemma lem4515865 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4515866 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = False) : (term839 A B x a) = (@COND B False).
Proof. exact (MK_COMB (@lem4515865 B) (@lem4515864 A x a h1)). Qed.
Lemma lem4515867 {B : Type'} (p1' : B) : p1' = p1'.
Proof. exact (eq_refl p1'). Qed.
Lemma lem4515868 {A B : Type'} (p1' : B) (x : A) (a : A) (h1 : (x = a) = False) : (term1658 A B x a p1') = (@COND B False p1').
Proof. exact (MK_COMB (@lem4515866 A B x a h1) (@lem4515867 B p1')). Qed.
Lemma lem4515869 {A B : Type'} (p2' : A -> B) (x : A) : (p2' x) = (p2' x).
Proof. exact (eq_refl (p2' x)). Qed.
Lemma lem4515870 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a p1' p2' x) = (term1659 A B p1' p2' x).
Proof. exact (MK_COMB (@lem4515868 A B p1' x a h1) (@lem4515869 A B p2' x)). Qed.
Lemma lem4515872 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem4515873 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem4515872 B t1 t2). Qed.
Lemma lem4515874 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) : (term1659 A B p1' p2' x) = (p2' x).
Proof. exact (@lem4515873 B p1' (p2' x)). Qed.
Lemma lem4515875 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term1427 A B a p1' p2' x) = (p2' x).
Proof. exact (TRANS (@lem4515870 A B p1' p2' x a h1) (@lem4515874 A B p1' p2' x)). Qed.
Lemma lem4515876 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : ((term1427 A B a p1 p2 x) = (term1427 A B a p1' p2' x)) = ((p2 x) = (p2' x)).
Proof. exact (MK_COMB (@lem4515862 A B p1 p2 x a h1) (@lem4515875 A B p1' p2' x a h1)). Qed.
Lemma lem4515879 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4515880 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2133 A B p1 p2 a p1' p2' x) = (term2134 A B p2 p2' x).
Proof. exact (MK_COMB (@lem4515879) (@lem4515876 A B p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515883 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : ((p2 x) = (p2' x)) = ((p2 x) = (p2' x)).
Proof. exact (eq_refl ((p2 x) = (p2' x))). Qed.
Lemma lem4515884 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2005 A B p1 a p1' p2 p2' x) = (term2135 A B p2 p2' x).
Proof. exact (MK_COMB (@lem4515880 A B p1 p1' p2 p2' x a h1) (@lem4515883 A B p2 p2' x)). Qed.
Lemma lem4515888 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem4515889 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2135 A B p2 p2' x) = True.
Proof. exact (@lem4515888 ((p2 x) = (p2' x))). Qed.
Lemma lem4515890 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2005 A B p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515884 A B p1 p1' p2 p2' x a h1) (@lem4515889 A B p2 p2' x)). Qed.
Lemma lem4515891 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1449 A B s p2' d) = (term1449 A B s p2' d).
Proof. exact (eq_refl (term1449 A B s p2' d)). Qed.
Lemma lem4515892 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (s : A -> Prop) (p2' : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : (term2014 A B s d p1 a p1' p2 p2' x) = (term2136 A B s p2' d).
Proof. exact (MK_COMB (@lem4515891 A B s p2' d) (@lem4515890 A B p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515894 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515895 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term2136 A B s p2' d) = True.
Proof. exact (@lem4515894 (term184 A B s p2' d)). Qed.
Lemma lem4515896 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2014 A B s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515892 A B p1 p1' p2 s p2' d x a h1) (@lem4515895 A B s p2' d)). Qed.
Lemma lem4515897 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term1452 A B s p2' t) = (term1452 A B s p2' t).
Proof. exact (eq_refl (term1452 A B s p2' t)). Qed.
Lemma lem4515898 {A B : Type'} (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2016 A B t s d p1 a p1' p2 p2' x) = (term2137 A B s p2' t).
Proof. exact (MK_COMB (@lem4515897 A B s p2' t) (@lem4515896 A B s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515900 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515901 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term2137 A B s p2' t) = True.
Proof. exact (@lem4515900 (term174 A B s p2' t)). Qed.
Lemma lem4515902 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2016 A B t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515898 A B d p1 p1' p2 s p2' t x a h1) (@lem4515901 A B s p2' t)). Qed.
Lemma lem4515903 {B : Type'} (p1' : B) (t : B -> Prop) : (term168 B p1' t) = (term168 B p1' t).
Proof. exact (eq_refl (term168 B p1' t)). Qed.
Lemma lem4515904 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (p2' : A -> B) (p1' : B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2018 A B t s d p1 a p1' p2 p2' x) = (term2138 B p1' t).
Proof. exact (MK_COMB (@lem4515903 B p1' t) (@lem4515902 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515906 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515907 {B : Type'} (p1' : B) (t : B -> Prop) : (term2138 B p1' t) = True.
Proof. exact (@lem4515906 (@IN B p1' t)). Qed.
Lemma lem4515908 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2018 A B t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515904 A B s d p1 p2 p2' p1' t x a h1) (@lem4515907 B p1' t)). Qed.
Lemma lem4515909 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1449 A B s p2 d) = (term1449 A B s p2 d).
Proof. exact (eq_refl (term1449 A B s p2 d)). Qed.
Lemma lem4515910 {A B : Type'} (t : B -> Prop) (p1 : B) (p1' : B) (p2' : A -> B) (s : A -> Prop) (p2 : A -> B) (d : B) (x : A) (a : A) (h1 : (x = a) = False) : (term2020 A B t s d p1 a p1' p2 p2' x) = (term2136 A B s p2 d).
Proof. exact (MK_COMB (@lem4515909 A B s p2 d) (@lem4515908 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515912 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515913 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term2136 A B s p2 d) = True.
Proof. exact (@lem4515912 (term184 A B s p2 d)). Qed.
Lemma lem4515914 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2020 A B t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515910 A B t p1 p1' p2' s p2 d x a h1) (@lem4515913 A B s p2 d)). Qed.
Lemma lem4515915 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term1452 A B s p2 t) = (term1452 A B s p2 t).
Proof. exact (eq_refl (term1452 A B s p2 t)). Qed.
Lemma lem4515916 {A B : Type'} (d : B) (p1 : B) (p1' : B) (p2' : A -> B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2022 A B t s d p1 a p1' p2 p2' x) = (term2137 A B s p2 t).
Proof. exact (MK_COMB (@lem4515915 A B s p2 t) (@lem4515914 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515918 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515919 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term2137 A B s p2 t) = True.
Proof. exact (@lem4515918 (term174 A B s p2 t)). Qed.
Lemma lem4515920 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2022 A B t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515916 A B d p1 p1' p2' s p2 t x a h1) (@lem4515919 A B s p2 t)). Qed.
Lemma lem4515921 {B : Type'} (p1 : B) (t : B -> Prop) : (term168 B p1 t) = (term168 B p1 t).
Proof. exact (eq_refl (term168 B p1 t)). Qed.
Lemma lem4515922 {A B : Type'} (s : A -> Prop) (d : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (p1 : B) (t : B -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2024 A B t s d p1 a p1' p2 p2' x) = (term2138 B p1 t).
Proof. exact (MK_COMB (@lem4515921 B p1 t) (@lem4515920 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515924 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515925 {B : Type'} (p1 : B) (t : B -> Prop) : (term2138 B p1 t) = True.
Proof. exact (@lem4515924 (@IN B p1 t)). Qed.
Lemma lem4515926 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2024 A B t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515922 A B s d p1' p2 p2' p1 t x a h1) (@lem4515925 B p1 t)). Qed.
Lemma lem4515927 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _53582 t s d n m) = (term716 A B _53582 t s d n m).
Proof. exact (eq_refl (term716 A B _53582 t s d n m)). Qed.
Lemma lem4515928 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (x : A) (a : A) (h1 : (x = a) = False) : (term2082 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2139 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4515927 A B _53582 t s d n m) (@lem4515926 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515930 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515931 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2139 A B _53582 t s d n m) = True.
Proof. exact (@lem4515930 (term715 A B _53582 t s d n m)). Qed.
Lemma lem4515932 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2082 A B _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515928 A B p1 p1' p2 p2' _53582 t s d n m x a h1) (@lem4515931 A B _53582 t s d n m)). Qed.
Lemma lem4515933 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4515934 {A B : Type'} (_53582 : type839 A B) (m : nat) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (t : B -> Prop) (n : nat) (x : A) (a : A) (h1 : (x = a) = False) : (term2083 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2140 B t n).
Proof. exact (MK_COMB (@lem4515933 B t n) (@lem4515932 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515936 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515937 {B : Type'} (t : B -> Prop) (n : nat) : (term2140 B t n) = True.
Proof. exact (@lem4515936 (@HAS_SIZE B t n)). Qed.
Lemma lem4515938 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2083 A B _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515934 A B _53582 m s d p1 p1' p2 p2' t n x a h1) (@lem4515937 B t n)). Qed.
Lemma lem4515939 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4515940 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2084 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2141 A s0 a s).
Proof. exact (MK_COMB (@lem4515939 A s0 a s) (@lem4515938 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515944 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515945 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2141 A s0 a s) = True.
Proof. exact (@lem4515944 (s0 = (@INSERT A a s))). Qed.
Lemma lem4515946 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2084 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515940 A B _53582 n m t d p1 p1' p2 p2' s0 s x a h1) (@lem4515945 A s0 a s)). Qed.
Lemma lem4515947 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4515948 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (s : A -> Prop) (x : A) (a : A) (h1 : (x = a) = False) : (term2085 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2142 A a s).
Proof. exact (MK_COMB (@lem4515947 A a s) (@lem4515946 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515950 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515951 {A : Type'} (a : A) (s : A -> Prop) : (term2142 A a s) = True.
Proof. exact (@lem4515950 (term178 A a s)). Qed.
Lemma lem4515952 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2085 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515948 A B s0 _53582 n m t d p1 p1' p2 p2' s x a h1) (@lem4515951 A a s)). Qed.
Lemma lem4515953 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4515954 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (t : B -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (s : A -> Prop) (m : nat) (x : A) (a : A) (h1 : (x = a) = False) : (term2086 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2140 A s m).
Proof. exact (MK_COMB (@lem4515953 A s m) (@lem4515952 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515956 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem4515957 {A : Type'} (s : A -> Prop) (m : nat) : (term2140 A s m) = True.
Proof. exact (@lem4515956 (@HAS_SIZE A s m)). Qed.
Lemma lem4515958 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2086 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515954 A B s0 _53582 n t d p1 p1' p2 p2' s m x a h1) (@lem4515957 A s m)). Qed.
Lemma lem4515959 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2087 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2143 A).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4515958 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515960 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515961 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2088 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2144 A).
Proof. exact (MK_COMB (@lem4515960 A) (@lem4515959 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515963 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4515964 {A : Type'} (t : Prop) : (term2145 A t) = t.
Proof. exact (@lem4515963 (A -> Prop) t). Qed.
Lemma lem4515965 {A : Type'} : (term2144 A) = True.
Proof. exact (@lem4515964 A True). Qed.
Lemma lem4515966 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2088 A B _53582 n m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515961 A B _53582 n m t s d p1 p1' p2 p2' x a h1) (@lem4515965 A)). Qed.
Lemma lem4515967 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2089 A B _53582 m t s d p1 a p1' p2 p2' x) = term2146.
Proof. exact (fun_ext (fun n : nat => @lem4515966 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515968 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515969 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2090 A B _53582 m t s d p1 a p1' p2 p2' x) = term2147.
Proof. exact (MK_COMB (@lem4515968) (@lem4515967 A B _53582 m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515971 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4515972 (t : Prop) : (term2148 t) = t.
Proof. exact (@lem4515971 nat t). Qed.
Lemma lem4515973 : term2147 = True.
Proof. exact (@lem4515972 True). Qed.
Lemma lem4515974 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2090 A B _53582 m t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515969 A B _53582 m t s d p1 p1' p2 p2' x a h1) (@lem4515973)). Qed.
Lemma lem4515975 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2091 A B _53582 t s d p1 a p1' p2 p2' x) = term2146.
Proof. exact (fun_ext (fun m : nat => @lem4515974 A B _53582 m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515976 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4515977 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2092 A B _53582 t s d p1 a p1' p2 p2' x) = term2147.
Proof. exact (MK_COMB (@lem4515976) (@lem4515975 A B _53582 t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515979 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4515980 (t : Prop) : (term2148 t) = t.
Proof. exact (@lem4515979 nat t). Qed.
Lemma lem4515981 : term2147 = True.
Proof. exact (@lem4515980 True). Qed.
Lemma lem4515982 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2092 A B _53582 t s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515977 A B _53582 t s d p1 p1' p2 p2' x a h1) (@lem4515981)). Qed.
Lemma lem4515983 {A B : Type'} (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2093 A B _53582 s d p1 a p1' p2 p2' x) = (term2143 B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4515982 A B _53582 t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515984 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4515985 {A B : Type'} (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2094 A B _53582 s d p1 a p1' p2 p2' x) = (term2144 B).
Proof. exact (MK_COMB (@lem4515984 B) (@lem4515983 A B _53582 s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515987 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4515988 {B : Type'} (t : Prop) : (term2145 B t) = t.
Proof. exact (@lem4515987 (B -> Prop) t). Qed.
Lemma lem4515989 {B : Type'} : (term2144 B) = True.
Proof. exact (@lem4515988 B True). Qed.
Lemma lem4515990 {A B : Type'} (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2094 A B _53582 s d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515985 A B _53582 s d p1 p1' p2 p2' x a h1) (@lem4515989 B)). Qed.
Lemma lem4515991 {A B : Type'} (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2095 A B _53582 d p1 a p1' p2 p2' x) = (term2143 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4515990 A B _53582 s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515992 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4515993 {A B : Type'} (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2096 A B _53582 d p1 a p1' p2 p2' x) = (term2144 A).
Proof. exact (MK_COMB (@lem4515992 A) (@lem4515991 A B _53582 d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4515995 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4515996 {A : Type'} (t : Prop) : (term2145 A t) = t.
Proof. exact (@lem4515995 (A -> Prop) t). Qed.
Lemma lem4515997 {A : Type'} : (term2144 A) = True.
Proof. exact (@lem4515996 A True). Qed.
Lemma lem4515998 {A B : Type'} (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2096 A B _53582 d p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4515993 A B _53582 d p1 p1' p2 p2' x a h1) (@lem4515997 A)). Qed.
Lemma lem4515999 {A B : Type'} (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2097 A B _53582 p1 a p1' p2 p2' x) = (term173 B).
Proof. exact (fun_ext (fun d : B => @lem4515998 A B _53582 d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516000 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516001 {A B : Type'} (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2098 A B _53582 p1 a p1' p2 p2' x) = (term175 B).
Proof. exact (MK_COMB (@lem4516000 B) (@lem4515999 A B _53582 p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516003 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4516004 {B : Type'} (t : Prop) : (term176 B t) = t.
Proof. exact (@lem4516003 B t). Qed.
Lemma lem4516005 {B : Type'} : (term175 B) = True.
Proof. exact (@lem4516004 B True). Qed.
Lemma lem4516006 {A B : Type'} (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2098 A B _53582 p1 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4516001 A B _53582 p1 p1' p2 p2' x a h1) (@lem4516005 B)). Qed.
Lemma lem4516007 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2099 A B _53582 a p1' p2 p2' x) = (term173 B).
Proof. exact (fun_ext (fun p1 : B => @lem4516006 A B _53582 p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516008 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516009 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2100 A B _53582 a p1' p2 p2' x) = (term175 B).
Proof. exact (MK_COMB (@lem4516008 B) (@lem4516007 A B _53582 p1' p2 p2' x a h1)). Qed.
Lemma lem4516011 {A : Type'} (t : Prop) : (term176 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem4516012 {B : Type'} (t : Prop) : (term176 B t) = t.
Proof. exact (@lem4516011 B t). Qed.
Lemma lem4516013 {B : Type'} : (term175 B) = True.
Proof. exact (@lem4516012 B True). Qed.
Lemma lem4516014 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = False) : (term2100 A B _53582 a p1' p2 p2' x) = True.
Proof. exact (TRANS (@lem4516009 A B _53582 p1' p2 p2' x a h1) (@lem4516013 B)). Qed.
Lemma lem4516015 {A B : Type'} (_53582 : type839 A B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2149 A B _53582 a p1' p2 p2' x.
Proof. exact (fun h0 : (x = a) = False => @lem4516014 A B _53582 p1' p2 p2' x a h0). Qed.
Lemma lem4516047 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4516048 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4516049 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4516048 B) (@lem4516047 A x a h1)). Qed.
Lemma lem4516050 {B : Type'} (p1 : B) : p1 = p1.
Proof. exact (eq_refl p1). Qed.
Lemma lem4516051 {A B : Type'} (p1 : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1658 A B x a p1) = (@COND B True p1).
Proof. exact (MK_COMB (@lem4516049 A B x a h1) (@lem4516050 B p1)). Qed.
Lemma lem4516052 {A B : Type'} (p2 : A -> B) (x : A) : (p2 x) = (p2 x).
Proof. exact (eq_refl (p2 x)). Qed.
Lemma lem4516053 {A B : Type'} (p1 : B) (p2 : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a p1 p2 x) = (term1662 A B p1 p2 x).
Proof. exact (MK_COMB (@lem4516051 A B p1 x a h1) (@lem4516052 A B p2 x)). Qed.
Lemma lem4516055 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4516056 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4516055 B t2 t1). Qed.
Lemma lem4516057 {A B : Type'} (p2 : A -> B) (x : A) (p1 : B) : (term1662 A B p1 p2 x) = p1.
Proof. exact (@lem4516056 B (p2 x) p1). Qed.
Lemma lem4516058 {A B : Type'} (p2 : A -> B) (p1 : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a p1 p2 x) = p1.
Proof. exact (TRANS (@lem4516053 A B p1 p2 x a h1) (@lem4516057 A B p2 x p1)). Qed.
Lemma lem4516059 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4516060 {A B : Type'} (p2 : A -> B) (p1 : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1437 A B a p1 p2 x) = (@eq B p1).
Proof. exact (MK_COMB (@lem4516059 B) (@lem4516058 A B p2 p1 x a h1)). Qed.
Lemma lem4516062 {A : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (x = a) = True.
Proof. exact (h1). Qed.
Lemma lem4516063 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem4516064 {A B : Type'} (x : A) (a : A) (h1 : (x = a) = True) : (term839 A B x a) = (@COND B True).
Proof. exact (MK_COMB (@lem4516063 B) (@lem4516062 A x a h1)). Qed.
Lemma lem4516065 {B : Type'} (p1' : B) : p1' = p1'.
Proof. exact (eq_refl p1'). Qed.
Lemma lem4516066 {A B : Type'} (p1' : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1658 A B x a p1') = (@COND B True p1').
Proof. exact (MK_COMB (@lem4516064 A B x a h1) (@lem4516065 B p1')). Qed.
Lemma lem4516067 {A B : Type'} (p2' : A -> B) (x : A) : (p2' x) = (p2' x).
Proof. exact (eq_refl (p2' x)). Qed.
Lemma lem4516068 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a p1' p2' x) = (term1662 A B p1' p2' x).
Proof. exact (MK_COMB (@lem4516066 A B p1' x a h1) (@lem4516067 A B p2' x)). Qed.
Lemma lem4516070 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4516071 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem4516070 B t2 t1). Qed.
Lemma lem4516072 {A B : Type'} (p2' : A -> B) (x : A) (p1' : B) : (term1662 A B p1' p2' x) = p1'.
Proof. exact (@lem4516071 B (p2' x) p1'). Qed.
Lemma lem4516073 {A B : Type'} (p2' : A -> B) (p1' : B) (x : A) (a : A) (h1 : (x = a) = True) : (term1427 A B a p1' p2' x) = p1'.
Proof. exact (TRANS (@lem4516068 A B p1' p2' x a h1) (@lem4516072 A B p2' x p1')). Qed.
Lemma lem4516074 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (p1 : B) (p1' : B) (x : A) (a : A) (h1 : (x = a) = True) : ((term1427 A B a p1 p2 x) = (term1427 A B a p1' p2' x)) = (p1 = p1').
Proof. exact (MK_COMB (@lem4516060 A B p2 p1 x a h1) (@lem4516073 A B p2' p1' x a h1)). Qed.
Lemma lem4516077 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516078 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (p1 : B) (p1' : B) (x : A) (a : A) (h1 : (x = a) = True) : (term2133 A B p1 p2 a p1' p2' x) = (term1399 B p1 p1').
Proof. exact (MK_COMB (@lem4516077) (@lem4516074 A B p2 p2' p1 p1' x a h1)). Qed.
Lemma lem4516081 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : ((p2 x) = (p2' x)) = ((p2 x) = (p2' x)).
Proof. exact (eq_refl ((p2 x) = (p2' x))). Qed.
Lemma lem4516082 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2005 A B p1 a p1' p2 p2' x) = (term2150 A B p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516078 A B p2 p2' p1 p1' x a h1) (@lem4516081 A B p2 p2' x)). Qed.
Lemma lem4516087 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1449 A B s p2' d) = (term1449 A B s p2' d).
Proof. exact (eq_refl (term1449 A B s p2' d)). Qed.
Lemma lem4516088 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2014 A B s d p1 a p1' p2 p2' x) = (term2151 A B s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516087 A B s p2' d) (@lem4516082 A B p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516091 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term1452 A B s p2' t) = (term1452 A B s p2' t).
Proof. exact (eq_refl (term1452 A B s p2' t)). Qed.
Lemma lem4516092 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2016 A B t s d p1 a p1' p2 p2' x) = (term2152 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516091 A B s p2' t) (@lem4516088 A B s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516095 {B : Type'} (p1' : B) (t : B -> Prop) : (term168 B p1' t) = (term168 B p1' t).
Proof. exact (eq_refl (term168 B p1' t)). Qed.
Lemma lem4516096 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2018 A B t s d p1 a p1' p2 p2' x) = (term2153 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516095 B p1' t) (@lem4516092 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516099 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1449 A B s p2 d) = (term1449 A B s p2 d).
Proof. exact (eq_refl (term1449 A B s p2 d)). Qed.
Lemma lem4516100 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2020 A B t s d p1 a p1' p2 p2' x) = (term2154 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516099 A B s p2 d) (@lem4516096 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516103 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term1452 A B s p2 t) = (term1452 A B s p2 t).
Proof. exact (eq_refl (term1452 A B s p2 t)). Qed.
Lemma lem4516104 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2022 A B t s d p1 a p1' p2 p2' x) = (term2155 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516103 A B s p2 t) (@lem4516100 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516107 {B : Type'} (p1 : B) (t : B -> Prop) : (term168 B p1 t) = (term168 B p1 t).
Proof. exact (eq_refl (term168 B p1 t)). Qed.
Lemma lem4516108 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2024 A B t s d p1 a p1' p2 p2' x) = (term2156 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516107 B p1 t) (@lem4516104 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516111 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _53582 t s d n m) = (term716 A B _53582 t s d n m).
Proof. exact (eq_refl (term716 A B _53582 t s d n m)). Qed.
Lemma lem4516112 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2082 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2157 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516111 A B _53582 t s d n m) (@lem4516108 A B t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516115 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4516116 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2083 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2158 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516115 B t n) (@lem4516112 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516119 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4516120 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2084 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2159 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516119 A s0 a s) (@lem4516116 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516125 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4516126 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2085 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2160 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516125 A a s) (@lem4516120 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516129 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4516130 {A B : Type'} (s0 : A -> Prop) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2086 A B s0 _53582 n m t s d p1 a p1' p2 p2' x) = (term2161 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516129 A s m) (@lem4516126 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516133 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2087 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2162 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4516130 A B s0 _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516134 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516135 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2088 A B _53582 n m t s d p1 a p1' p2 p2' x) = (term2163 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516134 A) (@lem4516133 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516140 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2089 A B _53582 m t s d p1 a p1' p2 p2' x) = (term2164 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4516135 A B _53582 n m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516141 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4516142 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2090 A B _53582 m t s d p1 a p1' p2 p2' x) = (term2165 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516141) (@lem4516140 A B _53582 m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516147 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2091 A B _53582 t s d p1 a p1' p2 p2' x) = (term2166 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4516142 A B _53582 m t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516148 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4516149 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2092 A B _53582 t s d p1 a p1' p2 p2' x) = (term2167 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516148) (@lem4516147 A B _53582 t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516154 {A B : Type'} (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2093 A B _53582 s d p1 a p1' p2 p2' x) = (term2168 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4516149 A B _53582 t s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516155 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4516156 {A B : Type'} (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2094 A B _53582 s d p1 a p1' p2 p2' x) = (term2169 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516155 B) (@lem4516154 A B _53582 s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516161 {A B : Type'} (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2095 A B _53582 d p1 a p1' p2 p2' x) = (term2170 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516156 A B _53582 s d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516162 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516163 {A B : Type'} (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2096 A B _53582 d p1 a p1' p2 p2' x) = (term2171 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516162 A) (@lem4516161 A B _53582 d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516168 {A B : Type'} (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2097 A B _53582 p1 a p1' p2 p2' x) = (term2172 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4516163 A B _53582 d p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516169 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516170 {A B : Type'} (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2098 A B _53582 p1 a p1' p2 p2' x) = (term2173 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516169 B) (@lem4516168 A B _53582 p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516175 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2099 A B _53582 a p1' p2 p2' x) = (term2174 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4516170 A B _53582 p1 p1' p2 p2' x a h1)). Qed.
Lemma lem4516176 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516177 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (h1 : (x = a) = True) : (term2100 A B _53582 a p1' p2 p2' x) = (term2175 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516176 B) (@lem4516175 A B _53582 p1' p2 p2' x a h1)). Qed.
Lemma lem4516182 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2176 A B a _53582 p1' p2 p2' x.
Proof. exact (fun h0 : (x = a) = True => @lem4516177 A B _53582 p1' p2 p2' x a h0). Qed.
Lemma lem4516183 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2177 A B a _53582 p1' p2 p2' x.
Proof. exact (conj (@lem4516015 A B _53582 a p1' p2 p2' x) (@lem4516182 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516185 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term820 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem4516186 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) : term2178 A B _53582 p1' p2 p2' x a.
Proof. exact (@lem4516185 (term2100 A B _53582 a p1' p2 p2' x) (term2175 A B a _53582 p1' p2 p2' x) (x = a) True). Qed.
Lemma lem4516187 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) : (term2100 A B _53582 a p1' p2 p2' x) = (term2179 A B _53582 p1' p2 p2' x a).
Proof. exact (@lem4516186 A B _53582 p1' p2 p2' x a (@lem4516183 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516189 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem4516190 {A : Type'} (x : A) (a : A) : (term853 A x a) = True.
Proof. exact (@lem4516189 (x = a)). Qed.
Lemma lem4516195 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2180 A B a _53582 p1' p2 p2' x) = (term2180 A B a _53582 p1' p2 p2' x).
Proof. exact (eq_refl (term2180 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516196 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2179 A B _53582 p1' p2 p2' x a) = (term2181 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516195 A B a _53582 p1' p2 p2' x) (@lem4516190 A x a)). Qed.
Lemma lem4516198 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4516199 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2181 A B a _53582 p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (@lem4516198 (term2182 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516200 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2179 A B _53582 p1' p2 p2' x a) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4516196 A B a _53582 p1' p2 p2' x) (@lem4516199 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516201 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2100 A B _53582 a p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4516187 A B _53582 p1' p2 p2' x a) (@lem4516200 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516206 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2150 A B p1 p1' p2 p2' x) = (term2150 A B p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2150 A B p1 p1' p2 p2' x)). Qed.
Lemma lem4516213 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term180 A B s p2' x d) = (term180 A B s p2' x d).
Proof. exact (eq_refl (term180 A B s p2' x d)). Qed.
Lemma lem4516214 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term182 A B s p2' d) = (term182 A B s p2' d).
Proof. exact (fun_ext (fun x : A => @lem4516213 A B s p2' x d)). Qed.
Lemma lem4516215 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516216 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term184 A B s p2' d) = (term184 A B s p2' d).
Proof. exact (MK_COMB (@lem4516215 A) (@lem4516214 A B s p2' d)). Qed.
Lemma lem4516217 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516218 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1449 A B s p2' d) = (term1449 A B s p2' d).
Proof. exact (MK_COMB (@lem4516217) (@lem4516216 A B s p2' d)). Qed.
Lemma lem4516219 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2151 A B s d p1 p1' p2 p2' x) = (term2151 A B s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516218 A B s p2' d) (@lem4516206 A B p1 p1' p2 p2' x)). Qed.
Lemma lem4516224 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2' x t) = (term170 A B s p2' x t).
Proof. exact (eq_refl (term170 A B s p2' x t)). Qed.
Lemma lem4516225 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term172 A B s p2' t) = (term172 A B s p2' t).
Proof. exact (fun_ext (fun x : A => @lem4516224 A B s p2' x t)). Qed.
Lemma lem4516226 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516227 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term174 A B s p2' t) = (term174 A B s p2' t).
Proof. exact (MK_COMB (@lem4516226 A) (@lem4516225 A B s p2' t)). Qed.
Lemma lem4516228 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516229 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term1452 A B s p2' t) = (term1452 A B s p2' t).
Proof. exact (MK_COMB (@lem4516228) (@lem4516227 A B s p2' t)). Qed.
Lemma lem4516230 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2152 A B t s d p1 p1' p2 p2' x) = (term2152 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516229 A B s p2' t) (@lem4516219 A B s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516233 {B : Type'} (p1' : B) (t : B -> Prop) : (term168 B p1' t) = (term168 B p1' t).
Proof. exact (eq_refl (term168 B p1' t)). Qed.
Lemma lem4516234 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2153 A B t s d p1 p1' p2 p2' x) = (term2153 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516233 B p1' t) (@lem4516230 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516241 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term180 A B s p2 x d) = (term180 A B s p2 x d).
Proof. exact (eq_refl (term180 A B s p2 x d)). Qed.
Lemma lem4516242 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term182 A B s p2 d) = (term182 A B s p2 d).
Proof. exact (fun_ext (fun x : A => @lem4516241 A B s p2 x d)). Qed.
Lemma lem4516243 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516244 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term184 A B s p2 d) = (term184 A B s p2 d).
Proof. exact (MK_COMB (@lem4516243 A) (@lem4516242 A B s p2 d)). Qed.
Lemma lem4516245 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516246 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1449 A B s p2 d) = (term1449 A B s p2 d).
Proof. exact (MK_COMB (@lem4516245) (@lem4516244 A B s p2 d)). Qed.
Lemma lem4516247 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2154 A B t s d p1 p1' p2 p2' x) = (term2154 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516246 A B s p2 d) (@lem4516234 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516252 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2 x t) = (term170 A B s p2 x t).
Proof. exact (eq_refl (term170 A B s p2 x t)). Qed.
Lemma lem4516253 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term172 A B s p2 t) = (term172 A B s p2 t).
Proof. exact (fun_ext (fun x : A => @lem4516252 A B s p2 x t)). Qed.
Lemma lem4516254 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516255 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term174 A B s p2 t) = (term174 A B s p2 t).
Proof. exact (MK_COMB (@lem4516254 A) (@lem4516253 A B s p2 t)). Qed.
Lemma lem4516256 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516257 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term1452 A B s p2 t) = (term1452 A B s p2 t).
Proof. exact (MK_COMB (@lem4516256) (@lem4516255 A B s p2 t)). Qed.
Lemma lem4516258 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2155 A B t s d p1 p1' p2 p2' x) = (term2155 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516257 A B s p2 t) (@lem4516247 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516261 {B : Type'} (p1 : B) (t : B -> Prop) : (term168 B p1 t) = (term168 B p1 t).
Proof. exact (eq_refl (term168 B p1 t)). Qed.
Lemma lem4516262 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2156 A B t s d p1 p1' p2 p2' x) = (term2156 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516261 B p1 t) (@lem4516258 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516265 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term716 A B _53582 t s d n m) = (term716 A B _53582 t s d n m).
Proof. exact (eq_refl (term716 A B _53582 t s d n m)). Qed.
Lemma lem4516266 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2157 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2157 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516265 A B _53582 t s d n m) (@lem4516262 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516269 {B : Type'} (t : B -> Prop) (n : nat) : (term663 B t n) = (term663 B t n).
Proof. exact (eq_refl (term663 B t n)). Qed.
Lemma lem4516270 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2158 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2158 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516269 B t n) (@lem4516266 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516273 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term666 A s0 a s) = (term666 A s0 a s).
Proof. exact (eq_refl (term666 A s0 a s)). Qed.
Lemma lem4516274 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2159 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2159 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516273 A s0 a s) (@lem4516270 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516279 {A : Type'} (a : A) (s : A -> Prop) : (term179 A a s) = (term179 A a s).
Proof. exact (eq_refl (term179 A a s)). Qed.
Lemma lem4516280 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2160 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2160 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516279 A a s) (@lem4516274 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516283 {A : Type'} (s : A -> Prop) (m : nat) : (term663 A s m) = (term663 A s m).
Proof. exact (eq_refl (term663 A s m)). Qed.
Lemma lem4516284 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2161 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2161 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516283 A s m) (@lem4516280 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516285 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2162 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2162 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4516284 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516286 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516287 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2163 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2163 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516286 A) (@lem4516285 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516288 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2164 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2164 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4516287 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516289 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4516290 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2165 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2165 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516289) (@lem4516288 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516291 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2166 A B a _53582 t s d p1 p1' p2 p2' x) = (term2166 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4516290 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516292 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4516293 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2167 A B a _53582 t s d p1 p1' p2 p2' x) = (term2167 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516292) (@lem4516291 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516294 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2168 A B a _53582 s d p1 p1' p2 p2' x) = (term2168 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4516293 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516295 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4516296 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2169 A B a _53582 s d p1 p1' p2 p2' x) = (term2169 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516295 B) (@lem4516294 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516297 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2170 A B a _53582 d p1 p1' p2 p2' x) = (term2170 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516296 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4516298 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516299 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2171 A B a _53582 d p1 p1' p2 p2' x) = (term2171 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516298 A) (@lem4516297 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4516300 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2172 A B a _53582 p1 p1' p2 p2' x) = (term2172 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4516299 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4516301 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516302 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2173 A B a _53582 p1 p1' p2 p2' x) = (term2173 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516301 B) (@lem4516300 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4516303 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2174 A B a _53582 p1' p2 p2' x) = (term2174 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4516302 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4516304 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516305 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2175 A B a _53582 p1' p2 p2' x) = (term2175 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516304 B) (@lem4516303 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516310 {A : Type'} (x : A) (a : A) : (term2183 A x a) = (term2183 A x a).
Proof. exact (eq_refl (term2183 A x a)). Qed.
Lemma lem4516311 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2182 A B a _53582 p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516310 A x a) (@lem4516305 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516312 {A B : Type'} (_53582 : type839 A B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2184 A B _53582 a p1' p2 p2' x) = (term2184 A B _53582 a p1' p2 p2' x).
Proof. exact (eq_refl (term2184 A B _53582 a p1' p2 p2' x)). Qed.
Lemma lem4516313 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2100 A B _53582 a p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x)) = ((term2100 A B _53582 a p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4516312 A B _53582 a p1' p2 p2' x) (@lem4516311 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516314 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2100 A B _53582 a p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4516313 A B a _53582 p1' p2 p2' x) (@lem4516201 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516315 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2101 A B _53582 p1' p2 p2' x) = (term2185 A B _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun a : A => @lem4516314 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516316 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516317 {A B : Type'} (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2102 A B _53582 p1' p2 p2' x) = (term2186 A B _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4516316 A) (@lem4516315 A B _53582 p1' p2 p2' x)). Qed.
Lemma lem4516318 {A B : Type'} (_53582 : type839 A B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2103 A B _53582 p2 p2' x) = (term2187 A B _53582 p2 p2' x).
Proof. exact (fun_ext (fun p1' : B => @lem4516317 A B _53582 p1' p2 p2' x)). Qed.
Lemma lem4516319 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516320 {A B : Type'} (_53582 : type839 A B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2104 A B _53582 p2 p2' x) = (term2188 A B _53582 p2 p2' x).
Proof. exact (MK_COMB (@lem4516319 B) (@lem4516318 A B _53582 p2 p2' x)). Qed.
Lemma lem4516321 {A B : Type'} (_53582 : type839 A B) (p2' : A -> B) (x : A) : (term2105 A B _53582 p2' x) = (term2189 A B _53582 p2' x).
Proof. exact (fun_ext (fun p2 : A -> B => @lem4516320 A B _53582 p2 p2' x)). Qed.
Lemma lem4516322 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516323 {A B : Type'} (_53582 : type839 A B) (p2' : A -> B) (x : A) : (term2106 A B _53582 p2' x) = (term2190 A B _53582 p2' x).
Proof. exact (MK_COMB (@lem4516322 A B) (@lem4516321 A B _53582 p2' x)). Qed.
Lemma lem4516324 {A B : Type'} (_53582 : type839 A B) (x : A) : (term2107 A B _53582 x) = (term2191 A B _53582 x).
Proof. exact (fun_ext (fun p2' : A -> B => @lem4516323 A B _53582 p2' x)). Qed.
Lemma lem4516325 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516326 {A B : Type'} (_53582 : type839 A B) (x : A) : (term2108 A B _53582 x) = (term2192 A B _53582 x).
Proof. exact (MK_COMB (@lem4516325 A B) (@lem4516324 A B _53582 x)). Qed.
Lemma lem4516327 {A B : Type'} (_53582 : type839 A B) : (term2109 A B _53582) = (term2193 A B _53582).
Proof. exact (fun_ext (fun x : A => @lem4516326 A B _53582 x)). Qed.
Lemma lem4516328 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4516329 {A B : Type'} (_53582 : type839 A B) : (term2110 A B _53582) = (term2194 A B _53582).
Proof. exact (MK_COMB (@lem4516328 A) (@lem4516327 A B _53582)). Qed.
Lemma lem4516330 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516331 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4516330 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516332 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4516333 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516332 A B) (@lem4516331 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516336 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term796 A B _53582 t s d GEN_PVAR_148) = (term796 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term796 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516337 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4516336 A B _53582 t s d GEN_PVAR_148) (@lem4516333 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516338 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53582 t s d) = (term798 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4516337 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516339 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516340 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53582 t s d) = (term799 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516339 A B) (@lem4516338 A B _53582 t s d)). Qed.
Lemma lem4516341 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _53582 t s) = (term800 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516340 A B _53582 t s d)). Qed.
Lemma lem4516342 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516343 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _53582 t s) = (term801 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516342 B) (@lem4516341 A B _53582 t s)). Qed.
Lemma lem4516344 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term802 A B _53582 t) = (term802 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516343 A B _53582 t s)). Qed.
Lemma lem4516345 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516346 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term803 A B _53582 t) = (term803 A B _53582 t).
Proof. exact (MK_COMB (@lem4516345 A) (@lem4516344 A B _53582 t)). Qed.
Lemma lem4516347 {A B : Type'} (_53582 : type839 A B) : (term804 A B _53582) = (term804 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4516346 A B _53582 t)). Qed.
Lemma lem4516348 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4516349 {A B : Type'} (_53582 : type839 A B) : (term805 A B _53582) = (term805 A B _53582).
Proof. exact (MK_COMB (@lem4516348 B) (@lem4516347 A B _53582)). Qed.
Lemma lem4516350 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4516351 {A B : Type'} (_53582 : type839 A B) : (term806 A B _53582) = (term806 A B _53582).
Proof. exact (MK_COMB (@lem4516350) (@lem4516349 A B _53582)). Qed.
Lemma lem4516352 {A B : Type'} (_53582 : type839 A B) : (term2130 A B _53582) = (term2195 A B _53582).
Proof. exact (MK_COMB (@lem4516351 A B _53582) (@lem4516329 A B _53582)). Qed.
Lemma lem4516353 {A B : Type'} : (term2131 A B) = (term2196 A B).
Proof. exact (fun_ext (fun _53582 : type839 A B => @lem4516352 A B _53582)). Qed.
Lemma lem4516354 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4516355 {A B : Type'} : (term2132 A B) = (term2197 A B).
Proof. exact (MK_COMB (@lem4516354 A B) (@lem4516353 A B)). Qed.
Lemma lem4516544 {A B : Type'} : (term2080 A B) = (term2197 A B).
Proof. exact (TRANS (@lem4515815 A B) (@lem4516355 A B)). Qed.
Lemma lem4516545 {A B : Type'} : (term2197 A B) = (term2080 A B).
Proof. exact (SYM (@lem4516544 A B)). Qed.
Lemma lem4516546 {A B : Type'} (_53582 : type839 A B) (h1 : term805 A B _53582) : term805 A B _53582.
Proof. exact (h1). Qed.
Lemma lem4516548 (p : Prop) : p = (term646 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4516549 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2182 A B a _53582 p1' p2 p2' x) = (term2198 A B a _53582 p1' p2 p2' x).
Proof. exact (@lem4516548 (term2182 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516550 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2198 A B a _53582 p1' p2 p2' x) = (term2182 A B a _53582 p1' p2 p2' x).
Proof. exact (SYM (@lem4516549 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4516551 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2199 A B a _53582 p1' p2 p2' x) : term2199 A B a _53582 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4516555 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term190 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term190 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516556 {A B : Type'} (P : type572 A B) : (term924 A B P) = (term925 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem4516557 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term927 A B GEN_PVAR_148 t s d).
Proof. exact (@lem4516556 A B (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516558 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516559 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4516561 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term929 A B GEN_PVAR_148 t s d f) = (term930 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4516559) (@lem4516558 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516562 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term931 A B GEN_PVAR_148 t s d) = (term932 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4516561 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516563 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516564 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term927 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516563 A B) (@lem4516562 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516565 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term926 A B GEN_PVAR_148 t s d) = (term933 A B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4516557 A B GEN_PVAR_148 t s d) (@lem4516564 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516566 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term192 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4516555 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4516567 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4516568 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term194 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516567 A B) (@lem4516566 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516570 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53582 t s d GEN_PVAR_148) = (term934 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516571 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _53582 GEN_PVAR_148 t s d) = (term935 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516570 A B _53582 t s d GEN_PVAR_148) (@lem4516568 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516573 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term936 A B _53582 t s d GEN_PVAR_148) = (term936 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term936 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516574 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term937 A B _53582 GEN_PVAR_148 t s d) = (term938 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516573 A B _53582 t s d GEN_PVAR_148) (@lem4516565 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516575 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516576 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term939 A B _53582 GEN_PVAR_148 t s d) = (term940 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516575) (@lem4516574 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516577 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term941 A B _53582 GEN_PVAR_148 t s d) = (term942 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516576 A B _53582 GEN_PVAR_148 t s d) (@lem4516571 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516578 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term941 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53582 t s d GEN_PVAR_148) (term194 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4516579 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53582 t s d GEN_PVAR_148) = (term194 A B GEN_PVAR_148 t s d)) = (term942 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4516578 A B _53582 GEN_PVAR_148 t s d) (@lem4516577 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516580 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term798 A B _53582 t s d) = (term943 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4516579 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516581 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516582 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term799 A B _53582 t s d) = (term944 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516581 A B) (@lem4516580 A B _53582 t s d)). Qed.
Lemma lem4516583 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term800 A B _53582 t s) = (term945 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516582 A B _53582 t s d)). Qed.
Lemma lem4516584 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516585 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term801 A B _53582 t s) = (term946 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516584 B) (@lem4516583 A B _53582 t s)). Qed.
Lemma lem4516586 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term802 A B _53582 t) = (term947 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516585 A B _53582 t s)). Qed.
Lemma lem4516587 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516588 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term803 A B _53582 t) = (term948 A B _53582 t).
Proof. exact (MK_COMB (@lem4516587 A) (@lem4516586 A B _53582 t)). Qed.
Lemma lem4516589 {A B : Type'} (_53582 : type839 A B) : (term804 A B _53582) = (term949 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4516588 A B _53582 t)). Qed.
Lemma lem4516590 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4516591 {A B : Type'} (_53582 : type839 A B) : (term805 A B _53582) = (term950 A B _53582).
Proof. exact (MK_COMB (@lem4516590 B) (@lem4516589 A B _53582)). Qed.
Lemma lem4516605 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4516606 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term953 A B P Q) = (term954 A B P Q).
Proof. exact (@lem4516605 (A -> B) P Q). Qed.
Lemma lem4516607 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _53582 t s d) = (term956 A B _53582 t s d).
Proof. exact (@lem4516606 A B (term957 A B _53582 t s d) (term958 A B _53582 t s d)). Qed.
Lemma lem4516608 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _53582 t s d GEN_PVAR_148) = (term938 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516609 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516610 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term960 A B _53582 t s d GEN_PVAR_148) = (term940 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516609) (@lem4516608 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516611 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _53582 t s d GEN_PVAR_148) = (term935 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516612 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term962 A B _53582 t s d GEN_PVAR_148) = (term942 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4516610 A B _53582 GEN_PVAR_148 t s d) (@lem4516611 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516613 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term963 A B _53582 t s d) = (term943 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4516612 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516614 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516615 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term955 A B _53582 t s d) = (term944 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516614 A B) (@lem4516613 A B _53582 t s d)). Qed.
Lemma lem4516616 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4516617 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term964 A B _53582 t s d) = (term965 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516616) (@lem4516615 A B _53582 t s d)). Qed.
Lemma lem4516618 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term959 A B _53582 t s d GEN_PVAR_148) = (term938 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term959 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516619 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term966 A B _53582 t s d) = (term957 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4516618 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516620 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516621 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term967 A B _53582 t s d) = (term968 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516620 A B) (@lem4516619 A B _53582 t s d)). Qed.
Lemma lem4516622 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516623 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term969 A B _53582 t s d) = (term970 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516622) (@lem4516621 A B _53582 t s d)). Qed.
Lemma lem4516624 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term961 A B _53582 t s d GEN_PVAR_148) = (term935 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term961 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4516625 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term971 A B _53582 t s d) = (term958 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4516624 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4516626 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4516627 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term972 A B _53582 t s d) = (term973 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516626 A B) (@lem4516625 A B _53582 t s d)). Qed.
Lemma lem4516628 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term956 A B _53582 t s d) = (term974 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516623 A B _53582 t s d) (@lem4516627 A B _53582 t s d)). Qed.
Lemma lem4516629 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term955 A B _53582 t s d) = (term956 A B _53582 t s d)) = ((term944 A B _53582 t s d) = (term974 A B _53582 t s d)).
Proof. exact (MK_COMB (@lem4516617 A B _53582 t s d) (@lem4516628 A B _53582 t s d)). Qed.
Lemma lem4516630 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term944 A B _53582 t s d) = (term974 A B _53582 t s d).
Proof. exact (EQ_MP (@lem4516629 A B _53582 t s d) (@lem4516607 A B _53582 t s d)). Qed.
Lemma lem4516751 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term945 A B _53582 t s) = (term975 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516630 A B _53582 t s d)). Qed.
Lemma lem4516752 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516753 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _53582 t s) = (term976 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516752 B) (@lem4516751 A B _53582 t s)). Qed.
Lemma lem4516755 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4516756 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term951 B P Q) = (term952 B P Q).
Proof. exact (@lem4516755 B P Q). Qed.
Lemma lem4516757 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _53582 t s) = (term978 A B _53582 t s).
Proof. exact (@lem4516756 B (term979 A B _53582 t s) (term980 A B _53582 t s)). Qed.
Lemma lem4516758 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _53582 t s d) = (term968 A B _53582 t s d).
Proof. exact (eq_refl (term981 A B _53582 t s d)). Qed.
Lemma lem4516759 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516760 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term982 A B _53582 t s d) = (term970 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516759) (@lem4516758 A B _53582 t s d)). Qed.
Lemma lem4516761 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _53582 t s d) = (term973 A B _53582 t s d).
Proof. exact (eq_refl (term983 A B _53582 t s d)). Qed.
Lemma lem4516762 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term984 A B _53582 t s d) = (term974 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4516760 A B _53582 t s d) (@lem4516761 A B _53582 t s d)). Qed.
Lemma lem4516763 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term985 A B _53582 t s) = (term975 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516762 A B _53582 t s d)). Qed.
Lemma lem4516764 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516765 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term977 A B _53582 t s) = (term976 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516764 B) (@lem4516763 A B _53582 t s)). Qed.
Lemma lem4516766 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4516767 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term986 A B _53582 t s) = (term987 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516766) (@lem4516765 A B _53582 t s)). Qed.
Lemma lem4516768 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term981 A B _53582 t s d) = (term968 A B _53582 t s d).
Proof. exact (eq_refl (term981 A B _53582 t s d)). Qed.
Lemma lem4516769 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term988 A B _53582 t s) = (term979 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516768 A B _53582 t s d)). Qed.
Lemma lem4516770 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516771 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term989 A B _53582 t s) = (term990 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516770 B) (@lem4516769 A B _53582 t s)). Qed.
Lemma lem4516772 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516773 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term991 A B _53582 t s) = (term992 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516772) (@lem4516771 A B _53582 t s)). Qed.
Lemma lem4516774 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term983 A B _53582 t s d) = (term973 A B _53582 t s d).
Proof. exact (eq_refl (term983 A B _53582 t s d)). Qed.
Lemma lem4516775 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term993 A B _53582 t s) = (term980 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4516774 A B _53582 t s d)). Qed.
Lemma lem4516776 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4516777 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term994 A B _53582 t s) = (term995 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516776 B) (@lem4516775 A B _53582 t s)). Qed.
Lemma lem4516778 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term978 A B _53582 t s) = (term996 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516773 A B _53582 t s) (@lem4516777 A B _53582 t s)). Qed.
Lemma lem4516779 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term977 A B _53582 t s) = (term978 A B _53582 t s)) = ((term976 A B _53582 t s) = (term996 A B _53582 t s)).
Proof. exact (MK_COMB (@lem4516767 A B _53582 t s) (@lem4516778 A B _53582 t s)). Qed.
Lemma lem4516780 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term976 A B _53582 t s) = (term996 A B _53582 t s).
Proof. exact (EQ_MP (@lem4516779 A B _53582 t s) (@lem4516757 A B _53582 t s)). Qed.
Lemma lem4516909 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term946 A B _53582 t s) = (term996 A B _53582 t s).
Proof. exact (TRANS (@lem4516753 A B _53582 t s) (@lem4516780 A B _53582 t s)). Qed.
Lemma lem4516910 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term947 A B _53582 t) = (term997 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516909 A B _53582 t s)). Qed.
Lemma lem4516911 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516912 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term948 A B _53582 t) = (term998 A B _53582 t).
Proof. exact (MK_COMB (@lem4516911 A) (@lem4516910 A B _53582 t)). Qed.
Lemma lem4516914 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4516915 {A : Type'} (P : type686 A) (Q : type686 A) : (term999 A P Q) = (term1000 A P Q).
Proof. exact (@lem4516914 (A -> Prop) P Q). Qed.
Lemma lem4516916 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1001 A B _53582 t) = (term1002 A B _53582 t).
Proof. exact (@lem4516915 A (term1003 A B _53582 t) (term1004 A B _53582 t)). Qed.
Lemma lem4516917 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _53582 t s) = (term990 A B _53582 t s).
Proof. exact (eq_refl (term1005 A B _53582 t s)). Qed.
Lemma lem4516918 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516919 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1006 A B _53582 t s) = (term992 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516918) (@lem4516917 A B _53582 t s)). Qed.
Lemma lem4516920 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _53582 t s) = (term995 A B _53582 t s).
Proof. exact (eq_refl (term1007 A B _53582 t s)). Qed.
Lemma lem4516921 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1008 A B _53582 t s) = (term996 A B _53582 t s).
Proof. exact (MK_COMB (@lem4516919 A B _53582 t s) (@lem4516920 A B _53582 t s)). Qed.
Lemma lem4516922 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1009 A B _53582 t) = (term997 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516921 A B _53582 t s)). Qed.
Lemma lem4516923 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516924 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1001 A B _53582 t) = (term998 A B _53582 t).
Proof. exact (MK_COMB (@lem4516923 A) (@lem4516922 A B _53582 t)). Qed.
Lemma lem4516925 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4516926 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1010 A B _53582 t) = (term1011 A B _53582 t).
Proof. exact (MK_COMB (@lem4516925) (@lem4516924 A B _53582 t)). Qed.
Lemma lem4516927 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1005 A B _53582 t s) = (term990 A B _53582 t s).
Proof. exact (eq_refl (term1005 A B _53582 t s)). Qed.
Lemma lem4516928 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1012 A B _53582 t) = (term1003 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516927 A B _53582 t s)). Qed.
Lemma lem4516929 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516930 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1013 A B _53582 t) = (term1014 A B _53582 t).
Proof. exact (MK_COMB (@lem4516929 A) (@lem4516928 A B _53582 t)). Qed.
Lemma lem4516931 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4516932 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1015 A B _53582 t) = (term1016 A B _53582 t).
Proof. exact (MK_COMB (@lem4516931) (@lem4516930 A B _53582 t)). Qed.
Lemma lem4516933 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1007 A B _53582 t s) = (term995 A B _53582 t s).
Proof. exact (eq_refl (term1007 A B _53582 t s)). Qed.
Lemma lem4516934 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1017 A B _53582 t) = (term1004 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4516933 A B _53582 t s)). Qed.
Lemma lem4516935 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4516936 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1018 A B _53582 t) = (term1019 A B _53582 t).
Proof. exact (MK_COMB (@lem4516935 A) (@lem4516934 A B _53582 t)). Qed.
Lemma lem4516937 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1002 A B _53582 t) = (term1020 A B _53582 t).
Proof. exact (MK_COMB (@lem4516932 A B _53582 t) (@lem4516936 A B _53582 t)). Qed.
Lemma lem4516938 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((term1001 A B _53582 t) = (term1002 A B _53582 t)) = ((term998 A B _53582 t) = (term1020 A B _53582 t)).
Proof. exact (MK_COMB (@lem4516926 A B _53582 t) (@lem4516937 A B _53582 t)). Qed.
Lemma lem4516939 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term998 A B _53582 t) = (term1020 A B _53582 t).
Proof. exact (EQ_MP (@lem4516938 A B _53582 t) (@lem4516916 A B _53582 t)). Qed.
Lemma lem4517076 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term948 A B _53582 t) = (term1020 A B _53582 t).
Proof. exact (TRANS (@lem4516912 A B _53582 t) (@lem4516939 A B _53582 t)). Qed.
Lemma lem4517077 {A B : Type'} (_53582 : type839 A B) : (term949 A B _53582) = (term1021 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517076 A B _53582 t)). Qed.
Lemma lem4517078 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517079 {A B : Type'} (_53582 : type839 A B) : (term950 A B _53582) = (term1022 A B _53582).
Proof. exact (MK_COMB (@lem4517078 B) (@lem4517077 A B _53582)). Qed.
Lemma lem4517081 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term951 A P Q) = (term952 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4517082 {B : Type'} (P : type686 B) (Q : type686 B) : (term999 B P Q) = (term1000 B P Q).
Proof. exact (@lem4517081 (B -> Prop) P Q). Qed.
Lemma lem4517083 {A B : Type'} (_53582 : type839 A B) : (term1023 A B _53582) = (term1024 A B _53582).
Proof. exact (@lem4517082 B (term1025 A B _53582) (term1026 A B _53582)). Qed.
Lemma lem4517084 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1027 A B _53582 t) = (term1014 A B _53582 t).
Proof. exact (eq_refl (term1027 A B _53582 t)). Qed.
Lemma lem4517085 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517086 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1028 A B _53582 t) = (term1016 A B _53582 t).
Proof. exact (MK_COMB (@lem4517085) (@lem4517084 A B _53582 t)). Qed.
Lemma lem4517087 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1029 A B _53582 t) = (term1019 A B _53582 t).
Proof. exact (eq_refl (term1029 A B _53582 t)). Qed.
Lemma lem4517088 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1030 A B _53582 t) = (term1020 A B _53582 t).
Proof. exact (MK_COMB (@lem4517086 A B _53582 t) (@lem4517087 A B _53582 t)). Qed.
Lemma lem4517089 {A B : Type'} (_53582 : type839 A B) : (term1031 A B _53582) = (term1021 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517088 A B _53582 t)). Qed.
Lemma lem4517090 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517091 {A B : Type'} (_53582 : type839 A B) : (term1023 A B _53582) = (term1022 A B _53582).
Proof. exact (MK_COMB (@lem4517090 B) (@lem4517089 A B _53582)). Qed.
Lemma lem4517092 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517093 {A B : Type'} (_53582 : type839 A B) : (term1032 A B _53582) = (term1033 A B _53582).
Proof. exact (MK_COMB (@lem4517092) (@lem4517091 A B _53582)). Qed.
Lemma lem4517094 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1027 A B _53582 t) = (term1014 A B _53582 t).
Proof. exact (eq_refl (term1027 A B _53582 t)). Qed.
Lemma lem4517095 {A B : Type'} (_53582 : type839 A B) : (term1034 A B _53582) = (term1025 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517094 A B _53582 t)). Qed.
Lemma lem4517096 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517097 {A B : Type'} (_53582 : type839 A B) : (term1035 A B _53582) = (term1036 A B _53582).
Proof. exact (MK_COMB (@lem4517096 B) (@lem4517095 A B _53582)). Qed.
Lemma lem4517098 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517099 {A B : Type'} (_53582 : type839 A B) : (term1037 A B _53582) = (term1038 A B _53582).
Proof. exact (MK_COMB (@lem4517098) (@lem4517097 A B _53582)). Qed.
Lemma lem4517100 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1029 A B _53582 t) = (term1019 A B _53582 t).
Proof. exact (eq_refl (term1029 A B _53582 t)). Qed.
Lemma lem4517101 {A B : Type'} (_53582 : type839 A B) : (term1039 A B _53582) = (term1026 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517100 A B _53582 t)). Qed.
Lemma lem4517102 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517103 {A B : Type'} (_53582 : type839 A B) : (term1040 A B _53582) = (term1041 A B _53582).
Proof. exact (MK_COMB (@lem4517102 B) (@lem4517101 A B _53582)). Qed.
Lemma lem4517104 {A B : Type'} (_53582 : type839 A B) : (term1024 A B _53582) = (term1042 A B _53582).
Proof. exact (MK_COMB (@lem4517099 A B _53582) (@lem4517103 A B _53582)). Qed.
Lemma lem4517105 {A B : Type'} (_53582 : type839 A B) : ((term1023 A B _53582) = (term1024 A B _53582)) = ((term1022 A B _53582) = (term1042 A B _53582)).
Proof. exact (MK_COMB (@lem4517093 A B _53582) (@lem4517104 A B _53582)). Qed.
Lemma lem4517106 {A B : Type'} (_53582 : type839 A B) : (term1022 A B _53582) = (term1042 A B _53582).
Proof. exact (EQ_MP (@lem4517105 A B _53582) (@lem4517083 A B _53582)). Qed.
Lemma lem4517251 {A B : Type'} (_53582 : type839 A B) : (term950 A B _53582) = (term1042 A B _53582).
Proof. exact (TRANS (@lem4517079 A B _53582) (@lem4517106 A B _53582)). Qed.
Lemma lem4517253 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1043 A P Q) = (term1044 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4517254 {A B : Type'} (P : Prop) (Q : type572 A B) : (term1045 A B P Q) = (term1046 A B P Q).
Proof. exact (@lem4517253 (A -> B) P Q). Qed.
Lemma lem4517255 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _53582 GEN_PVAR_148 t s d) = (term1048 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (@lem4517254 A B (term1049 A B _53582 t s d GEN_PVAR_148) (term192 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4517256 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517257 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1050 A B GEN_PVAR_148 t s d) = (term192 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4517256 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517258 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4517259 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1051 A B GEN_PVAR_148 t s d) = (term194 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4517258 A B) (@lem4517257 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4517260 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53582 t s d GEN_PVAR_148) = (term934 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4517261 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1047 A B _53582 GEN_PVAR_148 t s d) = (term935 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4517260 A B _53582 t s d GEN_PVAR_148) (@lem4517259 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4517262 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517263 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1052 A B _53582 GEN_PVAR_148 t s d) = (term1053 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4517262) (@lem4517261 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517264 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term928 A B GEN_PVAR_148 t s d f) = (term190 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term928 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517265 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term934 A B _53582 t s d GEN_PVAR_148) = (term934 A B _53582 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term934 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4517266 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1054 A B _53582 GEN_PVAR_148 t s d f) = (term1055 A B _53582 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4517265 A B _53582 t s d GEN_PVAR_148) (@lem4517264 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517267 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1056 A B _53582 GEN_PVAR_148 t s d) = (term1057 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4517266 A B _53582 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517268 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4517269 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1048 A B _53582 GEN_PVAR_148 t s d) = (term1058 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4517268 A B) (@lem4517267 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517270 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1047 A B _53582 GEN_PVAR_148 t s d) = (term1048 A B _53582 GEN_PVAR_148 t s d)) = ((term935 A B _53582 GEN_PVAR_148 t s d) = (term1058 A B _53582 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4517263 A B _53582 GEN_PVAR_148 t s d) (@lem4517269 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517271 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term935 A B _53582 GEN_PVAR_148 t s d) = (term1058 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4517270 A B _53582 GEN_PVAR_148 t s d) (@lem4517255 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517272 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term958 A B _53582 t s d) = (term1059 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4517271 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517273 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4517274 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _53582 t s d) = (term1060 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4517273 A B) (@lem4517272 A B _53582 t s d)). Qed.
Lemma lem4517276 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4517277 {A B : Type'} (P : type523 A B) : (term1063 A B P) = (term1064 A B P).
Proof. exact (@lem4517276 (A -> B) (A -> B) P). Qed.
Lemma lem4517278 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _53582 t s d) = (term1066 A B _53582 t s d).
Proof. exact (@lem4517277 A B (term1067 A B _53582 t s d)). Qed.
Lemma lem4517279 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _53582 t s d GEN_PVAR_148) = (term1057 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4517280 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4517281 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _53582 t s d GEN_PVAR_148 f) = (term1070 A B _53582 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4517279 A B _53582 GEN_PVAR_148 t s d) (@lem4517280 A B f)). Qed.
Lemma lem4517282 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1070 A B _53582 GEN_PVAR_148 t s d f) = (term1055 A B _53582 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1070 A B _53582 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517283 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1069 A B _53582 t s d GEN_PVAR_148 f) = (term1055 A B _53582 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4517281 A B _53582 GEN_PVAR_148 t s d f) (@lem4517282 A B _53582 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517284 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1071 A B _53582 t s d GEN_PVAR_148) = (term1057 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4517283 A B _53582 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4517285 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4517286 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1072 A B _53582 t s d GEN_PVAR_148) = (term1058 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4517285 A B) (@lem4517284 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517287 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1073 A B _53582 t s d) = (term1059 A B _53582 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4517286 A B _53582 GEN_PVAR_148 t s d)). Qed.
Lemma lem4517288 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4517289 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _53582 t s d) = (term1060 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4517288 A B) (@lem4517287 A B _53582 t s d)). Qed.
Lemma lem4517290 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517291 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1074 A B _53582 t s d) = (term1075 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4517290) (@lem4517289 A B _53582 t s d)). Qed.
Lemma lem4517292 {A B : Type'} (_53582 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1068 A B _53582 t s d GEN_PVAR_148) = (term1057 A B _53582 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1068 A B _53582 t s d GEN_PVAR_148)). Qed.
Lemma lem4517293 {A B : Type'} (f : type549 A B) (GEN_PVAR_148 : A -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4517294 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _53582 t s d f GEN_PVAR_148) = (term1077 A B _53582 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4517292 A B _53582 GEN_PVAR_148 t s d) (@lem4517293 A B f GEN_PVAR_148)). Qed.
Lemma lem4517295 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1077 A B _53582 t s d f GEN_PVAR_148) = (term1078 A B _53582 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1077 A B _53582 t s d f GEN_PVAR_148)). Qed.
Lemma lem4517296 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1076 A B _53582 t s d f GEN_PVAR_148) = (term1078 A B _53582 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4517294 A B _53582 t s d f GEN_PVAR_148) (@lem4517295 A B _53582 t s d f GEN_PVAR_148)). Qed.
Lemma lem4517297 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1079 A B _53582 t s d f) = (term1080 A B _53582 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4517296 A B _53582 t s d f GEN_PVAR_148)). Qed.
Lemma lem4517298 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4517299 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1081 A B _53582 t s d f) = (term1082 A B _53582 t s d f).
Proof. exact (MK_COMB (@lem4517298 A B) (@lem4517297 A B _53582 t s d f)). Qed.
Lemma lem4517300 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1083 A B _53582 t s d) = (term1084 A B _53582 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4517299 A B _53582 t s d f)). Qed.
Lemma lem4517301 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4517302 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1066 A B _53582 t s d) = (term1085 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4517301 A B) (@lem4517300 A B _53582 t s d)). Qed.
Lemma lem4517303 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1065 A B _53582 t s d) = (term1066 A B _53582 t s d)) = ((term1060 A B _53582 t s d) = (term1085 A B _53582 t s d)).
Proof. exact (MK_COMB (@lem4517291 A B _53582 t s d) (@lem4517302 A B _53582 t s d)). Qed.
Lemma lem4517304 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1060 A B _53582 t s d) = (term1085 A B _53582 t s d).
Proof. exact (EQ_MP (@lem4517303 A B _53582 t s d) (@lem4517278 A B _53582 t s d)). Qed.
Lemma lem4517305 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term973 A B _53582 t s d) = (term1085 A B _53582 t s d).
Proof. exact (TRANS (@lem4517274 A B _53582 t s d) (@lem4517304 A B _53582 t s d)). Qed.
Lemma lem4517306 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term980 A B _53582 t s) = (term1086 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4517305 A B _53582 t s d)). Qed.
Lemma lem4517307 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4517308 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _53582 t s) = (term1087 A B _53582 t s).
Proof. exact (MK_COMB (@lem4517307 B) (@lem4517306 A B _53582 t s)). Qed.
Lemma lem4517310 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4517311 {A B : Type'} (P : type1435 A B) : (term1088 A B P) = (term1089 A B P).
Proof. exact (@lem4517310 B (type549 A B) P). Qed.
Lemma lem4517312 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _53582 t s) = (term1091 A B _53582 t s).
Proof. exact (@lem4517311 A B (term1092 A B _53582 t s)). Qed.
Lemma lem4517313 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _53582 t s d) = (term1084 A B _53582 t s d).
Proof. exact (eq_refl (term1093 A B _53582 t s d)). Qed.
Lemma lem4517314 {A B : Type'} (f : type549 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4517315 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _53582 t s d f) = (term1095 A B _53582 t s d f).
Proof. exact (MK_COMB (@lem4517313 A B _53582 t s d) (@lem4517314 A B f)). Qed.
Lemma lem4517316 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1095 A B _53582 t s d f) = (term1082 A B _53582 t s d f).
Proof. exact (eq_refl (term1095 A B _53582 t s d f)). Qed.
Lemma lem4517317 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1094 A B _53582 t s d f) = (term1082 A B _53582 t s d f).
Proof. exact (TRANS (@lem4517315 A B _53582 t s d f) (@lem4517316 A B _53582 t s d f)). Qed.
Lemma lem4517318 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1096 A B _53582 t s d) = (term1084 A B _53582 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4517317 A B _53582 t s d f)). Qed.
Lemma lem4517319 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4517320 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1097 A B _53582 t s d) = (term1085 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4517319 A B) (@lem4517318 A B _53582 t s d)). Qed.
Lemma lem4517321 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1098 A B _53582 t s) = (term1086 A B _53582 t s).
Proof. exact (fun_ext (fun d : B => @lem4517320 A B _53582 t s d)). Qed.
Lemma lem4517322 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4517323 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1090 A B _53582 t s) = (term1087 A B _53582 t s).
Proof. exact (MK_COMB (@lem4517322 B) (@lem4517321 A B _53582 t s)). Qed.
Lemma lem4517324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517325 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1099 A B _53582 t s) = (term1100 A B _53582 t s).
Proof. exact (MK_COMB (@lem4517324) (@lem4517323 A B _53582 t s)). Qed.
Lemma lem4517326 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1093 A B _53582 t s d) = (term1084 A B _53582 t s d).
Proof. exact (eq_refl (term1093 A B _53582 t s d)). Qed.
Lemma lem4517327 {A B : Type'} (f : type1444 A B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4517328 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _53582 t s f d) = (term1102 A B _53582 t s f d).
Proof. exact (MK_COMB (@lem4517326 A B _53582 t s d) (@lem4517327 A B f d)). Qed.
Lemma lem4517329 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1102 A B _53582 t s f d) = (term1103 A B _53582 t s f d).
Proof. exact (eq_refl (term1102 A B _53582 t s f d)). Qed.
Lemma lem4517330 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1101 A B _53582 t s f d) = (term1103 A B _53582 t s f d).
Proof. exact (TRANS (@lem4517328 A B _53582 t s f d) (@lem4517329 A B _53582 t s f d)). Qed.
Lemma lem4517331 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1104 A B _53582 t s f) = (term1105 A B _53582 t s f).
Proof. exact (fun_ext (fun d : B => @lem4517330 A B _53582 t s f d)). Qed.
Lemma lem4517332 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4517333 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1106 A B _53582 t s f) = (term1107 A B _53582 t s f).
Proof. exact (MK_COMB (@lem4517332 B) (@lem4517331 A B _53582 t s f)). Qed.
Lemma lem4517334 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1108 A B _53582 t s) = (term1109 A B _53582 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4517333 A B _53582 t s f)). Qed.
Lemma lem4517335 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517336 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1091 A B _53582 t s) = (term1110 A B _53582 t s).
Proof. exact (MK_COMB (@lem4517335 A B) (@lem4517334 A B _53582 t s)). Qed.
Lemma lem4517337 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term1090 A B _53582 t s) = (term1091 A B _53582 t s)) = ((term1087 A B _53582 t s) = (term1110 A B _53582 t s)).
Proof. exact (MK_COMB (@lem4517325 A B _53582 t s) (@lem4517336 A B _53582 t s)). Qed.
Lemma lem4517338 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1087 A B _53582 t s) = (term1110 A B _53582 t s).
Proof. exact (EQ_MP (@lem4517337 A B _53582 t s) (@lem4517312 A B _53582 t s)). Qed.
Lemma lem4517339 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term995 A B _53582 t s) = (term1110 A B _53582 t s).
Proof. exact (TRANS (@lem4517308 A B _53582 t s) (@lem4517338 A B _53582 t s)). Qed.
Lemma lem4517340 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1004 A B _53582 t) = (term1111 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4517339 A B _53582 t s)). Qed.
Lemma lem4517341 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4517342 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1019 A B _53582 t) = (term1112 A B _53582 t).
Proof. exact (MK_COMB (@lem4517341 A) (@lem4517340 A B _53582 t)). Qed.
Lemma lem4517344 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4517345 {A B : Type'} (P : type647 A B) : (term1113 A B P) = (term1114 A B P).
Proof. exact (@lem4517344 (A -> Prop) (type1444 A B) P). Qed.
Lemma lem4517346 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1115 A B _53582 t) = (term1116 A B _53582 t).
Proof. exact (@lem4517345 A B (term1117 A B _53582 t)). Qed.
Lemma lem4517347 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _53582 t s) = (term1109 A B _53582 t s).
Proof. exact (eq_refl (term1118 A B _53582 t s)). Qed.
Lemma lem4517348 {A B : Type'} (f : type1444 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4517349 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _53582 t s f) = (term1120 A B _53582 t s f).
Proof. exact (MK_COMB (@lem4517347 A B _53582 t s) (@lem4517348 A B f)). Qed.
Lemma lem4517350 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1120 A B _53582 t s f) = (term1107 A B _53582 t s f).
Proof. exact (eq_refl (term1120 A B _53582 t s f)). Qed.
Lemma lem4517351 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1119 A B _53582 t s f) = (term1107 A B _53582 t s f).
Proof. exact (TRANS (@lem4517349 A B _53582 t s f) (@lem4517350 A B _53582 t s f)). Qed.
Lemma lem4517352 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1121 A B _53582 t s) = (term1109 A B _53582 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4517351 A B _53582 t s f)). Qed.
Lemma lem4517353 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517354 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1122 A B _53582 t s) = (term1110 A B _53582 t s).
Proof. exact (MK_COMB (@lem4517353 A B) (@lem4517352 A B _53582 t s)). Qed.
Lemma lem4517355 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1123 A B _53582 t) = (term1111 A B _53582 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4517354 A B _53582 t s)). Qed.
Lemma lem4517356 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4517357 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1115 A B _53582 t) = (term1112 A B _53582 t).
Proof. exact (MK_COMB (@lem4517356 A) (@lem4517355 A B _53582 t)). Qed.
Lemma lem4517358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517359 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1124 A B _53582 t) = (term1125 A B _53582 t).
Proof. exact (MK_COMB (@lem4517358) (@lem4517357 A B _53582 t)). Qed.
Lemma lem4517360 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1118 A B _53582 t s) = (term1109 A B _53582 t s).
Proof. exact (eq_refl (term1118 A B _53582 t s)). Qed.
Lemma lem4517361 {A B : Type'} (f : type673 A B) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4517362 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _53582 t f s) = (term1127 A B _53582 t f s).
Proof. exact (MK_COMB (@lem4517360 A B _53582 t s) (@lem4517361 A B f s)). Qed.
Lemma lem4517363 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1127 A B _53582 t f s) = (term1128 A B _53582 t f s).
Proof. exact (eq_refl (term1127 A B _53582 t f s)). Qed.
Lemma lem4517364 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1126 A B _53582 t f s) = (term1128 A B _53582 t f s).
Proof. exact (TRANS (@lem4517362 A B _53582 t f s) (@lem4517363 A B _53582 t f s)). Qed.
Lemma lem4517365 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1129 A B _53582 t f) = (term1130 A B _53582 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4517364 A B _53582 t f s)). Qed.
Lemma lem4517366 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4517367 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1131 A B _53582 t f) = (term1132 A B _53582 t f).
Proof. exact (MK_COMB (@lem4517366 A) (@lem4517365 A B _53582 t f)). Qed.
Lemma lem4517368 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1133 A B _53582 t) = (term1134 A B _53582 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4517367 A B _53582 t f)). Qed.
Lemma lem4517369 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517370 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1116 A B _53582 t) = (term1135 A B _53582 t).
Proof. exact (MK_COMB (@lem4517369 A B) (@lem4517368 A B _53582 t)). Qed.
Lemma lem4517371 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : ((term1115 A B _53582 t) = (term1116 A B _53582 t)) = ((term1112 A B _53582 t) = (term1135 A B _53582 t)).
Proof. exact (MK_COMB (@lem4517359 A B _53582 t) (@lem4517370 A B _53582 t)). Qed.
Lemma lem4517372 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1112 A B _53582 t) = (term1135 A B _53582 t).
Proof. exact (EQ_MP (@lem4517371 A B _53582 t) (@lem4517346 A B _53582 t)). Qed.
Lemma lem4517373 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1019 A B _53582 t) = (term1135 A B _53582 t).
Proof. exact (TRANS (@lem4517342 A B _53582 t) (@lem4517372 A B _53582 t)). Qed.
Lemma lem4517374 {A B : Type'} (_53582 : type839 A B) : (term1026 A B _53582) = (term1136 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517373 A B _53582 t)). Qed.
Lemma lem4517375 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517376 {A B : Type'} (_53582 : type839 A B) : (term1041 A B _53582) = (term1137 A B _53582).
Proof. exact (MK_COMB (@lem4517375 B) (@lem4517374 A B _53582)). Qed.
Lemma lem4517378 {A B : Type'} (P : type1413 A B) : (term1061 A B P) = (term1062 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4517379 {A B : Type'} (P : type820 A B) : (term1138 A B P) = (term1139 A B P).
Proof. exact (@lem4517378 (B -> Prop) (type673 A B) P). Qed.
Lemma lem4517380 {A B : Type'} (_53582 : type839 A B) : (term1140 A B _53582) = (term1141 A B _53582).
Proof. exact (@lem4517379 A B (term1142 A B _53582)). Qed.
Lemma lem4517381 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1143 A B _53582 t) = (term1134 A B _53582 t).
Proof. exact (eq_refl (term1143 A B _53582 t)). Qed.
Lemma lem4517382 {A B : Type'} (f : type673 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4517383 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _53582 t f) = (term1145 A B _53582 t f).
Proof. exact (MK_COMB (@lem4517381 A B _53582 t) (@lem4517382 A B f)). Qed.
Lemma lem4517384 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1145 A B _53582 t f) = (term1132 A B _53582 t f).
Proof. exact (eq_refl (term1145 A B _53582 t f)). Qed.
Lemma lem4517385 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1144 A B _53582 t f) = (term1132 A B _53582 t f).
Proof. exact (TRANS (@lem4517383 A B _53582 t f) (@lem4517384 A B _53582 t f)). Qed.
Lemma lem4517386 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1146 A B _53582 t) = (term1134 A B _53582 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4517385 A B _53582 t f)). Qed.
Lemma lem4517387 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517388 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1147 A B _53582 t) = (term1135 A B _53582 t).
Proof. exact (MK_COMB (@lem4517387 A B) (@lem4517386 A B _53582 t)). Qed.
Lemma lem4517389 {A B : Type'} (_53582 : type839 A B) : (term1148 A B _53582) = (term1136 A B _53582).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517388 A B _53582 t)). Qed.
Lemma lem4517390 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517391 {A B : Type'} (_53582 : type839 A B) : (term1140 A B _53582) = (term1137 A B _53582).
Proof. exact (MK_COMB (@lem4517390 B) (@lem4517389 A B _53582)). Qed.
Lemma lem4517392 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517393 {A B : Type'} (_53582 : type839 A B) : (term1149 A B _53582) = (term1150 A B _53582).
Proof. exact (MK_COMB (@lem4517392) (@lem4517391 A B _53582)). Qed.
Lemma lem4517394 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (term1143 A B _53582 t) = (term1134 A B _53582 t).
Proof. exact (eq_refl (term1143 A B _53582 t)). Qed.
Lemma lem4517395 {A B : Type'} (f : type838 A B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4517396 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _53582 f t) = (term1152 A B _53582 f t).
Proof. exact (MK_COMB (@lem4517394 A B _53582 t) (@lem4517395 A B f t)). Qed.
Lemma lem4517397 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1152 A B _53582 f t) = (term1153 A B _53582 f t).
Proof. exact (eq_refl (term1152 A B _53582 f t)). Qed.
Lemma lem4517398 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1151 A B _53582 f t) = (term1153 A B _53582 f t).
Proof. exact (TRANS (@lem4517396 A B _53582 f t) (@lem4517397 A B _53582 f t)). Qed.
Lemma lem4517399 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) : (term1154 A B _53582 f) = (term1155 A B _53582 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517398 A B _53582 f t)). Qed.
Lemma lem4517400 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4517401 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) : (term1156 A B _53582 f) = (term1157 A B _53582 f).
Proof. exact (MK_COMB (@lem4517400 B) (@lem4517399 A B _53582 f)). Qed.
Lemma lem4517402 {A B : Type'} (_53582 : type839 A B) : (term1158 A B _53582) = (term1159 A B _53582).
Proof. exact (fun_ext (fun f : type838 A B => @lem4517401 A B _53582 f)). Qed.
Lemma lem4517403 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517404 {A B : Type'} (_53582 : type839 A B) : (term1141 A B _53582) = (term1160 A B _53582).
Proof. exact (MK_COMB (@lem4517403 A B) (@lem4517402 A B _53582)). Qed.
Lemma lem4517405 {A B : Type'} (_53582 : type839 A B) : ((term1140 A B _53582) = (term1141 A B _53582)) = ((term1137 A B _53582) = (term1160 A B _53582)).
Proof. exact (MK_COMB (@lem4517393 A B _53582) (@lem4517404 A B _53582)). Qed.
Lemma lem4517406 {A B : Type'} (_53582 : type839 A B) : (term1137 A B _53582) = (term1160 A B _53582).
Proof. exact (EQ_MP (@lem4517405 A B _53582) (@lem4517380 A B _53582)). Qed.
Lemma lem4517407 {A B : Type'} (_53582 : type839 A B) : (term1041 A B _53582) = (term1160 A B _53582).
Proof. exact (TRANS (@lem4517376 A B _53582) (@lem4517406 A B _53582)). Qed.
Lemma lem4517408 {A B : Type'} (_53582 : type839 A B) : (term1038 A B _53582) = (term1038 A B _53582).
Proof. exact (eq_refl (term1038 A B _53582)). Qed.
Lemma lem4517409 {A B : Type'} (_53582 : type839 A B) : (term1042 A B _53582) = (term1161 A B _53582).
Proof. exact (MK_COMB (@lem4517408 A B _53582) (@lem4517407 A B _53582)). Qed.
Lemma lem4517411 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4517412 {A B : Type'} (P : Prop) (Q : type213 A B) : (term1164 A B P Q) = (term1165 A B P Q).
Proof. exact (@lem4517411 (type838 A B) P Q). Qed.
Lemma lem4517413 {A B : Type'} (_53582 : type839 A B) : (term1166 A B _53582) = (term1167 A B _53582).
Proof. exact (@lem4517412 A B (term1036 A B _53582) (term1159 A B _53582)). Qed.
Lemma lem4517414 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) : (term1168 A B _53582 f) = (term1157 A B _53582 f).
Proof. exact (eq_refl (term1168 A B _53582 f)). Qed.
Lemma lem4517415 {A B : Type'} (_53582 : type839 A B) : (term1169 A B _53582) = (term1159 A B _53582).
Proof. exact (fun_ext (fun f : type838 A B => @lem4517414 A B _53582 f)). Qed.
Lemma lem4517416 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517417 {A B : Type'} (_53582 : type839 A B) : (term1170 A B _53582) = (term1160 A B _53582).
Proof. exact (MK_COMB (@lem4517416 A B) (@lem4517415 A B _53582)). Qed.
Lemma lem4517418 {A B : Type'} (_53582 : type839 A B) : (term1038 A B _53582) = (term1038 A B _53582).
Proof. exact (eq_refl (term1038 A B _53582)). Qed.
Lemma lem4517419 {A B : Type'} (_53582 : type839 A B) : (term1166 A B _53582) = (term1161 A B _53582).
Proof. exact (MK_COMB (@lem4517418 A B _53582) (@lem4517417 A B _53582)). Qed.
Lemma lem4517420 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517421 {A B : Type'} (_53582 : type839 A B) : (term1171 A B _53582) = (term1172 A B _53582).
Proof. exact (MK_COMB (@lem4517420) (@lem4517419 A B _53582)). Qed.
Lemma lem4517422 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) : (term1168 A B _53582 f) = (term1157 A B _53582 f).
Proof. exact (eq_refl (term1168 A B _53582 f)). Qed.
Lemma lem4517423 {A B : Type'} (_53582 : type839 A B) : (term1038 A B _53582) = (term1038 A B _53582).
Proof. exact (eq_refl (term1038 A B _53582)). Qed.
Lemma lem4517424 {A B : Type'} (_53582 : type839 A B) (f : type838 A B) : (term1173 A B _53582 f) = (term1174 A B _53582 f).
Proof. exact (MK_COMB (@lem4517423 A B _53582) (@lem4517422 A B _53582 f)). Qed.
Lemma lem4517425 {A B : Type'} (_53582 : type839 A B) : (term1175 A B _53582) = (term1176 A B _53582).
Proof. exact (fun_ext (fun f : type838 A B => @lem4517424 A B _53582 f)). Qed.
Lemma lem4517426 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4517427 {A B : Type'} (_53582 : type839 A B) : (term1167 A B _53582) = (term1177 A B _53582).
Proof. exact (MK_COMB (@lem4517426 A B) (@lem4517425 A B _53582)). Qed.
Lemma lem4517428 {A B : Type'} (_53582 : type839 A B) : ((term1166 A B _53582) = (term1167 A B _53582)) = ((term1161 A B _53582) = (term1177 A B _53582)).
Proof. exact (MK_COMB (@lem4517421 A B _53582) (@lem4517427 A B _53582)). Qed.
Lemma lem4517429 {A B : Type'} (_53582 : type839 A B) : (term1161 A B _53582) = (term1177 A B _53582).
Proof. exact (EQ_MP (@lem4517428 A B _53582) (@lem4517413 A B _53582)). Qed.
Lemma lem4517430 {A B : Type'} (_53582 : type839 A B) : (term1042 A B _53582) = (term1177 A B _53582).
Proof. exact (TRANS (@lem4517409 A B _53582) (@lem4517429 A B _53582)). Qed.
Lemma lem4517431 {A B : Type'} (_53582 : type839 A B) : (term950 A B _53582) = (term1177 A B _53582).
Proof. exact (TRANS (@lem4517251 A B _53582) (@lem4517430 A B _53582)). Qed.
Lemma lem4517432 {A B : Type'} (_53582 : type839 A B) : (term805 A B _53582) = (term1177 A B _53582).
Proof. exact (TRANS (@lem4516591 A B _53582) (@lem4517431 A B _53582)). Qed.
Lemma lem4517433 {A B : Type'} (_53582 : type839 A B) (h1 : term805 A B _53582) : term1177 A B _53582.
Proof. exact (EQ_MP (@lem4517432 A B _53582) (@lem4516546 A B _53582 h1)). Qed.
Lemma lem4517436 {A : Type'} (x : A) (a : A) : (term1193 A x a) = (x = a).
Proof. exact (@lem16933 (x = a)). Qed.
Lemma lem4517449 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2 x t) = (term836 A B s p2 x t).
Proof. exact (@lem17265 (@IN A x s) (term169 A B p2 x t)). Qed.
Lemma lem4517450 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term172 A B s p2 t) = (term837 A B s p2 t).
Proof. exact (fun_ext (fun x : A => @lem4517449 A B s p2 x t)). Qed.
Lemma lem4517451 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4517452 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term174 A B s p2 t) = (term838 A B s p2 t).
Proof. exact (MK_COMB (@lem4517451 A) (@lem4517450 A B s p2 t)). Qed.
Lemma lem4517455 {A : Type'} (x : A) (s : A -> Prop) : (term1192 A x s) = (@IN A x s).
Proof. exact (@lem16933 (@IN A x s)). Qed.
Lemma lem4517456 {A B : Type'} (p2 : A -> B) (x : A) (d : B) : ((p2 x) = d) = ((p2 x) = d).
Proof. exact (eq_refl ((p2 x) = d)). Qed.
Lemma lem4517457 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4517458 {A : Type'} (x : A) (s : A -> Prop) : (term1735 A x s) = (term1736 A x s).
Proof. exact (MK_COMB (@lem4517457) (@lem4517455 A x s)). Qed.
Lemma lem4517459 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term1737 A B s p2 x d) = (term1738 A B s p2 x d).
Proof. exact (MK_COMB (@lem4517458 A x s) (@lem4517456 A B p2 x d)). Qed.
Lemma lem4517460 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term180 A B s p2 x d) = (term1737 A B s p2 x d).
Proof. exact (@lem17265 (term178 A x s) ((p2 x) = d)). Qed.
Lemma lem4517461 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term180 A B s p2 x d) = (term1738 A B s p2 x d).
Proof. exact (TRANS (@lem4517460 A B s p2 x d) (@lem4517459 A B s p2 x d)). Qed.
Lemma lem4517462 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term182 A B s p2 d) = (term1739 A B s p2 d).
Proof. exact (fun_ext (fun x : A => @lem4517461 A B s p2 x d)). Qed.
Lemma lem4517463 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4517464 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term184 A B s p2 d) = (term1740 A B s p2 d).
Proof. exact (MK_COMB (@lem4517463 A) (@lem4517462 A B s p2 d)). Qed.
Lemma lem4517472 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (t : B -> Prop) : (term170 A B s p2' x t) = (term836 A B s p2' x t).
Proof. exact (@lem17265 (@IN A x s) (term169 A B p2' x t)). Qed.
Lemma lem4517473 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term172 A B s p2' t) = (term837 A B s p2' t).
Proof. exact (fun_ext (fun x : A => @lem4517472 A B s p2' x t)). Qed.
Lemma lem4517474 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4517475 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term174 A B s p2' t) = (term838 A B s p2' t).
Proof. exact (MK_COMB (@lem4517474 A) (@lem4517473 A B s p2' t)). Qed.
Lemma lem4517478 {A : Type'} (x : A) (s : A -> Prop) : (term1192 A x s) = (@IN A x s).
Proof. exact (@lem16933 (@IN A x s)). Qed.
Lemma lem4517479 {A B : Type'} (p2' : A -> B) (x : A) (d : B) : ((p2' x) = d) = ((p2' x) = d).
Proof. exact (eq_refl ((p2' x) = d)). Qed.
Lemma lem4517480 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4517481 {A : Type'} (x : A) (s : A -> Prop) : (term1735 A x s) = (term1736 A x s).
Proof. exact (MK_COMB (@lem4517480) (@lem4517478 A x s)). Qed.
Lemma lem4517482 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term1737 A B s p2' x d) = (term1738 A B s p2' x d).
Proof. exact (MK_COMB (@lem4517481 A x s) (@lem4517479 A B p2' x d)). Qed.
Lemma lem4517483 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term180 A B s p2' x d) = (term1737 A B s p2' x d).
Proof. exact (@lem17265 (term178 A x s) ((p2' x) = d)). Qed.
Lemma lem4517484 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term180 A B s p2' x d) = (term1738 A B s p2' x d).
Proof. exact (TRANS (@lem4517483 A B s p2' x d) (@lem4517482 A B s p2' x d)). Qed.
Lemma lem4517485 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term182 A B s p2' d) = (term1739 A B s p2' d).
Proof. exact (fun_ext (fun x : A => @lem4517484 A B s p2' x d)). Qed.
Lemma lem4517486 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4517487 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term184 A B s p2' d) = (term1740 A B s p2' d).
Proof. exact (MK_COMB (@lem4517486 A) (@lem4517485 A B s p2' d)). Qed.
Lemma lem4517494 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2200 A B p1 p1' p2 p2' x) = (term2201 A B p1 p1' p2 p2' x).
Proof. exact (@lem17362 (p1 = p1') ((p2 x) = (p2' x))). Qed.
Lemma lem4517495 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517496 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term2202 A B s p2' d) = (term2203 A B s p2' d).
Proof. exact (MK_COMB (@lem4517495) (@lem4517487 A B s p2' d)). Qed.
Lemma lem4517497 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2204 A B s d p1 p1' p2 p2' x) = (term2205 A B s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517496 A B s p2' d) (@lem4517494 A B p1 p1' p2 p2' x)). Qed.
Lemma lem4517498 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2206 A B s d p1 p1' p2 p2' x) = (term2204 A B s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term184 A B s p2' d) (term2150 A B p1 p1' p2 p2' x)). Qed.
Lemma lem4517499 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2206 A B s d p1 p1' p2 p2' x) = (term2205 A B s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517498 A B s d p1 p1' p2 p2' x) (@lem4517497 A B s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517500 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517501 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term177 A B s p2' t) = (term2207 A B s p2' t).
Proof. exact (MK_COMB (@lem4517500) (@lem4517475 A B s p2' t)). Qed.
Lemma lem4517502 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2208 A B t s d p1 p1' p2 p2' x) = (term2209 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517501 A B s p2' t) (@lem4517499 A B s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517503 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2210 A B t s d p1 p1' p2 p2' x) = (term2208 A B t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term174 A B s p2' t) (term2151 A B s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517504 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2210 A B t s d p1 p1' p2 p2' x) = (term2209 A B t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517503 A B t s d p1 p1' p2 p2' x) (@lem4517502 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517506 {B : Type'} (p1' : B) (t : B -> Prop) : (term512 B p1' t) = (term512 B p1' t).
Proof. exact (eq_refl (term512 B p1' t)). Qed.
Lemma lem4517507 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2211 A B t s d p1 p1' p2 p2' x) = (term2212 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517506 B p1' t) (@lem4517504 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517508 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2213 A B t s d p1 p1' p2 p2' x) = (term2211 A B t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (@IN B p1' t) (term2152 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517509 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2213 A B t s d p1 p1' p2 p2' x) = (term2212 A B t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517508 A B t s d p1 p1' p2 p2' x) (@lem4517507 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517510 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517511 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term2202 A B s p2 d) = (term2203 A B s p2 d).
Proof. exact (MK_COMB (@lem4517510) (@lem4517464 A B s p2 d)). Qed.
Lemma lem4517512 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2214 A B t s d p1 p1' p2 p2' x) = (term2215 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517511 A B s p2 d) (@lem4517509 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517513 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2216 A B t s d p1 p1' p2 p2' x) = (term2214 A B t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term184 A B s p2 d) (term2153 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517514 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2216 A B t s d p1 p1' p2 p2' x) = (term2215 A B t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517513 A B t s d p1 p1' p2 p2' x) (@lem4517512 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517515 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517516 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term177 A B s p2 t) = (term2207 A B s p2 t).
Proof. exact (MK_COMB (@lem4517515) (@lem4517452 A B s p2 t)). Qed.
Lemma lem4517517 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2217 A B t s d p1 p1' p2 p2' x) = (term2218 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517516 A B s p2 t) (@lem4517514 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517518 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2219 A B t s d p1 p1' p2 p2' x) = (term2217 A B t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term174 A B s p2 t) (term2154 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517519 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2219 A B t s d p1 p1' p2 p2' x) = (term2218 A B t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517518 A B t s d p1 p1' p2 p2' x) (@lem4517517 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517521 {B : Type'} (p1 : B) (t : B -> Prop) : (term512 B p1 t) = (term512 B p1 t).
Proof. exact (eq_refl (term512 B p1 t)). Qed.
Lemma lem4517522 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2220 A B t s d p1 p1' p2 p2' x) = (term2221 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517521 B p1 t) (@lem4517519 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517523 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2222 A B t s d p1 p1' p2 p2' x) = (term2220 A B t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (@IN B p1 t) (term2155 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517524 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2222 A B t s d p1 p1' p2 p2' x) = (term2221 A B t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517523 A B t s d p1 p1' p2 p2' x) (@lem4517522 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517526 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2223 A B _53582 t s d n m) = (term2223 A B _53582 t s d n m).
Proof. exact (eq_refl (term2223 A B _53582 t s d n m)). Qed.
Lemma lem4517527 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2224 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2225 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517526 A B _53582 t s d n m) (@lem4517524 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517528 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2226 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2224 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term715 A B _53582 t s d n m) (term2156 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517529 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2226 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2225 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517528 A B _53582 n m t s d p1 p1' p2 p2' x) (@lem4517527 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517531 {B : Type'} (t : B -> Prop) (n : nat) : (term346 B t n) = (term346 B t n).
Proof. exact (eq_refl (term346 B t n)). Qed.
Lemma lem4517532 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2227 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517531 B t n) (@lem4517529 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517533 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2229 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2227 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (@HAS_SIZE B t n) (term2157 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517534 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2229 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517533 A B _53582 n m t s d p1 p1' p2 p2' x) (@lem4517532 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517536 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2230 A s0 a s) = (term2230 A s0 a s).
Proof. exact (eq_refl (term2230 A s0 a s)). Qed.
Lemma lem4517537 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2231 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517536 A s0 a s) (@lem4517534 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517538 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2233 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2231 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (s0 = (@INSERT A a s)) (term2158 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517539 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2233 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517538 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517537 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517541 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517542 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2234 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517541 A a s) (@lem4517539 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517543 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2236 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2234 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (term178 A a s) (term2159 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517544 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2236 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517543 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517542 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517546 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517547 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2237 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517546 A s m) (@lem4517544 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517548 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2239 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2237 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem17362 (@HAS_SIZE A s m) (term2160 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517549 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2239 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517548 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517547 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517550 {A : Type'} (P : type686 A) : (term2240 A P) = (term2241 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem4517551 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2242 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2243 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517550 A (term2162 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517552 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2244 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2161 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2244 A B a _53582 n m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4517553 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517554 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2245 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2239 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517553) (@lem4517552 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517555 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2245 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517554 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517549 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517556 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2246 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2247 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517555 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517557 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517558 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2243 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517557 A) (@lem4517556 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517559 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2242 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517551 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517558 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517560 (P : nat -> Prop) : (term2249 P) = (term2250 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4517561 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2251 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2252 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517560 (term2164 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517562 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2253 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2163 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2253 A B a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517563 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517564 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2254 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2242 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517563) (@lem4517562 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517565 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2254 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517564 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517559 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517566 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2255 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2256 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517565 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517567 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517568 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2252 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2257 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517567) (@lem4517566 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517569 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2251 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2257 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517561 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517568 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517570 (P : nat -> Prop) : (term2249 P) = (term2250 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4517571 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2258 A B a _53582 t s d p1 p1' p2 p2' x) = (term2259 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517570 (term2166 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517572 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2260 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2165 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2260 A B a _53582 t s d p1 p1' p2 p2' x m)). Qed.
Lemma lem4517573 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517574 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2261 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2251 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517573) (@lem4517572 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517575 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2261 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2257 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517574 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517569 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517576 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2262 A B a _53582 t s d p1 p1' p2 p2' x) = (term2263 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4517575 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517577 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517578 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2259 A B a _53582 t s d p1 p1' p2 p2' x) = (term2264 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517577) (@lem4517576 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517579 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2258 A B a _53582 t s d p1 p1' p2 p2' x) = (term2264 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517571 A B a _53582 t s d p1 p1' p2 p2' x) (@lem4517578 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517580 {B : Type'} (P : type686 B) : (term2240 B P) = (term2241 B P).
Proof. exact (@lem18392 (B -> Prop) P). Qed.
Lemma lem4517581 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2265 A B a _53582 s d p1 p1' p2 p2' x) = (term2266 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (@lem4517580 B (term2168 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517582 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2267 A B a _53582 s d p1 p1' p2 p2' x t) = (term2167 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2267 A B a _53582 s d p1 p1' p2 p2' x t)). Qed.
Lemma lem4517583 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517584 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2268 A B a _53582 s d p1 p1' p2 p2' x t) = (term2258 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517583) (@lem4517582 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517585 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2268 A B a _53582 s d p1 p1' p2 p2' x t) = (term2264 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517584 A B a _53582 t s d p1 p1' p2 p2' x) (@lem4517579 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517586 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2269 A B a _53582 s d p1 p1' p2 p2' x) = (term2270 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4517585 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517587 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4517588 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2266 A B a _53582 s d p1 p1' p2 p2' x) = (term2271 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517587 B) (@lem4517586 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517589 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2265 A B a _53582 s d p1 p1' p2 p2' x) = (term2271 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517581 A B a _53582 s d p1 p1' p2 p2' x) (@lem4517588 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517590 {A : Type'} (P : type686 A) : (term2240 A P) = (term2241 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem4517591 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2272 A B a _53582 d p1 p1' p2 p2' x) = (term2273 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (@lem4517590 A (term2170 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517592 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2274 A B a _53582 d p1 p1' p2 p2' x s) = (term2169 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2274 A B a _53582 d p1 p1' p2 p2' x s)). Qed.
Lemma lem4517593 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517594 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2275 A B a _53582 d p1 p1' p2 p2' x s) = (term2265 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517593) (@lem4517592 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517595 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2275 A B a _53582 d p1 p1' p2 p2' x s) = (term2271 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517594 A B a _53582 s d p1 p1' p2 p2' x) (@lem4517589 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517596 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2276 A B a _53582 d p1 p1' p2 p2' x) = (term2277 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4517595 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517597 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517598 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2273 A B a _53582 d p1 p1' p2 p2' x) = (term2278 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517597 A) (@lem4517596 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517599 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2272 A B a _53582 d p1 p1' p2 p2' x) = (term2278 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517591 A B a _53582 d p1 p1' p2 p2' x) (@lem4517598 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517600 {B : Type'} (P : B -> Prop) : (term1223 B P) = (term1224 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4517601 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2279 A B a _53582 p1 p1' p2 p2' x) = (term2280 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (@lem4517600 B (term2172 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517602 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2281 A B a _53582 p1 p1' p2 p2' x d) = (term2171 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2281 A B a _53582 p1 p1' p2 p2' x d)). Qed.
Lemma lem4517603 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517604 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2282 A B a _53582 p1 p1' p2 p2' x d) = (term2272 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517603) (@lem4517602 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517605 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2282 A B a _53582 p1 p1' p2 p2' x d) = (term2278 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517604 A B a _53582 d p1 p1' p2 p2' x) (@lem4517599 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517606 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2283 A B a _53582 p1 p1' p2 p2' x) = (term2284 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4517605 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4517607 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4517608 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2280 A B a _53582 p1 p1' p2 p2' x) = (term2285 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517607 B) (@lem4517606 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517609 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2279 A B a _53582 p1 p1' p2 p2' x) = (term2285 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517601 A B a _53582 p1 p1' p2 p2' x) (@lem4517608 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517610 {B : Type'} (P : B -> Prop) : (term1223 B P) = (term1224 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4517611 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2286 A B a _53582 p1' p2 p2' x) = (term2287 A B a _53582 p1' p2 p2' x).
Proof. exact (@lem4517610 B (term2174 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517612 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2288 A B a _53582 p1' p2 p2' x p1) = (term2173 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2288 A B a _53582 p1' p2 p2' x p1)). Qed.
Lemma lem4517613 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4517614 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2289 A B a _53582 p1' p2 p2' x p1) = (term2279 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517613) (@lem4517612 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517615 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2289 A B a _53582 p1' p2 p2' x p1) = (term2285 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517614 A B a _53582 p1 p1' p2 p2' x) (@lem4517609 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517616 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2290 A B a _53582 p1' p2 p2' x) = (term2291 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4517615 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4517617 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4517618 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2287 A B a _53582 p1' p2 p2' x) = (term2292 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517617 B) (@lem4517616 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517619 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2286 A B a _53582 p1' p2 p2' x) = (term2292 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517611 A B a _53582 p1' p2 p2' x) (@lem4517618 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517620 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517621 {A : Type'} (x : A) (a : A) : (term1195 A x a) = (term1196 A x a).
Proof. exact (MK_COMB (@lem4517620) (@lem4517436 A x a)). Qed.
Lemma lem4517622 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2293 A B a _53582 p1' p2 p2' x) = (term2294 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517621 A x a) (@lem4517619 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517623 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2199 A B a _53582 p1' p2 p2' x) = (term2293 A B a _53582 p1' p2 p2' x).
Proof. exact (@lem17160 (term1200 A x a) (term2175 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517624 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2199 A B a _53582 p1' p2 p2' x) = (term2294 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517623 A B a _53582 p1' p2 p2' x) (@lem4517622 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4517650 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1163 A P Q) = (term1162 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem4517651 {A : Type'} (P : Prop) (Q : type686 A) : (term2295 A P Q) = (term2296 A P Q).
Proof. exact (@lem4517650 (A -> Prop) P Q). Qed.
Lemma lem4517652 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2297 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2298 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517651 A (@HAS_SIZE A s m) (term2299 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517653 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2300 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2300 A B a _53582 n m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4517654 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517655 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2301 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517654 A s m) (@lem4517653 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517656 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2302 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2247 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517655 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517657 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517658 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2297 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517657 A) (@lem4517656 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517659 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517660 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2303 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2304 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517659) (@lem4517658 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517661 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2300 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2300 A B a _53582 n m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4517662 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2305 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2299 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517661 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517663 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517664 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2306 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2307 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517663 A) (@lem4517662 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517665 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517666 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2298 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2308 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517665 A s m) (@lem4517664 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517667 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2297 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2298 A B a _53582 n m t s d p1 p1' p2 p2' x)) = ((term2248 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2308 A B a _53582 n m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517660 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517666 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517668 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2308 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517667 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517652 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517670 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1163 A P Q) = (term1162 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem4517671 {A : Type'} (P : Prop) (Q : type686 A) : (term2295 A P Q) = (term2296 A P Q).
Proof. exact (@lem4517670 (A -> Prop) P Q). Qed.
Lemma lem4517672 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2309 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2310 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517671 A (term178 A a s) (term2311 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517673 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2312 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2312 A B a _53582 n m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4517674 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517675 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2313 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517674 A a s) (@lem4517673 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517676 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2314 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2299 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517675 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517677 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517678 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2309 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2307 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517677 A) (@lem4517676 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517680 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2315 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2316 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517679) (@lem4517678 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517681 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2312 A B a _53582 n m t s d p1 p1' p2 p2' x s0) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2312 A B a _53582 n m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4517682 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2317 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2311 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517681 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517683 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517684 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2318 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2319 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517683 A) (@lem4517682 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517685 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517686 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2310 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2320 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517685 A a s) (@lem4517684 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517687 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2309 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2310 A B a _53582 n m t s d p1 p1' p2 p2' x)) = ((term2307 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2320 A B a _53582 n m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517680 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517686 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517688 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2307 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2320 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517687 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517672 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517710 {A : Type'} (P : A -> Prop) (Q : Prop) : (term97 A P Q) = (term96 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem4517711 {A : Type'} (P : type686 A) (Q : Prop) : (term285 A P Q) = (term284 A P Q).
Proof. exact (@lem4517710 (A -> Prop) P Q). Qed.
Lemma lem4517712 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2321 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2322 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517711 A (term2323 A a s) (term2228 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517713 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2324 A a s s0) = (s0 = (@INSERT A a s)).
Proof. exact (eq_refl (term2324 A a s s0)). Qed.
Lemma lem4517714 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517715 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2325 A a s s0) = (term2230 A s0 a s).
Proof. exact (MK_COMB (@lem4517714) (@lem4517713 A s0 a s)). Qed.
Lemma lem4517716 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2228 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2228 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517717 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2326 A B a s0 _53582 n m t s d p1 p1' p2 p2' x) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517715 A s0 a s) (@lem4517716 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517718 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2327 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2311 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517717 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517719 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517720 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2321 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2319 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517719 A) (@lem4517718 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517721 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517722 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2328 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2329 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517721) (@lem4517720 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517723 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2324 A a s s0) = (s0 = (@INSERT A a s)).
Proof. exact (eq_refl (term2324 A a s s0)). Qed.
Lemma lem4517724 {A : Type'} (a : A) (s : A -> Prop) : (term2330 A a s) = (term2323 A a s).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4517723 A s0 a s)). Qed.
Lemma lem4517725 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4517726 {A : Type'} (a : A) (s : A -> Prop) : (term2331 A a s) = (term2332 A a s).
Proof. exact (MK_COMB (@lem4517725 A) (@lem4517724 A a s)). Qed.
Lemma lem4517727 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4517728 {A : Type'} (a : A) (s : A -> Prop) : (term2333 A a s) = (term2334 A a s).
Proof. exact (MK_COMB (@lem4517727) (@lem4517726 A a s)). Qed.
Lemma lem4517729 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2228 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2228 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517730 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2322 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517728 A a s) (@lem4517729 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517731 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2321 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2322 A B a _53582 n m t s d p1 p1' p2 p2' x)) = ((term2319 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517722 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517730 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517732 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2319 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517731 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517712 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517929 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517930 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2320 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2336 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517929 A a s) (@lem4517732 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517931 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2307 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2336 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517688 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517930 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517932 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517933 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2308 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2337 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517932 A s m) (@lem4517931 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517934 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2248 A B a _53582 n m t s d p1 p1' p2 p2' x) = (term2337 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517668 A B a _53582 n m t s d p1 p1' p2 p2' x) (@lem4517933 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517935 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2256 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2338 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517934 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517936 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517937 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2257 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2339 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517936) (@lem4517935 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517939 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1163 A P Q) = (term1162 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem4517940 (P : Prop) (Q : nat -> Prop) : (term2340 P Q) = (term2341 P Q).
Proof. exact (@lem4517939 nat P Q). Qed.
Lemma lem4517941 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2342 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2343 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517940 (@HAS_SIZE A s m) (term2344 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517942 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2345 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2336 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2345 A B a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517943 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517944 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2346 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2337 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517943 A s m) (@lem4517942 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517945 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2347 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2338 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517944 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517946 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517947 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2342 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2339 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517946) (@lem4517945 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517948 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517949 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2348 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2349 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517948) (@lem4517947 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517950 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2345 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2336 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2345 A B a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517951 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2350 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2344 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517950 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517952 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517953 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2351 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2352 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517952) (@lem4517951 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517954 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4517955 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2343 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2353 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517954 A s m) (@lem4517953 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517956 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2342 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2343 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2339 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2353 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517949 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517955 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517957 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2339 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2353 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517956 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517941 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517959 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1163 A P Q) = (term1162 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem4517960 (P : Prop) (Q : nat -> Prop) : (term2340 P Q) = (term2341 P Q).
Proof. exact (@lem4517959 nat P Q). Qed.
Lemma lem4517961 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2354 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2355 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517960 (term178 A a s) (term2356 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517962 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2357 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2357 A B a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517963 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517964 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2358 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2336 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517963 A a s) (@lem4517962 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517965 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2359 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2344 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517964 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517966 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517967 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2354 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2352 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517966) (@lem4517965 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517968 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517969 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2360 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2361 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517968) (@lem4517967 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517970 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2357 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2357 A B a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517971 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2362 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2356 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517970 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517972 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517973 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2363 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2364 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517972) (@lem4517971 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517974 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4517975 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2355 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2365 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517974 A a s) (@lem4517973 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517976 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2354 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2355 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2352 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2365 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517969 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517975 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517977 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2352 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2365 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517976 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517961 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517979 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1163 A P Q) = (term1162 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem4517980 (P : Prop) (Q : nat -> Prop) : (term2340 P Q) = (term2341 P Q).
Proof. exact (@lem4517979 nat P Q). Qed.
Lemma lem4517981 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2366 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2367 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4517980 (term2332 A a s) (term2368 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517982 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2369 A B _53582 m t s d p1 p1' p2 p2' x n) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2369 A B _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517983 {A : Type'} (a : A) (s : A -> Prop) : (term2334 A a s) = (term2334 A a s).
Proof. exact (eq_refl (term2334 A a s)). Qed.
Lemma lem4517984 {A B : Type'} (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2370 A B a _53582 m t s d p1 p1' p2 p2' x n) = (term2335 A B a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517983 A a s) (@lem4517982 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517985 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2371 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2356 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517984 A B a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517986 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517987 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2366 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2364 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517986) (@lem4517985 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517988 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4517989 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2372 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2373 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517988) (@lem4517987 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517990 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2369 A B _53582 m t s d p1 p1' p2 p2' x n) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2369 A B _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4517991 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2374 A B _53582 m t s d p1 p1' p2 p2' x) = (term2368 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4517990 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517992 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4517993 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2375 A B _53582 m t s d p1 p1' p2 p2' x) = (term2376 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517992) (@lem4517991 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517994 {A : Type'} (a : A) (s : A -> Prop) : (term2334 A a s) = (term2334 A a s).
Proof. exact (eq_refl (term2334 A a s)). Qed.
Lemma lem4517995 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2367 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2377 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4517994 A a s) (@lem4517993 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517996 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2366 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2367 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2364 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2377 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4517989 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517995 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4517997 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2364 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2377 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4517996 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4517981 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518242 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518243 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2365 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2378 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518242 A a s) (@lem4517997 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518244 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2352 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2378 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517977 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518243 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518245 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518246 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2353 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2379 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518245 A s m) (@lem4518244 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518247 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2339 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2379 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517957 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518246 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518248 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2257 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2379 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517937 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518247 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518249 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2263 A B a _53582 t s d p1 p1' p2 p2' x) = (term2380 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4518248 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518250 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518251 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2264 A B a _53582 t s d p1 p1' p2 p2' x) = (term2381 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518250) (@lem4518249 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518300 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2270 A B a _53582 s d p1 p1' p2 p2' x) = (term2382 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4518251 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518301 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4518302 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2271 A B a _53582 s d p1 p1' p2 p2' x) = (term2383 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518301 B) (@lem4518300 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518307 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2277 A B a _53582 d p1 p1' p2 p2' x) = (term2384 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4518302 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518308 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518309 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2278 A B a _53582 d p1 p1' p2 p2' x) = (term2385 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518308 A) (@lem4518307 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518314 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2284 A B a _53582 p1 p1' p2 p2' x) = (term2386 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4518309 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518315 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518316 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2285 A B a _53582 p1 p1' p2 p2' x) = (term2387 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518315 B) (@lem4518314 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518321 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2291 A B a _53582 p1' p2 p2' x) = (term2388 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4518316 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518322 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518323 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2292 A B a _53582 p1' p2 p2' x) = (term2389 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518322 B) (@lem4518321 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518328 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518329 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2294 A B a _53582 p1' p2 p2' x) = (term2390 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518328 A x a) (@lem4518323 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518331 {A : Type'} (P : A -> Prop) (Q : Prop) : (term96 A P Q) = (term97 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4518332 {A : Type'} (P : type686 A) (Q : Prop) : (term284 A P Q) = (term285 A P Q).
Proof. exact (@lem4518331 (A -> Prop) P Q). Qed.
Lemma lem4518333 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2391 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2392 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518332 A (term2323 A a s) (term2376 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518334 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2324 A a s s0) = (s0 = (@INSERT A a s)).
Proof. exact (eq_refl (term2324 A a s s0)). Qed.
Lemma lem4518335 {A : Type'} (a : A) (s : A -> Prop) : (term2330 A a s) = (term2323 A a s).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518334 A s0 a s)). Qed.
Lemma lem4518336 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518337 {A : Type'} (a : A) (s : A -> Prop) : (term2331 A a s) = (term2332 A a s).
Proof. exact (MK_COMB (@lem4518336 A) (@lem4518335 A a s)). Qed.
Lemma lem4518338 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518339 {A : Type'} (a : A) (s : A -> Prop) : (term2333 A a s) = (term2334 A a s).
Proof. exact (MK_COMB (@lem4518338) (@lem4518337 A a s)). Qed.
Lemma lem4518340 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2376 A B _53582 m t s d p1 p1' p2 p2' x) = (term2376 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2376 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518341 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2391 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2377 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518339 A a s) (@lem4518340 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518343 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2393 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2394 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518342) (@lem4518341 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518344 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2324 A a s s0) = (s0 = (@INSERT A a s)).
Proof. exact (eq_refl (term2324 A a s s0)). Qed.
Lemma lem4518345 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518346 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2325 A a s s0) = (term2230 A s0 a s).
Proof. exact (MK_COMB (@lem4518345) (@lem4518344 A s0 a s)). Qed.
Lemma lem4518347 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2376 A B _53582 m t s d p1 p1' p2 p2' x) = (term2376 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2376 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518348 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2395 A B a s0 _53582 m t s d p1 p1' p2 p2' x) = (term2396 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518346 A s0 a s) (@lem4518347 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518349 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2397 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2398 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518348 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518350 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518351 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2392 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2399 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518350 A) (@lem4518349 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518352 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2391 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2392 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2377 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2399 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518343 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518351 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518353 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2377 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2399 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518352 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518333 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518355 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518356 (P : Prop) (Q : nat -> Prop) : (term2341 P Q) = (term2340 P Q).
Proof. exact (@lem4518355 nat P Q). Qed.
Lemma lem4518357 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2400 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2401 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518356 (s0 = (@INSERT A a s)) (term2368 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518358 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2369 A B _53582 m t s d p1 p1' p2 p2' x n) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2369 A B _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518359 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2374 A B _53582 m t s d p1 p1' p2 p2' x) = (term2368 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518358 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518360 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518361 {A B : Type'} (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2375 A B _53582 m t s d p1 p1' p2 p2' x) = (term2376 A B _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518360) (@lem4518359 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518362 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2230 A s0 a s) = (term2230 A s0 a s).
Proof. exact (eq_refl (term2230 A s0 a s)). Qed.
Lemma lem4518363 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2400 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2396 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518362 A s0 a s) (@lem4518361 A B _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518364 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518365 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2402 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2403 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518364) (@lem4518363 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518366 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2369 A B _53582 m t s d p1 p1' p2 p2' x n) = (term2228 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2369 A B _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518367 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2230 A s0 a s) = (term2230 A s0 a s).
Proof. exact (eq_refl (term2230 A s0 a s)). Qed.
Lemma lem4518368 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2404 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518367 A s0 a s) (@lem4518366 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518369 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2405 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2406 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518368 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518370 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518371 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2401 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518370) (@lem4518369 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518372 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2400 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2401 A B s0 a _53582 m t s d p1 p1' p2 p2' x)) = ((term2396 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518365 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518371 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518373 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2396 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518372 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518357 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518374 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2398 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2408 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518373 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518375 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518376 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2399 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2409 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518375 A) (@lem4518374 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518377 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2377 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2409 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518353 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518376 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518378 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518379 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2378 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2410 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518378 A a s) (@lem4518377 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518381 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518382 {A : Type'} (P : Prop) (Q : type686 A) : (term2296 A P Q) = (term2295 A P Q).
Proof. exact (@lem4518381 (A -> Prop) P Q). Qed.
Lemma lem4518383 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2411 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2412 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518382 A (term178 A a s) (term2408 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518384 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2413 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2413 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518385 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2414 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2408 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518384 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518386 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518387 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2415 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2409 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518386 A) (@lem4518385 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518388 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518389 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2411 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2410 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518388 A a s) (@lem4518387 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518390 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518391 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2416 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2417 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518390) (@lem4518389 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518392 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2413 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2413 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518393 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518394 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2418 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2419 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518393 A a s) (@lem4518392 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518395 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2420 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2421 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518394 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518396 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518397 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2412 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2422 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518396 A) (@lem4518395 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518398 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2411 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2412 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2410 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2422 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518391 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518397 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518399 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2410 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2422 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518398 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518383 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518401 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518402 (P : Prop) (Q : nat -> Prop) : (term2341 P Q) = (term2340 P Q).
Proof. exact (@lem4518401 nat P Q). Qed.
Lemma lem4518403 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2423 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2424 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518402 (term178 A a s) (term2406 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518404 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2425 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2425 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518405 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2426 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2406 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518404 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518406 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518407 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2427 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2407 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518406) (@lem4518405 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518408 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518409 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2423 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2419 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518408 A a s) (@lem4518407 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518410 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518411 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2428 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2429 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518410) (@lem4518409 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518412 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2425 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2425 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518413 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1212 A a s).
Proof. exact (eq_refl (term1212 A a s)). Qed.
Lemma lem4518414 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2430 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518413 A a s) (@lem4518412 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518415 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2431 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2432 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518414 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518416 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518417 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2424 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518416) (@lem4518415 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518418 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2423 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2424 A B s0 a _53582 m t s d p1 p1' p2 p2' x)) = ((term2419 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518411 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518417 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518419 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2419 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518418 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518403 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518420 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2421 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2434 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518419 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518421 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518422 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2422 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2435 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518421 A) (@lem4518420 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518423 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2410 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2435 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518399 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518422 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518424 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2378 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2435 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518379 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518423 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518425 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518426 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2379 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2436 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518425 A s m) (@lem4518424 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518428 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518429 {A : Type'} (P : Prop) (Q : type686 A) : (term2296 A P Q) = (term2295 A P Q).
Proof. exact (@lem4518428 (A -> Prop) P Q). Qed.
Lemma lem4518430 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2437 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2438 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518429 A (@HAS_SIZE A s m) (term2434 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518431 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2439 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2439 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518432 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2440 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2434 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518431 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518433 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518434 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2441 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2435 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518433 A) (@lem4518432 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518435 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518436 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2437 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2436 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518435 A s m) (@lem4518434 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518437 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518438 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2442 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2443 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518437) (@lem4518436 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518439 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2439 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2439 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518440 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518441 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2444 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2445 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518440 A s m) (@lem4518439 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518442 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2446 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2447 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518441 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518443 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518444 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2438 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2448 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518443 A) (@lem4518442 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518445 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2437 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2438 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2436 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2448 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518438 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518444 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518446 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2436 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2448 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518445 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518430 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518448 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518449 (P : Prop) (Q : nat -> Prop) : (term2341 P Q) = (term2340 P Q).
Proof. exact (@lem4518448 nat P Q). Qed.
Lemma lem4518450 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2449 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2450 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518449 (@HAS_SIZE A s m) (term2432 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518451 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2451 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2451 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518452 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2452 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2432 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518451 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518453 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518454 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2453 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2433 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518453) (@lem4518452 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518455 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518456 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2449 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2445 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518455 A s m) (@lem4518454 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518457 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518458 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2454 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2455 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518457) (@lem4518456 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518459 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2451 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2451 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518460 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term346 A s m).
Proof. exact (eq_refl (term346 A s m)). Qed.
Lemma lem4518461 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2456 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518460 A s m) (@lem4518459 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518462 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2457 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2458 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518461 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518463 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518464 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2450 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518463) (@lem4518462 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518465 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2449 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2450 A B s0 a _53582 m t s d p1 p1' p2 p2' x)) = ((term2445 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518458 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518464 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518466 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2445 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518465 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518450 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518467 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2447 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2460 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518466 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518468 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518469 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2448 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518468 A) (@lem4518467 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518470 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2436 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518446 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518469 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518471 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2379 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518426 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518470 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518472 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2380 A B a _53582 t s d p1 p1' p2 p2' x) = (term2462 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4518471 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518473 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518474 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2381 A B a _53582 t s d p1 p1' p2 p2' x) = (term2463 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518473) (@lem4518472 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518475 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2382 A B a _53582 s d p1 p1' p2 p2' x) = (term2464 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4518474 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518476 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4518477 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2383 A B a _53582 s d p1 p1' p2 p2' x) = (term2465 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518476 B) (@lem4518475 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518478 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2384 A B a _53582 d p1 p1' p2 p2' x) = (term2466 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4518477 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518479 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518480 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2385 A B a _53582 d p1 p1' p2 p2' x) = (term2467 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518479 A) (@lem4518478 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518481 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2386 A B a _53582 p1 p1' p2 p2' x) = (term2468 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4518480 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518482 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518483 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2387 A B a _53582 p1 p1' p2 p2' x) = (term2469 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518482 B) (@lem4518481 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518484 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2388 A B a _53582 p1' p2 p2' x) = (term2470 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4518483 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518485 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518486 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2389 A B a _53582 p1' p2 p2' x) = (term2471 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518485 B) (@lem4518484 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518487 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518488 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2390 A B a _53582 p1' p2 p2' x) = (term2472 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518487 A x a) (@lem4518486 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518490 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518491 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1162 B P Q) = (term1163 B P Q).
Proof. exact (@lem4518490 B P Q). Qed.
Lemma lem4518492 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2473 A B a _53582 p1' p2 p2' x) = (term2474 A B a _53582 p1' p2 p2' x).
Proof. exact (@lem4518491 B (x = a) (term2470 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518493 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2475 A B a _53582 p1' p2 p2' x p1) = (term2469 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2475 A B a _53582 p1' p2 p2' x p1)). Qed.
Lemma lem4518494 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2476 A B a _53582 p1' p2 p2' x) = (term2470 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4518493 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518495 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518496 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2477 A B a _53582 p1' p2 p2' x) = (term2471 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518495 B) (@lem4518494 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518497 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518498 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2473 A B a _53582 p1' p2 p2' x) = (term2472 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518497 A x a) (@lem4518496 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518499 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518500 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2478 A B a _53582 p1' p2 p2' x) = (term2479 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518499) (@lem4518498 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518501 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2475 A B a _53582 p1' p2 p2' x p1) = (term2469 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2475 A B a _53582 p1' p2 p2' x p1)). Qed.
Lemma lem4518502 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518503 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2480 A B a _53582 p1' p2 p2' x p1) = (term2481 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518502 A x a) (@lem4518501 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518504 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2482 A B a _53582 p1' p2 p2' x) = (term2483 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4518503 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518505 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518506 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2474 A B a _53582 p1' p2 p2' x) = (term2484 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518505 B) (@lem4518504 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518507 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2473 A B a _53582 p1' p2 p2' x) = (term2474 A B a _53582 p1' p2 p2' x)) = ((term2472 A B a _53582 p1' p2 p2' x) = (term2484 A B a _53582 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518500 A B a _53582 p1' p2 p2' x) (@lem4518506 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518508 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2472 A B a _53582 p1' p2 p2' x) = (term2484 A B a _53582 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518507 A B a _53582 p1' p2 p2' x) (@lem4518492 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518510 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518511 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1162 B P Q) = (term1163 B P Q).
Proof. exact (@lem4518510 B P Q). Qed.
Lemma lem4518512 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2485 A B a _53582 p1 p1' p2 p2' x) = (term2486 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (@lem4518511 B (x = a) (term2468 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518513 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2487 A B a _53582 p1 p1' p2 p2' x d) = (term2467 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2487 A B a _53582 p1 p1' p2 p2' x d)). Qed.
Lemma lem4518514 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2488 A B a _53582 p1 p1' p2 p2' x) = (term2468 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4518513 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518515 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518516 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2489 A B a _53582 p1 p1' p2 p2' x) = (term2469 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518515 B) (@lem4518514 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518517 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518518 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2485 A B a _53582 p1 p1' p2 p2' x) = (term2481 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518517 A x a) (@lem4518516 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518519 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518520 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2490 A B a _53582 p1 p1' p2 p2' x) = (term2491 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518519) (@lem4518518 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518521 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2487 A B a _53582 p1 p1' p2 p2' x d) = (term2467 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2487 A B a _53582 p1 p1' p2 p2' x d)). Qed.
Lemma lem4518522 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518523 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2492 A B a _53582 p1 p1' p2 p2' x d) = (term2493 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518522 A x a) (@lem4518521 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518524 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2494 A B a _53582 p1 p1' p2 p2' x) = (term2495 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4518523 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518525 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518526 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2486 A B a _53582 p1 p1' p2 p2' x) = (term2496 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518525 B) (@lem4518524 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518527 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2485 A B a _53582 p1 p1' p2 p2' x) = (term2486 A B a _53582 p1 p1' p2 p2' x)) = ((term2481 A B a _53582 p1 p1' p2 p2' x) = (term2496 A B a _53582 p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518520 A B a _53582 p1 p1' p2 p2' x) (@lem4518526 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518528 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2481 A B a _53582 p1 p1' p2 p2' x) = (term2496 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518527 A B a _53582 p1 p1' p2 p2' x) (@lem4518512 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518530 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518531 {A : Type'} (P : Prop) (Q : type686 A) : (term2296 A P Q) = (term2295 A P Q).
Proof. exact (@lem4518530 (A -> Prop) P Q). Qed.
Lemma lem4518532 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2497 A B a _53582 d p1 p1' p2 p2' x) = (term2498 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (@lem4518531 A (x = a) (term2466 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518533 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2499 A B a _53582 d p1 p1' p2 p2' x s) = (term2465 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2499 A B a _53582 d p1 p1' p2 p2' x s)). Qed.
Lemma lem4518534 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2500 A B a _53582 d p1 p1' p2 p2' x) = (term2466 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4518533 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518535 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518536 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2501 A B a _53582 d p1 p1' p2 p2' x) = (term2467 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518535 A) (@lem4518534 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518537 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518538 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2497 A B a _53582 d p1 p1' p2 p2' x) = (term2493 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518537 A x a) (@lem4518536 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518539 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518540 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2502 A B a _53582 d p1 p1' p2 p2' x) = (term2503 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518539) (@lem4518538 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518541 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2499 A B a _53582 d p1 p1' p2 p2' x s) = (term2465 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2499 A B a _53582 d p1 p1' p2 p2' x s)). Qed.
Lemma lem4518542 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518543 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2504 A B a _53582 d p1 p1' p2 p2' x s) = (term2505 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518542 A x a) (@lem4518541 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518544 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2506 A B a _53582 d p1 p1' p2 p2' x) = (term2507 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4518543 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518545 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518546 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2498 A B a _53582 d p1 p1' p2 p2' x) = (term2508 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518545 A) (@lem4518544 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518547 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2497 A B a _53582 d p1 p1' p2 p2' x) = (term2498 A B a _53582 d p1 p1' p2 p2' x)) = ((term2493 A B a _53582 d p1 p1' p2 p2' x) = (term2508 A B a _53582 d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518540 A B a _53582 d p1 p1' p2 p2' x) (@lem4518546 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518548 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2493 A B a _53582 d p1 p1' p2 p2' x) = (term2508 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518547 A B a _53582 d p1 p1' p2 p2' x) (@lem4518532 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518550 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518551 {B : Type'} (P : Prop) (Q : type686 B) : (term2296 B P Q) = (term2295 B P Q).
Proof. exact (@lem4518550 (B -> Prop) P Q). Qed.
Lemma lem4518552 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2509 A B a _53582 s d p1 p1' p2 p2' x) = (term2510 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (@lem4518551 B (x = a) (term2464 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518553 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2511 A B a _53582 s d p1 p1' p2 p2' x t) = (term2463 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2511 A B a _53582 s d p1 p1' p2 p2' x t)). Qed.
Lemma lem4518554 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2512 A B a _53582 s d p1 p1' p2 p2' x) = (term2464 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4518553 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518555 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4518556 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2513 A B a _53582 s d p1 p1' p2 p2' x) = (term2465 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518555 B) (@lem4518554 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518557 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518558 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2509 A B a _53582 s d p1 p1' p2 p2' x) = (term2505 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518557 A x a) (@lem4518556 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518559 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518560 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2514 A B a _53582 s d p1 p1' p2 p2' x) = (term2515 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518559) (@lem4518558 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518561 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2511 A B a _53582 s d p1 p1' p2 p2' x t) = (term2463 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2511 A B a _53582 s d p1 p1' p2 p2' x t)). Qed.
Lemma lem4518562 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518563 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2516 A B a _53582 s d p1 p1' p2 p2' x t) = (term2517 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518562 A x a) (@lem4518561 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518564 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2518 A B a _53582 s d p1 p1' p2 p2' x) = (term2519 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4518563 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518565 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4518566 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2510 A B a _53582 s d p1 p1' p2 p2' x) = (term2520 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518565 B) (@lem4518564 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518567 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2509 A B a _53582 s d p1 p1' p2 p2' x) = (term2510 A B a _53582 s d p1 p1' p2 p2' x)) = ((term2505 A B a _53582 s d p1 p1' p2 p2' x) = (term2520 A B a _53582 s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518560 A B a _53582 s d p1 p1' p2 p2' x) (@lem4518566 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518568 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2505 A B a _53582 s d p1 p1' p2 p2' x) = (term2520 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518567 A B a _53582 s d p1 p1' p2 p2' x) (@lem4518552 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518570 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518571 (P : Prop) (Q : nat -> Prop) : (term2341 P Q) = (term2340 P Q).
Proof. exact (@lem4518570 nat P Q). Qed.
Lemma lem4518572 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2521 A B a _53582 t s d p1 p1' p2 p2' x) = (term2522 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518571 (x = a) (term2462 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518573 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2523 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2523 A B a _53582 t s d p1 p1' p2 p2' x m)). Qed.
Lemma lem4518574 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2524 A B a _53582 t s d p1 p1' p2 p2' x) = (term2462 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4518573 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518575 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518576 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2525 A B a _53582 t s d p1 p1' p2 p2' x) = (term2463 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518575) (@lem4518574 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518577 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518578 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2521 A B a _53582 t s d p1 p1' p2 p2' x) = (term2517 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518577 A x a) (@lem4518576 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518579 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518580 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2526 A B a _53582 t s d p1 p1' p2 p2' x) = (term2527 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518579) (@lem4518578 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518581 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2523 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2523 A B a _53582 t s d p1 p1' p2 p2' x m)). Qed.
Lemma lem4518582 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518583 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2528 A B a _53582 t s d p1 p1' p2 p2' x m) = (term2529 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518582 A x a) (@lem4518581 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518584 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2530 A B a _53582 t s d p1 p1' p2 p2' x) = (term2531 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4518583 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518585 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518586 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2522 A B a _53582 t s d p1 p1' p2 p2' x) = (term2532 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518585) (@lem4518584 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518587 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2521 A B a _53582 t s d p1 p1' p2 p2' x) = (term2522 A B a _53582 t s d p1 p1' p2 p2' x)) = ((term2517 A B a _53582 t s d p1 p1' p2 p2' x) = (term2532 A B a _53582 t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518580 A B a _53582 t s d p1 p1' p2 p2' x) (@lem4518586 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518588 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2517 A B a _53582 t s d p1 p1' p2 p2' x) = (term2532 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518587 A B a _53582 t s d p1 p1' p2 p2' x) (@lem4518572 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518590 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518591 {A : Type'} (P : Prop) (Q : type686 A) : (term2296 A P Q) = (term2295 A P Q).
Proof. exact (@lem4518590 (A -> Prop) P Q). Qed.
Lemma lem4518592 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2533 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2534 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518591 A (x = a) (term2460 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518593 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2535 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2535 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518594 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2536 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2460 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518593 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518595 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518596 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2537 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2461 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518595 A) (@lem4518594 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518597 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518598 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2533 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2529 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518597 A x a) (@lem4518596 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518599 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518600 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2538 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2539 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518599) (@lem4518598 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518601 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2535 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2535 A B a _53582 m t s d p1 p1' p2 p2' x s0)). Qed.
Lemma lem4518602 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518603 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2540 A B a _53582 m t s d p1 p1' p2 p2' x s0) = (term2541 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518602 A x a) (@lem4518601 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518604 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2542 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2543 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518603 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518605 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518606 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2534 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2544 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518605 A) (@lem4518604 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518607 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2533 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2534 A B a _53582 m t s d p1 p1' p2 p2' x)) = ((term2529 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2544 A B a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518600 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518606 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518608 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2529 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2544 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518607 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518592 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518610 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1162 A P Q) = (term1163 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4518611 (P : Prop) (Q : nat -> Prop) : (term2341 P Q) = (term2340 P Q).
Proof. exact (@lem4518610 nat P Q). Qed.
Lemma lem4518612 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2545 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2546 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (@lem4518611 (x = a) (term2458 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518613 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2547 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2547 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518614 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2548 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2458 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518613 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518615 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518616 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2549 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2459 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518615) (@lem4518614 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518617 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518618 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2545 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2541 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518617 A x a) (@lem4518616 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518619 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4518620 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2550 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2551 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518619) (@lem4518618 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518621 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2547 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (eq_refl (term2547 A B s0 a _53582 m t s d p1 p1' p2 p2' x n)). Qed.
Lemma lem4518622 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4518623 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2552 A B s0 a _53582 m t s d p1 p1' p2 p2' x n) = (term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518622 A x a) (@lem4518621 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518624 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2554 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2555 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun n : nat => @lem4518623 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518625 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518626 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2546 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518625) (@lem4518624 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518627 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : ((term2545 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2546 A B s0 a _53582 m t s d p1 p1' p2 p2' x)) = ((term2541 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x)).
Proof. exact (MK_COMB (@lem4518620 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518626 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518628 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2541 A B s0 a _53582 m t s d p1 p1' p2 p2' x) = (term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (EQ_MP (@lem4518627 A B s0 a _53582 m t s d p1 p1' p2 p2' x) (@lem4518612 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518629 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2543 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2557 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s0 : A -> Prop => @lem4518628 A B s0 a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518630 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518631 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2544 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2558 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518630 A) (@lem4518629 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518632 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2529 A B a _53582 m t s d p1 p1' p2 p2' x) = (term2558 A B a _53582 m t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518608 A B a _53582 m t s d p1 p1' p2 p2' x) (@lem4518631 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518633 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2531 A B a _53582 t s d p1 p1' p2 p2' x) = (term2559 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun m : nat => @lem4518632 A B a _53582 m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518634 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4518635 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2532 A B a _53582 t s d p1 p1' p2 p2' x) = (term2560 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518634) (@lem4518633 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518636 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2517 A B a _53582 t s d p1 p1' p2 p2' x) = (term2560 A B a _53582 t s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518588 A B a _53582 t s d p1 p1' p2 p2' x) (@lem4518635 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518637 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2519 A B a _53582 s d p1 p1' p2 p2' x) = (term2561 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4518636 A B a _53582 t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518638 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4518639 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2520 A B a _53582 s d p1 p1' p2 p2' x) = (term2562 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518638 B) (@lem4518637 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518640 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2505 A B a _53582 s d p1 p1' p2 p2' x) = (term2562 A B a _53582 s d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518568 A B a _53582 s d p1 p1' p2 p2' x) (@lem4518639 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518641 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2507 A B a _53582 d p1 p1' p2 p2' x) = (term2563 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4518640 A B a _53582 s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518642 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4518643 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2508 A B a _53582 d p1 p1' p2 p2' x) = (term2564 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518642 A) (@lem4518641 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518644 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2493 A B a _53582 d p1 p1' p2 p2' x) = (term2564 A B a _53582 d p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518548 A B a _53582 d p1 p1' p2 p2' x) (@lem4518643 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518645 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2495 A B a _53582 p1 p1' p2 p2' x) = (term2565 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (fun_ext (fun d : B => @lem4518644 A B a _53582 d p1 p1' p2 p2' x)). Qed.
Lemma lem4518646 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518647 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2496 A B a _53582 p1 p1' p2 p2' x) = (term2566 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518646 B) (@lem4518645 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518648 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2481 A B a _53582 p1 p1' p2 p2' x) = (term2566 A B a _53582 p1 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518528 A B a _53582 p1 p1' p2 p2' x) (@lem4518647 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518649 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2483 A B a _53582 p1' p2 p2' x) = (term2567 A B a _53582 p1' p2 p2' x).
Proof. exact (fun_ext (fun p1 : B => @lem4518648 A B a _53582 p1 p1' p2 p2' x)). Qed.
Lemma lem4518650 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4518651 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2484 A B a _53582 p1' p2 p2' x) = (term2568 A B a _53582 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518650 B) (@lem4518649 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518652 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2472 A B a _53582 p1' p2 p2' x) = (term2568 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518508 A B a _53582 p1' p2 p2' x) (@lem4518651 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518653 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2390 A B a _53582 p1' p2 p2' x) = (term2568 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518488 A B a _53582 p1' p2 p2' x) (@lem4518652 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518654 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2294 A B a _53582 p1' p2 p2' x) = (term2568 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4518329 A B a _53582 p1' p2 p2' x) (@lem4518653 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518655 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2199 A B a _53582 p1' p2 p2' x) = (term2568 A B a _53582 p1' p2 p2' x).
Proof. exact (TRANS (@lem4517624 A B a _53582 p1' p2 p2' x) (@lem4518654 A B a _53582 p1' p2 p2' x)). Qed.
Lemma lem4518656 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2199 A B a _53582 p1' p2 p2' x) : term2568 A B a _53582 p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4518655 A B a _53582 p1' p2 p2' x) (@lem4516551 A B a _53582 p1' p2 p2' x h1)). Qed.
Lemma lem4518657 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2566 A B a _53582 p1 p1' p2 p2' x) : term2566 A B a _53582 p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518658 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2564 A B a _53582 d p1 p1' p2 p2' x) : term2564 A B a _53582 d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518659 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2562 A B a _53582 s d p1 p1' p2 p2' x) : term2562 A B a _53582 s d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518660 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2560 A B a _53582 t s d p1 p1' p2 p2' x) : term2560 A B a _53582 t s d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518661 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2558 A B a _53582 m t s d p1 p1' p2 p2' x) : term2558 A B a _53582 m t s d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518662 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x) : term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518663 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (h1). Qed.
Lemma lem4518665 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4518666 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4518671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518672 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518671 A B f x). Qed.
Lemma lem4518674 {A B : Type'} (p2 : A -> B) (x : A) : (p2 x) = (@I (A -> B) p2 x).
Proof. exact (@lem4518672 A B p2 x). Qed.
Lemma lem4518679 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518680 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518679 A B f x). Qed.
Lemma lem4518682 {A B : Type'} (p2' : A -> B) (x : A) : (p2' x) = (@I (A -> B) p2' x).
Proof. exact (@lem4518680 A B p2' x). Qed.
Lemma lem4518683 {A B : Type'} (p2 : A -> B) (x : A) : (term262 A B p2 x) = (term1330 A B p2 x).
Proof. exact (MK_COMB (@lem4518666 B) (@lem4518674 A B p2 x)). Qed.
Lemma lem4518684 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : ((p2 x) = (p2' x)) = ((@I (A -> B) p2 x) = (@I (A -> B) p2' x)).
Proof. exact (MK_COMB (@lem4518683 A B p2 x) (@lem4518682 A B p2' x)). Qed.
Lemma lem4518685 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2569 A B p2 p2' x) = (term2570 A B p2 p2' x).
Proof. exact (MK_COMB (@lem4518665) (@lem4518684 A B p2 p2' x)). Qed.
Lemma lem4518692 {B : Type'} (p1 : B) (p1' : B) : (term1196 B p1 p1') = (term1196 B p1 p1').
Proof. exact (eq_refl (term1196 B p1 p1')). Qed.
Lemma lem4518693 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2201 A B p1 p1' p2 p2' x) = (term2571 A B p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518692 B p1 p1') (@lem4518685 A B p2 p2' x)). Qed.
Lemma lem4518694 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4518699 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518700 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518699 A B f x). Qed.
Lemma lem4518702 {A B : Type'} (p2' : A -> B) (x : A) : (p2' x) = (@I (A -> B) p2' x).
Proof. exact (@lem4518700 A B p2' x). Qed.
Lemma lem4518703 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4518704 {A B : Type'} (p2' : A -> B) (x : A) : (term262 A B p2' x) = (term1330 A B p2' x).
Proof. exact (MK_COMB (@lem4518694 B) (@lem4518702 A B p2' x)). Qed.
Lemma lem4518705 {A B : Type'} (p2' : A -> B) (x : A) (d : B) : ((p2' x) = d) = ((@I (A -> B) p2' x) = d).
Proof. exact (MK_COMB (@lem4518704 A B p2' x) (@lem4518703 B d)). Qed.
Lemma lem4518712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518713 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4518712 A (type686 A) f x). Qed.
Lemma lem4518714 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4518713 A (@IN A) x). Qed.
Lemma lem4518715 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4518716 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4518714 A x) (@lem4518715 A s)). Qed.
Lemma lem4518718 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518719 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4518718 (A -> Prop) Prop f x). Qed.
Lemma lem4518720 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4518719 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4518722 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4518716 A x s) (@lem4518720 A x s)). Qed.
Lemma lem4518723 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4518724 {A : Type'} (x : A) (s : A -> Prop) : (term1736 A x s) = (term1843 A x s).
Proof. exact (MK_COMB (@lem4518723) (@lem4518722 A x s)). Qed.
Lemma lem4518725 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term1738 A B s p2' x d) = (term1376 A B s p2' x d).
Proof. exact (MK_COMB (@lem4518724 A x s) (@lem4518705 A B p2' x d)). Qed.
Lemma lem4518726 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1739 A B s p2' d) = (term1844 A B s p2' d).
Proof. exact (fun_ext (fun x : A => @lem4518725 A B s p2' x d)). Qed.
Lemma lem4518727 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4518728 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1740 A B s p2' d) = (term1845 A B s p2' d).
Proof. exact (MK_COMB (@lem4518727 A) (@lem4518726 A B s p2' d)). Qed.
Lemma lem4518729 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518730 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term2203 A B s p2' d) = (term2572 A B s p2' d).
Proof. exact (MK_COMB (@lem4518729) (@lem4518728 A B s p2' d)). Qed.
Lemma lem4518731 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2205 A B s d p1 p1' p2 p2' x) = (term2573 A B s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518730 A B s p2' d) (@lem4518693 A B p1 p1' p2 p2' x)). Qed.
Lemma lem4518732 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4518737 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518738 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518737 A B f x). Qed.
Lemma lem4518740 {A B : Type'} (p2' : A -> B) (x : A) : (p2' x) = (@I (A -> B) p2' x).
Proof. exact (@lem4518738 A B p2' x). Qed.
Lemma lem4518741 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518742 {A B : Type'} (p2' : A -> B) (x : A) : (term828 A B p2' x) = (term1317 A B p2' x).
Proof. exact (MK_COMB (@lem4518732 B) (@lem4518740 A B p2' x)). Qed.
Lemma lem4518743 {A B : Type'} (p2' : A -> B) (x : A) (t : B -> Prop) : (term169 A B p2' x t) = (term1318 A B p2' x t).
Proof. exact (MK_COMB (@lem4518742 A B p2' x) (@lem4518741 B t)). Qed.
Lemma lem4518745 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518746 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4518745 B (type686 B) f x). Qed.
Lemma lem4518747 {A B : Type'} (p2' : A -> B) (x : A) : (term1317 A B p2' x) = (term1319 A B p2' x).
Proof. exact (@lem4518746 B (@IN B) (@I (A -> B) p2' x)). Qed.
Lemma lem4518748 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518749 {A B : Type'} (p2' : A -> B) (x : A) (t : B -> Prop) : (term1318 A B p2' x t) = (term1320 A B p2' x t).
Proof. exact (MK_COMB (@lem4518747 A B p2' x) (@lem4518748 B t)). Qed.
Lemma lem4518751 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518752 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4518751 (B -> Prop) Prop f x). Qed.
Lemma lem4518753 {A B : Type'} (p2' : A -> B) (x : A) (t : B -> Prop) : (term1320 A B p2' x t) = (term1321 A B p2' x t).
Proof. exact (@lem4518752 B (term1319 A B p2' x) t). Qed.
Lemma lem4518754 {A B : Type'} (p2' : A -> B) (x : A) (t : B -> Prop) : (term1318 A B p2' x t) = (term1321 A B p2' x t).
Proof. exact (TRANS (@lem4518749 A B p2' x t) (@lem4518753 A B p2' x t)). Qed.
Lemma lem4518755 {A B : Type'} (p2' : A -> B) (x : A) (t : B -> Prop) : (term169 A B p2' x t) = (term1321 A B p2' x t).
Proof. exact (TRANS (@lem4518743 A B p2' x t) (@lem4518754 A B p2' x t)). Qed.
Lemma lem4518756 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4518763 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518764 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4518763 A (type686 A) f x). Qed.
Lemma lem4518765 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4518764 A (@IN A) x). Qed.
Lemma lem4518766 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4518767 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4518765 A x) (@lem4518766 A s)). Qed.
Lemma lem4518769 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518770 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4518769 (A -> Prop) Prop f x). Qed.
Lemma lem4518771 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4518770 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4518773 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4518767 A x s) (@lem4518771 A x s)). Qed.
Lemma lem4518774 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4518756) (@lem4518773 A x s)). Qed.
Lemma lem4518775 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4518776 {A : Type'} (x : A) (s : A -> Prop) : (term1839 A x s) = (term1840 A x s).
Proof. exact (MK_COMB (@lem4518775) (@lem4518774 A x s)). Qed.
Lemma lem4518777 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (t : B -> Prop) : (term836 A B s p2' x t) = (term1368 A B s p2' x t).
Proof. exact (MK_COMB (@lem4518776 A x s) (@lem4518755 A B p2' x t)). Qed.
Lemma lem4518778 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term837 A B s p2' t) = (term1841 A B s p2' t).
Proof. exact (fun_ext (fun x : A => @lem4518777 A B s p2' x t)). Qed.
Lemma lem4518779 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4518780 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term838 A B s p2' t) = (term1842 A B s p2' t).
Proof. exact (MK_COMB (@lem4518779 A) (@lem4518778 A B s p2' t)). Qed.
Lemma lem4518781 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518782 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) : (term2207 A B s p2' t) = (term2574 A B s p2' t).
Proof. exact (MK_COMB (@lem4518781) (@lem4518780 A B s p2' t)). Qed.
Lemma lem4518783 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2209 A B t s d p1 p1' p2 p2' x) = (term2575 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518782 A B s p2' t) (@lem4518731 A B s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518790 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518791 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4518790 B (type686 B) f x). Qed.
Lemma lem4518792 {B : Type'} (p1' : B) : (@IN B p1') = (@I (B -> (B -> Prop) -> Prop) (@IN B) p1').
Proof. exact (@lem4518791 B (@IN B) p1'). Qed.
Lemma lem4518793 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518794 {B : Type'} (p1' : B) (t : B -> Prop) : (@IN B p1' t) = (@I (B -> (B -> Prop) -> Prop) (@IN B) p1' t).
Proof. exact (MK_COMB (@lem4518792 B p1') (@lem4518793 B t)). Qed.
Lemma lem4518796 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518797 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4518796 (B -> Prop) Prop f x). Qed.
Lemma lem4518798 {B : Type'} (p1' : B) (t : B -> Prop) : (@I (B -> (B -> Prop) -> Prop) (@IN B) p1' t) = (term1322 B p1' t).
Proof. exact (@lem4518797 B (@I (B -> (B -> Prop) -> Prop) (@IN B) p1') t). Qed.
Lemma lem4518800 {B : Type'} (p1' : B) (t : B -> Prop) : (@IN B p1' t) = (term1322 B p1' t).
Proof. exact (TRANS (@lem4518794 B p1' t) (@lem4518798 B p1' t)). Qed.
Lemma lem4518801 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518802 {B : Type'} (p1' : B) (t : B -> Prop) : (term512 B p1' t) = (term1337 B p1' t).
Proof. exact (MK_COMB (@lem4518801) (@lem4518800 B p1' t)). Qed.
Lemma lem4518803 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2212 A B t s d p1 p1' p2 p2' x) = (term2576 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518802 B p1' t) (@lem4518783 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518804 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4518809 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518810 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518809 A B f x). Qed.
Lemma lem4518812 {A B : Type'} (p2 : A -> B) (x : A) : (p2 x) = (@I (A -> B) p2 x).
Proof. exact (@lem4518810 A B p2 x). Qed.
Lemma lem4518813 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4518814 {A B : Type'} (p2 : A -> B) (x : A) : (term262 A B p2 x) = (term1330 A B p2 x).
Proof. exact (MK_COMB (@lem4518804 B) (@lem4518812 A B p2 x)). Qed.
Lemma lem4518815 {A B : Type'} (p2 : A -> B) (x : A) (d : B) : ((p2 x) = d) = ((@I (A -> B) p2 x) = d).
Proof. exact (MK_COMB (@lem4518814 A B p2 x) (@lem4518813 B d)). Qed.
Lemma lem4518822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518823 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4518822 A (type686 A) f x). Qed.
Lemma lem4518824 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4518823 A (@IN A) x). Qed.
Lemma lem4518825 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4518826 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4518824 A x) (@lem4518825 A s)). Qed.
Lemma lem4518828 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518829 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4518828 (A -> Prop) Prop f x). Qed.
Lemma lem4518830 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4518829 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4518832 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4518826 A x s) (@lem4518830 A x s)). Qed.
Lemma lem4518833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4518834 {A : Type'} (x : A) (s : A -> Prop) : (term1736 A x s) = (term1843 A x s).
Proof. exact (MK_COMB (@lem4518833) (@lem4518832 A x s)). Qed.
Lemma lem4518835 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term1738 A B s p2 x d) = (term1376 A B s p2 x d).
Proof. exact (MK_COMB (@lem4518834 A x s) (@lem4518815 A B p2 x d)). Qed.
Lemma lem4518836 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1739 A B s p2 d) = (term1844 A B s p2 d).
Proof. exact (fun_ext (fun x : A => @lem4518835 A B s p2 x d)). Qed.
Lemma lem4518837 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4518838 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1740 A B s p2 d) = (term1845 A B s p2 d).
Proof. exact (MK_COMB (@lem4518837 A) (@lem4518836 A B s p2 d)). Qed.
Lemma lem4518839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518840 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term2203 A B s p2 d) = (term2572 A B s p2 d).
Proof. exact (MK_COMB (@lem4518839) (@lem4518838 A B s p2 d)). Qed.
Lemma lem4518841 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2215 A B t s d p1 p1' p2 p2' x) = (term2577 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518840 A B s p2 d) (@lem4518803 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518842 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem4518847 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518848 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4518847 A B f x). Qed.
Lemma lem4518850 {A B : Type'} (p2 : A -> B) (x : A) : (p2 x) = (@I (A -> B) p2 x).
Proof. exact (@lem4518848 A B p2 x). Qed.
Lemma lem4518851 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518852 {A B : Type'} (p2 : A -> B) (x : A) : (term828 A B p2 x) = (term1317 A B p2 x).
Proof. exact (MK_COMB (@lem4518842 B) (@lem4518850 A B p2 x)). Qed.
Lemma lem4518853 {A B : Type'} (p2 : A -> B) (x : A) (t : B -> Prop) : (term169 A B p2 x t) = (term1318 A B p2 x t).
Proof. exact (MK_COMB (@lem4518852 A B p2 x) (@lem4518851 B t)). Qed.
Lemma lem4518855 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518856 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4518855 B (type686 B) f x). Qed.
Lemma lem4518857 {A B : Type'} (p2 : A -> B) (x : A) : (term1317 A B p2 x) = (term1319 A B p2 x).
Proof. exact (@lem4518856 B (@IN B) (@I (A -> B) p2 x)). Qed.
Lemma lem4518858 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518859 {A B : Type'} (p2 : A -> B) (x : A) (t : B -> Prop) : (term1318 A B p2 x t) = (term1320 A B p2 x t).
Proof. exact (MK_COMB (@lem4518857 A B p2 x) (@lem4518858 B t)). Qed.
Lemma lem4518861 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518862 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4518861 (B -> Prop) Prop f x). Qed.
Lemma lem4518863 {A B : Type'} (p2 : A -> B) (x : A) (t : B -> Prop) : (term1320 A B p2 x t) = (term1321 A B p2 x t).
Proof. exact (@lem4518862 B (term1319 A B p2 x) t). Qed.
Lemma lem4518864 {A B : Type'} (p2 : A -> B) (x : A) (t : B -> Prop) : (term1318 A B p2 x t) = (term1321 A B p2 x t).
Proof. exact (TRANS (@lem4518859 A B p2 x t) (@lem4518863 A B p2 x t)). Qed.
Lemma lem4518865 {A B : Type'} (p2 : A -> B) (x : A) (t : B -> Prop) : (term169 A B p2 x t) = (term1321 A B p2 x t).
Proof. exact (TRANS (@lem4518853 A B p2 x t) (@lem4518864 A B p2 x t)). Qed.
Lemma lem4518866 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4518873 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518874 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4518873 A (type686 A) f x). Qed.
Lemma lem4518875 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4518874 A (@IN A) x). Qed.
Lemma lem4518876 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4518877 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4518875 A x) (@lem4518876 A s)). Qed.
Lemma lem4518879 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518880 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4518879 (A -> Prop) Prop f x). Qed.
Lemma lem4518881 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1322 A x s).
Proof. exact (@lem4518880 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4518883 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1322 A x s).
Proof. exact (TRANS (@lem4518877 A x s) (@lem4518881 A x s)). Qed.
Lemma lem4518884 {A : Type'} (x : A) (s : A -> Prop) : (term178 A x s) = (term1323 A x s).
Proof. exact (MK_COMB (@lem4518866) (@lem4518883 A x s)). Qed.
Lemma lem4518885 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4518886 {A : Type'} (x : A) (s : A -> Prop) : (term1839 A x s) = (term1840 A x s).
Proof. exact (MK_COMB (@lem4518885) (@lem4518884 A x s)). Qed.
Lemma lem4518887 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (t : B -> Prop) : (term836 A B s p2 x t) = (term1368 A B s p2 x t).
Proof. exact (MK_COMB (@lem4518886 A x s) (@lem4518865 A B p2 x t)). Qed.
Lemma lem4518888 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term837 A B s p2 t) = (term1841 A B s p2 t).
Proof. exact (fun_ext (fun x : A => @lem4518887 A B s p2 x t)). Qed.
Lemma lem4518889 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4518890 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term838 A B s p2 t) = (term1842 A B s p2 t).
Proof. exact (MK_COMB (@lem4518889 A) (@lem4518888 A B s p2 t)). Qed.
Lemma lem4518891 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518892 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) : (term2207 A B s p2 t) = (term2574 A B s p2 t).
Proof. exact (MK_COMB (@lem4518891) (@lem4518890 A B s p2 t)). Qed.
Lemma lem4518893 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2218 A B t s d p1 p1' p2 p2' x) = (term2578 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518892 A B s p2 t) (@lem4518841 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518900 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518901 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4518900 B (type686 B) f x). Qed.
Lemma lem4518902 {B : Type'} (p1 : B) : (@IN B p1) = (@I (B -> (B -> Prop) -> Prop) (@IN B) p1).
Proof. exact (@lem4518901 B (@IN B) p1). Qed.
Lemma lem4518903 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4518904 {B : Type'} (p1 : B) (t : B -> Prop) : (@IN B p1 t) = (@I (B -> (B -> Prop) -> Prop) (@IN B) p1 t).
Proof. exact (MK_COMB (@lem4518902 B p1) (@lem4518903 B t)). Qed.
Lemma lem4518906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518907 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4518906 (B -> Prop) Prop f x). Qed.
Lemma lem4518908 {B : Type'} (p1 : B) (t : B -> Prop) : (@I (B -> (B -> Prop) -> Prop) (@IN B) p1 t) = (term1322 B p1 t).
Proof. exact (@lem4518907 B (@I (B -> (B -> Prop) -> Prop) (@IN B) p1) t). Qed.
Lemma lem4518910 {B : Type'} (p1 : B) (t : B -> Prop) : (@IN B p1 t) = (term1322 B p1 t).
Proof. exact (TRANS (@lem4518904 B p1 t) (@lem4518908 B p1 t)). Qed.
Lemma lem4518911 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518912 {B : Type'} (p1 : B) (t : B -> Prop) : (term512 B p1 t) = (term1337 B p1 t).
Proof. exact (MK_COMB (@lem4518911) (@lem4518910 B p1 t)). Qed.
Lemma lem4518913 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2221 A B t s d p1 p1' p2 p2' x) = (term2579 A B t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518912 B p1 t) (@lem4518893 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518914 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4518915 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4518924 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518925 {A B : Type'} (f : type839 A B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) f x).
Proof. exact (@lem4518924 (B -> Prop) (type674 A B) f x). Qed.
Lemma lem4518926 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) : (_53582 t) = (@I ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582 t).
Proof. exact (@lem4518925 A B _53582 t). Qed.
Lemma lem4518927 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4518928 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (_53582 t s) = (@I ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582 t s).
Proof. exact (MK_COMB (@lem4518926 A B _53582 t) (@lem4518927 A s)). Qed.
Lemma lem4518930 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518931 {A B : Type'} (f : type674 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> (A -> B) -> Prop) f x).
Proof. exact (@lem4518930 (A -> Prop) (type1446 A B) f x). Qed.
Lemma lem4518932 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (@I ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582 t s) = (term2580 A B _53582 t s).
Proof. exact (@lem4518931 A B (@I ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53582 t) s). Qed.
Lemma lem4518933 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (_53582 t s) = (term2580 A B _53582 t s).
Proof. exact (TRANS (@lem4518928 A B _53582 t s) (@lem4518932 A B _53582 t s)). Qed.
Lemma lem4518934 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4518935 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (_53582 t s d) = (term2581 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4518933 A B _53582 t s) (@lem4518934 B d)). Qed.
Lemma lem4518937 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518938 {A B : Type'} (f : type1446 A B) (x : B) : (f x) = (@I (B -> (A -> B) -> Prop) f x).
Proof. exact (@lem4518937 B (type572 A B) f x). Qed.
Lemma lem4518939 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term2581 A B _53582 t s d) = (term2582 A B _53582 t s d).
Proof. exact (@lem4518938 A B (term2580 A B _53582 t s) d). Qed.
Lemma lem4518941 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (_53582 t s d) = (term2582 A B _53582 t s d).
Proof. exact (TRANS (@lem4518935 A B _53582 t s d) (@lem4518939 A B _53582 t s d)). Qed.
Lemma lem4518942 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term713 A B _53582 t s d) = (term2583 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4518915 A B) (@lem4518941 A B _53582 t s d)). Qed.
Lemma lem4518944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518945 {A B : Type'} (f : type120 A B) (x : type572 A B) : (f x) = (@I (((A -> B) -> Prop) -> (A -> B) -> Prop) f x).
Proof. exact (@lem4518944 (type572 A B) (type572 A B) f x). Qed.
Lemma lem4518946 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term2583 A B _53582 t s d) = (term2584 A B _53582 t s d).
Proof. exact (@lem4518945 A B (@GSPEC (A -> B)) (term2582 A B _53582 t s d)). Qed.
Lemma lem4518947 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term713 A B _53582 t s d) = (term2584 A B _53582 t s d).
Proof. exact (TRANS (@lem4518942 A B _53582 t s d) (@lem4518946 A B _53582 t s d)). Qed.
Lemma lem4518954 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518955 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem4518954 nat (nat -> nat) f x). Qed.
Lemma lem4518956 (n : nat) : (Nat.pow n) = (@I (nat -> nat -> nat) Nat.pow n).
Proof. exact (@lem4518955 Nat.pow n). Qed.
Lemma lem4518957 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4518958 (n : nat) (m : nat) : (Nat.pow n m) = (@I (nat -> nat -> nat) Nat.pow n m).
Proof. exact (MK_COMB (@lem4518956 n) (@lem4518957 m)). Qed.
Lemma lem4518960 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518961 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem4518960 nat nat f x). Qed.
Lemma lem4518962 (n : nat) (m : nat) : (@I (nat -> nat -> nat) Nat.pow n m) = (term2585 n m).
Proof. exact (@lem4518961 (@I (nat -> nat -> nat) Nat.pow n) m). Qed.
Lemma lem4518964 (n : nat) (m : nat) : (Nat.pow n m) = (term2585 n m).
Proof. exact (TRANS (@lem4518958 n m) (@lem4518962 n m)). Qed.
Lemma lem4518965 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term714 A B _53582 t s d) = (term2586 A B _53582 t s d).
Proof. exact (MK_COMB (@lem4518914 A B) (@lem4518947 A B _53582 t s d)). Qed.
Lemma lem4518966 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term715 A B _53582 t s d n m) = (term2587 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4518965 A B _53582 t s d) (@lem4518964 n m)). Qed.
Lemma lem4518968 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518969 {A B : Type'} (f : type121 A B) (x : type572 A B) : (f x) = (@I (((A -> B) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4518968 (type572 A B) (nat -> Prop) f x). Qed.
Lemma lem4518970 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term2586 A B _53582 t s d) = (term2588 A B _53582 t s d).
Proof. exact (@lem4518969 A B (@HAS_SIZE (A -> B)) (term2584 A B _53582 t s d)). Qed.
Lemma lem4518971 (n : nat) (m : nat) : (term2585 n m) = (term2585 n m).
Proof. exact (eq_refl (term2585 n m)). Qed.
Lemma lem4518972 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2587 A B _53582 t s d n m) = (term2589 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4518970 A B _53582 t s d) (@lem4518971 n m)). Qed.
Lemma lem4518974 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518975 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4518974 nat Prop f x). Qed.
Lemma lem4518976 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2589 A B _53582 t s d n m) = (term2590 A B _53582 t s d n m).
Proof. exact (@lem4518975 (term2588 A B _53582 t s d) (term2585 n m)). Qed.
Lemma lem4518977 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2587 A B _53582 t s d n m) = (term2590 A B _53582 t s d n m).
Proof. exact (TRANS (@lem4518972 A B _53582 t s d n m) (@lem4518976 A B _53582 t s d n m)). Qed.
Lemma lem4518978 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term715 A B _53582 t s d n m) = (term2590 A B _53582 t s d n m).
Proof. exact (TRANS (@lem4518966 A B _53582 t s d n m) (@lem4518977 A B _53582 t s d n m)). Qed.
Lemma lem4518979 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4518980 {A B : Type'} (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term2223 A B _53582 t s d n m) = (term2591 A B _53582 t s d n m).
Proof. exact (MK_COMB (@lem4518979) (@lem4518978 A B _53582 t s d n m)). Qed.
Lemma lem4518981 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2225 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2592 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4518980 A B _53582 t s d n m) (@lem4518913 A B t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4518988 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518989 {B : Type'} (f : type682 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4518988 (B -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4518990 {B : Type'} (t : B -> Prop) : (@HAS_SIZE B t) = (@I ((B -> Prop) -> nat -> Prop) (@HAS_SIZE B) t).
Proof. exact (@lem4518989 B (@HAS_SIZE B) t). Qed.
Lemma lem4518991 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4518992 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (@I ((B -> Prop) -> nat -> Prop) (@HAS_SIZE B) t n).
Proof. exact (MK_COMB (@lem4518990 B t) (@lem4518991 n)). Qed.
Lemma lem4518994 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4518995 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4518994 nat Prop f x). Qed.
Lemma lem4518996 {B : Type'} (t : B -> Prop) (n : nat) : (@I ((B -> Prop) -> nat -> Prop) (@HAS_SIZE B) t n) = (term2593 B t n).
Proof. exact (@lem4518995 (@I ((B -> Prop) -> nat -> Prop) (@HAS_SIZE B) t) n). Qed.
Lemma lem4518998 {B : Type'} (t : B -> Prop) (n : nat) : (@HAS_SIZE B t n) = (term2593 B t n).
Proof. exact (TRANS (@lem4518992 B t n) (@lem4518996 B t n)). Qed.
Lemma lem4518999 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4519000 {B : Type'} (t : B -> Prop) (n : nat) : (term346 B t n) = (term2594 B t n).
Proof. exact (MK_COMB (@lem4518999) (@lem4518998 B t n)). Qed.
Lemma lem4519001 {A B : Type'} (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2228 A B _53582 n m t s d p1 p1' p2 p2' x) = (term2595 A B _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4519000 B t n) (@lem4518981 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4519010 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519011 {A : Type'} (f : type1363 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem4519010 A (type672 A) f x). Qed.
Lemma lem4519012 {A : Type'} (a : A) : (@INSERT A a) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) a).
Proof. exact (@lem4519011 A (@INSERT A) a). Qed.
Lemma lem4519013 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4519014 {A : Type'} (a : A) (s : A -> Prop) : (@INSERT A a s) = (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) a s).
Proof. exact (MK_COMB (@lem4519012 A a) (@lem4519013 A s)). Qed.
Lemma lem4519016 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519017 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem4519016 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem4519018 {A : Type'} (a : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) a s) = (term2596 A a s).
Proof. exact (@lem4519017 A (@I (A -> (A -> Prop) -> A -> Prop) (@INSERT A) a) s). Qed.
Lemma lem4519020 {A : Type'} (a : A) (s : A -> Prop) : (@INSERT A a s) = (term2596 A a s).
Proof. exact (TRANS (@lem4519014 A a s) (@lem4519018 A a s)). Qed.
Lemma lem4519021 {A : Type'} (s0 : A -> Prop) : (@eq (A -> Prop) s0) = (@eq (A -> Prop) s0).
Proof. exact (eq_refl (@eq (A -> Prop) s0)). Qed.
Lemma lem4519022 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (s0 = (@INSERT A a s)) = (s0 = (term2596 A a s)).
Proof. exact (MK_COMB (@lem4519021 A s0) (@lem4519020 A a s)). Qed.
Lemma lem4519023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4519024 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) : (term2230 A s0 a s) = (term2597 A s0 a s).
Proof. exact (MK_COMB (@lem4519023) (@lem4519022 A s0 a s)). Qed.
Lemma lem4519025 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2232 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2598 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4519024 A s0 a s) (@lem4519001 A B _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4519026 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4519033 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519034 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4519033 A (type686 A) f x). Qed.
Lemma lem4519035 {A : Type'} (a : A) : (@IN A a) = (@I (A -> (A -> Prop) -> Prop) (@IN A) a).
Proof. exact (@lem4519034 A (@IN A) a). Qed.
Lemma lem4519036 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4519037 {A : Type'} (a : A) (s : A -> Prop) : (@IN A a s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) a s).
Proof. exact (MK_COMB (@lem4519035 A a) (@lem4519036 A s)). Qed.
Lemma lem4519039 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519040 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4519039 (A -> Prop) Prop f x). Qed.
Lemma lem4519041 {A : Type'} (a : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) a s) = (term1322 A a s).
Proof. exact (@lem4519040 A (@I (A -> (A -> Prop) -> Prop) (@IN A) a) s). Qed.
Lemma lem4519043 {A : Type'} (a : A) (s : A -> Prop) : (@IN A a s) = (term1322 A a s).
Proof. exact (TRANS (@lem4519037 A a s) (@lem4519041 A a s)). Qed.
Lemma lem4519044 {A : Type'} (a : A) (s : A -> Prop) : (term178 A a s) = (term1323 A a s).
Proof. exact (MK_COMB (@lem4519026) (@lem4519043 A a s)). Qed.
Lemma lem4519045 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4519046 {A : Type'} (a : A) (s : A -> Prop) : (term1212 A a s) = (term1346 A a s).
Proof. exact (MK_COMB (@lem4519045) (@lem4519044 A a s)). Qed.
Lemma lem4519047 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2235 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2599 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4519046 A a s) (@lem4519025 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4519054 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519055 {A : Type'} (f : type682 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4519054 (A -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4519056 {A : Type'} (s : A -> Prop) : (@HAS_SIZE A s) = (@I ((A -> Prop) -> nat -> Prop) (@HAS_SIZE A) s).
Proof. exact (@lem4519055 A (@HAS_SIZE A) s). Qed.
Lemma lem4519057 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4519058 {A : Type'} (s : A -> Prop) (m : nat) : (@HAS_SIZE A s m) = (@I ((A -> Prop) -> nat -> Prop) (@HAS_SIZE A) s m).
Proof. exact (MK_COMB (@lem4519056 A s) (@lem4519057 m)). Qed.
Lemma lem4519060 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4519061 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4519060 nat Prop f x). Qed.
Lemma lem4519062 {A : Type'} (s : A -> Prop) (m : nat) : (@I ((A -> Prop) -> nat -> Prop) (@HAS_SIZE A) s m) = (term2593 A s m).
Proof. exact (@lem4519061 (@I ((A -> Prop) -> nat -> Prop) (@HAS_SIZE A) s) m). Qed.
Lemma lem4519064 {A : Type'} (s : A -> Prop) (m : nat) : (@HAS_SIZE A s m) = (term2593 A s m).
Proof. exact (TRANS (@lem4519058 A s m) (@lem4519062 A s m)). Qed.
Lemma lem4519065 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4519066 {A : Type'} (s : A -> Prop) (m : nat) : (term346 A s m) = (term2594 A s m).
Proof. exact (MK_COMB (@lem4519065) (@lem4519064 A s m)). Qed.
Lemma lem4519067 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2238 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2600 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4519066 A s m) (@lem4519047 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4519074 {A : Type'} (x : A) (a : A) : (term1196 A x a) = (term1196 A x a).
Proof. exact (eq_refl (term1196 A x a)). Qed.
Lemma lem4519075 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) = (term2601 A B s0 a _53582 n m t s d p1 p1' p2 p2' x).
Proof. exact (MK_COMB (@lem4519074 A x a) (@lem4519067 A B s0 a _53582 n m t s d p1 p1' p2 p2' x)). Qed.
Lemma lem4519076 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2601 A B s0 a _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4519075 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) (@lem4518663 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519566 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2600 A B s0 a _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519076 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519568 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2599 A B s0 a _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519566 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519570 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2598 A B s0 a _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519568 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519572 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2595 A B _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519570 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519574 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2592 A B _53582 n m t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519572 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519576 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2579 A B t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519574 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519578 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2578 A B t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519576 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519580 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2577 A B t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519578 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519582 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2576 A B t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519580 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519583 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1845 A B s p2 d.
Proof. exact (proj1 (@lem4519580 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519584 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2575 A B t s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519582 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519586 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2573 A B s d p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519584 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519588 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2571 A B p1 p1' p2 p2' x.
Proof. exact (proj2 (@lem4519586 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519589 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1845 A B s p2' d.
Proof. exact (proj1 (@lem4519586 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519805 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (x : A) (d : B) : (term1376 A B s p2 x d) = (term1376 A B s p2 x d).
Proof. exact (eq_refl (term1376 A B s p2 x d)). Qed.
Lemma lem4519806 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1844 A B s p2 d) = (term1844 A B s p2 d).
Proof. exact (fun_ext (fun x : A => @lem4519805 A B s p2 x d)). Qed.
Lemma lem4519807 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4519809 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (d : B) : (term1845 A B s p2 d) = (term1845 A B s p2 d).
Proof. exact (MK_COMB (@lem4519807 A) (@lem4519806 A B s p2 d)). Qed.
Lemma lem4519810 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1845 A B s p2 d.
Proof. exact (EQ_MP (@lem4519809 A B s p2 d) (@lem4519583 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519835 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (x : A) (d : B) : (term1376 A B s p2' x d) = (term1376 A B s p2' x d).
Proof. exact (eq_refl (term1376 A B s p2' x d)). Qed.
Lemma lem4519836 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1844 A B s p2' d) = (term1844 A B s p2' d).
Proof. exact (fun_ext (fun x : A => @lem4519835 A B s p2' x d)). Qed.
Lemma lem4519837 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4519839 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (d : B) : (term1845 A B s p2' d) = (term1845 A B s p2' d).
Proof. exact (MK_COMB (@lem4519837 A) (@lem4519836 A B s p2' d)). Qed.
Lemma lem4519840 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1845 A B s p2' d.
Proof. exact (EQ_MP (@lem4519839 A B s p2' d) (@lem4519589 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4519879 {A B : Type'} (_53593 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1855 A B s p2 d _53593.
Proof. exact (@lem4519810 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 _53593). Qed.
Lemma lem4519880 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (_53593 : A) (d : B) : (term1855 A B s p2 d _53593) = (term1376 A B s p2 _53593 d).
Proof. exact (eq_refl (term1855 A B s p2 d _53593)). Qed.
Lemma lem4519885 {A B : Type'} (_53595 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1855 A B s p2' d _53595.
Proof. exact (@lem4519840 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 _53595). Qed.
Lemma lem4519886 {A B : Type'} (s : A -> Prop) (p2' : A -> B) (_53595 : A) (d : B) : (term1855 A B s p2' d _53595) = (term1376 A B s p2' _53595 d).
Proof. exact (eq_refl (term1855 A B s p2' d _53595)). Qed.
Lemma lem4520222 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : x = a.
Proof. exact (proj1 (@lem4519076 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520376 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2570 A B p2 p2' x.
Proof. exact (proj2 (@lem4519588 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520446 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1323 A a s.
Proof. exact (proj1 (@lem4519568 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520516 {A B : Type'} (_53593 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1376 A B s p2 _53593 d.
Proof. exact (EQ_MP (@lem4519880 A B s p2 _53593 d) (@lem4519879 A B _53593 s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520558 {A B : Type'} (_53595 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1376 A B s p2' _53595 d.
Proof. exact (EQ_MP (@lem4519886 A B s p2' _53595 d) (@lem4519885 A B _53595 s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520559 {A B : Type'} (p2 : A -> B) (p2' : A -> B) : (term2602 A B p2 p2') = (term2602 A B p2 p2').
Proof. exact (eq_refl (term2602 A B p2 p2')). Qed.
Lemma lem4520560 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : (term2603 A B p2 p2' x) = (term2603 A B p2 p2' a).
Proof. exact (MK_COMB (@lem4520559 A B p2 p2') (@lem4520222 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520561 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) : (term2603 A B p2 p2' a) = (term2570 A B p2 p2' a).
Proof. exact (eq_refl (term2603 A B p2 p2' a)). Qed.
Lemma lem4520562 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2604 A B p2 p2' x) = (term2604 A B p2 p2' x).
Proof. exact (eq_refl (term2604 A B p2 p2' x)). Qed.
Lemma lem4520563 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (a : A) : ((term2603 A B p2 p2' x) = (term2603 A B p2 p2' a)) = ((term2603 A B p2 p2' x) = (term2570 A B p2 p2' a)).
Proof. exact (MK_COMB (@lem4520562 A B p2 p2' x) (@lem4520561 A B p2 p2' a)). Qed.
Lemma lem4520564 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2603 A B p2 p2' x) = (term2570 A B p2 p2' x).
Proof. exact (eq_refl (term2603 A B p2 p2' x)). Qed.
Lemma lem4520565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4520566 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2604 A B p2 p2' x) = (term2605 A B p2 p2' x).
Proof. exact (MK_COMB (@lem4520565) (@lem4520564 A B p2 p2' x)). Qed.
Lemma lem4520567 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) : (term2570 A B p2 p2' a) = (term2570 A B p2 p2' a).
Proof. exact (eq_refl (term2570 A B p2 p2' a)). Qed.
Lemma lem4520568 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (a : A) : ((term2603 A B p2 p2' x) = (term2570 A B p2 p2' a)) = ((term2570 A B p2 p2' x) = (term2570 A B p2 p2' a)).
Proof. exact (MK_COMB (@lem4520566 A B p2 p2' x) (@lem4520567 A B p2 p2' a)). Qed.
Lemma lem4520569 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (a : A) : ((term2603 A B p2 p2' x) = (term2603 A B p2 p2' a)) = ((term2570 A B p2 p2' x) = (term2570 A B p2 p2' a)).
Proof. exact (TRANS (@lem4520563 A B x p2 p2' a) (@lem4520568 A B x p2 p2' a)). Qed.
Lemma lem4520570 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : (term2570 A B p2 p2' x) = (term2570 A B p2 p2' a).
Proof. exact (EQ_MP (@lem4520569 A B x p2 p2' a) (@lem4520560 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4520939 {B : Type'} (x : B) (y : B) (z : B) : term2606 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem4520981 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4520982 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4520981 B x). Qed.
Lemma lem4520983 {A B : Type'} (p2' : A -> B) (a : A) : (@I (A -> B) p2' a) = (@I (A -> B) p2' a).
Proof. exact (@lem4520982 B (@I (A -> B) p2' a)). Qed.
Lemma lem4520984 {A B : Type'} (p2' : A -> B) (a : A) : term1369 A B p2' a.
Proof. exact (fun h0 : term1364 A B p2' a => @lem4520983 A B p2' a). Qed.
Lemma lem4520986 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4520987 {A B : Type'} (p2' : A -> B) (a : A) : (term1369 A B p2' a) = ((@I (A -> B) p2' a) = (@I (A -> B) p2' a)).
Proof. exact (@lem4520986 ((@I (A -> B) p2' a) = (@I (A -> B) p2' a))). Qed.
Lemma lem4520988 {A B : Type'} (p2' : A -> B) (a : A) : (@I (A -> B) p2' a) = (@I (A -> B) p2' a).
Proof. exact (EQ_MP (@lem4520987 A B p2' a) (@lem4520984 A B p2' a)). Qed.
Lemma lem4520991 {A : Type'} (a : A) (s : A -> Prop) (h1 : term1323 A a s) : term1323 A a s.
Proof. exact (h1). Qed.
Lemma lem4520992 {A : Type'} (a : A) (s : A -> Prop) (h1 : term1323 A a s) : term1375 A a s.
Proof. exact (fun h0 : term1322 A a s => @lem4520991 A a s h1). Qed.
Lemma lem4520994 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4520995 {A : Type'} (a : A) (s : A -> Prop) : (term1375 A a s) = (term1323 A a s).
Proof. exact (@lem4520994 (term1322 A a s)). Qed.
Lemma lem4520996 {A : Type'} (a : A) (s : A -> Prop) (h1 : term1323 A a s) : term1323 A a s.
Proof. exact (EQ_MP (@lem4520995 A a s) (@lem4520992 A a s h1)). Qed.
Lemma lem4521002 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4521003 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : (term1376 A B s p2 _53593 d) = (term1377 A B p2 d _53593 s).
Proof. exact (@lem4521002 ((@I (A -> B) p2 _53593) = d) (term1322 A _53593 s)). Qed.
Lemma lem4521011 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4521012 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : (term1857 A B s p2 _53593 d) = (term1858 A B p2 d _53593 s).
Proof. exact (MK_COMB (@lem4521011) (@lem4521003 A B p2 d _53593 s)). Qed.
Lemma lem4521020 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : (term1377 A B p2 d _53593 s) = (term1377 A B p2 d _53593 s).
Proof. exact (eq_refl (term1377 A B p2 d _53593 s)). Qed.
Lemma lem4521021 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : ((term1376 A B s p2 _53593 d) = (term1377 A B p2 d _53593 s)) = ((term1377 A B p2 d _53593 s) = (term1377 A B p2 d _53593 s)).
Proof. exact (MK_COMB (@lem4521012 A B p2 d _53593 s) (@lem4521020 A B p2 d _53593 s)). Qed.
Lemma lem4521023 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4521024 (x : Prop) : (x = x) = True.
Proof. exact (@lem4521023 Prop x). Qed.
Lemma lem4521025 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : ((term1377 A B p2 d _53593 s) = (term1377 A B p2 d _53593 s)) = True.
Proof. exact (@lem4521024 (term1377 A B p2 d _53593 s)). Qed.
Lemma lem4521026 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : ((term1376 A B s p2 _53593 d) = (term1377 A B p2 d _53593 s)) = True.
Proof. exact (TRANS (@lem4521021 A B p2 d _53593 s) (@lem4521025 A B p2 d _53593 s)). Qed.
Lemma lem4521027 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : True = ((term1376 A B s p2 _53593 d) = (term1377 A B p2 d _53593 s)).
Proof. exact (SYM (@lem4521026 A B p2 d _53593 s)). Qed.
Lemma lem4521028 {A B : Type'} (p2 : A -> B) (d : B) (_53593 : A) (s : A -> Prop) : (term1376 A B s p2 _53593 d) = (term1377 A B p2 d _53593 s).
Proof. exact (EQ_MP (@lem4521027 A B p2 d _53593 s) (@lem0)). Qed.
Lemma lem4521029 {A B : Type'} (_53593 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1377 A B p2 d _53593 s.
Proof. exact (EQ_MP (@lem4521028 A B p2 d _53593 s) (@lem4520516 A B _53593 s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521031 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4521034 {A B : Type'} (s : A -> Prop) (p2 : A -> B) (_53593 : A) (d : B) : (term1377 A B p2 d _53593 s) = (term1859 A B s p2 _53593 d).
Proof. exact (@lem4521031 (term1322 A _53593 s) ((@I (A -> B) p2 _53593) = d)). Qed.
Lemma lem4521037 {A B : Type'} (_53593 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1859 A B s p2 _53593 d.
Proof. exact (EQ_MP (@lem4521034 A B s p2 _53593 d) (@lem4521029 A B _53593 s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521038 {A B : Type'} (_53593 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1859 A B s p2 _53593 d.
Proof. exact (@lem4521037 A B _53593 s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521039 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1859 A B s p2 a d.
Proof. exact (@lem4521038 A B a s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521042 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : (@I (A -> B) p2 a) = d.
Proof. exact (@lem4521039 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h2 (@lem4520996 A a s h1)). Qed.
Lemma lem4521043 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1390 A B p2 a d.
Proof. exact (fun h0 : term1340 A B p2 a d => @lem4521042 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2). Qed.
Lemma lem4521045 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4521046 {A B : Type'} (p2 : A -> B) (a : A) (d : B) : (term1390 A B p2 a d) = ((@I (A -> B) p2 a) = d).
Proof. exact (@lem4521045 ((@I (A -> B) p2 a) = d)). Qed.
Lemma lem4521047 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : (@I (A -> B) p2 a) = d.
Proof. exact (EQ_MP (@lem4521046 A B p2 a d) (@lem4521043 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521049 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4521050 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4521049 B x). Qed.
Lemma lem4521051 {A B : Type'} (p2 : A -> B) (a : A) : (@I (A -> B) p2 a) = (@I (A -> B) p2 a).
Proof. exact (@lem4521050 B (@I (A -> B) p2 a)). Qed.
Lemma lem4521052 {A B : Type'} (p2 : A -> B) (a : A) : term1369 A B p2 a.
Proof. exact (fun h0 : term1364 A B p2 a => @lem4521051 A B p2 a). Qed.
Lemma lem4521054 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4521055 {A B : Type'} (p2 : A -> B) (a : A) : (term1369 A B p2 a) = ((@I (A -> B) p2 a) = (@I (A -> B) p2 a)).
Proof. exact (@lem4521054 ((@I (A -> B) p2 a) = (@I (A -> B) p2 a))). Qed.
Lemma lem4521056 {A B : Type'} (p2 : A -> B) (a : A) : (@I (A -> B) p2 a) = (@I (A -> B) p2 a).
Proof. exact (EQ_MP (@lem4521055 A B p2 a) (@lem4521052 A B p2 a)). Qed.
Lemma lem4521074 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4521075 {B : Type'} (y : B) (x : B) (z : B) : (term2607 B x y z) = (term2608 B y x z).
Proof. exact (@lem4521074 (y = z) (term1200 B x z)). Qed.
Lemma lem4521085 {B : Type'} (x : B) (y : B) : (term2183 B x y) = (term2183 B x y).
Proof. exact (eq_refl (term2183 B x y)). Qed.
Lemma lem4521086 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2609 B y x z).
Proof. exact (MK_COMB (@lem4521085 B x y) (@lem4521075 B y x z)). Qed.
Lemma lem4521090 (q : Prop) (p : Prop) (r : Prop) : (term70 p q r) = (term70 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4521091 {B : Type'} (y : B) (x : B) (z : B) : (term2609 B y x z) = (term2610 B y x z).
Proof. exact (@lem4521090 (y = z) (term1200 B x y) (term1200 B x z)). Qed.
Lemma lem4521113 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2610 B y x z).
Proof. exact (TRANS (@lem4521086 B y x z) (@lem4521091 B y x z)). Qed.
Lemma lem4521114 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4521115 {B : Type'} (y : B) (x : B) (z : B) : (term2611 B x y z) = (term2612 B y x z).
Proof. exact (MK_COMB (@lem4521114) (@lem4521113 B y x z)). Qed.
Lemma lem4521137 {B : Type'} (y : B) (x : B) (z : B) : (term2610 B y x z) = (term2610 B y x z).
Proof. exact (eq_refl (term2610 B y x z)). Qed.
Lemma lem4521138 {B : Type'} (y : B) (x : B) (z : B) : ((term2606 B x y z) = (term2610 B y x z)) = ((term2610 B y x z) = (term2610 B y x z)).
Proof. exact (MK_COMB (@lem4521115 B y x z) (@lem4521137 B y x z)). Qed.
Lemma lem4521140 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4521141 (x : Prop) : (x = x) = True.
Proof. exact (@lem4521140 Prop x). Qed.
Lemma lem4521142 {B : Type'} (y : B) (x : B) (z : B) : ((term2610 B y x z) = (term2610 B y x z)) = True.
Proof. exact (@lem4521141 (term2610 B y x z)). Qed.
Lemma lem4521143 {B : Type'} (y : B) (x : B) (z : B) : ((term2606 B x y z) = (term2610 B y x z)) = True.
Proof. exact (TRANS (@lem4521138 B y x z) (@lem4521142 B y x z)). Qed.
Lemma lem4521144 {B : Type'} (y : B) (x : B) (z : B) : True = ((term2606 B x y z) = (term2610 B y x z)).
Proof. exact (SYM (@lem4521143 B y x z)). Qed.
Lemma lem4521145 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2610 B y x z).
Proof. exact (EQ_MP (@lem4521144 B y x z) (@lem0)). Qed.
Lemma lem4521146 {B : Type'} (y : B) (x : B) (z : B) : term2610 B y x z.
Proof. exact (EQ_MP (@lem4521145 B y x z) (@lem4520939 B x y z)). Qed.
Lemma lem4521148 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4521149 {B : Type'} (x : B) (y : B) (z : B) : (term2610 B y x z) = (term2613 B x y z).
Proof. exact (@lem4521148 (term2614 B y x z) (y = z)). Qed.
Lemma lem4521151 (a : Prop) (b : Prop) : (term1384 a b) = (term1385 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4521152 {B : Type'} (y : B) (x : B) (z : B) : (term2615 B y x z) = (term2616 B y x z).
Proof. exact (@lem4521151 (term1200 B x y) (term1200 B x z)). Qed.
Lemma lem4521154 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4521155 {B : Type'} (x : B) (y : B) : (term1193 B x y) = (x = y).
Proof. exact (@lem4521154 (x = y)). Qed.
Lemma lem4521156 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4521157 {B : Type'} (x : B) (y : B) : (term1195 B x y) = (term1196 B x y).
Proof. exact (MK_COMB (@lem4521156) (@lem4521155 B x y)). Qed.
Lemma lem4521159 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4521160 {B : Type'} (x : B) (z : B) : (term1193 B x z) = (x = z).
Proof. exact (@lem4521159 (x = z)). Qed.
Lemma lem4521161 {B : Type'} (y : B) (x : B) (z : B) : (term2616 B y x z) = (term2617 B y x z).
Proof. exact (MK_COMB (@lem4521157 B x y) (@lem4521160 B x z)). Qed.
Lemma lem4521162 {B : Type'} (y : B) (x : B) (z : B) : (term2615 B y x z) = (term2617 B y x z).
Proof. exact (TRANS (@lem4521152 B y x z) (@lem4521161 B y x z)). Qed.
Lemma lem4521163 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4521164 {B : Type'} (y : B) (x : B) (z : B) : (term2618 B y x z) = (term2619 B y x z).
Proof. exact (MK_COMB (@lem4521163) (@lem4521162 B y x z)). Qed.
Lemma lem4521165 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4521166 {B : Type'} (x : B) (y : B) (z : B) : (term2613 B x y z) = (term2620 B x y z).
Proof. exact (MK_COMB (@lem4521164 B y x z) (@lem4521165 B y z)). Qed.
Lemma lem4521167 {B : Type'} (x : B) (y : B) (z : B) : (term2610 B y x z) = (term2620 B x y z).
Proof. exact (TRANS (@lem4521149 B x y z) (@lem4521166 B x y z)). Qed.
Lemma lem4521169 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2621 A B d p2 a.
Proof. exact (conj (@lem4521047 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2) (@lem4521056 A B p2 a)). Qed.
Lemma lem4521171 {B : Type'} (x : B) (y : B) (z : B) : term2620 B x y z.
Proof. exact (EQ_MP (@lem4521167 B x y z) (@lem4521146 B y x z)). Qed.
Lemma lem4521172 {B : Type'} (x : B) (y : B) (z : B) : term2620 B x y z.
Proof. exact (@lem4521171 B x y z). Qed.
Lemma lem4521173 {A B : Type'} (d : B) (p2 : A -> B) (a : A) : term2622 A B d p2 a.
Proof. exact (@lem4521172 B (@I (A -> B) p2 a) d (@I (A -> B) p2 a)). Qed.
Lemma lem4521176 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : d = (@I (A -> B) p2 a).
Proof. exact (@lem4521173 A B d p2 a (@lem4521169 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521177 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2623 A B d p2 a.
Proof. exact (fun h0 : term2624 A B d p2 a => @lem4521176 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2). Qed.
Lemma lem4521179 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4521180 {A B : Type'} (d : B) (p2 : A -> B) (a : A) : (term2623 A B d p2 a) = (d = (@I (A -> B) p2 a)).
Proof. exact (@lem4521179 (d = (@I (A -> B) p2 a))). Qed.
Lemma lem4521181 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : d = (@I (A -> B) p2 a).
Proof. exact (EQ_MP (@lem4521180 A B d p2 a) (@lem4521177 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521183 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2570 A B p2 p2' a.
Proof. exact (EQ_MP (@lem4520570 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1) (@lem4520376 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521184 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2625 A B p2 p2' a.
Proof. exact (fun h0 : (@I (A -> B) p2 a) = (@I (A -> B) p2' a) => @lem4521183 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521186 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4521187 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (a : A) : (term2625 A B p2 p2' a) = (term2570 A B p2 p2' a).
Proof. exact (@lem4521186 ((@I (A -> B) p2 a) = (@I (A -> B) p2' a))). Qed.
Lemma lem4521188 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2570 A B p2 p2' a.
Proof. exact (EQ_MP (@lem4521187 A B p2 p2' a) (@lem4521184 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521206 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4521207 {B : Type'} (y : B) (x : B) (z : B) : (term2607 B x y z) = (term2608 B y x z).
Proof. exact (@lem4521206 (y = z) (term1200 B x z)). Qed.
Lemma lem4521217 {B : Type'} (x : B) (y : B) : (term2183 B x y) = (term2183 B x y).
Proof. exact (eq_refl (term2183 B x y)). Qed.
Lemma lem4521218 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2609 B y x z).
Proof. exact (MK_COMB (@lem4521217 B x y) (@lem4521207 B y x z)). Qed.
Lemma lem4521222 (q : Prop) (p : Prop) (r : Prop) : (term70 p q r) = (term70 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4521223 {B : Type'} (y : B) (x : B) (z : B) : (term2609 B y x z) = (term2610 B y x z).
Proof. exact (@lem4521222 (y = z) (term1200 B x y) (term1200 B x z)). Qed.
Lemma lem4521245 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2610 B y x z).
Proof. exact (TRANS (@lem4521218 B y x z) (@lem4521223 B y x z)). Qed.
Lemma lem4521246 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4521247 {B : Type'} (y : B) (x : B) (z : B) : (term2611 B x y z) = (term2612 B y x z).
Proof. exact (MK_COMB (@lem4521246) (@lem4521245 B y x z)). Qed.
Lemma lem4521251 (q : Prop) (p : Prop) (r : Prop) : (term70 p q r) = (term70 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4521252 {B : Type'} (x : B) (y : B) (z : B) : (term2626 B x y z) = (term2606 B x y z).
Proof. exact (@lem4521251 (term1200 B x y) (term1200 B x z) (y = z)). Qed.
Lemma lem4521268 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4521269 {B : Type'} (y : B) (x : B) (z : B) : (term2607 B x y z) = (term2608 B y x z).
Proof. exact (@lem4521268 (y = z) (term1200 B x z)). Qed.
Lemma lem4521279 {B : Type'} (x : B) (y : B) : (term2183 B x y) = (term2183 B x y).
Proof. exact (eq_refl (term2183 B x y)). Qed.
Lemma lem4521280 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2609 B y x z).
Proof. exact (MK_COMB (@lem4521279 B x y) (@lem4521269 B y x z)). Qed.
Lemma lem4521284 (q : Prop) (p : Prop) (r : Prop) : (term70 p q r) = (term70 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4521285 {B : Type'} (y : B) (x : B) (z : B) : (term2609 B y x z) = (term2610 B y x z).
Proof. exact (@lem4521284 (y = z) (term1200 B x y) (term1200 B x z)). Qed.
Lemma lem4521307 {B : Type'} (y : B) (x : B) (z : B) : (term2606 B x y z) = (term2610 B y x z).
Proof. exact (TRANS (@lem4521280 B y x z) (@lem4521285 B y x z)). Qed.
Lemma lem4521308 {B : Type'} (y : B) (x : B) (z : B) : (term2626 B x y z) = (term2610 B y x z).
Proof. exact (TRANS (@lem4521252 B x y z) (@lem4521307 B y x z)). Qed.
Lemma lem4521309 {B : Type'} (y : B) (x : B) (z : B) : ((term2606 B x y z) = (term2626 B x y z)) = ((term2610 B y x z) = (term2610 B y x z)).
Proof. exact (MK_COMB (@lem4521247 B y x z) (@lem4521308 B y x z)). Qed.
Lemma lem4521311 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4521312 (x : Prop) : (x = x) = True.
Proof. exact (@lem4521311 Prop x). Qed.
Lemma lem4521313 {B : Type'} (y : B) (x : B) (z : B) : ((term2610 B y x z) = (term2610 B y x z)) = True.
Proof. exact (@lem4521312 (term2610 B y x z)). Qed.
Lemma lem4521314 {B : Type'} (x : B) (y : B) (z : B) : ((term2606 B x y z) = (term2626 B x y z)) = True.
Proof. exact (TRANS (@lem4521309 B y x z) (@lem4521313 B y x z)). Qed.
Lemma lem4521315 {B : Type'} (x : B) (y : B) (z : B) : True = ((term2606 B x y z) = (term2626 B x y z)).
Proof. exact (SYM (@lem4521314 B x y z)). Qed.
Lemma lem4521316 {B : Type'} (x : B) (y : B) (z : B) : (term2606 B x y z) = (term2626 B x y z).
Proof. exact (EQ_MP (@lem4521315 B x y z) (@lem0)). Qed.
Lemma lem4521317 {B : Type'} (x : B) (y : B) (z : B) : term2626 B x y z.
Proof. exact (EQ_MP (@lem4521316 B x y z) (@lem4520939 B x y z)). Qed.
Lemma lem4521319 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4521320 {B : Type'} (y : B) (x : B) (z : B) : (term2626 B x y z) = (term2627 B y x z).
Proof. exact (@lem4521319 (term2628 B x y z) (term1200 B x z)). Qed.
Lemma lem4521322 (a : Prop) (b : Prop) : (term1384 a b) = (term1385 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4521323 {B : Type'} (x : B) (y : B) (z : B) : (term2629 B x y z) = (term2630 B x y z).
Proof. exact (@lem4521322 (term1200 B x y) (y = z)). Qed.
Lemma lem4521325 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4521326 {B : Type'} (x : B) (y : B) : (term1193 B x y) = (x = y).
Proof. exact (@lem4521325 (x = y)). Qed.
Lemma lem4521327 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4521328 {B : Type'} (x : B) (y : B) : (term1195 B x y) = (term1196 B x y).
Proof. exact (MK_COMB (@lem4521327) (@lem4521326 B x y)). Qed.
Lemma lem4521329 {B : Type'} (y : B) (z : B) : (term1200 B y z) = (term1200 B y z).
Proof. exact (eq_refl (term1200 B y z)). Qed.
Lemma lem4521330 {B : Type'} (x : B) (y : B) (z : B) : (term2630 B x y z) = (term2631 B x y z).
Proof. exact (MK_COMB (@lem4521328 B x y) (@lem4521329 B y z)). Qed.
Lemma lem4521331 {B : Type'} (x : B) (y : B) (z : B) : (term2629 B x y z) = (term2631 B x y z).
Proof. exact (TRANS (@lem4521323 B x y z) (@lem4521330 B x y z)). Qed.
Lemma lem4521332 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4521333 {B : Type'} (x : B) (y : B) (z : B) : (term2632 B x y z) = (term2633 B x y z).
Proof. exact (MK_COMB (@lem4521332) (@lem4521331 B x y z)). Qed.
Lemma lem4521334 {B : Type'} (x : B) (z : B) : (term1200 B x z) = (term1200 B x z).
Proof. exact (eq_refl (term1200 B x z)). Qed.
Lemma lem4521335 {B : Type'} (y : B) (x : B) (z : B) : (term2627 B y x z) = (term2634 B y x z).
Proof. exact (MK_COMB (@lem4521333 B x y z) (@lem4521334 B x z)). Qed.
Lemma lem4521336 {B : Type'} (y : B) (x : B) (z : B) : (term2626 B x y z) = (term2634 B y x z).
Proof. exact (TRANS (@lem4521320 B y x z) (@lem4521335 B y x z)). Qed.
Lemma lem4521338 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2635 A B d p2 p2' a.
Proof. exact (conj (@lem4521181 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2) (@lem4521188 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h2)). Qed.
Lemma lem4521340 {B : Type'} (y : B) (x : B) (z : B) : term2634 B y x z.
Proof. exact (EQ_MP (@lem4521336 B y x z) (@lem4521317 B x y z)). Qed.
Lemma lem4521341 {B : Type'} (y : B) (x : B) (z : B) : term2634 B y x z.
Proof. exact (@lem4521340 B y x z). Qed.
Lemma lem4521342 {A B : Type'} (p2 : A -> B) (d : B) (p2' : A -> B) (a : A) : term2636 A B p2 d p2' a.
Proof. exact (@lem4521341 B (@I (A -> B) p2 a) d (@I (A -> B) p2' a)). Qed.
Lemma lem4521345 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2624 A B d p2' a.
Proof. exact (@lem4521342 A B p2 d p2' a (@lem4521338 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521346 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2637 A B d p2' a.
Proof. exact (fun h0 : d = (@I (A -> B) p2' a) => @lem4521345 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2). Qed.
Lemma lem4521348 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4521349 {A B : Type'} (d : B) (p2' : A -> B) (a : A) : (term2637 A B d p2' a) = (term2624 A B d p2' a).
Proof. exact (@lem4521348 (d = (@I (A -> B) p2' a))). Qed.
Lemma lem4521350 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2624 A B d p2' a.
Proof. exact (EQ_MP (@lem4521349 A B d p2' a) (@lem4521346 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521352 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4521353 {B : Type'} (z : B) (x : B) (y : B) : (term2606 B x y z) = (term2638 B z x y).
Proof. exact (@lem4521352 (term2607 B x y z) (term1200 B x y)). Qed.
Lemma lem4521355 (a : Prop) (b : Prop) : (term1384 a b) = (term1385 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4521356 {B : Type'} (x : B) (y : B) (z : B) : (term2639 B x y z) = (term2640 B x y z).
Proof. exact (@lem4521355 (term1200 B x z) (y = z)). Qed.
Lemma lem4521358 (a : Prop) : (term654 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4521359 {B : Type'} (x : B) (z : B) : (term1193 B x z) = (x = z).
Proof. exact (@lem4521358 (x = z)). Qed.
Lemma lem4521360 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4521361 {B : Type'} (x : B) (z : B) : (term1195 B x z) = (term1196 B x z).
Proof. exact (MK_COMB (@lem4521360) (@lem4521359 B x z)). Qed.
Lemma lem4521362 {B : Type'} (y : B) (z : B) : (term1200 B y z) = (term1200 B y z).
Proof. exact (eq_refl (term1200 B y z)). Qed.
Lemma lem4521363 {B : Type'} (x : B) (y : B) (z : B) : (term2640 B x y z) = (term2641 B x y z).
Proof. exact (MK_COMB (@lem4521361 B x z) (@lem4521362 B y z)). Qed.
Lemma lem4521364 {B : Type'} (x : B) (y : B) (z : B) : (term2639 B x y z) = (term2641 B x y z).
Proof. exact (TRANS (@lem4521356 B x y z) (@lem4521363 B x y z)). Qed.
Lemma lem4521365 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4521366 {B : Type'} (x : B) (y : B) (z : B) : (term2642 B x y z) = (term2643 B x y z).
Proof. exact (MK_COMB (@lem4521365) (@lem4521364 B x y z)). Qed.
Lemma lem4521367 {B : Type'} (x : B) (y : B) : (term1200 B x y) = (term1200 B x y).
Proof. exact (eq_refl (term1200 B x y)). Qed.
Lemma lem4521368 {B : Type'} (z : B) (x : B) (y : B) : (term2638 B z x y) = (term2644 B z x y).
Proof. exact (MK_COMB (@lem4521366 B x y z) (@lem4521367 B x y)). Qed.
Lemma lem4521369 {B : Type'} (z : B) (x : B) (y : B) : (term2606 B x y z) = (term2644 B z x y).
Proof. exact (TRANS (@lem4521353 B z x y) (@lem4521368 B z x y)). Qed.
Lemma lem4521371 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2645 A B d p2' a.
Proof. exact (conj (@lem4520988 A B p2' a) (@lem4521350 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521373 {B : Type'} (z : B) (x : B) (y : B) : term2644 B z x y.
Proof. exact (EQ_MP (@lem4521369 B z x y) (@lem4520939 B x y z)). Qed.
Lemma lem4521374 {B : Type'} (z : B) (x : B) (y : B) : term2644 B z x y.
Proof. exact (@lem4521373 B z x y). Qed.
Lemma lem4521375 {A B : Type'} (p2' : A -> B) (a : A) (d : B) : term2646 A B p2' a d.
Proof. exact (@lem4521374 B (@I (A -> B) p2' a) (@I (A -> B) p2' a) d). Qed.
Lemma lem4521378 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1340 A B p2' a d.
Proof. exact (@lem4521375 A B p2' a d (@lem4521371 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521379 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2647 A B p2' a d.
Proof. exact (fun h0 : (@I (A -> B) p2' a) = d => @lem4521378 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2). Qed.
Lemma lem4521381 (p : Prop) : (term1374 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4521382 {A B : Type'} (p2' : A -> B) (a : A) (d : B) : (term2647 A B p2' a d) = (term1340 A B p2' a d).
Proof. exact (@lem4521381 ((@I (A -> B) p2' a) = d)). Qed.
Lemma lem4521383 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1340 A B p2' a d.
Proof. exact (EQ_MP (@lem4521382 A B p2' a d) (@lem4521379 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521385 (b : Prop) (a : Prop) : (a \/ b) = (term1382 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4521388 {A B : Type'} (p2' : A -> B) (d : B) (_53595 : A) (s : A -> Prop) : (term1376 A B s p2' _53595 d) = (term2648 A B p2' d _53595 s).
Proof. exact (@lem4521385 ((@I (A -> B) p2' _53595) = d) (term1322 A _53595 s)). Qed.
Lemma lem4521391 {A B : Type'} (_53595 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2648 A B p2' d _53595 s.
Proof. exact (EQ_MP (@lem4521388 A B p2' d _53595 s) (@lem4520558 A B _53595 s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521392 {A B : Type'} (_53595 : A) (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2648 A B p2' d _53595 s.
Proof. exact (@lem4521391 A B _53595 s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521393 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term2648 A B p2' d a s.
Proof. exact (@lem4521392 A B a s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521396 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term1323 A a s) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1322 A a s.
Proof. exact (@lem4521393 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h2 (@lem4521383 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h2)). Qed.
Lemma lem4521397 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1404 A a s.
Proof. exact (fun h0 : term1323 A a s => @lem4521396 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h0 h1). Qed.
Lemma lem4521399 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4521400 {A : Type'} (a : A) (s : A -> Prop) : (term1404 A a s) = (term1322 A a s).
Proof. exact (@lem4521399 (term1322 A a s)). Qed.
Lemma lem4521401 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1322 A a s.
Proof. exact (EQ_MP (@lem4521400 A a s) (@lem4521397 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521404 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4521406 {A : Type'} (a : A) (s : A -> Prop) : (term1323 A a s) = (term1856 A a s).
Proof. exact (@lem4521404 (term1322 A a s)). Qed.
Lemma lem4521409 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1856 A a s.
Proof. exact (EQ_MP (@lem4521406 A a s) (@lem4520446 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521412 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : False.
Proof. exact (@lem4521409 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 (@lem4521401 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521413 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : term1372.
Proof. exact (fun h0 : ~ False => @lem4521412 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1). Qed.
Lemma lem4521415 (p : Prop) : (term1370 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4521416 : term1372 = False.
Proof. exact (@lem4521415 False). Qed.
Lemma lem4521420 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : False.
Proof. exact (EQ_MP (@lem4521416) (@lem4521413 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1)). Qed.
Lemma lem4521421 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2553 A B s0 a _53582 n m t s d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4517433 A B _53582 h1) (fun f : type838 A B => fun h0 : term1176 A B _53582 f => @lem4521420 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h2)). Qed.
Lemma lem4521422 {A B : Type'} (s0 : A -> Prop) (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2556 A B s0 a _53582 m t s d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518662 A B s0 a _53582 m t s d p1 p1' p2 p2' x h2) (fun n : nat => fun h0 : term2555 A B s0 a _53582 m t s d p1 p1' p2 p2' x n => @lem4521421 A B s0 a _53582 n m t s d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521423 {A B : Type'} (a : A) (_53582 : type839 A B) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2558 A B a _53582 m t s d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518661 A B a _53582 m t s d p1 p1' p2 p2' x h2) (fun s0 : A -> Prop => fun h0 : term2557 A B a _53582 m t s d p1 p1' p2 p2' x s0 => @lem4521422 A B s0 a _53582 m t s d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521424 {A B : Type'} (a : A) (_53582 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2560 A B a _53582 t s d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518660 A B a _53582 t s d p1 p1' p2 p2' x h2) (fun m : nat => fun h0 : term2559 A B a _53582 t s d p1 p1' p2 p2' x m => @lem4521423 A B a _53582 m t s d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521425 {A B : Type'} (a : A) (_53582 : type839 A B) (s : A -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2562 A B a _53582 s d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518659 A B a _53582 s d p1 p1' p2 p2' x h2) (fun t : B -> Prop => fun h0 : term2561 A B a _53582 s d p1 p1' p2 p2' x t => @lem4521424 A B a _53582 t s d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521426 {A B : Type'} (a : A) (_53582 : type839 A B) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2564 A B a _53582 d p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518658 A B a _53582 d p1 p1' p2 p2' x h2) (fun s : A -> Prop => fun h0 : term2563 A B a _53582 d p1 p1' p2 p2' x s => @lem4521425 A B a _53582 s d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521427 {A B : Type'} (a : A) (_53582 : type839 A B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2566 A B a _53582 p1 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518657 A B a _53582 p1 p1' p2 p2' x h2) (fun d : B => fun h0 : term2565 A B a _53582 p1 p1' p2 p2' x d => @lem4521426 A B a _53582 d p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521428 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2199 A B a _53582 p1' p2 p2' x) : False.
Proof. exact (ex_elim (@lem4518656 A B a _53582 p1' p2 p2' x h2) (fun p1 : B => fun h0 : term2567 A B a _53582 p1' p2 p2' x p1 => @lem4521427 A B a _53582 p1 p1' p2 p2' x h1 h0)). Qed.
Lemma lem4521429 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2199 A B a _53582 p1' p2 p2' x) : (term2199 A B a _53582 p1' p2 p2' x) = False.
Proof. exact (prop_ext (fun h3 : term2199 A B a _53582 p1' p2 p2' x => @lem4521428 A B a _53582 p1' p2 p2' x h1 h2) (fun h3 : False => @lem4516551 A B a _53582 p1' p2 p2' x h2)). Qed.
Lemma lem4521430 {A B : Type'} (a : A) (_53582 : type839 A B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (h1 : term805 A B _53582) (h2 : term2199 A B a _53582 p1' p2 p2' x) : False.
Proof. exact (EQ_MP (@lem4521429 A B a _53582 p1' p2 p2' x h1 h2) (@lem4516551 A B a _53582 p1' p2 p2' x h2)). Qed.
Lemma lem4521431 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2198 A B a _53582 p1' p2 p2' x.
Proof. exact (fun h0 : term2199 A B a _53582 p1' p2 p2' x => @lem4521430 A B a _53582 p1' p2 p2' x h1 h0). Qed.
Lemma lem4521432 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2182 A B a _53582 p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4516550 A B a _53582 p1' p2 p2' x) (@lem4521431 A B a p1' p2 p2' x _53582 h1)). Qed.
Lemma lem4521437 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2186 A B _53582 p1' p2 p2' x.
Proof. exact (fun a : A => @lem4521432 A B a p1' p2 p2' x _53582 h1). Qed.
Lemma lem4521442 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2188 A B _53582 p2 p2' x.
Proof. exact (fun p1' : B => @lem4521437 A B p1' p2 p2' x _53582 h1). Qed.
Lemma lem4521447 {A B : Type'} (p2' : A -> B) (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2190 A B _53582 p2' x.
Proof. exact (fun p2 : A -> B => @lem4521442 A B p2 p2' x _53582 h1). Qed.
Lemma lem4521452 {A B : Type'} (x : A) (_53582 : type839 A B) (h1 : term805 A B _53582) : term2192 A B _53582 x.
Proof. exact (fun p2' : A -> B => @lem4521447 A B p2' x _53582 h1). Qed.
Lemma lem4521457 {A B : Type'} (_53582 : type839 A B) (h1 : term805 A B _53582) : term2194 A B _53582.
Proof. exact (fun x : A => @lem4521452 A B x _53582 h1). Qed.
Lemma lem4521458 {A B : Type'} (_53582 : type839 A B) : term2195 A B _53582.
Proof. exact (fun h0 : term805 A B _53582 => @lem4521457 A B _53582 h0). Qed.
Lemma lem4521463 {A B : Type'} : term2197 A B.
Proof. exact (fun _53582 : type839 A B => @lem4521458 A B _53582). Qed.
Lemma lem4521464 {A B : Type'} : term2080 A B.
Proof. exact (EQ_MP (@lem4516545 A B) (@lem4521463 A B)). Qed.
Lemma lem4521465 {A B : Type'} (x : A) : term2649 A B x.
Proof. exact (@lem4521464 A B x). Qed.
Lemma lem4521466 {A B : Type'} (x : A) : (term2649 A B x) = (term2076 A B x).
Proof. exact (eq_refl (term2649 A B x)). Qed.
Lemma lem4521467 {A B : Type'} (x : A) : term2076 A B x.
Proof. exact (EQ_MP (@lem4521466 A B x) (@lem4521465 A B x)). Qed.
Lemma lem4521468 {A B : Type'} (x : A) (p2' : A -> B) : term2650 A B x p2'.
Proof. exact (@lem4521467 A B x p2'). Qed.
Lemma lem4521469 {A B : Type'} (p2' : A -> B) (x : A) : (term2650 A B x p2') = (term2072 A B p2' x).
Proof. exact (eq_refl (term2650 A B x p2')). Qed.
Lemma lem4521470 {A B : Type'} (p2' : A -> B) (x : A) : term2072 A B p2' x.
Proof. exact (EQ_MP (@lem4521469 A B p2' x) (@lem4521468 A B x p2')). Qed.
Lemma lem4521471 {A B : Type'} (p2' : A -> B) (x : A) (p2 : A -> B) : term2651 A B p2' x p2.
Proof. exact (@lem4521470 A B p2' x p2). Qed.
Lemma lem4521472 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : (term2651 A B p2' x p2) = (term2068 A B p2 p2' x).
Proof. exact (eq_refl (term2651 A B p2' x p2)). Qed.
Lemma lem4521473 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) : term2068 A B p2 p2' x.
Proof. exact (EQ_MP (@lem4521472 A B p2 p2' x) (@lem4521471 A B p2' x p2)). Qed.
Lemma lem4521474 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (p1' : B) : term2652 A B p2 p2' x p1'.
Proof. exact (@lem4521473 A B p2 p2' x p1'). Qed.
Lemma lem4521475 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2652 A B p2 p2' x p1') = (term2064 A B p1' p2 p2' x).
Proof. exact (eq_refl (term2652 A B p2 p2' x p1')). Qed.
Lemma lem4521476 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2064 A B p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521475 A B p1' p2 p2' x) (@lem4521474 A B p2 p2' x p1')). Qed.
Lemma lem4521477 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) : term2653 A B p1' p2 p2' x a.
Proof. exact (@lem4521476 A B p1' p2 p2' x a). Qed.
Lemma lem4521478 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2653 A B p1' p2 p2' x a) = (term2060 A B a p1' p2 p2' x).
Proof. exact (eq_refl (term2653 A B p1' p2 p2' x a)). Qed.
Lemma lem4521479 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2060 A B a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521478 A B a p1' p2 p2' x) (@lem4521477 A B p1' p2 p2' x a)). Qed.
Lemma lem4521480 {A B : Type'} (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (p1 : B) : term2654 A B a p1' p2 p2' x p1.
Proof. exact (@lem4521479 A B a p1' p2 p2' x p1). Qed.
Lemma lem4521481 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2654 A B a p1' p2 p2' x p1) = (term2056 A B p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2654 A B a p1' p2 p2' x p1)). Qed.
Lemma lem4521482 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2056 A B p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521481 A B p1 a p1' p2 p2' x) (@lem4521480 A B a p1' p2 p2' x p1)). Qed.
Lemma lem4521483 {A B : Type'} (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (d : B) : term2655 A B p1 a p1' p2 p2' x d.
Proof. exact (@lem4521482 A B p1 a p1' p2 p2' x d). Qed.
Lemma lem4521484 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2655 A B p1 a p1' p2 p2' x d) = (term2052 A B d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2655 A B p1 a p1' p2 p2' x d)). Qed.
Lemma lem4521485 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2052 A B d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521484 A B d p1 a p1' p2 p2' x) (@lem4521483 A B p1 a p1' p2 p2' x d)). Qed.
Lemma lem4521486 {A B : Type'} (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s : A -> Prop) : term2656 A B d p1 a p1' p2 p2' x s.
Proof. exact (@lem4521485 A B d p1 a p1' p2 p2' x s). Qed.
Lemma lem4521487 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2656 A B d p1 a p1' p2 p2' x s) = (term2048 A B s d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2656 A B d p1 a p1' p2 p2' x s)). Qed.
Lemma lem4521488 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2048 A B s d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521487 A B s d p1 a p1' p2 p2' x) (@lem4521486 A B d p1 a p1' p2 p2' x s)). Qed.
Lemma lem4521489 {A B : Type'} (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (t : B -> Prop) : term2657 A B s d p1 a p1' p2 p2' x t.
Proof. exact (@lem4521488 A B s d p1 a p1' p2 p2' x t). Qed.
Lemma lem4521490 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2657 A B s d p1 a p1' p2 p2' x t) = (term2044 A B t s d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2657 A B s d p1 a p1' p2 p2' x t)). Qed.
Lemma lem4521491 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2044 A B t s d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521490 A B t s d p1 a p1' p2 p2' x) (@lem4521489 A B s d p1 a p1' p2 p2' x t)). Qed.
Lemma lem4521492 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (m : nat) : term2658 A B t s d p1 a p1' p2 p2' x m.
Proof. exact (@lem4521491 A B t s d p1 a p1' p2 p2' x m). Qed.
Lemma lem4521493 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2658 A B t s d p1 a p1' p2 p2' x m) = (term2040 A B m t s d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2658 A B t s d p1 a p1' p2 p2' x m)). Qed.
Lemma lem4521494 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2040 A B m t s d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521493 A B m t s d p1 a p1' p2 p2' x) (@lem4521492 A B t s d p1 a p1' p2 p2' x m)). Qed.
Lemma lem4521495 {A B : Type'} (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (n : nat) : term2659 A B m t s d p1 a p1' p2 p2' x n.
Proof. exact (@lem4521494 A B m t s d p1 a p1' p2 p2' x n). Qed.
Lemma lem4521496 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2659 A B m t s d p1 a p1' p2 p2' x n) = (term2036 A B n m t s d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2659 A B m t s d p1 a p1' p2 p2' x n)). Qed.
Lemma lem4521497 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2036 A B n m t s d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521496 A B n m t s d p1 a p1' p2 p2' x) (@lem4521495 A B m t s d p1 a p1' p2 p2' x n)). Qed.
Lemma lem4521498 {A B : Type'} (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) : term2660 A B n m t s d p1 a p1' p2 p2' x s0.
Proof. exact (@lem4521497 A B n m t s d p1 a p1' p2 p2' x s0). Qed.
Lemma lem4521499 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : (term2660 A B n m t s d p1 a p1' p2 p2' x s0) = (term2008 A B s0 n m t s d p1 a p1' p2 p2' x).
Proof. exact (eq_refl (term2660 A B n m t s d p1 a p1' p2 p2' x s0)). Qed.
Lemma lem4521500 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4521499 A B s0 n m t s d p1 a p1' p2 p2' x) (@lem4521498 A B n m t s d p1 a p1' p2 p2' x s0)). Qed.
Lemma lem4521502 {A B : Type'} (s0 : A -> Prop) (n : nat) (m : nat) (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) : term2008 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4515180 A B s0 n m t s d p1 a p1' p2 p2' x (@lem4521500 A B s0 n m t s d p1 a p1' p2 p2' x)). Qed.
Lemma lem4521503 {A B : Type'} (s0 : A -> Prop) (n : nat) (t : B -> Prop) (d : B) (p1 : B) (a : A) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s : A -> Prop) (m : nat) (h1 : @HAS_SIZE A s m) : term2031 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521502 A B s0 n m t s d p1 a p1' p2 p2' x (@lem4493112 A s m h1)). Qed.
Lemma lem4521504 {A B : Type'} (s0 : A -> Prop) (n : nat) (t : B -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : @HAS_SIZE A s m) : term2029 A B s0 n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521503 A B s0 n t d p1 a p1' p2 p2' x s m h2 (@lem4493114 A a s h1)). Qed.
Lemma lem4521505 {A B : Type'} (n : nat) (t : B -> Prop) (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) : term2027 A B n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521504 A B s0 n t d p1 p1' p2 p2' x a s m h1 h3 (@lem4493113 A s0 a s h2)). Qed.
Lemma lem4521506 {A B : Type'} (d : B) (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term2025 A B n m t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521505 A B n t d p1 p1' p2 p2' x s0 a s m h1 h2 h3 (@lem4493109 B t n h4)). Qed.
Lemma lem4521507 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term2023 A B t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521506 A B d p1 p1' p2 p2' x s0 a s m t n h1 h2 h3 h4 (@lem4493274 A B t s d n m h5)). Qed.
Lemma lem4521508 {A B : Type'} (p1' : B) (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) (h6 : @IN B p1 t) : term2021 A B t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521507 A B p1 p1' p2 p2' x s0 a t s d n m h1 h2 h3 h4 h5 (@lem4515115 B p1 t h6)). Qed.
Lemma lem4521509 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) (p2 : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term174 A B s p2 t) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) (h7 : @IN B p1 t) : term2019 A B t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521508 A B p1' p2 p2' x s0 a s d n m p1 t h2 h3 h4 h5 h6 h7 (@lem4515114 A B s p2 t h1)). Qed.
Lemma lem4521510 {A B : Type'} (p1' : B) (p2' : A -> B) (x : A) (p2 : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term174 A B s p2 t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) (h8 : @IN B p1 t) : term2017 A B t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521509 A B p1' p2' x p2 s0 a s d n m p1 t h2 h3 h4 h5 h6 h7 h8 (@lem4515112 A B s p2 d h1)). Qed.
Lemma lem4521511 {A B : Type'} (p2' : A -> B) (x : A) (p2 : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term174 A B s p2 t) (h3 : term178 A a s) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) (h8 : @IN B p1 t) (h9 : @IN B p1' t) : term2015 A B t s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521510 A B p1' p2' x p2 s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 (@lem4515119 B p1' t h9)). Qed.
Lemma lem4521512 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term174 A B s p2 t) (h3 : term174 A B s p2' t) (h4 : term178 A a s) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) (h9 : @IN B p1 t) (h10 : @IN B p1' t) : term2013 A B s d p1 a p1' p2 p2' x.
Proof. exact (@lem4521511 A B p2' x p2 s0 a s d n m p1 p1' t h1 h2 h4 h5 h6 h7 h8 h9 h10 (@lem4515118 A B s p2' t h3)). Qed.
Lemma lem4521513 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term178 A a s) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) (h11 : @IN B p1' t) : term2006 A B p1 a p1' p2 p2' x.
Proof. exact (@lem4521512 A B x p2 p2' s0 a s d n m p1 p1' t h1 h3 h4 h5 h6 h7 h8 h9 h10 h11 (@lem4515116 A B s p2' d h2)). Qed.
Lemma lem4521514 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term2007 A B p1 a p1' p2 p2' x) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : False.
Proof. exact (@lem4521513 A B x p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h6 h7 h8 h9 h10 h11 h12 (@lem4515164 A B p1 a p1' p2 p2' x h5)). Qed.
Lemma lem4521515 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term2007 A B p1 a p1' p2 p2' x) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (term2007 A B p1 a p1' p2 p2' x) = False.
Proof. exact (prop_ext (fun h13 : term2007 A B p1 a p1' p2 p2' x => @lem4521514 A B p2 p2' x s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : False => @lem4515164 A B p1 a p1' p2 p2' x h5)). Qed.
Lemma lem4521516 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (x : A) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term2007 A B p1 a p1' p2 p2' x) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : False.
Proof. exact (EQ_MP (@lem4521515 A B p2 p2' x s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4515164 A B p1 a p1' p2 p2' x h5)). Qed.
Lemma lem4521517 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term178 A a s) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) (h11 : @IN B p1' t) : term2006 A B p1 a p1' p2 p2' x.
Proof. exact (fun h0 : term2007 A B p1 a p1' p2 p2' x => @lem4521516 A B p2 p2' x s0 a s d n m p1 p1' t h1 h2 h3 h4 h0 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4521518 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term184 A B s p2 d) (h2 : term184 A B s p2' d) (h3 : term174 A B s p2 t) (h4 : term174 A B s p2' t) (h5 : term178 A a s) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) (h11 : @IN B p1' t) : term2005 A B p1 a p1' p2 p2' x.
Proof. exact (EQ_MP (@lem4515163 A B p1 a p1' p2 p2' x) (@lem4521517 A B x p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem4521519 {A B : Type'} (x : A) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (p2 x) = (p2' x).
Proof. exact (@lem4521518 A B x p2 p2' s0 a s d n m p1 p1' t h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 (@lem4515159 A B x p1 p2 a p1' p2' h1)). Qed.
Lemma lem4521524 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term3 A B p2 p2'.
Proof. exact (fun x : A => @lem4521519 A B x p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4521525 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (conj (@lem4515156 A B p1 p2 a p1' p2' h1) (@lem4521524 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem4521526 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1984 A B t s d p1 p2 a p1' p2') : term1983 A B p1 p2 a p1' p2'.
Proof. exact (proj2 (@lem4515107 A B t s d p1 p2 a p1' p2' h1)). Qed.
Lemma lem4521527 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (p1 : B) (p2 : A -> B) (a : A) (p1' : B) (p2' : A -> B) (h1 : term1984 A B t s d p1 p2 a p1' p2') : term1967 A B p1 p2 p1' t s p2' d.
Proof. exact (proj1 (@lem4515107 A B t s d p1 p2 a p1' p2' h1)). Qed.
Lemma lem4521528 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (term1983 A B p1 p2 a p1' p2') = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h13 : term1983 A B p1 p2 a p1' p2' => @lem4521525 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : term1986 A B p1 p1' p2 p2' => @lem4515108 A B p1 p2 a p1' p2' h1)). Qed.
Lemma lem4521529 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521528 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4515108 A B p1 p2 a p1' p2' h1)). Qed.
Lemma lem4521530 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term1967 A B p1 p2 p1' t s p2' d) : term543 A B p1' t s p2' d.
Proof. exact (proj2 (@lem4515109 A B p1 p2 p1' t s p2' d h1)). Qed.
Lemma lem4521531 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term1967 A B p1 p2 p1' t s p2' d) : term543 A B p1 t s p2 d.
Proof. exact (proj1 (@lem4515109 A B p1 p2 p1' t s p2' d h1)). Qed.
Lemma lem4521532 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term543 A B p1' t s p2' d) : term184 A B s p2' d.
Proof. exact (proj2 (@lem4515110 A B p1' t s p2' d h1)). Qed.
Lemma lem4521533 {A B : Type'} (p1' : B) (t : B -> Prop) (s : A -> Prop) (p2' : A -> B) (d : B) (h1 : term543 A B p1' t s p2' d) : term573 A B p1' s p2' t.
Proof. exact (proj1 (@lem4515110 A B p1' t s p2' d h1)). Qed.
Lemma lem4521534 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (term184 A B s p2' d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h13 : term184 A B s p2' d => @lem4521529 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : term1986 A B p1 p1' p2 p2' => @lem4515116 A B s p2' d h3)). Qed.
Lemma lem4521535 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521534 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4515116 A B s p2' d h3)). Qed.
Lemma lem4521536 {A B : Type'} (p1' : B) (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) (h1 : term573 A B p1' s p2' t) : term174 A B s p2' t.
Proof. exact (proj2 (@lem4515117 A B p1' s p2' t h1)). Qed.
Lemma lem4521537 {A B : Type'} (p1' : B) (s : A -> Prop) (p2' : A -> B) (t : B -> Prop) (h1 : term573 A B p1' s p2' t) : @IN B p1' t.
Proof. exact (proj1 (@lem4515117 A B p1' s p2' t h1)). Qed.
Lemma lem4521538 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (term174 A B s p2' t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h13 : term174 A B s p2' t => @lem4521535 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : term1986 A B p1 p1' p2 p2' => @lem4515118 A B s p2' t h5)). Qed.
Lemma lem4521539 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521538 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4515118 A B s p2' t h5)). Qed.
Lemma lem4521540 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (@IN B p1' t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h13 : @IN B p1' t => @lem4521539 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : term1986 A B p1 p1' p2 p2' => @lem4515119 B p1' t h12)). Qed.
Lemma lem4521541 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term174 A B s p2' t) (h6 : term178 A a s) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521540 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4515119 B p1' t h12)). Qed.
Lemma lem4521542 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term178 A a s) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : (term174 A B s p2' t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h13 : term174 A B s p2' t => @lem4521541 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h13 h5 h7 h8 h9 h10 h11 h12) (fun h13 : term1986 A B p1 p1' p2 p2' => @lem4521536 A B p1' s p2' t h6)). Qed.
Lemma lem4521543 {A B : Type'} (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (p1' : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term178 A a s) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) (h12 : @IN B p1' t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521542 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem4521536 A B p1' s p2' t h6)). Qed.
Lemma lem4521544 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term178 A a s) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) : (@IN B p1' t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h12 : @IN B p1' t => @lem4521543 A B p2 p2' s0 a s d n m p1 p1' t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h12 : term1986 A B p1 p1' p2 p2' => @lem4521537 A B p1' s p2' t h6)). Qed.
Lemma lem4521545 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term184 A B s p2' d) (h4 : term174 A B s p2 t) (h5 : term178 A a s) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521544 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem4521537 A B p1' s p2' t h6)). Qed.
Lemma lem4521546 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) : (term184 A B s p2' d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h12 : term184 A B s p2' d => @lem4521545 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h12 h3 h4 h6 h7 h8 h9 h10 h11) (fun h12 : term1986 A B p1 p1' p2 p2' => @lem4521532 A B p1' t s p2' d h5)). Qed.
Lemma lem4521547 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : term573 A B p1' s p2' t) (h7 : s0 = (@INSERT A a s)) (h8 : @HAS_SIZE A s m) (h9 : @HAS_SIZE B t n) (h10 : term349 A B t s d n m) (h11 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521546 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem4521532 A B p1' t s p2' d h5)). Qed.
Lemma lem4521548 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : (term573 A B p1' s p2' t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h11 : term573 A B p1' s p2' t => @lem4521547 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h11 h6 h7 h8 h9 h10) (fun h11 : term1986 A B p1 p1' p2 p2' => @lem4521533 A B p1' t s p2' d h5)). Qed.
Lemma lem4521549 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521548 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4521533 A B p1' t s p2' d h5)). Qed.
Lemma lem4521550 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (h1 : term543 A B p1 t s p2 d) : term184 A B s p2 d.
Proof. exact (proj2 (@lem4515111 A B p1 t s p2 d h1)). Qed.
Lemma lem4521551 {A B : Type'} (p1 : B) (t : B -> Prop) (s : A -> Prop) (p2 : A -> B) (d : B) (h1 : term543 A B p1 t s p2 d) : term573 A B p1 s p2 t.
Proof. exact (proj1 (@lem4515111 A B p1 t s p2 d h1)). Qed.
Lemma lem4521552 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : (term184 A B s p2 d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h11 : term184 A B s p2 d => @lem4521549 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1986 A B p1 p1' p2 p2' => @lem4515112 A B s p2 d h2)). Qed.
Lemma lem4521553 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521552 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4515112 A B s p2 d h2)). Qed.
Lemma lem4521554 {A B : Type'} (p1 : B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) (h1 : term573 A B p1 s p2 t) : term174 A B s p2 t.
Proof. exact (proj2 (@lem4515113 A B p1 s p2 t h1)). Qed.
Lemma lem4521555 {A B : Type'} (p1 : B) (s : A -> Prop) (p2 : A -> B) (t : B -> Prop) (h1 : term573 A B p1 s p2 t) : @IN B p1 t.
Proof. exact (proj1 (@lem4515113 A B p1 s p2 t h1)). Qed.
Lemma lem4521556 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : (term174 A B s p2 t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h11 : term174 A B s p2 t => @lem4521553 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1986 A B p1 p1' p2 p2' => @lem4515114 A B s p2 t h3)). Qed.
Lemma lem4521557 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521556 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4515114 A B s p2 t h3)). Qed.
Lemma lem4521558 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : (@IN B p1 t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h11 : @IN B p1 t => @lem4521557 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1986 A B p1 p1' p2 p2' => @lem4515115 B p1 t h10)). Qed.
Lemma lem4521559 {A B : Type'} (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term174 A B s p2 t) (h4 : term178 A a s) (h5 : term543 A B p1' t s p2' d) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521558 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4515115 B p1 t h10)). Qed.
Lemma lem4521560 {A B : Type'} (p1' : B) (p2' : A -> B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term178 A a s) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : (term174 A B s p2 t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h11 : term174 A B s p2 t => @lem4521559 A B p2 p1' p2' s0 a s d n m p1 t h1 h2 h11 h3 h4 h6 h7 h8 h9 h10) (fun h11 : term1986 A B p1 p1' p2 p2' => @lem4521554 A B p1 s p2 t h5)). Qed.
Lemma lem4521561 {A B : Type'} (p1' : B) (p2' : A -> B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (d : B) (n : nat) (m : nat) (p1 : B) (t : B -> Prop) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term178 A a s) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) (h10 : @IN B p1 t) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521560 A B p1' p2' p2 s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4521554 A B p1 s p2 t h5)). Qed.
Lemma lem4521562 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term178 A a s) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : (@IN B p1 t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h10 : @IN B p1 t => @lem4521561 A B p1' p2' p2 s0 a s d n m p1 t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h10 : term1986 A B p1 p1' p2 p2' => @lem4521555 A B p1 s p2 t h5)). Qed.
Lemma lem4521563 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term184 A B s p2 d) (h3 : term178 A a s) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521562 A B p1' p2' p1 p2 s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4521555 A B p1 s p2 t h5)). Qed.
Lemma lem4521564 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term543 A B p1 t s p2 d) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : (term184 A B s p2 d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h10 : term184 A B s p2 d => @lem4521563 A B p1' p2' p1 p2 s0 a t s d n m h1 h10 h2 h4 h5 h6 h7 h8 h9) (fun h10 : term1986 A B p1 p1' p2 p2' => @lem4521550 A B p1 t s p2 d h3)). Qed.
Lemma lem4521565 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term543 A B p1 t s p2 d) (h4 : term543 A B p1' t s p2' d) (h5 : term573 A B p1 s p2 t) (h6 : s0 = (@INSERT A a s)) (h7 : @HAS_SIZE A s m) (h8 : @HAS_SIZE B t n) (h9 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521564 A B p1' p2' p1 p2 s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4521550 A B p1 t s p2 d h3)). Qed.
Lemma lem4521566 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term543 A B p1 t s p2 d) (h4 : term543 A B p1' t s p2' d) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : (term573 A B p1 s p2 t) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h9 : term573 A B p1 s p2 t => @lem4521565 A B p1' p2' p1 p2 s0 a t s d n m h1 h2 h3 h4 h9 h5 h6 h7 h8) (fun h9 : term1986 A B p1 p1' p2 p2' => @lem4521551 A B p1 t s p2 d h3)). Qed.
Lemma lem4521567 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term543 A B p1 t s p2 d) (h4 : term543 A B p1' t s p2' d) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521566 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (@lem4521551 A B p1 t s p2 d h3)). Qed.
Lemma lem4521568 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : term543 A B p1 t s p2 d) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : (term543 A B p1' t s p2' d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h9 : term543 A B p1' t s p2' d => @lem4521567 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h4 h9 h5 h6 h7 h8) (fun h9 : term1986 A B p1 p1' p2 p2' => @lem4521530 A B p1 p2 p1' t s p2' d h3)). Qed.
Lemma lem4521569 {A B : Type'} (p1' : B) (p2' : A -> B) (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : term543 A B p1 t s p2 d) (h5 : s0 = (@INSERT A a s)) (h6 : @HAS_SIZE A s m) (h7 : @HAS_SIZE B t n) (h8 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521568 A B p1' p2' p1 p2 s0 a t s d n m h1 h2 h3 h4 h5 h6 h7 h8) (@lem4521530 A B p1 p2 p1' t s p2' d h3)). Qed.
Lemma lem4521570 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term543 A B p1 t s p2 d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h8 : term543 A B p1 t s p2 d => @lem4521569 A B p1' p2' p1 p2 s0 a t s d n m h1 h2 h3 h8 h4 h5 h6 h7) (fun h8 : term1986 A B p1 p1' p2 p2' => @lem4521531 A B p1 p2 p1' t s p2' d h3)). Qed.
Lemma lem4521571 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term1983 A B p1 p2 a p1' p2') (h2 : term178 A a s) (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521570 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4521531 A B p1 p2 p1' t s p2' d h3)). Qed.
Lemma lem4521572 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term1984 A B t s d p1 p2 a p1' p2') (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : (term1983 A B p1 p2 a p1' p2') = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h8 : term1983 A B p1 p2 a p1' p2' => @lem4521571 A B p1 p2 p1' p2' s0 a t s d n m h8 h1 h3 h4 h5 h6 h7) (fun h8 : term1986 A B p1 p1' p2 p2' => @lem4521526 A B t s d p1 p2 a p1' p2' h2)). Qed.
Lemma lem4521573 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term1984 A B t s d p1 p2 a p1' p2') (h3 : term1967 A B p1 p2 p1' t s p2' d) (h4 : s0 = (@INSERT A a s)) (h5 : @HAS_SIZE A s m) (h6 : @HAS_SIZE B t n) (h7 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521572 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h3 h4 h5 h6 h7) (@lem4521526 A B t s d p1 p2 a p1' p2' h2)). Qed.
Lemma lem4521574 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term1984 A B t s d p1 p2 a p1' p2') (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : (term1967 A B p1 p2 p1' t s p2' d) = (term1986 A B p1 p1' p2 p2').
Proof. exact (prop_ext (fun h7 : term1967 A B p1 p2 p1' t s p2' d => @lem4521573 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h7 h3 h4 h5 h6) (fun h7 : term1986 A B p1 p1' p2 p2' => @lem4521527 A B t s d p1 p2 a p1' p2' h2)). Qed.
Lemma lem4521575 {A B : Type'} (p1 : B) (p2 : A -> B) (p1' : B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : term1984 A B t s d p1 p2 a p1' p2') (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term1986 A B p1 p1' p2 p2'.
Proof. exact (EQ_MP (@lem4521574 A B p1 p2 p1' p2' s0 a t s d n m h1 h2 h3 h4 h5 h6) (@lem4521527 A B t s d p1 p2 a p1' p2' h2)). Qed.
Lemma lem4521576 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (p2' : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1987 A B t s d a p1 p1' p2 p2'.
Proof. exact (fun h0 : term1984 A B t s d p1 p2 a p1' p2' => @lem4521575 A B p1 p2 p1' p2' s0 a t s d n m h1 h0 h2 h3 h4 h5). Qed.
Lemma lem4521581 {A B : Type'} (p1 : B) (p1' : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1989 A B t s d a p1 p1' p2.
Proof. exact (fun p2' : A -> B => @lem4521576 A B p1 p1' p2 p2' s0 a t s d n m h1 h2 h3 h4 h5). Qed.
Lemma lem4521586 {A B : Type'} (p1 : B) (p2 : A -> B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1991 A B t s d a p1 p2.
Proof. exact (fun p1' : B => @lem4521581 A B p1 p1' p2 s0 a t s d n m h1 h2 h3 h4 h5). Qed.
Lemma lem4521591 {A B : Type'} (p1 : B) (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1993 A B t s d a p1.
Proof. exact (fun p2 : A -> B => @lem4521586 A B p1 p2 s0 a t s d n m h1 h2 h3 h4 h5). Qed.
Lemma lem4521596 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1995 A B t s d a.
Proof. exact (fun p1 : B => @lem4521591 A B p1 s0 a t s d n m h1 h2 h3 h4 h5). Qed.
Lemma lem4521598 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1979 A B t s d a.
Proof. exact (EQ_MP (@lem4515106 A B t s d a) (@lem4521596 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521599 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1966 A B t s d a.
Proof. exact (EQ_MP (@lem4514913 A B t s d a) (@lem4521598 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521600 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1898 A B t s d a.
Proof. exact (EQ_MP (@lem4514665 A B t s d a) (@lem4521599 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521601 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term1896 A B a t s d n m.
Proof. exact (EQ_MP (@lem4513864 A B a t s d n m h4 h5) (@lem4521600 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521602 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term379 A B a t s d n m.
Proof. exact (@lem4512568 A B a t s d n m (@lem4521601 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521603 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : (term369 A B t a s d) = (term375 A B a t s d)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) (h6 : term349 A B t s d n m) : term372 A B t a s d n m.
Proof. exact (EQ_MP (@lem4493288 A B n m a t s d h3) (@lem4521602 A B s0 a t s d n m h1 h2 h4 h5 h6)). Qed.
Lemma lem4521604 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : ((term369 A B t a s d) = (term375 A B a t s d)) = (term372 A B t a s d n m).
Proof. exact (prop_ext (fun h6 : (term369 A B t a s d) = (term375 A B a t s d) => @lem4521603 A B s0 a t s d n m h1 h2 h6 h3 h4 h5) (fun h6 : term372 A B t a s d n m => @lem4512564 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521605 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term372 A B t a s d n m.
Proof. exact (EQ_MP (@lem4521604 A B s0 a t s d n m h1 h2 h3 h4 h5) (@lem4512564 A B s0 a t s d n m h1 h2 h3 h4 h5)). Qed.
Lemma lem4521606 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : (term349 A B t s d n m) = (term372 A B t a s d n m).
Proof. exact (prop_ext (fun h6 : term349 A B t s d n m => @lem4521605 A B s0 a t s d n m h1 h2 h3 h4 h5) (fun h6 : term372 A B t a s d n m => @lem4493274 A B t s d n m h5)). Qed.
Lemma lem4521607 {A B : Type'} (s0 : A -> Prop) (a : A) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) (h5 : term349 A B t s d n m) : term372 A B t a s d n m.
Proof. exact (EQ_MP (@lem4521606 A B s0 a t s d n m h1 h2 h3 h4 h5) (@lem4493274 A B t s d n m h5)). Qed.
Lemma lem4521608 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term374 A B t a s d n m.
Proof. exact (fun h0 : term349 A B t s d n m => @lem4521607 A B s0 a t s d n m h1 h2 h3 h4 h0). Qed.
Lemma lem4521609 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term178 A a s) (h2 : s0 = (@INSERT A a s)) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term373 A B s t s0 d n m.
Proof. exact (EQ_MP (@lem4493273 A B d s0 a s m t n h2 h3 h4) (@lem4521608 A B d s0 a s m t n h1 h2 h3 h4)). Qed.
Lemma lem4521610 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (@lem4521609 A B d s0 a s m t n h2 h3 h4 h5 (@lem4493117 A B s t d n m h1)). Qed.
Lemma lem4521611 {A B : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term299 A B m s0 a s t n) : @HAS_SIZE B t n.
Proof. exact (proj2 (@lem4493108 A B m s0 a s t n h1)). Qed.
Lemma lem4521612 {A B : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term299 A B m s0 a s t n) : term290 A m s0 a s.
Proof. exact (proj1 (@lem4493108 A B m s0 a s t n h1)). Qed.
Lemma lem4521613 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : (@HAS_SIZE B t n) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h6 : @HAS_SIZE B t n => @lem4521610 A B d s0 a s m t n h1 h2 h3 h4 h5) (fun h6 : term155 A B t s0 d n m => @lem4493109 B t n h5)). Qed.
Lemma lem4521614 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521613 A B d s0 a s m t n h1 h2 h3 h4 h5) (@lem4493109 B t n h5)). Qed.
Lemma lem4521615 {A : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term290 A m s0 a s) : term343 A s0 a s.
Proof. exact (proj2 (@lem4493110 A m s0 a s h1)). Qed.
Lemma lem4521616 {A : Type'} (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term290 A m s0 a s) : @HAS_SIZE A s m.
Proof. exact (proj1 (@lem4493110 A m s0 a s h1)). Qed.
Lemma lem4521617 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term343 A s0 a s) : s0 = (@INSERT A a s).
Proof. exact (proj2 (@lem4493111 A s0 a s h1)). Qed.
Lemma lem4521618 {A : Type'} (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term343 A s0 a s) : term178 A a s.
Proof. exact (proj1 (@lem4493111 A s0 a s h1)). Qed.
Lemma lem4521619 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : (s0 = (@INSERT A a s)) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h6 : s0 = (@INSERT A a s) => @lem4521614 A B d s0 a s m t n h1 h2 h3 h4 h5) (fun h6 : term155 A B t s0 d n m => @lem4493113 A s0 a s h3)). Qed.
Lemma lem4521620 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521619 A B d s0 a s m t n h1 h2 h3 h4 h5) (@lem4493113 A s0 a s h3)). Qed.
Lemma lem4521621 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : (term178 A a s) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h6 : term178 A a s => @lem4521620 A B d s0 a s m t n h1 h2 h3 h4 h5) (fun h6 : term155 A B t s0 d n m => @lem4493114 A a s h2)). Qed.
Lemma lem4521622 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : s0 = (@INSERT A a s)) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521621 A B d s0 a s m t n h1 h2 h3 h4 h5) (@lem4493114 A a s h2)). Qed.
Lemma lem4521623 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : term343 A s0 a s) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : (s0 = (@INSERT A a s)) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h6 : s0 = (@INSERT A a s) => @lem4521622 A B d s0 a s m t n h1 h2 h6 h4 h5) (fun h6 : term155 A B t s0 d n m => @lem4521617 A s0 a s h3)). Qed.
Lemma lem4521624 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term178 A a s) (h3 : term343 A s0 a s) (h4 : @HAS_SIZE A s m) (h5 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521623 A B d s0 a s m t n h1 h2 h3 h4 h5) (@lem4521617 A s0 a s h3)). Qed.
Lemma lem4521625 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term343 A s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : (term178 A a s) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h5 : term178 A a s => @lem4521624 A B d s0 a s m t n h1 h5 h2 h3 h4) (fun h5 : term155 A B t s0 d n m => @lem4521618 A s0 a s h2)). Qed.
Lemma lem4521626 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term343 A s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521625 A B d s0 a s m t n h1 h2 h3 h4) (@lem4521618 A s0 a s h2)). Qed.
Lemma lem4521627 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term343 A s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : (@HAS_SIZE A s m) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h5 : @HAS_SIZE A s m => @lem4521626 A B d s0 a s m t n h1 h2 h3 h4) (fun h5 : term155 A B t s0 d n m => @lem4493112 A s m h3)). Qed.
Lemma lem4521628 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term343 A s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521627 A B d s0 a s m t n h1 h2 h3 h4) (@lem4493112 A s m h3)). Qed.
Lemma lem4521629 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term290 A m s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : (term343 A s0 a s) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h5 : term343 A s0 a s => @lem4521628 A B d s0 a s m t n h1 h5 h3 h4) (fun h5 : term155 A B t s0 d n m => @lem4521615 A m s0 a s h2)). Qed.
Lemma lem4521630 {A B : Type'} (d : B) (s0 : A -> Prop) (a : A) (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term290 A m s0 a s) (h3 : @HAS_SIZE A s m) (h4 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521629 A B d s0 a s m t n h1 h2 h3 h4) (@lem4521615 A m s0 a s h2)). Qed.
Lemma lem4521631 {A B : Type'} (d : B) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term290 A m s0 a s) (h3 : @HAS_SIZE B t n) : (@HAS_SIZE A s m) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h4 : @HAS_SIZE A s m => @lem4521630 A B d s0 a s m t n h1 h2 h4 h3) (fun h4 : term155 A B t s0 d n m => @lem4521616 A m s0 a s h2)). Qed.
Lemma lem4521632 {A B : Type'} (d : B) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term290 A m s0 a s) (h3 : @HAS_SIZE B t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521631 A B d m s0 a s t n h1 h2 h3) (@lem4521616 A m s0 a s h2)). Qed.
Lemma lem4521633 {A B : Type'} (d : B) (t : B -> Prop) (n : nat) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term115 A B t d n m) (h2 : term299 A B m s0 a s t n) (h3 : term290 A m s0 a s) : (@HAS_SIZE B t n) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h4 : @HAS_SIZE B t n => @lem4521632 A B d m s0 a s t n h1 h3 h4) (fun h4 : term155 A B t s0 d n m => @lem4521611 A B m s0 a s t n h2)). Qed.
Lemma lem4521634 {A B : Type'} (d : B) (t : B -> Prop) (n : nat) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (h1 : term115 A B t d n m) (h2 : term299 A B m s0 a s t n) (h3 : term290 A m s0 a s) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521633 A B d t n m s0 a s h1 h2 h3) (@lem4521611 A B m s0 a s t n h2)). Qed.
Lemma lem4521635 {A B : Type'} (d : B) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term299 A B m s0 a s t n) : (term290 A m s0 a s) = (term155 A B t s0 d n m).
Proof. exact (prop_ext (fun h3 : term290 A m s0 a s => @lem4521634 A B d t n m s0 a s h1 h2 h3) (fun h3 : term155 A B t s0 d n m => @lem4521612 A B m s0 a s t n h2)). Qed.
Lemma lem4521636 {A B : Type'} (d : B) (m : nat) (s0 : A -> Prop) (a : A) (s : A -> Prop) (t : B -> Prop) (n : nat) (h1 : term115 A B t d n m) (h2 : term299 A B m s0 a s t n) : term155 A B t s0 d n m.
Proof. exact (EQ_MP (@lem4521635 A B d m s0 a s t n h1 h2) (@lem4521612 A B m s0 a s t n h2)). Qed.
Lemma lem4521637 {A B : Type'} (a : A) (s : A -> Prop) (s0 : A -> Prop) (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term335 A B a s t s0 d n m.
Proof. exact (fun h0 : term299 A B m s0 a s t n => @lem4521636 A B d m s0 a s t n h1 h0). Qed.
Lemma lem4521642 {A B : Type'} (a : A) (s0 : A -> Prop) (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term338 A B a t s0 d n m.
Proof. exact (fun s : A -> Prop => @lem4521637 A B a s s0 t d n m h1). Qed.
Lemma lem4521647 {A B : Type'} (s0 : A -> Prop) (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term340 A B t s0 d n m.
Proof. exact (fun a : A => @lem4521642 A B a s0 t d n m h1). Qed.
Lemma lem4521652 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term342 A B t d n m.
Proof. exact (fun s0 : A -> Prop => @lem4521647 A B s0 t d n m h1). Qed.
Lemma lem4521653 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term160 A B t d n m.
Proof. exact (EQ_MP (@lem4493107 A B t d n m) (@lem4521652 A B t d n m h1)). Qed.
Lemma lem4521654 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (h1 : term115 A B t d n m) : term119 A B t d n m.
Proof. exact (EQ_MP (@lem4492574 A B t d n m) (@lem4521653 A B t d n m h1)). Qed.
Lemma lem4521655 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term111 A B t d n.
Proof. exact (EQ_MP (@lem4492508 A B t d n) (@lem4492902 A B t d n)). Qed.
Lemma lem4521656 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : term121 A B t d n m.
Proof. exact (fun h0 : term115 A B t d n m => @lem4521654 A B t d n m h0). Qed.
Lemma lem4521661 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term125 A B t d n.
Proof. exact (fun m : nat => @lem4521656 A B t d n m). Qed.
Lemma lem4521662 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term127 A B t d n.
Proof. exact (conj (@lem4521655 A B t d n) (@lem4521661 A B t d n)). Qed.
Lemma lem4521663 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : term132 A B t d n.
Proof. exact (@lem4492454 A B t d n (@lem4521662 A B t d n)). Qed.
Lemma lem4521668 {A B : Type'} (d : B) (n : nat) : term2661 A B d n.
Proof. exact (fun t : B -> Prop => @lem4521663 A B t d n). Qed.
Lemma lem4521673 {A B : Type'} (d : B) : term2662 A B d.
Proof. exact (fun n : nat => @lem4521668 A B d n). Qed.
Lemma lem4521678 {A B : Type'} : term2663 A B.
Proof. exact (fun d : B => @lem4521673 A B d). Qed.
