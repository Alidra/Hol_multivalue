require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term8 (x0: El num) (x1: El num) ≔ ((@= num) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR x0 x1)));
symbol term12 (x0: El num) (x1: El num) ≔ (∧ (= (NUMFST (NUMPAIR x0 x1)) x0) (= (NUMSND (NUMPAIR x0 x1)) x1));
symbol term6 (x0: El num) (x1: El num) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR x0 x1));
symbol term16 (x0: El num) ≔ (∀ (λ y0 : El num, (∧ (= (NUMFST (NUMPAIR x0 y0)) x0) (= (NUMSND (NUMPAIR x0 y0)) y0))));
symbol term15 (x0: El num) ≔ (∀ (λ y0 : El num, (∧ (= (NUMFST (NUMPAIR x0 y0)) x0) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y1 : El type1272, (∀ (λ y2 : El type1671, (∀ (λ y3 : El num, (∀ (λ y4 : El num, (∧ (= (NUMFST (NUMPAIR y3 y4)) y3) (= (y1 y2 (NUMPAIR y3 y4)) y4))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR x0 y0)) y0))));
symbol term11 (x0: El num) (x1: El num) ≔ (∧ (= (NUMFST (NUMPAIR x0 x1)) x0) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR x0 x1)) x1));
symbol term7 (x0: El num) (x1: El num) ≔ (NUMSND (NUMPAIR x0 x1));
symbol term10 (x0: El num) (x1: El num) ≔ (∧ (= (NUMFST (NUMPAIR x1 x0)) x1));
symbol term18 ≔ (λ y0 : El num, (∀ (λ y1 : El num, (∧ (= (NUMFST (NUMPAIR y0 y1)) y0) (= (NUMSND (NUMPAIR y0 y1)) y1)))));
symbol term17 ≔ (λ y0 : El num, (∀ (λ y1 : El num, (∧ (= (NUMFST (NUMPAIR y0 y1)) y0) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y2 : El type1272, (∀ (λ y3 : El type1671, (∀ (λ y4 : El num, (∀ (λ y5 : El num, (∧ (= (NUMFST (NUMPAIR y4 y5)) y4) (= (y2 y3 (NUMPAIR y4 y5)) y5))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR y0 y1)) y1)))));
symbol term1 ≔ (∀ (λ y0 : El type1671, (∀ (λ y1 : El num, (∀ (λ y2 : El num, (∧ (= (NUMFST (NUMPAIR y1 y2)) y1) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y3 : El type1272, (∀ (λ y4 : El type1671, (∀ (λ y5 : El num, (∀ (λ y6 : El num, (∧ (= (NUMFST (NUMPAIR y5 y6)) y5) (= (y3 y4 (NUMPAIR y5 y6)) y6))))))))) y0 (NUMPAIR y1 y2)) y2))))))));
symbol term0 ≔ ((λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3)))))))))));
symbol term19 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (∧ (= (NUMFST (NUMPAIR y0 y1)) y0) (= (NUMSND (NUMPAIR y0 y1)) y1))))));
symbol term4 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (∧ (= (NUMFST (NUMPAIR y0 y1)) y0) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y2 : El type1272, (∀ (λ y3 : El type1671, (∀ (λ y4 : El num, (∀ (λ y5 : El num, (∧ (= (NUMFST (NUMPAIR y4 y5)) y4) (= (y2 y3 (NUMPAIR y4 y5)) y5))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR y0 y1)) y1))))));
symbol term3 ≔ ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))));
symbol term2 ≔ ((λ y0 : El type1671, (∀ (λ y1 : El num, (∀ (λ y2 : El num, (∧ (= (NUMFST (NUMPAIR y1 y2)) y1) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y3 : El type1272, (∀ (λ y4 : El type1671, (∀ (λ y5 : El num, (∀ (λ y6 : El num, (∧ (= (NUMFST (NUMPAIR y5 y6)) y5) (= (y3 y4 (NUMPAIR y5 y6)) y6))))))))) y0 (NUMPAIR y1 y2)) y2))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))));
symbol term13 (x0: El num) ≔ (λ y0 : El num, (∧ (= (NUMFST (NUMPAIR x0 y0)) x0) (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y1 : El type1272, (∀ (λ y2 : El type1671, (∀ (λ y3 : El num, (∀ (λ y4 : El num, (∧ (= (NUMFST (NUMPAIR y3 y4)) y3) (= (y1 y2 (NUMPAIR y3 y4)) y4))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))) (NUMPAIR x0 y0)) y0)));
symbol term9 (x0: El num) (x1: El num) ≔ ((@= num) (NUMSND (NUMPAIR x0 x1)));
symbol term5 ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun num num))) (λ y0 : El type1272, (∀ (λ y1 : El type1671, (∀ (λ y2 : El num, (∀ (λ y3 : El num, (∧ (= (NUMFST (NUMPAIR y2 y3)) y2) (= (y0 y1 (NUMPAIR y2 y3)) y3))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))));
symbol term14 (x0: El num) ≔ (λ y0 : El num, (∧ (= (NUMFST (NUMPAIR x0 y0)) x0) (= (NUMSND (NUMPAIR x0 y0)) y0)));
