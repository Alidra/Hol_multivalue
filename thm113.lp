require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
require open hol-light.hol_axioms;
require open hol-light.hol_type_abbrevs;
require open hol-light.thm113_term_abbrevs;
require open hol-light.EXISTS_UNIQUE_DEF_spec;
require open hol-light.thm37_spec;
private symbol lem100 [A] (P : El (fun A bool)) : Prf (= P P) ≔ REFL P;
private symbol lem101 [A] (P : El (fun A bool)) : Prf (= ((@∃! A) P) (term0 A P)) ≔ MK_COMB (@lem99 A) (@lem100 A P);
private symbol lem102 [A] (P : El (fun A bool)) : Prf (= (term0 A P) (term1 A P)) ≔ REFL (term0 A P);
private symbol lem103 [A] (P : El (fun A bool)) : Prf (= (term2 A P) (term2 A P)) ≔ REFL (term2 A P);
private symbol lem104 [A] (P : El (fun A bool)) : Prf (= (= ((@∃! A) P) (term0 A P)) (= ((@∃! A) P) (term1 A P))) ≔ MK_COMB (@lem103 A P) (@lem102 A P);
private symbol lem105 [A] (P : El (fun A bool)) : Prf (= ((@∃! A) P) (term1 A P)) ≔ EQ_MP (@lem104 A P) (@lem101 A P);
private symbol lem108 [A] (P : El (fun A bool)) : Prf (term3 A P) ≔ (@lem37 ((@∃! A) P) (term1 A P));
private symbol lem109 [A] (P : El (fun A bool)) : Prf (term4 A P) ≔ (@lem108 A P) (@lem105 A P);
private symbol lem110 [A] (P : El (fun A bool)) (h1 : Prf ((@∃! A) P)) : Prf ((@∃! A) P) ≔ h1;
private symbol lem111 [A] (P : El (fun A bool)) (h1 : Prf ((@∃! A) P)) : Prf (term1 A P) ≔ (@lem109 A P) (@lem110 A P h1);
opaque symbol lem112 [A] (P : El (fun A bool)) (h1 : Prf ((@∃! A) P)) : Prf (∃ P) ≔ ∧ₑ₁ (@lem111 A P h1);
opaque symbol lem113 [A] (P : El (fun A bool)) : Prf (term5 A P) ≔ λ h0 : Prf ((@∃! A) P), (@lem112 A P h0);
