Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term39 (x0 : prod hreal hreal) := forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, ((treal_eq x0 y0) /\ (treal_eq y0 y1)) -> treal_eq x0 y1.
Definition term31 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, ((treal_eq x0 x1) /\ (treal_eq y0 y1)) -> treal_eq (treal_mul x0 y0) (treal_mul x1 y1).
Definition term14 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : type1233 => fun y1 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((y0 y3) /\ (y1 y4))))) (dest_real (mk_real (treal_eq x1))).
Definition term27 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := treal_eq (treal_mul x0 x1) x2.
Definition term8 (x0 : prod hreal hreal) := dest_real (mk_real (treal_eq x0)).
Definition term50 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (treal_eq x0 x0) /\ (treal_eq x1 x1).
Definition term35 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := ((treal_eq x0 x2) /\ (treal_eq x1 x3)) -> treal_eq (treal_mul x0 x1) (treal_mul x2 x3).
Definition term37 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) (x4 : prod hreal hreal) := (treal_eq (treal_mul x0 x1) (treal_mul x2 x3)) /\ (treal_eq (treal_mul x2 x3) x4).
Definition term51 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := (treal_eq (treal_mul x1 x2) x0) /\ ((treal_eq x1 x1) /\ (treal_eq x2 x2)).
Definition term40 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : prod hreal hreal => forall y1 : prod hreal hreal, ((treal_eq x0 y0) /\ (treal_eq y0 y1)) -> treal_eq x0 y1) x1.
Definition term61 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := treal_eq (treal_mul x0 x1).
Definition term47 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1)).
Definition term56 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := ((exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1))) -> treal_eq (treal_mul x1 x2) x0) /\ ((treal_eq (treal_mul x1 x2) x0) -> exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1))).
Definition term33 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := forall y0 : prod hreal hreal, ((treal_eq x0 x2) /\ (treal_eq x1 y0)) -> treal_eq (treal_mul x0 x1) (treal_mul x2 y0).
Definition term26 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := (treal_eq x0 x1) /\ (treal_eq x2 x3).
Definition term36 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := treal_eq (treal_mul x0 x1) (treal_mul x2 x3).
Definition term3 (x0 : real) := @eq (real -> real) (real_mul x0).
Definition term24 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := @eq Prop ((real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))) = (mk_real (fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, exists y2 : prod hreal hreal, (treal_eq (treal_mul y1 y2) y0) /\ ((dest_real (mk_real (treal_eq x0)) y1) /\ (dest_real (mk_real (treal_eq x1)) y2))))).
Definition term2 (x0 : real) := fun y0 : real => mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real x0 y2) /\ (dest_real y0 y3))).
Definition term9 (x0 : prod hreal hreal) := fun y0 : prod hreal hreal => (treal_eq x0) = (treal_eq y0).
Definition term34 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := (fun y0 : prod hreal hreal => ((treal_eq x0 x2) /\ (treal_eq x1 y0)) -> treal_eq (treal_mul x0 x1) (treal_mul x2 y0)) x3.
Definition term58 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := fun y0 : prod hreal hreal => treal_eq (treal_mul x0 x1) y0.
Definition term54 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := (treal_eq (treal_mul x1 x2) x0) -> exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1)).
Definition term15 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : type1233 => fun y1 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((y0 y3) /\ (y1 y4))))) (treal_eq x1).
Definition term32 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := (fun y0 : prod hreal hreal => forall y1 : prod hreal hreal, ((treal_eq x0 x1) /\ (treal_eq y0 y1)) -> treal_eq (treal_mul x0 y0) (treal_mul x1 y1)) x2.
Definition term10 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1)).
Definition term63 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := @eq real (real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))).
Definition term22 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := mk_real (fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, exists y2 : prod hreal hreal, (treal_eq (treal_mul y1 y2) y0) /\ ((treal_eq x0 y1) /\ (treal_eq x1 y2))).
Definition term11 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := mk_real (fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, exists y2 : prod hreal hreal, (treal_eq (treal_mul y1 y2) y0) /\ ((dest_real (mk_real (treal_eq x0)) y1) /\ (dest_real (mk_real (treal_eq x1)) y2))).
Definition term5 (x0 : real) (x1 : real) := mk_real (fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, exists y2 : prod hreal hreal, (treal_eq (treal_mul y1 y2) y0) /\ ((dest_real x0 y1) /\ (dest_real x1 y2))).
Definition term59 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := mk_real (fun y0 : prod hreal hreal => treal_eq (treal_mul x0 x1) y0).
Definition term48 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1)).
Definition term21 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : type1233 => (real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((treal_eq x0 y2) /\ (y0 y3))))) (treal_eq x1).
Definition term29 (x0 : prod hreal hreal) := forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq x0 y0) /\ (treal_eq y1 y2)) -> treal_eq (treal_mul x0 y1) (treal_mul y0 y2).
Definition term19 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := @eq (((prod hreal hreal) -> Prop) -> Prop) (fun y0 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real (mk_real (treal_eq x1)) y2) /\ (y0 y3))))).
Definition term57 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := fun y0 : prod hreal hreal => exists y1 : prod hreal hreal, exists y2 : prod hreal hreal, (treal_eq (treal_mul y1 y2) y0) /\ ((treal_eq x0 y1) /\ (treal_eq x1 y2)).
Definition term0 := fun y0 : real => fun y1 : real => mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((dest_real y0 y3) /\ (dest_real y1 y4))).
Definition term4 (x0 : real) (x1 : real) := (fun y0 : real => mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real x0 y2) /\ (dest_real y0 y3)))) x1.
Definition term30 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : prod hreal hreal => forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq x0 y0) /\ (treal_eq y1 y2)) -> treal_eq (treal_mul x0 y1) (treal_mul y0 y2)) x1.
Definition term20 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := (fun y0 : type1233 => (real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real (mk_real (treal_eq x0)) y2) /\ (y0 y3))))) (dest_real (mk_real (treal_eq x1))).
Definition term45 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := exists y0 : prod hreal hreal, (treal_eq (treal_mul x2 y0) x0) /\ ((treal_eq x1 x2) /\ (treal_eq x3 y0)).
Definition term55 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := (exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x2) /\ ((treal_eq x0 y0) /\ (treal_eq x1 y1))) -> treal_eq (treal_mul x0 x1) x2.
Definition term23 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := @eq Prop ((fun y0 : type1233 => (real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real (mk_real (treal_eq x0)) y2) /\ (y0 y3))))) (dest_real (mk_real (treal_eq x1)))).
Definition term49 (x0 : prod hreal hreal) := (fun y0 : prod hreal hreal => treal_eq y0 y0) x0.
Definition term25 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) (x4 : prod hreal hreal) := (treal_eq (treal_mul x2 x4) x0) /\ ((treal_eq x1 x2) /\ (treal_eq x3 x4)).
Definition term44 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) (x4 : prod hreal hreal) := ((treal_eq (treal_mul x2 x3) (treal_mul x0 x1)) /\ (treal_eq (treal_mul x0 x1) x4)) -> treal_eq (treal_mul x2 x3) x4.
Definition term42 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := (fun y0 : prod hreal hreal => ((treal_eq x1 x0) /\ (treal_eq x0 y0)) -> treal_eq x1 y0) x2.
Definition term13 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := fun y0 : type1233 => fun y1 : type1233 => (real_mul (mk_real (treal_eq x0)) (mk_real (treal_eq x1))) = (mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((y0 y3) /\ (y1 y4)))).
Definition term18 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := fun y0 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((dest_real (mk_real (treal_eq x1)) y2) /\ (y0 y3)))).
Definition term16 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := fun y0 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y1 : prod hreal hreal => exists y2 : prod hreal hreal, exists y3 : prod hreal hreal, (treal_eq (treal_mul y2 y3) y1) /\ ((treal_eq x1 y2) /\ (y0 y3)))).
Definition term12 (x0 : prod hreal hreal) := mk_real (treal_eq x0).
Definition term46 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) := fun y0 : prod hreal hreal => (treal_eq (treal_mul x2 y0) x0) /\ ((treal_eq x1 x2) /\ (treal_eq x3 y0)).
Definition term41 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := forall y0 : prod hreal hreal, ((treal_eq x1 x0) /\ (treal_eq x0 y0)) -> treal_eq x1 y0.
Definition term1 (x0 : real) := (fun y0 : real => fun y1 : real => mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((dest_real y0 y3) /\ (dest_real y1 y4)))) x0.
Definition term6 (x0 : real) (x1 : real) := @eq real (real_mul x0 x1).
Definition term17 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := @eq (((prod hreal hreal) -> Prop) -> Prop) ((fun y0 : type1233 => fun y1 : type1233 => (real_mul (mk_real (treal_eq x1)) (mk_real (treal_eq x0))) = (mk_real (fun y2 : prod hreal hreal => exists y3 : prod hreal hreal, exists y4 : prod hreal hreal, (treal_eq (treal_mul y3 y4) y2) /\ ((y0 y3) /\ (y1 y4))))) (dest_real (mk_real (treal_eq x1)))).
Definition term43 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := ((treal_eq x1 x0) /\ (treal_eq x0 x2)) -> treal_eq x1 x2.
Definition term53 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) := ((treal_eq (treal_mul x1 x2) x0) /\ ((treal_eq x1 x1) /\ (treal_eq x2 x2))) -> exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x0) /\ ((treal_eq x1 y0) /\ (treal_eq x2 y1)).
Definition term52 (x0 : prod hreal hreal) (x1 : prod hreal hreal) (x2 : prod hreal hreal) (x3 : prod hreal hreal) (x4 : prod hreal hreal) := ((treal_eq (treal_mul x0 x1) x2) /\ ((treal_eq x3 x0) /\ (treal_eq x4 x1))) -> exists y0 : prod hreal hreal, exists y1 : prod hreal hreal, (treal_eq (treal_mul y0 y1) x2) /\ ((treal_eq x3 y0) /\ (treal_eq x4 y1)).
Definition term60 (x0 : type1233) := fun y0 : prod hreal hreal => x0 y0.
Definition term38 (x0 : prod hreal hreal) := (fun y0 : prod hreal hreal => forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y1 y2)) -> treal_eq y0 y2) x0.
Definition term28 (x0 : prod hreal hreal) := (fun y0 : prod hreal hreal => forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, forall y3 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y2 y3)) -> treal_eq (treal_mul y0 y2) (treal_mul y1 y3)) x0.
Definition term7 (x0 : prod hreal hreal) := exists y0 : prod hreal hreal, (treal_eq x0) = (treal_eq y0).
Definition term62 (x0 : prod hreal hreal) (x1 : prod hreal hreal) := mk_real (treal_eq (treal_mul x0 x1)).
