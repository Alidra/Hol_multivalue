Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term35 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : list a0, (@EX a0 y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@EX a0 y1 y2)).
Definition term34 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 y2)).
Definition term8 (a0 : Type') (x0 : a0 -> Prop) := @eq Prop (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0 (@nil a0)).
Definition term5 (a0 : Type') := @ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))).
Definition term13 (a0 : Type') := forall y0 : a0 -> Prop, (@EX a0 y0 (@nil a0)) = False.
Definition term12 (a0 : Type') := forall y0 : a0 -> Prop, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@nil a0)) = False.
Definition term15 (a0 : Type') := and (forall y0 : a0 -> Prop, (@EX a0 y0 (@nil a0)) = False).
Definition term14 (a0 : Type') := and (forall y0 : a0 -> Prop, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@nil a0)) = False).
Definition term23 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : list a0) := (x1 x0) \/ (@EX a0 x1 x2).
Definition term0 (a0 : Type') := (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4))))).
Definition term33 (a0 : Type') := fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : list a0, (@EX a0 y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@EX a0 y1 y2)).
Definition term32 (a0 : Type') := fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 y2)).
Definition term1 (a0 : Type') := forall y0 : prod nat nat, (forall y1 : a0 -> Prop, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) y0 y1 (@nil a0)) = False) /\ (forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y4 : type1317 a0 => forall y5 : prod nat nat, (forall y6 : a0 -> Prop, (y4 y5 y6 (@nil a0)) = False) /\ (forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : list a0, (y4 y5 y7 (@cons a0 y6 y8)) = ((y7 y6) \/ (y4 y5 y7 y8)))) y0 y2 (@cons a0 y1 y3)) = ((y2 y1) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y4 : type1317 a0 => forall y5 : prod nat nat, (forall y6 : a0 -> Prop, (y4 y5 y6 (@nil a0)) = False) /\ (forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : list a0, (y4 y5 y7 (@cons a0 y6 y8)) = ((y7 y6) \/ (y4 y5 y7 y8)))) y0 y2 y3))).
Definition term36 (a0 : Type') := (forall y0 : a0 -> Prop, (@EX a0 y0 (@nil a0)) = False) /\ (forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : list a0, (@EX a0 y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@EX a0 y1 y2))).
Definition term4 (a0 : Type') := (forall y0 : a0 -> Prop, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@nil a0)) = False) /\ (forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 (@cons a0 y0 y2)) = ((y1 y0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y3 : type1317 a0 => forall y4 : prod nat nat, (forall y5 : a0 -> Prop, (y3 y4 y5 (@nil a0)) = False) /\ (forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : list a0, (y3 y4 y6 (@cons a0 y5 y7)) = ((y6 y5) \/ (y3 y4 y6 y7)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y1 y2))).
Definition term17 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : list a0) := @EX a0 x0 (@cons a0 x1 x2).
Definition term29 (a0 : Type') (x0 : a0) := fun y0 : a0 -> Prop => forall y1 : list a0, (@EX a0 y0 (@cons a0 x0 y1)) = ((y0 x0) \/ (@EX a0 y0 y1)).
Definition term28 (a0 : Type') (x0 : a0) := fun y0 : a0 -> Prop => forall y1 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@cons a0 x0 y1)) = ((y0 x0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 y1)).
Definition term24 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := fun y0 : list a0 => (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x1 (@cons a0 x0 y0)) = ((x1 x0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x1 y0)).
Definition term9 (a0 : Type') (x0 : a0 -> Prop) := @eq Prop (@EX a0 x0 (@nil a0)).
Definition term18 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : list a0) := @eq Prop (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0 (@cons a0 x1 x2)).
Definition term11 (a0 : Type') := fun y0 : a0 -> Prop => (@EX a0 y0 (@nil a0)) = False.
Definition term10 (a0 : Type') := fun y0 : a0 -> Prop => (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@nil a0)) = False.
Definition term20 (a0 : Type') (x0 : a0 -> Prop) (x1 : list a0) := @ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0 x1.
Definition term7 (a0 : Type') (x0 : a0 -> Prop) := @ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0 (@nil a0).
Definition term6 (a0 : Type') (x0 : a0 -> Prop) := @ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0.
Definition term31 (a0 : Type') (x0 : a0) := forall y0 : a0 -> Prop, forall y1 : list a0, (@EX a0 y0 (@cons a0 x0 y1)) = ((y0 x0) \/ (@EX a0 y0 y1)).
Definition term30 (a0 : Type') (x0 : a0) := forall y0 : a0 -> Prop, forall y1 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 (@cons a0 x0 y1)) = ((y0 x0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) y0 y1)).
Definition term27 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : list a0, (@EX a0 x1 (@cons a0 x0 y0)) = ((x1 x0) \/ (@EX a0 x1 y0)).
Definition term26 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x1 (@cons a0 x0 y0)) = ((x1 x0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y1 : type1317 a0 => forall y2 : prod nat nat, (forall y3 : a0 -> Prop, (y1 y2 y3 (@nil a0)) = False) /\ (forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : list a0, (y1 y2 y4 (@cons a0 y3 y5)) = ((y4 y3) \/ (y1 y2 y4 y5)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x1 y0)).
Definition term19 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : list a0) := @eq Prop (@EX a0 x0 (@cons a0 x1 x2)).
Definition term16 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : list a0) := @ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x0 (@cons a0 x1 x2).
Definition term25 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := fun y0 : list a0 => (@EX a0 x1 (@cons a0 x0 y0)) = ((x1 x0) \/ (@EX a0 x1 y0)).
Definition term2 (a0 : Type') := (fun y0 : prod nat nat => (forall y1 : a0 -> Prop, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y2 : type1317 a0 => forall y3 : prod nat nat, (forall y4 : a0 -> Prop, (y2 y3 y4 (@nil a0)) = False) /\ (forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : list a0, (y2 y3 y5 (@cons a0 y4 y6)) = ((y5 y4) \/ (y2 y3 y5 y6)))) y0 y1 (@nil a0)) = False) /\ (forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : list a0, (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y4 : type1317 a0 => forall y5 : prod nat nat, (forall y6 : a0 -> Prop, (y4 y5 y6 (@nil a0)) = False) /\ (forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : list a0, (y4 y5 y7 (@cons a0 y6 y8)) = ((y7 y6) \/ (y4 y5 y7 y8)))) y0 y2 (@cons a0 y1 y3)) = ((y2 y1) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y4 : type1317 a0 => forall y5 : prod nat nat, (forall y6 : a0 -> Prop, (y4 y5 y6 (@nil a0)) = False) /\ (forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : list a0, (y4 y5 y7 (@cons a0 y6 y8)) = ((y7 y6) \/ (y4 y5 y7 y8)))) y0 y2 y3)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))).
Definition term3 := @pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))).
Definition term22 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : list a0) := (x1 x0) \/ (@ε ((prod nat nat) -> (a0 -> Prop) -> (list a0) -> Prop) (fun y0 : type1317 a0 => forall y1 : prod nat nat, (forall y2 : a0 -> Prop, (y0 y1 y2 (@nil a0)) = False) /\ (forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : list a0, (y0 y1 y3 (@cons a0 y2 y4)) = ((y3 y2) \/ (y0 y1 y3 y4)))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0))))))))) x1 x2).
Definition term21 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := or (x0 x1).
