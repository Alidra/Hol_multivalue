Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term13 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ((nadd_eq x1 x0) /\ (nadd_eq x0 x2)) -> nadd_eq x1 x2.
Definition term239 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)) x0.
Definition term237 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) x0.
Definition term78 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) = ((nadd_le y0 y1) /\ (nadd_le y1 y0))) x0.
Definition term65 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (exists y2 : nadd, nadd_le (nadd_add y0 y2) (nadd_add y1 y2)) -> nadd_le y0 y1) x0.
Definition term42 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (exists y2 : nadd, (nadd_le y0 y2) /\ (nadd_le y2 y1)) -> nadd_le y0 y1) x0.
Definition term22 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, (exists y2 : nadd, (nadd_eq y0 y2) /\ (nadd_eq y2 y1)) -> nadd_eq y0 y1) x0.
Definition term642 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_le x0 x1) \/ ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3)))).
Definition term538 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_le x0 x1) \/ ((~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3)))).
Definition term565 (x0 : nadd) (x1 : nat) (x2 : nadd) := ~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2))).
Definition term146 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term134 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term654 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp (~ ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3))))).
Definition term551 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp (~ ((~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3))))).
Definition term611 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2)).
Definition term564 (x0 : nadd) (x1 : nat) (x2 : nadd) := (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> False.
Definition term248 := and (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))).
Definition term663 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_le x0 x2)) \/ (nadd_le x1 x2).
Definition term374 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term431 (x0 : nat) (x1 : nadd) := nadd_mul (nadd_of_num x0) x1.
Definition term587 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term566 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term318 := (~ False) -> False.
Definition term627 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_le x1 x0)) \/ ((~ (nadd_le x0 x2)) \/ (nadd_le x1 x2)).
Definition term182 (x0 : nat) := forall y0 : nat, nadd_eq (nadd_add (nadd_of_num x0) (nadd_of_num y0)) (nadd_of_num (Nat.add x0 y0)).
Definition term131 (x0 : nat) (x1 : nadd) := (exists y0 : nadd, (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) y0) /\ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)).
Definition term428 (x0 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) x0)) -> nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) x0.
Definition term630 (x0 : nadd) (x1 : nat) := ~ (nadd_le x0 (nadd_of_num x1)).
Definition term380 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term526 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3)).
Definition term181 (x0 : nat) := fun y0 : nat => nadd_eq (nadd_add (nadd_of_num x0) (nadd_of_num y0)) (nadd_of_num (Nat.add x0 y0)).
Definition term235 := fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0)).
Definition term173 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y0)) x0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0))) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_mul y1 y3) (nadd_mul y2 y4)) -> ~ (forall y1 : nat, forall y2 : nat, nadd_eq (nadd_add (nadd_of_num y1) (nadd_of_num y2)) (nadd_of_num (Nat.add y1 y2))).
Definition term172 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y0)) x0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0))) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_mul y1 y3) (nadd_mul y2 y4)) -> (forall y1 : nat, forall y2 : nat, nadd_eq (nadd_add (nadd_of_num y1) (nadd_of_num y2)) (nadd_of_num (Nat.add y1 y2))) -> False.
Definition term612 (x0 : nadd) (x1 : nadd) (x2 : nadd) := or (~ ((nadd_le x0 x1) /\ (nadd_le x1 x2))).
Definition term686 (x0 : nat) (x1 : nadd) := exists y0 : nadd, (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) y0) /\ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1))).
Definition term449 (x0 : nat) (x1 : nadd) := exists y0 : nadd, (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))).
Definition term372 (x0 : nat) (x1 : nadd) := exists y0 : nadd, (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))).
Definition term568 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (((nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term567 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := ((nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term456 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (((nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term455 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := ((nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term313 (x0 : nadd) (x1 : nadd) := (nadd_eq x1 x0) -> nadd_eq x0 x1.
Definition term252 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ (forall y0 : nadd, forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)).
Definition term142 (x0 : nat) (x1 : nadd) := nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1.
Definition term636 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)) (nadd_mul (nadd_of_num x0) x1)).
Definition term278 (x0 : nat) := nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)).
Definition term124 (x0 : Prop) := ~ (~ x0).
Definition term503 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (((nadd_le x0 x1) \/ (~ (nadd_le x2 y0))) /\ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 y0))).
Definition term688 (x0 : nat) (x1 : nadd) := nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)).
Definition term468 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term207 (x0 : nadd -> Prop) (x1 : nadd -> Prop) := (forall y0 : nadd, x0 y0) /\ (forall y0 : nadd, x1 y0).
Definition term132 (x0 : nat) (x1 : nadd) := nadd_add x1 (nadd_mul (nadd_of_num x0) x1).
Definition term218 (x0 : nadd) (x1 : nadd) := ((fun y0 : nadd => (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) x1) /\ ((fun y0 : nadd => (~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0)) x1).
Definition term33 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ((nadd_le x1 x0) /\ (nadd_le x0 x2)) -> nadd_le x1 x2.
Definition term87 (x0 : nadd) := forall y0 : nat, exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0).
Definition term82 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))) -> exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0).
Definition term601 := fun y0 : nadd => forall y1 : nat, forall y2 : nadd, forall y3 : nat, (nadd_le y2 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) y2) -> (~ (nadd_le y2 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y4 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y4) y4) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> ~ (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_le y4 y5) /\ (nadd_le y5 y6)) -> nadd_le y4 y6).
Definition term600 := fun y0 : nadd => forall y1 : nat, forall y2 : nadd, forall y3 : nat, (nadd_le y2 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) y2) -> (~ (nadd_le y2 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y4 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y4) y4) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_le y4 y5) /\ (nadd_le y5 y6)) -> nadd_le y4 y6) -> False.
Definition term483 (x0 : nadd) := fun y0 : nadd => forall y1 : nat, forall y2 : nat, (nadd_le x0 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) x0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0))) -> nadd_le (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)) x0)) -> (forall y3 : nadd, nadd_eq y3 y3) -> ~ (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)).
Definition term482 (x0 : nadd) := fun y0 : nadd => forall y1 : nat, forall y2 : nat, (nadd_le x0 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) x0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0))) -> nadd_le (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)) x0)) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> False.
Definition term230 (x0 : nadd) := (forall y0 : nadd, (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) /\ (forall y0 : nadd, (~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0)).
Definition term618 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, ((~ (nadd_le x0 y0)) \/ (~ (nadd_le y0 y1))) \/ (nadd_le x0 y1).
Definition term605 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, ((nadd_le x0 y0) /\ (nadd_le y0 y1)) -> nadd_le x0 y1.
Definition term361 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y0 y1)) -> nadd_eq x0 y1.
Definition term358 := fun y0 : nadd => forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0).
Definition term236 := fun y0 : nadd => forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0).
Definition term197 := fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0).
Definition term72 := fun y0 : nadd => forall y1 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y0)) = (nadd_eq y0 y1).
Definition term296 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (~ (nadd_eq x0 x1))) /\ (~ (~ (nadd_eq x2 x3))).
Definition term672 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (~ (nadd_le x0 x1))) /\ (~ (~ (nadd_le x1 x2))).
Definition term651 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (~ (nadd_eq x0 x2))) /\ (~ (~ (nadd_le x1 x2))).
Definition term547 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (~ (nadd_eq x2 x0))) /\ (~ (~ (nadd_le x1 x2))).
Definition term439 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((nadd_eq (nadd_add x0 x2) (nadd_add x1 x3)) \/ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3)))).
Definition term290 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((nadd_eq (nadd_mul x0 x2) (nadd_mul x1 x3)) \/ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3)))).
Definition term280 (x0 : nat) := ~ (nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0))).
Definition term335 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))).
Definition term579 := (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term196 (x0 : nadd) := forall y0 : nadd, (nadd_eq x0 y0) = (nadd_eq y0 x0).
Definition term282 (x0 : nadd) := (~ (nadd_eq x0 x0)) -> nadd_eq x0 x0.
Definition term557 (x0 : nat) (x1 : nadd) (x2 : nadd) := (~ (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2.
Definition term3 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, (x0 \/ (x1 \/ y0)) = ((x0 \/ x1) \/ y0).
Definition term656 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_eq x2 x0) /\ ((nadd_eq x3 x1) /\ (nadd_le x0 x1))) -> nadd_le x2 x3.
Definition term553 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_eq x0 x2) /\ ((nadd_eq x1 x3) /\ (nadd_le x0 x1))) -> nadd_le x2 x3.
Definition term634 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)) (nadd_mul (nadd_of_num x0) x1).
Definition term696 := forall y0 : nadd, forall y1 : nadd, (forall y2 : nat, nadd_le (nadd_mul (nadd_of_num y2) y0) y1) -> nadd_eq y0 (nadd_of_num (NUMERAL 0)).
Definition term621 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((~ (nadd_le y0 y1)) \/ (~ (nadd_le y1 y2))) \/ (nadd_le y0 y2).
Definition term619 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, ((~ (nadd_le x0 y0)) \/ (~ (nadd_le y0 y1))) \/ (nadd_le x0 y1).
Definition term603 := forall y0 : nadd, forall y1 : nat, forall y2 : nadd, forall y3 : nat, (nadd_le y2 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) y2) -> (~ (nadd_le y2 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y4 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y4) y4) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> ~ (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_le y4 y5) /\ (nadd_le y5 y6)) -> nadd_le y4 y6).
Definition term602 := forall y0 : nadd, forall y1 : nat, forall y2 : nadd, forall y3 : nat, (nadd_le y2 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) y2) -> (~ (nadd_le y2 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y4 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y4) y4) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_le y4 y5) /\ (nadd_le y5 y6)) -> nadd_le y4 y6) -> False.
Definition term595 (x0 : nat) (x1 : nadd) := forall y0 : nadd, forall y1 : nat, (nadd_le y0 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) y0) -> (~ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y2 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_le y2 y3) /\ (nadd_le y3 y4)) -> nadd_le y2 y4).
Definition term594 (x0 : nat) (x1 : nadd) := forall y0 : nadd, forall y1 : nat, (nadd_le y0 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) y0) -> (~ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y2 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_le y2 y3) /\ (nadd_le y3 y4)) -> nadd_le y2 y4) -> False.
Definition term521 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((nadd_le y0 y2) \/ (~ (nadd_le y1 y3)))) /\ (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((~ (nadd_le y0 y2)) \/ (nadd_le y1 y3))).
Definition term519 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((nadd_le x0 y1) \/ (~ (nadd_le y0 y2)))) /\ (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((~ (nadd_le x0 y1)) \/ (nadd_le y0 y2))).
Definition term517 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((nadd_le x0 y0) \/ (~ (nadd_le x1 y1)))) /\ (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((~ (nadd_le x0 y0)) \/ (nadd_le x1 y1))).
Definition term510 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (((nadd_le y0 y2) \/ (~ (nadd_le y1 y3))) /\ ((~ (nadd_le y0 y2)) \/ (nadd_le y1 y3))).
Definition term508 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (((nadd_le x0 y1) \/ (~ (nadd_le y0 y2))) /\ ((~ (nadd_le x0 y1)) \/ (nadd_le y0 y2))).
Definition term506 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (((nadd_le x0 y0) \/ (~ (nadd_le x1 y1))) /\ ((~ (nadd_le x0 y0)) \/ (nadd_le x1 y1))).
Definition term496 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> (nadd_le x0 y1) = (nadd_le y0 y2).
Definition term494 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> (nadd_le x0 y0) = (nadd_le x1 y1).
Definition term489 := forall y0 : nadd, forall y1 : nadd, forall y2 : nat, forall y3 : nat, (nadd_le y0 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y2) y1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) y0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) (nadd_add y1 (nadd_mul (nadd_of_num y2) y1))) -> nadd_le (nadd_add y1 (nadd_mul (nadd_of_num y2) y1)) y0)) -> (forall y4 : nadd, nadd_eq y4 y4) -> ~ (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)).
Definition term488 := forall y0 : nadd, forall y1 : nadd, forall y2 : nat, forall y3 : nat, (nadd_le y0 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y2) y1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) y0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) (nadd_add y1 (nadd_mul (nadd_of_num y2) y1))) -> nadd_le (nadd_add y1 (nadd_mul (nadd_of_num y2) y1)) y0)) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> False.
Definition term485 (x0 : nadd) := forall y0 : nadd, forall y1 : nat, forall y2 : nat, (nadd_le x0 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) x0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0))) -> nadd_le (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)) x0)) -> (forall y3 : nadd, nadd_eq y3 y3) -> ~ (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)).
Definition term484 (x0 : nadd) := forall y0 : nadd, forall y1 : nat, forall y2 : nat, (nadd_le x0 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) x0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0))) -> nadd_le (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)) x0)) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> False.
Definition term460 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3).
Definition term421 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term419 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_add x0 y1) (nadd_add y0 y2)).
Definition term417 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_add x0 y0) (nadd_add x1 y1)).
Definition term406 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> nadd_eq (nadd_add x0 y1) (nadd_add y0 y2).
Definition term404 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> nadd_eq (nadd_add x0 y0) (nadd_add x1 y1).
Definition term399 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_add y2 y4) (nadd_add y3 y5)).
Definition term398 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_add y2 y4) (nadd_add y3 y5)) -> False.
Definition term384 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3).
Definition term359 := forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0).
Definition term353 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul (nadd_add x0 y0) y1) (nadd_add (nadd_mul x0 y1) (nadd_mul y0 y1)).
Definition term348 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y3 y4)) -> nadd_eq y2 y4) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul y2 y3) (nadd_mul y3 y2)) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, nadd_eq (nadd_mul (nadd_add y2 y3) y4) (nadd_add (nadd_mul y2 y4) (nadd_mul y3 y4))).
Definition term347 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y3 y4)) -> nadd_eq y2 y4) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul y2 y3) (nadd_mul y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, nadd_eq (nadd_mul (nadd_add y2 y3) y4) (nadd_add (nadd_mul y2 y4) (nadd_mul y3 y4))) -> False.
Definition term330 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2)).
Definition term268 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)).
Definition term266 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_mul x0 y1) (nadd_mul y0 y2)).
Definition term264 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_mul x0 y0) (nadd_mul x1 y1)).
Definition term251 := forall y0 : nadd, forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0).
Definition term246 := forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0)).
Definition term203 := forall y0 : nadd, forall y1 : nadd, ((nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ ((~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)).
Definition term198 := forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0).
Definition term192 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3).
Definition term190 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> nadd_eq (nadd_mul x0 y1) (nadd_mul y0 y2).
Definition term188 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> nadd_eq (nadd_mul x0 y0) (nadd_mul x1 y1).
Definition term179 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y1)) y0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0))) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_mul y2 y4) (nadd_mul y3 y5)) -> ~ (forall y2 : nat, forall y3 : nat, nadd_eq (nadd_add (nadd_of_num y2) (nadd_of_num y3)) (nadd_of_num (Nat.add y2 y3))).
Definition term178 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y1)) y0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0))) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_mul y2 y4) (nadd_mul y3 y5)) -> (forall y2 : nat, forall y3 : nat, nadd_eq (nadd_add (nadd_of_num y2) (nadd_of_num y3)) (nadd_of_num (Nat.add y2 y3))) -> False.
Definition term80 := forall y0 : nadd, forall y1 : nat, (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0).
Definition term75 := forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = ((nadd_le y0 y1) /\ (nadd_le y1 y0)).
Definition term74 := forall y0 : nadd, forall y1 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y0)) = (nadd_eq y0 y1).
Definition term63 := forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, nadd_le (nadd_add y0 y2) (nadd_add y1 y2)) -> nadd_le y0 y1.
Definition term54 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, (nadd_le (nadd_add y1 y0) (nadd_add y2 y0)) -> nadd_le y1 y2.
Definition term53 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, (nadd_le (nadd_add y0 x0) (nadd_add y1 x0)) -> nadd_le y0 y1.
Definition term45 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, (nadd_le (nadd_add x0 y1) (nadd_add y0 y1)) = (nadd_le x0 y0).
Definition term40 := forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, (nadd_le y0 y2) /\ (nadd_le y2 y1)) -> nadd_le y0 y1.
Definition term29 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, ((nadd_le x0 y0) /\ (nadd_le y0 y1)) -> nadd_le x0 y1.
Definition term27 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2.
Definition term20 := forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, (nadd_eq y0 y2) /\ (nadd_eq y2 y1)) -> nadd_eq y0 y1.
Definition term9 (x0 : nadd) := forall y0 : nadd, forall y1 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y0 y1)) -> nadd_eq x0 y1.
Definition term7 := forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2.
Definition term150 (x0 : Prop) := (~ x0) -> False.
Definition term490 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_eq x0 x2) /\ (nadd_eq x1 x3)) -> (nadd_le x0 x1) = (nadd_le x2 x3).
Definition term675 (x0 : nadd) (x1 : nadd) (x2 : nadd) := imp (~ ((~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2)))).
Definition term300 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp (~ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3)))).
Definition term631 (x0 : nat) := nadd_eq (nadd_of_num x0) (nadd_of_num x0).
Definition term371 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1)) /\ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))).
Definition term376 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> False.
Definition term322 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> False.
Definition term446 (x0 : nadd) := (fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_add y2 y4) (nadd_add y3 y5)) -> False) x0.
Definition term369 (x0 : nadd) := (fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y3 y4)) -> nadd_eq y2 y4) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul y2 y3) (nadd_mul y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, nadd_eq (nadd_mul (nadd_add y2 y3) y4) (nadd_add (nadd_mul y2 y4) (nadd_mul y3 y4))) -> False) x0.
Definition term319 (x0 : nadd) := (fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y1)) y0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0))) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_mul y2 y4) (nadd_mul y3 y5)) -> (forall y2 : nat, forall y3 : nat, nadd_eq (nadd_add (nadd_of_num y2) (nadd_of_num y3)) (nadd_of_num (Nat.add y2 y3))) -> False) x0.
Definition term81 (x0 : nadd) := (fun y0 : nadd => forall y1 : nat, (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0)) x0.
Definition term316 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1).
Definition term678 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := ((nadd_le x1 (nadd_of_num x0)) /\ (nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)).
Definition term392 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_add y1 y3) (nadd_add y2 y4)) -> False.
Definition term695 (x0 : nadd) := forall y0 : nadd, (forall y1 : nat, nadd_le (nadd_mul (nadd_of_num y1) x0) y0) -> nadd_eq x0 (nadd_of_num (NUMERAL 0)).
Definition term224 (x0 : nadd) := forall y0 : nadd, (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0)).
Definition term108 (x0 : nat) (x1 : nadd) (x2 : nadd) := nadd_le (nadd_mul (nadd_of_num x0) x1) x2.
Definition term98 (x0 : nadd) (x1 : nadd) := (forall y0 : nat, nadd_le (nadd_mul (nadd_of_num y0) x1) x0) -> nadd_eq x1 (nadd_of_num (NUMERAL 0)).
Definition term260 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq x0 x1) /\ (nadd_eq x2 x3).
Definition term241 := fun y0 : nadd => ((fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0) /\ ((fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0).
Definition term277 (x0 : nadd) (x1 : nadd) := ~ (nadd_eq x0 x1).
Definition term661 (x0 : nat) (x1 : nat) (x2 : nadd) := (~ (nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)).
Definition term610 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ~ ((nadd_le x0 x1) /\ (nadd_le x1 x2)).
Definition term291 (x0 : Prop) (x1 : Prop) := (~ x0) -> x1.
Definition term91 (x0 : nadd) := (fun y0 : nadd => (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> forall y1 : nat, exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0)) x0.
Definition term199 (x0 : nadd) (x1 : nadd) := ((nadd_eq x1 x0) \/ (~ (nadd_eq x0 x1))) /\ ((~ (nadd_eq x1 x0)) \/ (nadd_eq x0 x1)).
Definition term433 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term307 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1)).
Definition term153 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1)).
Definition term279 (x0 : nat) := (~ (nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)))) -> nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)).
Definition term451 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2.
Definition term159 := ~ (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))).
Definition term427 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 x3))).
Definition term276 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3))).
Definition term258 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((nadd_eq x0 x2) /\ (nadd_eq x1 x3))) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3)).
Definition term429 (x0 : nadd) := ~ (nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) x0).
Definition term532 (x0 : nat) (x1 : nadd) (x2 : nadd) := ~ (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2).
Definition term115 (x0 : nat) (x1 : nadd) (x2 : nadd) := ~ (nadd_le (nadd_mul (nadd_of_num x0) x1) x2).
Definition term514 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 y0)))) /\ (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 y0))).
Definition term281 (x0 : Prop) := (~ x0) -> x0.
Definition term292 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3)))) -> nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3).
Definition term57 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => (nadd_le (nadd_add x1 x0) (nadd_add y0 x0)) -> nadd_le x1 y0) x2.
Definition term32 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => ((nadd_le x1 x0) /\ (nadd_le x0 y0)) -> nadd_le x1 y0) x2.
Definition term393 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_add y1 y3) (nadd_add y2 y4)).
Definition term681 (x0 : nadd) := (fun y0 : nadd => forall y1 : nat, forall y2 : nadd, forall y3 : nat, (nadd_le y2 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) y2) -> (~ (nadd_le y2 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y4 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y4) y4) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_le y4 y5) /\ (nadd_le y5 y6)) -> nadd_le y4 y6) -> False) x0.
Definition term501 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((nadd_eq x0 x2) /\ (nadd_eq x1 x3))) \/ ((nadd_le x0 x1) = (nadd_le x2 x3)).
Definition term338 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))).
Definition term169 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> ~ (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))).
Definition term69 (x0 : nadd) := fun y0 : nadd => (nadd_eq x0 y0) = ((nadd_le x0 y0) /\ (nadd_le y0 x0)).
Definition term558 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2) -> False.
Definition term597 (x0 : nadd) := fun y0 : nat => forall y1 : nadd, forall y2 : nat, (nadd_le y1 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) y1) -> (~ (nadd_le y1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y3 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y3) y3) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> ~ (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_le y3 y4) /\ (nadd_le y4 y5)) -> nadd_le y3 y5).
Definition term596 (x0 : nadd) := fun y0 : nat => forall y1 : nadd, forall y2 : nat, (nadd_le y1 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) y1) -> (~ (nadd_le y1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y3 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y3) y3) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_le y3 y4) /\ (nadd_le y4 y5)) -> nadd_le y3 y5) -> False.
Definition term66 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (exists y1 : nadd, nadd_le (nadd_add x0 y1) (nadd_add y0 y1)) -> nadd_le x0 y0) x1.
Definition term43 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (exists y1 : nadd, (nadd_le x0 y1) /\ (nadd_le y1 y0)) -> nadd_le x0 y0) x1.
Definition term23 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (exists y1 : nadd, (nadd_eq x0 y1) /\ (nadd_eq y1 y0)) -> nadd_eq x0 y0) x1.
Definition term64 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, (nadd_le (nadd_add y1 y0) (nadd_add y2 y0)) -> nadd_le y1 y2) -> forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, nadd_le (nadd_add y0 y2) (nadd_add y1 y2)) -> nadd_le y0 y1.
Definition term41 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, (nadd_le y0 y2) /\ (nadd_le y2 y1)) -> nadd_le y0 y1.
Definition term21 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> forall y0 : nadd, forall y1 : nadd, (exists y2 : nadd, (nadd_eq y0 y2) /\ (nadd_eq y2 y1)) -> nadd_eq y0 y1.
Definition term294 (x0 : Prop) (x1 : Prop) := (~ x0) /\ (~ x1).
Definition term639 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x1 x3)) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))).
Definition term215 (x0 : nadd) (x1 : nadd) := and ((nadd_eq x1 x0) \/ (~ (nadd_eq x0 x1))).
Definition term469 (x0 : nat) (x1 : nat) (x2 : nadd) := imp (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)).
Definition term604 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => ((nadd_le x1 x0) /\ (nadd_le x0 y0)) -> nadd_le x1 y0.
Definition term668 (x0 : nadd) (x1 : nadd) (x2 : nadd) := @eq Prop ((~ (nadd_le x1 x0)) \/ ((~ (nadd_le x0 x2)) \/ (nadd_le x1 x2))).
Definition term301 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp ((nadd_eq x0 x1) /\ (nadd_eq x2 x3)).
Definition term231 := fun y0 : nadd => (forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ (forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)).
Definition term93 (x0 : nadd) := exists y0 : nat, nadd_le x0 (nadd_of_num y0).
Definition term227 (x0 : nadd) := fun y0 : nadd => (fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0.
Definition term539 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_eq x2 x0)) \/ (~ (nadd_le x1 x2)).
Definition term334 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term441 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) x1) /\ (nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term34 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_le x0 x1) /\ (nadd_le x1 x2).
Definition term669 (x0 : nadd) (x1 : nadd) (x2 : nadd) := @eq Prop ((nadd_le x0 x2) \/ ((~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2)))).
Definition term367 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term445 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> False.
Definition term527 (x0 : nat) (x1 : nadd) (x2 : nadd) := ~ (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2).
Definition term653 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq x0 x2) /\ ((nadd_eq x1 x3) /\ (nadd_le x2 x3)).
Definition term205 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (forall y0 : a0, x0 y0) /\ (forall y0 : a0, x1 y0).
Definition term573 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term332 := (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term162 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term411 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := nadd_eq (nadd_add x0 x1) (nadd_add x2 x3).
Definition term86 (x0 : nat) (x1 : nadd) := exists y0 : nat, nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num y0) x1).
Definition term638 (x0 : nat) (x1 : nat) (x2 : nadd) := ~ (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)).
Definition term58 (x0 : nadd) (x1 : nadd) := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, (nadd_le (nadd_add y1 y0) (nadd_add y2 y0)) -> nadd_le y1 y2) -> nadd_le x0 x1.
Definition term35 (x0 : nadd) (x1 : nadd) := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> nadd_le x0 x1.
Definition term689 (x0 : nadd) := exists y0 : nadd, nadd_le (nadd_add x0 y0) (nadd_add (nadd_of_num (NUMERAL 0)) y0).
Definition term464 (x0 : nat) (x1 : nadd) (x2 : nadd) := (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term62 (x0 : nadd) := forall y0 : nadd, (exists y1 : nadd, nadd_le (nadd_add x0 y1) (nadd_add y0 y1)) -> nadd_le x0 y0.
Definition term39 (x0 : nadd) := forall y0 : nadd, (exists y1 : nadd, (nadd_le x0 y1) /\ (nadd_le y1 y0)) -> nadd_le x0 y0.
Definition term19 (x0 : nadd) := forall y0 : nadd, (exists y1 : nadd, (nadd_eq x0 y1) /\ (nadd_eq y1 y0)) -> nadd_eq x0 y0.
Definition term323 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))).
Definition term5 (x0 : Prop) (x1 : Prop) (x2 : Prop) := x0 \/ (x1 \/ x2).
Definition term548 (x0 : nadd) (x1 : nadd) := ~ (~ (nadd_le x0 x1)).
Definition term96 (a0 : Type') (x0 : a0 -> Prop) := ~ (forall y0 : a0, x0 y0).
Definition term317 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1)) -> False.
Definition term616 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => ((~ (nadd_le x1 x0)) \/ (~ (nadd_le x0 y0))) \/ (nadd_le x1 y0).
Definition term691 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> False.
Definition term92 (x0 : nadd) := (fun y0 : nadd => exists y1 : nat, nadd_le y0 (nadd_of_num y1)) x0.
Definition term109 (x0 : nadd) (x1 : nadd) := fun y0 : nat => (fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0.
Definition term180 (x0 : nat) (x1 : nat) := nadd_eq (nadd_add (nadd_of_num x0) (nadd_of_num x1)) (nadd_of_num (Nat.add x0 x1)).
Definition term143 (x0 : nat) (x1 : nadd) := nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1.
Definition term617 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, ((~ (nadd_le x1 x0)) \/ (~ (nadd_le x0 y0))) \/ (nadd_le x1 y0).
Definition term140 (x0 : nat) := nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))).
Definition term646 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x0 x1))))) -> nadd_le x2 x3.
Definition term542 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x0 x1))))) -> nadd_le x2 x3.
Definition term255 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3).
Definition term523 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((nadd_le x0 y1) \/ (~ (nadd_le y0 y2)))) /\ (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((~ (nadd_le x0 y1)) \/ (nadd_le y0 y2)))) x1.
Definition term424 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_add x0 y1) (nadd_add y0 y2))) x1.
Definition term271 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_mul x0 y1) (nadd_mul y0 y2))) x1.
Definition term366 := nadd_of_num (NUMERAL (BIT1 0)).
Definition term552 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp ((nadd_eq x2 x0) /\ ((nadd_eq x3 x1) /\ (nadd_le x2 x3))).
Definition term193 := fun y0 : nadd => nadd_eq y0 y0.
Definition term212 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) x1.
Definition term577 := imp (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0).
Definition term387 := imp (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0).
Definition term164 := imp (forall y0 : nadd, nadd_eq y0 y0).
Definition term233 := forall y0 : nadd, ((fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0) /\ ((fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0).
Definition term208 (x0 : nadd) := forall y0 : nadd, ((fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0) /\ ((fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0).
Definition term305 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1).
Definition term560 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nat, forall y2 : nat, (nadd_le x0 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y1) y0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) x0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y1 (NUMERAL (BIT1 0)))) y0) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0))) -> nadd_le (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)) x0)) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> False) x1.
Definition term373 (x0 : nat) (x1 : nadd) := fun y0 : nadd => (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))).
Definition term667 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_le x0 x2) \/ ((~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2))).
Definition term580 (x0 : nadd) (x1 : nat) (x2 : nadd) := imp (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))).
Definition term609 := forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0.
Definition term410 := forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0.
Definition term95 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => (~ (forall y1 : a0, y0 y1)) = (exists y1 : a0, ~ (y0 y1))) x0.
Definition term655 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := imp ((nadd_eq x0 x2) /\ ((nadd_eq x1 x3) /\ (nadd_le x2 x3))).
Definition term126 := nadd_of_num (NUMERAL 0).
Definition term409 := fun y0 : nadd => nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0.
Definition term657 (x0 : nat) (x1 : nat) (x2 : nadd) := (nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)) (nadd_mul (nadd_of_num x1) x2)) /\ (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)).
Definition term443 (x0 : nadd) := nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0.
Definition term643 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_eq x0 x2)) \/ (~ (nadd_le x1 x2)).
Definition term357 (x0 : nadd) := forall y0 : nadd, nadd_eq (nadd_mul x0 y0) (nadd_mul y0 x0).
Definition term470 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term375 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term570 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term458 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term382 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term328 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term158 := (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term408 (x0 : nadd) := nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) x0.
Definition term512 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_le x0 x1) \/ (~ (nadd_le x2 x3)).
Definition term138 (x0 : nat) := nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0))).
Definition term684 (x0 : nadd) (x1 : nat) (x2 : nadd) (x3 : nat) := (fun y0 : nat => (nadd_le x0 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y1 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_le y1 y2) /\ (nadd_le y2 y3)) -> nadd_le y1 y3) -> False) x3.
Definition term562 (x0 : nat) (x1 : nadd) (x2 : nadd) (x3 : nat) := (fun y0 : nat => (nadd_le x2 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> False) x3.
Definition term569 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (((nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> ((nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False) -> (nadd_le x1 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term457 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (((nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> ((nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False) -> (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term238 (x0 : nadd) := and ((fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) x0).
Definition term60 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => nadd_le (nadd_add x0 y0) (nadd_add x1 y0).
Definition term48 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => (nadd_le (nadd_add x0 y0) (nadd_add x1 y0)) = (nadd_le x0 x1)) x2.
Definition term628 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3)))).
Definition term395 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_add y1 y3) (nadd_add y2 y4)).
Definition term394 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_add y1 y3) (nadd_add y2 y4)) -> False.
Definition term344 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y2 y3)) -> nadd_eq y1 y3) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul y1 y2) (nadd_mul y2 y1)) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul (nadd_add y1 y2) y3) (nadd_add (nadd_mul y1 y3) (nadd_mul y2 y3))).
Definition term343 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y2 y3)) -> nadd_eq y1 y3) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul y1 y2) (nadd_mul y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul (nadd_add y1 y2) y3) (nadd_add (nadd_mul y1 y3) (nadd_mul y2 y3))) -> False.
Definition term175 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y0)) x0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0))) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_mul y1 y3) (nadd_mul y2 y4)) -> ~ (forall y1 : nat, forall y2 : nat, nadd_eq (nadd_add (nadd_of_num y1) (nadd_of_num y2)) (nadd_of_num (Nat.add y1 y2))).
Definition term174 (x0 : nadd) := forall y0 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y0)) x0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0))) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_mul y1 y3) (nadd_mul y2 y4)) -> (forall y1 : nat, forall y2 : nat, nadd_eq (nadd_add (nadd_of_num y1) (nadd_of_num y2)) (nadd_of_num (Nat.add y1 y2))) -> False.
Definition term537 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x2 x0)) \/ ((nadd_le x0 x1) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3)))).
Definition term308 (x0 : nadd) (x1 : nadd) := @eq Prop ((~ (nadd_eq x1 x0)) \/ (nadd_eq x0 x1)).
Definition term228 (x0 : nadd) := forall y0 : nadd, (fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0.
Definition term223 (x0 : nadd) := forall y0 : nadd, (fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0.
Definition term381 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> ((~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term327 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> ((~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term157 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> ((~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term589 (x0 : nadd) (x1 : nat) (x2 : nadd) := fun y0 : nat => (nadd_le x0 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y1 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_le y1 y2) /\ (nadd_le y2 y3)) -> nadd_le y1 y3).
Definition term588 (x0 : nadd) (x1 : nat) (x2 : nadd) := fun y0 : nat => (nadd_le x0 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y1 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_le y1 y2) /\ (nadd_le y2 y3)) -> nadd_le y1 y3) -> False.
Definition term121 (x0 : nat) (x1 : nadd) (x2 : nadd) := nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2.
Definition term356 (x0 : nadd) := fun y0 : nadd => nadd_eq (nadd_mul x0 y0) (nadd_mul y0 x0).
Definition term662 (x0 : nat) (x1 : nat) (x2 : nadd) := ~ (nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2))).
Definition term463 (x0 : nat) (x1 : nadd) (x2 : nadd) := imp (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)).
Definition term149 (x0 : nat) (x1 : nadd) := nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1).
Definition term122 (x0 : nadd) := (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))) -> False.
Definition term687 (x0 : nat) (x1 : nadd) := fun y0 : nadd => (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) y0) /\ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1))).
Definition term692 (x0 : nat) (x1 : nadd) := fun y0 : nat => nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num y0) x1).
Definition term0 (x0 : Prop) := (fun y0 : Prop => forall y1 : Prop, forall y2 : Prop, (y0 \/ (y1 \/ y2)) = ((y0 \/ y1) \/ y2)) x0.
Definition term679 (x0 : nadd) (x1 : nat) (x2 : nadd) := (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)).
Definition term535 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x3 x1)) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))).
Definition term626 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))).
Definition term500 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))) /\ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3)).
Definition term645 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((nadd_le x0 x1) \/ ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3))))).
Definition term541 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((nadd_le x0 x1) \/ ((~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3))))).
Definition term448 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))) /\ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))).
Definition term659 (x0 : nat) (x1 : nat) (x2 : nadd) := ((nadd_eq (nadd_of_num x0) (nadd_of_num x0)) /\ ((nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)) (nadd_mul (nadd_of_num x1) x2)) /\ (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)))) -> nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)).
Definition term471 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term59 (x0 : nadd) (x1 : nadd) := exists y0 : nadd, nadd_le (nadd_add x0 y0) (nadd_add x1 y0).
Definition term269 (x0 : nadd) := (fun y0 : nadd => nadd_eq y0 y0) x0.
Definition term633 (x0 : nat) := ~ (nadd_eq (nadd_of_num x0) (nadd_of_num x0)).
Definition term171 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> ~ (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))).
Definition term623 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_le y0 y1)) \/ (~ (nadd_le y1 y2))) \/ (nadd_le y0 y2)) x0.
Definition term559 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nat, forall y3 : nat, (nadd_le y0 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y2) y1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) y0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) (nadd_add y1 (nadd_mul (nadd_of_num y2) y1))) -> nadd_le (nadd_add y1 (nadd_mul (nadd_of_num y2) y1)) y0)) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> False) x0.
Definition term522 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((nadd_le y0 y2) \/ (~ (nadd_le y1 y3)))) /\ (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((~ (nadd_le y0 y2)) \/ (nadd_le y1 y3)))) x0.
Definition term423 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_add y0 y2) (nadd_add y1 y3))) x0.
Definition term363 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) x0.
Definition term270 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3))) x0.
Definition term55 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, (nadd_le (nadd_add y1 y0) (nadd_add y2 y0)) -> nadd_le y1 y2) x0.
Definition term44 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, (nadd_le (nadd_add y0 y2) (nadd_add y1 y2)) = (nadd_le y0 y1)) x0.
Definition term28 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) x0.
Definition term8 (x0 : nadd) := (fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) x0.
Definition term303 (x0 : nat) (x1 : nadd) := ((nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0))) /\ (nadd_eq x1 x1)) -> nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1).
Definition term444 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term293 (x0 : Prop) (x1 : Prop) := ~ (x0 \/ x1).
Definition term284 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3)).
Definition term97 (a0 : Type') (x0 : a0 -> Prop) := exists y0 : a0, ~ (x0 y0).
Definition term47 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, (nadd_le (nadd_add x0 y0) (nadd_add x1 y0)) = (nadd_le x0 x1).
Definition term119 (x0 : nadd) (x1 : nat) := (fun y0 : nat => exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0)) x1.
Definition term437 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq (nadd_add x0 x2) (nadd_add x1 x3)) \/ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3))).
Definition term288 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq (nadd_mul x0 x2) (nadd_mul x1 x3)) \/ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3))).
Definition term572 := imp (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term336 := imp (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2).
Definition term331 := imp (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)).
Definition term167 := imp (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)).
Definition term161 := imp (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)).
Definition term599 (x0 : nadd) := forall y0 : nat, forall y1 : nadd, forall y2 : nat, (nadd_le y1 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) y1) -> (~ (nadd_le y1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y3 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y3) y3) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> ~ (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_le y3 y4) /\ (nadd_le y4 y5)) -> nadd_le y3 y5).
Definition term598 (x0 : nadd) := forall y0 : nat, forall y1 : nadd, forall y2 : nat, (nadd_le y1 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) y1) -> (~ (nadd_le y1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y3 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y3) y3) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_le y3 y4) /\ (nadd_le y4 y5)) -> nadd_le y3 y5) -> False.
Definition term481 (x0 : nadd) (x1 : nadd) := forall y0 : nat, forall y1 : nat, (nadd_le x1 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) x1) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0))) -> nadd_le (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)) x1)) -> (forall y2 : nadd, nadd_eq y2 y2) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)).
Definition term480 (x0 : nadd) (x1 : nadd) := forall y0 : nat, forall y1 : nat, (nadd_le x1 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) x1) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0))) -> nadd_le (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)) x1)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> False.
Definition term160 := forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1)).
Definition term342 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y2 y3)) -> nadd_eq y1 y3) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul y1 y2) (nadd_mul y2 y1)) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul (nadd_add y1 y2) y3) (nadd_add (nadd_mul y1 y3) (nadd_mul y2 y3))).
Definition term341 (x0 : nadd) := fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y2 y3)) -> nadd_eq y1 y3) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul y1 y2) (nadd_mul y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul (nadd_add y1 y2) y3) (nadd_add (nadd_mul y1 y3) (nadd_mul y2 y3))) -> False.
Definition term620 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_le y0 y1)) \/ (~ (nadd_le y1 y2))) \/ (nadd_le y0 y2).
Definition term606 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2.
Definition term520 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((nadd_le y0 y2) \/ (~ (nadd_le y1 y3)))) /\ (((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ ((~ (nadd_le y0 y2)) \/ (nadd_le y1 y3))).
Definition term518 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((nadd_le x0 y1) \/ (~ (nadd_le y0 y2)))) /\ (((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ ((~ (nadd_le x0 y1)) \/ (nadd_le y0 y2))).
Definition term509 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (((nadd_le y0 y2) \/ (~ (nadd_le y1 y3))) /\ ((~ (nadd_le y0 y2)) \/ (nadd_le y1 y3))).
Definition term507 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (((nadd_le x0 y1) \/ (~ (nadd_le y0 y2))) /\ ((~ (nadd_le x0 y1)) \/ (nadd_le y0 y2))).
Definition term497 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3).
Definition term495 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> (nadd_le x0 y1) = (nadd_le y0 y2).
Definition term487 := fun y0 : nadd => forall y1 : nadd, forall y2 : nat, forall y3 : nat, (nadd_le y0 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y2) y1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) y0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) (nadd_add y1 (nadd_mul (nadd_of_num y2) y1))) -> nadd_le (nadd_add y1 (nadd_mul (nadd_of_num y2) y1)) y0)) -> (forall y4 : nadd, nadd_eq y4 y4) -> ~ (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)).
Definition term486 := fun y0 : nadd => forall y1 : nadd, forall y2 : nat, forall y3 : nat, (nadd_le y0 (nadd_of_num y3)) -> (nadd_le (nadd_of_num y3) (nadd_mul (nadd_of_num y2) y1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) y0) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y2 (NUMERAL (BIT1 0)))) y1) (nadd_add y1 (nadd_mul (nadd_of_num y2) y1))) -> nadd_le (nadd_add y1 (nadd_mul (nadd_of_num y2) y1)) y0)) -> (forall y4 : nadd, nadd_eq y4 y4) -> (forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, forall y7 : nadd, ((nadd_eq y4 y5) /\ (nadd_eq y6 y7)) -> (nadd_le y4 y6) = (nadd_le y5 y7)) -> False.
Definition term420 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term418 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_add x0 y1) (nadd_add y0 y2)).
Definition term407 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3).
Definition term405 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> nadd_eq (nadd_add x0 y1) (nadd_add y0 y2).
Definition term362 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2.
Definition term354 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2)).
Definition term267 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((~ (nadd_eq y0 y1)) \/ (~ (nadd_eq y2 y3))) \/ (nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)).
Definition term265 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((~ (nadd_eq x0 y0)) \/ (~ (nadd_eq y1 y2))) \/ (nadd_eq (nadd_mul x0 y1) (nadd_mul y0 y2)).
Definition term191 := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3).
Definition term189 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, forall y2 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y1 y2)) -> nadd_eq (nadd_mul x0 y1) (nadd_mul y0 y2).
Definition term216 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0)) x1.
Definition term141 (x0 : nat) := nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)).
Definition term466 (x0 : nat) (x1 : nadd) (x2 : nadd) := imp (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2).
Definition term534 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x1 x3)) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3)).
Definition term110 (x0 : nadd) (x1 : nadd) := forall y0 : nat, (fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0.
Definition term561 (x0 : nadd) (x1 : nadd) (x2 : nat) := (fun y0 : nat => forall y1 : nat, (nadd_le x1 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) x1) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0))) -> nadd_le (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)) x1)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> False) x2.
Definition term51 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_le (nadd_add x1 x0) (nadd_add x2 x0)) -> nadd_le x1 x2.
Definition term101 (x0 : nadd) (x1 : nadd) := forall y0 : nat, nadd_le (nadd_mul (nadd_of_num y0) x0) x1.
Definition term540 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3)))).
Definition term438 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 x3)))).
Definition term289 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3)))).
Definition term515 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 y0)))) /\ (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 y0))).
Definition term299 (x0 : nadd) (x1 : nadd) := and (nadd_eq x0 x1).
Definition term498 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) /\ (~ (nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)).
Definition term253 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ~ ((nadd_eq x0 x1) /\ (nadd_eq x2 x3)).
Definition term462 := (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term386 := (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term377 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))).
Definition term213 (x0 : nadd) (x1 : nadd) := (nadd_eq x1 x0) \/ (~ (nadd_eq x0 x1)).
Definition term170 (x0 : nat) (x1 : nadd) := imp (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))).
Definition term286 (x0 : nadd) (x1 : nadd) := or (~ (nadd_eq x0 x1)).
Definition term310 (x0 : nadd) (x1 : nadd) := (~ (~ (nadd_eq x1 x0))) -> nadd_eq x0 x1.
Definition term677 (x0 : nadd) (x1 : nat) (x2 : nat) (x3 : nadd) := (nadd_le x0 (nadd_of_num x1)) /\ (nadd_le (nadd_of_num x1) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3))).
Definition term440 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3)))) -> nadd_eq (nadd_add x0 x1) (nadd_add x2 x3).
Definition term465 (x0 : nat) (x1 : nadd) (x2 : nadd) := (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term413 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 x3)).
Definition term524 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => forall y1 : nadd, (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((nadd_le x0 y0) \/ (~ (nadd_le x1 y1)))) /\ (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((~ (nadd_le x0 y0)) \/ (nadd_le x1 y1)))) x2.
Definition term425 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_add x0 y0) (nadd_add x1 y1))) x2.
Definition term272 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_mul x0 y0) (nadd_mul x1 y1))) x2.
Definition term6 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 \/ x1) \/ x2.
Definition term355 (x0 : nadd) (x1 : nadd) := nadd_eq (nadd_mul x1 x0) (nadd_mul x0 x1).
Definition term195 (x0 : nadd) := fun y0 : nadd => (nadd_eq x0 y0) = (nadd_eq y0 x0).
Definition term453 (x0 : nat) (x1 : nadd) (x2 : nadd) := ~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2).
Definition term461 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term385 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term135 (x0 : nat) := Nat.add x0 (NUMERAL (BIT1 0)).
Definition term104 (x0 : nadd) (x1 : nadd) := ~ (forall y0 : nat, (fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0).
Definition term127 (x0 : nadd) := and (nadd_le x0 (nadd_of_num (NUMERAL 0))).
Definition term194 := forall y0 : nadd, nadd_eq y0 y0.
Definition term117 (x0 : nadd) (x1 : nadd) := fun y0 : nat => ~ (nadd_le (nadd_mul (nadd_of_num y0) x0) x1).
Definition term467 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term676 (x0 : nadd) (x1 : nadd) (x2 : nadd) := imp ((nadd_le x0 x1) /\ (nadd_le x1 x2)).
Definition term106 (x0 : nadd) (x1 : nadd) := fun y0 : nat => nadd_le (nadd_mul (nadd_of_num y0) x0) x1.
Definition term648 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ~ ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3)))).
Definition term544 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ~ ((~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3)))).
Definition term430 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1).
Definition term400 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_eq x0 x2) /\ (nadd_eq x1 x3)) -> nadd_eq (nadd_add x0 x1) (nadd_add x2 x3).
Definition term275 (x0 : nat) (x1 : nat) := (fun y0 : nat => nadd_eq (nadd_add (nadd_of_num x0) (nadd_of_num y0)) (nadd_of_num (Nat.add x0 y0))) x1.
Definition term613 (x0 : nadd) (x1 : nadd) (x2 : nadd) := or ((~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2))).
Definition term257 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := or ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3))).
Definition term324 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term337 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term168 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term304 (x0 : nat) := nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0).
Definition term243 := @eq Prop (forall y0 : nadd, (forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ (forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0))).
Definition term242 := @eq Prop (forall y0 : nadd, ((fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0) /\ ((fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0)).
Definition term221 (x0 : nadd) := @eq Prop (forall y0 : nadd, ((nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) /\ ((~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0))).
Definition term220 (x0 : nadd) := @eq Prop (forall y0 : nadd, ((fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0) /\ ((fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0)).
Definition term472 (x0 : nadd) (x1 : nat) := imp (nadd_le x0 (nadd_of_num x1)).
Definition term214 (x0 : nadd) (x1 : nadd) := and ((fun y0 : nadd => (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) x1).
Definition term528 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3))).
Definition term306 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1))) -> nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1).
Definition term100 (x0 : nadd) := nadd_eq x0 (nadd_of_num (NUMERAL 0)).
Definition term25 (x0 : nat) := forall y0 : nat, (Nat.add x0 y0) = (Nat.add y0 x0).
Definition term674 (x0 : nadd) (x1 : nadd) := and (nadd_le x0 x1).
Definition term550 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq x2 x0) /\ ((nadd_eq x3 x1) /\ (nadd_le x2 x3)).
Definition term283 (x0 : nadd) := ~ (nadd_eq x0 x0).
Definition term578 := (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term412 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ ((nadd_eq x0 x2) /\ (nadd_eq x1 x3))) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 x3)).
Definition term226 (x0 : nadd) := and (forall y0 : nadd, (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))).
Definition term314 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1)) -> nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1).
Definition term12 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => ((nadd_eq x1 x0) /\ (nadd_eq x0 y0)) -> nadd_eq x1 y0) x2.
Definition term99 (x0 : nadd) (x1 : nadd) := (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))) -> ~ (forall y0 : nat, nadd_le (nadd_mul (nadd_of_num y0) x0) x1).
Definition term83 (x0 : nadd) (x1 : nat) := (fun y0 : nat => (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))) -> exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0)) x1.
Definition term435 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq (nadd_add x0 x2) (nadd_add x1 x3)) \/ (~ (nadd_eq x2 x3)).
Definition term285 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_eq (nadd_mul x0 x2) (nadd_mul x1 x3)) \/ (~ (nadd_eq x2 x3)).
Definition term79 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => (nadd_eq x0 y0) = ((nadd_le x0 y0) /\ (nadd_le y0 x0))) x1.
Definition term1 (x0 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 \/ (y0 \/ y1)) = ((x0 \/ y0) \/ y1).
Definition term682 (x0 : nadd) (x1 : nat) := (fun y0 : nat => forall y1 : nadd, forall y2 : nat, (nadd_le y1 (nadd_of_num y2)) -> (nadd_le (nadd_of_num y2) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) y1) -> (~ (nadd_le y1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y3 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y3) y3) -> (forall y3 : nadd, nadd_eq y3 y3) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, forall y6 : nadd, ((nadd_eq y3 y4) /\ (nadd_eq y5 y6)) -> (nadd_le y3 y5) = (nadd_le y4 y6)) -> (forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_le y3 y4) /\ (nadd_le y4 y5)) -> nadd_le y3 y5) -> False) x1.
Definition term504 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (((nadd_le x0 x1) \/ (~ (nadd_le x2 y0))) /\ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 y0))).
Definition term26 (x0 : nat) (x1 : nat) := (fun y0 : nat => (Nat.add x0 y0) = (Nat.add y0 x0)) x1.
Definition term200 (x0 : nadd) := fun y0 : nadd => ((nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) /\ ((~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0)).
Definition term637 (x0 : nat) (x1 : nat) (x2 : nadd) := (~ (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2).
Definition term473 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term454 (x0 : nat) (x1 : nat) (x2 : nadd) (x3 : nadd) := (nadd_le x3 (nadd_of_num x0)) -> (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x3) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) (nadd_add x2 (nadd_mul (nadd_of_num x1) x2))) -> nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x3)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> False.
Definition term673 (x0 : nadd) (x1 : nadd) := and (~ (~ (nadd_le x0 x1))).
Definition term298 (x0 : nadd) (x1 : nadd) := and (~ (~ (nadd_eq x0 x1))).
Definition term690 (x0 : nadd) := fun y0 : nadd => nadd_le (nadd_add x0 y0) (nadd_add (nadd_of_num (NUMERAL 0)) y0).
Definition term593 (x0 : nat) (x1 : nadd) := fun y0 : nadd => forall y1 : nat, (nadd_le y0 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) y0) -> (~ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y2 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_le y2 y3) /\ (nadd_le y3 y4)) -> nadd_le y2 y4).
Definition term592 (x0 : nat) (x1 : nadd) := fun y0 : nadd => forall y1 : nat, (nadd_le y0 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) y0) -> (~ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y2 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_le y2 y3) /\ (nadd_le y3 y4)) -> nadd_le y2 y4) -> False.
Definition term397 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_add y2 y4) (nadd_add y3 y5)).
Definition term396 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)) (nadd_add y0 (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_add y2 y4) (nadd_add y3 y5)) -> False.
Definition term346 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y3 y4)) -> nadd_eq y2 y4) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul y2 y3) (nadd_mul y3 y2)) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, nadd_eq (nadd_mul (nadd_add y2 y3) y4) (nadd_add (nadd_mul y2 y4) (nadd_mul y3 y4))).
Definition term345 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) (nadd_mul (nadd_of_num y1) y0)))) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y3 y4)) -> nadd_eq y2 y4) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul y2 y3) (nadd_mul y3 y2)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, nadd_eq (nadd_mul (nadd_add y2 y3) y4) (nadd_add (nadd_mul y2 y4) (nadd_mul y3 y4))) -> False.
Definition term177 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y1)) y0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0))) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_mul y2 y4) (nadd_mul y3 y5)) -> ~ (forall y2 : nat, forall y3 : nat, nadd_eq (nadd_add (nadd_of_num y2) (nadd_of_num y3)) (nadd_of_num (Nat.add y2 y3))).
Definition term176 := fun y0 : nadd => forall y1 : nat, (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y1)) y0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y1)) y0))) -> (forall y2 : nadd, forall y3 : nadd, (nadd_eq y2 y3) = (nadd_eq y3 y2)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> nadd_eq (nadd_mul y2 y4) (nadd_mul y3 y5)) -> (forall y2 : nat, forall y3 : nat, nadd_eq (nadd_add (nadd_of_num y2) (nadd_of_num y3)) (nadd_of_num (Nat.add y2 y3))) -> False.
Definition term18 (x0 : nadd) (x1 : nadd) := (exists y0 : nadd, (nadd_eq x0 y0) /\ (nadd_eq y0 x1)) -> nadd_eq x0 x1.
Definition term575 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term388 := (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term165 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term554 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_eq x2 x2) /\ (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2).
Definition term232 := forall y0 : nadd, (forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ (forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)).
Definition term49 (x0 : nadd) (x1 : nadd) (x2 : nadd) := nadd_le (nadd_add x0 x2) (nadd_add x1 x2).
Definition term549 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_eq x2 x0) /\ (nadd_le x1 x2).
Definition term365 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => nadd_eq (nadd_mul (nadd_add x0 x1) y0) (nadd_add (nadd_mul x0 y0) (nadd_mul x1 y0))) x2.
Definition term379 (x0 : nat) (x1 : nadd) := ((~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False) -> (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term36 (x0 : nadd) (x1 : nadd) := exists y0 : nadd, (nadd_le x0 y0) /\ (nadd_le y0 x1).
Definition term16 (x0 : nadd) (x1 : nadd) := exists y0 : nadd, (nadd_eq x0 y0) /\ (nadd_eq y0 x1).
Definition term693 (x0 : nadd) (x1 : nadd) := (forall y0 : nat, exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0)) -> exists y0 : nat, ~ (nadd_le (nadd_mul (nadd_of_num y0) x0) x1).
Definition term632 (x0 : nat) := (~ (nadd_eq (nadd_of_num x0) (nadd_of_num x0))) -> nadd_eq (nadd_of_num x0) (nadd_of_num x0).
Definition term349 (x0 : nadd) (x1 : nadd) (x2 : nadd) := nadd_eq (nadd_mul (nadd_add x0 x1) x2) (nadd_add (nadd_mul x0 x2) (nadd_mul x1 x2)).
Definition term129 (x0 : nadd) := nadd_le x0 (nadd_of_num (NUMERAL 0)).
Definition term37 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => (nadd_le x0 y0) /\ (nadd_le y0 x1).
Definition term219 (x0 : nadd) := fun y0 : nadd => ((fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0) /\ ((fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0).
Definition term88 (x0 : nadd) := (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))) -> forall y0 : nat, exists y1 : nat, nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num y1) x0).
Definition term339 (x0 : nat) (x1 : nadd) := imp (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))).
Definition term315 (x0 : nat) (x1 : nadd) := nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1.
Definition term658 (x0 : nat) (x1 : nat) (x2 : nadd) := (nadd_eq (nadd_of_num x0) (nadd_of_num x0)) /\ ((nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)) (nadd_mul (nadd_of_num x1) x2)) /\ (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2))).
Definition term326 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term156 (x0 : nat) (x1 : nadd) := (((~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term511 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3)))) /\ (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3))).
Definition term254 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3)).
Definition term259 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3)).
Definition term350 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => nadd_eq (nadd_mul (nadd_add x0 x1) y0) (nadd_add (nadd_mul x0 y0) (nadd_mul x1 y0)).
Definition term250 := forall y0 : nadd, (fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0.
Definition term245 := forall y0 : nadd, (fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0.
Definition term107 (x0 : nadd) (x1 : nadd) (x2 : nat) := (fun y0 : nat => nadd_le (nadd_mul (nadd_of_num y0) x0) x1) x2.
Definition term436 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x1)) \/ ((nadd_eq (nadd_add x0 x2) (nadd_add x1 x3)) \/ (~ (nadd_eq x2 x3))).
Definition term287 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x1)) \/ ((nadd_eq (nadd_mul x0 x2) (nadd_mul x1 x3)) \/ (~ (nadd_eq x2 x3))).
Definition term450 (x0 : nat) (x1 : nadd) := fun y0 : nadd => (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))).
Definition term442 (x0 : nat) (x1 : nadd) := ((nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) x1) /\ (nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1))) -> nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term118 (x0 : nadd) (x1 : nadd) := exists y0 : nat, ~ (nadd_le (nadd_mul (nadd_of_num y0) x0) x1).
Definition term249 := fun y0 : nadd => (fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0.
Definition term244 := fun y0 : nadd => (fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0.
Definition term274 (x0 : nat) := (fun y0 : nat => forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) x0.
Definition term24 (x0 : nat) := (fun y0 : nat => forall y1 : nat, (Nat.add y0 y1) = (Nat.add y1 y0)) x0.
Definition term529 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term390 (x0 : nat) (x1 : nadd) := imp (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))).
Definition term325 (x0 : nat) (x1 : nadd) := ((~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))) -> False.
Definition term155 (x0 : nat) (x1 : nadd) := ((~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False) -> (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term113 (x0 : nadd) (x1 : nadd) := @eq Prop (~ (forall y0 : nat, nadd_le (nadd_mul (nadd_of_num y0) x0) x1)).
Definition term112 (x0 : nadd) (x1 : nadd) := @eq Prop (~ (forall y0 : nat, (fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0)).
Definition term184 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((nadd_eq x0 x2) /\ (nadd_eq x1 x3)) -> nadd_eq (nadd_mul x0 x1) (nadd_mul x2 x3).
Definition term640 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_le x0 x1) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3))).
Definition term536 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (nadd_le x0 x1) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3))).
Definition term151 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1).
Definition term309 (x0 : nadd) (x1 : nadd) := @eq Prop ((nadd_eq x1 x0) \/ (~ (nadd_eq x0 x1))).
Definition term297 (x0 : nadd) (x1 : nadd) := ~ (~ (nadd_eq x0 x1)).
Definition term516 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((nadd_le x0 y0) \/ (~ (nadd_le x1 y1)))) /\ (((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ ((~ (nadd_le x0 y0)) \/ (nadd_le x1 y1))).
Definition term505 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (((nadd_le x0 y0) \/ (~ (nadd_le x1 y1))) /\ ((~ (nadd_le x0 y0)) \/ (nadd_le x1 y1))).
Definition term493 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> (nadd_le x0 y0) = (nadd_le x1 y1).
Definition term416 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_add x0 y0) (nadd_add x1 y1)).
Definition term403 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> nadd_eq (nadd_add x0 y0) (nadd_add x1 y1).
Definition term352 (x0 : nadd) := fun y0 : nadd => forall y1 : nadd, nadd_eq (nadd_mul (nadd_add x0 y0) y1) (nadd_add (nadd_mul x0 y1) (nadd_mul y0 y1)).
Definition term263 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq y0 y1))) \/ (nadd_eq (nadd_mul x0 y0) (nadd_mul x1 y1)).
Definition term202 := fun y0 : nadd => forall y1 : nadd, ((nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) /\ ((~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)).
Definition term187 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => forall y1 : nadd, ((nadd_eq x0 x1) /\ (nadd_eq y0 y1)) -> nadd_eq (nadd_mul x0 y0) (nadd_mul x1 y1).
Definition term73 := fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) = ((nadd_le y0 y1) /\ (nadd_le y1 y0)).
Definition term502 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 x3))) \/ (((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))) /\ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 x3))).
Definition term116 (x0 : nadd) (x1 : nadd) := fun y0 : nat => ~ ((fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0).
Definition term70 (x0 : nadd) := forall y0 : nadd, ((nadd_le x0 y0) /\ (nadd_le y0 x0)) = (nadd_eq x0 y0).
Definition term154 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))) -> False.
Definition term556 (x0 : nat) (x1 : nadd) (x2 : nadd) := ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) /\ ((nadd_eq x2 x2) /\ (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2.
Definition term71 (x0 : nadd) := forall y0 : nadd, (nadd_eq x0 y0) = ((nadd_le x0 y0) /\ (nadd_le y0 x0)).
Definition term680 (x0 : nadd) (x1 : nat) (x2 : nadd) := (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2))) -> False.
Definition term434 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x1 x3)) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 x3)).
Definition term543 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x2 x0)) \/ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3))).
Definition term147 (x0 : nat) (x1 : nadd) := (exists y0 : nadd, (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)).
Definition term447 (x0 : nadd) (x1 : nat) := (fun y0 : nat => (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_add y1 y3) (nadd_add y2 y4)) -> False) x1.
Definition term370 (x0 : nadd) (x1 : nat) := (fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x0) (nadd_mul (nadd_of_num y0) x0)))) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y2 y3)) -> nadd_eq y1 y3) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul y1 y2) (nadd_mul y2 y1)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, nadd_eq (nadd_mul (nadd_add y1 y2) y3) (nadd_add (nadd_mul y1 y3) (nadd_mul y2 y3))) -> False) x1.
Definition term320 (x0 : nadd) (x1 : nat) := (fun y0 : nat => (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) y0)) x0) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num y0)) x0))) -> (forall y1 : nadd, forall y2 : nadd, (nadd_eq y1 y2) = (nadd_eq y2 y1)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> nadd_eq (nadd_mul y1 y3) (nadd_mul y2 y4)) -> (forall y1 : nat, forall y2 : nat, nadd_eq (nadd_add (nadd_of_num y1) (nadd_of_num y2)) (nadd_of_num (Nat.add y1 y2))) -> False) x1.
Definition term120 (x0 : nat) (x1 : nat) (x2 : nadd) := nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x1) x2).
Definition term302 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0))) /\ (nadd_eq x1 x1).
Definition term671 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ~ ((~ (nadd_le x0 x1)) \/ (~ (nadd_le x1 x2))).
Definition term650 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ~ ((~ (nadd_eq x0 x2)) \/ (~ (nadd_le x1 x2))).
Definition term546 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ~ ((~ (nadd_eq x2 x0)) \/ (~ (nadd_le x1 x2))).
Definition term295 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := ~ ((~ (nadd_eq x0 x1)) \/ (~ (nadd_eq x2 x3))).
Definition term414 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 y0)).
Definition term261 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 y0)).
Definition term52 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, (nadd_le (nadd_add x1 x0) (nadd_add y0 x0)) -> nadd_le x1 y0.
Definition term31 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, ((nadd_le x1 x0) /\ (nadd_le x0 y0)) -> nadd_le x1 y0.
Definition term11 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, ((nadd_eq x1 x0) /\ (nadd_eq x0 y0)) -> nadd_eq x1 y0.
Definition term644 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := @eq Prop ((~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 x3))))).
Definition term105 (x0 : nadd) (x1 : nadd) := exists y0 : nat, ~ ((fun y1 : nat => nadd_le (nadd_mul (nadd_of_num y1) x0) x1) y0).
Definition term15 (x0 : nadd) (x1 : nadd) := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> nadd_eq x0 x1.
Definition term247 := and (forall y0 : nadd, (fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0).
Definition term225 (x0 : nadd) := and (forall y0 : nadd, (fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0).
Definition term492 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> (nadd_le x0 x1) = (nadd_le x2 y0).
Definition term402 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> nadd_eq (nadd_add x0 x1) (nadd_add x2 y0).
Definition term186 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> nadd_eq (nadd_mul x0 x1) (nadd_mul x2 y0).
Definition term555 (x0 : nat) (x1 : nadd) (x2 : nadd) := (nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) /\ ((nadd_eq x2 x2) /\ (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2)).
Definition term368 (x0 : nat) (x1 : nadd) := (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1))) -> False.
Definition term685 (x0 : nadd) (x1 : nat) (x2 : nadd) := (nadd_le (nadd_add x2 (nadd_mul (nadd_of_num x1) x2)) x0) /\ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2))).
Definition term664 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_le x0 x2) \/ (~ (nadd_le x1 x2)).
Definition term615 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ((~ (nadd_le x1 x0)) \/ (~ (nadd_le x0 x2))) \/ (nadd_le x1 x2).
Definition term574 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term333 := (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))).
Definition term163 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> ~ (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))).
Definition term84 (x0 : nat) (x1 : nadd) := (~ (nadd_eq x1 (nadd_of_num (NUMERAL 0)))) -> exists y0 : nat, nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num y0) x1).
Definition term624 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, ((~ (nadd_le x0 y0)) \/ (~ (nadd_le y0 y1))) \/ (nadd_le x0 y1)) x1.
Definition term364 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, nadd_eq (nadd_mul (nadd_add x0 y0) y1) (nadd_add (nadd_mul x0 y1) (nadd_mul y0 y1))) x1.
Definition term56 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, (nadd_le (nadd_add y0 x0) (nadd_add y1 x0)) -> nadd_le y0 y1) x1.
Definition term46 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, (nadd_le (nadd_add x0 y1) (nadd_add y0 y1)) = (nadd_le x0 y0)) x1.
Definition term30 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, ((nadd_le x0 y0) /\ (nadd_le y0 y1)) -> nadd_le x0 y1) x1.
Definition term10 (x0 : nadd) (x1 : nadd) := (fun y0 : nadd => forall y1 : nadd, ((nadd_eq x0 y0) /\ (nadd_eq y0 y1)) -> nadd_eq x0 y1) x1.
Definition term360 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => ((nadd_eq x1 x0) /\ (nadd_eq x0 y0)) -> nadd_eq x1 y0.
Definition term649 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (~ (nadd_eq x0 x2))) /\ (~ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3)))).
Definition term545 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (~ (nadd_eq x2 x0))) /\ (~ ((~ (nadd_eq x3 x1)) \/ (~ (nadd_le x2 x3)))).
Definition term89 := forall y0 : nadd, (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> forall y1 : nat, exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0).
Definition term76 (x0 : nadd) := (fun y0 : nadd => nadd_le (nadd_of_num (NUMERAL 0)) y0) x0.
Definition term683 (x0 : nat) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => forall y1 : nat, (nadd_le y0 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) y0) -> (~ (nadd_le y0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y2 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y2) y2) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_le y2 y3) /\ (nadd_le y3 y4)) -> nadd_le y2 y4) -> False) x2.
Definition term340 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) -> (forall y0 : nadd, forall y1 : nadd, nadd_eq (nadd_mul y0 y1) (nadd_mul y1 y0)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))).
Definition term563 (x0 : nadd) (x1 : nat) (x2 : nadd) := nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)).
Definition term2 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => forall y1 : Prop, (x0 \/ (y0 \/ y1)) = ((x0 \/ y0) \/ y1)) x1.
Definition term123 (x0 : nadd) := ~ (~ (nadd_eq x0 (nadd_of_num (NUMERAL 0)))).
Definition term426 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (fun y0 : nadd => ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 y0))) x3.
Definition term273 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (fun y0 : nadd => ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 y0))) x3.
Definition term234 := (forall y0 : nadd, (fun y1 : nadd => forall y2 : nadd, (nadd_eq y1 y2) \/ (~ (nadd_eq y2 y1))) y0) /\ (forall y0 : nadd, (fun y1 : nadd => forall y2 : nadd, (~ (nadd_eq y1 y2)) \/ (nadd_eq y2 y1)) y0).
Definition term209 (x0 : nadd) := (forall y0 : nadd, (fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0) /\ (forall y0 : nadd, (fun y1 : nadd => (~ (nadd_eq x0 y1)) \/ (nadd_eq y1 x0)) y0).
Definition term432 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1))) -> nadd_eq (nadd_mul (nadd_of_num x0) x1) (nadd_mul (nadd_of_num x0) x1).
Definition term210 (x0 : nadd) := fun y0 : nadd => (nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0)).
Definition term114 (x0 : nadd) (x1 : nadd) (x2 : nat) := ~ ((fun y0 : nat => nadd_le (nadd_mul (nadd_of_num y0) x0) x1) x2).
Definition term222 (x0 : nadd) := fun y0 : nadd => (fun y1 : nadd => (nadd_eq x0 y1) \/ (~ (nadd_eq y1 x0))) y0.
Definition term647 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3))).
Definition term183 := fun y0 : nat => forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1)).
Definition term576 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term389 := (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term166 := (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_mul y0 y2) (nadd_mul y1 y3)) -> ~ (forall y0 : nat, forall y1 : nat, nadd_eq (nadd_add (nadd_of_num y0) (nadd_of_num y1)) (nadd_of_num (Nat.add y0 y1))).
Definition term641 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_eq x0 x2)) \/ ((nadd_le x0 x1) \/ ((~ (nadd_eq x1 x3)) \/ (~ (nadd_le x2 x3)))).
Definition term148 (x0 : nat) (x1 : nadd) := (exists y0 : nadd, (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) y0) /\ (nadd_eq y0 (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)))) -> nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term204 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (x0 y0) /\ (x1 y0).
Definition term102 (x0 : nat -> Prop) := ~ (forall y0 : nat, x0 y0).
Definition term85 (x0 : nadd) := ~ (nadd_eq x0 (nadd_of_num (NUMERAL 0))).
Definition term452 (x0 : nat) (x1 : nadd) (x2 : nadd) := (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> False.
Definition term152 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1) (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1))) -> False.
Definition term530 (x0 : nat) (x1 : nadd) := ~ (nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))).
Definition term591 (x0 : nadd) (x1 : nat) (x2 : nadd) := forall y0 : nat, (nadd_le x0 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y1 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_le y1 y2) /\ (nadd_le y2 y3)) -> nadd_le y1 y3).
Definition term590 (x0 : nadd) (x1 : nat) (x2 : nadd) := forall y0 : nat, (nadd_le x0 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x1) x2)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y1 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y1) y1) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_le y1 y2) /\ (nadd_le y2 y3)) -> nadd_le y1 y3) -> False.
Definition term477 (x0 : nat) (x1 : nadd) (x2 : nadd) := forall y0 : nat, (nadd_le x2 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y1 : nadd, nadd_eq y1 y1) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)).
Definition term476 (x0 : nat) (x1 : nadd) (x2 : nadd) := forall y0 : nat, (nadd_le x2 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> False.
Definition term312 (x0 : nadd) (x1 : nadd) := imp (nadd_eq x0 x1).
Definition term475 (x0 : nat) (x1 : nadd) (x2 : nadd) := fun y0 : nat => (nadd_le x2 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y1 : nadd, nadd_eq y1 y1) -> ~ (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)).
Definition term474 (x0 : nat) (x1 : nadd) (x2 : nadd) := fun y0 : nat => (nadd_le x2 (nadd_of_num y0)) -> (nadd_le (nadd_of_num y0) (nadd_mul (nadd_of_num x0) x1)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1))) -> nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2)) -> (forall y1 : nadd, nadd_eq y1 y1) -> (forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, ((nadd_eq y1 y2) /\ (nadd_eq y3 y4)) -> (nadd_le y1 y3) = (nadd_le y2 y4)) -> False.
Definition term321 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_add (nadd_of_num (NUMERAL (BIT1 0))) (nadd_of_num x0)) x1) (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)).
Definition term652 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_eq x0 x2) /\ (nadd_le x1 x2).
Definition term491 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> (nadd_le x0 x1) = (nadd_le x2 y0).
Definition term206 (x0 : nadd -> Prop) (x1 : nadd -> Prop) := forall y0 : nadd, (x0 y0) /\ (x1 y0).
Definition term4 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (fun y0 : Prop => (x0 \/ (x1 \/ y0)) = ((x0 \/ x1) \/ y0)) x2.
Definition term229 (x0 : nadd) := forall y0 : nadd, (~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0).
Definition term136 (x0 : nat) := Nat.add (NUMERAL (BIT1 0)) x0.
Definition term622 (x0 : nadd) := (fun y0 : nadd => nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) x0.
Definition term422 (x0 : nadd) := (fun y0 : nadd => nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) x0.
Definition term666 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ (nadd_le x0 x1)) \/ ((nadd_le x0 x2) \/ (~ (nadd_le x1 x2))).
Definition term533 (x0 : nadd) (x1 : nadd) := ~ (nadd_le x0 x1).
Definition term68 (x0 : nadd) := fun y0 : nadd => ((nadd_le x0 y0) /\ (nadd_le y0 x0)) = (nadd_eq x0 y0).
Definition term111 (x0 : nadd) (x1 : nadd) := ~ (forall y0 : nat, nadd_le (nadd_mul (nadd_of_num y0) x0) x1).
Definition term139 (x0 : nat) := nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0).
Definition term351 (x0 : nadd) (x1 : nadd) := forall y0 : nadd, nadd_eq (nadd_mul (nadd_add x0 x1) y0) (nadd_add (nadd_mul x0 y0) (nadd_mul x1 y0)).
Definition term581 (x0 : nadd) (x1 : nat) (x2 : nadd) := (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term607 (x0 : nadd) := nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) x0) x0.
Definition term77 (x0 : nadd) := nadd_le (nadd_of_num (NUMERAL 0)) x0.
Definition term499 (x0 : nat) (x1 : nadd) (x2 : nadd) := nadd_le (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)) x2.
Definition term625 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (fun y0 : nadd => ((~ (nadd_le x1 x0)) \/ (~ (nadd_le x0 y0))) \/ (nadd_le x1 y0)) x2.
Definition term608 := fun y0 : nadd => nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0.
Definition term513 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (~ (nadd_le x0 x1)) \/ (nadd_le x2 x3).
Definition term584 (x0 : nadd) (x1 : nat) (x2 : nadd) := (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term583 (x0 : nadd) (x1 : nat) (x2 : nadd) := (nadd_le (nadd_mul (nadd_of_num (Nat.add x1 (NUMERAL (BIT1 0)))) x2) x0) -> (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term571 := ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term459 := ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)).
Definition term383 := ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term329 := ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, nadd_eq (nadd_mul (nadd_add y0 y1) y2) (nadd_add (nadd_mul y0 y2) (nadd_mul y1 y2))).
Definition term211 (x0 : nadd) := fun y0 : nadd => (~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0).
Definition term61 (x0 : nadd) (x1 : nadd) := (exists y0 : nadd, nadd_le (nadd_add x0 y0) (nadd_add x1 y0)) -> nadd_le x0 x1.
Definition term38 (x0 : nadd) (x1 : nadd) := (exists y0 : nadd, (nadd_le x0 y0) /\ (nadd_le y0 x1)) -> nadd_le x0 x1.
Definition term256 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := or (~ ((nadd_eq x0 x1) /\ (nadd_eq x2 x3))).
Definition term50 (x0 : nadd) (x1 : nadd) (x2 : nadd) := ((nadd_le (nadd_add x1 x0) (nadd_add x2 x0)) = (nadd_le x1 x2)) -> (nadd_le (nadd_add x1 x0) (nadd_add x2 x0)) -> nadd_le x1 x2.
Definition term240 (x0 : nadd) := ((fun y0 : nadd => forall y1 : nadd, (nadd_eq y0 y1) \/ (~ (nadd_eq y1 y0))) x0) /\ ((fun y0 : nadd => forall y1 : nadd, (~ (nadd_eq y0 y1)) \/ (nadd_eq y1 y0)) x0).
Definition term94 (x0 : nadd) (x1 : nat) := nadd_le x0 (nadd_of_num x1).
Definition term586 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term585 (x0 : nat) (x1 : nadd) (x2 : nat) (x3 : nadd) := (nadd_le (nadd_of_num x0) (nadd_mul (nadd_of_num x2) x3)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add x2 (NUMERAL (BIT1 0)))) x3) x1) -> (~ (nadd_le x1 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x2) x3)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2) -> False.
Definition term378 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)) -> False.
Definition term391 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_add (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) x1) (nadd_mul (nadd_of_num x0) x1)) (nadd_add x1 (nadd_mul (nadd_of_num x0) x1)))) -> (forall y0 : nadd, nadd_eq (nadd_mul (nadd_of_num (NUMERAL (BIT1 0))) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> nadd_eq (nadd_add y0 y2) (nadd_add y1 y3)).
Definition term103 (x0 : nat -> Prop) := exists y0 : nat, ~ (x0 y0).
Definition term629 (x0 : nadd) (x1 : nat) := (~ (nadd_le x0 (nadd_of_num x1))) -> nadd_le x0 (nadd_of_num x1).
Definition term660 (x0 : nat) (x1 : nat) (x2 : nadd) := nadd_le (nadd_of_num x0) (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)).
Definition term635 (x0 : nat) (x1 : nadd) := (~ (nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)) (nadd_mul (nadd_of_num x0) x1))) -> nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1)) (nadd_mul (nadd_of_num x0) x1).
Definition term614 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ ((nadd_le x1 x0) /\ (nadd_le x0 x2))) \/ (nadd_le x1 x2).
Definition term525 (x0 : nadd) (x1 : nadd) (x2 : nadd) (x3 : nadd) := (fun y0 : nadd => (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((nadd_le x0 x1) \/ (~ (nadd_le x2 y0)))) /\ (((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ ((~ (nadd_le x0 x1)) \/ (nadd_le x2 y0)))) x3.
Definition term125 (x0 : nadd) := (nadd_le x0 (nadd_of_num (NUMERAL 0))) /\ (nadd_le (nadd_of_num (NUMERAL 0)) x0).
Definition term130 (x0 : nadd) := (exists y0 : nadd, nadd_le (nadd_add x0 y0) (nadd_add (nadd_of_num (NUMERAL 0)) y0)) -> nadd_le x0 (nadd_of_num (NUMERAL 0)).
Definition term694 (x0 : nadd) := fun y0 : nat => nadd_le x0 (nadd_of_num y0).
Definition term133 (x0 : nat) (x1 : nadd) := nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x0) x1).
Definition term531 (x0 : nat) (x1 : nadd) (x2 : nadd) := (~ (nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2)) -> nadd_le (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1) x2.
Definition term145 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add (NUMERAL (BIT1 0)) x0)) x1).
Definition term144 (x0 : nat) (x1 : nadd) := nadd_eq (nadd_mul (nadd_of_num (Nat.add x0 (NUMERAL (BIT1 0)))) x1).
Definition term479 (x0 : nadd) (x1 : nadd) := fun y0 : nat => forall y1 : nat, (nadd_le x1 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) x1) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0))) -> nadd_le (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)) x1)) -> (forall y2 : nadd, nadd_eq y2 y2) -> ~ (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)).
Definition term478 (x0 : nadd) (x1 : nadd) := fun y0 : nat => forall y1 : nat, (nadd_le x1 (nadd_of_num y1)) -> (nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y0) x0)) -> (nadd_le (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) x1) -> (~ ((nadd_eq (nadd_mul (nadd_of_num (Nat.add y0 (NUMERAL (BIT1 0)))) x0) (nadd_add x0 (nadd_mul (nadd_of_num y0) x0))) -> nadd_le (nadd_add x0 (nadd_mul (nadd_of_num y0) x0)) x1)) -> (forall y2 : nadd, nadd_eq y2 y2) -> (forall y2 : nadd, forall y3 : nadd, forall y4 : nadd, forall y5 : nadd, ((nadd_eq y2 y3) /\ (nadd_eq y4 y5)) -> (nadd_le y2 y4) = (nadd_le y3 y5)) -> False.
Definition term137 := NUMERAL (BIT1 0).
Definition term128 (x0 : nadd) := (nadd_le x0 (nadd_of_num (NUMERAL 0))) /\ True.
Definition term201 (x0 : nadd) := forall y0 : nadd, ((nadd_eq x0 y0) \/ (~ (nadd_eq y0 x0))) /\ ((~ (nadd_eq x0 y0)) \/ (nadd_eq y0 x0)).
Definition term14 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (nadd_eq x0 x1) /\ (nadd_eq x1 x2).
Definition term582 (x0 : nadd) (x1 : nat) (x2 : nadd) := (~ (nadd_le x0 (nadd_add (nadd_of_num (NUMERAL 0)) (nadd_mul (nadd_of_num x1) x2)))) -> (forall y0 : nadd, nadd_eq (nadd_add (nadd_of_num (NUMERAL 0)) y0) y0) -> (forall y0 : nadd, nadd_eq y0 y0) -> (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, forall y3 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y2 y3)) -> (nadd_le y0 y2) = (nadd_le y1 y3)) -> ~ (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_le y0 y1) /\ (nadd_le y1 y2)) -> nadd_le y0 y2).
Definition term401 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> nadd_eq (nadd_add x0 x1) (nadd_add x2 y0).
Definition term185 (x0 : nadd) (x1 : nadd) (x2 : nadd) := fun y0 : nadd => ((nadd_eq x0 x2) /\ (nadd_eq x1 y0)) -> nadd_eq (nadd_mul x0 x1) (nadd_mul x2 y0).
Definition term90 := (forall y0 : nadd, forall y1 : nat, (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0)) -> forall y0 : nadd, (~ (nadd_eq y0 (nadd_of_num (NUMERAL 0)))) -> forall y1 : nat, exists y2 : nat, nadd_le (nadd_of_num y1) (nadd_mul (nadd_of_num y2) y0).
Definition term670 (x0 : nadd) (x1 : nadd) (x2 : nadd) := (~ ((~ (nadd_le x1 x0)) \/ (~ (nadd_le x0 x2)))) -> nadd_le x1 x2.
Definition term67 (x0 : nadd) (x1 : nadd) := (nadd_le x1 x0) /\ (nadd_le x0 x1).
Definition term17 (x0 : nadd) (x1 : nadd) := fun y0 : nadd => (nadd_eq x0 y0) /\ (nadd_eq y0 x1).
Definition term665 (x0 : nadd) (x1 : nadd) := or (~ (nadd_le x0 x1)).
Definition term217 (x0 : nadd) (x1 : nadd) := (~ (nadd_eq x1 x0)) \/ (nadd_eq x0 x1).
Definition term311 (x0 : nadd) (x1 : nadd) := imp (~ (~ (nadd_eq x0 x1))).
Definition term415 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_add x0 x1) (nadd_add x2 y0)).
Definition term262 (x0 : nadd) (x1 : nadd) (x2 : nadd) := forall y0 : nadd, ((~ (nadd_eq x0 x2)) \/ (~ (nadd_eq x1 y0))) \/ (nadd_eq (nadd_mul x0 x1) (nadd_mul x2 y0)).
