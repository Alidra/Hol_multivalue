require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term7 a0 a1 a2 a3 (x0: El a3) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0);
symbol term47 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) ≔ (∀ (λ y0 : El (type1633 a0 a1 a2 a3), (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) y1 y2) ((@COND a0) (∃ (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1 ((@ε a1) (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2)))) ((@CASEWISE a0 a1 a2 a3) y0 y1 y2)))))))));
symbol term46 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) ≔ (∀ (λ y0 : El (type1633 a0 a1 a2 a3), (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) y1 y2) ((@COND a0) (∃ (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1 ((@ε a1) (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) y0 y1 y2)))))))));
symbol term39 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ (∀ (λ y0 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 y0) ((@COND a0) (∃ (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0)))) ((@CASEWISE a0 a1 a2 a3) x1 x2 y0)))));
symbol term38 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ (∀ (λ y0 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 y0) ((@COND a0) (∃ (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x1 x2 y0)))));
symbol term26 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 x3);
symbol term35 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@COND a0) (∃ (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0) x3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0) x3)))) ((@CASEWISE a0 a1 a2 a3) x1 x2 x3));
symbol term8 a0 a1 a2 a3 (x0: El a3) (x1: El a2) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1);
symbol term2 a0 a1 a2 a3 ≔ ((λ y0 : El type1669, (∧ (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) y0 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y1 y2) ((@ε a0) (λ y3 : El a0, T))))))) (∀ (λ y1 : El (type1644 a0 a1 a2 a3), (∀ (λ y2 : El (type1633 a0 a1 a2 a3), (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y5 : El (type1248 a0 a1 a2 a3), (∀ (λ y6 : El type1669, (∧ (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y5 y6 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) ((@ε a0) (λ y9 : El a0, T))))))) (∀ (λ y7 : El (type1644 a0 a1 a2 a3), (∀ (λ y8 : El (type1633 a0 a1 a2 a3), (∀ (λ y9 : El a3, (∀ (λ y10 : El a2, (= (y5 y6 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) y9 y10) ((@COND a0) (∃ (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y7 y9 ((@ε a1) (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10)))) (y5 y6 y8 y9 y10))))))))))))))) y0 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y1 y2) y3 y4) ((@COND a0) (∃ (λ y5 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y1 y5) y4))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y1 y3 ((@ε a1) (λ y5 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y1 y5) y4)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y5 : El (type1248 a0 a1 a2 a3), (∀ (λ y6 : El type1669, (∧ (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y5 y6 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) ((@ε a0) (λ y9 : El a0, T))))))) (∀ (λ y7 : El (type1644 a0 a1 a2 a3), (∀ (λ y8 : El (type1633 a0 a1 a2 a3), (∀ (λ y9 : El a3, (∀ (λ y10 : El a2, (= (y5 y6 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) y9 y10) ((@COND a0) (∃ (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y7 y9 ((@ε a1) (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10)))) (y5 y6 y8 y9 y10))))))))))))))) y0 y2 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))));
symbol term0 a0 a1 a2 a3 ≔ ((λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5)))))))))))))))));
symbol term11 a0 ≔ ((@ε a0) (λ y0 : El a0, T));
symbol term1 a0 a1 a2 a3 ≔ (∀ (λ y0 : El type1669, (∧ (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) y0 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y1 y2) ((@ε a0) (λ y3 : El a0, T))))))) (∀ (λ y1 : El (type1644 a0 a1 a2 a3), (∀ (λ y2 : El (type1633 a0 a1 a2 a3), (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y5 : El (type1248 a0 a1 a2 a3), (∀ (λ y6 : El type1669, (∧ (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y5 y6 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) ((@ε a0) (λ y9 : El a0, T))))))) (∀ (λ y7 : El (type1644 a0 a1 a2 a3), (∀ (λ y8 : El (type1633 a0 a1 a2 a3), (∀ (λ y9 : El a3, (∀ (λ y10 : El a2, (= (y5 y6 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) y9 y10) ((@COND a0) (∃ (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y7 y9 ((@ε a1) (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10)))) (y5 y6 y8 y9 y10))))))))))))))) y0 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y1 y2) y3 y4) ((@COND a0) (∃ (λ y5 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y1 y5) y4))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y1 y3 ((@ε a1) (λ y5 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y1 y5) y4)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y5 : El (type1248 a0 a1 a2 a3), (∀ (λ y6 : El type1669, (∧ (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y5 y6 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) ((@ε a0) (λ y9 : El a0, T))))))) (∀ (λ y7 : El (type1644 a0 a1 a2 a3), (∀ (λ y8 : El (type1633 a0 a1 a2 a3), (∀ (λ y9 : El a3, (∀ (λ y10 : El a2, (= (y5 y6 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y7 y8) y9 y10) ((@COND a0) (∃ (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y7 y9 ((@ε a1) (λ y11 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y7 y11) y10)))) (y5 y6 y8 y9 y10))))))))))))))) y0 y2 y3 y4))))))))))))));
symbol term30 a0 a1 a2 a3 (x0: El (type1633 a0 a1 a2 a3)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x0);
symbol term34 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@COND a0) (∃ (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0) x3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0) x3)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x1 x2 x3));
symbol term6 a0 a1 a2 a3 ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))));
symbol term49 a0 a1 a2 a3 ≔ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@CASEWISE a0 a1 a2 a3) y1 y2 y3))))))))));
symbol term48 a0 a1 a2 a3 ≔ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) y1 y2 y3))))))))));
symbol term12 a0 a1 a2 a3 (x0: El a3) ≔ (λ y0 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) ((@ε a0) (λ y1 : El a0, T))));
symbol term27 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 x3);
symbol term24 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2);
symbol term37 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ (λ y0 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 y0) ((@COND a0) (∃ (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0)))) ((@CASEWISE a0 a1 a2 a3) x1 x2 y0))));
symbol term28 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@= a0) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 x3));
symbol term51 a0 a1 a2 a3 ≔ (∀ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@CASEWISE a0 a1 a2 a3) y1 y2 y3)))))))))));
symbol term50 a0 a1 a2 a3 ≔ (∀ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) y1 y2 y3)))))))))));
symbol term3 ≔ ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))))));
symbol term33 a0 a1 a2 a3 (x0: El a3) (x1: El (type1644 a0 a1 a2 a3)) (x2: El a2) ≔ ((@COND a0) (∃ (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x1 y0) x2))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x1 x0 ((@ε a1) (λ y0 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x1 y0) x2)))));
symbol term32 a0 a1 a2 a3 (x0: El (type1633 a0 a1 a2 a3)) (x1: El a3) (x2: El a2) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x0 x1 x2);
symbol term45 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) ≔ (λ y0 : El (type1633 a0 a1 a2 a3), (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) y1 y2) ((@COND a0) (∃ (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1 ((@ε a1) (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2)))) ((@CASEWISE a0 a1 a2 a3) y0 y1 y2))))))));
symbol term44 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) ≔ (λ y0 : El (type1633 a0 a1 a2 a3), (∀ (λ y1 : El a3, (∀ (λ y2 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) y1 y2) ((@COND a0) (∃ (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1 ((@ε a1) (λ y3 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y3) y2)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y3 : El (type1248 a0 a1 a2 a3), (∀ (λ y4 : El type1669, (∧ (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y3 y4 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) ((@ε a0) (λ y7 : El a0, T))))))) (∀ (λ y5 : El (type1644 a0 a1 a2 a3), (∀ (λ y6 : El (type1633 a0 a1 a2 a3), (∀ (λ y7 : El a3, (∀ (λ y8 : El a2, (= (y3 y4 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y5 y6) y7 y8) ((@COND a0) (∃ (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y5 y7 ((@ε a1) (λ y9 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y5 y9) y8)))) (y3 y4 y6 y7 y8))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) y0 y1 y2))))))));
symbol term29 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) (x3: El a2) ≔ ((@= a0) ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 x3));
symbol term25 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2);
symbol term31 a0 a1 a2 a3 (x0: El (type1633 a0 a1 a2 a3)) (x1: El a3) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x0 x1);
symbol term41 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) y0 y1) ((@COND a0) (∃ (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0 ((@ε a1) (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1)))) ((@CASEWISE a0 a1 a2 a3) x1 y0 y1))))));
symbol term40 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) y0 y1) ((@COND a0) (∃ (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0 ((@ε a1) (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x1 y0 y1))))));
symbol term22 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1));
symbol term9 a0 a1 a2 a3 (x0: El a3) (x1: El a2) ≔ ((@= a0) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1));
symbol term43 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) y0 y1) ((@COND a0) (∃ (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0 ((@ε a1) (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1)))) ((@CASEWISE a0 a1 a2 a3) x1 y0 y1)))))));
symbol term42 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) y0 y1) ((@COND a0) (∃ (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 y0 ((@ε a1) (λ y2 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y2) y1)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x1 y0 y1)))))));
symbol term19 a0 a1 a2 a3 ≔ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T)))))));
symbol term18 a0 a1 a2 a3 ≔ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T)))))));
symbol term52 a0 a1 a2 a3 ≔ (∧ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))))) (∀ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@CASEWISE a0 a1 a2 a3) y1 y2 y3))))))))))));
symbol term4 a0 a1 a2 a3 ≔ (∧ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))))) (∀ (λ y0 : El (type1644 a0 a1 a2 a3), (∀ (λ y1 : El (type1633 a0 a1 a2 a3), (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) y2 y3) ((@COND a0) (∃ (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y0 y2 ((@ε a1) (λ y4 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y0 y4) y3)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y4 : El (type1248 a0 a1 a2 a3), (∀ (λ y5 : El type1669, (∧ (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y4 y5 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) ((@ε a0) (λ y8 : El a0, T))))))) (∀ (λ y6 : El (type1644 a0 a1 a2 a3), (∀ (λ y7 : El (type1633 a0 a1 a2 a3), (∀ (λ y8 : El a3, (∀ (λ y9 : El a2, (= (y4 y5 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y6 y7) y8 y9) ((@COND a0) (∃ (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y6 y8 ((@ε a1) (λ y10 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y6 y10) y9)))) (y4 y5 y7 y8 y9))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) y1 y2 y3))))))))))));
symbol term21 a0 a1 a2 a3 ≔ (∧ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))))));
symbol term20 a0 a1 a2 a3 ≔ (∧ (∀ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))))));
symbol term17 a0 a1 a2 a3 ≔ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))));
symbol term16 a0 a1 a2 a3 ≔ (λ y0 : El a3, (∀ (λ y1 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y2 : El (type1248 a0 a1 a2 a3), (∀ (λ y3 : El type1669, (∧ (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y2 y3 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) ((@ε a0) (λ y6 : El a0, T))))))) (∀ (λ y4 : El (type1644 a0 a1 a2 a3), (∀ (λ y5 : El (type1633 a0 a1 a2 a3), (∀ (λ y6 : El a3, (∀ (λ y7 : El a2, (= (y2 y3 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y4 y5) y6 y7) ((@COND a0) (∃ (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y4 y6 ((@ε a1) (λ y8 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y4 y8) y7)))) (y2 y3 y5 y6 y7))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y0 y1) ((@ε a0) (λ y2 : El a0, T))))));
symbol term13 a0 a1 a2 a3 (x0: El a3) ≔ (λ y0 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) ((@ε a0) (λ y1 : El a0, T))));
symbol term10 a0 a1 a2 a3 (x0: El a3) (x1: El a2) ≔ ((@= a0) ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1));
symbol term5 a0 a1 a2 a3 ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y0 : El (type1248 a0 a1 a2 a3), (∀ (λ y1 : El type1669, (∧ (∀ (λ y2 : El a3, (∀ (λ y3 : El a2, (= (y0 y1 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) ((@ε a0) (λ y4 : El a0, T))))))) (∀ (λ y2 : El (type1644 a0 a1 a2 a3), (∀ (λ y3 : El (type1633 a0 a1 a2 a3), (∀ (λ y4 : El a3, (∀ (λ y5 : El a2, (= (y0 y1 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y2 y3) y4 y5) ((@COND a0) (∃ (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y2 y4 ((@ε a1) (λ y6 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y2 y6) y5)))) (y0 y1 y3 y4 y5))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))));
symbol term15 a0 a1 a2 a3 (x0: El a3) ≔ (∀ (λ y0 : El a2, (= ((@CASEWISE a0 a1 a2 a3) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) ((@ε a0) (λ y1 : El a0, T)))));
symbol term14 a0 a1 a2 a3 (x0: El a3) ≔ (∀ (λ y0 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 y0) ((@ε a0) (λ y1 : El a0, T)))));
symbol term23 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) ≔ ((@CASEWISE a0 a1 a2 a3) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1));
symbol term36 a0 a1 a2 a3 (x0: El (type1644 a0 a1 a2 a3)) (x1: El (type1633 a0 a1 a2 a3)) (x2: El a3) ≔ (λ y0 : El a2, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) x0 x1) x2 y0) ((@COND a0) (∃ (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) x0 x2 ((@ε a1) (λ y1 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) x0 y1) y0)))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (fun (list (prod (fun a1 a2) (fun a3 (fun a1 a0)))) (fun a3 (fun a2 a0))))) (λ y1 : El (type1248 a0 a1 a2 a3), (∀ (λ y2 : El type1669, (∧ (∀ (λ y3 : El a3, (∀ (λ y4 : El a2, (= (y1 y2 (@NIL (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) ((@ε a0) (λ y5 : El a0, T))))))) (∀ (λ y3 : El (type1644 a0 a1 a2 a3), (∀ (λ y4 : El (type1633 a0 a1 a2 a3), (∀ (λ y5 : El a3, (∀ (λ y6 : El a2, (= (y1 y2 ((@CONS (prod (fun a1 a2) (fun a3 (fun a1 a0)))) y3 y4) y5 y6) ((@COND a0) (∃ (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6))) ((@SND (fun a1 a2) (fun a3 (fun a1 a0))) y3 y5 ((@ε a1) (λ y7 : El a1, (= ((@FST (fun a1 a2) (fun a3 (fun a1 a0))) y3 y7) y6)))) (y1 y2 y4 y5 y6))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num (prod num num))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) x1 x2 y0))));
