Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ADMISSIBLE_MATCH_SEQPATTERN_term_abbrevs.
Require Import ADMISSIBLE_COND_spec.
Require Import thm0_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm7_spec.
Require Import thm8096294_spec.
Require Import thm8099922_spec.
Lemma lem8233241 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) : term0 _144006 _144007 _144038 _144063 P lt2.
Proof. exact (@lem8136186 _144006 _144007 _144038 _144063 P lt2). Qed.
Lemma lem8233242 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) : (term0 _144006 _144007 _144038 _144063 P lt2) = (term1 _144006 _144007 _144038 _144063 P lt2).
Proof. exact (eq_refl (term0 _144006 _144007 _144038 _144063 P lt2)). Qed.
Lemma lem8233243 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) : term1 _144006 _144007 _144038 _144063 P lt2.
Proof. exact (EQ_MP (@lem8233242 _144006 _144007 _144038 _144063 P lt2) (@lem8233241 _144006 _144007 _144038 _144063 P lt2)). Qed.
Lemma lem8233244 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) : term2 _144006 _144007 _144038 _144063 P lt2 p.
Proof. exact (@lem8233243 _144006 _144007 _144038 _144063 P lt2 p). Qed.
Lemma lem8233245 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) : (term2 _144006 _144007 _144038 _144063 P lt2 p) = (term3 _144006 _144007 _144038 _144063 P lt2 p).
Proof. exact (eq_refl (term2 _144006 _144007 _144038 _144063 P lt2 p)). Qed.
Lemma lem8233246 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) : term3 _144006 _144007 _144038 _144063 P lt2 p.
Proof. exact (EQ_MP (@lem8233245 _144006 _144007 _144038 _144063 P lt2 p) (@lem8233244 _144006 _144007 _144038 _144063 P lt2 p)). Qed.
Lemma lem8233247 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (P' : type560 _144007 _144038 P) : term4 _144006 _144007 _144038 _144063 P lt2 p P'.
Proof. exact (@lem8233246 _144006 _144007 _144038 _144063 P lt2 p P'). Qed.
Lemma lem8233248 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (P' : type560 _144007 _144038 P) : (term4 _144006 _144007 _144038 _144063 P lt2 p P') = (term5 _144006 _144007 _144038 _144063 P lt2 p P').
Proof. exact (eq_refl (term4 _144006 _144007 _144038 _144063 P lt2 p P')). Qed.
Lemma lem8233249 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (P' : type560 _144007 _144038 P) : term5 _144006 _144007 _144038 _144063 P lt2 p P'.
Proof. exact (EQ_MP (@lem8233248 _144006 _144007 _144038 _144063 P lt2 p P') (@lem8233247 _144006 _144007 _144038 _144063 P lt2 p P')). Qed.
Lemma lem8233250 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (P' : type560 _144007 _144038 P) (s : P -> _144006) : term6 _144006 _144007 _144038 _144063 P lt2 p P' s.
Proof. exact (@lem8233249 _144006 _144007 _144038 _144063 P lt2 p P' s). Qed.
Lemma lem8233251 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) : (term6 _144006 _144007 _144038 _144063 P lt2 p P' s) = (term7 _144006 _144007 _144038 _144063 P lt2 p s P').
Proof. exact (eq_refl (term6 _144006 _144007 _144038 _144063 P lt2 p P' s)). Qed.
Lemma lem8233252 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) : term7 _144006 _144007 _144038 _144063 P lt2 p s P'.
Proof. exact (EQ_MP (@lem8233251 _144006 _144007 _144038 _144063 P lt2 p s P') (@lem8233250 _144006 _144007 _144038 _144063 P lt2 p P' s)). Qed.
Lemma lem8233253 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) : term8 _144006 _144007 _144038 _144063 P lt2 p s P' h.
Proof. exact (@lem8233252 _144006 _144007 _144038 _144063 P lt2 p s P' h). Qed.
Lemma lem8233254 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) : (term8 _144006 _144007 _144038 _144063 P lt2 p s P' h) = (term9 _144006 _144007 _144038 _144063 P lt2 p s P' h).
Proof. exact (eq_refl (term8 _144006 _144007 _144038 _144063 P lt2 p s P' h)). Qed.
Lemma lem8233255 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) : term9 _144006 _144007 _144038 _144063 P lt2 p s P' h.
Proof. exact (EQ_MP (@lem8233254 _144006 _144007 _144038 _144063 P lt2 p s P' h) (@lem8233253 _144006 _144007 _144038 _144063 P lt2 p s P' h)). Qed.
Lemma lem8233256 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) (k : type564 _144007 _144038 _144063 P) : term10 _144006 _144007 _144038 _144063 P lt2 p s P' h k.
Proof. exact (@lem8233255 _144006 _144007 _144038 _144063 P lt2 p s P' h k). Qed.
Lemma lem8233257 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) (k : type564 _144007 _144038 _144063 P) : (term10 _144006 _144007 _144038 _144063 P lt2 p s P' h k) = (term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k).
Proof. exact (eq_refl (term10 _144006 _144007 _144038 _144063 P lt2 p s P' h k)). Qed.
Lemma lem8233258 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) (k : type564 _144007 _144038 _144063 P) : term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8233257 _144006 _144007 _144038 _144063 P lt2 p s P' h k) (@lem8233256 _144006 _144007 _144038 _144063 P lt2 p s P' h k)). Qed.
Lemma lem8233259 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) (k : type564 _144007 _144038 _144063 P) : (term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k) = ((term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k) = True).
Proof. exact (@lem7 (term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k)). Qed.
Lemma lem8233308 {_143642 _143649 : Type'} (r : type1470 _143642 _143649) (x : _143649) (s : type1470 _143642 _143649) : (term12 _143642 _143649 x r s) = (term13 _143642 _143649 r x s).
Proof. exact (EQ_MP (@lem8096294 _143642 _143649 r x s) (@lem8099922 _143642 _143649 r s x)). Qed.
Lemma lem8233309 {_145109 _145140 : Type'} (r : type1470 _145109 _145140) (x : _145140) (s : type1470 _145109 _145140) : (term12 _145109 _145140 x r s) = (term13 _145109 _145140 r x s).
Proof. exact (@lem8233308 _145109 _145140 r x s). Qed.
Lemma lem8233310 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term14 _145020 _145085 _145109 _145140 P e c1 c2 f x) = (term15 _145020 _145085 _145109 _145140 P c1 e c2 f x).
Proof. exact (@lem8233309 _145109 _145140 (c1 f x) (e f x) (c2 f x)). Qed.
Lemma lem8233315 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) : (term16 _145020 _145085 _145109 _145140 P e c1 c2 f) = (term17 _145020 _145085 _145109 _145140 P c1 e c2 f).
Proof. exact (fun_ext (fun x : P => @lem8233310 _145020 _145085 _145109 _145140 P c1 e c2 f x)). Qed.
Lemma lem8233316 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term18 _145020 _145085 _145109 _145140 P e c1 c2) = (term19 _145020 _145085 _145109 _145140 P c1 e c2).
Proof. exact (fun_ext (fun f : _145020 -> _145085 => @lem8233315 _145020 _145085 _145109 _145140 P c1 e c2 f)). Qed.
Lemma lem8233317 {_145019 _145020 _145085 _145109 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) : (@admissible _145019 _145085 _145020 _145109 P lt2 p s) = (@admissible _145019 _145085 _145020 _145109 P lt2 p s).
Proof. exact (eq_refl (@admissible _145019 _145085 _145020 _145109 P lt2 p s)). Qed.
Lemma lem8233318 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term20 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1 c2) = (term21 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2).
Proof. exact (MK_COMB (@lem8233317 _145019 _145020 _145085 _145109 P lt2 p s) (@lem8233316 _145020 _145085 _145109 _145140 P c1 e c2)). Qed.
Lemma lem8233319 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term22 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) = (term22 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2).
Proof. exact (eq_refl (term22 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2)). Qed.
Lemma lem8233320 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term23 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1 c2) = (term24 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2).
Proof. exact (MK_COMB (@lem8233319 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) (@lem8233318 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2)). Qed.
Lemma lem8233322 {_144006 _144007 _144038 _144063 P : Type'} (lt2 : type1470 _144006 _144007) (p : type560 _144007 _144038 P) (s : P -> _144006) (P' : type560 _144007 _144038 P) (h : type564 _144007 _144038 _144063 P) (k : type564 _144007 _144038 _144063 P) : (term11 _144006 _144007 _144038 _144063 P lt2 p s P' h k) = True.
Proof. exact (EQ_MP (@lem8233259 _144006 _144007 _144038 _144063 P lt2 p s P' h k) (@lem8233258 _144006 _144007 _144038 _144063 P lt2 p s P' h k)). Qed.
Lemma lem8233323 {_145019 _145020 _145085 _145109 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (P' : type560 _145020 _145085 P) (h : type564 _145020 _145085 _145109 P) (k : type564 _145020 _145085 _145109 P) : (term11 _145019 _145020 _145085 _145109 P lt2 p s P' h k) = True.
Proof. exact (@lem8233322 _145019 _145020 _145085 _145109 P lt2 p s P' h k). Qed.
Lemma lem8233324 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term25 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = True.
Proof. exact (@lem8233323 _145019 _145020 _145085 _145109 P lt2 p s (term26 _145020 _145085 _145109 _145140 P c1 e) (term27 _145020 _145085 _145109 _145140 P e c1) (term27 _145020 _145085 _145109 _145140 P e c2)). Qed.
Lemma lem8233325 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) : (term28 _145020 _145085 _145109 _145140 P c1 e f) = (term29 _145020 _145085 _145109 _145140 P c1 e f).
Proof. exact (eq_refl (term28 _145020 _145085 _145109 _145140 P c1 e f)). Qed.
Lemma lem8233326 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8233327 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term31 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (MK_COMB (@lem8233325 _145020 _145085 _145109 _145140 P c1 e f) (@lem8233326 P x)). Qed.
Lemma lem8233328 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term31 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (eq_refl (term31 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233329 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (TRANS (@lem8233327 _145020 _145085 _145109 _145140 P c1 e f x) (@lem8233328 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233330 {_145020 _145085 P : Type'} (p : type560 _145020 _145085 P) (f : _145020 -> _145085) (x : P) : (term33 _145020 _145085 P p f x) = (term33 _145020 _145085 P p f x).
Proof. exact (eq_refl (term33 _145020 _145085 P p f x)). Qed.
Lemma lem8233331 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term34 _145020 _145085 _145109 _145140 P p c1 e f x) = (term35 _145020 _145085 _145109 _145140 P p c1 e f x).
Proof. exact (MK_COMB (@lem8233330 _145020 _145085 P p f x) (@lem8233329 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233332 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) : (term36 _145020 _145085 _145109 _145140 P p c1 e f) = (term37 _145020 _145085 _145109 _145140 P p c1 e f).
Proof. exact (fun_ext (fun x : P => @lem8233331 _145020 _145085 _145109 _145140 P p c1 e f x)). Qed.
Lemma lem8233333 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) : (term38 _145020 _145085 _145109 _145140 P p c1 e) = (term39 _145020 _145085 _145109 _145140 P p c1 e).
Proof. exact (fun_ext (fun f : _145020 -> _145085 => @lem8233332 _145020 _145085 _145109 _145140 P p c1 e f)). Qed.
Lemma lem8233334 {_145019 _145020 _145085 _145109 P : Type'} (lt2 : type1470 _145019 _145020) : (@admissible _145019 _145085 _145020 _145109 P lt2) = (@admissible _145019 _145085 _145020 _145109 P lt2).
Proof. exact (eq_refl (@admissible _145019 _145085 _145020 _145109 P lt2)). Qed.
Lemma lem8233335 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) : (term40 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e) = (term41 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e).
Proof. exact (MK_COMB (@lem8233334 _145019 _145020 _145085 _145109 P lt2) (@lem8233333 _145020 _145085 _145109 _145140 P p c1 e)). Qed.
Lemma lem8233336 {_145019 P : Type'} (s : P -> _145019) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8233337 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (s : P -> _145019) : (term42 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s) = (term43 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s).
Proof. exact (MK_COMB (@lem8233335 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e) (@lem8233336 _145019 P s)). Qed.
Lemma lem8233338 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term27 _145020 _145085 _145109 _145140 P e c1) = (term27 _145020 _145085 _145109 _145140 P e c1).
Proof. exact (eq_refl (term27 _145020 _145085 _145109 _145140 P e c1)). Qed.
Lemma lem8233339 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term44 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1) = (term45 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1).
Proof. exact (MK_COMB (@lem8233337 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s) (@lem8233338 _145020 _145085 _145109 _145140 P e c1)). Qed.
Lemma lem8233340 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8233341 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term46 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1) = (term47 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1).
Proof. exact (MK_COMB (@lem8233340) (@lem8233339 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1)). Qed.
Lemma lem8233342 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) : (term28 _145020 _145085 _145109 _145140 P c1 e f) = (term29 _145020 _145085 _145109 _145140 P c1 e f).
Proof. exact (eq_refl (term28 _145020 _145085 _145109 _145140 P c1 e f)). Qed.
Lemma lem8233343 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8233344 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term31 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (MK_COMB (@lem8233342 _145020 _145085 _145109 _145140 P c1 e f) (@lem8233343 P x)). Qed.
Lemma lem8233345 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term31 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (eq_refl (term31 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233346 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (TRANS (@lem8233344 _145020 _145085 _145109 _145140 P c1 e f x) (@lem8233345 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233347 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8233348 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term48 _145020 _145085 _145109 _145140 P c1 e f x) = (term49 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (MK_COMB (@lem8233347) (@lem8233346 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233349 {_145020 _145085 P : Type'} (p : type560 _145020 _145085 P) (f : _145020 -> _145085) (x : P) : (term33 _145020 _145085 P p f x) = (term33 _145020 _145085 P p f x).
Proof. exact (eq_refl (term33 _145020 _145085 P p f x)). Qed.
Lemma lem8233350 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term50 _145020 _145085 _145109 _145140 P p c1 e f x) = (term51 _145020 _145085 _145109 _145140 P p c1 e f x).
Proof. exact (MK_COMB (@lem8233349 _145020 _145085 P p f x) (@lem8233348 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233351 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) : (term52 _145020 _145085 _145109 _145140 P p c1 e f) = (term53 _145020 _145085 _145109 _145140 P p c1 e f).
Proof. exact (fun_ext (fun x : P => @lem8233350 _145020 _145085 _145109 _145140 P p c1 e f x)). Qed.
Lemma lem8233352 {_145020 _145085 _145109 _145140 P : Type'} (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) : (term54 _145020 _145085 _145109 _145140 P p c1 e) = (term55 _145020 _145085 _145109 _145140 P p c1 e).
Proof. exact (fun_ext (fun f : _145020 -> _145085 => @lem8233351 _145020 _145085 _145109 _145140 P p c1 e f)). Qed.
Lemma lem8233353 {_145019 _145020 _145085 _145109 P : Type'} (lt2 : type1470 _145019 _145020) : (@admissible _145019 _145085 _145020 _145109 P lt2) = (@admissible _145019 _145085 _145020 _145109 P lt2).
Proof. exact (eq_refl (@admissible _145019 _145085 _145020 _145109 P lt2)). Qed.
Lemma lem8233354 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) : (term56 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e) = (term57 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e).
Proof. exact (MK_COMB (@lem8233353 _145019 _145020 _145085 _145109 P lt2) (@lem8233352 _145020 _145085 _145109 _145140 P p c1 e)). Qed.
Lemma lem8233355 {_145019 P : Type'} (s : P -> _145019) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8233356 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (s : P -> _145019) : (term58 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s) = (term59 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s).
Proof. exact (MK_COMB (@lem8233354 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e) (@lem8233355 _145019 P s)). Qed.
Lemma lem8233357 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term27 _145020 _145085 _145109 _145140 P e c2) = (term27 _145020 _145085 _145109 _145140 P e c2).
Proof. exact (eq_refl (term27 _145020 _145085 _145109 _145140 P e c2)). Qed.
Lemma lem8233358 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term60 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) = (term61 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2).
Proof. exact (MK_COMB (@lem8233356 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 e s) (@lem8233357 _145020 _145085 _145109 _145140 P e c2)). Qed.
Lemma lem8233359 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term62 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) = (term63 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2).
Proof. exact (MK_COMB (@lem8233341 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1) (@lem8233358 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2)). Qed.
Lemma lem8233360 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) : (term64 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e) = (term64 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e).
Proof. exact (eq_refl (term64 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e)). Qed.
Lemma lem8233361 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term65 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) = (term66 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2).
Proof. exact (MK_COMB (@lem8233360 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e) (@lem8233359 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2)). Qed.
Lemma lem8233362 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8233363 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term67 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) = (term22 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2).
Proof. exact (MK_COMB (@lem8233362) (@lem8233361 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2)). Qed.
Lemma lem8233364 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) : (term28 _145020 _145085 _145109 _145140 P c1 e f) = (term29 _145020 _145085 _145109 _145140 P c1 e f).
Proof. exact (eq_refl (term28 _145020 _145085 _145109 _145140 P c1 e f)). Qed.
Lemma lem8233365 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8233366 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term31 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (MK_COMB (@lem8233364 _145020 _145085 _145109 _145140 P c1 e f) (@lem8233365 P x)). Qed.
Lemma lem8233367 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term31 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (eq_refl (term31 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233368 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term30 _145020 _145085 _145109 _145140 P c1 e f x) = (term32 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (TRANS (@lem8233366 _145020 _145085 _145109 _145140 P c1 e f x) (@lem8233367 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233369 {_145109 : Type'} : (@COND _145109) = (@COND _145109).
Proof. exact (eq_refl (@COND _145109)). Qed.
Lemma lem8233370 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (f : _145020 -> _145085) (x : P) : (term68 _145020 _145085 _145109 _145140 P c1 e f x) = (term69 _145020 _145085 _145109 _145140 P c1 e f x).
Proof. exact (MK_COMB (@lem8233369 _145109) (@lem8233368 _145020 _145085 _145109 _145140 P c1 e f x)). Qed.
Lemma lem8233371 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) : (term70 _145020 _145085 _145109 _145140 P e c1 f) = (term71 _145020 _145085 _145109 _145140 P e c1 f).
Proof. exact (eq_refl (term70 _145020 _145085 _145109 _145140 P e c1 f)). Qed.
Lemma lem8233372 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8233373 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term72 _145020 _145085 _145109 _145140 P e c1 f x) = (term73 _145020 _145085 _145109 _145140 P e c1 f x).
Proof. exact (MK_COMB (@lem8233371 _145020 _145085 _145109 _145140 P e c1 f) (@lem8233372 P x)). Qed.
Lemma lem8233374 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term73 _145020 _145085 _145109 _145140 P e c1 f x) = (term74 _145020 _145085 _145109 _145140 P e c1 f x).
Proof. exact (eq_refl (term73 _145020 _145085 _145109 _145140 P e c1 f x)). Qed.
Lemma lem8233375 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term72 _145020 _145085 _145109 _145140 P e c1 f x) = (term74 _145020 _145085 _145109 _145140 P e c1 f x).
Proof. exact (TRANS (@lem8233373 _145020 _145085 _145109 _145140 P e c1 f x) (@lem8233374 _145020 _145085 _145109 _145140 P e c1 f x)). Qed.
Lemma lem8233376 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term75 _145020 _145085 _145109 _145140 P e c1 f x) = (term76 _145020 _145085 _145109 _145140 P e c1 f x).
Proof. exact (MK_COMB (@lem8233370 _145020 _145085 _145109 _145140 P c1 e f x) (@lem8233375 _145020 _145085 _145109 _145140 P e c1 f x)). Qed.
Lemma lem8233377 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) : (term70 _145020 _145085 _145109 _145140 P e c2 f) = (term71 _145020 _145085 _145109 _145140 P e c2 f).
Proof. exact (eq_refl (term70 _145020 _145085 _145109 _145140 P e c2 f)). Qed.
Lemma lem8233378 {P : Type'} (x : P) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8233379 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term72 _145020 _145085 _145109 _145140 P e c2 f x) = (term73 _145020 _145085 _145109 _145140 P e c2 f x).
Proof. exact (MK_COMB (@lem8233377 _145020 _145085 _145109 _145140 P e c2 f) (@lem8233378 P x)). Qed.
Lemma lem8233380 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term73 _145020 _145085 _145109 _145140 P e c2 f x) = (term74 _145020 _145085 _145109 _145140 P e c2 f x).
Proof. exact (eq_refl (term73 _145020 _145085 _145109 _145140 P e c2 f x)). Qed.
Lemma lem8233381 {_145020 _145085 _145109 _145140 P : Type'} (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term72 _145020 _145085 _145109 _145140 P e c2 f x) = (term74 _145020 _145085 _145109 _145140 P e c2 f x).
Proof. exact (TRANS (@lem8233379 _145020 _145085 _145109 _145140 P e c2 f x) (@lem8233380 _145020 _145085 _145109 _145140 P e c2 f x)). Qed.
Lemma lem8233382 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) (x : P) : (term77 _145020 _145085 _145109 _145140 P c1 e c2 f x) = (term15 _145020 _145085 _145109 _145140 P c1 e c2 f x).
Proof. exact (MK_COMB (@lem8233376 _145020 _145085 _145109 _145140 P e c1 f x) (@lem8233381 _145020 _145085 _145109 _145140 P e c2 f x)). Qed.
Lemma lem8233383 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) (f : _145020 -> _145085) : (term78 _145020 _145085 _145109 _145140 P c1 e c2 f) = (term17 _145020 _145085 _145109 _145140 P c1 e c2 f).
Proof. exact (fun_ext (fun x : P => @lem8233382 _145020 _145085 _145109 _145140 P c1 e c2 f x)). Qed.
Lemma lem8233384 {_145020 _145085 _145109 _145140 P : Type'} (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term79 _145020 _145085 _145109 _145140 P c1 e c2) = (term19 _145020 _145085 _145109 _145140 P c1 e c2).
Proof. exact (fun_ext (fun f : _145020 -> _145085 => @lem8233383 _145020 _145085 _145109 _145140 P c1 e c2 f)). Qed.
Lemma lem8233385 {_145019 _145020 _145085 _145109 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) : (@admissible _145019 _145085 _145020 _145109 P lt2 p s) = (@admissible _145019 _145085 _145020 _145109 P lt2 p s).
Proof. exact (eq_refl (@admissible _145019 _145085 _145020 _145109 P lt2 p s)). Qed.
Lemma lem8233386 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term80 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = (term21 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2).
Proof. exact (MK_COMB (@lem8233385 _145019 _145020 _145085 _145109 P lt2 p s) (@lem8233384 _145020 _145085 _145109 _145140 P c1 e c2)). Qed.
Lemma lem8233387 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term25 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = (term24 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2).
Proof. exact (MK_COMB (@lem8233363 _145019 _145020 _145085 _145109 _145140 P lt2 p c1 s e c2) (@lem8233386 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2)). Qed.
Lemma lem8233388 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8233389 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term81 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = (term82 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2).
Proof. exact (MK_COMB (@lem8233388) (@lem8233387 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2)). Qed.
Lemma lem8233390 : True = True.
Proof. exact (eq_refl True). Qed.
Lemma lem8233391 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : ((term25 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = True) = ((term24 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = True).
Proof. exact (MK_COMB (@lem8233389 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) (@lem8233390)). Qed.
Lemma lem8233392 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (e : type564 _145020 _145085 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term24 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) = True.
Proof. exact (EQ_MP (@lem8233391 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) (@lem8233324 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2)). Qed.
Lemma lem8233393 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (e : type564 _145020 _145085 _145140 P) (c1 : type566 _145020 _145085 _145109 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term23 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1 c2) = True.
Proof. exact (TRANS (@lem8233320 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2) (@lem8233392 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 e c2)). Qed.
Lemma lem8233394 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term83 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2) = (term84 _145020 _145085 _145140 P).
Proof. exact (fun_ext (fun e : type564 _145020 _145085 _145140 P => @lem8233393 _145019 _145020 _145085 _145109 _145140 P lt2 p s e c1 c2)). Qed.
Lemma lem8233395 {_145020 _145085 _145140 P : Type'} : (@all ((_145020 -> _145085) -> P -> _145140)) = (@all ((_145020 -> _145085) -> P -> _145140)).
Proof. exact (eq_refl (@all ((_145020 -> _145085) -> P -> _145140))). Qed.
Lemma lem8233396 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term85 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2) = (term86 _145020 _145085 _145140 P).
Proof. exact (MK_COMB (@lem8233395 _145020 _145085 _145140 P) (@lem8233394 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2)). Qed.
Lemma lem8233398 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233399 {_145020 _145085 _145140 P : Type'} (t : Prop) : (term88 _145020 _145085 _145140 P t) = t.
Proof. exact (@lem8233398 (type564 _145020 _145085 _145140 P) t). Qed.
Lemma lem8233400 {_145020 _145085 _145140 P : Type'} : (term86 _145020 _145085 _145140 P) = True.
Proof. exact (@lem8233399 _145020 _145085 _145140 P True). Qed.
Lemma lem8233401 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) (c2 : type566 _145020 _145085 _145109 _145140 P) : (term85 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2) = True.
Proof. exact (TRANS (@lem8233396 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2) (@lem8233400 _145020 _145085 _145140 P)). Qed.
Lemma lem8233402 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term89 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1) = (term90 _145020 _145085 _145109 _145140 P).
Proof. exact (fun_ext (fun c2 : type566 _145020 _145085 _145109 _145140 P => @lem8233401 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1 c2)). Qed.
Lemma lem8233403 {_145020 _145085 _145109 _145140 P : Type'} : (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop)) = (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop)).
Proof. exact (eq_refl (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop))). Qed.
Lemma lem8233404 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term91 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1) = (term92 _145020 _145085 _145109 _145140 P).
Proof. exact (MK_COMB (@lem8233403 _145020 _145085 _145109 _145140 P) (@lem8233402 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1)). Qed.
Lemma lem8233406 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233407 {_145020 _145085 _145109 _145140 P : Type'} (t : Prop) : (term93 _145020 _145085 _145109 _145140 P t) = t.
Proof. exact (@lem8233406 (type566 _145020 _145085 _145109 _145140 P) t). Qed.
Lemma lem8233408 {_145020 _145085 _145109 _145140 P : Type'} : (term92 _145020 _145085 _145109 _145140 P) = True.
Proof. exact (@lem8233407 _145020 _145085 _145109 _145140 P True). Qed.
Lemma lem8233409 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) (c1 : type566 _145020 _145085 _145109 _145140 P) : (term91 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1) = True.
Proof. exact (TRANS (@lem8233404 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1) (@lem8233408 _145020 _145085 _145109 _145140 P)). Qed.
Lemma lem8233410 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) : (term94 _145019 _145020 _145085 _145109 _145140 P lt2 p s) = (term90 _145020 _145085 _145109 _145140 P).
Proof. exact (fun_ext (fun c1 : type566 _145020 _145085 _145109 _145140 P => @lem8233409 _145019 _145020 _145085 _145109 _145140 P lt2 p s c1)). Qed.
Lemma lem8233411 {_145020 _145085 _145109 _145140 P : Type'} : (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop)) = (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop)).
Proof. exact (eq_refl (@all ((_145020 -> _145085) -> P -> _145140 -> _145109 -> Prop))). Qed.
Lemma lem8233412 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) : (term95 _145019 _145020 _145085 _145109 _145140 P lt2 p s) = (term92 _145020 _145085 _145109 _145140 P).
Proof. exact (MK_COMB (@lem8233411 _145020 _145085 _145109 _145140 P) (@lem8233410 _145019 _145020 _145085 _145109 _145140 P lt2 p s)). Qed.
Lemma lem8233414 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233415 {_145020 _145085 _145109 _145140 P : Type'} (t : Prop) : (term93 _145020 _145085 _145109 _145140 P t) = t.
Proof. exact (@lem8233414 (type566 _145020 _145085 _145109 _145140 P) t). Qed.
Lemma lem8233416 {_145020 _145085 _145109 _145140 P : Type'} : (term92 _145020 _145085 _145109 _145140 P) = True.
Proof. exact (@lem8233415 _145020 _145085 _145109 _145140 P True). Qed.
Lemma lem8233417 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) (s : P -> _145019) : (term95 _145019 _145020 _145085 _145109 _145140 P lt2 p s) = True.
Proof. exact (TRANS (@lem8233412 _145019 _145020 _145085 _145109 _145140 P lt2 p s) (@lem8233416 _145020 _145085 _145109 _145140 P)). Qed.
Lemma lem8233418 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) : (term96 _145019 _145020 _145085 _145109 _145140 P lt2 p) = (term97 _145019 P).
Proof. exact (fun_ext (fun s : P -> _145019 => @lem8233417 _145019 _145020 _145085 _145109 _145140 P lt2 p s)). Qed.
Lemma lem8233419 {_145019 P : Type'} : (@all (P -> _145019)) = (@all (P -> _145019)).
Proof. exact (eq_refl (@all (P -> _145019))). Qed.
Lemma lem8233420 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) : (term98 _145019 _145020 _145085 _145109 _145140 P lt2 p) = (term99 _145019 P).
Proof. exact (MK_COMB (@lem8233419 _145019 P) (@lem8233418 _145019 _145020 _145085 _145109 _145140 P lt2 p)). Qed.
Lemma lem8233422 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233423 {_145019 P : Type'} (t : Prop) : (term100 _145019 P t) = t.
Proof. exact (@lem8233422 (P -> _145019) t). Qed.
Lemma lem8233424 {_145019 P : Type'} : (term99 _145019 P) = True.
Proof. exact (@lem8233423 _145019 P True). Qed.
Lemma lem8233425 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) (p : type560 _145020 _145085 P) : (term98 _145019 _145020 _145085 _145109 _145140 P lt2 p) = True.
Proof. exact (TRANS (@lem8233420 _145019 _145020 _145085 _145109 _145140 P lt2 p) (@lem8233424 _145019 P)). Qed.
Lemma lem8233426 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) : (term101 _145019 _145020 _145085 _145109 _145140 P lt2) = (term102 _145020 _145085 P).
Proof. exact (fun_ext (fun p : type560 _145020 _145085 P => @lem8233425 _145019 _145020 _145085 _145109 _145140 P lt2 p)). Qed.
Lemma lem8233427 {_145020 _145085 P : Type'} : (@all ((_145020 -> _145085) -> P -> Prop)) = (@all ((_145020 -> _145085) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_145020 -> _145085) -> P -> Prop))). Qed.
Lemma lem8233428 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) : (term103 _145019 _145020 _145085 _145109 _145140 P lt2) = (term104 _145020 _145085 P).
Proof. exact (MK_COMB (@lem8233427 _145020 _145085 P) (@lem8233426 _145019 _145020 _145085 _145109 _145140 P lt2)). Qed.
Lemma lem8233430 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233431 {_145020 _145085 P : Type'} (t : Prop) : (term105 _145020 _145085 P t) = t.
Proof. exact (@lem8233430 (type560 _145020 _145085 P) t). Qed.
Lemma lem8233432 {_145020 _145085 P : Type'} : (term104 _145020 _145085 P) = True.
Proof. exact (@lem8233431 _145020 _145085 P True). Qed.
Lemma lem8233433 {_145019 _145020 _145085 _145109 _145140 P : Type'} (lt2 : type1470 _145019 _145020) : (term103 _145019 _145020 _145085 _145109 _145140 P lt2) = True.
Proof. exact (TRANS (@lem8233428 _145019 _145020 _145085 _145109 _145140 P lt2) (@lem8233432 _145020 _145085 P)). Qed.
Lemma lem8233434 {_145019 _145020 _145085 _145109 _145140 P : Type'} : (term106 _145019 _145020 _145085 _145109 _145140 P) = (term107 _145019 _145020).
Proof. exact (fun_ext (fun lt2 : type1470 _145019 _145020 => @lem8233433 _145019 _145020 _145085 _145109 _145140 P lt2)). Qed.
Lemma lem8233435 {_145019 _145020 : Type'} : (@all (_145020 -> _145019 -> Prop)) = (@all (_145020 -> _145019 -> Prop)).
Proof. exact (eq_refl (@all (_145020 -> _145019 -> Prop))). Qed.
Lemma lem8233436 {_145019 _145020 _145085 _145109 _145140 P : Type'} : (term108 _145019 _145020 _145085 _145109 _145140 P) = (term109 _145019 _145020).
Proof. exact (MK_COMB (@lem8233435 _145019 _145020) (@lem8233434 _145019 _145020 _145085 _145109 _145140 P)). Qed.
Lemma lem8233438 {A : Type'} (t : Prop) : (term87 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8233439 {_145019 _145020 : Type'} (t : Prop) : (term110 _145019 _145020 t) = t.
Proof. exact (@lem8233438 (type1470 _145019 _145020) t). Qed.
Lemma lem8233440 {_145019 _145020 : Type'} : (term109 _145019 _145020) = True.
Proof. exact (@lem8233439 _145019 _145020 True). Qed.
Lemma lem8233441 {_145019 _145020 _145085 _145109 _145140 P : Type'} : (term108 _145019 _145020 _145085 _145109 _145140 P) = True.
Proof. exact (TRANS (@lem8233436 _145019 _145020 _145085 _145109 _145140 P) (@lem8233440 _145019 _145020)). Qed.
Lemma lem8233442 {_145019 _145020 _145085 _145109 _145140 P : Type'} : True = (term108 _145019 _145020 _145085 _145109 _145140 P).
Proof. exact (SYM (@lem8233441 _145019 _145020 _145085 _145109 _145140 P)). Qed.
Lemma lem8233443 {_145019 _145020 _145085 _145109 _145140 P : Type'} : term108 _145019 _145020 _145085 _145109 _145140 P.
Proof. exact (EQ_MP (@lem8233442 _145019 _145020 _145085 _145109 _145140 P) (@lem0)). Qed.
