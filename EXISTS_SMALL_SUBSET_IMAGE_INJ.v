Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import EXISTS_SMALL_SUBSET_IMAGE_INJ_term_abbrevs.
Require Import BOOL_CASES_AX_spec.
Require Import CARD_IMAGE_INJ_spec.
Require Import CONJ_ASSOC_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXISTS_SUBSET_IMAGE_INJ_spec.
Require Import FINITE_IMAGE_INJ_EQ_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1820_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm18392_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1844_spec.
Require Import thm1845_spec.
Require Import thm1855_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm21501_spec.
Require Import thm21598_spec.
Require Import thm69_spec.
Lemma lem4036341 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem4036342 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem4036343 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem4036342 t1) (@lem4036341 t1)). Qed.
Lemma lem4036344 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem4036343 t1 t2). Qed.
Lemma lem4036345 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem4036346 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem4036345 t1 t2) (@lem4036344 t1 t2)). Qed.
Lemma lem4036347 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem4036346 t1 t2 t3). Qed.
Lemma lem4036348 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem4036349 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036348 t1 t2 t3) (@lem4036347 t1 t2 t3)). Qed.
Lemma lem4036350 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem4036349 t1 t2 t3)). Qed.
Lemma lem4036377 (p : Prop) : term7 p.
Proof. exact (@lem9851 p). Qed.
Lemma lem4036378 (p : Prop) : (term7 p) = (term8 p).
Proof. exact (eq_refl (term7 p)). Qed.
Lemma lem4036379 (p : Prop) : term8 p.
Proof. exact (EQ_MP (@lem4036378 p) (@lem4036377 p)). Qed.
Lemma lem4036380 (p : Prop) (h1 : p = True) : p = True.
Proof. exact (h1). Qed.
Lemma lem4036381 (p : Prop) (h1 : p = False) : p = False.
Proof. exact (h1). Qed.
Lemma lem4036408 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term9 q r s t) = (term9 q r s t).
Proof. exact (eq_refl (term9 q r s t)). Qed.
Lemma lem4036409 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = True) : (term10 q r s t p) = (term11 q r s t).
Proof. exact (MK_COMB (@lem4036408 q r s t) (@lem4036380 p h1)). Qed.
Lemma lem4036410 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term11 q r s t) = (term12 q r s t).
Proof. exact (eq_refl (term11 q r s t)). Qed.
Lemma lem4036411 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) : (term13 q r s t p) = (term13 q r s t p).
Proof. exact (eq_refl (term13 q r s t p)). Qed.
Lemma lem4036412 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term11 q r s t)) = ((term10 q r s t p) = (term12 q r s t)).
Proof. exact (MK_COMB (@lem4036411 q r s t p) (@lem4036410 q r s t)). Qed.
Lemma lem4036413 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : (term10 q r s t p) = (term14 q r p s t).
Proof. exact (eq_refl (term10 q r s t p)). Qed.
Lemma lem4036414 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036415 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : (term13 q r s t p) = (term15 q r p s t).
Proof. exact (MK_COMB (@lem4036414) (@lem4036413 q r p s t)). Qed.
Lemma lem4036416 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term12 q r s t) = (term12 q r s t).
Proof. exact (eq_refl (term12 q r s t)). Qed.
Lemma lem4036417 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term12 q r s t)) = ((term14 q r p s t) = (term12 q r s t)).
Proof. exact (MK_COMB (@lem4036415 q r p s t) (@lem4036416 q r s t)). Qed.
Lemma lem4036418 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term11 q r s t)) = ((term14 q r p s t) = (term12 q r s t)).
Proof. exact (TRANS (@lem4036412 p q r s t) (@lem4036417 p q r s t)). Qed.
Lemma lem4036419 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = True) : (term14 q r p s t) = (term12 q r s t).
Proof. exact (EQ_MP (@lem4036418 p q r s t) (@lem4036409 q r s t p h1)). Qed.
Lemma lem4036420 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = True) : (term12 q r s t) = (term14 q r p s t).
Proof. exact (SYM (@lem4036419 q r s t p h1)). Qed.
Lemma lem4036421 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term9 q r s t) = (term9 q r s t).
Proof. exact (eq_refl (term9 q r s t)). Qed.
Lemma lem4036422 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = False) : (term10 q r s t p) = (term16 q r s t).
Proof. exact (MK_COMB (@lem4036421 q r s t) (@lem4036381 p h1)). Qed.
Lemma lem4036423 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term16 q r s t) = (term17 q r s t).
Proof. exact (eq_refl (term16 q r s t)). Qed.
Lemma lem4036424 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) : (term13 q r s t p) = (term13 q r s t p).
Proof. exact (eq_refl (term13 q r s t p)). Qed.
Lemma lem4036425 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term16 q r s t)) = ((term10 q r s t p) = (term17 q r s t)).
Proof. exact (MK_COMB (@lem4036424 q r s t p) (@lem4036423 q r s t)). Qed.
Lemma lem4036426 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : (term10 q r s t p) = (term14 q r p s t).
Proof. exact (eq_refl (term10 q r s t p)). Qed.
Lemma lem4036427 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036428 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : (term13 q r s t p) = (term15 q r p s t).
Proof. exact (MK_COMB (@lem4036427) (@lem4036426 q r p s t)). Qed.
Lemma lem4036429 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term17 q r s t) = (term17 q r s t).
Proof. exact (eq_refl (term17 q r s t)). Qed.
Lemma lem4036430 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term17 q r s t)) = ((term14 q r p s t) = (term17 q r s t)).
Proof. exact (MK_COMB (@lem4036428 q r p s t) (@lem4036429 q r s t)). Qed.
Lemma lem4036431 (p : Prop) (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term10 q r s t p) = (term16 q r s t)) = ((term14 q r p s t) = (term17 q r s t)).
Proof. exact (TRANS (@lem4036425 p q r s t) (@lem4036430 p q r s t)). Qed.
Lemma lem4036432 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = False) : (term14 q r p s t) = (term17 q r s t).
Proof. exact (EQ_MP (@lem4036431 p q r s t) (@lem4036422 q r s t p h1)). Qed.
Lemma lem4036433 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = False) : (term17 q r s t) = (term14 q r p s t).
Proof. exact (SYM (@lem4036432 q r s t p h1)). Qed.
Lemma lem4036439 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4036440 (q : Prop) (s : Prop) : (term18 q s) = (q = s).
Proof. exact (@lem4036439 (q = s)). Qed.
Lemma lem4036443 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036444 (q : Prop) (s : Prop) : (term19 q s) = (term20 q s).
Proof. exact (MK_COMB (@lem4036443) (@lem4036440 q s)). Qed.
Lemma lem4036448 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036449 (s : Prop) : (True /\ s) = s.
Proof. exact (@lem4036448 s). Qed.
Lemma lem4036450 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036451 (s : Prop) : (term21 s) = (imp s).
Proof. exact (MK_COMB (@lem4036450) (@lem4036449 s)). Qed.
Lemma lem4036454 (r : Prop) (t : Prop) : (r = t) = (r = t).
Proof. exact (eq_refl (r = t)). Qed.
Lemma lem4036455 (s : Prop) (r : Prop) (t : Prop) : (term22 s r t) = (term23 s r t).
Proof. exact (MK_COMB (@lem4036451 s) (@lem4036454 r t)). Qed.
Lemma lem4036458 (q : Prop) (s : Prop) (r : Prop) (t : Prop) : (term24 q s r t) = (term25 q s r t).
Proof. exact (MK_COMB (@lem4036444 q s) (@lem4036455 s r t)). Qed.
Lemma lem4036461 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036462 (q : Prop) (s : Prop) (r : Prop) (t : Prop) : (term26 q s r t) = (term27 q s r t).
Proof. exact (MK_COMB (@lem4036461) (@lem4036458 q s r t)). Qed.
Lemma lem4036468 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036469 (q : Prop) : (True /\ q) = q.
Proof. exact (@lem4036468 q). Qed.
Lemma lem4036470 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036471 (q : Prop) : (term28 q) = (and q).
Proof. exact (MK_COMB (@lem4036470) (@lem4036469 q)). Qed.
Lemma lem4036472 (r : Prop) : r = r.
Proof. exact (eq_refl r). Qed.
Lemma lem4036473 (q : Prop) (r : Prop) : (term29 q r) = (q /\ r).
Proof. exact (MK_COMB (@lem4036471 q) (@lem4036472 r)). Qed.
Lemma lem4036476 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036477 (q : Prop) (r : Prop) : (term30 q r) = (term31 q r).
Proof. exact (MK_COMB (@lem4036476) (@lem4036473 q r)). Qed.
Lemma lem4036481 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036482 (s : Prop) : (True /\ s) = s.
Proof. exact (@lem4036481 s). Qed.
Lemma lem4036483 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036484 (s : Prop) : (term28 s) = (and s).
Proof. exact (MK_COMB (@lem4036483) (@lem4036482 s)). Qed.
Lemma lem4036485 (t : Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4036486 (s : Prop) (t : Prop) : (term29 s t) = (s /\ t).
Proof. exact (MK_COMB (@lem4036484 s) (@lem4036485 t)). Qed.
Lemma lem4036489 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term29 q r) = (term29 s t)) = ((q /\ r) = (s /\ t)).
Proof. exact (MK_COMB (@lem4036477 q r) (@lem4036486 s t)). Qed.
Lemma lem4036492 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term12 q r s t) = (term32 q r s t).
Proof. exact (MK_COMB (@lem4036462 q s r t) (@lem4036489 q r s t)). Qed.
Lemma lem4036495 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term32 q r s t) = (term12 q r s t).
Proof. exact (SYM (@lem4036492 q r s t)). Qed.
Lemma lem4036496 (q : Prop) : term7 q.
Proof. exact (@lem9851 q). Qed.
Lemma lem4036497 (q : Prop) : (term7 q) = (term8 q).
Proof. exact (eq_refl (term7 q)). Qed.
Lemma lem4036498 (q : Prop) : term8 q.
Proof. exact (EQ_MP (@lem4036497 q) (@lem4036496 q)). Qed.
Lemma lem4036499 (q : Prop) (h1 : q = True) : q = True.
Proof. exact (h1). Qed.
Lemma lem4036500 (q : Prop) (h1 : q = False) : q = False.
Proof. exact (h1). Qed.
Lemma lem4036519 (r : Prop) (s : Prop) (t : Prop) : (term33 r s t) = (term33 r s t).
Proof. exact (eq_refl (term33 r s t)). Qed.
Lemma lem4036520 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = True) : (term34 r s t q) = (term35 r s t).
Proof. exact (MK_COMB (@lem4036519 r s t) (@lem4036499 q h1)). Qed.
Lemma lem4036521 (r : Prop) (s : Prop) (t : Prop) : (term35 r s t) = (term36 r s t).
Proof. exact (eq_refl (term35 r s t)). Qed.
Lemma lem4036522 (r : Prop) (s : Prop) (t : Prop) (q : Prop) : (term37 r s t q) = (term37 r s t q).
Proof. exact (eq_refl (term37 r s t q)). Qed.
Lemma lem4036523 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term35 r s t)) = ((term34 r s t q) = (term36 r s t)).
Proof. exact (MK_COMB (@lem4036522 r s t q) (@lem4036521 r s t)). Qed.
Lemma lem4036524 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term34 r s t q) = (term32 q r s t).
Proof. exact (eq_refl (term34 r s t q)). Qed.
Lemma lem4036525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036526 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term37 r s t q) = (term38 q r s t).
Proof. exact (MK_COMB (@lem4036525) (@lem4036524 q r s t)). Qed.
Lemma lem4036527 (r : Prop) (s : Prop) (t : Prop) : (term36 r s t) = (term36 r s t).
Proof. exact (eq_refl (term36 r s t)). Qed.
Lemma lem4036528 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term36 r s t)) = ((term32 q r s t) = (term36 r s t)).
Proof. exact (MK_COMB (@lem4036526 q r s t) (@lem4036527 r s t)). Qed.
Lemma lem4036529 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term35 r s t)) = ((term32 q r s t) = (term36 r s t)).
Proof. exact (TRANS (@lem4036523 q r s t) (@lem4036528 q r s t)). Qed.
Lemma lem4036530 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = True) : (term32 q r s t) = (term36 r s t).
Proof. exact (EQ_MP (@lem4036529 q r s t) (@lem4036520 r s t q h1)). Qed.
Lemma lem4036531 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = True) : (term36 r s t) = (term32 q r s t).
Proof. exact (SYM (@lem4036530 r s t q h1)). Qed.
Lemma lem4036532 (r : Prop) (s : Prop) (t : Prop) : (term33 r s t) = (term33 r s t).
Proof. exact (eq_refl (term33 r s t)). Qed.
Lemma lem4036533 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = False) : (term34 r s t q) = (term39 r s t).
Proof. exact (MK_COMB (@lem4036532 r s t) (@lem4036500 q h1)). Qed.
Lemma lem4036534 (r : Prop) (s : Prop) (t : Prop) : (term39 r s t) = (term40 r s t).
Proof. exact (eq_refl (term39 r s t)). Qed.
Lemma lem4036535 (r : Prop) (s : Prop) (t : Prop) (q : Prop) : (term37 r s t q) = (term37 r s t q).
Proof. exact (eq_refl (term37 r s t q)). Qed.
Lemma lem4036536 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term39 r s t)) = ((term34 r s t q) = (term40 r s t)).
Proof. exact (MK_COMB (@lem4036535 r s t q) (@lem4036534 r s t)). Qed.
Lemma lem4036537 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term34 r s t q) = (term32 q r s t).
Proof. exact (eq_refl (term34 r s t q)). Qed.
Lemma lem4036538 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036539 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term37 r s t q) = (term38 q r s t).
Proof. exact (MK_COMB (@lem4036538) (@lem4036537 q r s t)). Qed.
Lemma lem4036540 (r : Prop) (s : Prop) (t : Prop) : (term40 r s t) = (term40 r s t).
Proof. exact (eq_refl (term40 r s t)). Qed.
Lemma lem4036541 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term40 r s t)) = ((term32 q r s t) = (term40 r s t)).
Proof. exact (MK_COMB (@lem4036539 q r s t) (@lem4036540 r s t)). Qed.
Lemma lem4036542 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term34 r s t q) = (term39 r s t)) = ((term32 q r s t) = (term40 r s t)).
Proof. exact (TRANS (@lem4036536 q r s t) (@lem4036541 q r s t)). Qed.
Lemma lem4036543 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = False) : (term32 q r s t) = (term40 r s t).
Proof. exact (EQ_MP (@lem4036542 q r s t) (@lem4036533 r s t q h1)). Qed.
Lemma lem4036544 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = False) : (term40 r s t) = (term32 q r s t).
Proof. exact (SYM (@lem4036543 r s t q h1)). Qed.
Lemma lem4036550 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem4036551 (s : Prop) : (True = s) = s.
Proof. exact (@lem4036550 s). Qed.
Lemma lem4036552 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036553 (s : Prop) : (term41 s) = (and s).
Proof. exact (MK_COMB (@lem4036552) (@lem4036551 s)). Qed.
Lemma lem4036558 (s : Prop) (r : Prop) (t : Prop) : (term23 s r t) = (term23 s r t).
Proof. exact (eq_refl (term23 s r t)). Qed.
Lemma lem4036559 (s : Prop) (r : Prop) (t : Prop) : (term42 s r t) = (term43 s r t).
Proof. exact (MK_COMB (@lem4036553 s) (@lem4036558 s r t)). Qed.
Lemma lem4036562 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036563 (s : Prop) (r : Prop) (t : Prop) : (term44 s r t) = (term45 s r t).
Proof. exact (MK_COMB (@lem4036562) (@lem4036559 s r t)). Qed.
Lemma lem4036567 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036568 (r : Prop) : (True /\ r) = r.
Proof. exact (@lem4036567 r). Qed.
Lemma lem4036569 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036570 (r : Prop) : (term46 r) = (@eq Prop r).
Proof. exact (MK_COMB (@lem4036569) (@lem4036568 r)). Qed.
Lemma lem4036573 (s : Prop) (t : Prop) : (s /\ t) = (s /\ t).
Proof. exact (eq_refl (s /\ t)). Qed.
Lemma lem4036574 (r : Prop) (s : Prop) (t : Prop) : ((True /\ r) = (s /\ t)) = (r = (s /\ t)).
Proof. exact (MK_COMB (@lem4036570 r) (@lem4036573 s t)). Qed.
Lemma lem4036577 (r : Prop) (s : Prop) (t : Prop) : (term36 r s t) = (term47 r s t).
Proof. exact (MK_COMB (@lem4036563 s r t) (@lem4036574 r s t)). Qed.
Lemma lem4036580 (r : Prop) (s : Prop) (t : Prop) : (term47 r s t) = (term36 r s t).
Proof. exact (SYM (@lem4036577 r s t)). Qed.
Lemma lem4036581 (s : Prop) : term7 s.
Proof. exact (@lem9851 s). Qed.
Lemma lem4036582 (s : Prop) : (term7 s) = (term8 s).
Proof. exact (eq_refl (term7 s)). Qed.
Lemma lem4036583 (s : Prop) : term8 s.
Proof. exact (EQ_MP (@lem4036582 s) (@lem4036581 s)). Qed.
Lemma lem4036584 (s : Prop) (h1 : s = True) : s = True.
Proof. exact (h1). Qed.
Lemma lem4036585 (s : Prop) (h1 : s = False) : s = False.
Proof. exact (h1). Qed.
Lemma lem4036600 (r : Prop) (t : Prop) : (term48 r t) = (term48 r t).
Proof. exact (eq_refl (term48 r t)). Qed.
Lemma lem4036601 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term49 r t s) = (term50 r t).
Proof. exact (MK_COMB (@lem4036600 r t) (@lem4036584 s h1)). Qed.
Lemma lem4036602 (r : Prop) (t : Prop) : (term50 r t) = (term51 r t).
Proof. exact (eq_refl (term50 r t)). Qed.
Lemma lem4036603 (r : Prop) (t : Prop) (s : Prop) : (term52 r t s) = (term52 r t s).
Proof. exact (eq_refl (term52 r t s)). Qed.
Lemma lem4036604 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term50 r t)) = ((term49 r t s) = (term51 r t)).
Proof. exact (MK_COMB (@lem4036603 r t s) (@lem4036602 r t)). Qed.
Lemma lem4036605 (r : Prop) (s : Prop) (t : Prop) : (term49 r t s) = (term47 r s t).
Proof. exact (eq_refl (term49 r t s)). Qed.
Lemma lem4036606 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036607 (r : Prop) (s : Prop) (t : Prop) : (term52 r t s) = (term53 r s t).
Proof. exact (MK_COMB (@lem4036606) (@lem4036605 r s t)). Qed.
Lemma lem4036608 (r : Prop) (t : Prop) : (term51 r t) = (term51 r t).
Proof. exact (eq_refl (term51 r t)). Qed.
Lemma lem4036609 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term51 r t)) = ((term47 r s t) = (term51 r t)).
Proof. exact (MK_COMB (@lem4036607 r s t) (@lem4036608 r t)). Qed.
Lemma lem4036610 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term50 r t)) = ((term47 r s t) = (term51 r t)).
Proof. exact (TRANS (@lem4036604 s r t) (@lem4036609 s r t)). Qed.
Lemma lem4036611 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term47 r s t) = (term51 r t).
Proof. exact (EQ_MP (@lem4036610 s r t) (@lem4036601 r t s h1)). Qed.
Lemma lem4036612 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term51 r t) = (term47 r s t).
Proof. exact (SYM (@lem4036611 r t s h1)). Qed.
Lemma lem4036613 (r : Prop) (t : Prop) : (term48 r t) = (term48 r t).
Proof. exact (eq_refl (term48 r t)). Qed.
Lemma lem4036614 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term49 r t s) = (term54 r t).
Proof. exact (MK_COMB (@lem4036613 r t) (@lem4036585 s h1)). Qed.
Lemma lem4036615 (r : Prop) (t : Prop) : (term54 r t) = (term55 r t).
Proof. exact (eq_refl (term54 r t)). Qed.
Lemma lem4036616 (r : Prop) (t : Prop) (s : Prop) : (term52 r t s) = (term52 r t s).
Proof. exact (eq_refl (term52 r t s)). Qed.
Lemma lem4036617 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term54 r t)) = ((term49 r t s) = (term55 r t)).
Proof. exact (MK_COMB (@lem4036616 r t s) (@lem4036615 r t)). Qed.
Lemma lem4036618 (r : Prop) (s : Prop) (t : Prop) : (term49 r t s) = (term47 r s t).
Proof. exact (eq_refl (term49 r t s)). Qed.
Lemma lem4036619 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036620 (r : Prop) (s : Prop) (t : Prop) : (term52 r t s) = (term53 r s t).
Proof. exact (MK_COMB (@lem4036619) (@lem4036618 r s t)). Qed.
Lemma lem4036621 (r : Prop) (t : Prop) : (term55 r t) = (term55 r t).
Proof. exact (eq_refl (term55 r t)). Qed.
Lemma lem4036622 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term55 r t)) = ((term47 r s t) = (term55 r t)).
Proof. exact (MK_COMB (@lem4036620 r s t) (@lem4036621 r t)). Qed.
Lemma lem4036623 (s : Prop) (r : Prop) (t : Prop) : ((term49 r t s) = (term54 r t)) = ((term47 r s t) = (term55 r t)).
Proof. exact (TRANS (@lem4036617 s r t) (@lem4036622 s r t)). Qed.
Lemma lem4036624 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term47 r s t) = (term55 r t).
Proof. exact (EQ_MP (@lem4036623 s r t) (@lem4036614 r t s h1)). Qed.
Lemma lem4036625 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term55 r t) = (term47 r s t).
Proof. exact (SYM (@lem4036624 r t s h1)). Qed.
Lemma lem4036629 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036630 (r : Prop) (t : Prop) : (term56 r t) = (term18 r t).
Proof. exact (@lem4036629 (term18 r t)). Qed.
Lemma lem4036632 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4036633 (r : Prop) (t : Prop) : (term18 r t) = (r = t).
Proof. exact (@lem4036632 (r = t)). Qed.
Lemma lem4036636 (r : Prop) (t : Prop) : (term56 r t) = (r = t).
Proof. exact (TRANS (@lem4036630 r t) (@lem4036633 r t)). Qed.
Lemma lem4036637 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036638 (r : Prop) (t : Prop) : (term57 r t) = (term58 r t).
Proof. exact (MK_COMB (@lem4036637) (@lem4036636 r t)). Qed.
Lemma lem4036642 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036643 (r : Prop) : (@eq Prop r) = (@eq Prop r).
Proof. exact (eq_refl (@eq Prop r)). Qed.
Lemma lem4036644 (r : Prop) (t : Prop) : (r = (True /\ t)) = (r = t).
Proof. exact (MK_COMB (@lem4036643 r) (@lem4036642 t)). Qed.
Lemma lem4036647 (r : Prop) (t : Prop) : (term51 r t) = (term59 r t).
Proof. exact (MK_COMB (@lem4036638 r t) (@lem4036644 r t)). Qed.
Lemma lem4036651 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem4036652 (r : Prop) (t : Prop) : (term59 r t) = True.
Proof. exact (@lem4036651 (r = t)). Qed.
Lemma lem4036653 (r : Prop) (t : Prop) : (term51 r t) = True.
Proof. exact (TRANS (@lem4036647 r t) (@lem4036652 r t)). Qed.
Lemma lem4036654 (r : Prop) (t : Prop) : True = (term51 r t).
Proof. exact (SYM (@lem4036653 r t)). Qed.
Lemma lem4036655 (r : Prop) (t : Prop) : term51 r t.
Proof. exact (EQ_MP (@lem4036654 r t) (@lem0)). Qed.
Lemma lem4036659 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036660 (r : Prop) (t : Prop) : (term60 r t) = False.
Proof. exact (@lem4036659 (term61 r t)). Qed.
Lemma lem4036661 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036662 (r : Prop) (t : Prop) : (term62 r t) = (imp False).
Proof. exact (MK_COMB (@lem4036661) (@lem4036660 r t)). Qed.
Lemma lem4036666 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036667 (r : Prop) : (@eq Prop r) = (@eq Prop r).
Proof. exact (eq_refl (@eq Prop r)). Qed.
Lemma lem4036668 (t : Prop) (r : Prop) : (r = (False /\ t)) = (r = False).
Proof. exact (MK_COMB (@lem4036667 r) (@lem4036666 t)). Qed.
Lemma lem4036670 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem4036671 (r : Prop) : (r = False) = (~ r).
Proof. exact (@lem4036670 r). Qed.
Lemma lem4036672 (t : Prop) (r : Prop) : (r = (False /\ t)) = (~ r).
Proof. exact (TRANS (@lem4036668 t r) (@lem4036671 r)). Qed.
Lemma lem4036673 (t : Prop) (r : Prop) : (term55 r t) = (term63 r).
Proof. exact (MK_COMB (@lem4036662 r t) (@lem4036672 t r)). Qed.
Lemma lem4036675 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4036676 (r : Prop) : (term63 r) = True.
Proof. exact (@lem4036675 (~ r)). Qed.
Lemma lem4036677 (r : Prop) (t : Prop) : (term55 r t) = True.
Proof. exact (TRANS (@lem4036673 t r) (@lem4036676 r)). Qed.
Lemma lem4036678 (r : Prop) (t : Prop) : True = (term55 r t).
Proof. exact (SYM (@lem4036677 r t)). Qed.
Lemma lem4036679 (r : Prop) (t : Prop) : term55 r t.
Proof. exact (EQ_MP (@lem4036678 r t) (@lem0)). Qed.
Lemma lem4036680 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : term47 r s t.
Proof. exact (EQ_MP (@lem4036625 r t s h1) (@lem4036679 r t)). Qed.
Lemma lem4036681 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : term47 r s t.
Proof. exact (EQ_MP (@lem4036612 r t s h1) (@lem4036655 r t)). Qed.
Lemma lem4036683 (r : Prop) (s : Prop) (t : Prop) : term47 r s t.
Proof. exact (or_elim (@lem4036583 s) (fun h0 : s = True => @lem4036681 r t s h0) (fun h0 : s = False => @lem4036680 r t s h0)). Qed.
Lemma lem4036684 (r : Prop) (s : Prop) (t : Prop) : term36 r s t.
Proof. exact (EQ_MP (@lem4036580 r s t) (@lem4036683 r s t)). Qed.
Lemma lem4036690 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem4036691 (s : Prop) : (False = s) = (~ s).
Proof. exact (@lem4036690 s). Qed.
Lemma lem4036692 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036693 (s : Prop) : (term64 s) = (term65 s).
Proof. exact (MK_COMB (@lem4036692) (@lem4036691 s)). Qed.
Lemma lem4036698 (s : Prop) (r : Prop) (t : Prop) : (term23 s r t) = (term23 s r t).
Proof. exact (eq_refl (term23 s r t)). Qed.
Lemma lem4036699 (s : Prop) (r : Prop) (t : Prop) : (term66 s r t) = (term67 s r t).
Proof. exact (MK_COMB (@lem4036693 s) (@lem4036698 s r t)). Qed.
Lemma lem4036702 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036703 (s : Prop) (r : Prop) (t : Prop) : (term68 s r t) = (term69 s r t).
Proof. exact (MK_COMB (@lem4036702) (@lem4036699 s r t)). Qed.
Lemma lem4036707 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036708 (r : Prop) : (False /\ r) = False.
Proof. exact (@lem4036707 r). Qed.
Lemma lem4036709 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036710 (r : Prop) : (term70 r) = (@eq Prop False).
Proof. exact (MK_COMB (@lem4036709) (@lem4036708 r)). Qed.
Lemma lem4036713 (s : Prop) (t : Prop) : (s /\ t) = (s /\ t).
Proof. exact (eq_refl (s /\ t)). Qed.
Lemma lem4036714 (r : Prop) (s : Prop) (t : Prop) : ((False /\ r) = (s /\ t)) = (False = (s /\ t)).
Proof. exact (MK_COMB (@lem4036710 r) (@lem4036713 s t)). Qed.
Lemma lem4036716 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem4036717 (s : Prop) (t : Prop) : (False = (s /\ t)) = (term71 s t).
Proof. exact (@lem4036716 (s /\ t)). Qed.
Lemma lem4036720 (r : Prop) (s : Prop) (t : Prop) : ((False /\ r) = (s /\ t)) = (term71 s t).
Proof. exact (TRANS (@lem4036714 r s t) (@lem4036717 s t)). Qed.
Lemma lem4036721 (r : Prop) (s : Prop) (t : Prop) : (term40 r s t) = (term72 r s t).
Proof. exact (MK_COMB (@lem4036703 s r t) (@lem4036720 r s t)). Qed.
Lemma lem4036724 (r : Prop) (s : Prop) (t : Prop) : (term72 r s t) = (term40 r s t).
Proof. exact (SYM (@lem4036721 r s t)). Qed.
Lemma lem4036725 (s : Prop) : term7 s.
Proof. exact (@lem9851 s). Qed.
Lemma lem4036726 (s : Prop) : (term7 s) = (term8 s).
Proof. exact (eq_refl (term7 s)). Qed.
Lemma lem4036727 (s : Prop) : term8 s.
Proof. exact (EQ_MP (@lem4036726 s) (@lem4036725 s)). Qed.
Lemma lem4036728 (s : Prop) (h1 : s = True) : s = True.
Proof. exact (h1). Qed.
Lemma lem4036729 (s : Prop) (h1 : s = False) : s = False.
Proof. exact (h1). Qed.
Lemma lem4036742 (r : Prop) (t : Prop) : (term73 r t) = (term73 r t).
Proof. exact (eq_refl (term73 r t)). Qed.
Lemma lem4036743 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term74 r t s) = (term75 r t).
Proof. exact (MK_COMB (@lem4036742 r t) (@lem4036728 s h1)). Qed.
Lemma lem4036744 (r : Prop) (t : Prop) : (term75 r t) = (term76 r t).
Proof. exact (eq_refl (term75 r t)). Qed.
Lemma lem4036745 (r : Prop) (t : Prop) (s : Prop) : (term77 r t s) = (term77 r t s).
Proof. exact (eq_refl (term77 r t s)). Qed.
Lemma lem4036746 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term75 r t)) = ((term74 r t s) = (term76 r t)).
Proof. exact (MK_COMB (@lem4036745 r t s) (@lem4036744 r t)). Qed.
Lemma lem4036747 (r : Prop) (s : Prop) (t : Prop) : (term74 r t s) = (term72 r s t).
Proof. exact (eq_refl (term74 r t s)). Qed.
Lemma lem4036748 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036749 (r : Prop) (s : Prop) (t : Prop) : (term77 r t s) = (term78 r s t).
Proof. exact (MK_COMB (@lem4036748) (@lem4036747 r s t)). Qed.
Lemma lem4036750 (r : Prop) (t : Prop) : (term76 r t) = (term76 r t).
Proof. exact (eq_refl (term76 r t)). Qed.
Lemma lem4036751 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term76 r t)) = ((term72 r s t) = (term76 r t)).
Proof. exact (MK_COMB (@lem4036749 r s t) (@lem4036750 r t)). Qed.
Lemma lem4036752 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term75 r t)) = ((term72 r s t) = (term76 r t)).
Proof. exact (TRANS (@lem4036746 s r t) (@lem4036751 s r t)). Qed.
Lemma lem4036753 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term72 r s t) = (term76 r t).
Proof. exact (EQ_MP (@lem4036752 s r t) (@lem4036743 r t s h1)). Qed.
Lemma lem4036754 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : (term76 r t) = (term72 r s t).
Proof. exact (SYM (@lem4036753 r t s h1)). Qed.
Lemma lem4036755 (r : Prop) (t : Prop) : (term73 r t) = (term73 r t).
Proof. exact (eq_refl (term73 r t)). Qed.
Lemma lem4036756 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term74 r t s) = (term79 r t).
Proof. exact (MK_COMB (@lem4036755 r t) (@lem4036729 s h1)). Qed.
Lemma lem4036757 (r : Prop) (t : Prop) : (term79 r t) = (term80 r t).
Proof. exact (eq_refl (term79 r t)). Qed.
Lemma lem4036758 (r : Prop) (t : Prop) (s : Prop) : (term77 r t s) = (term77 r t s).
Proof. exact (eq_refl (term77 r t s)). Qed.
Lemma lem4036759 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term79 r t)) = ((term74 r t s) = (term80 r t)).
Proof. exact (MK_COMB (@lem4036758 r t s) (@lem4036757 r t)). Qed.
Lemma lem4036760 (r : Prop) (s : Prop) (t : Prop) : (term74 r t s) = (term72 r s t).
Proof. exact (eq_refl (term74 r t s)). Qed.
Lemma lem4036761 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036762 (r : Prop) (s : Prop) (t : Prop) : (term77 r t s) = (term78 r s t).
Proof. exact (MK_COMB (@lem4036761) (@lem4036760 r s t)). Qed.
Lemma lem4036763 (r : Prop) (t : Prop) : (term80 r t) = (term80 r t).
Proof. exact (eq_refl (term80 r t)). Qed.
Lemma lem4036764 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term80 r t)) = ((term72 r s t) = (term80 r t)).
Proof. exact (MK_COMB (@lem4036762 r s t) (@lem4036763 r t)). Qed.
Lemma lem4036765 (s : Prop) (r : Prop) (t : Prop) : ((term74 r t s) = (term79 r t)) = ((term72 r s t) = (term80 r t)).
Proof. exact (TRANS (@lem4036759 s r t) (@lem4036764 s r t)). Qed.
Lemma lem4036766 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term72 r s t) = (term80 r t).
Proof. exact (EQ_MP (@lem4036765 s r t) (@lem4036756 r t s h1)). Qed.
Lemma lem4036767 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : (term80 r t) = (term72 r s t).
Proof. exact (SYM (@lem4036766 r t s h1)). Qed.
Lemma lem4036773 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem4036774 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036775 : term81 = (and False).
Proof. exact (MK_COMB (@lem4036774) (@lem4036773)). Qed.
Lemma lem4036777 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4036778 (r : Prop) (t : Prop) : (term18 r t) = (r = t).
Proof. exact (@lem4036777 (r = t)). Qed.
Lemma lem4036781 (r : Prop) (t : Prop) : (term82 r t) = (term83 r t).
Proof. exact (MK_COMB (@lem4036775) (@lem4036778 r t)). Qed.
Lemma lem4036783 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036784 (r : Prop) (t : Prop) : (term83 r t) = False.
Proof. exact (@lem4036783 (r = t)). Qed.
Lemma lem4036785 (r : Prop) (t : Prop) : (term82 r t) = False.
Proof. exact (TRANS (@lem4036781 r t) (@lem4036784 r t)). Qed.
Lemma lem4036786 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036787 (r : Prop) (t : Prop) : (term84 r t) = (imp False).
Proof. exact (MK_COMB (@lem4036786) (@lem4036785 r t)). Qed.
Lemma lem4036789 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036790 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4036791 (t : Prop) : (term85 t) = (~ t).
Proof. exact (MK_COMB (@lem4036790) (@lem4036789 t)). Qed.
Lemma lem4036792 (r : Prop) (t : Prop) : (term76 r t) = (term63 t).
Proof. exact (MK_COMB (@lem4036787 r t) (@lem4036791 t)). Qed.
Lemma lem4036794 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4036795 (t : Prop) : (term63 t) = True.
Proof. exact (@lem4036794 (~ t)). Qed.
Lemma lem4036796 (r : Prop) (t : Prop) : (term76 r t) = True.
Proof. exact (TRANS (@lem4036792 r t) (@lem4036795 t)). Qed.
Lemma lem4036797 (r : Prop) (t : Prop) : True = (term76 r t).
Proof. exact (SYM (@lem4036796 r t)). Qed.
Lemma lem4036798 (r : Prop) (t : Prop) : term76 r t.
Proof. exact (EQ_MP (@lem4036797 r t) (@lem0)). Qed.
Lemma lem4036804 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4036805 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036806 : term86 = (and True).
Proof. exact (MK_COMB (@lem4036805) (@lem4036804)). Qed.
Lemma lem4036808 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4036809 (r : Prop) (t : Prop) : (term61 r t) = True.
Proof. exact (@lem4036808 (r = t)). Qed.
Lemma lem4036810 (r : Prop) (t : Prop) : (term87 r t) = (True /\ True).
Proof. exact (MK_COMB (@lem4036806) (@lem4036809 r t)). Qed.
Lemma lem4036812 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036813 : (True /\ True) = True.
Proof. exact (@lem4036812 True). Qed.
Lemma lem4036814 (r : Prop) (t : Prop) : (term87 r t) = True.
Proof. exact (TRANS (@lem4036810 r t) (@lem4036813)). Qed.
Lemma lem4036815 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036816 (r : Prop) (t : Prop) : (term88 r t) = (imp True).
Proof. exact (MK_COMB (@lem4036815) (@lem4036814 r t)). Qed.
Lemma lem4036818 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036819 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4036820 (t : Prop) : (term89 t) = (~ False).
Proof. exact (MK_COMB (@lem4036819) (@lem4036818 t)). Qed.
Lemma lem4036822 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4036823 (t : Prop) : (term89 t) = True.
Proof. exact (TRANS (@lem4036820 t) (@lem4036822)). Qed.
Lemma lem4036824 (r : Prop) (t : Prop) : (term80 r t) = (True -> True).
Proof. exact (MK_COMB (@lem4036816 r t) (@lem4036823 t)). Qed.
Lemma lem4036826 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4036827 : (True -> True) = True.
Proof. exact (@lem4036826 True). Qed.
Lemma lem4036828 (r : Prop) (t : Prop) : (term80 r t) = True.
Proof. exact (TRANS (@lem4036824 r t) (@lem4036827)). Qed.
Lemma lem4036829 (r : Prop) (t : Prop) : True = (term80 r t).
Proof. exact (SYM (@lem4036828 r t)). Qed.
Lemma lem4036830 (r : Prop) (t : Prop) : term80 r t.
Proof. exact (EQ_MP (@lem4036829 r t) (@lem0)). Qed.
Lemma lem4036831 (r : Prop) (t : Prop) (s : Prop) (h1 : s = False) : term72 r s t.
Proof. exact (EQ_MP (@lem4036767 r t s h1) (@lem4036830 r t)). Qed.
Lemma lem4036832 (r : Prop) (t : Prop) (s : Prop) (h1 : s = True) : term72 r s t.
Proof. exact (EQ_MP (@lem4036754 r t s h1) (@lem4036798 r t)). Qed.
Lemma lem4036834 (r : Prop) (s : Prop) (t : Prop) : term72 r s t.
Proof. exact (or_elim (@lem4036727 s) (fun h0 : s = True => @lem4036832 r t s h0) (fun h0 : s = False => @lem4036831 r t s h0)). Qed.
Lemma lem4036835 (r : Prop) (s : Prop) (t : Prop) : term40 r s t.
Proof. exact (EQ_MP (@lem4036724 r s t) (@lem4036834 r s t)). Qed.
Lemma lem4036836 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = False) : term32 q r s t.
Proof. exact (EQ_MP (@lem4036544 r s t q h1) (@lem4036835 r s t)). Qed.
Lemma lem4036837 (r : Prop) (s : Prop) (t : Prop) (q : Prop) (h1 : q = True) : term32 q r s t.
Proof. exact (EQ_MP (@lem4036531 r s t q h1) (@lem4036684 r s t)). Qed.
Lemma lem4036839 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : term32 q r s t.
Proof. exact (or_elim (@lem4036498 q) (fun h0 : q = True => @lem4036837 r s t q h0) (fun h0 : q = False => @lem4036836 r s t q h0)). Qed.
Lemma lem4036840 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : term12 q r s t.
Proof. exact (EQ_MP (@lem4036495 q r s t) (@lem4036839 q r s t)). Qed.
Lemma lem4036846 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4036847 (q : Prop) (s : Prop) : (term61 q s) = True.
Proof. exact (@lem4036846 (q = s)). Qed.
Lemma lem4036848 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036849 (q : Prop) (s : Prop) : (term90 q s) = (and True).
Proof. exact (MK_COMB (@lem4036848) (@lem4036847 q s)). Qed.
Lemma lem4036853 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036854 (s : Prop) : (False /\ s) = False.
Proof. exact (@lem4036853 s). Qed.
Lemma lem4036855 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036856 (s : Prop) : (term91 s) = (imp False).
Proof. exact (MK_COMB (@lem4036855) (@lem4036854 s)). Qed.
Lemma lem4036859 (r : Prop) (t : Prop) : (r = t) = (r = t).
Proof. exact (eq_refl (r = t)). Qed.
Lemma lem4036860 (s : Prop) (r : Prop) (t : Prop) : (term92 s r t) = (term61 r t).
Proof. exact (MK_COMB (@lem4036856 s) (@lem4036859 r t)). Qed.
Lemma lem4036862 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem4036863 (r : Prop) (t : Prop) : (term61 r t) = True.
Proof. exact (@lem4036862 (r = t)). Qed.
Lemma lem4036864 (s : Prop) (r : Prop) (t : Prop) : (term92 s r t) = True.
Proof. exact (TRANS (@lem4036860 s r t) (@lem4036863 r t)). Qed.
Lemma lem4036865 (q : Prop) (s : Prop) (r : Prop) (t : Prop) : (term93 q s r t) = (True /\ True).
Proof. exact (MK_COMB (@lem4036849 q s) (@lem4036864 s r t)). Qed.
Lemma lem4036867 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4036868 : (True /\ True) = True.
Proof. exact (@lem4036867 True). Qed.
Lemma lem4036869 (q : Prop) (s : Prop) (r : Prop) (t : Prop) : (term93 q s r t) = True.
Proof. exact (TRANS (@lem4036865 q s r t) (@lem4036868)). Qed.
Lemma lem4036870 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4036871 (q : Prop) (s : Prop) (r : Prop) (t : Prop) : (term94 q s r t) = (imp True).
Proof. exact (MK_COMB (@lem4036870) (@lem4036869 q s r t)). Qed.
Lemma lem4036877 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036878 (q : Prop) : (False /\ q) = False.
Proof. exact (@lem4036877 q). Qed.
Lemma lem4036879 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036880 (q : Prop) : (term95 q) = (and False).
Proof. exact (MK_COMB (@lem4036879) (@lem4036878 q)). Qed.
Lemma lem4036881 (r : Prop) : r = r.
Proof. exact (eq_refl r). Qed.
Lemma lem4036882 (q : Prop) (r : Prop) : (term96 q r) = (False /\ r).
Proof. exact (MK_COMB (@lem4036880 q) (@lem4036881 r)). Qed.
Lemma lem4036884 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036885 (r : Prop) : (False /\ r) = False.
Proof. exact (@lem4036884 r). Qed.
Lemma lem4036886 (q : Prop) (r : Prop) : (term96 q r) = False.
Proof. exact (TRANS (@lem4036882 q r) (@lem4036885 r)). Qed.
Lemma lem4036887 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036888 (q : Prop) (r : Prop) : (term97 q r) = (@eq Prop False).
Proof. exact (MK_COMB (@lem4036887) (@lem4036886 q r)). Qed.
Lemma lem4036892 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036893 (s : Prop) : (False /\ s) = False.
Proof. exact (@lem4036892 s). Qed.
Lemma lem4036894 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4036895 (s : Prop) : (term95 s) = (and False).
Proof. exact (MK_COMB (@lem4036894) (@lem4036893 s)). Qed.
Lemma lem4036896 (t : Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4036897 (s : Prop) (t : Prop) : (term96 s t) = (False /\ t).
Proof. exact (MK_COMB (@lem4036895 s) (@lem4036896 t)). Qed.
Lemma lem4036899 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4036900 (s : Prop) (t : Prop) : (term96 s t) = False.
Proof. exact (TRANS (@lem4036897 s t) (@lem4036899 t)). Qed.
Lemma lem4036901 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term96 q r) = (term96 s t)) = (False = False).
Proof. exact (MK_COMB (@lem4036888 q r) (@lem4036900 s t)). Qed.
Lemma lem4036903 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem4036904 : (False = False) = (~ False).
Proof. exact (@lem4036903 False). Qed.
Lemma lem4036906 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4036907 : (False = False) = True.
Proof. exact (TRANS (@lem4036904) (@lem4036906)). Qed.
Lemma lem4036908 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : ((term96 q r) = (term96 s t)) = True.
Proof. exact (TRANS (@lem4036901 q r s t) (@lem4036907)). Qed.
Lemma lem4036909 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term17 q r s t) = (True -> True).
Proof. exact (MK_COMB (@lem4036871 q s r t) (@lem4036908 q r s t)). Qed.
Lemma lem4036911 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem4036912 : (True -> True) = True.
Proof. exact (@lem4036911 True). Qed.
Lemma lem4036913 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : (term17 q r s t) = True.
Proof. exact (TRANS (@lem4036909 q r s t) (@lem4036912)). Qed.
Lemma lem4036914 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : True = (term17 q r s t).
Proof. exact (SYM (@lem4036913 q r s t)). Qed.
Lemma lem4036915 (q : Prop) (r : Prop) (s : Prop) (t : Prop) : term17 q r s t.
Proof. exact (EQ_MP (@lem4036914 q r s t) (@lem0)). Qed.
Lemma lem4036916 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = False) : term14 q r p s t.
Proof. exact (EQ_MP (@lem4036433 q r s t p h1) (@lem4036915 q r s t)). Qed.
Lemma lem4036917 (q : Prop) (r : Prop) (s : Prop) (t : Prop) (p : Prop) (h1 : p = True) : term14 q r p s t.
Proof. exact (EQ_MP (@lem4036420 q r s t p h1) (@lem4036840 q r s t)). Qed.
Lemma lem4036920 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : term14 q r p s t.
Proof. exact (or_elim (@lem4036379 p) (fun h0 : p = True => @lem4036917 q r s t p h0) (fun h0 : p = False => @lem4036916 q r s t p h0)). Qed.
Lemma lem4036921 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) (h1 : term14 q r p s t) : term14 q r p s t.
Proof. exact (h1). Qed.
Lemma lem4036922 (q : Prop) (p : Prop) (s : Prop) (r : Prop) (t : Prop) (h1 : term98 q p s r t) : term98 q p s r t.
Proof. exact (h1). Qed.
Lemma lem4036923 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) (h1 : term98 q p s r t) (h2 : term14 q r p s t) : (term99 p q r) = (term99 p s t).
Proof. exact (@lem4036921 q r p s t h2 (@lem4036922 q p s r t h1)). Qed.
Lemma lem4036924 (q : Prop) (p : Prop) (s : Prop) (r : Prop) (t : Prop) (h1 : term98 q p s r t) : term100 q r p s t.
Proof. exact (fun h0 : term14 q r p s t => @lem4036923 q r p s t h1 h0). Qed.
Lemma lem4036925 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) (h1 : term14 q r p s t) : term14 q r p s t.
Proof. exact (h1). Qed.
Lemma lem4036926 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) (h1 : term98 q p s r t) (h2 : term14 q r p s t) : (term99 p q r) = (term99 p s t).
Proof. exact (@lem4036924 q p s r t h1 (@lem4036925 q r p s t h2)). Qed.
Lemma lem4036927 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) (h1 : term14 q r p s t) : term14 q r p s t.
Proof. exact (fun h0 : term98 q p s r t => @lem4036926 q r p s t h0 h1). Qed.
Lemma lem4036928 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : term101 q r p s t.
Proof. exact (fun h0 : term14 q r p s t => @lem4036927 q r p s t h0). Qed.
Lemma lem4036930 (t1 : Prop) : term102 t1.
Proof. exact (@lem512 t1). Qed.
Lemma lem4036931 (t1 : Prop) : (term102 t1) = (term103 t1).
Proof. exact (eq_refl (term102 t1)). Qed.
Lemma lem4036932 (t1 : Prop) : term103 t1.
Proof. exact (EQ_MP (@lem4036931 t1) (@lem4036930 t1)). Qed.
Lemma lem4036933 (t1 : Prop) (t2 : Prop) : term104 t1 t2.
Proof. exact (@lem4036932 t1 t2). Qed.
Lemma lem4036934 (t1 : Prop) (t2 : Prop) : (term104 t1 t2) = (term105 t1 t2).
Proof. exact (eq_refl (term104 t1 t2)). Qed.
Lemma lem4036935 (t1 : Prop) (t2 : Prop) : term105 t1 t2.
Proof. exact (EQ_MP (@lem4036934 t1 t2) (@lem4036933 t1 t2)). Qed.
Lemma lem4036936 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term106 t1 t2 t3.
Proof. exact (@lem4036935 t1 t2 t3). Qed.
Lemma lem4036937 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term106 t1 t2 t3) = ((term107 t1 t2 t3) = (term99 t1 t2 t3)).
Proof. exact (eq_refl (term106 t1 t2 t3)). Qed.
Lemma lem4036939 {_93490 _93497 : Type'} (P : type686 _93497) : term108 _93490 _93497 P.
Proof. exact (@lem3655226 _93490 _93497 P). Qed.
Lemma lem4036940 {_93490 _93497 : Type'} (P : type686 _93497) : (term108 _93490 _93497 P) = (term109 _93490 _93497 P).
Proof. exact (eq_refl (term108 _93490 _93497 P)). Qed.
Lemma lem4036941 {_93490 _93497 : Type'} (P : type686 _93497) : term109 _93490 _93497 P.
Proof. exact (EQ_MP (@lem4036940 _93490 _93497 P) (@lem4036939 _93490 _93497 P)). Qed.
Lemma lem4036942 {_93490 _93497 : Type'} (P : type686 _93497) (f : _93490 -> _93497) : term110 _93490 _93497 P f.
Proof. exact (@lem4036941 _93490 _93497 P f). Qed.
Lemma lem4036943 {_93490 _93497 : Type'} (P : type686 _93497) (f : _93490 -> _93497) : (term110 _93490 _93497 P f) = (term111 _93490 _93497 P f).
Proof. exact (eq_refl (term110 _93490 _93497 P f)). Qed.
Lemma lem4036944 {_93490 _93497 : Type'} (P : type686 _93497) (f : _93490 -> _93497) : term111 _93490 _93497 P f.
Proof. exact (EQ_MP (@lem4036943 _93490 _93497 P f) (@lem4036942 _93490 _93497 P f)). Qed.
Lemma lem4036945 {_93490 _93497 : Type'} (P : type686 _93497) (f : _93490 -> _93497) (s : _93490 -> Prop) : term112 _93490 _93497 P f s.
Proof. exact (@lem4036944 _93490 _93497 P f s). Qed.
Lemma lem4036946 {_93490 _93497 : Type'} (s : _93490 -> Prop) (P : type686 _93497) (f : _93490 -> _93497) : (term112 _93490 _93497 P f s) = ((term113 _93490 _93497 f s P) = (term114 _93490 _93497 s P f)).
Proof. exact (eq_refl (term112 _93490 _93497 P f s)). Qed.
Lemma lem4036964 (p : Prop) : term7 p.
Proof. exact (@lem9851 p). Qed.
Lemma lem4036965 (p : Prop) : (term7 p) = (term8 p).
Proof. exact (eq_refl (term7 p)). Qed.
Lemma lem4036966 (p : Prop) : term8 p.
Proof. exact (EQ_MP (@lem4036965 p) (@lem4036964 p)). Qed.
Lemma lem4036967 (p : Prop) (h1 : p = True) : p = True.
Proof. exact (h1). Qed.
Lemma lem4036968 (p : Prop) (h1 : p = False) : p = False.
Proof. exact (h1). Qed.
Lemma lem4036985 (r : Prop) (s : Prop) (q : Prop) : (term115 r s q) = (term115 r s q).
Proof. exact (eq_refl (term115 r s q)). Qed.
Lemma lem4036986 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = True) : (term116 r s q p) = (term117 r s q).
Proof. exact (MK_COMB (@lem4036985 r s q) (@lem4036967 p h1)). Qed.
Lemma lem4036987 (r : Prop) (s : Prop) (q : Prop) : (term117 r s q) = ((term118 q r s) = (term119 r s q)).
Proof. exact (eq_refl (term117 r s q)). Qed.
Lemma lem4036988 (r : Prop) (s : Prop) (q : Prop) (p : Prop) : (term120 r s q p) = (term120 r s q p).
Proof. exact (eq_refl (term120 r s q p)). Qed.
Lemma lem4036989 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = (term117 r s q)) = ((term116 r s q p) = ((term118 q r s) = (term119 r s q))).
Proof. exact (MK_COMB (@lem4036988 r s q p) (@lem4036987 r s q)). Qed.
Lemma lem4036990 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term116 r s q p) = ((term121 p q r s) = (term121 r s p q)).
Proof. exact (eq_refl (term116 r s q p)). Qed.
Lemma lem4036991 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4036992 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term120 r s q p) = (term122 r s p q).
Proof. exact (MK_COMB (@lem4036991) (@lem4036990 r s p q)). Qed.
Lemma lem4036993 (r : Prop) (s : Prop) (q : Prop) : ((term118 q r s) = (term119 r s q)) = ((term118 q r s) = (term119 r s q)).
Proof. exact (eq_refl ((term118 q r s) = (term119 r s q))). Qed.
Lemma lem4036994 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = ((term118 q r s) = (term119 r s q))) = (((term121 p q r s) = (term121 r s p q)) = ((term118 q r s) = (term119 r s q))).
Proof. exact (MK_COMB (@lem4036992 r s p q) (@lem4036993 r s q)). Qed.
Lemma lem4036995 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = (term117 r s q)) = (((term121 p q r s) = (term121 r s p q)) = ((term118 q r s) = (term119 r s q))).
Proof. exact (TRANS (@lem4036989 p r s q) (@lem4036994 p r s q)). Qed.
Lemma lem4036996 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = True) : ((term121 p q r s) = (term121 r s p q)) = ((term118 q r s) = (term119 r s q)).
Proof. exact (EQ_MP (@lem4036995 p r s q) (@lem4036986 r s q p h1)). Qed.
Lemma lem4036997 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = True) : ((term118 q r s) = (term119 r s q)) = ((term121 p q r s) = (term121 r s p q)).
Proof. exact (SYM (@lem4036996 r s q p h1)). Qed.
Lemma lem4036998 (r : Prop) (s : Prop) (q : Prop) : (term115 r s q) = (term115 r s q).
Proof. exact (eq_refl (term115 r s q)). Qed.
Lemma lem4036999 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = False) : (term116 r s q p) = (term123 r s q).
Proof. exact (MK_COMB (@lem4036998 r s q) (@lem4036968 p h1)). Qed.
Lemma lem4037000 (r : Prop) (s : Prop) (q : Prop) : (term123 r s q) = ((term124 q r s) = (term125 r s q)).
Proof. exact (eq_refl (term123 r s q)). Qed.
Lemma lem4037001 (r : Prop) (s : Prop) (q : Prop) (p : Prop) : (term120 r s q p) = (term120 r s q p).
Proof. exact (eq_refl (term120 r s q p)). Qed.
Lemma lem4037002 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = (term123 r s q)) = ((term116 r s q p) = ((term124 q r s) = (term125 r s q))).
Proof. exact (MK_COMB (@lem4037001 r s q p) (@lem4037000 r s q)). Qed.
Lemma lem4037003 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term116 r s q p) = ((term121 p q r s) = (term121 r s p q)).
Proof. exact (eq_refl (term116 r s q p)). Qed.
Lemma lem4037004 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037005 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term120 r s q p) = (term122 r s p q).
Proof. exact (MK_COMB (@lem4037004) (@lem4037003 r s p q)). Qed.
Lemma lem4037006 (r : Prop) (s : Prop) (q : Prop) : ((term124 q r s) = (term125 r s q)) = ((term124 q r s) = (term125 r s q)).
Proof. exact (eq_refl ((term124 q r s) = (term125 r s q))). Qed.
Lemma lem4037007 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = ((term124 q r s) = (term125 r s q))) = (((term121 p q r s) = (term121 r s p q)) = ((term124 q r s) = (term125 r s q))).
Proof. exact (MK_COMB (@lem4037005 r s p q) (@lem4037006 r s q)). Qed.
Lemma lem4037008 (p : Prop) (r : Prop) (s : Prop) (q : Prop) : ((term116 r s q p) = (term123 r s q)) = (((term121 p q r s) = (term121 r s p q)) = ((term124 q r s) = (term125 r s q))).
Proof. exact (TRANS (@lem4037002 p r s q) (@lem4037007 p r s q)). Qed.
Lemma lem4037009 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = False) : ((term121 p q r s) = (term121 r s p q)) = ((term124 q r s) = (term125 r s q)).
Proof. exact (EQ_MP (@lem4037008 p r s q) (@lem4036999 r s q p h1)). Qed.
Lemma lem4037010 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = False) : ((term124 q r s) = (term125 r s q)) = ((term121 p q r s) = (term121 r s p q)).
Proof. exact (SYM (@lem4037009 r s q p h1)). Qed.
Lemma lem4037014 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4037015 (q : Prop) (r : Prop) (s : Prop) : (term118 q r s) = (term107 q r s).
Proof. exact (@lem4037014 (term107 q r s)). Qed.
Lemma lem4037020 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037021 (q : Prop) (r : Prop) (s : Prop) : (term126 q r s) = (term127 q r s).
Proof. exact (MK_COMB (@lem4037020) (@lem4037015 q r s)). Qed.
Lemma lem4037027 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4037028 (q : Prop) : (True /\ q) = q.
Proof. exact (@lem4037027 q). Qed.
Lemma lem4037029 (s : Prop) : (and s) = (and s).
Proof. exact (eq_refl (and s)). Qed.
Lemma lem4037030 (s : Prop) (q : Prop) : (term128 s q) = (s /\ q).
Proof. exact (MK_COMB (@lem4037029 s) (@lem4037028 q)). Qed.
Lemma lem4037033 (r : Prop) : (and r) = (and r).
Proof. exact (eq_refl (and r)). Qed.
Lemma lem4037034 (r : Prop) (s : Prop) (q : Prop) : (term119 r s q) = (term107 r s q).
Proof. exact (MK_COMB (@lem4037033 r) (@lem4037030 s q)). Qed.
Lemma lem4037037 (r : Prop) (s : Prop) (q : Prop) : ((term118 q r s) = (term119 r s q)) = ((term107 q r s) = (term107 r s q)).
Proof. exact (MK_COMB (@lem4037021 q r s) (@lem4037034 r s q)). Qed.
Lemma lem4037040 (r : Prop) (s : Prop) (q : Prop) : ((term107 q r s) = (term107 r s q)) = ((term118 q r s) = (term119 r s q)).
Proof. exact (SYM (@lem4037037 r s q)). Qed.
Lemma lem4037041 (q : Prop) : term7 q.
Proof. exact (@lem9851 q). Qed.
Lemma lem4037042 (q : Prop) : (term7 q) = (term8 q).
Proof. exact (eq_refl (term7 q)). Qed.
Lemma lem4037043 (q : Prop) : term8 q.
Proof. exact (EQ_MP (@lem4037042 q) (@lem4037041 q)). Qed.
Lemma lem4037044 (q : Prop) (h1 : q = True) : q = True.
Proof. exact (h1). Qed.
Lemma lem4037045 (q : Prop) (h1 : q = False) : q = False.
Proof. exact (h1). Qed.
Lemma lem4037058 (r : Prop) (s : Prop) : (term129 r s) = (term129 r s).
Proof. exact (eq_refl (term129 r s)). Qed.
Lemma lem4037059 (r : Prop) (s : Prop) (q : Prop) (h1 : q = True) : (term130 r s q) = (term131 r s).
Proof. exact (MK_COMB (@lem4037058 r s) (@lem4037044 q h1)). Qed.
Lemma lem4037060 (r : Prop) (s : Prop) : (term131 r s) = ((term132 r s) = (term133 r s)).
Proof. exact (eq_refl (term131 r s)). Qed.
Lemma lem4037061 (r : Prop) (s : Prop) (q : Prop) : (term134 r s q) = (term134 r s q).
Proof. exact (eq_refl (term134 r s q)). Qed.
Lemma lem4037062 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = (term131 r s)) = ((term130 r s q) = ((term132 r s) = (term133 r s))).
Proof. exact (MK_COMB (@lem4037061 r s q) (@lem4037060 r s)). Qed.
Lemma lem4037063 (r : Prop) (s : Prop) (q : Prop) : (term130 r s q) = ((term107 q r s) = (term107 r s q)).
Proof. exact (eq_refl (term130 r s q)). Qed.
Lemma lem4037064 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037065 (r : Prop) (s : Prop) (q : Prop) : (term134 r s q) = (term135 r s q).
Proof. exact (MK_COMB (@lem4037064) (@lem4037063 r s q)). Qed.
Lemma lem4037066 (r : Prop) (s : Prop) : ((term132 r s) = (term133 r s)) = ((term132 r s) = (term133 r s)).
Proof. exact (eq_refl ((term132 r s) = (term133 r s))). Qed.
Lemma lem4037067 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = ((term132 r s) = (term133 r s))) = (((term107 q r s) = (term107 r s q)) = ((term132 r s) = (term133 r s))).
Proof. exact (MK_COMB (@lem4037065 r s q) (@lem4037066 r s)). Qed.
Lemma lem4037068 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = (term131 r s)) = (((term107 q r s) = (term107 r s q)) = ((term132 r s) = (term133 r s))).
Proof. exact (TRANS (@lem4037062 q r s) (@lem4037067 q r s)). Qed.
Lemma lem4037069 (r : Prop) (s : Prop) (q : Prop) (h1 : q = True) : ((term107 q r s) = (term107 r s q)) = ((term132 r s) = (term133 r s)).
Proof. exact (EQ_MP (@lem4037068 q r s) (@lem4037059 r s q h1)). Qed.
Lemma lem4037070 (r : Prop) (s : Prop) (q : Prop) (h1 : q = True) : ((term132 r s) = (term133 r s)) = ((term107 q r s) = (term107 r s q)).
Proof. exact (SYM (@lem4037069 r s q h1)). Qed.
Lemma lem4037071 (r : Prop) (s : Prop) : (term129 r s) = (term129 r s).
Proof. exact (eq_refl (term129 r s)). Qed.
Lemma lem4037072 (r : Prop) (s : Prop) (q : Prop) (h1 : q = False) : (term130 r s q) = (term136 r s).
Proof. exact (MK_COMB (@lem4037071 r s) (@lem4037045 q h1)). Qed.
Lemma lem4037073 (r : Prop) (s : Prop) : (term136 r s) = ((term137 r s) = (term138 r s)).
Proof. exact (eq_refl (term136 r s)). Qed.
Lemma lem4037074 (r : Prop) (s : Prop) (q : Prop) : (term134 r s q) = (term134 r s q).
Proof. exact (eq_refl (term134 r s q)). Qed.
Lemma lem4037075 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = (term136 r s)) = ((term130 r s q) = ((term137 r s) = (term138 r s))).
Proof. exact (MK_COMB (@lem4037074 r s q) (@lem4037073 r s)). Qed.
Lemma lem4037076 (r : Prop) (s : Prop) (q : Prop) : (term130 r s q) = ((term107 q r s) = (term107 r s q)).
Proof. exact (eq_refl (term130 r s q)). Qed.
Lemma lem4037077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037078 (r : Prop) (s : Prop) (q : Prop) : (term134 r s q) = (term135 r s q).
Proof. exact (MK_COMB (@lem4037077) (@lem4037076 r s q)). Qed.
Lemma lem4037079 (r : Prop) (s : Prop) : ((term137 r s) = (term138 r s)) = ((term137 r s) = (term138 r s)).
Proof. exact (eq_refl ((term137 r s) = (term138 r s))). Qed.
Lemma lem4037080 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = ((term137 r s) = (term138 r s))) = (((term107 q r s) = (term107 r s q)) = ((term137 r s) = (term138 r s))).
Proof. exact (MK_COMB (@lem4037078 r s q) (@lem4037079 r s)). Qed.
Lemma lem4037081 (q : Prop) (r : Prop) (s : Prop) : ((term130 r s q) = (term136 r s)) = (((term107 q r s) = (term107 r s q)) = ((term137 r s) = (term138 r s))).
Proof. exact (TRANS (@lem4037075 q r s) (@lem4037080 q r s)). Qed.
Lemma lem4037082 (r : Prop) (s : Prop) (q : Prop) (h1 : q = False) : ((term107 q r s) = (term107 r s q)) = ((term137 r s) = (term138 r s)).
Proof. exact (EQ_MP (@lem4037081 q r s) (@lem4037072 r s q h1)). Qed.
Lemma lem4037083 (r : Prop) (s : Prop) (q : Prop) (h1 : q = False) : ((term137 r s) = (term138 r s)) = ((term107 q r s) = (term107 r s q)).
Proof. exact (SYM (@lem4037082 r s q h1)). Qed.
Lemma lem4037087 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4037088 (r : Prop) (s : Prop) : (term132 r s) = (r /\ s).
Proof. exact (@lem4037087 (r /\ s)). Qed.
Lemma lem4037091 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037092 (r : Prop) (s : Prop) : (term139 r s) = (term31 r s).
Proof. exact (MK_COMB (@lem4037091) (@lem4037088 r s)). Qed.
Lemma lem4037096 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4037097 (s : Prop) : (s /\ True) = s.
Proof. exact (@lem4037096 s). Qed.
Lemma lem4037098 (r : Prop) : (and r) = (and r).
Proof. exact (eq_refl (and r)). Qed.
Lemma lem4037099 (r : Prop) (s : Prop) : (term133 r s) = (r /\ s).
Proof. exact (MK_COMB (@lem4037098 r) (@lem4037097 s)). Qed.
Lemma lem4037102 (r : Prop) (s : Prop) : ((term132 r s) = (term133 r s)) = ((r /\ s) = (r /\ s)).
Proof. exact (MK_COMB (@lem4037092 r s) (@lem4037099 r s)). Qed.
Lemma lem4037104 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem4037105 (x : Prop) : (x = x) = True.
Proof. exact (@lem4037104 Prop x). Qed.
Lemma lem4037106 (r : Prop) (s : Prop) : ((r /\ s) = (r /\ s)) = True.
Proof. exact (@lem4037105 (r /\ s)). Qed.
Lemma lem4037107 (r : Prop) (s : Prop) : ((term132 r s) = (term133 r s)) = True.
Proof. exact (TRANS (@lem4037102 r s) (@lem4037106 r s)). Qed.
Lemma lem4037108 (r : Prop) (s : Prop) : True = ((term132 r s) = (term133 r s)).
Proof. exact (SYM (@lem4037107 r s)). Qed.
Lemma lem4037109 (r : Prop) (s : Prop) : (term132 r s) = (term133 r s).
Proof. exact (EQ_MP (@lem4037108 r s) (@lem0)). Qed.
Lemma lem4037113 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4037114 (r : Prop) (s : Prop) : (term137 r s) = False.
Proof. exact (@lem4037113 (r /\ s)). Qed.
Lemma lem4037115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037116 (r : Prop) (s : Prop) : (term140 r s) = (@eq Prop False).
Proof. exact (MK_COMB (@lem4037115) (@lem4037114 r s)). Qed.
Lemma lem4037120 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem4037121 (s : Prop) : (s /\ False) = False.
Proof. exact (@lem4037120 s). Qed.
Lemma lem4037122 (r : Prop) : (and r) = (and r).
Proof. exact (eq_refl (and r)). Qed.
Lemma lem4037123 (s : Prop) (r : Prop) : (term138 r s) = (r /\ False).
Proof. exact (MK_COMB (@lem4037122 r) (@lem4037121 s)). Qed.
Lemma lem4037125 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem4037126 (r : Prop) : (r /\ False) = False.
Proof. exact (@lem4037125 r). Qed.
Lemma lem4037127 (r : Prop) (s : Prop) : (term138 r s) = False.
Proof. exact (TRANS (@lem4037123 s r) (@lem4037126 r)). Qed.
Lemma lem4037128 (r : Prop) (s : Prop) : ((term137 r s) = (term138 r s)) = (False = False).
Proof. exact (MK_COMB (@lem4037116 r s) (@lem4037127 r s)). Qed.
Lemma lem4037130 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem4037131 : (False = False) = (~ False).
Proof. exact (@lem4037130 False). Qed.
Lemma lem4037133 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4037134 : (False = False) = True.
Proof. exact (TRANS (@lem4037131) (@lem4037133)). Qed.
Lemma lem4037135 (r : Prop) (s : Prop) : ((term137 r s) = (term138 r s)) = True.
Proof. exact (TRANS (@lem4037128 r s) (@lem4037134)). Qed.
Lemma lem4037136 (r : Prop) (s : Prop) : True = ((term137 r s) = (term138 r s)).
Proof. exact (SYM (@lem4037135 r s)). Qed.
Lemma lem4037137 (r : Prop) (s : Prop) : (term137 r s) = (term138 r s).
Proof. exact (EQ_MP (@lem4037136 r s) (@lem0)). Qed.
Lemma lem4037138 (r : Prop) (s : Prop) (q : Prop) (h1 : q = False) : (term107 q r s) = (term107 r s q).
Proof. exact (EQ_MP (@lem4037083 r s q h1) (@lem4037137 r s)). Qed.
Lemma lem4037139 (r : Prop) (s : Prop) (q : Prop) (h1 : q = True) : (term107 q r s) = (term107 r s q).
Proof. exact (EQ_MP (@lem4037070 r s q h1) (@lem4037109 r s)). Qed.
Lemma lem4037141 (r : Prop) (s : Prop) (q : Prop) : (term107 q r s) = (term107 r s q).
Proof. exact (or_elim (@lem4037043 q) (fun h0 : q = True => @lem4037139 r s q h0) (fun h0 : q = False => @lem4037138 r s q h0)). Qed.
Lemma lem4037142 (r : Prop) (s : Prop) (q : Prop) : (term118 q r s) = (term119 r s q).
Proof. exact (EQ_MP (@lem4037040 r s q) (@lem4037141 r s q)). Qed.
Lemma lem4037146 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4037147 (q : Prop) (r : Prop) (s : Prop) : (term124 q r s) = False.
Proof. exact (@lem4037146 (term107 q r s)). Qed.
Lemma lem4037148 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037149 (q : Prop) (r : Prop) (s : Prop) : (term141 q r s) = (@eq Prop False).
Proof. exact (MK_COMB (@lem4037148) (@lem4037147 q r s)). Qed.
Lemma lem4037155 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem4037156 (q : Prop) : (False /\ q) = False.
Proof. exact (@lem4037155 q). Qed.
Lemma lem4037157 (s : Prop) : (and s) = (and s).
Proof. exact (eq_refl (and s)). Qed.
Lemma lem4037158 (q : Prop) (s : Prop) : (term142 s q) = (s /\ False).
Proof. exact (MK_COMB (@lem4037157 s) (@lem4037156 q)). Qed.
Lemma lem4037160 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem4037161 (s : Prop) : (s /\ False) = False.
Proof. exact (@lem4037160 s). Qed.
Lemma lem4037162 (s : Prop) (q : Prop) : (term142 s q) = False.
Proof. exact (TRANS (@lem4037158 q s) (@lem4037161 s)). Qed.
Lemma lem4037163 (r : Prop) : (and r) = (and r).
Proof. exact (eq_refl (and r)). Qed.
Lemma lem4037164 (s : Prop) (q : Prop) (r : Prop) : (term125 r s q) = (r /\ False).
Proof. exact (MK_COMB (@lem4037163 r) (@lem4037162 s q)). Qed.
Lemma lem4037166 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem4037167 (r : Prop) : (r /\ False) = False.
Proof. exact (@lem4037166 r). Qed.
Lemma lem4037168 (r : Prop) (s : Prop) (q : Prop) : (term125 r s q) = False.
Proof. exact (TRANS (@lem4037164 s q r) (@lem4037167 r)). Qed.
Lemma lem4037169 (r : Prop) (s : Prop) (q : Prop) : ((term124 q r s) = (term125 r s q)) = (False = False).
Proof. exact (MK_COMB (@lem4037149 q r s) (@lem4037168 r s q)). Qed.
Lemma lem4037171 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem4037172 : (False = False) = (~ False).
Proof. exact (@lem4037171 False). Qed.
Lemma lem4037174 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem4037175 : (False = False) = True.
Proof. exact (TRANS (@lem4037172) (@lem4037174)). Qed.
Lemma lem4037176 (r : Prop) (s : Prop) (q : Prop) : ((term124 q r s) = (term125 r s q)) = True.
Proof. exact (TRANS (@lem4037169 r s q) (@lem4037175)). Qed.
Lemma lem4037177 (r : Prop) (s : Prop) (q : Prop) : True = ((term124 q r s) = (term125 r s q)).
Proof. exact (SYM (@lem4037176 r s q)). Qed.
Lemma lem4037178 (r : Prop) (s : Prop) (q : Prop) : (term124 q r s) = (term125 r s q).
Proof. exact (EQ_MP (@lem4037177 r s q) (@lem0)). Qed.
Lemma lem4037179 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = False) : (term121 p q r s) = (term121 r s p q).
Proof. exact (EQ_MP (@lem4037010 r s q p h1) (@lem4037178 r s q)). Qed.
Lemma lem4037180 (r : Prop) (s : Prop) (q : Prop) (p : Prop) (h1 : p = True) : (term121 p q r s) = (term121 r s p q).
Proof. exact (EQ_MP (@lem4036997 r s q p h1) (@lem4037142 r s q)). Qed.
Lemma lem4037207 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term121 p q r s) = (term121 r s p q).
Proof. exact (or_elim (@lem4036966 p) (fun h0 : p = True => @lem4037180 r s q p h0) (fun h0 : p = False => @lem4037179 r s q p h0)). Qed.
Lemma lem4037208 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (t : _102133 -> Prop) (n : nat) : (term143 _102126 _102133 n f s P t) = (term144 _102126 _102133 f s P t n).
Proof. exact (@lem4037207 (term145 _102126 _102133 t f s) (P t) (@FINITE _102133 t) (term146 _102133 t n)). Qed.
Lemma lem4037209 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term147 _102126 _102133 n f s P) = (term148 _102126 _102133 f s P n).
Proof. exact (fun_ext (fun t : _102133 -> Prop => @lem4037208 _102126 _102133 f s P t n)). Qed.
Lemma lem4037210 {_102133 : Type'} : (@ex (_102133 -> Prop)) = (@ex (_102133 -> Prop)).
Proof. exact (eq_refl (@ex (_102133 -> Prop))). Qed.
Lemma lem4037211 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term149 _102126 _102133 n f s P) = (term150 _102126 _102133 f s P n).
Proof. exact (MK_COMB (@lem4037210 _102133) (@lem4037209 _102126 _102133 f s P n)). Qed.
Lemma lem4037212 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037213 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term151 _102126 _102133 n f s P) = (term152 _102126 _102133 f s P n).
Proof. exact (MK_COMB (@lem4037212) (@lem4037211 _102126 _102133 f s P n)). Qed.
Lemma lem4037219 (r : Prop) (s : Prop) (p : Prop) (q : Prop) : (term121 p q r s) = (term121 r s p q).
Proof. exact (or_elim (@lem4036966 p) (fun h0 : p = True => @lem4037180 r s q p h0) (fun h0 : p = False => @lem4037179 r s q p h0)). Qed.
Lemma lem4037220 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term153 _102126 _102133 n s P f t) = (term154 _102126 _102133 s P f t n).
Proof. exact (@lem4037219 (@SUBSET _102126 t s) (term155 _102126 _102133 P f t) (@FINITE _102126 t) (term146 _102126 t n)). Qed.
Lemma lem4037221 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term156 _102126 _102133 n s P f) = (term157 _102126 _102133 s P f n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4037220 _102126 _102133 s P f t n)). Qed.
Lemma lem4037222 {_102126 : Type'} : (@ex (_102126 -> Prop)) = (@ex (_102126 -> Prop)).
Proof. exact (eq_refl (@ex (_102126 -> Prop))). Qed.
Lemma lem4037223 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term158 _102126 _102133 n s P f) = (term159 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037222 _102126) (@lem4037221 _102126 _102133 s P f n)). Qed.
Lemma lem4037224 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term149 _102126 _102133 n f s P) = (term158 _102126 _102133 n s P f)) = ((term150 _102126 _102133 f s P n) = (term159 _102126 _102133 s P f n)).
Proof. exact (MK_COMB (@lem4037213 _102126 _102133 f s P n) (@lem4037223 _102126 _102133 s P f n)). Qed.
Lemma lem4037225 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) : (term160 _102126 _102133 s P f) = (term161 _102126 _102133 s P f).
Proof. exact (fun_ext (fun n : nat => @lem4037224 _102126 _102133 s P f n)). Qed.
Lemma lem4037226 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4037227 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) : (term162 _102126 _102133 s P f) = (term163 _102126 _102133 s P f).
Proof. exact (MK_COMB (@lem4037226) (@lem4037225 _102126 _102133 s P f)). Qed.
Lemma lem4037228 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) : (term164 _102126 _102133 P f) = (term165 _102126 _102133 P f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4037227 _102126 _102133 s P f)). Qed.
Lemma lem4037229 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4037230 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) : (term166 _102126 _102133 P f) = (term167 _102126 _102133 P f).
Proof. exact (MK_COMB (@lem4037229 _102126) (@lem4037228 _102126 _102133 P f)). Qed.
Lemma lem4037231 {_102126 _102133 : Type'} (P : type686 _102133) : (term168 _102126 _102133 P) = (term169 _102126 _102133 P).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4037230 _102126 _102133 P f)). Qed.
Lemma lem4037232 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4037233 {_102126 _102133 : Type'} (P : type686 _102133) : (term170 _102126 _102133 P) = (term171 _102126 _102133 P).
Proof. exact (MK_COMB (@lem4037232 _102126 _102133) (@lem4037231 _102126 _102133 P)). Qed.
Lemma lem4037234 {_102126 _102133 : Type'} : (term172 _102126 _102133) = (term173 _102126 _102133).
Proof. exact (fun_ext (fun P : type686 _102133 => @lem4037233 _102126 _102133 P)). Qed.
Lemma lem4037235 {_102133 : Type'} : (@all ((_102133 -> Prop) -> Prop)) = (@all ((_102133 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_102133 -> Prop) -> Prop))). Qed.
Lemma lem4037236 {_102126 _102133 : Type'} : (term174 _102126 _102133) = (term175 _102126 _102133).
Proof. exact (MK_COMB (@lem4037235 _102133) (@lem4037234 _102126 _102133)). Qed.
Lemma lem4037237 {_102126 _102133 : Type'} : (term175 _102126 _102133) = (term174 _102126 _102133).
Proof. exact (SYM (@lem4037236 _102126 _102133)). Qed.
Lemma lem4037241 {_93490 _93497 : Type'} (s : _93490 -> Prop) (P : type686 _93497) (f : _93490 -> _93497) : (term113 _93490 _93497 f s P) = (term114 _93490 _93497 s P f).
Proof. exact (EQ_MP (@lem4036946 _93490 _93497 s P f) (@lem4036945 _93490 _93497 P f s)). Qed.
Lemma lem4037242 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) : (term113 _102126 _102133 f s P) = (term114 _102126 _102133 s P f).
Proof. exact (@lem4037241 _102126 _102133 s P f). Qed.
Lemma lem4037243 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (n : nat) (f : _102126 -> _102133) : (term176 _102126 _102133 f s P n) = (term177 _102126 _102133 s P n f).
Proof. exact (@lem4037242 _102126 _102133 s (term178 _102133 P n) f). Qed.
Lemma lem4037244 {_102133 : Type'} (P : type686 _102133) (t : _102133 -> Prop) (n : nat) : (term179 _102133 P n t) = (term180 _102133 P t n).
Proof. exact (eq_refl (term179 _102133 P n t)). Qed.
Lemma lem4037245 {_102126 _102133 : Type'} (t : _102133 -> Prop) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term181 _102126 _102133 t f s) = (term181 _102126 _102133 t f s).
Proof. exact (eq_refl (term181 _102126 _102133 t f s)). Qed.
Lemma lem4037246 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (t : _102133 -> Prop) (n : nat) : (term182 _102126 _102133 f s P n t) = (term144 _102126 _102133 f s P t n).
Proof. exact (MK_COMB (@lem4037245 _102126 _102133 t f s) (@lem4037244 _102133 P t n)). Qed.
Lemma lem4037247 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term183 _102126 _102133 f s P n) = (term148 _102126 _102133 f s P n).
Proof. exact (fun_ext (fun t : _102133 -> Prop => @lem4037246 _102126 _102133 f s P t n)). Qed.
Lemma lem4037248 {_102133 : Type'} : (@ex (_102133 -> Prop)) = (@ex (_102133 -> Prop)).
Proof. exact (eq_refl (@ex (_102133 -> Prop))). Qed.
Lemma lem4037249 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term176 _102126 _102133 f s P n) = (term150 _102126 _102133 f s P n).
Proof. exact (MK_COMB (@lem4037248 _102133) (@lem4037247 _102126 _102133 f s P n)). Qed.
Lemma lem4037250 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037251 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (P : type686 _102133) (n : nat) : (term184 _102126 _102133 f s P n) = (term152 _102126 _102133 f s P n).
Proof. exact (MK_COMB (@lem4037250) (@lem4037249 _102126 _102133 f s P n)). Qed.
Lemma lem4037252 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term185 _102126 _102133 P n f t) = (term186 _102126 _102133 P f t n).
Proof. exact (eq_refl (term185 _102126 _102133 P n f t)). Qed.
Lemma lem4037253 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term187 _102126 _102133 t f) = (term187 _102126 _102133 t f).
Proof. exact (eq_refl (term187 _102126 _102133 t f)). Qed.
Lemma lem4037254 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term188 _102126 _102133 P n f t) = (term189 _102126 _102133 P f t n).
Proof. exact (MK_COMB (@lem4037253 _102126 _102133 t f) (@lem4037252 _102126 _102133 P f t n)). Qed.
Lemma lem4037255 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term190 _102126 t s).
Proof. exact (eq_refl (term190 _102126 t s)). Qed.
Lemma lem4037256 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term191 _102126 _102133 s P n f t) = (term192 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4037255 _102126 t s) (@lem4037254 _102126 _102133 P f t n)). Qed.
Lemma lem4037257 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term193 _102126 _102133 s P n f) = (term194 _102126 _102133 s P f n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4037256 _102126 _102133 s P f t n)). Qed.
Lemma lem4037258 {_102126 : Type'} : (@ex (_102126 -> Prop)) = (@ex (_102126 -> Prop)).
Proof. exact (eq_refl (@ex (_102126 -> Prop))). Qed.
Lemma lem4037259 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term177 _102126 _102133 s P n f) = (term195 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037258 _102126) (@lem4037257 _102126 _102133 s P f n)). Qed.
Lemma lem4037260 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term176 _102126 _102133 f s P n) = (term177 _102126 _102133 s P n f)) = ((term150 _102126 _102133 f s P n) = (term195 _102126 _102133 s P f n)).
Proof. exact (MK_COMB (@lem4037251 _102126 _102133 f s P n) (@lem4037259 _102126 _102133 s P f n)). Qed.
Lemma lem4037261 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term150 _102126 _102133 f s P n) = (term195 _102126 _102133 s P f n).
Proof. exact (EQ_MP (@lem4037260 _102126 _102133 s P f n) (@lem4037243 _102126 _102133 s P n f)). Qed.
Lemma lem4037292 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037293 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term152 _102126 _102133 f s P n) = (term196 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037292) (@lem4037261 _102126 _102133 s P f n)). Qed.
Lemma lem4037324 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term159 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n).
Proof. exact (eq_refl (term159 _102126 _102133 s P f n)). Qed.
Lemma lem4037325 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term150 _102126 _102133 f s P n) = (term159 _102126 _102133 s P f n)) = ((term195 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n)).
Proof. exact (MK_COMB (@lem4037293 _102126 _102133 s P f n) (@lem4037324 _102126 _102133 s P f n)). Qed.
Lemma lem4037328 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term195 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n)) = ((term150 _102126 _102133 f s P n) = (term159 _102126 _102133 s P f n)).
Proof. exact (SYM (@lem4037325 _102126 _102133 s P f n)). Qed.
Lemma lem4037336 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037337 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term192 _102126 _102133 s P f t n) = (term197 _102126 _102133 s P f t n).
Proof. exact (@lem4037336 (@SUBSET _102126 t s) (term198 _102126 _102133 t f) (term186 _102126 _102133 P f t n)). Qed.
Lemma lem4037339 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037340 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term197 _102126 _102133 s P f t n) = (term199 _102126 _102133 s P f t n).
Proof. exact (@lem4037339 (term200 _102126 _102133 s t f) (term201 _102126 _102133 P f t) (term202 _102126 _102133 f t n)). Qed.
Lemma lem4037342 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037343 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term199 _102126 _102133 s P f t n) = (term203 _102126 _102133 s P f t n).
Proof. exact (@lem4037342 (term204 _102126 _102133 s P f t) (term205 _102126 _102133 f t) (term206 _102126 _102133 f t n)). Qed.
Lemma lem4037346 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term197 _102126 _102133 s P f t n) = (term203 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4037340 _102126 _102133 s P f t n) (@lem4037343 _102126 _102133 s P f t n)). Qed.
Lemma lem4037347 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term192 _102126 _102133 s P f t n) = (term203 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4037337 _102126 _102133 s P f t n) (@lem4037346 _102126 _102133 s P f t n)). Qed.
Lemma lem4037372 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term194 _102126 _102133 s P f n) = (term207 _102126 _102133 s P f n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4037347 _102126 _102133 s P f t n)). Qed.
Lemma lem4037373 {_102126 : Type'} : (@ex (_102126 -> Prop)) = (@ex (_102126 -> Prop)).
Proof. exact (eq_refl (@ex (_102126 -> Prop))). Qed.
Lemma lem4037374 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term195 _102126 _102133 s P f n) = (term208 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037373 _102126) (@lem4037372 _102126 _102133 s P f n)). Qed.
Lemma lem4037379 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4037380 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term196 _102126 _102133 s P f n) = (term209 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037379) (@lem4037374 _102126 _102133 s P f n)). Qed.
Lemma lem4037386 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037387 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term154 _102126 _102133 s P f t n) = (term210 _102126 _102133 s P f t n).
Proof. exact (@lem4037386 (@SUBSET _102126 t s) (term155 _102126 _102133 P f t) (term211 _102126 t n)). Qed.
Lemma lem4037389 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037390 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term210 _102126 _102133 s P f t n) = (term212 _102126 _102133 s P f t n).
Proof. exact (@lem4037389 (term213 _102126 _102133 s P f t) (@FINITE _102126 t) (term146 _102126 t n)). Qed.
Lemma lem4037393 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term154 _102126 _102133 s P f t n) = (term212 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4037387 _102126 _102133 s P f t n) (@lem4037390 _102126 _102133 s P f t n)). Qed.
Lemma lem4037397 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term107 t1 t2 t3) = (term99 t1 t2 t3).
Proof. exact (EQ_MP (@lem4036937 t1 t2 t3) (@lem4036936 t1 t2 t3)). Qed.
Lemma lem4037398 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term213 _102126 _102133 s P f t) = (term204 _102126 _102133 s P f t).
Proof. exact (@lem4037397 (@SUBSET _102126 t s) (term198 _102126 _102133 t f) (term201 _102126 _102133 P f t)). Qed.
Lemma lem4037421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4037422 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term214 _102126 _102133 s P f t) = (term215 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4037421) (@lem4037398 _102126 _102133 s P f t)). Qed.
Lemma lem4037423 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@FINITE _102126 t).
Proof. exact (eq_refl (@FINITE _102126 t)). Qed.
Lemma lem4037424 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term216 _102126 _102133 s P f t) = (term217 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4037422 _102126 _102133 s P f t) (@lem4037423 _102126 t)). Qed.
Lemma lem4037427 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4037428 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term218 _102126 _102133 s P f t) = (term219 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4037427) (@lem4037424 _102126 _102133 s P f t)). Qed.
Lemma lem4037429 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term146 _102126 t n) = (term146 _102126 t n).
Proof. exact (eq_refl (term146 _102126 t n)). Qed.
Lemma lem4037430 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term212 _102126 _102133 s P f t n) = (term220 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4037428 _102126 _102133 s P f t) (@lem4037429 _102126 t n)). Qed.
Lemma lem4037433 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term154 _102126 _102133 s P f t n) = (term220 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4037393 _102126 _102133 s P f t n) (@lem4037430 _102126 _102133 s P f t n)). Qed.
Lemma lem4037434 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term157 _102126 _102133 s P f n) = (term221 _102126 _102133 s P f n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4037433 _102126 _102133 s P f t n)). Qed.
Lemma lem4037435 {_102126 : Type'} : (@ex (_102126 -> Prop)) = (@ex (_102126 -> Prop)).
Proof. exact (eq_refl (@ex (_102126 -> Prop))). Qed.
Lemma lem4037436 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term159 _102126 _102133 s P f n) = (term222 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037435 _102126) (@lem4037434 _102126 _102133 s P f n)). Qed.
Lemma lem4037441 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term195 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n)) = ((term208 _102126 _102133 s P f n) = (term222 _102126 _102133 s P f n)).
Proof. exact (MK_COMB (@lem4037380 _102126 _102133 s P f n) (@lem4037436 _102126 _102133 s P f n)). Qed.
Lemma lem4037444 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : ((term208 _102126 _102133 s P f n) = (term222 _102126 _102133 s P f n)) = ((term195 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n)).
Proof. exact (SYM (@lem4037441 _102126 _102133 s P f n)). Qed.
Lemma lem4037445 {_102126 : Type'} : (@ex (_102126 -> Prop)) = (@ex (_102126 -> Prop)).
Proof. exact (eq_refl (@ex (_102126 -> Prop))). Qed.
Lemma lem4037447 (q : Prop) (r : Prop) (p : Prop) (s : Prop) (t : Prop) : term14 q r p s t.
Proof. exact (@lem4036928 q r p s t (@lem4036920 q r p s t)). Qed.
Lemma lem4037448 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term223 _102126 _102133 s P f t n.
Proof. exact (@lem4037447 (term205 _102126 _102133 f t) (term206 _102126 _102133 f t n) (term204 _102126 _102133 s P f t) (@FINITE _102126 t) (term146 _102126 t n)). Qed.
Lemma lem4037450 (p : Prop) : p = (term224 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4037451 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term225 _102126 _102133 s P f t n) = (term226 _102126 _102133 s P f t n).
Proof. exact (@lem4037450 (term225 _102126 _102133 s P f t n)). Qed.
Lemma lem4037452 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term226 _102126 _102133 s P f t n) = (term225 _102126 _102133 s P f t n).
Proof. exact (SYM (@lem4037451 _102126 _102133 s P f t n)). Qed.
Lemma lem4037453 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term227 _102126 _102133 s P f t n.
Proof. exact (h1). Qed.
Lemma lem4037454 {_102126 B : Type'} : term228 _102126 B.
Proof. exact (@lem3996358 _102126 B). Qed.
Lemma lem4037455 {_102133 A : Type'} : term229 _102133 A.
Proof. exact (@lem3996358 A _102133). Qed.
Lemma lem4037456 {_102126 A : Type'} : term229 _102126 A.
Proof. exact (@lem3996358 A _102126). Qed.
Lemma lem4037457 {_102133 B : Type'} : term228 _102133 B.
Proof. exact (@lem3996358 _102133 B). Qed.
Lemma lem4037463 {_102126 _102133 : Type'} : term228 _102126 _102133.
Proof. exact (@lem3996358 _102126 _102133). Qed.
Lemma lem4037466 {_102126 B : Type'} : term230 _102126 B.
Proof. exact (@lem3618990 _102126 B). Qed.
Lemma lem4037467 {A B : Type'} : term230 A B.
Proof. exact (@lem3618990 A B). Qed.
Lemma lem4037468 {_102133 B : Type'} : term230 _102133 B.
Proof. exact (@lem3618990 _102133 B). Qed.
Lemma lem4037469 {_102133 A : Type'} : term231 _102133 A.
Proof. exact (@lem3618990 A _102133). Qed.
Lemma lem4037470 {_102126 A : Type'} : term231 _102126 A.
Proof. exact (@lem3618990 A _102126). Qed.
Lemma lem4037471 {A : Type'} : term232 A.
Proof. exact (@lem3618990 A A). Qed.
Lemma lem4037472 {A : Type'} : term233 A.
Proof. exact (@lem3618990 A nat). Qed.
Lemma lem4037477 {B : Type'} : term234 B.
Proof. exact (@lem3618990 nat B). Qed.
Lemma lem4037478 {B : Type'} : term232 B.
Proof. exact (@lem3618990 B B). Qed.
Lemma lem4037482 {_102126 _102133 : Type'} : term230 _102126 _102133.
Proof. exact (@lem3618990 _102126 _102133). Qed.
Lemma lem4037492 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term235 _102126 _102133 A B s P f t n) : term235 _102126 _102133 A B s P f t n.
Proof. exact (h1). Qed.
Lemma lem4037493 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term236 _102126 _102133 A B s P f t n.
Proof. exact (fun h0 : term235 _102126 _102133 A B s P f t n => @lem4037492 _102126 _102133 A B s P f t n h0). Qed.
Lemma lem4037494 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term236 _102126 _102133 A B s P f t n) : term236 _102126 _102133 A B s P f t n.
Proof. exact (h1). Qed.
Lemma lem4037495 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term235 _102126 _102133 A B s P f t n) : term235 _102126 _102133 A B s P f t n.
Proof. exact (h1). Qed.
Lemma lem4037496 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term235 _102126 _102133 A B s P f t n) (h2 : term236 _102126 _102133 A B s P f t n) : term235 _102126 _102133 A B s P f t n.
Proof. exact (@lem4037494 _102126 _102133 A B s P f t n h2 (@lem4037495 _102126 _102133 A B s P f t n h1)). Qed.
Lemma lem4037497 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term235 _102126 _102133 A B s P f t n) : term237 _102126 _102133 A B s P f t n.
Proof. exact (fun h0 : term236 _102126 _102133 A B s P f t n => @lem4037496 _102126 _102133 A B s P f t n h1 h0). Qed.
Lemma lem4037498 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term236 _102126 _102133 A B s P f t n) : term236 _102126 _102133 A B s P f t n.
Proof. exact (h1). Qed.
Lemma lem4037499 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term235 _102126 _102133 A B s P f t n) (h2 : term236 _102126 _102133 A B s P f t n) : term235 _102126 _102133 A B s P f t n.
Proof. exact (@lem4037497 _102126 _102133 A B s P f t n h1 (@lem4037498 _102126 _102133 A B s P f t n h2)). Qed.
Lemma lem4037500 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term236 _102126 _102133 A B s P f t n) : term236 _102126 _102133 A B s P f t n.
Proof. exact (fun h0 : term235 _102126 _102133 A B s P f t n => @lem4037499 _102126 _102133 A B s P f t n h0 h1). Qed.
Lemma lem4037501 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term238 _102126 _102133 A B s P f t n.
Proof. exact (fun h0 : term236 _102126 _102133 A B s P f t n => @lem4037500 _102126 _102133 A B s P f t n h0). Qed.
Lemma lem4037504 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term236 _102126 _102133 A B s P f t n.
Proof. exact (@lem4037501 _102126 _102133 A B s P f t n (@lem4037493 _102126 _102133 A B s P f t n)). Qed.
Lemma lem4037505 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term236 _102126 _102133 A B s P f t n.
Proof. exact (@lem4037504 _102126 _102133 A B s P f t n). Qed.
Lemma lem4037941 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4037942 {_102133 A : Type'} : (term239 _102133 A) = (term240 _102133 A).
Proof. exact (@lem4037941 (term229 _102133 A)). Qed.
Lemma lem4037969 {_102126 A : Type'} : (term241 _102126 A) = (term241 _102126 A).
Proof. exact (eq_refl (term241 _102126 A)). Qed.
Lemma lem4037970 {_102126 _102133 A : Type'} : (term242 _102126 _102133 A) = (term243 _102126 _102133 A).
Proof. exact (MK_COMB (@lem4037969 _102126 A) (@lem4037942 _102133 A)). Qed.
Lemma lem4037973 {_102133 B : Type'} : (term244 _102133 B) = (term244 _102133 B).
Proof. exact (eq_refl (term244 _102133 B)). Qed.
Lemma lem4037974 {_102126 _102133 A B : Type'} : (term245 _102126 _102133 A B) = (term246 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037973 _102133 B) (@lem4037970 _102126 _102133 A)). Qed.
Lemma lem4037977 {_102126 B : Type'} : (term244 _102126 B) = (term244 _102126 B).
Proof. exact (eq_refl (term244 _102126 B)). Qed.
Lemma lem4037978 {_102126 _102133 A B : Type'} : (term247 _102126 _102133 A B) = (term248 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037977 _102126 B) (@lem4037974 _102126 _102133 A B)). Qed.
Lemma lem4037981 {_102126 _102133 : Type'} : (term244 _102126 _102133) = (term244 _102126 _102133).
Proof. exact (eq_refl (term244 _102126 _102133)). Qed.
Lemma lem4037982 {_102126 _102133 A B : Type'} : (term249 _102126 _102133 A B) = (term250 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037981 _102126 _102133) (@lem4037978 _102126 _102133 A B)). Qed.
Lemma lem4037985 {B : Type'} : (term251 B) = (term251 B).
Proof. exact (eq_refl (term251 B)). Qed.
Lemma lem4037986 {_102126 _102133 A B : Type'} : (term252 _102126 _102133 A B) = (term253 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037985 B) (@lem4037982 _102126 _102133 A B)). Qed.
Lemma lem4037989 {B : Type'} : (term254 B) = (term254 B).
Proof. exact (eq_refl (term254 B)). Qed.
Lemma lem4037990 {_102126 _102133 A B : Type'} : (term255 _102126 _102133 A B) = (term256 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037989 B) (@lem4037986 _102126 _102133 A B)). Qed.
Lemma lem4037993 {A : Type'} : (term257 A) = (term257 A).
Proof. exact (eq_refl (term257 A)). Qed.
Lemma lem4037994 {_102126 _102133 A B : Type'} : (term258 _102126 _102133 A B) = (term259 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037993 A) (@lem4037990 _102126 _102133 A B)). Qed.
Lemma lem4037997 {A B : Type'} : (term260 A B) = (term260 A B).
Proof. exact (eq_refl (term260 A B)). Qed.
Lemma lem4037998 {_102126 _102133 A B : Type'} : (term261 _102126 _102133 A B) = (term262 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4037997 A B) (@lem4037994 _102126 _102133 A B)). Qed.
Lemma lem4038001 {A : Type'} : (term254 A) = (term254 A).
Proof. exact (eq_refl (term254 A)). Qed.
Lemma lem4038002 {_102126 _102133 A B : Type'} : (term263 _102126 _102133 A B) = (term264 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038001 A) (@lem4037998 _102126 _102133 A B)). Qed.
Lemma lem4038005 {_102133 A : Type'} : (term265 _102133 A) = (term265 _102133 A).
Proof. exact (eq_refl (term265 _102133 A)). Qed.
Lemma lem4038006 {_102126 _102133 A B : Type'} : (term266 _102126 _102133 A B) = (term267 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038005 _102133 A) (@lem4038002 _102126 _102133 A B)). Qed.
Lemma lem4038009 {_102126 A : Type'} : (term265 _102126 A) = (term265 _102126 A).
Proof. exact (eq_refl (term265 _102126 A)). Qed.
Lemma lem4038010 {_102126 _102133 A B : Type'} : (term268 _102126 _102133 A B) = (term269 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038009 _102126 A) (@lem4038006 _102126 _102133 A B)). Qed.
Lemma lem4038013 {_102133 B : Type'} : (term260 _102133 B) = (term260 _102133 B).
Proof. exact (eq_refl (term260 _102133 B)). Qed.
Lemma lem4038014 {_102126 _102133 A B : Type'} : (term270 _102126 _102133 A B) = (term271 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038013 _102133 B) (@lem4038010 _102126 _102133 A B)). Qed.
Lemma lem4038017 {_102126 B : Type'} : (term260 _102126 B) = (term260 _102126 B).
Proof. exact (eq_refl (term260 _102126 B)). Qed.
Lemma lem4038018 {_102126 _102133 A B : Type'} : (term272 _102126 _102133 A B) = (term273 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038017 _102126 B) (@lem4038014 _102126 _102133 A B)). Qed.
Lemma lem4038021 {_102126 _102133 : Type'} : (term260 _102126 _102133) = (term260 _102126 _102133).
Proof. exact (eq_refl (term260 _102126 _102133)). Qed.
Lemma lem4038022 {_102126 _102133 A B : Type'} : (term274 _102126 _102133 A B) = (term275 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038021 _102126 _102133) (@lem4038018 _102126 _102133 A B)). Qed.
Lemma lem4038025 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term276 _102126 _102133 s P f t n) = (term276 _102126 _102133 s P f t n).
Proof. exact (eq_refl (term276 _102126 _102133 s P f t n)). Qed.
Lemma lem4038026 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term235 _102126 _102133 A B s P f t n) = (term277 _102126 _102133 A B s P f t n).
Proof. exact (MK_COMB (@lem4038025 _102126 _102133 s P f t n) (@lem4038022 _102126 _102133 A B)). Qed.
Lemma lem4038029 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term278 _102126 _102133 A B P f t n) = (term279 _102126 _102133 A B P f t n).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038026 _102126 _102133 A B s P f t n)). Qed.
Lemma lem4038030 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038031 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term280 _102126 _102133 A B P f t n) = (term281 _102126 _102133 A B P f t n).
Proof. exact (MK_COMB (@lem4038030 _102126) (@lem4038029 _102126 _102133 A B P f t n)). Qed.
Lemma lem4038036 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term282 _102126 _102133 A B f t n) = (term283 _102126 _102133 A B f t n).
Proof. exact (fun_ext (fun P : type686 _102133 => @lem4038031 _102126 _102133 A B P f t n)). Qed.
Lemma lem4038037 {_102133 : Type'} : (@all ((_102133 -> Prop) -> Prop)) = (@all ((_102133 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_102133 -> Prop) -> Prop))). Qed.
Lemma lem4038038 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term284 _102126 _102133 A B f t n) = (term285 _102126 _102133 A B f t n).
Proof. exact (MK_COMB (@lem4038037 _102133) (@lem4038036 _102126 _102133 A B f t n)). Qed.
Lemma lem4038043 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : (term286 _102126 _102133 A B t n) = (term287 _102126 _102133 A B t n).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4038038 _102126 _102133 A B f t n)). Qed.
Lemma lem4038044 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4038045 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : (term288 _102126 _102133 A B t n) = (term289 _102126 _102133 A B t n).
Proof. exact (MK_COMB (@lem4038044 _102126 _102133) (@lem4038043 _102126 _102133 A B t n)). Qed.
Lemma lem4038050 {_102126 _102133 A B : Type'} (n : nat) : (term290 _102126 _102133 A B n) = (term291 _102126 _102133 A B n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4038045 _102126 _102133 A B t n)). Qed.
Lemma lem4038051 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038052 {_102126 _102133 A B : Type'} (n : nat) : (term292 _102126 _102133 A B n) = (term293 _102126 _102133 A B n).
Proof. exact (MK_COMB (@lem4038051 _102126) (@lem4038050 _102126 _102133 A B n)). Qed.
Lemma lem4038057 {_102126 _102133 A B : Type'} : (term294 _102126 _102133 A B) = (term295 _102126 _102133 A B).
Proof. exact (fun_ext (fun n : nat => @lem4038052 _102126 _102133 A B n)). Qed.
Lemma lem4038058 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4038067 {_102126 _102133 A B : Type'} : (term296 _102126 _102133 A B) = (term297 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038058) (@lem4038057 _102126 _102133 A B)). Qed.
Lemma lem4038068 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4038069 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4038082 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term299 _102133 A s f x y) = (term299 _102133 A s f x y).
Proof. exact (eq_refl (term299 _102133 A s f x y)). Qed.
Lemma lem4038083 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term300 _102133 A s f x) = (term300 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038082 _102133 A s f x y)). Qed.
Lemma lem4038084 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038085 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term301 _102133 A s f x) = (term301 _102133 A s f x).
Proof. exact (MK_COMB (@lem4038084 A) (@lem4038083 _102133 A s f x)). Qed.
Lemma lem4038086 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term302 _102133 A s f) = (term302 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038085 _102133 A s f x)). Qed.
Lemma lem4038087 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038088 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term303 _102133 A s f) = (term303 _102133 A s f).
Proof. exact (MK_COMB (@lem4038087 A) (@lem4038086 _102133 A s f)). Qed.
Lemma lem4038089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038090 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term304 _102133 A s f) = (term304 _102133 A s f).
Proof. exact (MK_COMB (@lem4038089) (@lem4038088 _102133 A s f)). Qed.
Lemma lem4038091 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term305 _102133 A f s) = (term305 _102133 A f s).
Proof. exact (MK_COMB (@lem4038090 _102133 A s f) (@lem4038069 A s)). Qed.
Lemma lem4038092 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038093 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term306 _102133 A f s) = (term306 _102133 A f s).
Proof. exact (MK_COMB (@lem4038092) (@lem4038091 _102133 A f s)). Qed.
Lemma lem4038094 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term307 _102133 A f s) = (term307 _102133 A f s).
Proof. exact (MK_COMB (@lem4038093 _102133 A f s) (@lem4038068 _102133 A f s)). Qed.
Lemma lem4038095 {_102133 A : Type'} (f : A -> _102133) : (term308 _102133 A f) = (term308 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038094 _102133 A f s)). Qed.
Lemma lem4038096 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038097 {_102133 A : Type'} (f : A -> _102133) : (term309 _102133 A f) = (term309 _102133 A f).
Proof. exact (MK_COMB (@lem4038096 A) (@lem4038095 _102133 A f)). Qed.
Lemma lem4038098 {_102133 A : Type'} : (term310 _102133 A) = (term310 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4038097 _102133 A f)). Qed.
Lemma lem4038099 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4038100 {_102133 A : Type'} : (term229 _102133 A) = (term229 _102133 A).
Proof. exact (MK_COMB (@lem4038099 _102133 A) (@lem4038098 _102133 A)). Qed.
Lemma lem4038101 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4038102 {_102133 A : Type'} : (term240 _102133 A) = (term240 _102133 A).
Proof. exact (MK_COMB (@lem4038101) (@lem4038100 _102133 A)). Qed.
Lemma lem4038103 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4038104 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4038117 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term299 _102126 A s f x y) = (term299 _102126 A s f x y).
Proof. exact (eq_refl (term299 _102126 A s f x y)). Qed.
Lemma lem4038118 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term300 _102126 A s f x) = (term300 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038117 _102126 A s f x y)). Qed.
Lemma lem4038119 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038120 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term301 _102126 A s f x) = (term301 _102126 A s f x).
Proof. exact (MK_COMB (@lem4038119 A) (@lem4038118 _102126 A s f x)). Qed.
Lemma lem4038121 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term302 _102126 A s f) = (term302 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038120 _102126 A s f x)). Qed.
Lemma lem4038122 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038123 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term303 _102126 A s f) = (term303 _102126 A s f).
Proof. exact (MK_COMB (@lem4038122 A) (@lem4038121 _102126 A s f)). Qed.
Lemma lem4038124 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038125 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term304 _102126 A s f) = (term304 _102126 A s f).
Proof. exact (MK_COMB (@lem4038124) (@lem4038123 _102126 A s f)). Qed.
Lemma lem4038126 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term305 _102126 A f s) = (term305 _102126 A f s).
Proof. exact (MK_COMB (@lem4038125 _102126 A s f) (@lem4038104 A s)). Qed.
Lemma lem4038127 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038128 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term306 _102126 A f s) = (term306 _102126 A f s).
Proof. exact (MK_COMB (@lem4038127) (@lem4038126 _102126 A f s)). Qed.
Lemma lem4038129 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term307 _102126 A f s) = (term307 _102126 A f s).
Proof. exact (MK_COMB (@lem4038128 _102126 A f s) (@lem4038103 _102126 A f s)). Qed.
Lemma lem4038130 {_102126 A : Type'} (f : A -> _102126) : (term308 _102126 A f) = (term308 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038129 _102126 A f s)). Qed.
Lemma lem4038131 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038132 {_102126 A : Type'} (f : A -> _102126) : (term309 _102126 A f) = (term309 _102126 A f).
Proof. exact (MK_COMB (@lem4038131 A) (@lem4038130 _102126 A f)). Qed.
Lemma lem4038133 {_102126 A : Type'} : (term310 _102126 A) = (term310 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4038132 _102126 A f)). Qed.
Lemma lem4038134 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4038135 {_102126 A : Type'} : (term229 _102126 A) = (term229 _102126 A).
Proof. exact (MK_COMB (@lem4038134 _102126 A) (@lem4038133 _102126 A)). Qed.
Lemma lem4038136 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038137 {_102126 A : Type'} : (term241 _102126 A) = (term241 _102126 A).
Proof. exact (MK_COMB (@lem4038136) (@lem4038135 _102126 A)). Qed.
Lemma lem4038138 {_102126 _102133 A : Type'} : (term243 _102126 _102133 A) = (term243 _102126 _102133 A).
Proof. exact (MK_COMB (@lem4038137 _102126 A) (@lem4038102 _102133 A)). Qed.
Lemma lem4038139 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4038140 {_102133 : Type'} (s : _102133 -> Prop) : (@FINITE _102133 s) = (@FINITE _102133 s).
Proof. exact (eq_refl (@FINITE _102133 s)). Qed.
Lemma lem4038153 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term312 _102133 B s f x y) = (term312 _102133 B s f x y).
Proof. exact (eq_refl (term312 _102133 B s f x y)). Qed.
Lemma lem4038154 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term313 _102133 B s f x) = (term313 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4038153 _102133 B s f x y)). Qed.
Lemma lem4038155 {_102133 : Type'} : (@all _102133) = (@all _102133).
Proof. exact (eq_refl (@all _102133)). Qed.
Lemma lem4038156 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term314 _102133 B s f x) = (term314 _102133 B s f x).
Proof. exact (MK_COMB (@lem4038155 _102133) (@lem4038154 _102133 B s f x)). Qed.
Lemma lem4038157 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term315 _102133 B s f) = (term315 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4038156 _102133 B s f x)). Qed.
Lemma lem4038158 {_102133 : Type'} : (@all _102133) = (@all _102133).
Proof. exact (eq_refl (@all _102133)). Qed.
Lemma lem4038159 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term316 _102133 B s f) = (term316 _102133 B s f).
Proof. exact (MK_COMB (@lem4038158 _102133) (@lem4038157 _102133 B s f)). Qed.
Lemma lem4038160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038161 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term317 _102133 B s f) = (term317 _102133 B s f).
Proof. exact (MK_COMB (@lem4038160) (@lem4038159 _102133 B s f)). Qed.
Lemma lem4038162 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term318 _102133 B f s) = (term318 _102133 B f s).
Proof. exact (MK_COMB (@lem4038161 _102133 B s f) (@lem4038140 _102133 s)). Qed.
Lemma lem4038163 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038164 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term319 _102133 B f s) = (term319 _102133 B f s).
Proof. exact (MK_COMB (@lem4038163) (@lem4038162 _102133 B f s)). Qed.
Lemma lem4038165 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term320 _102133 B f s) = (term320 _102133 B f s).
Proof. exact (MK_COMB (@lem4038164 _102133 B f s) (@lem4038139 _102133 B f s)). Qed.
Lemma lem4038166 {_102133 B : Type'} (f : _102133 -> B) : (term321 _102133 B f) = (term321 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4038165 _102133 B f s)). Qed.
Lemma lem4038167 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4038168 {_102133 B : Type'} (f : _102133 -> B) : (term322 _102133 B f) = (term322 _102133 B f).
Proof. exact (MK_COMB (@lem4038167 _102133) (@lem4038166 _102133 B f)). Qed.
Lemma lem4038169 {_102133 B : Type'} : (term323 _102133 B) = (term323 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4038168 _102133 B f)). Qed.
Lemma lem4038170 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4038171 {_102133 B : Type'} : (term228 _102133 B) = (term228 _102133 B).
Proof. exact (MK_COMB (@lem4038170 _102133 B) (@lem4038169 _102133 B)). Qed.
Lemma lem4038172 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038173 {_102133 B : Type'} : (term244 _102133 B) = (term244 _102133 B).
Proof. exact (MK_COMB (@lem4038172) (@lem4038171 _102133 B)). Qed.
Lemma lem4038174 {_102126 _102133 A B : Type'} : (term246 _102126 _102133 A B) = (term246 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038173 _102133 B) (@lem4038138 _102126 _102133 A)). Qed.
Lemma lem4038175 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4038176 {_102126 : Type'} (s : _102126 -> Prop) : (@FINITE _102126 s) = (@FINITE _102126 s).
Proof. exact (eq_refl (@FINITE _102126 s)). Qed.
Lemma lem4038189 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term312 _102126 B s f x y) = (term312 _102126 B s f x y).
Proof. exact (eq_refl (term312 _102126 B s f x y)). Qed.
Lemma lem4038190 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term313 _102126 B s f x) = (term313 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038189 _102126 B s f x y)). Qed.
Lemma lem4038191 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038192 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term314 _102126 B s f x) = (term314 _102126 B s f x).
Proof. exact (MK_COMB (@lem4038191 _102126) (@lem4038190 _102126 B s f x)). Qed.
Lemma lem4038193 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term315 _102126 B s f) = (term315 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038192 _102126 B s f x)). Qed.
Lemma lem4038194 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038195 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term316 _102126 B s f) = (term316 _102126 B s f).
Proof. exact (MK_COMB (@lem4038194 _102126) (@lem4038193 _102126 B s f)). Qed.
Lemma lem4038196 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038197 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term317 _102126 B s f) = (term317 _102126 B s f).
Proof. exact (MK_COMB (@lem4038196) (@lem4038195 _102126 B s f)). Qed.
Lemma lem4038198 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term318 _102126 B f s) = (term318 _102126 B f s).
Proof. exact (MK_COMB (@lem4038197 _102126 B s f) (@lem4038176 _102126 s)). Qed.
Lemma lem4038199 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038200 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term319 _102126 B f s) = (term319 _102126 B f s).
Proof. exact (MK_COMB (@lem4038199) (@lem4038198 _102126 B f s)). Qed.
Lemma lem4038201 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term320 _102126 B f s) = (term320 _102126 B f s).
Proof. exact (MK_COMB (@lem4038200 _102126 B f s) (@lem4038175 _102126 B f s)). Qed.
Lemma lem4038202 {_102126 B : Type'} (f : _102126 -> B) : (term321 _102126 B f) = (term321 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038201 _102126 B f s)). Qed.
Lemma lem4038203 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038204 {_102126 B : Type'} (f : _102126 -> B) : (term322 _102126 B f) = (term322 _102126 B f).
Proof. exact (MK_COMB (@lem4038203 _102126) (@lem4038202 _102126 B f)). Qed.
Lemma lem4038205 {_102126 B : Type'} : (term323 _102126 B) = (term323 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4038204 _102126 B f)). Qed.
Lemma lem4038206 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4038207 {_102126 B : Type'} : (term228 _102126 B) = (term228 _102126 B).
Proof. exact (MK_COMB (@lem4038206 _102126 B) (@lem4038205 _102126 B)). Qed.
Lemma lem4038208 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038209 {_102126 B : Type'} : (term244 _102126 B) = (term244 _102126 B).
Proof. exact (MK_COMB (@lem4038208) (@lem4038207 _102126 B)). Qed.
Lemma lem4038210 {_102126 _102133 A B : Type'} : (term248 _102126 _102133 A B) = (term248 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038209 _102126 B) (@lem4038174 _102126 _102133 A B)). Qed.
Lemma lem4038211 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4038212 {_102126 : Type'} (s : _102126 -> Prop) : (@FINITE _102126 s) = (@FINITE _102126 s).
Proof. exact (eq_refl (@FINITE _102126 s)). Qed.
Lemma lem4038225 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term312 _102126 _102133 s f x y) = (term312 _102126 _102133 s f x y).
Proof. exact (eq_refl (term312 _102126 _102133 s f x y)). Qed.
Lemma lem4038226 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term313 _102126 _102133 s f x) = (term313 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038225 _102126 _102133 s f x y)). Qed.
Lemma lem4038227 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038228 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term314 _102126 _102133 s f x) = (term314 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4038227 _102126) (@lem4038226 _102126 _102133 s f x)). Qed.
Lemma lem4038229 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term315 _102126 _102133 s f) = (term315 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038228 _102126 _102133 s f x)). Qed.
Lemma lem4038230 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038231 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term316 _102126 _102133 s f) = (term316 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4038230 _102126) (@lem4038229 _102126 _102133 s f)). Qed.
Lemma lem4038232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038233 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term317 _102126 _102133 s f) = (term317 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4038232) (@lem4038231 _102126 _102133 s f)). Qed.
Lemma lem4038234 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term318 _102126 _102133 f s) = (term318 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4038233 _102126 _102133 s f) (@lem4038212 _102126 s)). Qed.
Lemma lem4038235 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038236 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term319 _102126 _102133 f s) = (term319 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4038235) (@lem4038234 _102126 _102133 f s)). Qed.
Lemma lem4038237 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term320 _102126 _102133 f s) = (term320 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4038236 _102126 _102133 f s) (@lem4038211 _102126 _102133 f s)). Qed.
Lemma lem4038238 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term321 _102126 _102133 f) = (term321 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038237 _102126 _102133 f s)). Qed.
Lemma lem4038239 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038240 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term322 _102126 _102133 f) = (term322 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4038239 _102126) (@lem4038238 _102126 _102133 f)). Qed.
Lemma lem4038241 {_102126 _102133 : Type'} : (term323 _102126 _102133) = (term323 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4038240 _102126 _102133 f)). Qed.
Lemma lem4038242 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4038243 {_102126 _102133 : Type'} : (term228 _102126 _102133) = (term228 _102126 _102133).
Proof. exact (MK_COMB (@lem4038242 _102126 _102133) (@lem4038241 _102126 _102133)). Qed.
Lemma lem4038244 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038245 {_102126 _102133 : Type'} : (term244 _102126 _102133) = (term244 _102126 _102133).
Proof. exact (MK_COMB (@lem4038244) (@lem4038243 _102126 _102133)). Qed.
Lemma lem4038246 {_102126 _102133 A B : Type'} : (term250 _102126 _102133 A B) = (term250 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038245 _102126 _102133) (@lem4038210 _102126 _102133 A B)). Qed.
Lemma lem4038251 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term324 B f s) = (@FINITE nat s)) = ((term324 B f s) = (@FINITE nat s)).
Proof. exact (eq_refl ((term324 B f s) = (@FINITE nat s))). Qed.
Lemma lem4038264 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term325 B s f x y) = (term325 B s f x y).
Proof. exact (eq_refl (term325 B s f x y)). Qed.
Lemma lem4038265 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term326 B s f x) = (term326 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4038264 B s f x y)). Qed.
Lemma lem4038266 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4038267 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term327 B s f x) = (term327 B s f x).
Proof. exact (MK_COMB (@lem4038266) (@lem4038265 B s f x)). Qed.
Lemma lem4038268 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term328 B s f) = (term328 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4038267 B s f x)). Qed.
Lemma lem4038269 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4038270 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term329 B s f) = (term329 B s f).
Proof. exact (MK_COMB (@lem4038269) (@lem4038268 B s f)). Qed.
Lemma lem4038271 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038272 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term330 B s f) = (term330 B s f).
Proof. exact (MK_COMB (@lem4038271) (@lem4038270 B s f)). Qed.
Lemma lem4038273 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term331 B f s) = (term331 B f s).
Proof. exact (MK_COMB (@lem4038272 B s f) (@lem4038251 B f s)). Qed.
Lemma lem4038274 {B : Type'} (f : nat -> B) : (term332 B f) = (term332 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4038273 B f s)). Qed.
Lemma lem4038275 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4038276 {B : Type'} (f : nat -> B) : (term333 B f) = (term333 B f).
Proof. exact (MK_COMB (@lem4038275) (@lem4038274 B f)). Qed.
Lemma lem4038277 {B : Type'} : (term334 B) = (term334 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4038276 B f)). Qed.
Lemma lem4038278 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4038279 {B : Type'} : (term234 B) = (term234 B).
Proof. exact (MK_COMB (@lem4038278 B) (@lem4038277 B)). Qed.
Lemma lem4038280 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038281 {B : Type'} : (term251 B) = (term251 B).
Proof. exact (MK_COMB (@lem4038280) (@lem4038279 B)). Qed.
Lemma lem4038282 {_102126 _102133 A B : Type'} : (term253 _102126 _102133 A B) = (term253 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038281 B) (@lem4038246 _102126 _102133 A B)). Qed.
Lemma lem4038287 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term335 B f s) = (@FINITE B s)) = ((term335 B f s) = (@FINITE B s)).
Proof. exact (eq_refl ((term335 B f s) = (@FINITE B s))). Qed.
Lemma lem4038300 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term336 B s f x y) = (term336 B s f x y).
Proof. exact (eq_refl (term336 B s f x y)). Qed.
Lemma lem4038301 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term337 B s f x) = (term337 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4038300 B s f x y)). Qed.
Lemma lem4038302 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4038303 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term338 B s f x) = (term338 B s f x).
Proof. exact (MK_COMB (@lem4038302 B) (@lem4038301 B s f x)). Qed.
Lemma lem4038304 {B : Type'} (s : B -> Prop) (f : B -> B) : (term339 B s f) = (term339 B s f).
Proof. exact (fun_ext (fun x : B => @lem4038303 B s f x)). Qed.
Lemma lem4038305 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4038306 {B : Type'} (s : B -> Prop) (f : B -> B) : (term340 B s f) = (term340 B s f).
Proof. exact (MK_COMB (@lem4038305 B) (@lem4038304 B s f)). Qed.
Lemma lem4038307 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038308 {B : Type'} (s : B -> Prop) (f : B -> B) : (term341 B s f) = (term341 B s f).
Proof. exact (MK_COMB (@lem4038307) (@lem4038306 B s f)). Qed.
Lemma lem4038309 {B : Type'} (f : B -> B) (s : B -> Prop) : (term342 B f s) = (term342 B f s).
Proof. exact (MK_COMB (@lem4038308 B s f) (@lem4038287 B f s)). Qed.
Lemma lem4038310 {B : Type'} (f : B -> B) : (term343 B f) = (term343 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4038309 B f s)). Qed.
Lemma lem4038311 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4038312 {B : Type'} (f : B -> B) : (term344 B f) = (term344 B f).
Proof. exact (MK_COMB (@lem4038311 B) (@lem4038310 B f)). Qed.
Lemma lem4038313 {B : Type'} : (term345 B) = (term345 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4038312 B f)). Qed.
Lemma lem4038314 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4038315 {B : Type'} : (term232 B) = (term232 B).
Proof. exact (MK_COMB (@lem4038314 B) (@lem4038313 B)). Qed.
Lemma lem4038316 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038317 {B : Type'} : (term254 B) = (term254 B).
Proof. exact (MK_COMB (@lem4038316) (@lem4038315 B)). Qed.
Lemma lem4038318 {_102126 _102133 A B : Type'} : (term256 _102126 _102133 A B) = (term256 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038317 B) (@lem4038282 _102126 _102133 A B)). Qed.
Lemma lem4038323 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term346 A f s) = (@FINITE A s)) = ((term346 A f s) = (@FINITE A s)).
Proof. exact (eq_refl ((term346 A f s) = (@FINITE A s))). Qed.
Lemma lem4038336 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term347 A s f x y) = (term347 A s f x y).
Proof. exact (eq_refl (term347 A s f x y)). Qed.
Lemma lem4038337 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term348 A s f x) = (term348 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038336 A s f x y)). Qed.
Lemma lem4038338 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038339 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term349 A s f x) = (term349 A s f x).
Proof. exact (MK_COMB (@lem4038338 A) (@lem4038337 A s f x)). Qed.
Lemma lem4038340 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term350 A s f) = (term350 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038339 A s f x)). Qed.
Lemma lem4038341 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038342 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term351 A s f) = (term351 A s f).
Proof. exact (MK_COMB (@lem4038341 A) (@lem4038340 A s f)). Qed.
Lemma lem4038343 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038344 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term352 A s f) = (term352 A s f).
Proof. exact (MK_COMB (@lem4038343) (@lem4038342 A s f)). Qed.
Lemma lem4038345 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term353 A f s) = (term353 A f s).
Proof. exact (MK_COMB (@lem4038344 A s f) (@lem4038323 A f s)). Qed.
Lemma lem4038346 {A : Type'} (f : A -> nat) : (term354 A f) = (term354 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038345 A f s)). Qed.
Lemma lem4038347 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038348 {A : Type'} (f : A -> nat) : (term355 A f) = (term355 A f).
Proof. exact (MK_COMB (@lem4038347 A) (@lem4038346 A f)). Qed.
Lemma lem4038349 {A : Type'} : (term356 A) = (term356 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4038348 A f)). Qed.
Lemma lem4038350 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4038351 {A : Type'} : (term233 A) = (term233 A).
Proof. exact (MK_COMB (@lem4038350 A) (@lem4038349 A)). Qed.
Lemma lem4038352 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038353 {A : Type'} : (term257 A) = (term257 A).
Proof. exact (MK_COMB (@lem4038352) (@lem4038351 A)). Qed.
Lemma lem4038354 {_102126 _102133 A B : Type'} : (term259 _102126 _102133 A B) = (term259 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038353 A) (@lem4038318 _102126 _102133 A B)). Qed.
Lemma lem4038359 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term205 A B f s) = (@FINITE A s)) = ((term205 A B f s) = (@FINITE A s)).
Proof. exact (eq_refl ((term205 A B f s) = (@FINITE A s))). Qed.
Lemma lem4038372 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term312 A B s f x y) = (term312 A B s f x y).
Proof. exact (eq_refl (term312 A B s f x y)). Qed.
Lemma lem4038373 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term313 A B s f x) = (term313 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4038372 A B s f x y)). Qed.
Lemma lem4038374 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038375 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term314 A B s f x) = (term314 A B s f x).
Proof. exact (MK_COMB (@lem4038374 A) (@lem4038373 A B s f x)). Qed.
Lemma lem4038376 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term315 A B s f) = (term315 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4038375 A B s f x)). Qed.
Lemma lem4038377 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038378 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term316 A B s f) = (term316 A B s f).
Proof. exact (MK_COMB (@lem4038377 A) (@lem4038376 A B s f)). Qed.
Lemma lem4038379 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038380 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term357 A B s f) = (term357 A B s f).
Proof. exact (MK_COMB (@lem4038379) (@lem4038378 A B s f)). Qed.
Lemma lem4038381 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term358 A B f s) = (term358 A B f s).
Proof. exact (MK_COMB (@lem4038380 A B s f) (@lem4038359 A B f s)). Qed.
Lemma lem4038382 {A B : Type'} (f : A -> B) : (term359 A B f) = (term359 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038381 A B f s)). Qed.
Lemma lem4038383 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038384 {A B : Type'} (f : A -> B) : (term360 A B f) = (term360 A B f).
Proof. exact (MK_COMB (@lem4038383 A) (@lem4038382 A B f)). Qed.
Lemma lem4038385 {A B : Type'} : (term361 A B) = (term361 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4038384 A B f)). Qed.
Lemma lem4038386 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4038387 {A B : Type'} : (term230 A B) = (term230 A B).
Proof. exact (MK_COMB (@lem4038386 A B) (@lem4038385 A B)). Qed.
Lemma lem4038388 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038389 {A B : Type'} : (term260 A B) = (term260 A B).
Proof. exact (MK_COMB (@lem4038388) (@lem4038387 A B)). Qed.
Lemma lem4038390 {_102126 _102133 A B : Type'} : (term262 _102126 _102133 A B) = (term262 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038389 A B) (@lem4038354 _102126 _102133 A B)). Qed.
Lemma lem4038395 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term335 A f s) = (@FINITE A s)) = ((term335 A f s) = (@FINITE A s)).
Proof. exact (eq_refl ((term335 A f s) = (@FINITE A s))). Qed.
Lemma lem4038408 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term336 A s f x y) = (term336 A s f x y).
Proof. exact (eq_refl (term336 A s f x y)). Qed.
Lemma lem4038409 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term337 A s f x) = (term337 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038408 A s f x y)). Qed.
Lemma lem4038410 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038411 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term338 A s f x) = (term338 A s f x).
Proof. exact (MK_COMB (@lem4038410 A) (@lem4038409 A s f x)). Qed.
Lemma lem4038412 {A : Type'} (s : A -> Prop) (f : A -> A) : (term339 A s f) = (term339 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038411 A s f x)). Qed.
Lemma lem4038413 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038414 {A : Type'} (s : A -> Prop) (f : A -> A) : (term340 A s f) = (term340 A s f).
Proof. exact (MK_COMB (@lem4038413 A) (@lem4038412 A s f)). Qed.
Lemma lem4038415 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038416 {A : Type'} (s : A -> Prop) (f : A -> A) : (term341 A s f) = (term341 A s f).
Proof. exact (MK_COMB (@lem4038415) (@lem4038414 A s f)). Qed.
Lemma lem4038417 {A : Type'} (f : A -> A) (s : A -> Prop) : (term342 A f s) = (term342 A f s).
Proof. exact (MK_COMB (@lem4038416 A s f) (@lem4038395 A f s)). Qed.
Lemma lem4038418 {A : Type'} (f : A -> A) : (term343 A f) = (term343 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038417 A f s)). Qed.
Lemma lem4038419 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038420 {A : Type'} (f : A -> A) : (term344 A f) = (term344 A f).
Proof. exact (MK_COMB (@lem4038419 A) (@lem4038418 A f)). Qed.
Lemma lem4038421 {A : Type'} : (term345 A) = (term345 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4038420 A f)). Qed.
Lemma lem4038422 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4038423 {A : Type'} : (term232 A) = (term232 A).
Proof. exact (MK_COMB (@lem4038422 A) (@lem4038421 A)). Qed.
Lemma lem4038424 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038425 {A : Type'} : (term254 A) = (term254 A).
Proof. exact (MK_COMB (@lem4038424) (@lem4038423 A)). Qed.
Lemma lem4038426 {_102126 _102133 A B : Type'} : (term264 _102126 _102133 A B) = (term264 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038425 A) (@lem4038390 _102126 _102133 A B)). Qed.
Lemma lem4038431 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term362 _102133 A f s) = (@FINITE A s)) = ((term362 _102133 A f s) = (@FINITE A s)).
Proof. exact (eq_refl ((term362 _102133 A f s) = (@FINITE A s))). Qed.
Lemma lem4038444 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term299 _102133 A s f x y) = (term299 _102133 A s f x y).
Proof. exact (eq_refl (term299 _102133 A s f x y)). Qed.
Lemma lem4038445 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term300 _102133 A s f x) = (term300 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038444 _102133 A s f x y)). Qed.
Lemma lem4038446 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038447 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term301 _102133 A s f x) = (term301 _102133 A s f x).
Proof. exact (MK_COMB (@lem4038446 A) (@lem4038445 _102133 A s f x)). Qed.
Lemma lem4038448 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term302 _102133 A s f) = (term302 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038447 _102133 A s f x)). Qed.
Lemma lem4038449 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038450 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term303 _102133 A s f) = (term303 _102133 A s f).
Proof. exact (MK_COMB (@lem4038449 A) (@lem4038448 _102133 A s f)). Qed.
Lemma lem4038451 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038452 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term363 _102133 A s f) = (term363 _102133 A s f).
Proof. exact (MK_COMB (@lem4038451) (@lem4038450 _102133 A s f)). Qed.
Lemma lem4038453 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term364 _102133 A f s) = (term364 _102133 A f s).
Proof. exact (MK_COMB (@lem4038452 _102133 A s f) (@lem4038431 _102133 A f s)). Qed.
Lemma lem4038454 {_102133 A : Type'} (f : A -> _102133) : (term365 _102133 A f) = (term365 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038453 _102133 A f s)). Qed.
Lemma lem4038455 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038456 {_102133 A : Type'} (f : A -> _102133) : (term366 _102133 A f) = (term366 _102133 A f).
Proof. exact (MK_COMB (@lem4038455 A) (@lem4038454 _102133 A f)). Qed.
Lemma lem4038457 {_102133 A : Type'} : (term367 _102133 A) = (term367 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4038456 _102133 A f)). Qed.
Lemma lem4038458 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4038459 {_102133 A : Type'} : (term231 _102133 A) = (term231 _102133 A).
Proof. exact (MK_COMB (@lem4038458 _102133 A) (@lem4038457 _102133 A)). Qed.
Lemma lem4038460 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038461 {_102133 A : Type'} : (term265 _102133 A) = (term265 _102133 A).
Proof. exact (MK_COMB (@lem4038460) (@lem4038459 _102133 A)). Qed.
Lemma lem4038462 {_102126 _102133 A B : Type'} : (term267 _102126 _102133 A B) = (term267 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038461 _102133 A) (@lem4038426 _102126 _102133 A B)). Qed.
Lemma lem4038467 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term362 _102126 A f s) = (@FINITE A s)) = ((term362 _102126 A f s) = (@FINITE A s)).
Proof. exact (eq_refl ((term362 _102126 A f s) = (@FINITE A s))). Qed.
Lemma lem4038480 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term299 _102126 A s f x y) = (term299 _102126 A s f x y).
Proof. exact (eq_refl (term299 _102126 A s f x y)). Qed.
Lemma lem4038481 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term300 _102126 A s f x) = (term300 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4038480 _102126 A s f x y)). Qed.
Lemma lem4038482 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038483 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term301 _102126 A s f x) = (term301 _102126 A s f x).
Proof. exact (MK_COMB (@lem4038482 A) (@lem4038481 _102126 A s f x)). Qed.
Lemma lem4038484 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term302 _102126 A s f) = (term302 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4038483 _102126 A s f x)). Qed.
Lemma lem4038485 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4038486 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term303 _102126 A s f) = (term303 _102126 A s f).
Proof. exact (MK_COMB (@lem4038485 A) (@lem4038484 _102126 A s f)). Qed.
Lemma lem4038487 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038488 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term363 _102126 A s f) = (term363 _102126 A s f).
Proof. exact (MK_COMB (@lem4038487) (@lem4038486 _102126 A s f)). Qed.
Lemma lem4038489 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term364 _102126 A f s) = (term364 _102126 A f s).
Proof. exact (MK_COMB (@lem4038488 _102126 A s f) (@lem4038467 _102126 A f s)). Qed.
Lemma lem4038490 {_102126 A : Type'} (f : A -> _102126) : (term365 _102126 A f) = (term365 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4038489 _102126 A f s)). Qed.
Lemma lem4038491 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4038492 {_102126 A : Type'} (f : A -> _102126) : (term366 _102126 A f) = (term366 _102126 A f).
Proof. exact (MK_COMB (@lem4038491 A) (@lem4038490 _102126 A f)). Qed.
Lemma lem4038493 {_102126 A : Type'} : (term367 _102126 A) = (term367 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4038492 _102126 A f)). Qed.
Lemma lem4038494 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4038495 {_102126 A : Type'} : (term231 _102126 A) = (term231 _102126 A).
Proof. exact (MK_COMB (@lem4038494 _102126 A) (@lem4038493 _102126 A)). Qed.
Lemma lem4038496 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038497 {_102126 A : Type'} : (term265 _102126 A) = (term265 _102126 A).
Proof. exact (MK_COMB (@lem4038496) (@lem4038495 _102126 A)). Qed.
Lemma lem4038498 {_102126 _102133 A B : Type'} : (term269 _102126 _102133 A B) = (term269 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038497 _102126 A) (@lem4038462 _102126 _102133 A B)). Qed.
Lemma lem4038503 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term205 _102133 B f s) = (@FINITE _102133 s)) = ((term205 _102133 B f s) = (@FINITE _102133 s)).
Proof. exact (eq_refl ((term205 _102133 B f s) = (@FINITE _102133 s))). Qed.
Lemma lem4038516 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term312 _102133 B s f x y) = (term312 _102133 B s f x y).
Proof. exact (eq_refl (term312 _102133 B s f x y)). Qed.
Lemma lem4038517 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term313 _102133 B s f x) = (term313 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4038516 _102133 B s f x y)). Qed.
Lemma lem4038518 {_102133 : Type'} : (@all _102133) = (@all _102133).
Proof. exact (eq_refl (@all _102133)). Qed.
Lemma lem4038519 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term314 _102133 B s f x) = (term314 _102133 B s f x).
Proof. exact (MK_COMB (@lem4038518 _102133) (@lem4038517 _102133 B s f x)). Qed.
Lemma lem4038520 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term315 _102133 B s f) = (term315 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4038519 _102133 B s f x)). Qed.
Lemma lem4038521 {_102133 : Type'} : (@all _102133) = (@all _102133).
Proof. exact (eq_refl (@all _102133)). Qed.
Lemma lem4038522 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term316 _102133 B s f) = (term316 _102133 B s f).
Proof. exact (MK_COMB (@lem4038521 _102133) (@lem4038520 _102133 B s f)). Qed.
Lemma lem4038523 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038524 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term357 _102133 B s f) = (term357 _102133 B s f).
Proof. exact (MK_COMB (@lem4038523) (@lem4038522 _102133 B s f)). Qed.
Lemma lem4038525 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term358 _102133 B f s) = (term358 _102133 B f s).
Proof. exact (MK_COMB (@lem4038524 _102133 B s f) (@lem4038503 _102133 B f s)). Qed.
Lemma lem4038526 {_102133 B : Type'} (f : _102133 -> B) : (term359 _102133 B f) = (term359 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4038525 _102133 B f s)). Qed.
Lemma lem4038527 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4038528 {_102133 B : Type'} (f : _102133 -> B) : (term360 _102133 B f) = (term360 _102133 B f).
Proof. exact (MK_COMB (@lem4038527 _102133) (@lem4038526 _102133 B f)). Qed.
Lemma lem4038529 {_102133 B : Type'} : (term361 _102133 B) = (term361 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4038528 _102133 B f)). Qed.
Lemma lem4038530 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4038531 {_102133 B : Type'} : (term230 _102133 B) = (term230 _102133 B).
Proof. exact (MK_COMB (@lem4038530 _102133 B) (@lem4038529 _102133 B)). Qed.
Lemma lem4038532 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038533 {_102133 B : Type'} : (term260 _102133 B) = (term260 _102133 B).
Proof. exact (MK_COMB (@lem4038532) (@lem4038531 _102133 B)). Qed.
Lemma lem4038534 {_102126 _102133 A B : Type'} : (term271 _102126 _102133 A B) = (term271 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038533 _102133 B) (@lem4038498 _102126 _102133 A B)). Qed.
Lemma lem4038539 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term205 _102126 B f s) = (@FINITE _102126 s)) = ((term205 _102126 B f s) = (@FINITE _102126 s)).
Proof. exact (eq_refl ((term205 _102126 B f s) = (@FINITE _102126 s))). Qed.
Lemma lem4038552 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term312 _102126 B s f x y) = (term312 _102126 B s f x y).
Proof. exact (eq_refl (term312 _102126 B s f x y)). Qed.
Lemma lem4038553 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term313 _102126 B s f x) = (term313 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038552 _102126 B s f x y)). Qed.
Lemma lem4038554 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038555 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term314 _102126 B s f x) = (term314 _102126 B s f x).
Proof. exact (MK_COMB (@lem4038554 _102126) (@lem4038553 _102126 B s f x)). Qed.
Lemma lem4038556 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term315 _102126 B s f) = (term315 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038555 _102126 B s f x)). Qed.
Lemma lem4038557 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038558 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term316 _102126 B s f) = (term316 _102126 B s f).
Proof. exact (MK_COMB (@lem4038557 _102126) (@lem4038556 _102126 B s f)). Qed.
Lemma lem4038559 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038560 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term357 _102126 B s f) = (term357 _102126 B s f).
Proof. exact (MK_COMB (@lem4038559) (@lem4038558 _102126 B s f)). Qed.
Lemma lem4038561 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term358 _102126 B f s) = (term358 _102126 B f s).
Proof. exact (MK_COMB (@lem4038560 _102126 B s f) (@lem4038539 _102126 B f s)). Qed.
Lemma lem4038562 {_102126 B : Type'} (f : _102126 -> B) : (term359 _102126 B f) = (term359 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038561 _102126 B f s)). Qed.
Lemma lem4038563 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038564 {_102126 B : Type'} (f : _102126 -> B) : (term360 _102126 B f) = (term360 _102126 B f).
Proof. exact (MK_COMB (@lem4038563 _102126) (@lem4038562 _102126 B f)). Qed.
Lemma lem4038565 {_102126 B : Type'} : (term361 _102126 B) = (term361 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4038564 _102126 B f)). Qed.
Lemma lem4038566 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4038567 {_102126 B : Type'} : (term230 _102126 B) = (term230 _102126 B).
Proof. exact (MK_COMB (@lem4038566 _102126 B) (@lem4038565 _102126 B)). Qed.
Lemma lem4038568 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038569 {_102126 B : Type'} : (term260 _102126 B) = (term260 _102126 B).
Proof. exact (MK_COMB (@lem4038568) (@lem4038567 _102126 B)). Qed.
Lemma lem4038570 {_102126 _102133 A B : Type'} : (term273 _102126 _102133 A B) = (term273 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038569 _102126 B) (@lem4038534 _102126 _102133 A B)). Qed.
Lemma lem4038575 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term205 _102126 _102133 f s) = (@FINITE _102126 s)) = ((term205 _102126 _102133 f s) = (@FINITE _102126 s)).
Proof. exact (eq_refl ((term205 _102126 _102133 f s) = (@FINITE _102126 s))). Qed.
Lemma lem4038588 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term312 _102126 _102133 s f x y) = (term312 _102126 _102133 s f x y).
Proof. exact (eq_refl (term312 _102126 _102133 s f x y)). Qed.
Lemma lem4038589 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term313 _102126 _102133 s f x) = (term313 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038588 _102126 _102133 s f x y)). Qed.
Lemma lem4038590 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038591 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term314 _102126 _102133 s f x) = (term314 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4038590 _102126) (@lem4038589 _102126 _102133 s f x)). Qed.
Lemma lem4038592 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term315 _102126 _102133 s f) = (term315 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038591 _102126 _102133 s f x)). Qed.
Lemma lem4038593 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038594 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term316 _102126 _102133 s f) = (term316 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4038593 _102126) (@lem4038592 _102126 _102133 s f)). Qed.
Lemma lem4038595 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038596 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term357 _102126 _102133 s f) = (term357 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4038595) (@lem4038594 _102126 _102133 s f)). Qed.
Lemma lem4038597 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term358 _102126 _102133 f s) = (term358 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4038596 _102126 _102133 s f) (@lem4038575 _102126 _102133 f s)). Qed.
Lemma lem4038598 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term359 _102126 _102133 f) = (term359 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038597 _102126 _102133 f s)). Qed.
Lemma lem4038599 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038600 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term360 _102126 _102133 f) = (term360 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4038599 _102126) (@lem4038598 _102126 _102133 f)). Qed.
Lemma lem4038601 {_102126 _102133 : Type'} : (term361 _102126 _102133) = (term361 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4038600 _102126 _102133 f)). Qed.
Lemma lem4038602 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4038603 {_102126 _102133 : Type'} : (term230 _102126 _102133) = (term230 _102126 _102133).
Proof. exact (MK_COMB (@lem4038602 _102126 _102133) (@lem4038601 _102126 _102133)). Qed.
Lemma lem4038604 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038605 {_102126 _102133 : Type'} : (term260 _102126 _102133) = (term260 _102126 _102133).
Proof. exact (MK_COMB (@lem4038604) (@lem4038603 _102126 _102133)). Qed.
Lemma lem4038606 {_102126 _102133 A B : Type'} : (term275 _102126 _102133 A B) = (term275 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038605 _102126 _102133) (@lem4038570 _102126 _102133 A B)). Qed.
Lemma lem4038611 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : ((term206 _102126 _102133 f t n) = (term146 _102126 t n)) = ((term206 _102126 _102133 f t n) = (term146 _102126 t n)).
Proof. exact (eq_refl ((term206 _102126 _102133 f t n) = (term146 _102126 t n))). Qed.
Lemma lem4038612 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@FINITE _102126 t).
Proof. exact (eq_refl (@FINITE _102126 t)). Qed.
Lemma lem4038613 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term201 _102126 _102133 P f t).
Proof. exact (eq_refl (term201 _102126 _102133 P f t)). Qed.
Lemma lem4038626 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term368 _102126 _102133 t f x y).
Proof. exact (eq_refl (term368 _102126 _102133 t f x y)). Qed.
Lemma lem4038627 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term369 _102126 _102133 t f x) = (term369 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038626 _102126 _102133 t f x y)). Qed.
Lemma lem4038628 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038629 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term370 _102126 _102133 t f x) = (term370 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4038628 _102126) (@lem4038627 _102126 _102133 t f x)). Qed.
Lemma lem4038630 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term371 _102126 _102133 t f) = (term371 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038629 _102126 _102133 t f x)). Qed.
Lemma lem4038631 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038632 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term198 _102126 _102133 t f) = (term198 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4038631 _102126) (@lem4038630 _102126 _102133 t f)). Qed.
Lemma lem4038635 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term190 _102126 t s).
Proof. exact (eq_refl (term190 _102126 t s)). Qed.
Lemma lem4038636 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term200 _102126 _102133 s t f) = (term200 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4038635 _102126 t s) (@lem4038632 _102126 _102133 t f)). Qed.
Lemma lem4038637 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038638 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term372 _102126 _102133 s t f) = (term372 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4038637) (@lem4038636 _102126 _102133 s t f)). Qed.
Lemma lem4038639 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term204 _102126 _102133 s P f t) = (term204 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038638 _102126 _102133 s t f) (@lem4038613 _102126 _102133 P f t)). Qed.
Lemma lem4038640 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038641 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term215 _102126 _102133 s P f t) = (term215 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038640) (@lem4038639 _102126 _102133 s P f t)). Qed.
Lemma lem4038642 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term217 _102126 _102133 s P f t) = (term217 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038641 _102126 _102133 s P f t) (@lem4038612 _102126 t)). Qed.
Lemma lem4038643 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038644 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term373 _102126 _102133 s P f t) = (term373 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038643) (@lem4038642 _102126 _102133 s P f t)). Qed.
Lemma lem4038645 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term374 _102126 _102133 s P f t n) = (term374 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4038644 _102126 _102133 s P f t) (@lem4038611 _102126 _102133 f t n)). Qed.
Lemma lem4038650 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : ((term205 _102126 _102133 f t) = (@FINITE _102126 t)) = ((term205 _102126 _102133 f t) = (@FINITE _102126 t)).
Proof. exact (eq_refl ((term205 _102126 _102133 f t) = (@FINITE _102126 t))). Qed.
Lemma lem4038651 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term201 _102126 _102133 P f t).
Proof. exact (eq_refl (term201 _102126 _102133 P f t)). Qed.
Lemma lem4038664 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term368 _102126 _102133 t f x y).
Proof. exact (eq_refl (term368 _102126 _102133 t f x y)). Qed.
Lemma lem4038665 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term369 _102126 _102133 t f x) = (term369 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4038664 _102126 _102133 t f x y)). Qed.
Lemma lem4038666 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038667 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term370 _102126 _102133 t f x) = (term370 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4038666 _102126) (@lem4038665 _102126 _102133 t f x)). Qed.
Lemma lem4038668 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term371 _102126 _102133 t f) = (term371 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4038667 _102126 _102133 t f x)). Qed.
Lemma lem4038669 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4038670 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term198 _102126 _102133 t f) = (term198 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4038669 _102126) (@lem4038668 _102126 _102133 t f)). Qed.
Lemma lem4038673 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term190 _102126 t s).
Proof. exact (eq_refl (term190 _102126 t s)). Qed.
Lemma lem4038674 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term200 _102126 _102133 s t f) = (term200 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4038673 _102126 t s) (@lem4038670 _102126 _102133 t f)). Qed.
Lemma lem4038675 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038676 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term372 _102126 _102133 s t f) = (term372 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4038675) (@lem4038674 _102126 _102133 s t f)). Qed.
Lemma lem4038677 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term204 _102126 _102133 s P f t) = (term204 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038676 _102126 _102133 s t f) (@lem4038651 _102126 _102133 P f t)). Qed.
Lemma lem4038678 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038679 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term375 _102126 _102133 s P f t) = (term375 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038678) (@lem4038677 _102126 _102133 s P f t)). Qed.
Lemma lem4038680 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term376 _102126 _102133 s P f t) = (term376 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038679 _102126 _102133 s P f t) (@lem4038650 _102126 _102133 f t)). Qed.
Lemma lem4038681 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4038682 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term377 _102126 _102133 s P f t) = (term377 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4038681) (@lem4038680 _102126 _102133 s P f t)). Qed.
Lemma lem4038683 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term225 _102126 _102133 s P f t n) = (term225 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4038682 _102126 _102133 s P f t) (@lem4038645 _102126 _102133 s P f t n)). Qed.
Lemma lem4038684 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4038685 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term227 _102126 _102133 s P f t n) = (term227 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4038684) (@lem4038683 _102126 _102133 s P f t n)). Qed.
Lemma lem4038686 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4038687 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term276 _102126 _102133 s P f t n) = (term276 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4038686) (@lem4038685 _102126 _102133 s P f t n)). Qed.
Lemma lem4038688 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term277 _102126 _102133 A B s P f t n) = (term277 _102126 _102133 A B s P f t n).
Proof. exact (MK_COMB (@lem4038687 _102126 _102133 s P f t n) (@lem4038606 _102126 _102133 A B)). Qed.
Lemma lem4038689 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term279 _102126 _102133 A B P f t n) = (term279 _102126 _102133 A B P f t n).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4038688 _102126 _102133 A B s P f t n)). Qed.
Lemma lem4038690 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038691 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term281 _102126 _102133 A B P f t n) = (term281 _102126 _102133 A B P f t n).
Proof. exact (MK_COMB (@lem4038690 _102126) (@lem4038689 _102126 _102133 A B P f t n)). Qed.
Lemma lem4038692 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term283 _102126 _102133 A B f t n) = (term283 _102126 _102133 A B f t n).
Proof. exact (fun_ext (fun P : type686 _102133 => @lem4038691 _102126 _102133 A B P f t n)). Qed.
Lemma lem4038693 {_102133 : Type'} : (@all ((_102133 -> Prop) -> Prop)) = (@all ((_102133 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_102133 -> Prop) -> Prop))). Qed.
Lemma lem4038694 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term285 _102126 _102133 A B f t n) = (term285 _102126 _102133 A B f t n).
Proof. exact (MK_COMB (@lem4038693 _102133) (@lem4038692 _102126 _102133 A B f t n)). Qed.
Lemma lem4038695 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : (term287 _102126 _102133 A B t n) = (term287 _102126 _102133 A B t n).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4038694 _102126 _102133 A B f t n)). Qed.
Lemma lem4038696 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4038697 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : (term289 _102126 _102133 A B t n) = (term289 _102126 _102133 A B t n).
Proof. exact (MK_COMB (@lem4038696 _102126 _102133) (@lem4038695 _102126 _102133 A B t n)). Qed.
Lemma lem4038698 {_102126 _102133 A B : Type'} (n : nat) : (term291 _102126 _102133 A B n) = (term291 _102126 _102133 A B n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4038697 _102126 _102133 A B t n)). Qed.
Lemma lem4038699 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4038700 {_102126 _102133 A B : Type'} (n : nat) : (term293 _102126 _102133 A B n) = (term293 _102126 _102133 A B n).
Proof. exact (MK_COMB (@lem4038699 _102126) (@lem4038698 _102126 _102133 A B n)). Qed.
Lemma lem4038701 {_102126 _102133 A B : Type'} : (term295 _102126 _102133 A B) = (term295 _102126 _102133 A B).
Proof. exact (fun_ext (fun n : nat => @lem4038700 _102126 _102133 A B n)). Qed.
Lemma lem4038702 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4038703 {_102126 _102133 A B : Type'} : (term297 _102126 _102133 A B) = (term297 _102126 _102133 A B).
Proof. exact (MK_COMB (@lem4038702) (@lem4038701 _102126 _102133 A B)). Qed.
Lemma lem4039304 {_102126 _102133 A B : Type'} : (term296 _102126 _102133 A B) = (term297 _102126 _102133 A B).
Proof. exact (TRANS (@lem4038067 _102126 _102133 A B) (@lem4038703 _102126 _102133 A B)). Qed.
Lemma lem4039305 {_102126 _102133 A B : Type'} : (term297 _102126 _102133 A B) = (term296 _102126 _102133 A B).
Proof. exact (SYM (@lem4039304 _102126 _102133 A B)). Qed.
Lemma lem4039306 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term227 _102126 _102133 s P f t n.
Proof. exact (h1). Qed.
Lemma lem4039307 {_102126 _102133 : Type'} (h1 : term230 _102126 _102133) : term230 _102126 _102133.
Proof. exact (h1). Qed.
Lemma lem4039308 {_102126 B : Type'} (h1 : term230 _102126 B) : term230 _102126 B.
Proof. exact (h1). Qed.
Lemma lem4039309 {_102133 B : Type'} (h1 : term230 _102133 B) : term230 _102133 B.
Proof. exact (h1). Qed.
Lemma lem4039310 {_102126 A : Type'} (h1 : term231 _102126 A) : term231 _102126 A.
Proof. exact (h1). Qed.
Lemma lem4039311 {_102133 A : Type'} (h1 : term231 _102133 A) : term231 _102133 A.
Proof. exact (h1). Qed.
Lemma lem4039312 {A : Type'} (h1 : term232 A) : term232 A.
Proof. exact (h1). Qed.
Lemma lem4039313 {A B : Type'} (h1 : term230 A B) : term230 A B.
Proof. exact (h1). Qed.
Lemma lem4039314 {A : Type'} (h1 : term233 A) : term233 A.
Proof. exact (h1). Qed.
Lemma lem4039315 {B : Type'} (h1 : term232 B) : term232 B.
Proof. exact (h1). Qed.
Lemma lem4039316 {B : Type'} (h1 : term234 B) : term234 B.
Proof. exact (h1). Qed.
Lemma lem4039317 {_102126 _102133 : Type'} (h1 : term228 _102126 _102133) : term228 _102126 _102133.
Proof. exact (h1). Qed.
Lemma lem4039318 {_102126 B : Type'} (h1 : term228 _102126 B) : term228 _102126 B.
Proof. exact (h1). Qed.
Lemma lem4039319 {_102133 B : Type'} (h1 : term228 _102133 B) : term228 _102133 B.
Proof. exact (h1). Qed.
Lemma lem4039320 {_102126 A : Type'} (h1 : term229 _102126 A) : term229 _102126 A.
Proof. exact (h1). Qed.
Lemma lem4039321 {_102133 A : Type'} (h1 : term229 _102133 A) : term229 _102133 A.
Proof. exact (h1). Qed.
Lemma lem4039329 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term378 _102126 x y t) = (term379 _102126 x y t).
Proof. exact (@lem17045 (@IN _102126 x t) (@IN _102126 y t)). Qed.
Lemma lem4039344 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (((f x) = (f y)) = (x = y)) = (term380 _102126 _102133 f x y).
Proof. exact (@lem17784 ((f x) = (f y)) (x = y)). Qed.
Lemma lem4039345 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039346 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term381 _102126 x y t) = (term382 _102126 x y t).
Proof. exact (MK_COMB (@lem4039345) (@lem4039329 _102126 x y t)). Qed.
Lemma lem4039347 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term383 _102126 _102133 t f x y) = (term384 _102126 _102133 t f x y).
Proof. exact (MK_COMB (@lem4039346 _102126 x y t) (@lem4039344 _102126 _102133 f x y)). Qed.
Lemma lem4039348 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term383 _102126 _102133 t f x y).
Proof. exact (@lem17265 (term385 _102126 x y t) (((f x) = (f y)) = (x = y))). Qed.
Lemma lem4039349 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term384 _102126 _102133 t f x y).
Proof. exact (TRANS (@lem4039348 _102126 _102133 t f x y) (@lem4039347 _102126 _102133 t f x y)). Qed.
Lemma lem4039350 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term369 _102126 _102133 t f x) = (term386 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4039349 _102126 _102133 t f x y)). Qed.
Lemma lem4039351 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4039352 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term370 _102126 _102133 t f x) = (term387 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4039351 _102126) (@lem4039350 _102126 _102133 t f x)). Qed.
Lemma lem4039353 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term371 _102126 _102133 t f) = (term388 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4039352 _102126 _102133 t f x)). Qed.
Lemma lem4039354 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4039355 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term198 _102126 _102133 t f) = (term389 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4039354 _102126) (@lem4039353 _102126 _102133 t f)). Qed.
Lemma lem4039357 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term190 _102126 t s).
Proof. exact (eq_refl (term190 _102126 t s)). Qed.
Lemma lem4039358 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term200 _102126 _102133 s t f) = (term390 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4039357 _102126 t s) (@lem4039355 _102126 _102133 t f)). Qed.
Lemma lem4039359 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term201 _102126 _102133 P f t).
Proof. exact (eq_refl (term201 _102126 _102133 P f t)). Qed.
Lemma lem4039360 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4039361 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term372 _102126 _102133 s t f) = (term391 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4039360) (@lem4039358 _102126 _102133 s t f)). Qed.
Lemma lem4039362 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term204 _102126 _102133 s P f t) = (term392 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039361 _102126 _102133 s t f) (@lem4039359 _102126 _102133 P f t)). Qed.
Lemma lem4039377 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term393 _102126 _102133 f t) = (term394 _102126 _102133 f t).
Proof. exact (@lem17646 (term205 _102126 _102133 f t) (@FINITE _102126 t)). Qed.
Lemma lem4039378 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4039379 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term215 _102126 _102133 s P f t) = (term395 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039378) (@lem4039362 _102126 _102133 s P f t)). Qed.
Lemma lem4039380 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term396 _102126 _102133 s P f t) = (term397 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039379 _102126 _102133 s P f t) (@lem4039377 _102126 _102133 f t)). Qed.
Lemma lem4039381 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term398 _102126 _102133 s P f t) = (term396 _102126 _102133 s P f t).
Proof. exact (@lem17362 (term204 _102126 _102133 s P f t) ((term205 _102126 _102133 f t) = (@FINITE _102126 t))). Qed.
Lemma lem4039382 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term398 _102126 _102133 s P f t) = (term397 _102126 _102133 s P f t).
Proof. exact (TRANS (@lem4039381 _102126 _102133 s P f t) (@lem4039380 _102126 _102133 s P f t)). Qed.
Lemma lem4039390 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term378 _102126 x y t) = (term379 _102126 x y t).
Proof. exact (@lem17045 (@IN _102126 x t) (@IN _102126 y t)). Qed.
Lemma lem4039405 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (((f x) = (f y)) = (x = y)) = (term380 _102126 _102133 f x y).
Proof. exact (@lem17784 ((f x) = (f y)) (x = y)). Qed.
Lemma lem4039406 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039407 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term381 _102126 x y t) = (term382 _102126 x y t).
Proof. exact (MK_COMB (@lem4039406) (@lem4039390 _102126 x y t)). Qed.
Lemma lem4039408 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term383 _102126 _102133 t f x y) = (term384 _102126 _102133 t f x y).
Proof. exact (MK_COMB (@lem4039407 _102126 x y t) (@lem4039405 _102126 _102133 f x y)). Qed.
Lemma lem4039409 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term383 _102126 _102133 t f x y).
Proof. exact (@lem17265 (term385 _102126 x y t) (((f x) = (f y)) = (x = y))). Qed.
Lemma lem4039410 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term368 _102126 _102133 t f x y) = (term384 _102126 _102133 t f x y).
Proof. exact (TRANS (@lem4039409 _102126 _102133 t f x y) (@lem4039408 _102126 _102133 t f x y)). Qed.
Lemma lem4039411 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term369 _102126 _102133 t f x) = (term386 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4039410 _102126 _102133 t f x y)). Qed.
Lemma lem4039412 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4039413 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term370 _102126 _102133 t f x) = (term387 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4039412 _102126) (@lem4039411 _102126 _102133 t f x)). Qed.
Lemma lem4039414 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term371 _102126 _102133 t f) = (term388 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4039413 _102126 _102133 t f x)). Qed.
Lemma lem4039415 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4039416 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term198 _102126 _102133 t f) = (term389 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4039415 _102126) (@lem4039414 _102126 _102133 t f)). Qed.
Lemma lem4039418 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term190 _102126 t s).
Proof. exact (eq_refl (term190 _102126 t s)). Qed.
Lemma lem4039419 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term200 _102126 _102133 s t f) = (term390 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4039418 _102126 t s) (@lem4039416 _102126 _102133 t f)). Qed.
Lemma lem4039420 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term201 _102126 _102133 P f t).
Proof. exact (eq_refl (term201 _102126 _102133 P f t)). Qed.
Lemma lem4039421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4039422 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term372 _102126 _102133 s t f) = (term391 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4039421) (@lem4039419 _102126 _102133 s t f)). Qed.
Lemma lem4039423 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term204 _102126 _102133 s P f t) = (term392 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039422 _102126 _102133 s t f) (@lem4039420 _102126 _102133 P f t)). Qed.
Lemma lem4039424 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@FINITE _102126 t).
Proof. exact (eq_refl (@FINITE _102126 t)). Qed.
Lemma lem4039425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4039426 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term215 _102126 _102133 s P f t) = (term395 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039425) (@lem4039423 _102126 _102133 s P f t)). Qed.
Lemma lem4039427 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term217 _102126 _102133 s P f t) = (term399 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039426 _102126 _102133 s P f t) (@lem4039424 _102126 t)). Qed.
Lemma lem4039442 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term400 _102126 _102133 f t n) = (term401 _102126 _102133 f t n).
Proof. exact (@lem17646 (term206 _102126 _102133 f t n) (term146 _102126 t n)). Qed.
Lemma lem4039443 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4039444 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term219 _102126 _102133 s P f t) = (term402 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039443) (@lem4039427 _102126 _102133 s P f t)). Qed.
Lemma lem4039445 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term403 _102126 _102133 s P f t n) = (term404 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4039444 _102126 _102133 s P f t) (@lem4039442 _102126 _102133 f t n)). Qed.
Lemma lem4039446 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term405 _102126 _102133 s P f t n) = (term403 _102126 _102133 s P f t n).
Proof. exact (@lem17362 (term217 _102126 _102133 s P f t) ((term206 _102126 _102133 f t n) = (term146 _102126 t n))). Qed.
Lemma lem4039447 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term405 _102126 _102133 s P f t n) = (term404 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4039446 _102126 _102133 s P f t n) (@lem4039445 _102126 _102133 s P f t n)). Qed.
Lemma lem4039448 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039449 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term406 _102126 _102133 s P f t) = (term407 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4039448) (@lem4039382 _102126 _102133 s P f t)). Qed.
Lemma lem4039450 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term408 _102126 _102133 s P f t n) = (term409 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4039449 _102126 _102133 s P f t) (@lem4039447 _102126 _102133 s P f t n)). Qed.
Lemma lem4039451 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term227 _102126 _102133 s P f t n) = (term408 _102126 _102133 s P f t n).
Proof. exact (@lem17045 (term376 _102126 _102133 s P f t) (term374 _102126 _102133 s P f t n)). Qed.
Lemma lem4039560 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term227 _102126 _102133 s P f t n) = (term409 _102126 _102133 s P f t n).
Proof. exact (TRANS (@lem4039451 _102126 _102133 s P f t n) (@lem4039450 _102126 _102133 s P f t n)). Qed.
Lemma lem4039561 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term409 _102126 _102133 s P f t n.
Proof. exact (EQ_MP (@lem4039560 _102126 _102133 s P f t n) (@lem4039306 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4039576 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term410 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (@lem17362 (term412 _102126 _102133 s x f y) (x = y)). Qed.
Lemma lem4039577 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4039578 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term415 _102126 _102133 s f x) = (term416 _102126 _102133 s f x).
Proof. exact (@lem4039577 _102126 (term313 _102126 _102133 s f x)). Qed.
Lemma lem4039579 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term417 _102126 _102133 s f x y) = (term312 _102126 _102133 s f x y).
Proof. exact (eq_refl (term417 _102126 _102133 s f x y)). Qed.
Lemma lem4039580 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4039581 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term418 _102126 _102133 s f x y) = (term410 _102126 _102133 s f x y).
Proof. exact (MK_COMB (@lem4039580) (@lem4039579 _102126 _102133 s f x y)). Qed.
Lemma lem4039582 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term418 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (TRANS (@lem4039581 _102126 _102133 s f x y) (@lem4039576 _102126 _102133 s f x y)). Qed.
Lemma lem4039583 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term419 _102126 _102133 s f x) = (term420 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4039582 _102126 _102133 s f x y)). Qed.
Lemma lem4039584 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039585 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term416 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4039584 _102126) (@lem4039583 _102126 _102133 s f x)). Qed.
Lemma lem4039586 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term415 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (TRANS (@lem4039578 _102126 _102133 s f x) (@lem4039585 _102126 _102133 s f x)). Qed.
Lemma lem4039587 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4039588 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term422 _102126 _102133 s f) = (term423 _102126 _102133 s f).
Proof. exact (@lem4039587 _102126 (term315 _102126 _102133 s f)). Qed.
Lemma lem4039589 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term424 _102126 _102133 s f x) = (term314 _102126 _102133 s f x).
Proof. exact (eq_refl (term424 _102126 _102133 s f x)). Qed.
Lemma lem4039590 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4039591 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term425 _102126 _102133 s f x) = (term415 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4039590) (@lem4039589 _102126 _102133 s f x)). Qed.
Lemma lem4039592 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term425 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (TRANS (@lem4039591 _102126 _102133 s f x) (@lem4039586 _102126 _102133 s f x)). Qed.
Lemma lem4039593 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term426 _102126 _102133 s f) = (term427 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4039592 _102126 _102133 s f x)). Qed.
Lemma lem4039594 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039595 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term423 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4039594 _102126) (@lem4039593 _102126 _102133 s f)). Qed.
Lemma lem4039596 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term422 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (TRANS (@lem4039588 _102126 _102133 s f) (@lem4039595 _102126 _102133 s f)). Qed.
Lemma lem4039611 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term205 _102126 _102133 f s) = (@FINITE _102126 s)) = (term429 _102126 _102133 f s).
Proof. exact (@lem17784 (term205 _102126 _102133 f s) (@FINITE _102126 s)). Qed.
Lemma lem4039612 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039613 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term430 _102126 _102133 s f) = (term431 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4039612) (@lem4039596 _102126 _102133 s f)). Qed.
Lemma lem4039614 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term432 _102126 _102133 f s) = (term433 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039613 _102126 _102133 s f) (@lem4039611 _102126 _102133 f s)). Qed.
Lemma lem4039615 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term358 _102126 _102133 f s) = (term432 _102126 _102133 f s).
Proof. exact (@lem17265 (term316 _102126 _102133 s f) ((term205 _102126 _102133 f s) = (@FINITE _102126 s))). Qed.
Lemma lem4039616 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term358 _102126 _102133 f s) = (term433 _102126 _102133 f s).
Proof. exact (TRANS (@lem4039615 _102126 _102133 f s) (@lem4039614 _102126 _102133 f s)). Qed.
Lemma lem4039617 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term359 _102126 _102133 f) = (term434 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039616 _102126 _102133 f s)). Qed.
Lemma lem4039618 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039619 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term360 _102126 _102133 f) = (term435 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039618 _102126) (@lem4039617 _102126 _102133 f)). Qed.
Lemma lem4039620 {_102126 _102133 : Type'} : (term361 _102126 _102133) = (term436 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039619 _102126 _102133 f)). Qed.
Lemma lem4039621 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039622 {_102126 _102133 : Type'} : (term230 _102126 _102133) = (term437 _102126 _102133).
Proof. exact (MK_COMB (@lem4039621 _102126 _102133) (@lem4039620 _102126 _102133)). Qed.
Lemma lem4039729 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4039730 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4039729 _102126 P Q). Qed.
Lemma lem4039731 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term440 _102126 _102133 f s) = (term441 _102126 _102133 f s).
Proof. exact (@lem4039730 _102126 (term427 _102126 _102133 s f) (term429 _102126 _102133 f s)). Qed.
Lemma lem4039732 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term442 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (eq_refl (term442 _102126 _102133 s f x)). Qed.
Lemma lem4039733 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term443 _102126 _102133 s f) = (term427 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4039732 _102126 _102133 s f x)). Qed.
Lemma lem4039734 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039735 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term444 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4039734 _102126) (@lem4039733 _102126 _102133 s f)). Qed.
Lemma lem4039736 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039737 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term445 _102126 _102133 s f) = (term431 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4039736) (@lem4039735 _102126 _102133 s f)). Qed.
Lemma lem4039738 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term429 _102126 _102133 f s) = (term429 _102126 _102133 f s).
Proof. exact (eq_refl (term429 _102126 _102133 f s)). Qed.
Lemma lem4039739 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term440 _102126 _102133 f s) = (term433 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039737 _102126 _102133 s f) (@lem4039738 _102126 _102133 f s)). Qed.
Lemma lem4039740 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039741 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term446 _102126 _102133 f s) = (term447 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039740) (@lem4039739 _102126 _102133 f s)). Qed.
Lemma lem4039742 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term442 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (eq_refl (term442 _102126 _102133 s f x)). Qed.
Lemma lem4039743 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039744 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term448 _102126 _102133 s f x) = (term449 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4039743) (@lem4039742 _102126 _102133 s f x)). Qed.
Lemma lem4039745 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term429 _102126 _102133 f s) = (term429 _102126 _102133 f s).
Proof. exact (eq_refl (term429 _102126 _102133 f s)). Qed.
Lemma lem4039746 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term450 _102126 _102133 x f s) = (term451 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4039744 _102126 _102133 s f x) (@lem4039745 _102126 _102133 f s)). Qed.
Lemma lem4039747 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term452 _102126 _102133 f s) = (term453 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4039746 _102126 _102133 x f s)). Qed.
Lemma lem4039748 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039749 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term441 _102126 _102133 f s) = (term454 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039748 _102126) (@lem4039747 _102126 _102133 f s)). Qed.
Lemma lem4039750 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term440 _102126 _102133 f s) = (term441 _102126 _102133 f s)) = ((term433 _102126 _102133 f s) = (term454 _102126 _102133 f s)).
Proof. exact (MK_COMB (@lem4039741 _102126 _102133 f s) (@lem4039749 _102126 _102133 f s)). Qed.
Lemma lem4039751 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term433 _102126 _102133 f s) = (term454 _102126 _102133 f s).
Proof. exact (EQ_MP (@lem4039750 _102126 _102133 f s) (@lem4039731 _102126 _102133 f s)). Qed.
Lemma lem4039753 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4039754 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4039753 _102126 P Q). Qed.
Lemma lem4039755 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term455 _102126 _102133 x f s) = (term456 _102126 _102133 x f s).
Proof. exact (@lem4039754 _102126 (term420 _102126 _102133 s f x) (term429 _102126 _102133 f s)). Qed.
Lemma lem4039756 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term457 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (eq_refl (term457 _102126 _102133 s f x y)). Qed.
Lemma lem4039757 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term458 _102126 _102133 s f x) = (term420 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4039756 _102126 _102133 s f x y)). Qed.
Lemma lem4039758 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039759 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term459 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4039758 _102126) (@lem4039757 _102126 _102133 s f x)). Qed.
Lemma lem4039760 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039761 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term460 _102126 _102133 s f x) = (term449 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4039760) (@lem4039759 _102126 _102133 s f x)). Qed.
Lemma lem4039762 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term429 _102126 _102133 f s) = (term429 _102126 _102133 f s).
Proof. exact (eq_refl (term429 _102126 _102133 f s)). Qed.
Lemma lem4039763 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term455 _102126 _102133 x f s) = (term451 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4039761 _102126 _102133 s f x) (@lem4039762 _102126 _102133 f s)). Qed.
Lemma lem4039764 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039765 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term461 _102126 _102133 x f s) = (term462 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4039764) (@lem4039763 _102126 _102133 x f s)). Qed.
Lemma lem4039766 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term457 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (eq_refl (term457 _102126 _102133 s f x y)). Qed.
Lemma lem4039767 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039768 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term463 _102126 _102133 s f x y) = (term464 _102126 _102133 s f x y).
Proof. exact (MK_COMB (@lem4039767) (@lem4039766 _102126 _102133 s f x y)). Qed.
Lemma lem4039769 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term429 _102126 _102133 f s) = (term429 _102126 _102133 f s).
Proof. exact (eq_refl (term429 _102126 _102133 f s)). Qed.
Lemma lem4039770 {_102126 _102133 : Type'} (x : _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term465 _102126 _102133 x y f s) = (term466 _102126 _102133 x y f s).
Proof. exact (MK_COMB (@lem4039768 _102126 _102133 s f x y) (@lem4039769 _102126 _102133 f s)). Qed.
Lemma lem4039771 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term467 _102126 _102133 x f s) = (term468 _102126 _102133 x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4039770 _102126 _102133 x y f s)). Qed.
Lemma lem4039772 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039773 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term456 _102126 _102133 x f s) = (term469 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4039772 _102126) (@lem4039771 _102126 _102133 x f s)). Qed.
Lemma lem4039774 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term455 _102126 _102133 x f s) = (term456 _102126 _102133 x f s)) = ((term451 _102126 _102133 x f s) = (term469 _102126 _102133 x f s)).
Proof. exact (MK_COMB (@lem4039765 _102126 _102133 x f s) (@lem4039773 _102126 _102133 x f s)). Qed.
Lemma lem4039775 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term451 _102126 _102133 x f s) = (term469 _102126 _102133 x f s).
Proof. exact (EQ_MP (@lem4039774 _102126 _102133 x f s) (@lem4039755 _102126 _102133 x f s)). Qed.
Lemma lem4039776 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term453 _102126 _102133 f s) = (term470 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4039775 _102126 _102133 x f s)). Qed.
Lemma lem4039777 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039778 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term454 _102126 _102133 f s) = (term471 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039777 _102126) (@lem4039776 _102126 _102133 f s)). Qed.
Lemma lem4039779 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term433 _102126 _102133 f s) = (term471 _102126 _102133 f s).
Proof. exact (TRANS (@lem4039751 _102126 _102133 f s) (@lem4039778 _102126 _102133 f s)). Qed.
Lemma lem4039780 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term434 _102126 _102133 f) = (term472 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039779 _102126 _102133 f s)). Qed.
Lemma lem4039781 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039782 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term435 _102126 _102133 f) = (term473 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039781 _102126) (@lem4039780 _102126 _102133 f)). Qed.
Lemma lem4039784 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4039785 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4039784 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4039786 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term478 _102126 _102133 f) = (term479 _102126 _102133 f).
Proof. exact (@lem4039785 _102126 (term480 _102126 _102133 f)). Qed.
Lemma lem4039787 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term481 _102126 _102133 f s) = (term470 _102126 _102133 f s).
Proof. exact (eq_refl (term481 _102126 _102133 f s)). Qed.
Lemma lem4039788 {_102126 : Type'} (x : _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4039789 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (x : _102126) : (term482 _102126 _102133 f s x) = (term483 _102126 _102133 f s x).
Proof. exact (MK_COMB (@lem4039787 _102126 _102133 f s) (@lem4039788 _102126 x)). Qed.
Lemma lem4039790 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term483 _102126 _102133 f s x) = (term469 _102126 _102133 x f s).
Proof. exact (eq_refl (term483 _102126 _102133 f s x)). Qed.
Lemma lem4039791 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term482 _102126 _102133 f s x) = (term469 _102126 _102133 x f s).
Proof. exact (TRANS (@lem4039789 _102126 _102133 f s x) (@lem4039790 _102126 _102133 x f s)). Qed.
Lemma lem4039792 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term484 _102126 _102133 f s) = (term470 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4039791 _102126 _102133 x f s)). Qed.
Lemma lem4039793 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039794 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term485 _102126 _102133 f s) = (term471 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4039793 _102126) (@lem4039792 _102126 _102133 f s)). Qed.
Lemma lem4039795 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term486 _102126 _102133 f) = (term472 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039794 _102126 _102133 f s)). Qed.
Lemma lem4039796 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039797 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term478 _102126 _102133 f) = (term473 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039796 _102126) (@lem4039795 _102126 _102133 f)). Qed.
Lemma lem4039798 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039799 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term487 _102126 _102133 f) = (term488 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039798) (@lem4039797 _102126 _102133 f)). Qed.
Lemma lem4039800 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term481 _102126 _102133 f s) = (term470 _102126 _102133 f s).
Proof. exact (eq_refl (term481 _102126 _102133 f s)). Qed.
Lemma lem4039801 {_102126 : Type'} (x : type684 _102126) (s : _102126 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4039802 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : type684 _102126) (s : _102126 -> Prop) : (term489 _102126 _102133 f x s) = (term490 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4039800 _102126 _102133 f s) (@lem4039801 _102126 x s)). Qed.
Lemma lem4039803 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term490 _102126 _102133 f x s) = (term491 _102126 _102133 x f s).
Proof. exact (eq_refl (term490 _102126 _102133 f x s)). Qed.
Lemma lem4039804 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term489 _102126 _102133 f x s) = (term491 _102126 _102133 x f s).
Proof. exact (TRANS (@lem4039802 _102126 _102133 f x s) (@lem4039803 _102126 _102133 x f s)). Qed.
Lemma lem4039805 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term492 _102126 _102133 f x) = (term493 _102126 _102133 x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039804 _102126 _102133 x f s)). Qed.
Lemma lem4039806 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039807 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term494 _102126 _102133 f x) = (term495 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039806 _102126) (@lem4039805 _102126 _102133 x f)). Qed.
Lemma lem4039808 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term496 _102126 _102133 f) = (term497 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4039807 _102126 _102133 x f)). Qed.
Lemma lem4039809 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039810 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term479 _102126 _102133 f) = (term498 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039809 _102126) (@lem4039808 _102126 _102133 f)). Qed.
Lemma lem4039811 {_102126 _102133 : Type'} (f : _102126 -> _102133) : ((term478 _102126 _102133 f) = (term479 _102126 _102133 f)) = ((term473 _102126 _102133 f) = (term498 _102126 _102133 f)).
Proof. exact (MK_COMB (@lem4039799 _102126 _102133 f) (@lem4039810 _102126 _102133 f)). Qed.
Lemma lem4039812 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term473 _102126 _102133 f) = (term498 _102126 _102133 f).
Proof. exact (EQ_MP (@lem4039811 _102126 _102133 f) (@lem4039786 _102126 _102133 f)). Qed.
Lemma lem4039814 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4039815 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4039814 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4039816 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term499 _102126 _102133 x f) = (term500 _102126 _102133 x f).
Proof. exact (@lem4039815 _102126 (term501 _102126 _102133 x f)). Qed.
Lemma lem4039817 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term502 _102126 _102133 x f s) = (term503 _102126 _102133 x f s).
Proof. exact (eq_refl (term502 _102126 _102133 x f s)). Qed.
Lemma lem4039818 {_102126 : Type'} (y : _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4039819 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) (y : _102126) : (term504 _102126 _102133 x f s y) = (term505 _102126 _102133 x f s y).
Proof. exact (MK_COMB (@lem4039817 _102126 _102133 x f s) (@lem4039818 _102126 y)). Qed.
Lemma lem4039820 {_102126 _102133 : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term505 _102126 _102133 x f s y) = (term506 _102126 _102133 x y f s).
Proof. exact (eq_refl (term505 _102126 _102133 x f s y)). Qed.
Lemma lem4039821 {_102126 _102133 : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term504 _102126 _102133 x f s y) = (term506 _102126 _102133 x y f s).
Proof. exact (TRANS (@lem4039819 _102126 _102133 x f s y) (@lem4039820 _102126 _102133 x y f s)). Qed.
Lemma lem4039822 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term507 _102126 _102133 x f s) = (term503 _102126 _102133 x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4039821 _102126 _102133 x y f s)). Qed.
Lemma lem4039823 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039824 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term508 _102126 _102133 x f s) = (term491 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4039823 _102126) (@lem4039822 _102126 _102133 x f s)). Qed.
Lemma lem4039825 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term509 _102126 _102133 x f) = (term493 _102126 _102133 x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039824 _102126 _102133 x f s)). Qed.
Lemma lem4039826 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039827 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term499 _102126 _102133 x f) = (term495 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039826 _102126) (@lem4039825 _102126 _102133 x f)). Qed.
Lemma lem4039828 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039829 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term510 _102126 _102133 x f) = (term511 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039828) (@lem4039827 _102126 _102133 x f)). Qed.
Lemma lem4039830 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term502 _102126 _102133 x f s) = (term503 _102126 _102133 x f s).
Proof. exact (eq_refl (term502 _102126 _102133 x f s)). Qed.
Lemma lem4039831 {_102126 : Type'} (y : type684 _102126) (s : _102126 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4039832 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (y : type684 _102126) (s : _102126 -> Prop) : (term512 _102126 _102133 x f y s) = (term513 _102126 _102133 x f y s).
Proof. exact (MK_COMB (@lem4039830 _102126 _102133 x f s) (@lem4039831 _102126 y s)). Qed.
Lemma lem4039833 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term513 _102126 _102133 x f y s) = (term514 _102126 _102133 x y f s).
Proof. exact (eq_refl (term513 _102126 _102133 x f y s)). Qed.
Lemma lem4039834 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term512 _102126 _102133 x f y s) = (term514 _102126 _102133 x y f s).
Proof. exact (TRANS (@lem4039832 _102126 _102133 x f y s) (@lem4039833 _102126 _102133 x y f s)). Qed.
Lemma lem4039835 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) : (term515 _102126 _102133 x f y) = (term516 _102126 _102133 x y f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039834 _102126 _102133 x y f s)). Qed.
Lemma lem4039836 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039837 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) : (term517 _102126 _102133 x f y) = (term518 _102126 _102133 x y f).
Proof. exact (MK_COMB (@lem4039836 _102126) (@lem4039835 _102126 _102133 x y f)). Qed.
Lemma lem4039838 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term519 _102126 _102133 x f) = (term520 _102126 _102133 x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4039837 _102126 _102133 x y f)). Qed.
Lemma lem4039839 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039840 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term500 _102126 _102133 x f) = (term521 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039839 _102126) (@lem4039838 _102126 _102133 x f)). Qed.
Lemma lem4039841 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : ((term499 _102126 _102133 x f) = (term500 _102126 _102133 x f)) = ((term495 _102126 _102133 x f) = (term521 _102126 _102133 x f)).
Proof. exact (MK_COMB (@lem4039829 _102126 _102133 x f) (@lem4039840 _102126 _102133 x f)). Qed.
Lemma lem4039842 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term495 _102126 _102133 x f) = (term521 _102126 _102133 x f).
Proof. exact (EQ_MP (@lem4039841 _102126 _102133 x f) (@lem4039816 _102126 _102133 x f)). Qed.
Lemma lem4039843 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term497 _102126 _102133 f) = (term522 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4039842 _102126 _102133 x f)). Qed.
Lemma lem4039844 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039845 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term498 _102126 _102133 f) = (term523 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039844 _102126) (@lem4039843 _102126 _102133 f)). Qed.
Lemma lem4039846 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term473 _102126 _102133 f) = (term523 _102126 _102133 f).
Proof. exact (TRANS (@lem4039812 _102126 _102133 f) (@lem4039845 _102126 _102133 f)). Qed.
Lemma lem4039847 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term435 _102126 _102133 f) = (term523 _102126 _102133 f).
Proof. exact (TRANS (@lem4039782 _102126 _102133 f) (@lem4039846 _102126 _102133 f)). Qed.
Lemma lem4039848 {_102126 _102133 : Type'} : (term436 _102126 _102133) = (term524 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039847 _102126 _102133 f)). Qed.
Lemma lem4039849 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039850 {_102126 _102133 : Type'} : (term437 _102126 _102133) = (term525 _102126 _102133).
Proof. exact (MK_COMB (@lem4039849 _102126 _102133) (@lem4039848 _102126 _102133)). Qed.
Lemma lem4039852 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4039853 {_102126 _102133 : Type'} (P : type503 _102126 _102133) : (term526 _102126 _102133 P) = (term527 _102126 _102133 P).
Proof. exact (@lem4039852 (_102126 -> _102133) (type684 _102126) P). Qed.
Lemma lem4039854 {_102126 _102133 : Type'} : (term528 _102126 _102133) = (term529 _102126 _102133).
Proof. exact (@lem4039853 _102126 _102133 (term530 _102126 _102133)). Qed.
Lemma lem4039855 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term531 _102126 _102133 f) = (term522 _102126 _102133 f).
Proof. exact (eq_refl (term531 _102126 _102133 f)). Qed.
Lemma lem4039856 {_102126 : Type'} (x : type684 _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4039857 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : type684 _102126) : (term532 _102126 _102133 f x) = (term533 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4039855 _102126 _102133 f) (@lem4039856 _102126 x)). Qed.
Lemma lem4039858 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term533 _102126 _102133 f x) = (term521 _102126 _102133 x f).
Proof. exact (eq_refl (term533 _102126 _102133 f x)). Qed.
Lemma lem4039859 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term532 _102126 _102133 f x) = (term521 _102126 _102133 x f).
Proof. exact (TRANS (@lem4039857 _102126 _102133 f x) (@lem4039858 _102126 _102133 x f)). Qed.
Lemma lem4039860 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term534 _102126 _102133 f) = (term522 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4039859 _102126 _102133 x f)). Qed.
Lemma lem4039861 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039862 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term535 _102126 _102133 f) = (term523 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4039861 _102126) (@lem4039860 _102126 _102133 f)). Qed.
Lemma lem4039863 {_102126 _102133 : Type'} : (term536 _102126 _102133) = (term524 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039862 _102126 _102133 f)). Qed.
Lemma lem4039864 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039865 {_102126 _102133 : Type'} : (term528 _102126 _102133) = (term525 _102126 _102133).
Proof. exact (MK_COMB (@lem4039864 _102126 _102133) (@lem4039863 _102126 _102133)). Qed.
Lemma lem4039866 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039867 {_102126 _102133 : Type'} : (term537 _102126 _102133) = (term538 _102126 _102133).
Proof. exact (MK_COMB (@lem4039866) (@lem4039865 _102126 _102133)). Qed.
Lemma lem4039868 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term531 _102126 _102133 f) = (term522 _102126 _102133 f).
Proof. exact (eq_refl (term531 _102126 _102133 f)). Qed.
Lemma lem4039869 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4039870 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term539 _102126 _102133 x f) = (term540 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039868 _102126 _102133 f) (@lem4039869 _102126 _102133 x f)). Qed.
Lemma lem4039871 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term540 _102126 _102133 x f) = (term541 _102126 _102133 x f).
Proof. exact (eq_refl (term540 _102126 _102133 x f)). Qed.
Lemma lem4039872 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term539 _102126 _102133 x f) = (term541 _102126 _102133 x f).
Proof. exact (TRANS (@lem4039870 _102126 _102133 x f) (@lem4039871 _102126 _102133 x f)). Qed.
Lemma lem4039873 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term542 _102126 _102133 x) = (term543 _102126 _102133 x).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039872 _102126 _102133 x f)). Qed.
Lemma lem4039874 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039875 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term544 _102126 _102133 x) = (term545 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4039874 _102126 _102133) (@lem4039873 _102126 _102133 x)). Qed.
Lemma lem4039876 {_102126 _102133 : Type'} : (term546 _102126 _102133) = (term547 _102126 _102133).
Proof. exact (fun_ext (fun x : type529 _102126 _102133 => @lem4039875 _102126 _102133 x)). Qed.
Lemma lem4039877 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039878 {_102126 _102133 : Type'} : (term529 _102126 _102133) = (term548 _102126 _102133).
Proof. exact (MK_COMB (@lem4039877 _102126 _102133) (@lem4039876 _102126 _102133)). Qed.
Lemma lem4039879 {_102126 _102133 : Type'} : ((term528 _102126 _102133) = (term529 _102126 _102133)) = ((term525 _102126 _102133) = (term548 _102126 _102133)).
Proof. exact (MK_COMB (@lem4039867 _102126 _102133) (@lem4039878 _102126 _102133)). Qed.
Lemma lem4039880 {_102126 _102133 : Type'} : (term525 _102126 _102133) = (term548 _102126 _102133).
Proof. exact (EQ_MP (@lem4039879 _102126 _102133) (@lem4039854 _102126 _102133)). Qed.
Lemma lem4039882 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4039883 {_102126 _102133 : Type'} (P : type503 _102126 _102133) : (term526 _102126 _102133 P) = (term527 _102126 _102133 P).
Proof. exact (@lem4039882 (_102126 -> _102133) (type684 _102126) P). Qed.
Lemma lem4039884 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term549 _102126 _102133 x) = (term550 _102126 _102133 x).
Proof. exact (@lem4039883 _102126 _102133 (term551 _102126 _102133 x)). Qed.
Lemma lem4039885 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term552 _102126 _102133 x f) = (term553 _102126 _102133 x f).
Proof. exact (eq_refl (term552 _102126 _102133 x f)). Qed.
Lemma lem4039886 {_102126 : Type'} (y : type684 _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4039887 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) (y : type684 _102126) : (term554 _102126 _102133 x f y) = (term555 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4039885 _102126 _102133 x f) (@lem4039886 _102126 y)). Qed.
Lemma lem4039888 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type684 _102126) (f : _102126 -> _102133) : (term555 _102126 _102133 x f y) = (term556 _102126 _102133 x y f).
Proof. exact (eq_refl (term555 _102126 _102133 x f y)). Qed.
Lemma lem4039889 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type684 _102126) (f : _102126 -> _102133) : (term554 _102126 _102133 x f y) = (term556 _102126 _102133 x y f).
Proof. exact (TRANS (@lem4039887 _102126 _102133 x f y) (@lem4039888 _102126 _102133 x y f)). Qed.
Lemma lem4039890 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term557 _102126 _102133 x f) = (term553 _102126 _102133 x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4039889 _102126 _102133 x y f)). Qed.
Lemma lem4039891 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039892 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term558 _102126 _102133 x f) = (term541 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4039891 _102126) (@lem4039890 _102126 _102133 x f)). Qed.
Lemma lem4039893 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term559 _102126 _102133 x) = (term543 _102126 _102133 x).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039892 _102126 _102133 x f)). Qed.
Lemma lem4039894 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039895 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term549 _102126 _102133 x) = (term545 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4039894 _102126 _102133) (@lem4039893 _102126 _102133 x)). Qed.
Lemma lem4039896 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4039897 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term560 _102126 _102133 x) = (term561 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4039896) (@lem4039895 _102126 _102133 x)). Qed.
Lemma lem4039898 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term552 _102126 _102133 x f) = (term553 _102126 _102133 x f).
Proof. exact (eq_refl (term552 _102126 _102133 x f)). Qed.
Lemma lem4039899 {_102126 _102133 : Type'} (y : type529 _102126 _102133) (f : _102126 -> _102133) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4039900 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term562 _102126 _102133 x y f) = (term563 _102126 _102133 x y f).
Proof. exact (MK_COMB (@lem4039898 _102126 _102133 x f) (@lem4039899 _102126 _102133 y f)). Qed.
Lemma lem4039901 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term563 _102126 _102133 x y f) = (term564 _102126 _102133 x y f).
Proof. exact (eq_refl (term563 _102126 _102133 x y f)). Qed.
Lemma lem4039902 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term562 _102126 _102133 x y f) = (term564 _102126 _102133 x y f).
Proof. exact (TRANS (@lem4039900 _102126 _102133 x y f) (@lem4039901 _102126 _102133 x y f)). Qed.
Lemma lem4039903 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) : (term565 _102126 _102133 x y) = (term566 _102126 _102133 x y).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4039902 _102126 _102133 x y f)). Qed.
Lemma lem4039904 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4039905 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) : (term567 _102126 _102133 x y) = (term568 _102126 _102133 x y).
Proof. exact (MK_COMB (@lem4039904 _102126 _102133) (@lem4039903 _102126 _102133 x y)). Qed.
Lemma lem4039906 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term569 _102126 _102133 x) = (term570 _102126 _102133 x).
Proof. exact (fun_ext (fun y : type529 _102126 _102133 => @lem4039905 _102126 _102133 x y)). Qed.
Lemma lem4039907 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039908 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term550 _102126 _102133 x) = (term571 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4039907 _102126 _102133) (@lem4039906 _102126 _102133 x)). Qed.
Lemma lem4039909 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : ((term549 _102126 _102133 x) = (term550 _102126 _102133 x)) = ((term545 _102126 _102133 x) = (term571 _102126 _102133 x)).
Proof. exact (MK_COMB (@lem4039897 _102126 _102133 x) (@lem4039908 _102126 _102133 x)). Qed.
Lemma lem4039910 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term545 _102126 _102133 x) = (term571 _102126 _102133 x).
Proof. exact (EQ_MP (@lem4039909 _102126 _102133 x) (@lem4039884 _102126 _102133 x)). Qed.
Lemma lem4039911 {_102126 _102133 : Type'} : (term547 _102126 _102133) = (term572 _102126 _102133).
Proof. exact (fun_ext (fun x : type529 _102126 _102133 => @lem4039910 _102126 _102133 x)). Qed.
Lemma lem4039912 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4039913 {_102126 _102133 : Type'} : (term548 _102126 _102133) = (term573 _102126 _102133).
Proof. exact (MK_COMB (@lem4039912 _102126 _102133) (@lem4039911 _102126 _102133)). Qed.
Lemma lem4039914 {_102126 _102133 : Type'} : (term525 _102126 _102133) = (term573 _102126 _102133).
Proof. exact (TRANS (@lem4039880 _102126 _102133) (@lem4039913 _102126 _102133)). Qed.
Lemma lem4039916 {_102126 _102133 : Type'} : (term437 _102126 _102133) = (term573 _102126 _102133).
Proof. exact (TRANS (@lem4039850 _102126 _102133) (@lem4039914 _102126 _102133)). Qed.
Lemma lem4039917 {_102126 _102133 : Type'} : (term230 _102126 _102133) = (term573 _102126 _102133).
Proof. exact (TRANS (@lem4039622 _102126 _102133) (@lem4039916 _102126 _102133)). Qed.
Lemma lem4039918 {_102126 _102133 : Type'} (h1 : term230 _102126 _102133) : term573 _102126 _102133.
Proof. exact (EQ_MP (@lem4039917 _102126 _102133) (@lem4039307 _102126 _102133 h1)). Qed.
Lemma lem4039933 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term410 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (@lem17362 (term412 _102126 B s x f y) (x = y)). Qed.
Lemma lem4039934 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4039935 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term415 _102126 B s f x) = (term416 _102126 B s f x).
Proof. exact (@lem4039934 _102126 (term313 _102126 B s f x)). Qed.
Lemma lem4039936 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term417 _102126 B s f x y) = (term312 _102126 B s f x y).
Proof. exact (eq_refl (term417 _102126 B s f x y)). Qed.
Lemma lem4039937 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4039938 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term418 _102126 B s f x y) = (term410 _102126 B s f x y).
Proof. exact (MK_COMB (@lem4039937) (@lem4039936 _102126 B s f x y)). Qed.
Lemma lem4039939 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term418 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (TRANS (@lem4039938 _102126 B s f x y) (@lem4039933 _102126 B s f x y)). Qed.
Lemma lem4039940 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term419 _102126 B s f x) = (term420 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4039939 _102126 B s f x y)). Qed.
Lemma lem4039941 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039942 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term416 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (MK_COMB (@lem4039941 _102126) (@lem4039940 _102126 B s f x)). Qed.
Lemma lem4039943 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term415 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (TRANS (@lem4039935 _102126 B s f x) (@lem4039942 _102126 B s f x)). Qed.
Lemma lem4039944 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4039945 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term422 _102126 B s f) = (term423 _102126 B s f).
Proof. exact (@lem4039944 _102126 (term315 _102126 B s f)). Qed.
Lemma lem4039946 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term424 _102126 B s f x) = (term314 _102126 B s f x).
Proof. exact (eq_refl (term424 _102126 B s f x)). Qed.
Lemma lem4039947 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4039948 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term425 _102126 B s f x) = (term415 _102126 B s f x).
Proof. exact (MK_COMB (@lem4039947) (@lem4039946 _102126 B s f x)). Qed.
Lemma lem4039949 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term425 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (TRANS (@lem4039948 _102126 B s f x) (@lem4039943 _102126 B s f x)). Qed.
Lemma lem4039950 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term426 _102126 B s f) = (term427 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4039949 _102126 B s f x)). Qed.
Lemma lem4039951 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4039952 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term423 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (MK_COMB (@lem4039951 _102126) (@lem4039950 _102126 B s f)). Qed.
Lemma lem4039953 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term422 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (TRANS (@lem4039945 _102126 B s f) (@lem4039952 _102126 B s f)). Qed.
Lemma lem4039968 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term205 _102126 B f s) = (@FINITE _102126 s)) = (term429 _102126 B f s).
Proof. exact (@lem17784 (term205 _102126 B f s) (@FINITE _102126 s)). Qed.
Lemma lem4039969 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4039970 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term430 _102126 B s f) = (term431 _102126 B s f).
Proof. exact (MK_COMB (@lem4039969) (@lem4039953 _102126 B s f)). Qed.
Lemma lem4039971 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term432 _102126 B f s) = (term433 _102126 B f s).
Proof. exact (MK_COMB (@lem4039970 _102126 B s f) (@lem4039968 _102126 B f s)). Qed.
Lemma lem4039972 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term358 _102126 B f s) = (term432 _102126 B f s).
Proof. exact (@lem17265 (term316 _102126 B s f) ((term205 _102126 B f s) = (@FINITE _102126 s))). Qed.
Lemma lem4039973 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term358 _102126 B f s) = (term433 _102126 B f s).
Proof. exact (TRANS (@lem4039972 _102126 B f s) (@lem4039971 _102126 B f s)). Qed.
Lemma lem4039974 {_102126 B : Type'} (f : _102126 -> B) : (term359 _102126 B f) = (term434 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4039973 _102126 B f s)). Qed.
Lemma lem4039975 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4039976 {_102126 B : Type'} (f : _102126 -> B) : (term360 _102126 B f) = (term435 _102126 B f).
Proof. exact (MK_COMB (@lem4039975 _102126) (@lem4039974 _102126 B f)). Qed.
Lemma lem4039977 {_102126 B : Type'} : (term361 _102126 B) = (term436 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4039976 _102126 B f)). Qed.
Lemma lem4039978 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4039979 {_102126 B : Type'} : (term230 _102126 B) = (term437 _102126 B).
Proof. exact (MK_COMB (@lem4039978 _102126 B) (@lem4039977 _102126 B)). Qed.
Lemma lem4040086 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040087 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4040086 _102126 P Q). Qed.
Lemma lem4040088 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term440 _102126 B f s) = (term441 _102126 B f s).
Proof. exact (@lem4040087 _102126 (term427 _102126 B s f) (term429 _102126 B f s)). Qed.
Lemma lem4040089 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term442 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (eq_refl (term442 _102126 B s f x)). Qed.
Lemma lem4040090 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term443 _102126 B s f) = (term427 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4040089 _102126 B s f x)). Qed.
Lemma lem4040091 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040092 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term444 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (MK_COMB (@lem4040091 _102126) (@lem4040090 _102126 B s f)). Qed.
Lemma lem4040093 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040094 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term445 _102126 B s f) = (term431 _102126 B s f).
Proof. exact (MK_COMB (@lem4040093) (@lem4040092 _102126 B s f)). Qed.
Lemma lem4040095 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term429 _102126 B f s) = (term429 _102126 B f s).
Proof. exact (eq_refl (term429 _102126 B f s)). Qed.
Lemma lem4040096 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term440 _102126 B f s) = (term433 _102126 B f s).
Proof. exact (MK_COMB (@lem4040094 _102126 B s f) (@lem4040095 _102126 B f s)). Qed.
Lemma lem4040097 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040098 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term446 _102126 B f s) = (term447 _102126 B f s).
Proof. exact (MK_COMB (@lem4040097) (@lem4040096 _102126 B f s)). Qed.
Lemma lem4040099 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term442 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (eq_refl (term442 _102126 B s f x)). Qed.
Lemma lem4040100 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040101 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term448 _102126 B s f x) = (term449 _102126 B s f x).
Proof. exact (MK_COMB (@lem4040100) (@lem4040099 _102126 B s f x)). Qed.
Lemma lem4040102 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term429 _102126 B f s) = (term429 _102126 B f s).
Proof. exact (eq_refl (term429 _102126 B f s)). Qed.
Lemma lem4040103 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term450 _102126 B x f s) = (term451 _102126 B x f s).
Proof. exact (MK_COMB (@lem4040101 _102126 B s f x) (@lem4040102 _102126 B f s)). Qed.
Lemma lem4040104 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term452 _102126 B f s) = (term453 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4040103 _102126 B x f s)). Qed.
Lemma lem4040105 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040106 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term441 _102126 B f s) = (term454 _102126 B f s).
Proof. exact (MK_COMB (@lem4040105 _102126) (@lem4040104 _102126 B f s)). Qed.
Lemma lem4040107 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term440 _102126 B f s) = (term441 _102126 B f s)) = ((term433 _102126 B f s) = (term454 _102126 B f s)).
Proof. exact (MK_COMB (@lem4040098 _102126 B f s) (@lem4040106 _102126 B f s)). Qed.
Lemma lem4040108 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term433 _102126 B f s) = (term454 _102126 B f s).
Proof. exact (EQ_MP (@lem4040107 _102126 B f s) (@lem4040088 _102126 B f s)). Qed.
Lemma lem4040110 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040111 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4040110 _102126 P Q). Qed.
Lemma lem4040112 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term455 _102126 B x f s) = (term456 _102126 B x f s).
Proof. exact (@lem4040111 _102126 (term420 _102126 B s f x) (term429 _102126 B f s)). Qed.
Lemma lem4040113 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term457 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (eq_refl (term457 _102126 B s f x y)). Qed.
Lemma lem4040114 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term458 _102126 B s f x) = (term420 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4040113 _102126 B s f x y)). Qed.
Lemma lem4040115 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040116 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term459 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (MK_COMB (@lem4040115 _102126) (@lem4040114 _102126 B s f x)). Qed.
Lemma lem4040117 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040118 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term460 _102126 B s f x) = (term449 _102126 B s f x).
Proof. exact (MK_COMB (@lem4040117) (@lem4040116 _102126 B s f x)). Qed.
Lemma lem4040119 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term429 _102126 B f s) = (term429 _102126 B f s).
Proof. exact (eq_refl (term429 _102126 B f s)). Qed.
Lemma lem4040120 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term455 _102126 B x f s) = (term451 _102126 B x f s).
Proof. exact (MK_COMB (@lem4040118 _102126 B s f x) (@lem4040119 _102126 B f s)). Qed.
Lemma lem4040121 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040122 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term461 _102126 B x f s) = (term462 _102126 B x f s).
Proof. exact (MK_COMB (@lem4040121) (@lem4040120 _102126 B x f s)). Qed.
Lemma lem4040123 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term457 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (eq_refl (term457 _102126 B s f x y)). Qed.
Lemma lem4040124 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040125 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term463 _102126 B s f x y) = (term464 _102126 B s f x y).
Proof. exact (MK_COMB (@lem4040124) (@lem4040123 _102126 B s f x y)). Qed.
Lemma lem4040126 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term429 _102126 B f s) = (term429 _102126 B f s).
Proof. exact (eq_refl (term429 _102126 B f s)). Qed.
Lemma lem4040127 {_102126 B : Type'} (x : _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term465 _102126 B x y f s) = (term466 _102126 B x y f s).
Proof. exact (MK_COMB (@lem4040125 _102126 B s f x y) (@lem4040126 _102126 B f s)). Qed.
Lemma lem4040128 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term467 _102126 B x f s) = (term468 _102126 B x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4040127 _102126 B x y f s)). Qed.
Lemma lem4040129 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040130 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term456 _102126 B x f s) = (term469 _102126 B x f s).
Proof. exact (MK_COMB (@lem4040129 _102126) (@lem4040128 _102126 B x f s)). Qed.
Lemma lem4040131 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : ((term455 _102126 B x f s) = (term456 _102126 B x f s)) = ((term451 _102126 B x f s) = (term469 _102126 B x f s)).
Proof. exact (MK_COMB (@lem4040122 _102126 B x f s) (@lem4040130 _102126 B x f s)). Qed.
Lemma lem4040132 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term451 _102126 B x f s) = (term469 _102126 B x f s).
Proof. exact (EQ_MP (@lem4040131 _102126 B x f s) (@lem4040112 _102126 B x f s)). Qed.
Lemma lem4040133 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term453 _102126 B f s) = (term470 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4040132 _102126 B x f s)). Qed.
Lemma lem4040134 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040135 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term454 _102126 B f s) = (term471 _102126 B f s).
Proof. exact (MK_COMB (@lem4040134 _102126) (@lem4040133 _102126 B f s)). Qed.
Lemma lem4040136 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term433 _102126 B f s) = (term471 _102126 B f s).
Proof. exact (TRANS (@lem4040108 _102126 B f s) (@lem4040135 _102126 B f s)). Qed.
Lemma lem4040137 {_102126 B : Type'} (f : _102126 -> B) : (term434 _102126 B f) = (term472 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4040136 _102126 B f s)). Qed.
Lemma lem4040138 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4040139 {_102126 B : Type'} (f : _102126 -> B) : (term435 _102126 B f) = (term473 _102126 B f).
Proof. exact (MK_COMB (@lem4040138 _102126) (@lem4040137 _102126 B f)). Qed.
Lemma lem4040141 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040142 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4040141 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4040143 {_102126 B : Type'} (f : _102126 -> B) : (term478 _102126 B f) = (term479 _102126 B f).
Proof. exact (@lem4040142 _102126 (term480 _102126 B f)). Qed.
Lemma lem4040144 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term481 _102126 B f s) = (term470 _102126 B f s).
Proof. exact (eq_refl (term481 _102126 B f s)). Qed.
Lemma lem4040145 {_102126 : Type'} (x : _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040146 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) (x : _102126) : (term482 _102126 B f s x) = (term483 _102126 B f s x).
Proof. exact (MK_COMB (@lem4040144 _102126 B f s) (@lem4040145 _102126 x)). Qed.
Lemma lem4040147 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term483 _102126 B f s x) = (term469 _102126 B x f s).
Proof. exact (eq_refl (term483 _102126 B f s x)). Qed.
Lemma lem4040148 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term482 _102126 B f s x) = (term469 _102126 B x f s).
Proof. exact (TRANS (@lem4040146 _102126 B f s x) (@lem4040147 _102126 B x f s)). Qed.
Lemma lem4040149 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term484 _102126 B f s) = (term470 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4040148 _102126 B x f s)). Qed.
Lemma lem4040150 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040151 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term485 _102126 B f s) = (term471 _102126 B f s).
Proof. exact (MK_COMB (@lem4040150 _102126) (@lem4040149 _102126 B f s)). Qed.
Lemma lem4040152 {_102126 B : Type'} (f : _102126 -> B) : (term486 _102126 B f) = (term472 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4040151 _102126 B f s)). Qed.
Lemma lem4040153 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4040154 {_102126 B : Type'} (f : _102126 -> B) : (term478 _102126 B f) = (term473 _102126 B f).
Proof. exact (MK_COMB (@lem4040153 _102126) (@lem4040152 _102126 B f)). Qed.
Lemma lem4040155 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040156 {_102126 B : Type'} (f : _102126 -> B) : (term487 _102126 B f) = (term488 _102126 B f).
Proof. exact (MK_COMB (@lem4040155) (@lem4040154 _102126 B f)). Qed.
Lemma lem4040157 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term481 _102126 B f s) = (term470 _102126 B f s).
Proof. exact (eq_refl (term481 _102126 B f s)). Qed.
Lemma lem4040158 {_102126 : Type'} (x : type684 _102126) (s : _102126 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4040159 {_102126 B : Type'} (f : _102126 -> B) (x : type684 _102126) (s : _102126 -> Prop) : (term489 _102126 B f x s) = (term490 _102126 B f x s).
Proof. exact (MK_COMB (@lem4040157 _102126 B f s) (@lem4040158 _102126 x s)). Qed.
Lemma lem4040160 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term490 _102126 B f x s) = (term491 _102126 B x f s).
Proof. exact (eq_refl (term490 _102126 B f x s)). Qed.
Lemma lem4040161 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term489 _102126 B f x s) = (term491 _102126 B x f s).
Proof. exact (TRANS (@lem4040159 _102126 B f x s) (@lem4040160 _102126 B x f s)). Qed.
Lemma lem4040162 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term492 _102126 B f x) = (term493 _102126 B x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4040161 _102126 B x f s)). Qed.
Lemma lem4040163 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4040164 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term494 _102126 B f x) = (term495 _102126 B x f).
Proof. exact (MK_COMB (@lem4040163 _102126) (@lem4040162 _102126 B x f)). Qed.
Lemma lem4040165 {_102126 B : Type'} (f : _102126 -> B) : (term496 _102126 B f) = (term497 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4040164 _102126 B x f)). Qed.
Lemma lem4040166 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040167 {_102126 B : Type'} (f : _102126 -> B) : (term479 _102126 B f) = (term498 _102126 B f).
Proof. exact (MK_COMB (@lem4040166 _102126) (@lem4040165 _102126 B f)). Qed.
Lemma lem4040168 {_102126 B : Type'} (f : _102126 -> B) : ((term478 _102126 B f) = (term479 _102126 B f)) = ((term473 _102126 B f) = (term498 _102126 B f)).
Proof. exact (MK_COMB (@lem4040156 _102126 B f) (@lem4040167 _102126 B f)). Qed.
Lemma lem4040169 {_102126 B : Type'} (f : _102126 -> B) : (term473 _102126 B f) = (term498 _102126 B f).
Proof. exact (EQ_MP (@lem4040168 _102126 B f) (@lem4040143 _102126 B f)). Qed.
Lemma lem4040171 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040172 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4040171 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4040173 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term499 _102126 B x f) = (term500 _102126 B x f).
Proof. exact (@lem4040172 _102126 (term501 _102126 B x f)). Qed.
Lemma lem4040174 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term502 _102126 B x f s) = (term503 _102126 B x f s).
Proof. exact (eq_refl (term502 _102126 B x f s)). Qed.
Lemma lem4040175 {_102126 : Type'} (y : _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040176 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) (y : _102126) : (term504 _102126 B x f s y) = (term505 _102126 B x f s y).
Proof. exact (MK_COMB (@lem4040174 _102126 B x f s) (@lem4040175 _102126 y)). Qed.
Lemma lem4040177 {_102126 B : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term505 _102126 B x f s y) = (term506 _102126 B x y f s).
Proof. exact (eq_refl (term505 _102126 B x f s y)). Qed.
Lemma lem4040178 {_102126 B : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term504 _102126 B x f s y) = (term506 _102126 B x y f s).
Proof. exact (TRANS (@lem4040176 _102126 B x f s y) (@lem4040177 _102126 B x y f s)). Qed.
Lemma lem4040179 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term507 _102126 B x f s) = (term503 _102126 B x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4040178 _102126 B x y f s)). Qed.
Lemma lem4040180 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4040181 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term508 _102126 B x f s) = (term491 _102126 B x f s).
Proof. exact (MK_COMB (@lem4040180 _102126) (@lem4040179 _102126 B x f s)). Qed.
Lemma lem4040182 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term509 _102126 B x f) = (term493 _102126 B x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4040181 _102126 B x f s)). Qed.
Lemma lem4040183 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4040184 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term499 _102126 B x f) = (term495 _102126 B x f).
Proof. exact (MK_COMB (@lem4040183 _102126) (@lem4040182 _102126 B x f)). Qed.
Lemma lem4040185 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040186 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term510 _102126 B x f) = (term511 _102126 B x f).
Proof. exact (MK_COMB (@lem4040185) (@lem4040184 _102126 B x f)). Qed.
Lemma lem4040187 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term502 _102126 B x f s) = (term503 _102126 B x f s).
Proof. exact (eq_refl (term502 _102126 B x f s)). Qed.
Lemma lem4040188 {_102126 : Type'} (y : type684 _102126) (s : _102126 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4040189 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (y : type684 _102126) (s : _102126 -> Prop) : (term512 _102126 B x f y s) = (term513 _102126 B x f y s).
Proof. exact (MK_COMB (@lem4040187 _102126 B x f s) (@lem4040188 _102126 y s)). Qed.
Lemma lem4040190 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term513 _102126 B x f y s) = (term514 _102126 B x y f s).
Proof. exact (eq_refl (term513 _102126 B x f y s)). Qed.
Lemma lem4040191 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term512 _102126 B x f y s) = (term514 _102126 B x y f s).
Proof. exact (TRANS (@lem4040189 _102126 B x f y s) (@lem4040190 _102126 B x y f s)). Qed.
Lemma lem4040192 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) : (term515 _102126 B x f y) = (term516 _102126 B x y f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4040191 _102126 B x y f s)). Qed.
Lemma lem4040193 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4040194 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) : (term517 _102126 B x f y) = (term518 _102126 B x y f).
Proof. exact (MK_COMB (@lem4040193 _102126) (@lem4040192 _102126 B x y f)). Qed.
Lemma lem4040195 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term519 _102126 B x f) = (term520 _102126 B x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4040194 _102126 B x y f)). Qed.
Lemma lem4040196 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040197 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term500 _102126 B x f) = (term521 _102126 B x f).
Proof. exact (MK_COMB (@lem4040196 _102126) (@lem4040195 _102126 B x f)). Qed.
Lemma lem4040198 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : ((term499 _102126 B x f) = (term500 _102126 B x f)) = ((term495 _102126 B x f) = (term521 _102126 B x f)).
Proof. exact (MK_COMB (@lem4040186 _102126 B x f) (@lem4040197 _102126 B x f)). Qed.
Lemma lem4040199 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term495 _102126 B x f) = (term521 _102126 B x f).
Proof. exact (EQ_MP (@lem4040198 _102126 B x f) (@lem4040173 _102126 B x f)). Qed.
Lemma lem4040200 {_102126 B : Type'} (f : _102126 -> B) : (term497 _102126 B f) = (term522 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4040199 _102126 B x f)). Qed.
Lemma lem4040201 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040202 {_102126 B : Type'} (f : _102126 -> B) : (term498 _102126 B f) = (term523 _102126 B f).
Proof. exact (MK_COMB (@lem4040201 _102126) (@lem4040200 _102126 B f)). Qed.
Lemma lem4040203 {_102126 B : Type'} (f : _102126 -> B) : (term473 _102126 B f) = (term523 _102126 B f).
Proof. exact (TRANS (@lem4040169 _102126 B f) (@lem4040202 _102126 B f)). Qed.
Lemma lem4040204 {_102126 B : Type'} (f : _102126 -> B) : (term435 _102126 B f) = (term523 _102126 B f).
Proof. exact (TRANS (@lem4040139 _102126 B f) (@lem4040203 _102126 B f)). Qed.
Lemma lem4040205 {_102126 B : Type'} : (term436 _102126 B) = (term524 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4040204 _102126 B f)). Qed.
Lemma lem4040206 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4040207 {_102126 B : Type'} : (term437 _102126 B) = (term525 _102126 B).
Proof. exact (MK_COMB (@lem4040206 _102126 B) (@lem4040205 _102126 B)). Qed.
Lemma lem4040209 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040210 {_102126 B : Type'} (P : type503 _102126 B) : (term526 _102126 B P) = (term527 _102126 B P).
Proof. exact (@lem4040209 (_102126 -> B) (type684 _102126) P). Qed.
Lemma lem4040211 {_102126 B : Type'} : (term528 _102126 B) = (term529 _102126 B).
Proof. exact (@lem4040210 _102126 B (term530 _102126 B)). Qed.
Lemma lem4040212 {_102126 B : Type'} (f : _102126 -> B) : (term531 _102126 B f) = (term522 _102126 B f).
Proof. exact (eq_refl (term531 _102126 B f)). Qed.
Lemma lem4040213 {_102126 : Type'} (x : type684 _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040214 {_102126 B : Type'} (f : _102126 -> B) (x : type684 _102126) : (term532 _102126 B f x) = (term533 _102126 B f x).
Proof. exact (MK_COMB (@lem4040212 _102126 B f) (@lem4040213 _102126 x)). Qed.
Lemma lem4040215 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term533 _102126 B f x) = (term521 _102126 B x f).
Proof. exact (eq_refl (term533 _102126 B f x)). Qed.
Lemma lem4040216 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term532 _102126 B f x) = (term521 _102126 B x f).
Proof. exact (TRANS (@lem4040214 _102126 B f x) (@lem4040215 _102126 B x f)). Qed.
Lemma lem4040217 {_102126 B : Type'} (f : _102126 -> B) : (term534 _102126 B f) = (term522 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4040216 _102126 B x f)). Qed.
Lemma lem4040218 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040219 {_102126 B : Type'} (f : _102126 -> B) : (term535 _102126 B f) = (term523 _102126 B f).
Proof. exact (MK_COMB (@lem4040218 _102126) (@lem4040217 _102126 B f)). Qed.
Lemma lem4040220 {_102126 B : Type'} : (term536 _102126 B) = (term524 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4040219 _102126 B f)). Qed.
Lemma lem4040221 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4040222 {_102126 B : Type'} : (term528 _102126 B) = (term525 _102126 B).
Proof. exact (MK_COMB (@lem4040221 _102126 B) (@lem4040220 _102126 B)). Qed.
Lemma lem4040223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040224 {_102126 B : Type'} : (term537 _102126 B) = (term538 _102126 B).
Proof. exact (MK_COMB (@lem4040223) (@lem4040222 _102126 B)). Qed.
Lemma lem4040225 {_102126 B : Type'} (f : _102126 -> B) : (term531 _102126 B f) = (term522 _102126 B f).
Proof. exact (eq_refl (term531 _102126 B f)). Qed.
Lemma lem4040226 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4040227 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term539 _102126 B x f) = (term540 _102126 B x f).
Proof. exact (MK_COMB (@lem4040225 _102126 B f) (@lem4040226 _102126 B x f)). Qed.
Lemma lem4040228 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term540 _102126 B x f) = (term541 _102126 B x f).
Proof. exact (eq_refl (term540 _102126 B x f)). Qed.
Lemma lem4040229 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term539 _102126 B x f) = (term541 _102126 B x f).
Proof. exact (TRANS (@lem4040227 _102126 B x f) (@lem4040228 _102126 B x f)). Qed.
Lemma lem4040230 {_102126 B : Type'} (x : type529 _102126 B) : (term542 _102126 B x) = (term543 _102126 B x).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4040229 _102126 B x f)). Qed.
Lemma lem4040231 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4040232 {_102126 B : Type'} (x : type529 _102126 B) : (term544 _102126 B x) = (term545 _102126 B x).
Proof. exact (MK_COMB (@lem4040231 _102126 B) (@lem4040230 _102126 B x)). Qed.
Lemma lem4040233 {_102126 B : Type'} : (term546 _102126 B) = (term547 _102126 B).
Proof. exact (fun_ext (fun x : type529 _102126 B => @lem4040232 _102126 B x)). Qed.
Lemma lem4040234 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040235 {_102126 B : Type'} : (term529 _102126 B) = (term548 _102126 B).
Proof. exact (MK_COMB (@lem4040234 _102126 B) (@lem4040233 _102126 B)). Qed.
Lemma lem4040236 {_102126 B : Type'} : ((term528 _102126 B) = (term529 _102126 B)) = ((term525 _102126 B) = (term548 _102126 B)).
Proof. exact (MK_COMB (@lem4040224 _102126 B) (@lem4040235 _102126 B)). Qed.
Lemma lem4040237 {_102126 B : Type'} : (term525 _102126 B) = (term548 _102126 B).
Proof. exact (EQ_MP (@lem4040236 _102126 B) (@lem4040211 _102126 B)). Qed.
Lemma lem4040239 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040240 {_102126 B : Type'} (P : type503 _102126 B) : (term526 _102126 B P) = (term527 _102126 B P).
Proof. exact (@lem4040239 (_102126 -> B) (type684 _102126) P). Qed.
Lemma lem4040241 {_102126 B : Type'} (x : type529 _102126 B) : (term549 _102126 B x) = (term550 _102126 B x).
Proof. exact (@lem4040240 _102126 B (term551 _102126 B x)). Qed.
Lemma lem4040242 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term552 _102126 B x f) = (term553 _102126 B x f).
Proof. exact (eq_refl (term552 _102126 B x f)). Qed.
Lemma lem4040243 {_102126 : Type'} (y : type684 _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040244 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) (y : type684 _102126) : (term554 _102126 B x f y) = (term555 _102126 B x f y).
Proof. exact (MK_COMB (@lem4040242 _102126 B x f) (@lem4040243 _102126 y)). Qed.
Lemma lem4040245 {_102126 B : Type'} (x : type529 _102126 B) (y : type684 _102126) (f : _102126 -> B) : (term555 _102126 B x f y) = (term556 _102126 B x y f).
Proof. exact (eq_refl (term555 _102126 B x f y)). Qed.
Lemma lem4040246 {_102126 B : Type'} (x : type529 _102126 B) (y : type684 _102126) (f : _102126 -> B) : (term554 _102126 B x f y) = (term556 _102126 B x y f).
Proof. exact (TRANS (@lem4040244 _102126 B x f y) (@lem4040245 _102126 B x y f)). Qed.
Lemma lem4040247 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term557 _102126 B x f) = (term553 _102126 B x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4040246 _102126 B x y f)). Qed.
Lemma lem4040248 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040249 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term558 _102126 B x f) = (term541 _102126 B x f).
Proof. exact (MK_COMB (@lem4040248 _102126) (@lem4040247 _102126 B x f)). Qed.
Lemma lem4040250 {_102126 B : Type'} (x : type529 _102126 B) : (term559 _102126 B x) = (term543 _102126 B x).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4040249 _102126 B x f)). Qed.
Lemma lem4040251 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4040252 {_102126 B : Type'} (x : type529 _102126 B) : (term549 _102126 B x) = (term545 _102126 B x).
Proof. exact (MK_COMB (@lem4040251 _102126 B) (@lem4040250 _102126 B x)). Qed.
Lemma lem4040253 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040254 {_102126 B : Type'} (x : type529 _102126 B) : (term560 _102126 B x) = (term561 _102126 B x).
Proof. exact (MK_COMB (@lem4040253) (@lem4040252 _102126 B x)). Qed.
Lemma lem4040255 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term552 _102126 B x f) = (term553 _102126 B x f).
Proof. exact (eq_refl (term552 _102126 B x f)). Qed.
Lemma lem4040256 {_102126 B : Type'} (y : type529 _102126 B) (f : _102126 -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4040257 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term562 _102126 B x y f) = (term563 _102126 B x y f).
Proof. exact (MK_COMB (@lem4040255 _102126 B x f) (@lem4040256 _102126 B y f)). Qed.
Lemma lem4040258 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term563 _102126 B x y f) = (term564 _102126 B x y f).
Proof. exact (eq_refl (term563 _102126 B x y f)). Qed.
Lemma lem4040259 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term562 _102126 B x y f) = (term564 _102126 B x y f).
Proof. exact (TRANS (@lem4040257 _102126 B x y f) (@lem4040258 _102126 B x y f)). Qed.
Lemma lem4040260 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) : (term565 _102126 B x y) = (term566 _102126 B x y).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4040259 _102126 B x y f)). Qed.
Lemma lem4040261 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4040262 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) : (term567 _102126 B x y) = (term568 _102126 B x y).
Proof. exact (MK_COMB (@lem4040261 _102126 B) (@lem4040260 _102126 B x y)). Qed.
Lemma lem4040263 {_102126 B : Type'} (x : type529 _102126 B) : (term569 _102126 B x) = (term570 _102126 B x).
Proof. exact (fun_ext (fun y : type529 _102126 B => @lem4040262 _102126 B x y)). Qed.
Lemma lem4040264 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040265 {_102126 B : Type'} (x : type529 _102126 B) : (term550 _102126 B x) = (term571 _102126 B x).
Proof. exact (MK_COMB (@lem4040264 _102126 B) (@lem4040263 _102126 B x)). Qed.
Lemma lem4040266 {_102126 B : Type'} (x : type529 _102126 B) : ((term549 _102126 B x) = (term550 _102126 B x)) = ((term545 _102126 B x) = (term571 _102126 B x)).
Proof. exact (MK_COMB (@lem4040254 _102126 B x) (@lem4040265 _102126 B x)). Qed.
Lemma lem4040267 {_102126 B : Type'} (x : type529 _102126 B) : (term545 _102126 B x) = (term571 _102126 B x).
Proof. exact (EQ_MP (@lem4040266 _102126 B x) (@lem4040241 _102126 B x)). Qed.
Lemma lem4040268 {_102126 B : Type'} : (term547 _102126 B) = (term572 _102126 B).
Proof. exact (fun_ext (fun x : type529 _102126 B => @lem4040267 _102126 B x)). Qed.
Lemma lem4040269 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4040270 {_102126 B : Type'} : (term548 _102126 B) = (term573 _102126 B).
Proof. exact (MK_COMB (@lem4040269 _102126 B) (@lem4040268 _102126 B)). Qed.
Lemma lem4040271 {_102126 B : Type'} : (term525 _102126 B) = (term573 _102126 B).
Proof. exact (TRANS (@lem4040237 _102126 B) (@lem4040270 _102126 B)). Qed.
Lemma lem4040273 {_102126 B : Type'} : (term437 _102126 B) = (term573 _102126 B).
Proof. exact (TRANS (@lem4040207 _102126 B) (@lem4040271 _102126 B)). Qed.
Lemma lem4040274 {_102126 B : Type'} : (term230 _102126 B) = (term573 _102126 B).
Proof. exact (TRANS (@lem4039979 _102126 B) (@lem4040273 _102126 B)). Qed.
Lemma lem4040275 {_102126 B : Type'} (h1 : term230 _102126 B) : term573 _102126 B.
Proof. exact (EQ_MP (@lem4040274 _102126 B) (@lem4039308 _102126 B h1)). Qed.
Lemma lem4040290 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term410 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (@lem17362 (term412 _102133 B s x f y) (x = y)). Qed.
Lemma lem4040291 {_102133 : Type'} (P : _102133 -> Prop) : (term413 _102133 P) = (term414 _102133 P).
Proof. exact (@lem18392 _102133 P). Qed.
Lemma lem4040292 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term415 _102133 B s f x) = (term416 _102133 B s f x).
Proof. exact (@lem4040291 _102133 (term313 _102133 B s f x)). Qed.
Lemma lem4040293 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term417 _102133 B s f x y) = (term312 _102133 B s f x y).
Proof. exact (eq_refl (term417 _102133 B s f x y)). Qed.
Lemma lem4040294 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4040295 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term418 _102133 B s f x y) = (term410 _102133 B s f x y).
Proof. exact (MK_COMB (@lem4040294) (@lem4040293 _102133 B s f x y)). Qed.
Lemma lem4040296 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term418 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (TRANS (@lem4040295 _102133 B s f x y) (@lem4040290 _102133 B s f x y)). Qed.
Lemma lem4040297 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term419 _102133 B s f x) = (term420 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4040296 _102133 B s f x y)). Qed.
Lemma lem4040298 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040299 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term416 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (MK_COMB (@lem4040298 _102133) (@lem4040297 _102133 B s f x)). Qed.
Lemma lem4040300 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term415 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (TRANS (@lem4040292 _102133 B s f x) (@lem4040299 _102133 B s f x)). Qed.
Lemma lem4040301 {_102133 : Type'} (P : _102133 -> Prop) : (term413 _102133 P) = (term414 _102133 P).
Proof. exact (@lem18392 _102133 P). Qed.
Lemma lem4040302 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term422 _102133 B s f) = (term423 _102133 B s f).
Proof. exact (@lem4040301 _102133 (term315 _102133 B s f)). Qed.
Lemma lem4040303 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term424 _102133 B s f x) = (term314 _102133 B s f x).
Proof. exact (eq_refl (term424 _102133 B s f x)). Qed.
Lemma lem4040304 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4040305 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term425 _102133 B s f x) = (term415 _102133 B s f x).
Proof. exact (MK_COMB (@lem4040304) (@lem4040303 _102133 B s f x)). Qed.
Lemma lem4040306 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term425 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (TRANS (@lem4040305 _102133 B s f x) (@lem4040300 _102133 B s f x)). Qed.
Lemma lem4040307 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term426 _102133 B s f) = (term427 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4040306 _102133 B s f x)). Qed.
Lemma lem4040308 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040309 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term423 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (MK_COMB (@lem4040308 _102133) (@lem4040307 _102133 B s f)). Qed.
Lemma lem4040310 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term422 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (TRANS (@lem4040302 _102133 B s f) (@lem4040309 _102133 B s f)). Qed.
Lemma lem4040325 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term205 _102133 B f s) = (@FINITE _102133 s)) = (term429 _102133 B f s).
Proof. exact (@lem17784 (term205 _102133 B f s) (@FINITE _102133 s)). Qed.
Lemma lem4040326 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040327 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term430 _102133 B s f) = (term431 _102133 B s f).
Proof. exact (MK_COMB (@lem4040326) (@lem4040310 _102133 B s f)). Qed.
Lemma lem4040328 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term432 _102133 B f s) = (term433 _102133 B f s).
Proof. exact (MK_COMB (@lem4040327 _102133 B s f) (@lem4040325 _102133 B f s)). Qed.
Lemma lem4040329 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term358 _102133 B f s) = (term432 _102133 B f s).
Proof. exact (@lem17265 (term316 _102133 B s f) ((term205 _102133 B f s) = (@FINITE _102133 s))). Qed.
Lemma lem4040330 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term358 _102133 B f s) = (term433 _102133 B f s).
Proof. exact (TRANS (@lem4040329 _102133 B f s) (@lem4040328 _102133 B f s)). Qed.
Lemma lem4040331 {_102133 B : Type'} (f : _102133 -> B) : (term359 _102133 B f) = (term434 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040330 _102133 B f s)). Qed.
Lemma lem4040332 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040333 {_102133 B : Type'} (f : _102133 -> B) : (term360 _102133 B f) = (term435 _102133 B f).
Proof. exact (MK_COMB (@lem4040332 _102133) (@lem4040331 _102133 B f)). Qed.
Lemma lem4040334 {_102133 B : Type'} : (term361 _102133 B) = (term436 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040333 _102133 B f)). Qed.
Lemma lem4040335 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040336 {_102133 B : Type'} : (term230 _102133 B) = (term437 _102133 B).
Proof. exact (MK_COMB (@lem4040335 _102133 B) (@lem4040334 _102133 B)). Qed.
Lemma lem4040443 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040444 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4040443 _102133 P Q). Qed.
Lemma lem4040445 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term440 _102133 B f s) = (term441 _102133 B f s).
Proof. exact (@lem4040444 _102133 (term427 _102133 B s f) (term429 _102133 B f s)). Qed.
Lemma lem4040446 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term442 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (eq_refl (term442 _102133 B s f x)). Qed.
Lemma lem4040447 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term443 _102133 B s f) = (term427 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4040446 _102133 B s f x)). Qed.
Lemma lem4040448 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040449 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term444 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (MK_COMB (@lem4040448 _102133) (@lem4040447 _102133 B s f)). Qed.
Lemma lem4040450 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040451 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term445 _102133 B s f) = (term431 _102133 B s f).
Proof. exact (MK_COMB (@lem4040450) (@lem4040449 _102133 B s f)). Qed.
Lemma lem4040452 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term429 _102133 B f s) = (term429 _102133 B f s).
Proof. exact (eq_refl (term429 _102133 B f s)). Qed.
Lemma lem4040453 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term440 _102133 B f s) = (term433 _102133 B f s).
Proof. exact (MK_COMB (@lem4040451 _102133 B s f) (@lem4040452 _102133 B f s)). Qed.
Lemma lem4040454 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040455 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term446 _102133 B f s) = (term447 _102133 B f s).
Proof. exact (MK_COMB (@lem4040454) (@lem4040453 _102133 B f s)). Qed.
Lemma lem4040456 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term442 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (eq_refl (term442 _102133 B s f x)). Qed.
Lemma lem4040457 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040458 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term448 _102133 B s f x) = (term449 _102133 B s f x).
Proof. exact (MK_COMB (@lem4040457) (@lem4040456 _102133 B s f x)). Qed.
Lemma lem4040459 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term429 _102133 B f s) = (term429 _102133 B f s).
Proof. exact (eq_refl (term429 _102133 B f s)). Qed.
Lemma lem4040460 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term450 _102133 B x f s) = (term451 _102133 B x f s).
Proof. exact (MK_COMB (@lem4040458 _102133 B s f x) (@lem4040459 _102133 B f s)). Qed.
Lemma lem4040461 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term452 _102133 B f s) = (term453 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4040460 _102133 B x f s)). Qed.
Lemma lem4040462 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040463 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term441 _102133 B f s) = (term454 _102133 B f s).
Proof. exact (MK_COMB (@lem4040462 _102133) (@lem4040461 _102133 B f s)). Qed.
Lemma lem4040464 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term440 _102133 B f s) = (term441 _102133 B f s)) = ((term433 _102133 B f s) = (term454 _102133 B f s)).
Proof. exact (MK_COMB (@lem4040455 _102133 B f s) (@lem4040463 _102133 B f s)). Qed.
Lemma lem4040465 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term433 _102133 B f s) = (term454 _102133 B f s).
Proof. exact (EQ_MP (@lem4040464 _102133 B f s) (@lem4040445 _102133 B f s)). Qed.
Lemma lem4040467 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040468 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4040467 _102133 P Q). Qed.
Lemma lem4040469 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term455 _102133 B x f s) = (term456 _102133 B x f s).
Proof. exact (@lem4040468 _102133 (term420 _102133 B s f x) (term429 _102133 B f s)). Qed.
Lemma lem4040470 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term457 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (eq_refl (term457 _102133 B s f x y)). Qed.
Lemma lem4040471 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term458 _102133 B s f x) = (term420 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4040470 _102133 B s f x y)). Qed.
Lemma lem4040472 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040473 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term459 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (MK_COMB (@lem4040472 _102133) (@lem4040471 _102133 B s f x)). Qed.
Lemma lem4040474 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040475 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term460 _102133 B s f x) = (term449 _102133 B s f x).
Proof. exact (MK_COMB (@lem4040474) (@lem4040473 _102133 B s f x)). Qed.
Lemma lem4040476 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term429 _102133 B f s) = (term429 _102133 B f s).
Proof. exact (eq_refl (term429 _102133 B f s)). Qed.
Lemma lem4040477 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term455 _102133 B x f s) = (term451 _102133 B x f s).
Proof. exact (MK_COMB (@lem4040475 _102133 B s f x) (@lem4040476 _102133 B f s)). Qed.
Lemma lem4040478 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040479 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term461 _102133 B x f s) = (term462 _102133 B x f s).
Proof. exact (MK_COMB (@lem4040478) (@lem4040477 _102133 B x f s)). Qed.
Lemma lem4040480 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term457 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (eq_refl (term457 _102133 B s f x y)). Qed.
Lemma lem4040481 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040482 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term463 _102133 B s f x y) = (term464 _102133 B s f x y).
Proof. exact (MK_COMB (@lem4040481) (@lem4040480 _102133 B s f x y)). Qed.
Lemma lem4040483 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term429 _102133 B f s) = (term429 _102133 B f s).
Proof. exact (eq_refl (term429 _102133 B f s)). Qed.
Lemma lem4040484 {_102133 B : Type'} (x : _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term465 _102133 B x y f s) = (term466 _102133 B x y f s).
Proof. exact (MK_COMB (@lem4040482 _102133 B s f x y) (@lem4040483 _102133 B f s)). Qed.
Lemma lem4040485 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term467 _102133 B x f s) = (term468 _102133 B x f s).
Proof. exact (fun_ext (fun y : _102133 => @lem4040484 _102133 B x y f s)). Qed.
Lemma lem4040486 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040487 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term456 _102133 B x f s) = (term469 _102133 B x f s).
Proof. exact (MK_COMB (@lem4040486 _102133) (@lem4040485 _102133 B x f s)). Qed.
Lemma lem4040488 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : ((term455 _102133 B x f s) = (term456 _102133 B x f s)) = ((term451 _102133 B x f s) = (term469 _102133 B x f s)).
Proof. exact (MK_COMB (@lem4040479 _102133 B x f s) (@lem4040487 _102133 B x f s)). Qed.
Lemma lem4040489 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term451 _102133 B x f s) = (term469 _102133 B x f s).
Proof. exact (EQ_MP (@lem4040488 _102133 B x f s) (@lem4040469 _102133 B x f s)). Qed.
Lemma lem4040490 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term453 _102133 B f s) = (term470 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4040489 _102133 B x f s)). Qed.
Lemma lem4040491 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040492 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term454 _102133 B f s) = (term471 _102133 B f s).
Proof. exact (MK_COMB (@lem4040491 _102133) (@lem4040490 _102133 B f s)). Qed.
Lemma lem4040493 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term433 _102133 B f s) = (term471 _102133 B f s).
Proof. exact (TRANS (@lem4040465 _102133 B f s) (@lem4040492 _102133 B f s)). Qed.
Lemma lem4040494 {_102133 B : Type'} (f : _102133 -> B) : (term434 _102133 B f) = (term472 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040493 _102133 B f s)). Qed.
Lemma lem4040495 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040496 {_102133 B : Type'} (f : _102133 -> B) : (term435 _102133 B f) = (term473 _102133 B f).
Proof. exact (MK_COMB (@lem4040495 _102133) (@lem4040494 _102133 B f)). Qed.
Lemma lem4040498 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040499 {_102133 : Type'} (P : type672 _102133) : (term476 _102133 P) = (term477 _102133 P).
Proof. exact (@lem4040498 (_102133 -> Prop) _102133 P). Qed.
Lemma lem4040500 {_102133 B : Type'} (f : _102133 -> B) : (term478 _102133 B f) = (term479 _102133 B f).
Proof. exact (@lem4040499 _102133 (term480 _102133 B f)). Qed.
Lemma lem4040501 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term481 _102133 B f s) = (term470 _102133 B f s).
Proof. exact (eq_refl (term481 _102133 B f s)). Qed.
Lemma lem4040502 {_102133 : Type'} (x : _102133) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040503 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) (x : _102133) : (term482 _102133 B f s x) = (term483 _102133 B f s x).
Proof. exact (MK_COMB (@lem4040501 _102133 B f s) (@lem4040502 _102133 x)). Qed.
Lemma lem4040504 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term483 _102133 B f s x) = (term469 _102133 B x f s).
Proof. exact (eq_refl (term483 _102133 B f s x)). Qed.
Lemma lem4040505 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term482 _102133 B f s x) = (term469 _102133 B x f s).
Proof. exact (TRANS (@lem4040503 _102133 B f s x) (@lem4040504 _102133 B x f s)). Qed.
Lemma lem4040506 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term484 _102133 B f s) = (term470 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4040505 _102133 B x f s)). Qed.
Lemma lem4040507 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040508 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term485 _102133 B f s) = (term471 _102133 B f s).
Proof. exact (MK_COMB (@lem4040507 _102133) (@lem4040506 _102133 B f s)). Qed.
Lemma lem4040509 {_102133 B : Type'} (f : _102133 -> B) : (term486 _102133 B f) = (term472 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040508 _102133 B f s)). Qed.
Lemma lem4040510 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040511 {_102133 B : Type'} (f : _102133 -> B) : (term478 _102133 B f) = (term473 _102133 B f).
Proof. exact (MK_COMB (@lem4040510 _102133) (@lem4040509 _102133 B f)). Qed.
Lemma lem4040512 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040513 {_102133 B : Type'} (f : _102133 -> B) : (term487 _102133 B f) = (term488 _102133 B f).
Proof. exact (MK_COMB (@lem4040512) (@lem4040511 _102133 B f)). Qed.
Lemma lem4040514 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term481 _102133 B f s) = (term470 _102133 B f s).
Proof. exact (eq_refl (term481 _102133 B f s)). Qed.
Lemma lem4040515 {_102133 : Type'} (x : type684 _102133) (s : _102133 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4040516 {_102133 B : Type'} (f : _102133 -> B) (x : type684 _102133) (s : _102133 -> Prop) : (term489 _102133 B f x s) = (term490 _102133 B f x s).
Proof. exact (MK_COMB (@lem4040514 _102133 B f s) (@lem4040515 _102133 x s)). Qed.
Lemma lem4040517 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term490 _102133 B f x s) = (term491 _102133 B x f s).
Proof. exact (eq_refl (term490 _102133 B f x s)). Qed.
Lemma lem4040518 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term489 _102133 B f x s) = (term491 _102133 B x f s).
Proof. exact (TRANS (@lem4040516 _102133 B f x s) (@lem4040517 _102133 B x f s)). Qed.
Lemma lem4040519 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term492 _102133 B f x) = (term493 _102133 B x f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040518 _102133 B x f s)). Qed.
Lemma lem4040520 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040521 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term494 _102133 B f x) = (term495 _102133 B x f).
Proof. exact (MK_COMB (@lem4040520 _102133) (@lem4040519 _102133 B x f)). Qed.
Lemma lem4040522 {_102133 B : Type'} (f : _102133 -> B) : (term496 _102133 B f) = (term497 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4040521 _102133 B x f)). Qed.
Lemma lem4040523 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040524 {_102133 B : Type'} (f : _102133 -> B) : (term479 _102133 B f) = (term498 _102133 B f).
Proof. exact (MK_COMB (@lem4040523 _102133) (@lem4040522 _102133 B f)). Qed.
Lemma lem4040525 {_102133 B : Type'} (f : _102133 -> B) : ((term478 _102133 B f) = (term479 _102133 B f)) = ((term473 _102133 B f) = (term498 _102133 B f)).
Proof. exact (MK_COMB (@lem4040513 _102133 B f) (@lem4040524 _102133 B f)). Qed.
Lemma lem4040526 {_102133 B : Type'} (f : _102133 -> B) : (term473 _102133 B f) = (term498 _102133 B f).
Proof. exact (EQ_MP (@lem4040525 _102133 B f) (@lem4040500 _102133 B f)). Qed.
Lemma lem4040528 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040529 {_102133 : Type'} (P : type672 _102133) : (term476 _102133 P) = (term477 _102133 P).
Proof. exact (@lem4040528 (_102133 -> Prop) _102133 P). Qed.
Lemma lem4040530 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term499 _102133 B x f) = (term500 _102133 B x f).
Proof. exact (@lem4040529 _102133 (term501 _102133 B x f)). Qed.
Lemma lem4040531 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term502 _102133 B x f s) = (term503 _102133 B x f s).
Proof. exact (eq_refl (term502 _102133 B x f s)). Qed.
Lemma lem4040532 {_102133 : Type'} (y : _102133) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040533 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) (y : _102133) : (term504 _102133 B x f s y) = (term505 _102133 B x f s y).
Proof. exact (MK_COMB (@lem4040531 _102133 B x f s) (@lem4040532 _102133 y)). Qed.
Lemma lem4040534 {_102133 B : Type'} (x : type684 _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term505 _102133 B x f s y) = (term506 _102133 B x y f s).
Proof. exact (eq_refl (term505 _102133 B x f s y)). Qed.
Lemma lem4040535 {_102133 B : Type'} (x : type684 _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term504 _102133 B x f s y) = (term506 _102133 B x y f s).
Proof. exact (TRANS (@lem4040533 _102133 B x f s y) (@lem4040534 _102133 B x y f s)). Qed.
Lemma lem4040536 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term507 _102133 B x f s) = (term503 _102133 B x f s).
Proof. exact (fun_ext (fun y : _102133 => @lem4040535 _102133 B x y f s)). Qed.
Lemma lem4040537 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4040538 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term508 _102133 B x f s) = (term491 _102133 B x f s).
Proof. exact (MK_COMB (@lem4040537 _102133) (@lem4040536 _102133 B x f s)). Qed.
Lemma lem4040539 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term509 _102133 B x f) = (term493 _102133 B x f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040538 _102133 B x f s)). Qed.
Lemma lem4040540 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040541 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term499 _102133 B x f) = (term495 _102133 B x f).
Proof. exact (MK_COMB (@lem4040540 _102133) (@lem4040539 _102133 B x f)). Qed.
Lemma lem4040542 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040543 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term510 _102133 B x f) = (term511 _102133 B x f).
Proof. exact (MK_COMB (@lem4040542) (@lem4040541 _102133 B x f)). Qed.
Lemma lem4040544 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term502 _102133 B x f s) = (term503 _102133 B x f s).
Proof. exact (eq_refl (term502 _102133 B x f s)). Qed.
Lemma lem4040545 {_102133 : Type'} (y : type684 _102133) (s : _102133 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4040546 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (y : type684 _102133) (s : _102133 -> Prop) : (term512 _102133 B x f y s) = (term513 _102133 B x f y s).
Proof. exact (MK_COMB (@lem4040544 _102133 B x f s) (@lem4040545 _102133 y s)). Qed.
Lemma lem4040547 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term513 _102133 B x f y s) = (term514 _102133 B x y f s).
Proof. exact (eq_refl (term513 _102133 B x f y s)). Qed.
Lemma lem4040548 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term512 _102133 B x f y s) = (term514 _102133 B x y f s).
Proof. exact (TRANS (@lem4040546 _102133 B x f y s) (@lem4040547 _102133 B x y f s)). Qed.
Lemma lem4040549 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) : (term515 _102133 B x f y) = (term516 _102133 B x y f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4040548 _102133 B x y f s)). Qed.
Lemma lem4040550 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4040551 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) : (term517 _102133 B x f y) = (term518 _102133 B x y f).
Proof. exact (MK_COMB (@lem4040550 _102133) (@lem4040549 _102133 B x y f)). Qed.
Lemma lem4040552 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term519 _102133 B x f) = (term520 _102133 B x f).
Proof. exact (fun_ext (fun y : type684 _102133 => @lem4040551 _102133 B x y f)). Qed.
Lemma lem4040553 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040554 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term500 _102133 B x f) = (term521 _102133 B x f).
Proof. exact (MK_COMB (@lem4040553 _102133) (@lem4040552 _102133 B x f)). Qed.
Lemma lem4040555 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : ((term499 _102133 B x f) = (term500 _102133 B x f)) = ((term495 _102133 B x f) = (term521 _102133 B x f)).
Proof. exact (MK_COMB (@lem4040543 _102133 B x f) (@lem4040554 _102133 B x f)). Qed.
Lemma lem4040556 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term495 _102133 B x f) = (term521 _102133 B x f).
Proof. exact (EQ_MP (@lem4040555 _102133 B x f) (@lem4040530 _102133 B x f)). Qed.
Lemma lem4040557 {_102133 B : Type'} (f : _102133 -> B) : (term497 _102133 B f) = (term522 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4040556 _102133 B x f)). Qed.
Lemma lem4040558 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040559 {_102133 B : Type'} (f : _102133 -> B) : (term498 _102133 B f) = (term523 _102133 B f).
Proof. exact (MK_COMB (@lem4040558 _102133) (@lem4040557 _102133 B f)). Qed.
Lemma lem4040560 {_102133 B : Type'} (f : _102133 -> B) : (term473 _102133 B f) = (term523 _102133 B f).
Proof. exact (TRANS (@lem4040526 _102133 B f) (@lem4040559 _102133 B f)). Qed.
Lemma lem4040561 {_102133 B : Type'} (f : _102133 -> B) : (term435 _102133 B f) = (term523 _102133 B f).
Proof. exact (TRANS (@lem4040496 _102133 B f) (@lem4040560 _102133 B f)). Qed.
Lemma lem4040562 {_102133 B : Type'} : (term436 _102133 B) = (term524 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040561 _102133 B f)). Qed.
Lemma lem4040563 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040564 {_102133 B : Type'} : (term437 _102133 B) = (term525 _102133 B).
Proof. exact (MK_COMB (@lem4040563 _102133 B) (@lem4040562 _102133 B)). Qed.
Lemma lem4040566 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040567 {_102133 B : Type'} (P : type503 _102133 B) : (term526 _102133 B P) = (term527 _102133 B P).
Proof. exact (@lem4040566 (_102133 -> B) (type684 _102133) P). Qed.
Lemma lem4040568 {_102133 B : Type'} : (term528 _102133 B) = (term529 _102133 B).
Proof. exact (@lem4040567 _102133 B (term530 _102133 B)). Qed.
Lemma lem4040569 {_102133 B : Type'} (f : _102133 -> B) : (term531 _102133 B f) = (term522 _102133 B f).
Proof. exact (eq_refl (term531 _102133 B f)). Qed.
Lemma lem4040570 {_102133 : Type'} (x : type684 _102133) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040571 {_102133 B : Type'} (f : _102133 -> B) (x : type684 _102133) : (term532 _102133 B f x) = (term533 _102133 B f x).
Proof. exact (MK_COMB (@lem4040569 _102133 B f) (@lem4040570 _102133 x)). Qed.
Lemma lem4040572 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term533 _102133 B f x) = (term521 _102133 B x f).
Proof. exact (eq_refl (term533 _102133 B f x)). Qed.
Lemma lem4040573 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term532 _102133 B f x) = (term521 _102133 B x f).
Proof. exact (TRANS (@lem4040571 _102133 B f x) (@lem4040572 _102133 B x f)). Qed.
Lemma lem4040574 {_102133 B : Type'} (f : _102133 -> B) : (term534 _102133 B f) = (term522 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4040573 _102133 B x f)). Qed.
Lemma lem4040575 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040576 {_102133 B : Type'} (f : _102133 -> B) : (term535 _102133 B f) = (term523 _102133 B f).
Proof. exact (MK_COMB (@lem4040575 _102133) (@lem4040574 _102133 B f)). Qed.
Lemma lem4040577 {_102133 B : Type'} : (term536 _102133 B) = (term524 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040576 _102133 B f)). Qed.
Lemma lem4040578 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040579 {_102133 B : Type'} : (term528 _102133 B) = (term525 _102133 B).
Proof. exact (MK_COMB (@lem4040578 _102133 B) (@lem4040577 _102133 B)). Qed.
Lemma lem4040580 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040581 {_102133 B : Type'} : (term537 _102133 B) = (term538 _102133 B).
Proof. exact (MK_COMB (@lem4040580) (@lem4040579 _102133 B)). Qed.
Lemma lem4040582 {_102133 B : Type'} (f : _102133 -> B) : (term531 _102133 B f) = (term522 _102133 B f).
Proof. exact (eq_refl (term531 _102133 B f)). Qed.
Lemma lem4040583 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4040584 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term539 _102133 B x f) = (term540 _102133 B x f).
Proof. exact (MK_COMB (@lem4040582 _102133 B f) (@lem4040583 _102133 B x f)). Qed.
Lemma lem4040585 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term540 _102133 B x f) = (term541 _102133 B x f).
Proof. exact (eq_refl (term540 _102133 B x f)). Qed.
Lemma lem4040586 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term539 _102133 B x f) = (term541 _102133 B x f).
Proof. exact (TRANS (@lem4040584 _102133 B x f) (@lem4040585 _102133 B x f)). Qed.
Lemma lem4040587 {_102133 B : Type'} (x : type529 _102133 B) : (term542 _102133 B x) = (term543 _102133 B x).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040586 _102133 B x f)). Qed.
Lemma lem4040588 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040589 {_102133 B : Type'} (x : type529 _102133 B) : (term544 _102133 B x) = (term545 _102133 B x).
Proof. exact (MK_COMB (@lem4040588 _102133 B) (@lem4040587 _102133 B x)). Qed.
Lemma lem4040590 {_102133 B : Type'} : (term546 _102133 B) = (term547 _102133 B).
Proof. exact (fun_ext (fun x : type529 _102133 B => @lem4040589 _102133 B x)). Qed.
Lemma lem4040591 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040592 {_102133 B : Type'} : (term529 _102133 B) = (term548 _102133 B).
Proof. exact (MK_COMB (@lem4040591 _102133 B) (@lem4040590 _102133 B)). Qed.
Lemma lem4040593 {_102133 B : Type'} : ((term528 _102133 B) = (term529 _102133 B)) = ((term525 _102133 B) = (term548 _102133 B)).
Proof. exact (MK_COMB (@lem4040581 _102133 B) (@lem4040592 _102133 B)). Qed.
Lemma lem4040594 {_102133 B : Type'} : (term525 _102133 B) = (term548 _102133 B).
Proof. exact (EQ_MP (@lem4040593 _102133 B) (@lem4040568 _102133 B)). Qed.
Lemma lem4040596 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040597 {_102133 B : Type'} (P : type503 _102133 B) : (term526 _102133 B P) = (term527 _102133 B P).
Proof. exact (@lem4040596 (_102133 -> B) (type684 _102133) P). Qed.
Lemma lem4040598 {_102133 B : Type'} (x : type529 _102133 B) : (term549 _102133 B x) = (term550 _102133 B x).
Proof. exact (@lem4040597 _102133 B (term551 _102133 B x)). Qed.
Lemma lem4040599 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term552 _102133 B x f) = (term553 _102133 B x f).
Proof. exact (eq_refl (term552 _102133 B x f)). Qed.
Lemma lem4040600 {_102133 : Type'} (y : type684 _102133) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040601 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) (y : type684 _102133) : (term554 _102133 B x f y) = (term555 _102133 B x f y).
Proof. exact (MK_COMB (@lem4040599 _102133 B x f) (@lem4040600 _102133 y)). Qed.
Lemma lem4040602 {_102133 B : Type'} (x : type529 _102133 B) (y : type684 _102133) (f : _102133 -> B) : (term555 _102133 B x f y) = (term556 _102133 B x y f).
Proof. exact (eq_refl (term555 _102133 B x f y)). Qed.
Lemma lem4040603 {_102133 B : Type'} (x : type529 _102133 B) (y : type684 _102133) (f : _102133 -> B) : (term554 _102133 B x f y) = (term556 _102133 B x y f).
Proof. exact (TRANS (@lem4040601 _102133 B x f y) (@lem4040602 _102133 B x y f)). Qed.
Lemma lem4040604 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term557 _102133 B x f) = (term553 _102133 B x f).
Proof. exact (fun_ext (fun y : type684 _102133 => @lem4040603 _102133 B x y f)). Qed.
Lemma lem4040605 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040606 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term558 _102133 B x f) = (term541 _102133 B x f).
Proof. exact (MK_COMB (@lem4040605 _102133) (@lem4040604 _102133 B x f)). Qed.
Lemma lem4040607 {_102133 B : Type'} (x : type529 _102133 B) : (term559 _102133 B x) = (term543 _102133 B x).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040606 _102133 B x f)). Qed.
Lemma lem4040608 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040609 {_102133 B : Type'} (x : type529 _102133 B) : (term549 _102133 B x) = (term545 _102133 B x).
Proof. exact (MK_COMB (@lem4040608 _102133 B) (@lem4040607 _102133 B x)). Qed.
Lemma lem4040610 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040611 {_102133 B : Type'} (x : type529 _102133 B) : (term560 _102133 B x) = (term561 _102133 B x).
Proof. exact (MK_COMB (@lem4040610) (@lem4040609 _102133 B x)). Qed.
Lemma lem4040612 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term552 _102133 B x f) = (term553 _102133 B x f).
Proof. exact (eq_refl (term552 _102133 B x f)). Qed.
Lemma lem4040613 {_102133 B : Type'} (y : type529 _102133 B) (f : _102133 -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4040614 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term562 _102133 B x y f) = (term563 _102133 B x y f).
Proof. exact (MK_COMB (@lem4040612 _102133 B x f) (@lem4040613 _102133 B y f)). Qed.
Lemma lem4040615 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term563 _102133 B x y f) = (term564 _102133 B x y f).
Proof. exact (eq_refl (term563 _102133 B x y f)). Qed.
Lemma lem4040616 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term562 _102133 B x y f) = (term564 _102133 B x y f).
Proof. exact (TRANS (@lem4040614 _102133 B x y f) (@lem4040615 _102133 B x y f)). Qed.
Lemma lem4040617 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) : (term565 _102133 B x y) = (term566 _102133 B x y).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4040616 _102133 B x y f)). Qed.
Lemma lem4040618 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4040619 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) : (term567 _102133 B x y) = (term568 _102133 B x y).
Proof. exact (MK_COMB (@lem4040618 _102133 B) (@lem4040617 _102133 B x y)). Qed.
Lemma lem4040620 {_102133 B : Type'} (x : type529 _102133 B) : (term569 _102133 B x) = (term570 _102133 B x).
Proof. exact (fun_ext (fun y : type529 _102133 B => @lem4040619 _102133 B x y)). Qed.
Lemma lem4040621 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040622 {_102133 B : Type'} (x : type529 _102133 B) : (term550 _102133 B x) = (term571 _102133 B x).
Proof. exact (MK_COMB (@lem4040621 _102133 B) (@lem4040620 _102133 B x)). Qed.
Lemma lem4040623 {_102133 B : Type'} (x : type529 _102133 B) : ((term549 _102133 B x) = (term550 _102133 B x)) = ((term545 _102133 B x) = (term571 _102133 B x)).
Proof. exact (MK_COMB (@lem4040611 _102133 B x) (@lem4040622 _102133 B x)). Qed.
Lemma lem4040624 {_102133 B : Type'} (x : type529 _102133 B) : (term545 _102133 B x) = (term571 _102133 B x).
Proof. exact (EQ_MP (@lem4040623 _102133 B x) (@lem4040598 _102133 B x)). Qed.
Lemma lem4040625 {_102133 B : Type'} : (term547 _102133 B) = (term572 _102133 B).
Proof. exact (fun_ext (fun x : type529 _102133 B => @lem4040624 _102133 B x)). Qed.
Lemma lem4040626 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4040627 {_102133 B : Type'} : (term548 _102133 B) = (term573 _102133 B).
Proof. exact (MK_COMB (@lem4040626 _102133 B) (@lem4040625 _102133 B)). Qed.
Lemma lem4040628 {_102133 B : Type'} : (term525 _102133 B) = (term573 _102133 B).
Proof. exact (TRANS (@lem4040594 _102133 B) (@lem4040627 _102133 B)). Qed.
Lemma lem4040630 {_102133 B : Type'} : (term437 _102133 B) = (term573 _102133 B).
Proof. exact (TRANS (@lem4040564 _102133 B) (@lem4040628 _102133 B)). Qed.
Lemma lem4040631 {_102133 B : Type'} : (term230 _102133 B) = (term573 _102133 B).
Proof. exact (TRANS (@lem4040336 _102133 B) (@lem4040630 _102133 B)). Qed.
Lemma lem4040632 {_102133 B : Type'} (h1 : term230 _102133 B) : term573 _102133 B.
Proof. exact (EQ_MP (@lem4040631 _102133 B) (@lem4039309 _102133 B h1)). Qed.
Lemma lem4040647 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term574 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (@lem17362 (term576 _102126 A s x f y) (x = y)). Qed.
Lemma lem4040648 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4040649 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term577 _102126 A s f x) = (term578 _102126 A s f x).
Proof. exact (@lem4040648 A (term300 _102126 A s f x)). Qed.
Lemma lem4040650 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term579 _102126 A s f x y) = (term299 _102126 A s f x y).
Proof. exact (eq_refl (term579 _102126 A s f x y)). Qed.
Lemma lem4040651 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4040652 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term580 _102126 A s f x y) = (term574 _102126 A s f x y).
Proof. exact (MK_COMB (@lem4040651) (@lem4040650 _102126 A s f x y)). Qed.
Lemma lem4040653 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term580 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (TRANS (@lem4040652 _102126 A s f x y) (@lem4040647 _102126 A s f x y)). Qed.
Lemma lem4040654 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term581 _102126 A s f x) = (term582 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4040653 _102126 A s f x y)). Qed.
Lemma lem4040655 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040656 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term578 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (MK_COMB (@lem4040655 A) (@lem4040654 _102126 A s f x)). Qed.
Lemma lem4040657 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term577 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (TRANS (@lem4040649 _102126 A s f x) (@lem4040656 _102126 A s f x)). Qed.
Lemma lem4040658 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4040659 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term584 _102126 A s f) = (term585 _102126 A s f).
Proof. exact (@lem4040658 A (term302 _102126 A s f)). Qed.
Lemma lem4040660 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term586 _102126 A s f x) = (term301 _102126 A s f x).
Proof. exact (eq_refl (term586 _102126 A s f x)). Qed.
Lemma lem4040661 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4040662 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term587 _102126 A s f x) = (term577 _102126 A s f x).
Proof. exact (MK_COMB (@lem4040661) (@lem4040660 _102126 A s f x)). Qed.
Lemma lem4040663 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term587 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (TRANS (@lem4040662 _102126 A s f x) (@lem4040657 _102126 A s f x)). Qed.
Lemma lem4040664 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term588 _102126 A s f) = (term589 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4040663 _102126 A s f x)). Qed.
Lemma lem4040665 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040666 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term585 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (MK_COMB (@lem4040665 A) (@lem4040664 _102126 A s f)). Qed.
Lemma lem4040667 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term584 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (TRANS (@lem4040659 _102126 A s f) (@lem4040666 _102126 A s f)). Qed.
Lemma lem4040682 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term362 _102126 A f s) = (@FINITE A s)) = (term591 _102126 A f s).
Proof. exact (@lem17784 (term362 _102126 A f s) (@FINITE A s)). Qed.
Lemma lem4040683 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040684 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term592 _102126 A s f) = (term593 _102126 A s f).
Proof. exact (MK_COMB (@lem4040683) (@lem4040667 _102126 A s f)). Qed.
Lemma lem4040685 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term594 _102126 A f s) = (term595 _102126 A f s).
Proof. exact (MK_COMB (@lem4040684 _102126 A s f) (@lem4040682 _102126 A f s)). Qed.
Lemma lem4040686 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term364 _102126 A f s) = (term594 _102126 A f s).
Proof. exact (@lem17265 (term303 _102126 A s f) ((term362 _102126 A f s) = (@FINITE A s))). Qed.
Lemma lem4040687 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term364 _102126 A f s) = (term595 _102126 A f s).
Proof. exact (TRANS (@lem4040686 _102126 A f s) (@lem4040685 _102126 A f s)). Qed.
Lemma lem4040688 {_102126 A : Type'} (f : A -> _102126) : (term365 _102126 A f) = (term596 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040687 _102126 A f s)). Qed.
Lemma lem4040689 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040690 {_102126 A : Type'} (f : A -> _102126) : (term366 _102126 A f) = (term597 _102126 A f).
Proof. exact (MK_COMB (@lem4040689 A) (@lem4040688 _102126 A f)). Qed.
Lemma lem4040691 {_102126 A : Type'} : (term367 _102126 A) = (term598 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040690 _102126 A f)). Qed.
Lemma lem4040692 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040693 {_102126 A : Type'} : (term231 _102126 A) = (term599 _102126 A).
Proof. exact (MK_COMB (@lem4040692 _102126 A) (@lem4040691 _102126 A)). Qed.
Lemma lem4040800 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040801 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4040800 A P Q). Qed.
Lemma lem4040802 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term600 _102126 A f s) = (term601 _102126 A f s).
Proof. exact (@lem4040801 A (term589 _102126 A s f) (term591 _102126 A f s)). Qed.
Lemma lem4040803 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term602 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (eq_refl (term602 _102126 A s f x)). Qed.
Lemma lem4040804 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term603 _102126 A s f) = (term589 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4040803 _102126 A s f x)). Qed.
Lemma lem4040805 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040806 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term604 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (MK_COMB (@lem4040805 A) (@lem4040804 _102126 A s f)). Qed.
Lemma lem4040807 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040808 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term605 _102126 A s f) = (term593 _102126 A s f).
Proof. exact (MK_COMB (@lem4040807) (@lem4040806 _102126 A s f)). Qed.
Lemma lem4040809 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term591 _102126 A f s) = (term591 _102126 A f s).
Proof. exact (eq_refl (term591 _102126 A f s)). Qed.
Lemma lem4040810 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term600 _102126 A f s) = (term595 _102126 A f s).
Proof. exact (MK_COMB (@lem4040808 _102126 A s f) (@lem4040809 _102126 A f s)). Qed.
Lemma lem4040811 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040812 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term606 _102126 A f s) = (term607 _102126 A f s).
Proof. exact (MK_COMB (@lem4040811) (@lem4040810 _102126 A f s)). Qed.
Lemma lem4040813 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term602 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (eq_refl (term602 _102126 A s f x)). Qed.
Lemma lem4040814 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040815 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term608 _102126 A s f x) = (term609 _102126 A s f x).
Proof. exact (MK_COMB (@lem4040814) (@lem4040813 _102126 A s f x)). Qed.
Lemma lem4040816 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term591 _102126 A f s) = (term591 _102126 A f s).
Proof. exact (eq_refl (term591 _102126 A f s)). Qed.
Lemma lem4040817 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term610 _102126 A x f s) = (term611 _102126 A x f s).
Proof. exact (MK_COMB (@lem4040815 _102126 A s f x) (@lem4040816 _102126 A f s)). Qed.
Lemma lem4040818 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term612 _102126 A f s) = (term613 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4040817 _102126 A x f s)). Qed.
Lemma lem4040819 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040820 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term601 _102126 A f s) = (term614 _102126 A f s).
Proof. exact (MK_COMB (@lem4040819 A) (@lem4040818 _102126 A f s)). Qed.
Lemma lem4040821 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term600 _102126 A f s) = (term601 _102126 A f s)) = ((term595 _102126 A f s) = (term614 _102126 A f s)).
Proof. exact (MK_COMB (@lem4040812 _102126 A f s) (@lem4040820 _102126 A f s)). Qed.
Lemma lem4040822 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term595 _102126 A f s) = (term614 _102126 A f s).
Proof. exact (EQ_MP (@lem4040821 _102126 A f s) (@lem4040802 _102126 A f s)). Qed.
Lemma lem4040824 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4040825 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4040824 A P Q). Qed.
Lemma lem4040826 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term615 _102126 A x f s) = (term616 _102126 A x f s).
Proof. exact (@lem4040825 A (term582 _102126 A s f x) (term591 _102126 A f s)). Qed.
Lemma lem4040827 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term617 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (eq_refl (term617 _102126 A s f x y)). Qed.
Lemma lem4040828 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term618 _102126 A s f x) = (term582 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4040827 _102126 A s f x y)). Qed.
Lemma lem4040829 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040830 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term619 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (MK_COMB (@lem4040829 A) (@lem4040828 _102126 A s f x)). Qed.
Lemma lem4040831 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040832 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term620 _102126 A s f x) = (term609 _102126 A s f x).
Proof. exact (MK_COMB (@lem4040831) (@lem4040830 _102126 A s f x)). Qed.
Lemma lem4040833 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term591 _102126 A f s) = (term591 _102126 A f s).
Proof. exact (eq_refl (term591 _102126 A f s)). Qed.
Lemma lem4040834 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term615 _102126 A x f s) = (term611 _102126 A x f s).
Proof. exact (MK_COMB (@lem4040832 _102126 A s f x) (@lem4040833 _102126 A f s)). Qed.
Lemma lem4040835 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040836 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term621 _102126 A x f s) = (term622 _102126 A x f s).
Proof. exact (MK_COMB (@lem4040835) (@lem4040834 _102126 A x f s)). Qed.
Lemma lem4040837 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term617 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (eq_refl (term617 _102126 A s f x y)). Qed.
Lemma lem4040838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4040839 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term623 _102126 A s f x y) = (term624 _102126 A s f x y).
Proof. exact (MK_COMB (@lem4040838) (@lem4040837 _102126 A s f x y)). Qed.
Lemma lem4040840 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term591 _102126 A f s) = (term591 _102126 A f s).
Proof. exact (eq_refl (term591 _102126 A f s)). Qed.
Lemma lem4040841 {_102126 A : Type'} (x : A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term625 _102126 A x y f s) = (term626 _102126 A x y f s).
Proof. exact (MK_COMB (@lem4040839 _102126 A s f x y) (@lem4040840 _102126 A f s)). Qed.
Lemma lem4040842 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term627 _102126 A x f s) = (term628 _102126 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4040841 _102126 A x y f s)). Qed.
Lemma lem4040843 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040844 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term616 _102126 A x f s) = (term629 _102126 A x f s).
Proof. exact (MK_COMB (@lem4040843 A) (@lem4040842 _102126 A x f s)). Qed.
Lemma lem4040845 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : ((term615 _102126 A x f s) = (term616 _102126 A x f s)) = ((term611 _102126 A x f s) = (term629 _102126 A x f s)).
Proof. exact (MK_COMB (@lem4040836 _102126 A x f s) (@lem4040844 _102126 A x f s)). Qed.
Lemma lem4040846 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term611 _102126 A x f s) = (term629 _102126 A x f s).
Proof. exact (EQ_MP (@lem4040845 _102126 A x f s) (@lem4040826 _102126 A x f s)). Qed.
Lemma lem4040847 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term613 _102126 A f s) = (term630 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4040846 _102126 A x f s)). Qed.
Lemma lem4040848 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040849 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term614 _102126 A f s) = (term631 _102126 A f s).
Proof. exact (MK_COMB (@lem4040848 A) (@lem4040847 _102126 A f s)). Qed.
Lemma lem4040850 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term595 _102126 A f s) = (term631 _102126 A f s).
Proof. exact (TRANS (@lem4040822 _102126 A f s) (@lem4040849 _102126 A f s)). Qed.
Lemma lem4040851 {_102126 A : Type'} (f : A -> _102126) : (term596 _102126 A f) = (term632 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040850 _102126 A f s)). Qed.
Lemma lem4040852 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040853 {_102126 A : Type'} (f : A -> _102126) : (term597 _102126 A f) = (term633 _102126 A f).
Proof. exact (MK_COMB (@lem4040852 A) (@lem4040851 _102126 A f)). Qed.
Lemma lem4040855 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040856 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4040855 (A -> Prop) A P). Qed.
Lemma lem4040857 {_102126 A : Type'} (f : A -> _102126) : (term634 _102126 A f) = (term635 _102126 A f).
Proof. exact (@lem4040856 A (term636 _102126 A f)). Qed.
Lemma lem4040858 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term637 _102126 A f s) = (term630 _102126 A f s).
Proof. exact (eq_refl (term637 _102126 A f s)). Qed.
Lemma lem4040859 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040860 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) (x : A) : (term638 _102126 A f s x) = (term639 _102126 A f s x).
Proof. exact (MK_COMB (@lem4040858 _102126 A f s) (@lem4040859 A x)). Qed.
Lemma lem4040861 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term639 _102126 A f s x) = (term629 _102126 A x f s).
Proof. exact (eq_refl (term639 _102126 A f s x)). Qed.
Lemma lem4040862 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term638 _102126 A f s x) = (term629 _102126 A x f s).
Proof. exact (TRANS (@lem4040860 _102126 A f s x) (@lem4040861 _102126 A x f s)). Qed.
Lemma lem4040863 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term640 _102126 A f s) = (term630 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4040862 _102126 A x f s)). Qed.
Lemma lem4040864 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040865 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term641 _102126 A f s) = (term631 _102126 A f s).
Proof. exact (MK_COMB (@lem4040864 A) (@lem4040863 _102126 A f s)). Qed.
Lemma lem4040866 {_102126 A : Type'} (f : A -> _102126) : (term642 _102126 A f) = (term632 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040865 _102126 A f s)). Qed.
Lemma lem4040867 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040868 {_102126 A : Type'} (f : A -> _102126) : (term634 _102126 A f) = (term633 _102126 A f).
Proof. exact (MK_COMB (@lem4040867 A) (@lem4040866 _102126 A f)). Qed.
Lemma lem4040869 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040870 {_102126 A : Type'} (f : A -> _102126) : (term643 _102126 A f) = (term644 _102126 A f).
Proof. exact (MK_COMB (@lem4040869) (@lem4040868 _102126 A f)). Qed.
Lemma lem4040871 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term637 _102126 A f s) = (term630 _102126 A f s).
Proof. exact (eq_refl (term637 _102126 A f s)). Qed.
Lemma lem4040872 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4040873 {_102126 A : Type'} (f : A -> _102126) (x : type684 A) (s : A -> Prop) : (term645 _102126 A f x s) = (term646 _102126 A f x s).
Proof. exact (MK_COMB (@lem4040871 _102126 A f s) (@lem4040872 A x s)). Qed.
Lemma lem4040874 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term646 _102126 A f x s) = (term647 _102126 A x f s).
Proof. exact (eq_refl (term646 _102126 A f x s)). Qed.
Lemma lem4040875 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term645 _102126 A f x s) = (term647 _102126 A x f s).
Proof. exact (TRANS (@lem4040873 _102126 A f x s) (@lem4040874 _102126 A x f s)). Qed.
Lemma lem4040876 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term648 _102126 A f x) = (term649 _102126 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040875 _102126 A x f s)). Qed.
Lemma lem4040877 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040878 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term650 _102126 A f x) = (term651 _102126 A x f).
Proof. exact (MK_COMB (@lem4040877 A) (@lem4040876 _102126 A x f)). Qed.
Lemma lem4040879 {_102126 A : Type'} (f : A -> _102126) : (term652 _102126 A f) = (term653 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4040878 _102126 A x f)). Qed.
Lemma lem4040880 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4040881 {_102126 A : Type'} (f : A -> _102126) : (term635 _102126 A f) = (term654 _102126 A f).
Proof. exact (MK_COMB (@lem4040880 A) (@lem4040879 _102126 A f)). Qed.
Lemma lem4040882 {_102126 A : Type'} (f : A -> _102126) : ((term634 _102126 A f) = (term635 _102126 A f)) = ((term633 _102126 A f) = (term654 _102126 A f)).
Proof. exact (MK_COMB (@lem4040870 _102126 A f) (@lem4040881 _102126 A f)). Qed.
Lemma lem4040883 {_102126 A : Type'} (f : A -> _102126) : (term633 _102126 A f) = (term654 _102126 A f).
Proof. exact (EQ_MP (@lem4040882 _102126 A f) (@lem4040857 _102126 A f)). Qed.
Lemma lem4040885 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040886 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4040885 (A -> Prop) A P). Qed.
Lemma lem4040887 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term655 _102126 A x f) = (term656 _102126 A x f).
Proof. exact (@lem4040886 A (term657 _102126 A x f)). Qed.
Lemma lem4040888 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term658 _102126 A x f s) = (term659 _102126 A x f s).
Proof. exact (eq_refl (term658 _102126 A x f s)). Qed.
Lemma lem4040889 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040890 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) (y : A) : (term660 _102126 A x f s y) = (term661 _102126 A x f s y).
Proof. exact (MK_COMB (@lem4040888 _102126 A x f s) (@lem4040889 A y)). Qed.
Lemma lem4040891 {_102126 A : Type'} (x : type684 A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term661 _102126 A x f s y) = (term662 _102126 A x y f s).
Proof. exact (eq_refl (term661 _102126 A x f s y)). Qed.
Lemma lem4040892 {_102126 A : Type'} (x : type684 A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term660 _102126 A x f s y) = (term662 _102126 A x y f s).
Proof. exact (TRANS (@lem4040890 _102126 A x f s y) (@lem4040891 _102126 A x y f s)). Qed.
Lemma lem4040893 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term663 _102126 A x f s) = (term659 _102126 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4040892 _102126 A x y f s)). Qed.
Lemma lem4040894 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4040895 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term664 _102126 A x f s) = (term647 _102126 A x f s).
Proof. exact (MK_COMB (@lem4040894 A) (@lem4040893 _102126 A x f s)). Qed.
Lemma lem4040896 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term665 _102126 A x f) = (term649 _102126 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040895 _102126 A x f s)). Qed.
Lemma lem4040897 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040898 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term655 _102126 A x f) = (term651 _102126 A x f).
Proof. exact (MK_COMB (@lem4040897 A) (@lem4040896 _102126 A x f)). Qed.
Lemma lem4040899 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040900 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term666 _102126 A x f) = (term667 _102126 A x f).
Proof. exact (MK_COMB (@lem4040899) (@lem4040898 _102126 A x f)). Qed.
Lemma lem4040901 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term658 _102126 A x f s) = (term659 _102126 A x f s).
Proof. exact (eq_refl (term658 _102126 A x f s)). Qed.
Lemma lem4040902 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4040903 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (y : type684 A) (s : A -> Prop) : (term668 _102126 A x f y s) = (term669 _102126 A x f y s).
Proof. exact (MK_COMB (@lem4040901 _102126 A x f s) (@lem4040902 A y s)). Qed.
Lemma lem4040904 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) (s : A -> Prop) : (term669 _102126 A x f y s) = (term670 _102126 A x y f s).
Proof. exact (eq_refl (term669 _102126 A x f y s)). Qed.
Lemma lem4040905 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) (s : A -> Prop) : (term668 _102126 A x f y s) = (term670 _102126 A x y f s).
Proof. exact (TRANS (@lem4040903 _102126 A x f y s) (@lem4040904 _102126 A x y f s)). Qed.
Lemma lem4040906 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) : (term671 _102126 A x f y) = (term672 _102126 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4040905 _102126 A x y f s)). Qed.
Lemma lem4040907 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4040908 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) : (term673 _102126 A x f y) = (term674 _102126 A x y f).
Proof. exact (MK_COMB (@lem4040907 A) (@lem4040906 _102126 A x y f)). Qed.
Lemma lem4040909 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term675 _102126 A x f) = (term676 _102126 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4040908 _102126 A x y f)). Qed.
Lemma lem4040910 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4040911 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term656 _102126 A x f) = (term677 _102126 A x f).
Proof. exact (MK_COMB (@lem4040910 A) (@lem4040909 _102126 A x f)). Qed.
Lemma lem4040912 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : ((term655 _102126 A x f) = (term656 _102126 A x f)) = ((term651 _102126 A x f) = (term677 _102126 A x f)).
Proof. exact (MK_COMB (@lem4040900 _102126 A x f) (@lem4040911 _102126 A x f)). Qed.
Lemma lem4040913 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term651 _102126 A x f) = (term677 _102126 A x f).
Proof. exact (EQ_MP (@lem4040912 _102126 A x f) (@lem4040887 _102126 A x f)). Qed.
Lemma lem4040914 {_102126 A : Type'} (f : A -> _102126) : (term653 _102126 A f) = (term678 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4040913 _102126 A x f)). Qed.
Lemma lem4040915 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4040916 {_102126 A : Type'} (f : A -> _102126) : (term654 _102126 A f) = (term679 _102126 A f).
Proof. exact (MK_COMB (@lem4040915 A) (@lem4040914 _102126 A f)). Qed.
Lemma lem4040917 {_102126 A : Type'} (f : A -> _102126) : (term633 _102126 A f) = (term679 _102126 A f).
Proof. exact (TRANS (@lem4040883 _102126 A f) (@lem4040916 _102126 A f)). Qed.
Lemma lem4040918 {_102126 A : Type'} (f : A -> _102126) : (term597 _102126 A f) = (term679 _102126 A f).
Proof. exact (TRANS (@lem4040853 _102126 A f) (@lem4040917 _102126 A f)). Qed.
Lemma lem4040919 {_102126 A : Type'} : (term598 _102126 A) = (term680 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040918 _102126 A f)). Qed.
Lemma lem4040920 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040921 {_102126 A : Type'} : (term599 _102126 A) = (term681 _102126 A).
Proof. exact (MK_COMB (@lem4040920 _102126 A) (@lem4040919 _102126 A)). Qed.
Lemma lem4040923 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040924 {_102126 A : Type'} (P : type776 _102126 A) : (term682 _102126 A P) = (term683 _102126 A P).
Proof. exact (@lem4040923 (A -> _102126) (type684 A) P). Qed.
Lemma lem4040925 {_102126 A : Type'} : (term684 _102126 A) = (term685 _102126 A).
Proof. exact (@lem4040924 _102126 A (term686 _102126 A)). Qed.
Lemma lem4040926 {_102126 A : Type'} (f : A -> _102126) : (term687 _102126 A f) = (term678 _102126 A f).
Proof. exact (eq_refl (term687 _102126 A f)). Qed.
Lemma lem4040927 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4040928 {_102126 A : Type'} (f : A -> _102126) (x : type684 A) : (term688 _102126 A f x) = (term689 _102126 A f x).
Proof. exact (MK_COMB (@lem4040926 _102126 A f) (@lem4040927 A x)). Qed.
Lemma lem4040929 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term689 _102126 A f x) = (term677 _102126 A x f).
Proof. exact (eq_refl (term689 _102126 A f x)). Qed.
Lemma lem4040930 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term688 _102126 A f x) = (term677 _102126 A x f).
Proof. exact (TRANS (@lem4040928 _102126 A f x) (@lem4040929 _102126 A x f)). Qed.
Lemma lem4040931 {_102126 A : Type'} (f : A -> _102126) : (term690 _102126 A f) = (term678 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4040930 _102126 A x f)). Qed.
Lemma lem4040932 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4040933 {_102126 A : Type'} (f : A -> _102126) : (term691 _102126 A f) = (term679 _102126 A f).
Proof. exact (MK_COMB (@lem4040932 A) (@lem4040931 _102126 A f)). Qed.
Lemma lem4040934 {_102126 A : Type'} : (term692 _102126 A) = (term680 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040933 _102126 A f)). Qed.
Lemma lem4040935 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040936 {_102126 A : Type'} : (term684 _102126 A) = (term681 _102126 A).
Proof. exact (MK_COMB (@lem4040935 _102126 A) (@lem4040934 _102126 A)). Qed.
Lemma lem4040937 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040938 {_102126 A : Type'} : (term693 _102126 A) = (term694 _102126 A).
Proof. exact (MK_COMB (@lem4040937) (@lem4040936 _102126 A)). Qed.
Lemma lem4040939 {_102126 A : Type'} (f : A -> _102126) : (term687 _102126 A f) = (term678 _102126 A f).
Proof. exact (eq_refl (term687 _102126 A f)). Qed.
Lemma lem4040940 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4040941 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term695 _102126 A x f) = (term696 _102126 A x f).
Proof. exact (MK_COMB (@lem4040939 _102126 A f) (@lem4040940 _102126 A x f)). Qed.
Lemma lem4040942 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term696 _102126 A x f) = (term697 _102126 A x f).
Proof. exact (eq_refl (term696 _102126 A x f)). Qed.
Lemma lem4040943 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term695 _102126 A x f) = (term697 _102126 A x f).
Proof. exact (TRANS (@lem4040941 _102126 A x f) (@lem4040942 _102126 A x f)). Qed.
Lemma lem4040944 {_102126 A : Type'} (x : type791 _102126 A) : (term698 _102126 A x) = (term699 _102126 A x).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040943 _102126 A x f)). Qed.
Lemma lem4040945 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040946 {_102126 A : Type'} (x : type791 _102126 A) : (term700 _102126 A x) = (term701 _102126 A x).
Proof. exact (MK_COMB (@lem4040945 _102126 A) (@lem4040944 _102126 A x)). Qed.
Lemma lem4040947 {_102126 A : Type'} : (term702 _102126 A) = (term703 _102126 A).
Proof. exact (fun_ext (fun x : type791 _102126 A => @lem4040946 _102126 A x)). Qed.
Lemma lem4040948 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4040949 {_102126 A : Type'} : (term685 _102126 A) = (term704 _102126 A).
Proof. exact (MK_COMB (@lem4040948 _102126 A) (@lem4040947 _102126 A)). Qed.
Lemma lem4040950 {_102126 A : Type'} : ((term684 _102126 A) = (term685 _102126 A)) = ((term681 _102126 A) = (term704 _102126 A)).
Proof. exact (MK_COMB (@lem4040938 _102126 A) (@lem4040949 _102126 A)). Qed.
Lemma lem4040951 {_102126 A : Type'} : (term681 _102126 A) = (term704 _102126 A).
Proof. exact (EQ_MP (@lem4040950 _102126 A) (@lem4040925 _102126 A)). Qed.
Lemma lem4040953 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4040954 {_102126 A : Type'} (P : type776 _102126 A) : (term682 _102126 A P) = (term683 _102126 A P).
Proof. exact (@lem4040953 (A -> _102126) (type684 A) P). Qed.
Lemma lem4040955 {_102126 A : Type'} (x : type791 _102126 A) : (term705 _102126 A x) = (term706 _102126 A x).
Proof. exact (@lem4040954 _102126 A (term707 _102126 A x)). Qed.
Lemma lem4040956 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term708 _102126 A x f) = (term709 _102126 A x f).
Proof. exact (eq_refl (term708 _102126 A x f)). Qed.
Lemma lem4040957 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4040958 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) (y : type684 A) : (term710 _102126 A x f y) = (term711 _102126 A x f y).
Proof. exact (MK_COMB (@lem4040956 _102126 A x f) (@lem4040957 A y)). Qed.
Lemma lem4040959 {_102126 A : Type'} (x : type791 _102126 A) (y : type684 A) (f : A -> _102126) : (term711 _102126 A x f y) = (term712 _102126 A x y f).
Proof. exact (eq_refl (term711 _102126 A x f y)). Qed.
Lemma lem4040960 {_102126 A : Type'} (x : type791 _102126 A) (y : type684 A) (f : A -> _102126) : (term710 _102126 A x f y) = (term712 _102126 A x y f).
Proof. exact (TRANS (@lem4040958 _102126 A x f y) (@lem4040959 _102126 A x y f)). Qed.
Lemma lem4040961 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term713 _102126 A x f) = (term709 _102126 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4040960 _102126 A x y f)). Qed.
Lemma lem4040962 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4040963 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term714 _102126 A x f) = (term697 _102126 A x f).
Proof. exact (MK_COMB (@lem4040962 A) (@lem4040961 _102126 A x f)). Qed.
Lemma lem4040964 {_102126 A : Type'} (x : type791 _102126 A) : (term715 _102126 A x) = (term699 _102126 A x).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040963 _102126 A x f)). Qed.
Lemma lem4040965 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040966 {_102126 A : Type'} (x : type791 _102126 A) : (term705 _102126 A x) = (term701 _102126 A x).
Proof. exact (MK_COMB (@lem4040965 _102126 A) (@lem4040964 _102126 A x)). Qed.
Lemma lem4040967 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4040968 {_102126 A : Type'} (x : type791 _102126 A) : (term716 _102126 A x) = (term717 _102126 A x).
Proof. exact (MK_COMB (@lem4040967) (@lem4040966 _102126 A x)). Qed.
Lemma lem4040969 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term708 _102126 A x f) = (term709 _102126 A x f).
Proof. exact (eq_refl (term708 _102126 A x f)). Qed.
Lemma lem4040970 {_102126 A : Type'} (y : type791 _102126 A) (f : A -> _102126) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4040971 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term718 _102126 A x y f) = (term719 _102126 A x y f).
Proof. exact (MK_COMB (@lem4040969 _102126 A x f) (@lem4040970 _102126 A y f)). Qed.
Lemma lem4040972 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term719 _102126 A x y f) = (term720 _102126 A x y f).
Proof. exact (eq_refl (term719 _102126 A x y f)). Qed.
Lemma lem4040973 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term718 _102126 A x y f) = (term720 _102126 A x y f).
Proof. exact (TRANS (@lem4040971 _102126 A x y f) (@lem4040972 _102126 A x y f)). Qed.
Lemma lem4040974 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) : (term721 _102126 A x y) = (term722 _102126 A x y).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4040973 _102126 A x y f)). Qed.
Lemma lem4040975 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4040976 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) : (term723 _102126 A x y) = (term724 _102126 A x y).
Proof. exact (MK_COMB (@lem4040975 _102126 A) (@lem4040974 _102126 A x y)). Qed.
Lemma lem4040977 {_102126 A : Type'} (x : type791 _102126 A) : (term725 _102126 A x) = (term726 _102126 A x).
Proof. exact (fun_ext (fun y : type791 _102126 A => @lem4040976 _102126 A x y)). Qed.
Lemma lem4040978 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4040979 {_102126 A : Type'} (x : type791 _102126 A) : (term706 _102126 A x) = (term727 _102126 A x).
Proof. exact (MK_COMB (@lem4040978 _102126 A) (@lem4040977 _102126 A x)). Qed.
Lemma lem4040980 {_102126 A : Type'} (x : type791 _102126 A) : ((term705 _102126 A x) = (term706 _102126 A x)) = ((term701 _102126 A x) = (term727 _102126 A x)).
Proof. exact (MK_COMB (@lem4040968 _102126 A x) (@lem4040979 _102126 A x)). Qed.
Lemma lem4040981 {_102126 A : Type'} (x : type791 _102126 A) : (term701 _102126 A x) = (term727 _102126 A x).
Proof. exact (EQ_MP (@lem4040980 _102126 A x) (@lem4040955 _102126 A x)). Qed.
Lemma lem4040982 {_102126 A : Type'} : (term703 _102126 A) = (term728 _102126 A).
Proof. exact (fun_ext (fun x : type791 _102126 A => @lem4040981 _102126 A x)). Qed.
Lemma lem4040983 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4040984 {_102126 A : Type'} : (term704 _102126 A) = (term729 _102126 A).
Proof. exact (MK_COMB (@lem4040983 _102126 A) (@lem4040982 _102126 A)). Qed.
Lemma lem4040985 {_102126 A : Type'} : (term681 _102126 A) = (term729 _102126 A).
Proof. exact (TRANS (@lem4040951 _102126 A) (@lem4040984 _102126 A)). Qed.
Lemma lem4040987 {_102126 A : Type'} : (term599 _102126 A) = (term729 _102126 A).
Proof. exact (TRANS (@lem4040921 _102126 A) (@lem4040985 _102126 A)). Qed.
Lemma lem4040988 {_102126 A : Type'} : (term231 _102126 A) = (term729 _102126 A).
Proof. exact (TRANS (@lem4040693 _102126 A) (@lem4040987 _102126 A)). Qed.
Lemma lem4040989 {_102126 A : Type'} (h1 : term231 _102126 A) : term729 _102126 A.
Proof. exact (EQ_MP (@lem4040988 _102126 A) (@lem4039310 _102126 A h1)). Qed.
Lemma lem4041004 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term574 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (@lem17362 (term576 _102133 A s x f y) (x = y)). Qed.
Lemma lem4041005 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041006 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term577 _102133 A s f x) = (term578 _102133 A s f x).
Proof. exact (@lem4041005 A (term300 _102133 A s f x)). Qed.
Lemma lem4041007 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term579 _102133 A s f x y) = (term299 _102133 A s f x y).
Proof. exact (eq_refl (term579 _102133 A s f x y)). Qed.
Lemma lem4041008 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041009 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term580 _102133 A s f x y) = (term574 _102133 A s f x y).
Proof. exact (MK_COMB (@lem4041008) (@lem4041007 _102133 A s f x y)). Qed.
Lemma lem4041010 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term580 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (TRANS (@lem4041009 _102133 A s f x y) (@lem4041004 _102133 A s f x y)). Qed.
Lemma lem4041011 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term581 _102133 A s f x) = (term582 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4041010 _102133 A s f x y)). Qed.
Lemma lem4041012 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041013 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term578 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (MK_COMB (@lem4041012 A) (@lem4041011 _102133 A s f x)). Qed.
Lemma lem4041014 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term577 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (TRANS (@lem4041006 _102133 A s f x) (@lem4041013 _102133 A s f x)). Qed.
Lemma lem4041015 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041016 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term584 _102133 A s f) = (term585 _102133 A s f).
Proof. exact (@lem4041015 A (term302 _102133 A s f)). Qed.
Lemma lem4041017 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term586 _102133 A s f x) = (term301 _102133 A s f x).
Proof. exact (eq_refl (term586 _102133 A s f x)). Qed.
Lemma lem4041018 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041019 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term587 _102133 A s f x) = (term577 _102133 A s f x).
Proof. exact (MK_COMB (@lem4041018) (@lem4041017 _102133 A s f x)). Qed.
Lemma lem4041020 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term587 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (TRANS (@lem4041019 _102133 A s f x) (@lem4041014 _102133 A s f x)). Qed.
Lemma lem4041021 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term588 _102133 A s f) = (term589 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4041020 _102133 A s f x)). Qed.
Lemma lem4041022 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041023 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term585 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (MK_COMB (@lem4041022 A) (@lem4041021 _102133 A s f)). Qed.
Lemma lem4041024 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term584 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (TRANS (@lem4041016 _102133 A s f) (@lem4041023 _102133 A s f)). Qed.
Lemma lem4041039 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term362 _102133 A f s) = (@FINITE A s)) = (term591 _102133 A f s).
Proof. exact (@lem17784 (term362 _102133 A f s) (@FINITE A s)). Qed.
Lemma lem4041040 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041041 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term592 _102133 A s f) = (term593 _102133 A s f).
Proof. exact (MK_COMB (@lem4041040) (@lem4041024 _102133 A s f)). Qed.
Lemma lem4041042 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term594 _102133 A f s) = (term595 _102133 A f s).
Proof. exact (MK_COMB (@lem4041041 _102133 A s f) (@lem4041039 _102133 A f s)). Qed.
Lemma lem4041043 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term364 _102133 A f s) = (term594 _102133 A f s).
Proof. exact (@lem17265 (term303 _102133 A s f) ((term362 _102133 A f s) = (@FINITE A s))). Qed.
Lemma lem4041044 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term364 _102133 A f s) = (term595 _102133 A f s).
Proof. exact (TRANS (@lem4041043 _102133 A f s) (@lem4041042 _102133 A f s)). Qed.
Lemma lem4041045 {_102133 A : Type'} (f : A -> _102133) : (term365 _102133 A f) = (term596 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041044 _102133 A f s)). Qed.
Lemma lem4041046 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041047 {_102133 A : Type'} (f : A -> _102133) : (term366 _102133 A f) = (term597 _102133 A f).
Proof. exact (MK_COMB (@lem4041046 A) (@lem4041045 _102133 A f)). Qed.
Lemma lem4041048 {_102133 A : Type'} : (term367 _102133 A) = (term598 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041047 _102133 A f)). Qed.
Lemma lem4041049 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041050 {_102133 A : Type'} : (term231 _102133 A) = (term599 _102133 A).
Proof. exact (MK_COMB (@lem4041049 _102133 A) (@lem4041048 _102133 A)). Qed.
Lemma lem4041157 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041158 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041157 A P Q). Qed.
Lemma lem4041159 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term600 _102133 A f s) = (term601 _102133 A f s).
Proof. exact (@lem4041158 A (term589 _102133 A s f) (term591 _102133 A f s)). Qed.
Lemma lem4041160 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term602 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (eq_refl (term602 _102133 A s f x)). Qed.
Lemma lem4041161 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term603 _102133 A s f) = (term589 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4041160 _102133 A s f x)). Qed.
Lemma lem4041162 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041163 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term604 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (MK_COMB (@lem4041162 A) (@lem4041161 _102133 A s f)). Qed.
Lemma lem4041164 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041165 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term605 _102133 A s f) = (term593 _102133 A s f).
Proof. exact (MK_COMB (@lem4041164) (@lem4041163 _102133 A s f)). Qed.
Lemma lem4041166 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term591 _102133 A f s) = (term591 _102133 A f s).
Proof. exact (eq_refl (term591 _102133 A f s)). Qed.
Lemma lem4041167 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term600 _102133 A f s) = (term595 _102133 A f s).
Proof. exact (MK_COMB (@lem4041165 _102133 A s f) (@lem4041166 _102133 A f s)). Qed.
Lemma lem4041168 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041169 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term606 _102133 A f s) = (term607 _102133 A f s).
Proof. exact (MK_COMB (@lem4041168) (@lem4041167 _102133 A f s)). Qed.
Lemma lem4041170 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term602 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (eq_refl (term602 _102133 A s f x)). Qed.
Lemma lem4041171 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041172 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term608 _102133 A s f x) = (term609 _102133 A s f x).
Proof. exact (MK_COMB (@lem4041171) (@lem4041170 _102133 A s f x)). Qed.
Lemma lem4041173 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term591 _102133 A f s) = (term591 _102133 A f s).
Proof. exact (eq_refl (term591 _102133 A f s)). Qed.
Lemma lem4041174 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term610 _102133 A x f s) = (term611 _102133 A x f s).
Proof. exact (MK_COMB (@lem4041172 _102133 A s f x) (@lem4041173 _102133 A f s)). Qed.
Lemma lem4041175 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term612 _102133 A f s) = (term613 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041174 _102133 A x f s)). Qed.
Lemma lem4041176 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041177 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term601 _102133 A f s) = (term614 _102133 A f s).
Proof. exact (MK_COMB (@lem4041176 A) (@lem4041175 _102133 A f s)). Qed.
Lemma lem4041178 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term600 _102133 A f s) = (term601 _102133 A f s)) = ((term595 _102133 A f s) = (term614 _102133 A f s)).
Proof. exact (MK_COMB (@lem4041169 _102133 A f s) (@lem4041177 _102133 A f s)). Qed.
Lemma lem4041179 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term595 _102133 A f s) = (term614 _102133 A f s).
Proof. exact (EQ_MP (@lem4041178 _102133 A f s) (@lem4041159 _102133 A f s)). Qed.
Lemma lem4041181 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041182 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041181 A P Q). Qed.
Lemma lem4041183 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term615 _102133 A x f s) = (term616 _102133 A x f s).
Proof. exact (@lem4041182 A (term582 _102133 A s f x) (term591 _102133 A f s)). Qed.
Lemma lem4041184 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term617 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (eq_refl (term617 _102133 A s f x y)). Qed.
Lemma lem4041185 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term618 _102133 A s f x) = (term582 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4041184 _102133 A s f x y)). Qed.
Lemma lem4041186 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041187 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term619 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (MK_COMB (@lem4041186 A) (@lem4041185 _102133 A s f x)). Qed.
Lemma lem4041188 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041189 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term620 _102133 A s f x) = (term609 _102133 A s f x).
Proof. exact (MK_COMB (@lem4041188) (@lem4041187 _102133 A s f x)). Qed.
Lemma lem4041190 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term591 _102133 A f s) = (term591 _102133 A f s).
Proof. exact (eq_refl (term591 _102133 A f s)). Qed.
Lemma lem4041191 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term615 _102133 A x f s) = (term611 _102133 A x f s).
Proof. exact (MK_COMB (@lem4041189 _102133 A s f x) (@lem4041190 _102133 A f s)). Qed.
Lemma lem4041192 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041193 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term621 _102133 A x f s) = (term622 _102133 A x f s).
Proof. exact (MK_COMB (@lem4041192) (@lem4041191 _102133 A x f s)). Qed.
Lemma lem4041194 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term617 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (eq_refl (term617 _102133 A s f x y)). Qed.
Lemma lem4041195 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041196 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term623 _102133 A s f x y) = (term624 _102133 A s f x y).
Proof. exact (MK_COMB (@lem4041195) (@lem4041194 _102133 A s f x y)). Qed.
Lemma lem4041197 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term591 _102133 A f s) = (term591 _102133 A f s).
Proof. exact (eq_refl (term591 _102133 A f s)). Qed.
Lemma lem4041198 {_102133 A : Type'} (x : A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term625 _102133 A x y f s) = (term626 _102133 A x y f s).
Proof. exact (MK_COMB (@lem4041196 _102133 A s f x y) (@lem4041197 _102133 A f s)). Qed.
Lemma lem4041199 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term627 _102133 A x f s) = (term628 _102133 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4041198 _102133 A x y f s)). Qed.
Lemma lem4041200 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041201 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term616 _102133 A x f s) = (term629 _102133 A x f s).
Proof. exact (MK_COMB (@lem4041200 A) (@lem4041199 _102133 A x f s)). Qed.
Lemma lem4041202 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : ((term615 _102133 A x f s) = (term616 _102133 A x f s)) = ((term611 _102133 A x f s) = (term629 _102133 A x f s)).
Proof. exact (MK_COMB (@lem4041193 _102133 A x f s) (@lem4041201 _102133 A x f s)). Qed.
Lemma lem4041203 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term611 _102133 A x f s) = (term629 _102133 A x f s).
Proof. exact (EQ_MP (@lem4041202 _102133 A x f s) (@lem4041183 _102133 A x f s)). Qed.
Lemma lem4041204 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term613 _102133 A f s) = (term630 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041203 _102133 A x f s)). Qed.
Lemma lem4041205 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041206 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term614 _102133 A f s) = (term631 _102133 A f s).
Proof. exact (MK_COMB (@lem4041205 A) (@lem4041204 _102133 A f s)). Qed.
Lemma lem4041207 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term595 _102133 A f s) = (term631 _102133 A f s).
Proof. exact (TRANS (@lem4041179 _102133 A f s) (@lem4041206 _102133 A f s)). Qed.
Lemma lem4041208 {_102133 A : Type'} (f : A -> _102133) : (term596 _102133 A f) = (term632 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041207 _102133 A f s)). Qed.
Lemma lem4041209 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041210 {_102133 A : Type'} (f : A -> _102133) : (term597 _102133 A f) = (term633 _102133 A f).
Proof. exact (MK_COMB (@lem4041209 A) (@lem4041208 _102133 A f)). Qed.
Lemma lem4041212 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041213 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041212 (A -> Prop) A P). Qed.
Lemma lem4041214 {_102133 A : Type'} (f : A -> _102133) : (term634 _102133 A f) = (term635 _102133 A f).
Proof. exact (@lem4041213 A (term636 _102133 A f)). Qed.
Lemma lem4041215 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term637 _102133 A f s) = (term630 _102133 A f s).
Proof. exact (eq_refl (term637 _102133 A f s)). Qed.
Lemma lem4041216 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041217 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) (x : A) : (term638 _102133 A f s x) = (term639 _102133 A f s x).
Proof. exact (MK_COMB (@lem4041215 _102133 A f s) (@lem4041216 A x)). Qed.
Lemma lem4041218 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term639 _102133 A f s x) = (term629 _102133 A x f s).
Proof. exact (eq_refl (term639 _102133 A f s x)). Qed.
Lemma lem4041219 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term638 _102133 A f s x) = (term629 _102133 A x f s).
Proof. exact (TRANS (@lem4041217 _102133 A f s x) (@lem4041218 _102133 A x f s)). Qed.
Lemma lem4041220 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term640 _102133 A f s) = (term630 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041219 _102133 A x f s)). Qed.
Lemma lem4041221 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041222 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term641 _102133 A f s) = (term631 _102133 A f s).
Proof. exact (MK_COMB (@lem4041221 A) (@lem4041220 _102133 A f s)). Qed.
Lemma lem4041223 {_102133 A : Type'} (f : A -> _102133) : (term642 _102133 A f) = (term632 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041222 _102133 A f s)). Qed.
Lemma lem4041224 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041225 {_102133 A : Type'} (f : A -> _102133) : (term634 _102133 A f) = (term633 _102133 A f).
Proof. exact (MK_COMB (@lem4041224 A) (@lem4041223 _102133 A f)). Qed.
Lemma lem4041226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041227 {_102133 A : Type'} (f : A -> _102133) : (term643 _102133 A f) = (term644 _102133 A f).
Proof. exact (MK_COMB (@lem4041226) (@lem4041225 _102133 A f)). Qed.
Lemma lem4041228 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term637 _102133 A f s) = (term630 _102133 A f s).
Proof. exact (eq_refl (term637 _102133 A f s)). Qed.
Lemma lem4041229 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4041230 {_102133 A : Type'} (f : A -> _102133) (x : type684 A) (s : A -> Prop) : (term645 _102133 A f x s) = (term646 _102133 A f x s).
Proof. exact (MK_COMB (@lem4041228 _102133 A f s) (@lem4041229 A x s)). Qed.
Lemma lem4041231 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term646 _102133 A f x s) = (term647 _102133 A x f s).
Proof. exact (eq_refl (term646 _102133 A f x s)). Qed.
Lemma lem4041232 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term645 _102133 A f x s) = (term647 _102133 A x f s).
Proof. exact (TRANS (@lem4041230 _102133 A f x s) (@lem4041231 _102133 A x f s)). Qed.
Lemma lem4041233 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term648 _102133 A f x) = (term649 _102133 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041232 _102133 A x f s)). Qed.
Lemma lem4041234 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041235 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term650 _102133 A f x) = (term651 _102133 A x f).
Proof. exact (MK_COMB (@lem4041234 A) (@lem4041233 _102133 A x f)). Qed.
Lemma lem4041236 {_102133 A : Type'} (f : A -> _102133) : (term652 _102133 A f) = (term653 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041235 _102133 A x f)). Qed.
Lemma lem4041237 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041238 {_102133 A : Type'} (f : A -> _102133) : (term635 _102133 A f) = (term654 _102133 A f).
Proof. exact (MK_COMB (@lem4041237 A) (@lem4041236 _102133 A f)). Qed.
Lemma lem4041239 {_102133 A : Type'} (f : A -> _102133) : ((term634 _102133 A f) = (term635 _102133 A f)) = ((term633 _102133 A f) = (term654 _102133 A f)).
Proof. exact (MK_COMB (@lem4041227 _102133 A f) (@lem4041238 _102133 A f)). Qed.
Lemma lem4041240 {_102133 A : Type'} (f : A -> _102133) : (term633 _102133 A f) = (term654 _102133 A f).
Proof. exact (EQ_MP (@lem4041239 _102133 A f) (@lem4041214 _102133 A f)). Qed.
Lemma lem4041242 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041243 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041242 (A -> Prop) A P). Qed.
Lemma lem4041244 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term655 _102133 A x f) = (term656 _102133 A x f).
Proof. exact (@lem4041243 A (term657 _102133 A x f)). Qed.
Lemma lem4041245 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term658 _102133 A x f s) = (term659 _102133 A x f s).
Proof. exact (eq_refl (term658 _102133 A x f s)). Qed.
Lemma lem4041246 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4041247 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) (y : A) : (term660 _102133 A x f s y) = (term661 _102133 A x f s y).
Proof. exact (MK_COMB (@lem4041245 _102133 A x f s) (@lem4041246 A y)). Qed.
Lemma lem4041248 {_102133 A : Type'} (x : type684 A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term661 _102133 A x f s y) = (term662 _102133 A x y f s).
Proof. exact (eq_refl (term661 _102133 A x f s y)). Qed.
Lemma lem4041249 {_102133 A : Type'} (x : type684 A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term660 _102133 A x f s y) = (term662 _102133 A x y f s).
Proof. exact (TRANS (@lem4041247 _102133 A x f s y) (@lem4041248 _102133 A x y f s)). Qed.
Lemma lem4041250 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term663 _102133 A x f s) = (term659 _102133 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4041249 _102133 A x y f s)). Qed.
Lemma lem4041251 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041252 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term664 _102133 A x f s) = (term647 _102133 A x f s).
Proof. exact (MK_COMB (@lem4041251 A) (@lem4041250 _102133 A x f s)). Qed.
Lemma lem4041253 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term665 _102133 A x f) = (term649 _102133 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041252 _102133 A x f s)). Qed.
Lemma lem4041254 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041255 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term655 _102133 A x f) = (term651 _102133 A x f).
Proof. exact (MK_COMB (@lem4041254 A) (@lem4041253 _102133 A x f)). Qed.
Lemma lem4041256 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041257 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term666 _102133 A x f) = (term667 _102133 A x f).
Proof. exact (MK_COMB (@lem4041256) (@lem4041255 _102133 A x f)). Qed.
Lemma lem4041258 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term658 _102133 A x f s) = (term659 _102133 A x f s).
Proof. exact (eq_refl (term658 _102133 A x f s)). Qed.
Lemma lem4041259 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4041260 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (y : type684 A) (s : A -> Prop) : (term668 _102133 A x f y s) = (term669 _102133 A x f y s).
Proof. exact (MK_COMB (@lem4041258 _102133 A x f s) (@lem4041259 A y s)). Qed.
Lemma lem4041261 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) (s : A -> Prop) : (term669 _102133 A x f y s) = (term670 _102133 A x y f s).
Proof. exact (eq_refl (term669 _102133 A x f y s)). Qed.
Lemma lem4041262 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) (s : A -> Prop) : (term668 _102133 A x f y s) = (term670 _102133 A x y f s).
Proof. exact (TRANS (@lem4041260 _102133 A x f y s) (@lem4041261 _102133 A x y f s)). Qed.
Lemma lem4041263 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) : (term671 _102133 A x f y) = (term672 _102133 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041262 _102133 A x y f s)). Qed.
Lemma lem4041264 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041265 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) : (term673 _102133 A x f y) = (term674 _102133 A x y f).
Proof. exact (MK_COMB (@lem4041264 A) (@lem4041263 _102133 A x y f)). Qed.
Lemma lem4041266 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term675 _102133 A x f) = (term676 _102133 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4041265 _102133 A x y f)). Qed.
Lemma lem4041267 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041268 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term656 _102133 A x f) = (term677 _102133 A x f).
Proof. exact (MK_COMB (@lem4041267 A) (@lem4041266 _102133 A x f)). Qed.
Lemma lem4041269 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : ((term655 _102133 A x f) = (term656 _102133 A x f)) = ((term651 _102133 A x f) = (term677 _102133 A x f)).
Proof. exact (MK_COMB (@lem4041257 _102133 A x f) (@lem4041268 _102133 A x f)). Qed.
Lemma lem4041270 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term651 _102133 A x f) = (term677 _102133 A x f).
Proof. exact (EQ_MP (@lem4041269 _102133 A x f) (@lem4041244 _102133 A x f)). Qed.
Lemma lem4041271 {_102133 A : Type'} (f : A -> _102133) : (term653 _102133 A f) = (term678 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041270 _102133 A x f)). Qed.
Lemma lem4041272 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041273 {_102133 A : Type'} (f : A -> _102133) : (term654 _102133 A f) = (term679 _102133 A f).
Proof. exact (MK_COMB (@lem4041272 A) (@lem4041271 _102133 A f)). Qed.
Lemma lem4041274 {_102133 A : Type'} (f : A -> _102133) : (term633 _102133 A f) = (term679 _102133 A f).
Proof. exact (TRANS (@lem4041240 _102133 A f) (@lem4041273 _102133 A f)). Qed.
Lemma lem4041275 {_102133 A : Type'} (f : A -> _102133) : (term597 _102133 A f) = (term679 _102133 A f).
Proof. exact (TRANS (@lem4041210 _102133 A f) (@lem4041274 _102133 A f)). Qed.
Lemma lem4041276 {_102133 A : Type'} : (term598 _102133 A) = (term680 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041275 _102133 A f)). Qed.
Lemma lem4041277 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041278 {_102133 A : Type'} : (term599 _102133 A) = (term681 _102133 A).
Proof. exact (MK_COMB (@lem4041277 _102133 A) (@lem4041276 _102133 A)). Qed.
Lemma lem4041280 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041281 {_102133 A : Type'} (P : type776 _102133 A) : (term682 _102133 A P) = (term683 _102133 A P).
Proof. exact (@lem4041280 (A -> _102133) (type684 A) P). Qed.
Lemma lem4041282 {_102133 A : Type'} : (term684 _102133 A) = (term685 _102133 A).
Proof. exact (@lem4041281 _102133 A (term686 _102133 A)). Qed.
Lemma lem4041283 {_102133 A : Type'} (f : A -> _102133) : (term687 _102133 A f) = (term678 _102133 A f).
Proof. exact (eq_refl (term687 _102133 A f)). Qed.
Lemma lem4041284 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041285 {_102133 A : Type'} (f : A -> _102133) (x : type684 A) : (term688 _102133 A f x) = (term689 _102133 A f x).
Proof. exact (MK_COMB (@lem4041283 _102133 A f) (@lem4041284 A x)). Qed.
Lemma lem4041286 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term689 _102133 A f x) = (term677 _102133 A x f).
Proof. exact (eq_refl (term689 _102133 A f x)). Qed.
Lemma lem4041287 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term688 _102133 A f x) = (term677 _102133 A x f).
Proof. exact (TRANS (@lem4041285 _102133 A f x) (@lem4041286 _102133 A x f)). Qed.
Lemma lem4041288 {_102133 A : Type'} (f : A -> _102133) : (term690 _102133 A f) = (term678 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041287 _102133 A x f)). Qed.
Lemma lem4041289 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041290 {_102133 A : Type'} (f : A -> _102133) : (term691 _102133 A f) = (term679 _102133 A f).
Proof. exact (MK_COMB (@lem4041289 A) (@lem4041288 _102133 A f)). Qed.
Lemma lem4041291 {_102133 A : Type'} : (term692 _102133 A) = (term680 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041290 _102133 A f)). Qed.
Lemma lem4041292 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041293 {_102133 A : Type'} : (term684 _102133 A) = (term681 _102133 A).
Proof. exact (MK_COMB (@lem4041292 _102133 A) (@lem4041291 _102133 A)). Qed.
Lemma lem4041294 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041295 {_102133 A : Type'} : (term693 _102133 A) = (term694 _102133 A).
Proof. exact (MK_COMB (@lem4041294) (@lem4041293 _102133 A)). Qed.
Lemma lem4041296 {_102133 A : Type'} (f : A -> _102133) : (term687 _102133 A f) = (term678 _102133 A f).
Proof. exact (eq_refl (term687 _102133 A f)). Qed.
Lemma lem4041297 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4041298 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term695 _102133 A x f) = (term696 _102133 A x f).
Proof. exact (MK_COMB (@lem4041296 _102133 A f) (@lem4041297 _102133 A x f)). Qed.
Lemma lem4041299 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term696 _102133 A x f) = (term697 _102133 A x f).
Proof. exact (eq_refl (term696 _102133 A x f)). Qed.
Lemma lem4041300 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term695 _102133 A x f) = (term697 _102133 A x f).
Proof. exact (TRANS (@lem4041298 _102133 A x f) (@lem4041299 _102133 A x f)). Qed.
Lemma lem4041301 {_102133 A : Type'} (x : type791 _102133 A) : (term698 _102133 A x) = (term699 _102133 A x).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041300 _102133 A x f)). Qed.
Lemma lem4041302 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041303 {_102133 A : Type'} (x : type791 _102133 A) : (term700 _102133 A x) = (term701 _102133 A x).
Proof. exact (MK_COMB (@lem4041302 _102133 A) (@lem4041301 _102133 A x)). Qed.
Lemma lem4041304 {_102133 A : Type'} : (term702 _102133 A) = (term703 _102133 A).
Proof. exact (fun_ext (fun x : type791 _102133 A => @lem4041303 _102133 A x)). Qed.
Lemma lem4041305 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4041306 {_102133 A : Type'} : (term685 _102133 A) = (term704 _102133 A).
Proof. exact (MK_COMB (@lem4041305 _102133 A) (@lem4041304 _102133 A)). Qed.
Lemma lem4041307 {_102133 A : Type'} : ((term684 _102133 A) = (term685 _102133 A)) = ((term681 _102133 A) = (term704 _102133 A)).
Proof. exact (MK_COMB (@lem4041295 _102133 A) (@lem4041306 _102133 A)). Qed.
Lemma lem4041308 {_102133 A : Type'} : (term681 _102133 A) = (term704 _102133 A).
Proof. exact (EQ_MP (@lem4041307 _102133 A) (@lem4041282 _102133 A)). Qed.
Lemma lem4041310 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041311 {_102133 A : Type'} (P : type776 _102133 A) : (term682 _102133 A P) = (term683 _102133 A P).
Proof. exact (@lem4041310 (A -> _102133) (type684 A) P). Qed.
Lemma lem4041312 {_102133 A : Type'} (x : type791 _102133 A) : (term705 _102133 A x) = (term706 _102133 A x).
Proof. exact (@lem4041311 _102133 A (term707 _102133 A x)). Qed.
Lemma lem4041313 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term708 _102133 A x f) = (term709 _102133 A x f).
Proof. exact (eq_refl (term708 _102133 A x f)). Qed.
Lemma lem4041314 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4041315 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) (y : type684 A) : (term710 _102133 A x f y) = (term711 _102133 A x f y).
Proof. exact (MK_COMB (@lem4041313 _102133 A x f) (@lem4041314 A y)). Qed.
Lemma lem4041316 {_102133 A : Type'} (x : type791 _102133 A) (y : type684 A) (f : A -> _102133) : (term711 _102133 A x f y) = (term712 _102133 A x y f).
Proof. exact (eq_refl (term711 _102133 A x f y)). Qed.
Lemma lem4041317 {_102133 A : Type'} (x : type791 _102133 A) (y : type684 A) (f : A -> _102133) : (term710 _102133 A x f y) = (term712 _102133 A x y f).
Proof. exact (TRANS (@lem4041315 _102133 A x f y) (@lem4041316 _102133 A x y f)). Qed.
Lemma lem4041318 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term713 _102133 A x f) = (term709 _102133 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4041317 _102133 A x y f)). Qed.
Lemma lem4041319 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041320 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term714 _102133 A x f) = (term697 _102133 A x f).
Proof. exact (MK_COMB (@lem4041319 A) (@lem4041318 _102133 A x f)). Qed.
Lemma lem4041321 {_102133 A : Type'} (x : type791 _102133 A) : (term715 _102133 A x) = (term699 _102133 A x).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041320 _102133 A x f)). Qed.
Lemma lem4041322 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041323 {_102133 A : Type'} (x : type791 _102133 A) : (term705 _102133 A x) = (term701 _102133 A x).
Proof. exact (MK_COMB (@lem4041322 _102133 A) (@lem4041321 _102133 A x)). Qed.
Lemma lem4041324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041325 {_102133 A : Type'} (x : type791 _102133 A) : (term716 _102133 A x) = (term717 _102133 A x).
Proof. exact (MK_COMB (@lem4041324) (@lem4041323 _102133 A x)). Qed.
Lemma lem4041326 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term708 _102133 A x f) = (term709 _102133 A x f).
Proof. exact (eq_refl (term708 _102133 A x f)). Qed.
Lemma lem4041327 {_102133 A : Type'} (y : type791 _102133 A) (f : A -> _102133) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4041328 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term718 _102133 A x y f) = (term719 _102133 A x y f).
Proof. exact (MK_COMB (@lem4041326 _102133 A x f) (@lem4041327 _102133 A y f)). Qed.
Lemma lem4041329 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term719 _102133 A x y f) = (term720 _102133 A x y f).
Proof. exact (eq_refl (term719 _102133 A x y f)). Qed.
Lemma lem4041330 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term718 _102133 A x y f) = (term720 _102133 A x y f).
Proof. exact (TRANS (@lem4041328 _102133 A x y f) (@lem4041329 _102133 A x y f)). Qed.
Lemma lem4041331 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) : (term721 _102133 A x y) = (term722 _102133 A x y).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4041330 _102133 A x y f)). Qed.
Lemma lem4041332 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4041333 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) : (term723 _102133 A x y) = (term724 _102133 A x y).
Proof. exact (MK_COMB (@lem4041332 _102133 A) (@lem4041331 _102133 A x y)). Qed.
Lemma lem4041334 {_102133 A : Type'} (x : type791 _102133 A) : (term725 _102133 A x) = (term726 _102133 A x).
Proof. exact (fun_ext (fun y : type791 _102133 A => @lem4041333 _102133 A x y)). Qed.
Lemma lem4041335 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4041336 {_102133 A : Type'} (x : type791 _102133 A) : (term706 _102133 A x) = (term727 _102133 A x).
Proof. exact (MK_COMB (@lem4041335 _102133 A) (@lem4041334 _102133 A x)). Qed.
Lemma lem4041337 {_102133 A : Type'} (x : type791 _102133 A) : ((term705 _102133 A x) = (term706 _102133 A x)) = ((term701 _102133 A x) = (term727 _102133 A x)).
Proof. exact (MK_COMB (@lem4041325 _102133 A x) (@lem4041336 _102133 A x)). Qed.
Lemma lem4041338 {_102133 A : Type'} (x : type791 _102133 A) : (term701 _102133 A x) = (term727 _102133 A x).
Proof. exact (EQ_MP (@lem4041337 _102133 A x) (@lem4041312 _102133 A x)). Qed.
Lemma lem4041339 {_102133 A : Type'} : (term703 _102133 A) = (term728 _102133 A).
Proof. exact (fun_ext (fun x : type791 _102133 A => @lem4041338 _102133 A x)). Qed.
Lemma lem4041340 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4041341 {_102133 A : Type'} : (term704 _102133 A) = (term729 _102133 A).
Proof. exact (MK_COMB (@lem4041340 _102133 A) (@lem4041339 _102133 A)). Qed.
Lemma lem4041342 {_102133 A : Type'} : (term681 _102133 A) = (term729 _102133 A).
Proof. exact (TRANS (@lem4041308 _102133 A) (@lem4041341 _102133 A)). Qed.
Lemma lem4041344 {_102133 A : Type'} : (term599 _102133 A) = (term729 _102133 A).
Proof. exact (TRANS (@lem4041278 _102133 A) (@lem4041342 _102133 A)). Qed.
Lemma lem4041345 {_102133 A : Type'} : (term231 _102133 A) = (term729 _102133 A).
Proof. exact (TRANS (@lem4041050 _102133 A) (@lem4041344 _102133 A)). Qed.
Lemma lem4041346 {_102133 A : Type'} (h1 : term231 _102133 A) : term729 _102133 A.
Proof. exact (EQ_MP (@lem4041345 _102133 A) (@lem4039311 _102133 A h1)). Qed.
Lemma lem4041361 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term730 A s f x y) = (term731 A s f x y).
Proof. exact (@lem17362 (term732 A s x f y) (x = y)). Qed.
Lemma lem4041362 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041363 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term733 A s f x) = (term734 A s f x).
Proof. exact (@lem4041362 A (term337 A s f x)). Qed.
Lemma lem4041364 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term735 A s f x y) = (term336 A s f x y).
Proof. exact (eq_refl (term735 A s f x y)). Qed.
Lemma lem4041365 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041366 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term736 A s f x y) = (term730 A s f x y).
Proof. exact (MK_COMB (@lem4041365) (@lem4041364 A s f x y)). Qed.
Lemma lem4041367 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term736 A s f x y) = (term731 A s f x y).
Proof. exact (TRANS (@lem4041366 A s f x y) (@lem4041361 A s f x y)). Qed.
Lemma lem4041368 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term737 A s f x) = (term738 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4041367 A s f x y)). Qed.
Lemma lem4041369 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041370 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term734 A s f x) = (term739 A s f x).
Proof. exact (MK_COMB (@lem4041369 A) (@lem4041368 A s f x)). Qed.
Lemma lem4041371 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term733 A s f x) = (term739 A s f x).
Proof. exact (TRANS (@lem4041363 A s f x) (@lem4041370 A s f x)). Qed.
Lemma lem4041372 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041373 {A : Type'} (s : A -> Prop) (f : A -> A) : (term740 A s f) = (term741 A s f).
Proof. exact (@lem4041372 A (term339 A s f)). Qed.
Lemma lem4041374 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term742 A s f x) = (term338 A s f x).
Proof. exact (eq_refl (term742 A s f x)). Qed.
Lemma lem4041375 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041376 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term743 A s f x) = (term733 A s f x).
Proof. exact (MK_COMB (@lem4041375) (@lem4041374 A s f x)). Qed.
Lemma lem4041377 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term743 A s f x) = (term739 A s f x).
Proof. exact (TRANS (@lem4041376 A s f x) (@lem4041371 A s f x)). Qed.
Lemma lem4041378 {A : Type'} (s : A -> Prop) (f : A -> A) : (term744 A s f) = (term745 A s f).
Proof. exact (fun_ext (fun x : A => @lem4041377 A s f x)). Qed.
Lemma lem4041379 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041380 {A : Type'} (s : A -> Prop) (f : A -> A) : (term741 A s f) = (term746 A s f).
Proof. exact (MK_COMB (@lem4041379 A) (@lem4041378 A s f)). Qed.
Lemma lem4041381 {A : Type'} (s : A -> Prop) (f : A -> A) : (term740 A s f) = (term746 A s f).
Proof. exact (TRANS (@lem4041373 A s f) (@lem4041380 A s f)). Qed.
Lemma lem4041396 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term335 A f s) = (@FINITE A s)) = (term747 A f s).
Proof. exact (@lem17784 (term335 A f s) (@FINITE A s)). Qed.
Lemma lem4041397 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041398 {A : Type'} (s : A -> Prop) (f : A -> A) : (term748 A s f) = (term749 A s f).
Proof. exact (MK_COMB (@lem4041397) (@lem4041381 A s f)). Qed.
Lemma lem4041399 {A : Type'} (f : A -> A) (s : A -> Prop) : (term750 A f s) = (term751 A f s).
Proof. exact (MK_COMB (@lem4041398 A s f) (@lem4041396 A f s)). Qed.
Lemma lem4041400 {A : Type'} (f : A -> A) (s : A -> Prop) : (term342 A f s) = (term750 A f s).
Proof. exact (@lem17265 (term340 A s f) ((term335 A f s) = (@FINITE A s))). Qed.
Lemma lem4041401 {A : Type'} (f : A -> A) (s : A -> Prop) : (term342 A f s) = (term751 A f s).
Proof. exact (TRANS (@lem4041400 A f s) (@lem4041399 A f s)). Qed.
Lemma lem4041402 {A : Type'} (f : A -> A) : (term343 A f) = (term752 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041401 A f s)). Qed.
Lemma lem4041403 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041404 {A : Type'} (f : A -> A) : (term344 A f) = (term753 A f).
Proof. exact (MK_COMB (@lem4041403 A) (@lem4041402 A f)). Qed.
Lemma lem4041405 {A : Type'} : (term345 A) = (term754 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4041404 A f)). Qed.
Lemma lem4041406 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041407 {A : Type'} : (term232 A) = (term755 A).
Proof. exact (MK_COMB (@lem4041406 A) (@lem4041405 A)). Qed.
Lemma lem4041514 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041515 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041514 A P Q). Qed.
Lemma lem4041516 {A : Type'} (f : A -> A) (s : A -> Prop) : (term756 A f s) = (term757 A f s).
Proof. exact (@lem4041515 A (term745 A s f) (term747 A f s)). Qed.
Lemma lem4041517 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term758 A s f x) = (term739 A s f x).
Proof. exact (eq_refl (term758 A s f x)). Qed.
Lemma lem4041518 {A : Type'} (s : A -> Prop) (f : A -> A) : (term759 A s f) = (term745 A s f).
Proof. exact (fun_ext (fun x : A => @lem4041517 A s f x)). Qed.
Lemma lem4041519 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041520 {A : Type'} (s : A -> Prop) (f : A -> A) : (term760 A s f) = (term746 A s f).
Proof. exact (MK_COMB (@lem4041519 A) (@lem4041518 A s f)). Qed.
Lemma lem4041521 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041522 {A : Type'} (s : A -> Prop) (f : A -> A) : (term761 A s f) = (term749 A s f).
Proof. exact (MK_COMB (@lem4041521) (@lem4041520 A s f)). Qed.
Lemma lem4041523 {A : Type'} (f : A -> A) (s : A -> Prop) : (term747 A f s) = (term747 A f s).
Proof. exact (eq_refl (term747 A f s)). Qed.
Lemma lem4041524 {A : Type'} (f : A -> A) (s : A -> Prop) : (term756 A f s) = (term751 A f s).
Proof. exact (MK_COMB (@lem4041522 A s f) (@lem4041523 A f s)). Qed.
Lemma lem4041525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041526 {A : Type'} (f : A -> A) (s : A -> Prop) : (term762 A f s) = (term763 A f s).
Proof. exact (MK_COMB (@lem4041525) (@lem4041524 A f s)). Qed.
Lemma lem4041527 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term758 A s f x) = (term739 A s f x).
Proof. exact (eq_refl (term758 A s f x)). Qed.
Lemma lem4041528 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041529 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term764 A s f x) = (term765 A s f x).
Proof. exact (MK_COMB (@lem4041528) (@lem4041527 A s f x)). Qed.
Lemma lem4041530 {A : Type'} (f : A -> A) (s : A -> Prop) : (term747 A f s) = (term747 A f s).
Proof. exact (eq_refl (term747 A f s)). Qed.
Lemma lem4041531 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term766 A x f s) = (term767 A x f s).
Proof. exact (MK_COMB (@lem4041529 A s f x) (@lem4041530 A f s)). Qed.
Lemma lem4041532 {A : Type'} (f : A -> A) (s : A -> Prop) : (term768 A f s) = (term769 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041531 A x f s)). Qed.
Lemma lem4041533 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041534 {A : Type'} (f : A -> A) (s : A -> Prop) : (term757 A f s) = (term770 A f s).
Proof. exact (MK_COMB (@lem4041533 A) (@lem4041532 A f s)). Qed.
Lemma lem4041535 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term756 A f s) = (term757 A f s)) = ((term751 A f s) = (term770 A f s)).
Proof. exact (MK_COMB (@lem4041526 A f s) (@lem4041534 A f s)). Qed.
Lemma lem4041536 {A : Type'} (f : A -> A) (s : A -> Prop) : (term751 A f s) = (term770 A f s).
Proof. exact (EQ_MP (@lem4041535 A f s) (@lem4041516 A f s)). Qed.
Lemma lem4041538 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041539 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041538 A P Q). Qed.
Lemma lem4041540 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term771 A x f s) = (term772 A x f s).
Proof. exact (@lem4041539 A (term738 A s f x) (term747 A f s)). Qed.
Lemma lem4041541 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term773 A s f x y) = (term731 A s f x y).
Proof. exact (eq_refl (term773 A s f x y)). Qed.
Lemma lem4041542 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term774 A s f x) = (term738 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4041541 A s f x y)). Qed.
Lemma lem4041543 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041544 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term775 A s f x) = (term739 A s f x).
Proof. exact (MK_COMB (@lem4041543 A) (@lem4041542 A s f x)). Qed.
Lemma lem4041545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041546 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term776 A s f x) = (term765 A s f x).
Proof. exact (MK_COMB (@lem4041545) (@lem4041544 A s f x)). Qed.
Lemma lem4041547 {A : Type'} (f : A -> A) (s : A -> Prop) : (term747 A f s) = (term747 A f s).
Proof. exact (eq_refl (term747 A f s)). Qed.
Lemma lem4041548 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term771 A x f s) = (term767 A x f s).
Proof. exact (MK_COMB (@lem4041546 A s f x) (@lem4041547 A f s)). Qed.
Lemma lem4041549 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041550 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term777 A x f s) = (term778 A x f s).
Proof. exact (MK_COMB (@lem4041549) (@lem4041548 A x f s)). Qed.
Lemma lem4041551 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term773 A s f x y) = (term731 A s f x y).
Proof. exact (eq_refl (term773 A s f x y)). Qed.
Lemma lem4041552 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041553 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term779 A s f x y) = (term780 A s f x y).
Proof. exact (MK_COMB (@lem4041552) (@lem4041551 A s f x y)). Qed.
Lemma lem4041554 {A : Type'} (f : A -> A) (s : A -> Prop) : (term747 A f s) = (term747 A f s).
Proof. exact (eq_refl (term747 A f s)). Qed.
Lemma lem4041555 {A : Type'} (x : A) (y : A) (f : A -> A) (s : A -> Prop) : (term781 A x y f s) = (term782 A x y f s).
Proof. exact (MK_COMB (@lem4041553 A s f x y) (@lem4041554 A f s)). Qed.
Lemma lem4041556 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term783 A x f s) = (term784 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4041555 A x y f s)). Qed.
Lemma lem4041557 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041558 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term772 A x f s) = (term785 A x f s).
Proof. exact (MK_COMB (@lem4041557 A) (@lem4041556 A x f s)). Qed.
Lemma lem4041559 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : ((term771 A x f s) = (term772 A x f s)) = ((term767 A x f s) = (term785 A x f s)).
Proof. exact (MK_COMB (@lem4041550 A x f s) (@lem4041558 A x f s)). Qed.
Lemma lem4041560 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term767 A x f s) = (term785 A x f s).
Proof. exact (EQ_MP (@lem4041559 A x f s) (@lem4041540 A x f s)). Qed.
Lemma lem4041561 {A : Type'} (f : A -> A) (s : A -> Prop) : (term769 A f s) = (term786 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041560 A x f s)). Qed.
Lemma lem4041562 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041563 {A : Type'} (f : A -> A) (s : A -> Prop) : (term770 A f s) = (term787 A f s).
Proof. exact (MK_COMB (@lem4041562 A) (@lem4041561 A f s)). Qed.
Lemma lem4041564 {A : Type'} (f : A -> A) (s : A -> Prop) : (term751 A f s) = (term787 A f s).
Proof. exact (TRANS (@lem4041536 A f s) (@lem4041563 A f s)). Qed.
Lemma lem4041565 {A : Type'} (f : A -> A) : (term752 A f) = (term788 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041564 A f s)). Qed.
Lemma lem4041566 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041567 {A : Type'} (f : A -> A) : (term753 A f) = (term789 A f).
Proof. exact (MK_COMB (@lem4041566 A) (@lem4041565 A f)). Qed.
Lemma lem4041569 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041570 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041569 (A -> Prop) A P). Qed.
Lemma lem4041571 {A : Type'} (f : A -> A) : (term790 A f) = (term791 A f).
Proof. exact (@lem4041570 A (term792 A f)). Qed.
Lemma lem4041572 {A : Type'} (f : A -> A) (s : A -> Prop) : (term793 A f s) = (term786 A f s).
Proof. exact (eq_refl (term793 A f s)). Qed.
Lemma lem4041573 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041574 {A : Type'} (f : A -> A) (s : A -> Prop) (x : A) : (term794 A f s x) = (term795 A f s x).
Proof. exact (MK_COMB (@lem4041572 A f s) (@lem4041573 A x)). Qed.
Lemma lem4041575 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term795 A f s x) = (term785 A x f s).
Proof. exact (eq_refl (term795 A f s x)). Qed.
Lemma lem4041576 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term794 A f s x) = (term785 A x f s).
Proof. exact (TRANS (@lem4041574 A f s x) (@lem4041575 A x f s)). Qed.
Lemma lem4041577 {A : Type'} (f : A -> A) (s : A -> Prop) : (term796 A f s) = (term786 A f s).
Proof. exact (fun_ext (fun x : A => @lem4041576 A x f s)). Qed.
Lemma lem4041578 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041579 {A : Type'} (f : A -> A) (s : A -> Prop) : (term797 A f s) = (term787 A f s).
Proof. exact (MK_COMB (@lem4041578 A) (@lem4041577 A f s)). Qed.
Lemma lem4041580 {A : Type'} (f : A -> A) : (term798 A f) = (term788 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041579 A f s)). Qed.
Lemma lem4041581 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041582 {A : Type'} (f : A -> A) : (term790 A f) = (term789 A f).
Proof. exact (MK_COMB (@lem4041581 A) (@lem4041580 A f)). Qed.
Lemma lem4041583 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041584 {A : Type'} (f : A -> A) : (term799 A f) = (term800 A f).
Proof. exact (MK_COMB (@lem4041583) (@lem4041582 A f)). Qed.
Lemma lem4041585 {A : Type'} (f : A -> A) (s : A -> Prop) : (term793 A f s) = (term786 A f s).
Proof. exact (eq_refl (term793 A f s)). Qed.
Lemma lem4041586 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4041587 {A : Type'} (f : A -> A) (x : type684 A) (s : A -> Prop) : (term801 A f x s) = (term802 A f x s).
Proof. exact (MK_COMB (@lem4041585 A f s) (@lem4041586 A x s)). Qed.
Lemma lem4041588 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term802 A f x s) = (term803 A x f s).
Proof. exact (eq_refl (term802 A f x s)). Qed.
Lemma lem4041589 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term801 A f x s) = (term803 A x f s).
Proof. exact (TRANS (@lem4041587 A f x s) (@lem4041588 A x f s)). Qed.
Lemma lem4041590 {A : Type'} (x : type684 A) (f : A -> A) : (term804 A f x) = (term805 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041589 A x f s)). Qed.
Lemma lem4041591 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041592 {A : Type'} (x : type684 A) (f : A -> A) : (term806 A f x) = (term807 A x f).
Proof. exact (MK_COMB (@lem4041591 A) (@lem4041590 A x f)). Qed.
Lemma lem4041593 {A : Type'} (f : A -> A) : (term808 A f) = (term809 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041592 A x f)). Qed.
Lemma lem4041594 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041595 {A : Type'} (f : A -> A) : (term791 A f) = (term810 A f).
Proof. exact (MK_COMB (@lem4041594 A) (@lem4041593 A f)). Qed.
Lemma lem4041596 {A : Type'} (f : A -> A) : ((term790 A f) = (term791 A f)) = ((term789 A f) = (term810 A f)).
Proof. exact (MK_COMB (@lem4041584 A f) (@lem4041595 A f)). Qed.
Lemma lem4041597 {A : Type'} (f : A -> A) : (term789 A f) = (term810 A f).
Proof. exact (EQ_MP (@lem4041596 A f) (@lem4041571 A f)). Qed.
Lemma lem4041599 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041600 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041599 (A -> Prop) A P). Qed.
Lemma lem4041601 {A : Type'} (x : type684 A) (f : A -> A) : (term811 A x f) = (term812 A x f).
Proof. exact (@lem4041600 A (term813 A x f)). Qed.
Lemma lem4041602 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term814 A x f s) = (term815 A x f s).
Proof. exact (eq_refl (term814 A x f s)). Qed.
Lemma lem4041603 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4041604 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) (y : A) : (term816 A x f s y) = (term817 A x f s y).
Proof. exact (MK_COMB (@lem4041602 A x f s) (@lem4041603 A y)). Qed.
Lemma lem4041605 {A : Type'} (x : type684 A) (y : A) (f : A -> A) (s : A -> Prop) : (term817 A x f s y) = (term818 A x y f s).
Proof. exact (eq_refl (term817 A x f s y)). Qed.
Lemma lem4041606 {A : Type'} (x : type684 A) (y : A) (f : A -> A) (s : A -> Prop) : (term816 A x f s y) = (term818 A x y f s).
Proof. exact (TRANS (@lem4041604 A x f s y) (@lem4041605 A x y f s)). Qed.
Lemma lem4041607 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term819 A x f s) = (term815 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4041606 A x y f s)). Qed.
Lemma lem4041608 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041609 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term820 A x f s) = (term803 A x f s).
Proof. exact (MK_COMB (@lem4041608 A) (@lem4041607 A x f s)). Qed.
Lemma lem4041610 {A : Type'} (x : type684 A) (f : A -> A) : (term821 A x f) = (term805 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041609 A x f s)). Qed.
Lemma lem4041611 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041612 {A : Type'} (x : type684 A) (f : A -> A) : (term811 A x f) = (term807 A x f).
Proof. exact (MK_COMB (@lem4041611 A) (@lem4041610 A x f)). Qed.
Lemma lem4041613 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041614 {A : Type'} (x : type684 A) (f : A -> A) : (term822 A x f) = (term823 A x f).
Proof. exact (MK_COMB (@lem4041613) (@lem4041612 A x f)). Qed.
Lemma lem4041615 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term814 A x f s) = (term815 A x f s).
Proof. exact (eq_refl (term814 A x f s)). Qed.
Lemma lem4041616 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4041617 {A : Type'} (x : type684 A) (f : A -> A) (y : type684 A) (s : A -> Prop) : (term824 A x f y s) = (term825 A x f y s).
Proof. exact (MK_COMB (@lem4041615 A x f s) (@lem4041616 A y s)). Qed.
Lemma lem4041618 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) (s : A -> Prop) : (term825 A x f y s) = (term826 A x y f s).
Proof. exact (eq_refl (term825 A x f y s)). Qed.
Lemma lem4041619 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) (s : A -> Prop) : (term824 A x f y s) = (term826 A x y f s).
Proof. exact (TRANS (@lem4041617 A x f y s) (@lem4041618 A x y f s)). Qed.
Lemma lem4041620 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) : (term827 A x f y) = (term828 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041619 A x y f s)). Qed.
Lemma lem4041621 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041622 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) : (term829 A x f y) = (term830 A x y f).
Proof. exact (MK_COMB (@lem4041621 A) (@lem4041620 A x y f)). Qed.
Lemma lem4041623 {A : Type'} (x : type684 A) (f : A -> A) : (term831 A x f) = (term832 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4041622 A x y f)). Qed.
Lemma lem4041624 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041625 {A : Type'} (x : type684 A) (f : A -> A) : (term812 A x f) = (term833 A x f).
Proof. exact (MK_COMB (@lem4041624 A) (@lem4041623 A x f)). Qed.
Lemma lem4041626 {A : Type'} (x : type684 A) (f : A -> A) : ((term811 A x f) = (term812 A x f)) = ((term807 A x f) = (term833 A x f)).
Proof. exact (MK_COMB (@lem4041614 A x f) (@lem4041625 A x f)). Qed.
Lemma lem4041627 {A : Type'} (x : type684 A) (f : A -> A) : (term807 A x f) = (term833 A x f).
Proof. exact (EQ_MP (@lem4041626 A x f) (@lem4041601 A x f)). Qed.
Lemma lem4041628 {A : Type'} (f : A -> A) : (term809 A f) = (term834 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041627 A x f)). Qed.
Lemma lem4041629 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041630 {A : Type'} (f : A -> A) : (term810 A f) = (term835 A f).
Proof. exact (MK_COMB (@lem4041629 A) (@lem4041628 A f)). Qed.
Lemma lem4041631 {A : Type'} (f : A -> A) : (term789 A f) = (term835 A f).
Proof. exact (TRANS (@lem4041597 A f) (@lem4041630 A f)). Qed.
Lemma lem4041632 {A : Type'} (f : A -> A) : (term753 A f) = (term835 A f).
Proof. exact (TRANS (@lem4041567 A f) (@lem4041631 A f)). Qed.
Lemma lem4041633 {A : Type'} : (term754 A) = (term836 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4041632 A f)). Qed.
Lemma lem4041634 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041635 {A : Type'} : (term755 A) = (term837 A).
Proof. exact (MK_COMB (@lem4041634 A) (@lem4041633 A)). Qed.
Lemma lem4041637 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041638 {A : Type'} (P : type481 A) : (term838 A P) = (term839 A P).
Proof. exact (@lem4041637 (A -> A) (type684 A) P). Qed.
Lemma lem4041639 {A : Type'} : (term840 A) = (term841 A).
Proof. exact (@lem4041638 A (term842 A)). Qed.
Lemma lem4041640 {A : Type'} (f : A -> A) : (term843 A f) = (term834 A f).
Proof. exact (eq_refl (term843 A f)). Qed.
Lemma lem4041641 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041642 {A : Type'} (f : A -> A) (x : type684 A) : (term844 A f x) = (term845 A f x).
Proof. exact (MK_COMB (@lem4041640 A f) (@lem4041641 A x)). Qed.
Lemma lem4041643 {A : Type'} (x : type684 A) (f : A -> A) : (term845 A f x) = (term833 A x f).
Proof. exact (eq_refl (term845 A f x)). Qed.
Lemma lem4041644 {A : Type'} (x : type684 A) (f : A -> A) : (term844 A f x) = (term833 A x f).
Proof. exact (TRANS (@lem4041642 A f x) (@lem4041643 A x f)). Qed.
Lemma lem4041645 {A : Type'} (f : A -> A) : (term846 A f) = (term834 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041644 A x f)). Qed.
Lemma lem4041646 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041647 {A : Type'} (f : A -> A) : (term847 A f) = (term835 A f).
Proof. exact (MK_COMB (@lem4041646 A) (@lem4041645 A f)). Qed.
Lemma lem4041648 {A : Type'} : (term848 A) = (term836 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4041647 A f)). Qed.
Lemma lem4041649 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041650 {A : Type'} : (term840 A) = (term837 A).
Proof. exact (MK_COMB (@lem4041649 A) (@lem4041648 A)). Qed.
Lemma lem4041651 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041652 {A : Type'} : (term849 A) = (term850 A).
Proof. exact (MK_COMB (@lem4041651) (@lem4041650 A)). Qed.
Lemma lem4041653 {A : Type'} (f : A -> A) : (term843 A f) = (term834 A f).
Proof. exact (eq_refl (term843 A f)). Qed.
Lemma lem4041654 {A : Type'} (x : type485 A) (f : A -> A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4041655 {A : Type'} (x : type485 A) (f : A -> A) : (term851 A x f) = (term852 A x f).
Proof. exact (MK_COMB (@lem4041653 A f) (@lem4041654 A x f)). Qed.
Lemma lem4041656 {A : Type'} (x : type485 A) (f : A -> A) : (term852 A x f) = (term853 A x f).
Proof. exact (eq_refl (term852 A x f)). Qed.
Lemma lem4041657 {A : Type'} (x : type485 A) (f : A -> A) : (term851 A x f) = (term853 A x f).
Proof. exact (TRANS (@lem4041655 A x f) (@lem4041656 A x f)). Qed.
Lemma lem4041658 {A : Type'} (x : type485 A) : (term854 A x) = (term855 A x).
Proof. exact (fun_ext (fun f : A -> A => @lem4041657 A x f)). Qed.
Lemma lem4041659 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041660 {A : Type'} (x : type485 A) : (term856 A x) = (term857 A x).
Proof. exact (MK_COMB (@lem4041659 A) (@lem4041658 A x)). Qed.
Lemma lem4041661 {A : Type'} : (term858 A) = (term859 A).
Proof. exact (fun_ext (fun x : type485 A => @lem4041660 A x)). Qed.
Lemma lem4041662 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4041663 {A : Type'} : (term841 A) = (term860 A).
Proof. exact (MK_COMB (@lem4041662 A) (@lem4041661 A)). Qed.
Lemma lem4041664 {A : Type'} : ((term840 A) = (term841 A)) = ((term837 A) = (term860 A)).
Proof. exact (MK_COMB (@lem4041652 A) (@lem4041663 A)). Qed.
Lemma lem4041665 {A : Type'} : (term837 A) = (term860 A).
Proof. exact (EQ_MP (@lem4041664 A) (@lem4041639 A)). Qed.
Lemma lem4041667 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041668 {A : Type'} (P : type481 A) : (term838 A P) = (term839 A P).
Proof. exact (@lem4041667 (A -> A) (type684 A) P). Qed.
Lemma lem4041669 {A : Type'} (x : type485 A) : (term861 A x) = (term862 A x).
Proof. exact (@lem4041668 A (term863 A x)). Qed.
Lemma lem4041670 {A : Type'} (x : type485 A) (f : A -> A) : (term864 A x f) = (term865 A x f).
Proof. exact (eq_refl (term864 A x f)). Qed.
Lemma lem4041671 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4041672 {A : Type'} (x : type485 A) (f : A -> A) (y : type684 A) : (term866 A x f y) = (term867 A x f y).
Proof. exact (MK_COMB (@lem4041670 A x f) (@lem4041671 A y)). Qed.
Lemma lem4041673 {A : Type'} (x : type485 A) (y : type684 A) (f : A -> A) : (term867 A x f y) = (term868 A x y f).
Proof. exact (eq_refl (term867 A x f y)). Qed.
Lemma lem4041674 {A : Type'} (x : type485 A) (y : type684 A) (f : A -> A) : (term866 A x f y) = (term868 A x y f).
Proof. exact (TRANS (@lem4041672 A x f y) (@lem4041673 A x y f)). Qed.
Lemma lem4041675 {A : Type'} (x : type485 A) (f : A -> A) : (term869 A x f) = (term865 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4041674 A x y f)). Qed.
Lemma lem4041676 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041677 {A : Type'} (x : type485 A) (f : A -> A) : (term870 A x f) = (term853 A x f).
Proof. exact (MK_COMB (@lem4041676 A) (@lem4041675 A x f)). Qed.
Lemma lem4041678 {A : Type'} (x : type485 A) : (term871 A x) = (term855 A x).
Proof. exact (fun_ext (fun f : A -> A => @lem4041677 A x f)). Qed.
Lemma lem4041679 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041680 {A : Type'} (x : type485 A) : (term861 A x) = (term857 A x).
Proof. exact (MK_COMB (@lem4041679 A) (@lem4041678 A x)). Qed.
Lemma lem4041681 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041682 {A : Type'} (x : type485 A) : (term872 A x) = (term873 A x).
Proof. exact (MK_COMB (@lem4041681) (@lem4041680 A x)). Qed.
Lemma lem4041683 {A : Type'} (x : type485 A) (f : A -> A) : (term864 A x f) = (term865 A x f).
Proof. exact (eq_refl (term864 A x f)). Qed.
Lemma lem4041684 {A : Type'} (y : type485 A) (f : A -> A) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4041685 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term874 A x y f) = (term875 A x y f).
Proof. exact (MK_COMB (@lem4041683 A x f) (@lem4041684 A y f)). Qed.
Lemma lem4041686 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term875 A x y f) = (term876 A x y f).
Proof. exact (eq_refl (term875 A x y f)). Qed.
Lemma lem4041687 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term874 A x y f) = (term876 A x y f).
Proof. exact (TRANS (@lem4041685 A x y f) (@lem4041686 A x y f)). Qed.
Lemma lem4041688 {A : Type'} (x : type485 A) (y : type485 A) : (term877 A x y) = (term878 A x y).
Proof. exact (fun_ext (fun f : A -> A => @lem4041687 A x y f)). Qed.
Lemma lem4041689 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4041690 {A : Type'} (x : type485 A) (y : type485 A) : (term879 A x y) = (term880 A x y).
Proof. exact (MK_COMB (@lem4041689 A) (@lem4041688 A x y)). Qed.
Lemma lem4041691 {A : Type'} (x : type485 A) : (term881 A x) = (term882 A x).
Proof. exact (fun_ext (fun y : type485 A => @lem4041690 A x y)). Qed.
Lemma lem4041692 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4041693 {A : Type'} (x : type485 A) : (term862 A x) = (term883 A x).
Proof. exact (MK_COMB (@lem4041692 A) (@lem4041691 A x)). Qed.
Lemma lem4041694 {A : Type'} (x : type485 A) : ((term861 A x) = (term862 A x)) = ((term857 A x) = (term883 A x)).
Proof. exact (MK_COMB (@lem4041682 A x) (@lem4041693 A x)). Qed.
Lemma lem4041695 {A : Type'} (x : type485 A) : (term857 A x) = (term883 A x).
Proof. exact (EQ_MP (@lem4041694 A x) (@lem4041669 A x)). Qed.
Lemma lem4041696 {A : Type'} : (term859 A) = (term884 A).
Proof. exact (fun_ext (fun x : type485 A => @lem4041695 A x)). Qed.
Lemma lem4041697 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4041698 {A : Type'} : (term860 A) = (term885 A).
Proof. exact (MK_COMB (@lem4041697 A) (@lem4041696 A)). Qed.
Lemma lem4041699 {A : Type'} : (term837 A) = (term885 A).
Proof. exact (TRANS (@lem4041665 A) (@lem4041698 A)). Qed.
Lemma lem4041701 {A : Type'} : (term755 A) = (term885 A).
Proof. exact (TRANS (@lem4041635 A) (@lem4041699 A)). Qed.
Lemma lem4041702 {A : Type'} : (term232 A) = (term885 A).
Proof. exact (TRANS (@lem4041407 A) (@lem4041701 A)). Qed.
Lemma lem4041703 {A : Type'} (h1 : term232 A) : term885 A.
Proof. exact (EQ_MP (@lem4041702 A) (@lem4039312 A h1)). Qed.
Lemma lem4041718 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term410 A B s f x y) = (term411 A B s f x y).
Proof. exact (@lem17362 (term412 A B s x f y) (x = y)). Qed.
Lemma lem4041719 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041720 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term415 A B s f x) = (term416 A B s f x).
Proof. exact (@lem4041719 A (term313 A B s f x)). Qed.
Lemma lem4041721 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term417 A B s f x y) = (term312 A B s f x y).
Proof. exact (eq_refl (term417 A B s f x y)). Qed.
Lemma lem4041722 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041723 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term418 A B s f x y) = (term410 A B s f x y).
Proof. exact (MK_COMB (@lem4041722) (@lem4041721 A B s f x y)). Qed.
Lemma lem4041724 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term418 A B s f x y) = (term411 A B s f x y).
Proof. exact (TRANS (@lem4041723 A B s f x y) (@lem4041718 A B s f x y)). Qed.
Lemma lem4041725 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term419 A B s f x) = (term420 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4041724 A B s f x y)). Qed.
Lemma lem4041726 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041727 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term416 A B s f x) = (term421 A B s f x).
Proof. exact (MK_COMB (@lem4041726 A) (@lem4041725 A B s f x)). Qed.
Lemma lem4041728 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term415 A B s f x) = (term421 A B s f x).
Proof. exact (TRANS (@lem4041720 A B s f x) (@lem4041727 A B s f x)). Qed.
Lemma lem4041729 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4041730 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term422 A B s f) = (term423 A B s f).
Proof. exact (@lem4041729 A (term315 A B s f)). Qed.
Lemma lem4041731 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term424 A B s f x) = (term314 A B s f x).
Proof. exact (eq_refl (term424 A B s f x)). Qed.
Lemma lem4041732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4041733 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term425 A B s f x) = (term415 A B s f x).
Proof. exact (MK_COMB (@lem4041732) (@lem4041731 A B s f x)). Qed.
Lemma lem4041734 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term425 A B s f x) = (term421 A B s f x).
Proof. exact (TRANS (@lem4041733 A B s f x) (@lem4041728 A B s f x)). Qed.
Lemma lem4041735 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term426 A B s f) = (term427 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4041734 A B s f x)). Qed.
Lemma lem4041736 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041737 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term423 A B s f) = (term428 A B s f).
Proof. exact (MK_COMB (@lem4041736 A) (@lem4041735 A B s f)). Qed.
Lemma lem4041738 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term422 A B s f) = (term428 A B s f).
Proof. exact (TRANS (@lem4041730 A B s f) (@lem4041737 A B s f)). Qed.
Lemma lem4041753 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term205 A B f s) = (@FINITE A s)) = (term429 A B f s).
Proof. exact (@lem17784 (term205 A B f s) (@FINITE A s)). Qed.
Lemma lem4041754 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041755 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term430 A B s f) = (term431 A B s f).
Proof. exact (MK_COMB (@lem4041754) (@lem4041738 A B s f)). Qed.
Lemma lem4041756 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term432 A B f s) = (term433 A B f s).
Proof. exact (MK_COMB (@lem4041755 A B s f) (@lem4041753 A B f s)). Qed.
Lemma lem4041757 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term358 A B f s) = (term432 A B f s).
Proof. exact (@lem17265 (term316 A B s f) ((term205 A B f s) = (@FINITE A s))). Qed.
Lemma lem4041758 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term358 A B f s) = (term433 A B f s).
Proof. exact (TRANS (@lem4041757 A B f s) (@lem4041756 A B f s)). Qed.
Lemma lem4041759 {A B : Type'} (f : A -> B) : (term359 A B f) = (term434 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041758 A B f s)). Qed.
Lemma lem4041760 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041761 {A B : Type'} (f : A -> B) : (term360 A B f) = (term435 A B f).
Proof. exact (MK_COMB (@lem4041760 A) (@lem4041759 A B f)). Qed.
Lemma lem4041762 {A B : Type'} : (term361 A B) = (term436 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4041761 A B f)). Qed.
Lemma lem4041763 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4041764 {A B : Type'} : (term230 A B) = (term437 A B).
Proof. exact (MK_COMB (@lem4041763 A B) (@lem4041762 A B)). Qed.
Lemma lem4041871 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041872 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041871 A P Q). Qed.
Lemma lem4041873 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term440 A B f s) = (term441 A B f s).
Proof. exact (@lem4041872 A (term427 A B s f) (term429 A B f s)). Qed.
Lemma lem4041874 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term442 A B s f x) = (term421 A B s f x).
Proof. exact (eq_refl (term442 A B s f x)). Qed.
Lemma lem4041875 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term443 A B s f) = (term427 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4041874 A B s f x)). Qed.
Lemma lem4041876 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041877 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term444 A B s f) = (term428 A B s f).
Proof. exact (MK_COMB (@lem4041876 A) (@lem4041875 A B s f)). Qed.
Lemma lem4041878 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041879 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term445 A B s f) = (term431 A B s f).
Proof. exact (MK_COMB (@lem4041878) (@lem4041877 A B s f)). Qed.
Lemma lem4041880 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term429 A B f s) = (term429 A B f s).
Proof. exact (eq_refl (term429 A B f s)). Qed.
Lemma lem4041881 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term440 A B f s) = (term433 A B f s).
Proof. exact (MK_COMB (@lem4041879 A B s f) (@lem4041880 A B f s)). Qed.
Lemma lem4041882 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041883 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term446 A B f s) = (term447 A B f s).
Proof. exact (MK_COMB (@lem4041882) (@lem4041881 A B f s)). Qed.
Lemma lem4041884 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term442 A B s f x) = (term421 A B s f x).
Proof. exact (eq_refl (term442 A B s f x)). Qed.
Lemma lem4041885 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041886 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term448 A B s f x) = (term449 A B s f x).
Proof. exact (MK_COMB (@lem4041885) (@lem4041884 A B s f x)). Qed.
Lemma lem4041887 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term429 A B f s) = (term429 A B f s).
Proof. exact (eq_refl (term429 A B f s)). Qed.
Lemma lem4041888 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term450 A B x f s) = (term451 A B x f s).
Proof. exact (MK_COMB (@lem4041886 A B s f x) (@lem4041887 A B f s)). Qed.
Lemma lem4041889 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term452 A B f s) = (term453 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4041888 A B x f s)). Qed.
Lemma lem4041890 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041891 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term441 A B f s) = (term454 A B f s).
Proof. exact (MK_COMB (@lem4041890 A) (@lem4041889 A B f s)). Qed.
Lemma lem4041892 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term440 A B f s) = (term441 A B f s)) = ((term433 A B f s) = (term454 A B f s)).
Proof. exact (MK_COMB (@lem4041883 A B f s) (@lem4041891 A B f s)). Qed.
Lemma lem4041893 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term433 A B f s) = (term454 A B f s).
Proof. exact (EQ_MP (@lem4041892 A B f s) (@lem4041873 A B f s)). Qed.
Lemma lem4041895 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4041896 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4041895 A P Q). Qed.
Lemma lem4041897 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term455 A B x f s) = (term456 A B x f s).
Proof. exact (@lem4041896 A (term420 A B s f x) (term429 A B f s)). Qed.
Lemma lem4041898 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term457 A B s f x y) = (term411 A B s f x y).
Proof. exact (eq_refl (term457 A B s f x y)). Qed.
Lemma lem4041899 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term458 A B s f x) = (term420 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4041898 A B s f x y)). Qed.
Lemma lem4041900 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041901 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term459 A B s f x) = (term421 A B s f x).
Proof. exact (MK_COMB (@lem4041900 A) (@lem4041899 A B s f x)). Qed.
Lemma lem4041902 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041903 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term460 A B s f x) = (term449 A B s f x).
Proof. exact (MK_COMB (@lem4041902) (@lem4041901 A B s f x)). Qed.
Lemma lem4041904 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term429 A B f s) = (term429 A B f s).
Proof. exact (eq_refl (term429 A B f s)). Qed.
Lemma lem4041905 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term455 A B x f s) = (term451 A B x f s).
Proof. exact (MK_COMB (@lem4041903 A B s f x) (@lem4041904 A B f s)). Qed.
Lemma lem4041906 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041907 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term461 A B x f s) = (term462 A B x f s).
Proof. exact (MK_COMB (@lem4041906) (@lem4041905 A B x f s)). Qed.
Lemma lem4041908 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term457 A B s f x y) = (term411 A B s f x y).
Proof. exact (eq_refl (term457 A B s f x y)). Qed.
Lemma lem4041909 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4041910 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term463 A B s f x y) = (term464 A B s f x y).
Proof. exact (MK_COMB (@lem4041909) (@lem4041908 A B s f x y)). Qed.
Lemma lem4041911 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term429 A B f s) = (term429 A B f s).
Proof. exact (eq_refl (term429 A B f s)). Qed.
Lemma lem4041912 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) : (term465 A B x y f s) = (term466 A B x y f s).
Proof. exact (MK_COMB (@lem4041910 A B s f x y) (@lem4041911 A B f s)). Qed.
Lemma lem4041913 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term468 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4041912 A B x y f s)). Qed.
Lemma lem4041914 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041915 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term456 A B x f s) = (term469 A B x f s).
Proof. exact (MK_COMB (@lem4041914 A) (@lem4041913 A B x f s)). Qed.
Lemma lem4041916 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : ((term455 A B x f s) = (term456 A B x f s)) = ((term451 A B x f s) = (term469 A B x f s)).
Proof. exact (MK_COMB (@lem4041907 A B x f s) (@lem4041915 A B x f s)). Qed.
Lemma lem4041917 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term451 A B x f s) = (term469 A B x f s).
Proof. exact (EQ_MP (@lem4041916 A B x f s) (@lem4041897 A B x f s)). Qed.
Lemma lem4041918 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term453 A B f s) = (term470 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4041917 A B x f s)). Qed.
Lemma lem4041919 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041920 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term454 A B f s) = (term471 A B f s).
Proof. exact (MK_COMB (@lem4041919 A) (@lem4041918 A B f s)). Qed.
Lemma lem4041921 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term433 A B f s) = (term471 A B f s).
Proof. exact (TRANS (@lem4041893 A B f s) (@lem4041920 A B f s)). Qed.
Lemma lem4041922 {A B : Type'} (f : A -> B) : (term434 A B f) = (term472 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041921 A B f s)). Qed.
Lemma lem4041923 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041924 {A B : Type'} (f : A -> B) : (term435 A B f) = (term473 A B f).
Proof. exact (MK_COMB (@lem4041923 A) (@lem4041922 A B f)). Qed.
Lemma lem4041926 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041927 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041926 (A -> Prop) A P). Qed.
Lemma lem4041928 {A B : Type'} (f : A -> B) : (term478 A B f) = (term479 A B f).
Proof. exact (@lem4041927 A (term480 A B f)). Qed.
Lemma lem4041929 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term481 A B f s) = (term470 A B f s).
Proof. exact (eq_refl (term481 A B f s)). Qed.
Lemma lem4041930 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041931 {A B : Type'} (f : A -> B) (s : A -> Prop) (x : A) : (term482 A B f s x) = (term483 A B f s x).
Proof. exact (MK_COMB (@lem4041929 A B f s) (@lem4041930 A x)). Qed.
Lemma lem4041932 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term483 A B f s x) = (term469 A B x f s).
Proof. exact (eq_refl (term483 A B f s x)). Qed.
Lemma lem4041933 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term482 A B f s x) = (term469 A B x f s).
Proof. exact (TRANS (@lem4041931 A B f s x) (@lem4041932 A B x f s)). Qed.
Lemma lem4041934 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term484 A B f s) = (term470 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4041933 A B x f s)). Qed.
Lemma lem4041935 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041936 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term485 A B f s) = (term471 A B f s).
Proof. exact (MK_COMB (@lem4041935 A) (@lem4041934 A B f s)). Qed.
Lemma lem4041937 {A B : Type'} (f : A -> B) : (term486 A B f) = (term472 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041936 A B f s)). Qed.
Lemma lem4041938 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041939 {A B : Type'} (f : A -> B) : (term478 A B f) = (term473 A B f).
Proof. exact (MK_COMB (@lem4041938 A) (@lem4041937 A B f)). Qed.
Lemma lem4041940 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041941 {A B : Type'} (f : A -> B) : (term487 A B f) = (term488 A B f).
Proof. exact (MK_COMB (@lem4041940) (@lem4041939 A B f)). Qed.
Lemma lem4041942 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term481 A B f s) = (term470 A B f s).
Proof. exact (eq_refl (term481 A B f s)). Qed.
Lemma lem4041943 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4041944 {A B : Type'} (f : A -> B) (x : type684 A) (s : A -> Prop) : (term489 A B f x s) = (term490 A B f x s).
Proof. exact (MK_COMB (@lem4041942 A B f s) (@lem4041943 A x s)). Qed.
Lemma lem4041945 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term490 A B f x s) = (term491 A B x f s).
Proof. exact (eq_refl (term490 A B f x s)). Qed.
Lemma lem4041946 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term489 A B f x s) = (term491 A B x f s).
Proof. exact (TRANS (@lem4041944 A B f x s) (@lem4041945 A B x f s)). Qed.
Lemma lem4041947 {A B : Type'} (x : type684 A) (f : A -> B) : (term492 A B f x) = (term493 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041946 A B x f s)). Qed.
Lemma lem4041948 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041949 {A B : Type'} (x : type684 A) (f : A -> B) : (term494 A B f x) = (term495 A B x f).
Proof. exact (MK_COMB (@lem4041948 A) (@lem4041947 A B x f)). Qed.
Lemma lem4041950 {A B : Type'} (f : A -> B) : (term496 A B f) = (term497 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041949 A B x f)). Qed.
Lemma lem4041951 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041952 {A B : Type'} (f : A -> B) : (term479 A B f) = (term498 A B f).
Proof. exact (MK_COMB (@lem4041951 A) (@lem4041950 A B f)). Qed.
Lemma lem4041953 {A B : Type'} (f : A -> B) : ((term478 A B f) = (term479 A B f)) = ((term473 A B f) = (term498 A B f)).
Proof. exact (MK_COMB (@lem4041941 A B f) (@lem4041952 A B f)). Qed.
Lemma lem4041954 {A B : Type'} (f : A -> B) : (term473 A B f) = (term498 A B f).
Proof. exact (EQ_MP (@lem4041953 A B f) (@lem4041928 A B f)). Qed.
Lemma lem4041956 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041957 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4041956 (A -> Prop) A P). Qed.
Lemma lem4041958 {A B : Type'} (x : type684 A) (f : A -> B) : (term499 A B x f) = (term500 A B x f).
Proof. exact (@lem4041957 A (term501 A B x f)). Qed.
Lemma lem4041959 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term502 A B x f s) = (term503 A B x f s).
Proof. exact (eq_refl (term502 A B x f s)). Qed.
Lemma lem4041960 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4041961 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) (y : A) : (term504 A B x f s y) = (term505 A B x f s y).
Proof. exact (MK_COMB (@lem4041959 A B x f s) (@lem4041960 A y)). Qed.
Lemma lem4041962 {A B : Type'} (x : type684 A) (y : A) (f : A -> B) (s : A -> Prop) : (term505 A B x f s y) = (term506 A B x y f s).
Proof. exact (eq_refl (term505 A B x f s y)). Qed.
Lemma lem4041963 {A B : Type'} (x : type684 A) (y : A) (f : A -> B) (s : A -> Prop) : (term504 A B x f s y) = (term506 A B x y f s).
Proof. exact (TRANS (@lem4041961 A B x f s y) (@lem4041962 A B x y f s)). Qed.
Lemma lem4041964 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term507 A B x f s) = (term503 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4041963 A B x y f s)). Qed.
Lemma lem4041965 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4041966 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term508 A B x f s) = (term491 A B x f s).
Proof. exact (MK_COMB (@lem4041965 A) (@lem4041964 A B x f s)). Qed.
Lemma lem4041967 {A B : Type'} (x : type684 A) (f : A -> B) : (term509 A B x f) = (term493 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041966 A B x f s)). Qed.
Lemma lem4041968 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041969 {A B : Type'} (x : type684 A) (f : A -> B) : (term499 A B x f) = (term495 A B x f).
Proof. exact (MK_COMB (@lem4041968 A) (@lem4041967 A B x f)). Qed.
Lemma lem4041970 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4041971 {A B : Type'} (x : type684 A) (f : A -> B) : (term510 A B x f) = (term511 A B x f).
Proof. exact (MK_COMB (@lem4041970) (@lem4041969 A B x f)). Qed.
Lemma lem4041972 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term502 A B x f s) = (term503 A B x f s).
Proof. exact (eq_refl (term502 A B x f s)). Qed.
Lemma lem4041973 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4041974 {A B : Type'} (x : type684 A) (f : A -> B) (y : type684 A) (s : A -> Prop) : (term512 A B x f y s) = (term513 A B x f y s).
Proof. exact (MK_COMB (@lem4041972 A B x f s) (@lem4041973 A y s)). Qed.
Lemma lem4041975 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) (s : A -> Prop) : (term513 A B x f y s) = (term514 A B x y f s).
Proof. exact (eq_refl (term513 A B x f y s)). Qed.
Lemma lem4041976 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) (s : A -> Prop) : (term512 A B x f y s) = (term514 A B x y f s).
Proof. exact (TRANS (@lem4041974 A B x f y s) (@lem4041975 A B x y f s)). Qed.
Lemma lem4041977 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) : (term515 A B x f y) = (term516 A B x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4041976 A B x y f s)). Qed.
Lemma lem4041978 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4041979 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) : (term517 A B x f y) = (term518 A B x y f).
Proof. exact (MK_COMB (@lem4041978 A) (@lem4041977 A B x y f)). Qed.
Lemma lem4041980 {A B : Type'} (x : type684 A) (f : A -> B) : (term519 A B x f) = (term520 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4041979 A B x y f)). Qed.
Lemma lem4041981 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041982 {A B : Type'} (x : type684 A) (f : A -> B) : (term500 A B x f) = (term521 A B x f).
Proof. exact (MK_COMB (@lem4041981 A) (@lem4041980 A B x f)). Qed.
Lemma lem4041983 {A B : Type'} (x : type684 A) (f : A -> B) : ((term499 A B x f) = (term500 A B x f)) = ((term495 A B x f) = (term521 A B x f)).
Proof. exact (MK_COMB (@lem4041971 A B x f) (@lem4041982 A B x f)). Qed.
Lemma lem4041984 {A B : Type'} (x : type684 A) (f : A -> B) : (term495 A B x f) = (term521 A B x f).
Proof. exact (EQ_MP (@lem4041983 A B x f) (@lem4041958 A B x f)). Qed.
Lemma lem4041985 {A B : Type'} (f : A -> B) : (term497 A B f) = (term522 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4041984 A B x f)). Qed.
Lemma lem4041986 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4041987 {A B : Type'} (f : A -> B) : (term498 A B f) = (term523 A B f).
Proof. exact (MK_COMB (@lem4041986 A) (@lem4041985 A B f)). Qed.
Lemma lem4041988 {A B : Type'} (f : A -> B) : (term473 A B f) = (term523 A B f).
Proof. exact (TRANS (@lem4041954 A B f) (@lem4041987 A B f)). Qed.
Lemma lem4041989 {A B : Type'} (f : A -> B) : (term435 A B f) = (term523 A B f).
Proof. exact (TRANS (@lem4041924 A B f) (@lem4041988 A B f)). Qed.
Lemma lem4041990 {A B : Type'} : (term436 A B) = (term524 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4041989 A B f)). Qed.
Lemma lem4041991 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4041992 {A B : Type'} : (term437 A B) = (term525 A B).
Proof. exact (MK_COMB (@lem4041991 A B) (@lem4041990 A B)). Qed.
Lemma lem4041994 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4041995 {A B : Type'} (P : type503 A B) : (term526 A B P) = (term527 A B P).
Proof. exact (@lem4041994 (A -> B) (type684 A) P). Qed.
Lemma lem4041996 {A B : Type'} : (term528 A B) = (term529 A B).
Proof. exact (@lem4041995 A B (term530 A B)). Qed.
Lemma lem4041997 {A B : Type'} (f : A -> B) : (term531 A B f) = (term522 A B f).
Proof. exact (eq_refl (term531 A B f)). Qed.
Lemma lem4041998 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4041999 {A B : Type'} (f : A -> B) (x : type684 A) : (term532 A B f x) = (term533 A B f x).
Proof. exact (MK_COMB (@lem4041997 A B f) (@lem4041998 A x)). Qed.
Lemma lem4042000 {A B : Type'} (x : type684 A) (f : A -> B) : (term533 A B f x) = (term521 A B x f).
Proof. exact (eq_refl (term533 A B f x)). Qed.
Lemma lem4042001 {A B : Type'} (x : type684 A) (f : A -> B) : (term532 A B f x) = (term521 A B x f).
Proof. exact (TRANS (@lem4041999 A B f x) (@lem4042000 A B x f)). Qed.
Lemma lem4042002 {A B : Type'} (f : A -> B) : (term534 A B f) = (term522 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4042001 A B x f)). Qed.
Lemma lem4042003 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042004 {A B : Type'} (f : A -> B) : (term535 A B f) = (term523 A B f).
Proof. exact (MK_COMB (@lem4042003 A) (@lem4042002 A B f)). Qed.
Lemma lem4042005 {A B : Type'} : (term536 A B) = (term524 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4042004 A B f)). Qed.
Lemma lem4042006 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4042007 {A B : Type'} : (term528 A B) = (term525 A B).
Proof. exact (MK_COMB (@lem4042006 A B) (@lem4042005 A B)). Qed.
Lemma lem4042008 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042009 {A B : Type'} : (term537 A B) = (term538 A B).
Proof. exact (MK_COMB (@lem4042008) (@lem4042007 A B)). Qed.
Lemma lem4042010 {A B : Type'} (f : A -> B) : (term531 A B f) = (term522 A B f).
Proof. exact (eq_refl (term531 A B f)). Qed.
Lemma lem4042011 {A B : Type'} (x : type529 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4042012 {A B : Type'} (x : type529 A B) (f : A -> B) : (term539 A B x f) = (term540 A B x f).
Proof. exact (MK_COMB (@lem4042010 A B f) (@lem4042011 A B x f)). Qed.
Lemma lem4042013 {A B : Type'} (x : type529 A B) (f : A -> B) : (term540 A B x f) = (term541 A B x f).
Proof. exact (eq_refl (term540 A B x f)). Qed.
Lemma lem4042014 {A B : Type'} (x : type529 A B) (f : A -> B) : (term539 A B x f) = (term541 A B x f).
Proof. exact (TRANS (@lem4042012 A B x f) (@lem4042013 A B x f)). Qed.
Lemma lem4042015 {A B : Type'} (x : type529 A B) : (term542 A B x) = (term543 A B x).
Proof. exact (fun_ext (fun f : A -> B => @lem4042014 A B x f)). Qed.
Lemma lem4042016 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4042017 {A B : Type'} (x : type529 A B) : (term544 A B x) = (term545 A B x).
Proof. exact (MK_COMB (@lem4042016 A B) (@lem4042015 A B x)). Qed.
Lemma lem4042018 {A B : Type'} : (term546 A B) = (term547 A B).
Proof. exact (fun_ext (fun x : type529 A B => @lem4042017 A B x)). Qed.
Lemma lem4042019 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4042020 {A B : Type'} : (term529 A B) = (term548 A B).
Proof. exact (MK_COMB (@lem4042019 A B) (@lem4042018 A B)). Qed.
Lemma lem4042021 {A B : Type'} : ((term528 A B) = (term529 A B)) = ((term525 A B) = (term548 A B)).
Proof. exact (MK_COMB (@lem4042009 A B) (@lem4042020 A B)). Qed.
Lemma lem4042022 {A B : Type'} : (term525 A B) = (term548 A B).
Proof. exact (EQ_MP (@lem4042021 A B) (@lem4041996 A B)). Qed.
Lemma lem4042024 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042025 {A B : Type'} (P : type503 A B) : (term526 A B P) = (term527 A B P).
Proof. exact (@lem4042024 (A -> B) (type684 A) P). Qed.
Lemma lem4042026 {A B : Type'} (x : type529 A B) : (term549 A B x) = (term550 A B x).
Proof. exact (@lem4042025 A B (term551 A B x)). Qed.
Lemma lem4042027 {A B : Type'} (x : type529 A B) (f : A -> B) : (term552 A B x f) = (term553 A B x f).
Proof. exact (eq_refl (term552 A B x f)). Qed.
Lemma lem4042028 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4042029 {A B : Type'} (x : type529 A B) (f : A -> B) (y : type684 A) : (term554 A B x f y) = (term555 A B x f y).
Proof. exact (MK_COMB (@lem4042027 A B x f) (@lem4042028 A y)). Qed.
Lemma lem4042030 {A B : Type'} (x : type529 A B) (y : type684 A) (f : A -> B) : (term555 A B x f y) = (term556 A B x y f).
Proof. exact (eq_refl (term555 A B x f y)). Qed.
Lemma lem4042031 {A B : Type'} (x : type529 A B) (y : type684 A) (f : A -> B) : (term554 A B x f y) = (term556 A B x y f).
Proof. exact (TRANS (@lem4042029 A B x f y) (@lem4042030 A B x y f)). Qed.
Lemma lem4042032 {A B : Type'} (x : type529 A B) (f : A -> B) : (term557 A B x f) = (term553 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4042031 A B x y f)). Qed.
Lemma lem4042033 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042034 {A B : Type'} (x : type529 A B) (f : A -> B) : (term558 A B x f) = (term541 A B x f).
Proof. exact (MK_COMB (@lem4042033 A) (@lem4042032 A B x f)). Qed.
Lemma lem4042035 {A B : Type'} (x : type529 A B) : (term559 A B x) = (term543 A B x).
Proof. exact (fun_ext (fun f : A -> B => @lem4042034 A B x f)). Qed.
Lemma lem4042036 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4042037 {A B : Type'} (x : type529 A B) : (term549 A B x) = (term545 A B x).
Proof. exact (MK_COMB (@lem4042036 A B) (@lem4042035 A B x)). Qed.
Lemma lem4042038 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042039 {A B : Type'} (x : type529 A B) : (term560 A B x) = (term561 A B x).
Proof. exact (MK_COMB (@lem4042038) (@lem4042037 A B x)). Qed.
Lemma lem4042040 {A B : Type'} (x : type529 A B) (f : A -> B) : (term552 A B x f) = (term553 A B x f).
Proof. exact (eq_refl (term552 A B x f)). Qed.
Lemma lem4042041 {A B : Type'} (y : type529 A B) (f : A -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4042042 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term562 A B x y f) = (term563 A B x y f).
Proof. exact (MK_COMB (@lem4042040 A B x f) (@lem4042041 A B y f)). Qed.
Lemma lem4042043 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term563 A B x y f) = (term564 A B x y f).
Proof. exact (eq_refl (term563 A B x y f)). Qed.
Lemma lem4042044 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term562 A B x y f) = (term564 A B x y f).
Proof. exact (TRANS (@lem4042042 A B x y f) (@lem4042043 A B x y f)). Qed.
Lemma lem4042045 {A B : Type'} (x : type529 A B) (y : type529 A B) : (term565 A B x y) = (term566 A B x y).
Proof. exact (fun_ext (fun f : A -> B => @lem4042044 A B x y f)). Qed.
Lemma lem4042046 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4042047 {A B : Type'} (x : type529 A B) (y : type529 A B) : (term567 A B x y) = (term568 A B x y).
Proof. exact (MK_COMB (@lem4042046 A B) (@lem4042045 A B x y)). Qed.
Lemma lem4042048 {A B : Type'} (x : type529 A B) : (term569 A B x) = (term570 A B x).
Proof. exact (fun_ext (fun y : type529 A B => @lem4042047 A B x y)). Qed.
Lemma lem4042049 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4042050 {A B : Type'} (x : type529 A B) : (term550 A B x) = (term571 A B x).
Proof. exact (MK_COMB (@lem4042049 A B) (@lem4042048 A B x)). Qed.
Lemma lem4042051 {A B : Type'} (x : type529 A B) : ((term549 A B x) = (term550 A B x)) = ((term545 A B x) = (term571 A B x)).
Proof. exact (MK_COMB (@lem4042039 A B x) (@lem4042050 A B x)). Qed.
Lemma lem4042052 {A B : Type'} (x : type529 A B) : (term545 A B x) = (term571 A B x).
Proof. exact (EQ_MP (@lem4042051 A B x) (@lem4042026 A B x)). Qed.
Lemma lem4042053 {A B : Type'} : (term547 A B) = (term572 A B).
Proof. exact (fun_ext (fun x : type529 A B => @lem4042052 A B x)). Qed.
Lemma lem4042054 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4042055 {A B : Type'} : (term548 A B) = (term573 A B).
Proof. exact (MK_COMB (@lem4042054 A B) (@lem4042053 A B)). Qed.
Lemma lem4042056 {A B : Type'} : (term525 A B) = (term573 A B).
Proof. exact (TRANS (@lem4042022 A B) (@lem4042055 A B)). Qed.
Lemma lem4042058 {A B : Type'} : (term437 A B) = (term573 A B).
Proof. exact (TRANS (@lem4041992 A B) (@lem4042056 A B)). Qed.
Lemma lem4042059 {A B : Type'} : (term230 A B) = (term573 A B).
Proof. exact (TRANS (@lem4041764 A B) (@lem4042058 A B)). Qed.
Lemma lem4042060 {A B : Type'} (h1 : term230 A B) : term573 A B.
Proof. exact (EQ_MP (@lem4042059 A B) (@lem4039313 A B h1)). Qed.
Lemma lem4042075 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term886 A s f x y) = (term887 A s f x y).
Proof. exact (@lem17362 (term888 A s x f y) (x = y)). Qed.
Lemma lem4042076 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4042077 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term889 A s f x) = (term890 A s f x).
Proof. exact (@lem4042076 A (term348 A s f x)). Qed.
Lemma lem4042078 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term891 A s f x y) = (term347 A s f x y).
Proof. exact (eq_refl (term891 A s f x y)). Qed.
Lemma lem4042079 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042080 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term892 A s f x y) = (term886 A s f x y).
Proof. exact (MK_COMB (@lem4042079) (@lem4042078 A s f x y)). Qed.
Lemma lem4042081 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term892 A s f x y) = (term887 A s f x y).
Proof. exact (TRANS (@lem4042080 A s f x y) (@lem4042075 A s f x y)). Qed.
Lemma lem4042082 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term893 A s f x) = (term894 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4042081 A s f x y)). Qed.
Lemma lem4042083 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042084 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term890 A s f x) = (term895 A s f x).
Proof. exact (MK_COMB (@lem4042083 A) (@lem4042082 A s f x)). Qed.
Lemma lem4042085 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term889 A s f x) = (term895 A s f x).
Proof. exact (TRANS (@lem4042077 A s f x) (@lem4042084 A s f x)). Qed.
Lemma lem4042086 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4042087 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term896 A s f) = (term897 A s f).
Proof. exact (@lem4042086 A (term350 A s f)). Qed.
Lemma lem4042088 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term898 A s f x) = (term349 A s f x).
Proof. exact (eq_refl (term898 A s f x)). Qed.
Lemma lem4042089 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042090 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term899 A s f x) = (term889 A s f x).
Proof. exact (MK_COMB (@lem4042089) (@lem4042088 A s f x)). Qed.
Lemma lem4042091 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term899 A s f x) = (term895 A s f x).
Proof. exact (TRANS (@lem4042090 A s f x) (@lem4042085 A s f x)). Qed.
Lemma lem4042092 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term900 A s f) = (term901 A s f).
Proof. exact (fun_ext (fun x : A => @lem4042091 A s f x)). Qed.
Lemma lem4042093 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042094 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term897 A s f) = (term902 A s f).
Proof. exact (MK_COMB (@lem4042093 A) (@lem4042092 A s f)). Qed.
Lemma lem4042095 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term896 A s f) = (term902 A s f).
Proof. exact (TRANS (@lem4042087 A s f) (@lem4042094 A s f)). Qed.
Lemma lem4042110 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term346 A f s) = (@FINITE A s)) = (term903 A f s).
Proof. exact (@lem17784 (term346 A f s) (@FINITE A s)). Qed.
Lemma lem4042111 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042112 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term904 A s f) = (term905 A s f).
Proof. exact (MK_COMB (@lem4042111) (@lem4042095 A s f)). Qed.
Lemma lem4042113 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term906 A f s) = (term907 A f s).
Proof. exact (MK_COMB (@lem4042112 A s f) (@lem4042110 A f s)). Qed.
Lemma lem4042114 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term353 A f s) = (term906 A f s).
Proof. exact (@lem17265 (term351 A s f) ((term346 A f s) = (@FINITE A s))). Qed.
Lemma lem4042115 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term353 A f s) = (term907 A f s).
Proof. exact (TRANS (@lem4042114 A f s) (@lem4042113 A f s)). Qed.
Lemma lem4042116 {A : Type'} (f : A -> nat) : (term354 A f) = (term908 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042115 A f s)). Qed.
Lemma lem4042117 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042118 {A : Type'} (f : A -> nat) : (term355 A f) = (term909 A f).
Proof. exact (MK_COMB (@lem4042117 A) (@lem4042116 A f)). Qed.
Lemma lem4042119 {A : Type'} : (term356 A) = (term910 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042118 A f)). Qed.
Lemma lem4042120 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042121 {A : Type'} : (term233 A) = (term911 A).
Proof. exact (MK_COMB (@lem4042120 A) (@lem4042119 A)). Qed.
Lemma lem4042228 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042229 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4042228 A P Q). Qed.
Lemma lem4042230 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term912 A f s) = (term913 A f s).
Proof. exact (@lem4042229 A (term901 A s f) (term903 A f s)). Qed.
Lemma lem4042231 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term914 A s f x) = (term895 A s f x).
Proof. exact (eq_refl (term914 A s f x)). Qed.
Lemma lem4042232 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term915 A s f) = (term901 A s f).
Proof. exact (fun_ext (fun x : A => @lem4042231 A s f x)). Qed.
Lemma lem4042233 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042234 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term916 A s f) = (term902 A s f).
Proof. exact (MK_COMB (@lem4042233 A) (@lem4042232 A s f)). Qed.
Lemma lem4042235 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042236 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term917 A s f) = (term905 A s f).
Proof. exact (MK_COMB (@lem4042235) (@lem4042234 A s f)). Qed.
Lemma lem4042237 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term903 A f s) = (term903 A f s).
Proof. exact (eq_refl (term903 A f s)). Qed.
Lemma lem4042238 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term912 A f s) = (term907 A f s).
Proof. exact (MK_COMB (@lem4042236 A s f) (@lem4042237 A f s)). Qed.
Lemma lem4042239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042240 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term918 A f s) = (term919 A f s).
Proof. exact (MK_COMB (@lem4042239) (@lem4042238 A f s)). Qed.
Lemma lem4042241 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term914 A s f x) = (term895 A s f x).
Proof. exact (eq_refl (term914 A s f x)). Qed.
Lemma lem4042242 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042243 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term920 A s f x) = (term921 A s f x).
Proof. exact (MK_COMB (@lem4042242) (@lem4042241 A s f x)). Qed.
Lemma lem4042244 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term903 A f s) = (term903 A f s).
Proof. exact (eq_refl (term903 A f s)). Qed.
Lemma lem4042245 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term922 A x f s) = (term923 A x f s).
Proof. exact (MK_COMB (@lem4042243 A s f x) (@lem4042244 A f s)). Qed.
Lemma lem4042246 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term924 A f s) = (term925 A f s).
Proof. exact (fun_ext (fun x : A => @lem4042245 A x f s)). Qed.
Lemma lem4042247 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042248 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term913 A f s) = (term926 A f s).
Proof. exact (MK_COMB (@lem4042247 A) (@lem4042246 A f s)). Qed.
Lemma lem4042249 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term912 A f s) = (term913 A f s)) = ((term907 A f s) = (term926 A f s)).
Proof. exact (MK_COMB (@lem4042240 A f s) (@lem4042248 A f s)). Qed.
Lemma lem4042250 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term907 A f s) = (term926 A f s).
Proof. exact (EQ_MP (@lem4042249 A f s) (@lem4042230 A f s)). Qed.
Lemma lem4042252 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042253 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4042252 A P Q). Qed.
Lemma lem4042254 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term927 A x f s) = (term928 A x f s).
Proof. exact (@lem4042253 A (term894 A s f x) (term903 A f s)). Qed.
Lemma lem4042255 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term929 A s f x y) = (term887 A s f x y).
Proof. exact (eq_refl (term929 A s f x y)). Qed.
Lemma lem4042256 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term930 A s f x) = (term894 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4042255 A s f x y)). Qed.
Lemma lem4042257 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042258 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term931 A s f x) = (term895 A s f x).
Proof. exact (MK_COMB (@lem4042257 A) (@lem4042256 A s f x)). Qed.
Lemma lem4042259 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042260 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term932 A s f x) = (term921 A s f x).
Proof. exact (MK_COMB (@lem4042259) (@lem4042258 A s f x)). Qed.
Lemma lem4042261 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term903 A f s) = (term903 A f s).
Proof. exact (eq_refl (term903 A f s)). Qed.
Lemma lem4042262 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term927 A x f s) = (term923 A x f s).
Proof. exact (MK_COMB (@lem4042260 A s f x) (@lem4042261 A f s)). Qed.
Lemma lem4042263 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042264 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term933 A x f s) = (term934 A x f s).
Proof. exact (MK_COMB (@lem4042263) (@lem4042262 A x f s)). Qed.
Lemma lem4042265 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term929 A s f x y) = (term887 A s f x y).
Proof. exact (eq_refl (term929 A s f x y)). Qed.
Lemma lem4042266 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042267 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term935 A s f x y) = (term936 A s f x y).
Proof. exact (MK_COMB (@lem4042266) (@lem4042265 A s f x y)). Qed.
Lemma lem4042268 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term903 A f s) = (term903 A f s).
Proof. exact (eq_refl (term903 A f s)). Qed.
Lemma lem4042269 {A : Type'} (x : A) (y : A) (f : A -> nat) (s : A -> Prop) : (term937 A x y f s) = (term938 A x y f s).
Proof. exact (MK_COMB (@lem4042267 A s f x y) (@lem4042268 A f s)). Qed.
Lemma lem4042270 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term939 A x f s) = (term940 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4042269 A x y f s)). Qed.
Lemma lem4042271 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042272 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term928 A x f s) = (term941 A x f s).
Proof. exact (MK_COMB (@lem4042271 A) (@lem4042270 A x f s)). Qed.
Lemma lem4042273 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : ((term927 A x f s) = (term928 A x f s)) = ((term923 A x f s) = (term941 A x f s)).
Proof. exact (MK_COMB (@lem4042264 A x f s) (@lem4042272 A x f s)). Qed.
Lemma lem4042274 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term923 A x f s) = (term941 A x f s).
Proof. exact (EQ_MP (@lem4042273 A x f s) (@lem4042254 A x f s)). Qed.
Lemma lem4042275 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term925 A f s) = (term942 A f s).
Proof. exact (fun_ext (fun x : A => @lem4042274 A x f s)). Qed.
Lemma lem4042276 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042277 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term926 A f s) = (term943 A f s).
Proof. exact (MK_COMB (@lem4042276 A) (@lem4042275 A f s)). Qed.
Lemma lem4042278 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term907 A f s) = (term943 A f s).
Proof. exact (TRANS (@lem4042250 A f s) (@lem4042277 A f s)). Qed.
Lemma lem4042279 {A : Type'} (f : A -> nat) : (term908 A f) = (term944 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042278 A f s)). Qed.
Lemma lem4042280 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042281 {A : Type'} (f : A -> nat) : (term909 A f) = (term945 A f).
Proof. exact (MK_COMB (@lem4042280 A) (@lem4042279 A f)). Qed.
Lemma lem4042283 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042284 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4042283 (A -> Prop) A P). Qed.
Lemma lem4042285 {A : Type'} (f : A -> nat) : (term946 A f) = (term947 A f).
Proof. exact (@lem4042284 A (term948 A f)). Qed.
Lemma lem4042286 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term949 A f s) = (term942 A f s).
Proof. exact (eq_refl (term949 A f s)). Qed.
Lemma lem4042287 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4042288 {A : Type'} (f : A -> nat) (s : A -> Prop) (x : A) : (term950 A f s x) = (term951 A f s x).
Proof. exact (MK_COMB (@lem4042286 A f s) (@lem4042287 A x)). Qed.
Lemma lem4042289 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term951 A f s x) = (term941 A x f s).
Proof. exact (eq_refl (term951 A f s x)). Qed.
Lemma lem4042290 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term950 A f s x) = (term941 A x f s).
Proof. exact (TRANS (@lem4042288 A f s x) (@lem4042289 A x f s)). Qed.
Lemma lem4042291 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term952 A f s) = (term942 A f s).
Proof. exact (fun_ext (fun x : A => @lem4042290 A x f s)). Qed.
Lemma lem4042292 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042293 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term953 A f s) = (term943 A f s).
Proof. exact (MK_COMB (@lem4042292 A) (@lem4042291 A f s)). Qed.
Lemma lem4042294 {A : Type'} (f : A -> nat) : (term954 A f) = (term944 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042293 A f s)). Qed.
Lemma lem4042295 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042296 {A : Type'} (f : A -> nat) : (term946 A f) = (term945 A f).
Proof. exact (MK_COMB (@lem4042295 A) (@lem4042294 A f)). Qed.
Lemma lem4042297 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042298 {A : Type'} (f : A -> nat) : (term955 A f) = (term956 A f).
Proof. exact (MK_COMB (@lem4042297) (@lem4042296 A f)). Qed.
Lemma lem4042299 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term949 A f s) = (term942 A f s).
Proof. exact (eq_refl (term949 A f s)). Qed.
Lemma lem4042300 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4042301 {A : Type'} (f : A -> nat) (x : type684 A) (s : A -> Prop) : (term957 A f x s) = (term958 A f x s).
Proof. exact (MK_COMB (@lem4042299 A f s) (@lem4042300 A x s)). Qed.
Lemma lem4042302 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term958 A f x s) = (term959 A x f s).
Proof. exact (eq_refl (term958 A f x s)). Qed.
Lemma lem4042303 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term957 A f x s) = (term959 A x f s).
Proof. exact (TRANS (@lem4042301 A f x s) (@lem4042302 A x f s)). Qed.
Lemma lem4042304 {A : Type'} (x : type684 A) (f : A -> nat) : (term960 A f x) = (term961 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042303 A x f s)). Qed.
Lemma lem4042305 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042306 {A : Type'} (x : type684 A) (f : A -> nat) : (term962 A f x) = (term963 A x f).
Proof. exact (MK_COMB (@lem4042305 A) (@lem4042304 A x f)). Qed.
Lemma lem4042307 {A : Type'} (f : A -> nat) : (term964 A f) = (term965 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4042306 A x f)). Qed.
Lemma lem4042308 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042309 {A : Type'} (f : A -> nat) : (term947 A f) = (term966 A f).
Proof. exact (MK_COMB (@lem4042308 A) (@lem4042307 A f)). Qed.
Lemma lem4042310 {A : Type'} (f : A -> nat) : ((term946 A f) = (term947 A f)) = ((term945 A f) = (term966 A f)).
Proof. exact (MK_COMB (@lem4042298 A f) (@lem4042309 A f)). Qed.
Lemma lem4042311 {A : Type'} (f : A -> nat) : (term945 A f) = (term966 A f).
Proof. exact (EQ_MP (@lem4042310 A f) (@lem4042285 A f)). Qed.
Lemma lem4042313 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042314 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4042313 (A -> Prop) A P). Qed.
Lemma lem4042315 {A : Type'} (x : type684 A) (f : A -> nat) : (term967 A x f) = (term968 A x f).
Proof. exact (@lem4042314 A (term969 A x f)). Qed.
Lemma lem4042316 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term970 A x f s) = (term971 A x f s).
Proof. exact (eq_refl (term970 A x f s)). Qed.
Lemma lem4042317 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4042318 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) (y : A) : (term972 A x f s y) = (term973 A x f s y).
Proof. exact (MK_COMB (@lem4042316 A x f s) (@lem4042317 A y)). Qed.
Lemma lem4042319 {A : Type'} (x : type684 A) (y : A) (f : A -> nat) (s : A -> Prop) : (term973 A x f s y) = (term974 A x y f s).
Proof. exact (eq_refl (term973 A x f s y)). Qed.
Lemma lem4042320 {A : Type'} (x : type684 A) (y : A) (f : A -> nat) (s : A -> Prop) : (term972 A x f s y) = (term974 A x y f s).
Proof. exact (TRANS (@lem4042318 A x f s y) (@lem4042319 A x y f s)). Qed.
Lemma lem4042321 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term975 A x f s) = (term971 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4042320 A x y f s)). Qed.
Lemma lem4042322 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4042323 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term976 A x f s) = (term959 A x f s).
Proof. exact (MK_COMB (@lem4042322 A) (@lem4042321 A x f s)). Qed.
Lemma lem4042324 {A : Type'} (x : type684 A) (f : A -> nat) : (term977 A x f) = (term961 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042323 A x f s)). Qed.
Lemma lem4042325 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042326 {A : Type'} (x : type684 A) (f : A -> nat) : (term967 A x f) = (term963 A x f).
Proof. exact (MK_COMB (@lem4042325 A) (@lem4042324 A x f)). Qed.
Lemma lem4042327 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042328 {A : Type'} (x : type684 A) (f : A -> nat) : (term978 A x f) = (term979 A x f).
Proof. exact (MK_COMB (@lem4042327) (@lem4042326 A x f)). Qed.
Lemma lem4042329 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term970 A x f s) = (term971 A x f s).
Proof. exact (eq_refl (term970 A x f s)). Qed.
Lemma lem4042330 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4042331 {A : Type'} (x : type684 A) (f : A -> nat) (y : type684 A) (s : A -> Prop) : (term980 A x f y s) = (term981 A x f y s).
Proof. exact (MK_COMB (@lem4042329 A x f s) (@lem4042330 A y s)). Qed.
Lemma lem4042332 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) (s : A -> Prop) : (term981 A x f y s) = (term982 A x y f s).
Proof. exact (eq_refl (term981 A x f y s)). Qed.
Lemma lem4042333 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) (s : A -> Prop) : (term980 A x f y s) = (term982 A x y f s).
Proof. exact (TRANS (@lem4042331 A x f y s) (@lem4042332 A x y f s)). Qed.
Lemma lem4042334 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) : (term983 A x f y) = (term984 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4042333 A x y f s)). Qed.
Lemma lem4042335 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4042336 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) : (term985 A x f y) = (term986 A x y f).
Proof. exact (MK_COMB (@lem4042335 A) (@lem4042334 A x y f)). Qed.
Lemma lem4042337 {A : Type'} (x : type684 A) (f : A -> nat) : (term987 A x f) = (term988 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4042336 A x y f)). Qed.
Lemma lem4042338 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042339 {A : Type'} (x : type684 A) (f : A -> nat) : (term968 A x f) = (term989 A x f).
Proof. exact (MK_COMB (@lem4042338 A) (@lem4042337 A x f)). Qed.
Lemma lem4042340 {A : Type'} (x : type684 A) (f : A -> nat) : ((term967 A x f) = (term968 A x f)) = ((term963 A x f) = (term989 A x f)).
Proof. exact (MK_COMB (@lem4042328 A x f) (@lem4042339 A x f)). Qed.
Lemma lem4042341 {A : Type'} (x : type684 A) (f : A -> nat) : (term963 A x f) = (term989 A x f).
Proof. exact (EQ_MP (@lem4042340 A x f) (@lem4042315 A x f)). Qed.
Lemma lem4042342 {A : Type'} (f : A -> nat) : (term965 A f) = (term990 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4042341 A x f)). Qed.
Lemma lem4042343 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042344 {A : Type'} (f : A -> nat) : (term966 A f) = (term991 A f).
Proof. exact (MK_COMB (@lem4042343 A) (@lem4042342 A f)). Qed.
Lemma lem4042345 {A : Type'} (f : A -> nat) : (term945 A f) = (term991 A f).
Proof. exact (TRANS (@lem4042311 A f) (@lem4042344 A f)). Qed.
Lemma lem4042346 {A : Type'} (f : A -> nat) : (term909 A f) = (term991 A f).
Proof. exact (TRANS (@lem4042281 A f) (@lem4042345 A f)). Qed.
Lemma lem4042347 {A : Type'} : (term910 A) = (term992 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042346 A f)). Qed.
Lemma lem4042348 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042349 {A : Type'} : (term911 A) = (term993 A).
Proof. exact (MK_COMB (@lem4042348 A) (@lem4042347 A)). Qed.
Lemma lem4042351 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042352 {A : Type'} (P : type690 A) : (term994 A P) = (term995 A P).
Proof. exact (@lem4042351 (A -> nat) (type684 A) P). Qed.
Lemma lem4042353 {A : Type'} : (term996 A) = (term997 A).
Proof. exact (@lem4042352 A (term998 A)). Qed.
Lemma lem4042354 {A : Type'} (f : A -> nat) : (term999 A f) = (term990 A f).
Proof. exact (eq_refl (term999 A f)). Qed.
Lemma lem4042355 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4042356 {A : Type'} (f : A -> nat) (x : type684 A) : (term1000 A f x) = (term1001 A f x).
Proof. exact (MK_COMB (@lem4042354 A f) (@lem4042355 A x)). Qed.
Lemma lem4042357 {A : Type'} (x : type684 A) (f : A -> nat) : (term1001 A f x) = (term989 A x f).
Proof. exact (eq_refl (term1001 A f x)). Qed.
Lemma lem4042358 {A : Type'} (x : type684 A) (f : A -> nat) : (term1000 A f x) = (term989 A x f).
Proof. exact (TRANS (@lem4042356 A f x) (@lem4042357 A x f)). Qed.
Lemma lem4042359 {A : Type'} (f : A -> nat) : (term1002 A f) = (term990 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4042358 A x f)). Qed.
Lemma lem4042360 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042361 {A : Type'} (f : A -> nat) : (term1003 A f) = (term991 A f).
Proof. exact (MK_COMB (@lem4042360 A) (@lem4042359 A f)). Qed.
Lemma lem4042362 {A : Type'} : (term1004 A) = (term992 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042361 A f)). Qed.
Lemma lem4042363 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042364 {A : Type'} : (term996 A) = (term993 A).
Proof. exact (MK_COMB (@lem4042363 A) (@lem4042362 A)). Qed.
Lemma lem4042365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042366 {A : Type'} : (term1005 A) = (term1006 A).
Proof. exact (MK_COMB (@lem4042365) (@lem4042364 A)). Qed.
Lemma lem4042367 {A : Type'} (f : A -> nat) : (term999 A f) = (term990 A f).
Proof. exact (eq_refl (term999 A f)). Qed.
Lemma lem4042368 {A : Type'} (x : type694 A) (f : A -> nat) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4042369 {A : Type'} (x : type694 A) (f : A -> nat) : (term1007 A x f) = (term1008 A x f).
Proof. exact (MK_COMB (@lem4042367 A f) (@lem4042368 A x f)). Qed.
Lemma lem4042370 {A : Type'} (x : type694 A) (f : A -> nat) : (term1008 A x f) = (term1009 A x f).
Proof. exact (eq_refl (term1008 A x f)). Qed.
Lemma lem4042371 {A : Type'} (x : type694 A) (f : A -> nat) : (term1007 A x f) = (term1009 A x f).
Proof. exact (TRANS (@lem4042369 A x f) (@lem4042370 A x f)). Qed.
Lemma lem4042372 {A : Type'} (x : type694 A) : (term1010 A x) = (term1011 A x).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042371 A x f)). Qed.
Lemma lem4042373 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042374 {A : Type'} (x : type694 A) : (term1012 A x) = (term1013 A x).
Proof. exact (MK_COMB (@lem4042373 A) (@lem4042372 A x)). Qed.
Lemma lem4042375 {A : Type'} : (term1014 A) = (term1015 A).
Proof. exact (fun_ext (fun x : type694 A => @lem4042374 A x)). Qed.
Lemma lem4042376 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4042377 {A : Type'} : (term997 A) = (term1016 A).
Proof. exact (MK_COMB (@lem4042376 A) (@lem4042375 A)). Qed.
Lemma lem4042378 {A : Type'} : ((term996 A) = (term997 A)) = ((term993 A) = (term1016 A)).
Proof. exact (MK_COMB (@lem4042366 A) (@lem4042377 A)). Qed.
Lemma lem4042379 {A : Type'} : (term993 A) = (term1016 A).
Proof. exact (EQ_MP (@lem4042378 A) (@lem4042353 A)). Qed.
Lemma lem4042381 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042382 {A : Type'} (P : type690 A) : (term994 A P) = (term995 A P).
Proof. exact (@lem4042381 (A -> nat) (type684 A) P). Qed.
Lemma lem4042383 {A : Type'} (x : type694 A) : (term1017 A x) = (term1018 A x).
Proof. exact (@lem4042382 A (term1019 A x)). Qed.
Lemma lem4042384 {A : Type'} (x : type694 A) (f : A -> nat) : (term1020 A x f) = (term1021 A x f).
Proof. exact (eq_refl (term1020 A x f)). Qed.
Lemma lem4042385 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4042386 {A : Type'} (x : type694 A) (f : A -> nat) (y : type684 A) : (term1022 A x f y) = (term1023 A x f y).
Proof. exact (MK_COMB (@lem4042384 A x f) (@lem4042385 A y)). Qed.
Lemma lem4042387 {A : Type'} (x : type694 A) (y : type684 A) (f : A -> nat) : (term1023 A x f y) = (term1024 A x y f).
Proof. exact (eq_refl (term1023 A x f y)). Qed.
Lemma lem4042388 {A : Type'} (x : type694 A) (y : type684 A) (f : A -> nat) : (term1022 A x f y) = (term1024 A x y f).
Proof. exact (TRANS (@lem4042386 A x f y) (@lem4042387 A x y f)). Qed.
Lemma lem4042389 {A : Type'} (x : type694 A) (f : A -> nat) : (term1025 A x f) = (term1021 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4042388 A x y f)). Qed.
Lemma lem4042390 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4042391 {A : Type'} (x : type694 A) (f : A -> nat) : (term1026 A x f) = (term1009 A x f).
Proof. exact (MK_COMB (@lem4042390 A) (@lem4042389 A x f)). Qed.
Lemma lem4042392 {A : Type'} (x : type694 A) : (term1027 A x) = (term1011 A x).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042391 A x f)). Qed.
Lemma lem4042393 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042394 {A : Type'} (x : type694 A) : (term1017 A x) = (term1013 A x).
Proof. exact (MK_COMB (@lem4042393 A) (@lem4042392 A x)). Qed.
Lemma lem4042395 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042396 {A : Type'} (x : type694 A) : (term1028 A x) = (term1029 A x).
Proof. exact (MK_COMB (@lem4042395) (@lem4042394 A x)). Qed.
Lemma lem4042397 {A : Type'} (x : type694 A) (f : A -> nat) : (term1020 A x f) = (term1021 A x f).
Proof. exact (eq_refl (term1020 A x f)). Qed.
Lemma lem4042398 {A : Type'} (y : type694 A) (f : A -> nat) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4042399 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term1030 A x y f) = (term1031 A x y f).
Proof. exact (MK_COMB (@lem4042397 A x f) (@lem4042398 A y f)). Qed.
Lemma lem4042400 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term1031 A x y f) = (term1032 A x y f).
Proof. exact (eq_refl (term1031 A x y f)). Qed.
Lemma lem4042401 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term1030 A x y f) = (term1032 A x y f).
Proof. exact (TRANS (@lem4042399 A x y f) (@lem4042400 A x y f)). Qed.
Lemma lem4042402 {A : Type'} (x : type694 A) (y : type694 A) : (term1033 A x y) = (term1034 A x y).
Proof. exact (fun_ext (fun f : A -> nat => @lem4042401 A x y f)). Qed.
Lemma lem4042403 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4042404 {A : Type'} (x : type694 A) (y : type694 A) : (term1035 A x y) = (term1036 A x y).
Proof. exact (MK_COMB (@lem4042403 A) (@lem4042402 A x y)). Qed.
Lemma lem4042405 {A : Type'} (x : type694 A) : (term1037 A x) = (term1038 A x).
Proof. exact (fun_ext (fun y : type694 A => @lem4042404 A x y)). Qed.
Lemma lem4042406 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4042407 {A : Type'} (x : type694 A) : (term1018 A x) = (term1039 A x).
Proof. exact (MK_COMB (@lem4042406 A) (@lem4042405 A x)). Qed.
Lemma lem4042408 {A : Type'} (x : type694 A) : ((term1017 A x) = (term1018 A x)) = ((term1013 A x) = (term1039 A x)).
Proof. exact (MK_COMB (@lem4042396 A x) (@lem4042407 A x)). Qed.
Lemma lem4042409 {A : Type'} (x : type694 A) : (term1013 A x) = (term1039 A x).
Proof. exact (EQ_MP (@lem4042408 A x) (@lem4042383 A x)). Qed.
Lemma lem4042410 {A : Type'} : (term1015 A) = (term1040 A).
Proof. exact (fun_ext (fun x : type694 A => @lem4042409 A x)). Qed.
Lemma lem4042411 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4042412 {A : Type'} : (term1016 A) = (term1041 A).
Proof. exact (MK_COMB (@lem4042411 A) (@lem4042410 A)). Qed.
Lemma lem4042413 {A : Type'} : (term993 A) = (term1041 A).
Proof. exact (TRANS (@lem4042379 A) (@lem4042412 A)). Qed.
Lemma lem4042415 {A : Type'} : (term911 A) = (term1041 A).
Proof. exact (TRANS (@lem4042349 A) (@lem4042413 A)). Qed.
Lemma lem4042416 {A : Type'} : (term233 A) = (term1041 A).
Proof. exact (TRANS (@lem4042121 A) (@lem4042415 A)). Qed.
Lemma lem4042417 {A : Type'} (h1 : term233 A) : term1041 A.
Proof. exact (EQ_MP (@lem4042416 A) (@lem4039314 A h1)). Qed.
Lemma lem4042432 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term730 B s f x y) = (term731 B s f x y).
Proof. exact (@lem17362 (term732 B s x f y) (x = y)). Qed.
Lemma lem4042433 {B : Type'} (P : B -> Prop) : (term413 B P) = (term414 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4042434 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term733 B s f x) = (term734 B s f x).
Proof. exact (@lem4042433 B (term337 B s f x)). Qed.
Lemma lem4042435 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term735 B s f x y) = (term336 B s f x y).
Proof. exact (eq_refl (term735 B s f x y)). Qed.
Lemma lem4042436 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042437 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term736 B s f x y) = (term730 B s f x y).
Proof. exact (MK_COMB (@lem4042436) (@lem4042435 B s f x y)). Qed.
Lemma lem4042438 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term736 B s f x y) = (term731 B s f x y).
Proof. exact (TRANS (@lem4042437 B s f x y) (@lem4042432 B s f x y)). Qed.
Lemma lem4042439 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term737 B s f x) = (term738 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4042438 B s f x y)). Qed.
Lemma lem4042440 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042441 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term734 B s f x) = (term739 B s f x).
Proof. exact (MK_COMB (@lem4042440 B) (@lem4042439 B s f x)). Qed.
Lemma lem4042442 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term733 B s f x) = (term739 B s f x).
Proof. exact (TRANS (@lem4042434 B s f x) (@lem4042441 B s f x)). Qed.
Lemma lem4042443 {B : Type'} (P : B -> Prop) : (term413 B P) = (term414 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4042444 {B : Type'} (s : B -> Prop) (f : B -> B) : (term740 B s f) = (term741 B s f).
Proof. exact (@lem4042443 B (term339 B s f)). Qed.
Lemma lem4042445 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term742 B s f x) = (term338 B s f x).
Proof. exact (eq_refl (term742 B s f x)). Qed.
Lemma lem4042446 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042447 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term743 B s f x) = (term733 B s f x).
Proof. exact (MK_COMB (@lem4042446) (@lem4042445 B s f x)). Qed.
Lemma lem4042448 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term743 B s f x) = (term739 B s f x).
Proof. exact (TRANS (@lem4042447 B s f x) (@lem4042442 B s f x)). Qed.
Lemma lem4042449 {B : Type'} (s : B -> Prop) (f : B -> B) : (term744 B s f) = (term745 B s f).
Proof. exact (fun_ext (fun x : B => @lem4042448 B s f x)). Qed.
Lemma lem4042450 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042451 {B : Type'} (s : B -> Prop) (f : B -> B) : (term741 B s f) = (term746 B s f).
Proof. exact (MK_COMB (@lem4042450 B) (@lem4042449 B s f)). Qed.
Lemma lem4042452 {B : Type'} (s : B -> Prop) (f : B -> B) : (term740 B s f) = (term746 B s f).
Proof. exact (TRANS (@lem4042444 B s f) (@lem4042451 B s f)). Qed.
Lemma lem4042467 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term335 B f s) = (@FINITE B s)) = (term747 B f s).
Proof. exact (@lem17784 (term335 B f s) (@FINITE B s)). Qed.
Lemma lem4042468 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042469 {B : Type'} (s : B -> Prop) (f : B -> B) : (term748 B s f) = (term749 B s f).
Proof. exact (MK_COMB (@lem4042468) (@lem4042452 B s f)). Qed.
Lemma lem4042470 {B : Type'} (f : B -> B) (s : B -> Prop) : (term750 B f s) = (term751 B f s).
Proof. exact (MK_COMB (@lem4042469 B s f) (@lem4042467 B f s)). Qed.
Lemma lem4042471 {B : Type'} (f : B -> B) (s : B -> Prop) : (term342 B f s) = (term750 B f s).
Proof. exact (@lem17265 (term340 B s f) ((term335 B f s) = (@FINITE B s))). Qed.
Lemma lem4042472 {B : Type'} (f : B -> B) (s : B -> Prop) : (term342 B f s) = (term751 B f s).
Proof. exact (TRANS (@lem4042471 B f s) (@lem4042470 B f s)). Qed.
Lemma lem4042473 {B : Type'} (f : B -> B) : (term343 B f) = (term752 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042472 B f s)). Qed.
Lemma lem4042474 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042475 {B : Type'} (f : B -> B) : (term344 B f) = (term753 B f).
Proof. exact (MK_COMB (@lem4042474 B) (@lem4042473 B f)). Qed.
Lemma lem4042476 {B : Type'} : (term345 B) = (term754 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4042475 B f)). Qed.
Lemma lem4042477 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042478 {B : Type'} : (term232 B) = (term755 B).
Proof. exact (MK_COMB (@lem4042477 B) (@lem4042476 B)). Qed.
Lemma lem4042585 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042586 {B : Type'} (P : B -> Prop) (Q : Prop) : (term438 B P Q) = (term439 B P Q).
Proof. exact (@lem4042585 B P Q). Qed.
Lemma lem4042587 {B : Type'} (f : B -> B) (s : B -> Prop) : (term756 B f s) = (term757 B f s).
Proof. exact (@lem4042586 B (term745 B s f) (term747 B f s)). Qed.
Lemma lem4042588 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term758 B s f x) = (term739 B s f x).
Proof. exact (eq_refl (term758 B s f x)). Qed.
Lemma lem4042589 {B : Type'} (s : B -> Prop) (f : B -> B) : (term759 B s f) = (term745 B s f).
Proof. exact (fun_ext (fun x : B => @lem4042588 B s f x)). Qed.
Lemma lem4042590 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042591 {B : Type'} (s : B -> Prop) (f : B -> B) : (term760 B s f) = (term746 B s f).
Proof. exact (MK_COMB (@lem4042590 B) (@lem4042589 B s f)). Qed.
Lemma lem4042592 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042593 {B : Type'} (s : B -> Prop) (f : B -> B) : (term761 B s f) = (term749 B s f).
Proof. exact (MK_COMB (@lem4042592) (@lem4042591 B s f)). Qed.
Lemma lem4042594 {B : Type'} (f : B -> B) (s : B -> Prop) : (term747 B f s) = (term747 B f s).
Proof. exact (eq_refl (term747 B f s)). Qed.
Lemma lem4042595 {B : Type'} (f : B -> B) (s : B -> Prop) : (term756 B f s) = (term751 B f s).
Proof. exact (MK_COMB (@lem4042593 B s f) (@lem4042594 B f s)). Qed.
Lemma lem4042596 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042597 {B : Type'} (f : B -> B) (s : B -> Prop) : (term762 B f s) = (term763 B f s).
Proof. exact (MK_COMB (@lem4042596) (@lem4042595 B f s)). Qed.
Lemma lem4042598 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term758 B s f x) = (term739 B s f x).
Proof. exact (eq_refl (term758 B s f x)). Qed.
Lemma lem4042599 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042600 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term764 B s f x) = (term765 B s f x).
Proof. exact (MK_COMB (@lem4042599) (@lem4042598 B s f x)). Qed.
Lemma lem4042601 {B : Type'} (f : B -> B) (s : B -> Prop) : (term747 B f s) = (term747 B f s).
Proof. exact (eq_refl (term747 B f s)). Qed.
Lemma lem4042602 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term766 B x f s) = (term767 B x f s).
Proof. exact (MK_COMB (@lem4042600 B s f x) (@lem4042601 B f s)). Qed.
Lemma lem4042603 {B : Type'} (f : B -> B) (s : B -> Prop) : (term768 B f s) = (term769 B f s).
Proof. exact (fun_ext (fun x : B => @lem4042602 B x f s)). Qed.
Lemma lem4042604 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042605 {B : Type'} (f : B -> B) (s : B -> Prop) : (term757 B f s) = (term770 B f s).
Proof. exact (MK_COMB (@lem4042604 B) (@lem4042603 B f s)). Qed.
Lemma lem4042606 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term756 B f s) = (term757 B f s)) = ((term751 B f s) = (term770 B f s)).
Proof. exact (MK_COMB (@lem4042597 B f s) (@lem4042605 B f s)). Qed.
Lemma lem4042607 {B : Type'} (f : B -> B) (s : B -> Prop) : (term751 B f s) = (term770 B f s).
Proof. exact (EQ_MP (@lem4042606 B f s) (@lem4042587 B f s)). Qed.
Lemma lem4042609 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042610 {B : Type'} (P : B -> Prop) (Q : Prop) : (term438 B P Q) = (term439 B P Q).
Proof. exact (@lem4042609 B P Q). Qed.
Lemma lem4042611 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term771 B x f s) = (term772 B x f s).
Proof. exact (@lem4042610 B (term738 B s f x) (term747 B f s)). Qed.
Lemma lem4042612 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term773 B s f x y) = (term731 B s f x y).
Proof. exact (eq_refl (term773 B s f x y)). Qed.
Lemma lem4042613 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term774 B s f x) = (term738 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4042612 B s f x y)). Qed.
Lemma lem4042614 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042615 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term775 B s f x) = (term739 B s f x).
Proof. exact (MK_COMB (@lem4042614 B) (@lem4042613 B s f x)). Qed.
Lemma lem4042616 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042617 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term776 B s f x) = (term765 B s f x).
Proof. exact (MK_COMB (@lem4042616) (@lem4042615 B s f x)). Qed.
Lemma lem4042618 {B : Type'} (f : B -> B) (s : B -> Prop) : (term747 B f s) = (term747 B f s).
Proof. exact (eq_refl (term747 B f s)). Qed.
Lemma lem4042619 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term771 B x f s) = (term767 B x f s).
Proof. exact (MK_COMB (@lem4042617 B s f x) (@lem4042618 B f s)). Qed.
Lemma lem4042620 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042621 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term777 B x f s) = (term778 B x f s).
Proof. exact (MK_COMB (@lem4042620) (@lem4042619 B x f s)). Qed.
Lemma lem4042622 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term773 B s f x y) = (term731 B s f x y).
Proof. exact (eq_refl (term773 B s f x y)). Qed.
Lemma lem4042623 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042624 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term779 B s f x y) = (term780 B s f x y).
Proof. exact (MK_COMB (@lem4042623) (@lem4042622 B s f x y)). Qed.
Lemma lem4042625 {B : Type'} (f : B -> B) (s : B -> Prop) : (term747 B f s) = (term747 B f s).
Proof. exact (eq_refl (term747 B f s)). Qed.
Lemma lem4042626 {B : Type'} (x : B) (y : B) (f : B -> B) (s : B -> Prop) : (term781 B x y f s) = (term782 B x y f s).
Proof. exact (MK_COMB (@lem4042624 B s f x y) (@lem4042625 B f s)). Qed.
Lemma lem4042627 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term783 B x f s) = (term784 B x f s).
Proof. exact (fun_ext (fun y : B => @lem4042626 B x y f s)). Qed.
Lemma lem4042628 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042629 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term772 B x f s) = (term785 B x f s).
Proof. exact (MK_COMB (@lem4042628 B) (@lem4042627 B x f s)). Qed.
Lemma lem4042630 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : ((term771 B x f s) = (term772 B x f s)) = ((term767 B x f s) = (term785 B x f s)).
Proof. exact (MK_COMB (@lem4042621 B x f s) (@lem4042629 B x f s)). Qed.
Lemma lem4042631 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term767 B x f s) = (term785 B x f s).
Proof. exact (EQ_MP (@lem4042630 B x f s) (@lem4042611 B x f s)). Qed.
Lemma lem4042632 {B : Type'} (f : B -> B) (s : B -> Prop) : (term769 B f s) = (term786 B f s).
Proof. exact (fun_ext (fun x : B => @lem4042631 B x f s)). Qed.
Lemma lem4042633 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042634 {B : Type'} (f : B -> B) (s : B -> Prop) : (term770 B f s) = (term787 B f s).
Proof. exact (MK_COMB (@lem4042633 B) (@lem4042632 B f s)). Qed.
Lemma lem4042635 {B : Type'} (f : B -> B) (s : B -> Prop) : (term751 B f s) = (term787 B f s).
Proof. exact (TRANS (@lem4042607 B f s) (@lem4042634 B f s)). Qed.
Lemma lem4042636 {B : Type'} (f : B -> B) : (term752 B f) = (term788 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042635 B f s)). Qed.
Lemma lem4042637 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042638 {B : Type'} (f : B -> B) : (term753 B f) = (term789 B f).
Proof. exact (MK_COMB (@lem4042637 B) (@lem4042636 B f)). Qed.
Lemma lem4042640 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042641 {B : Type'} (P : type672 B) : (term476 B P) = (term477 B P).
Proof. exact (@lem4042640 (B -> Prop) B P). Qed.
Lemma lem4042642 {B : Type'} (f : B -> B) : (term790 B f) = (term791 B f).
Proof. exact (@lem4042641 B (term792 B f)). Qed.
Lemma lem4042643 {B : Type'} (f : B -> B) (s : B -> Prop) : (term793 B f s) = (term786 B f s).
Proof. exact (eq_refl (term793 B f s)). Qed.
Lemma lem4042644 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4042645 {B : Type'} (f : B -> B) (s : B -> Prop) (x : B) : (term794 B f s x) = (term795 B f s x).
Proof. exact (MK_COMB (@lem4042643 B f s) (@lem4042644 B x)). Qed.
Lemma lem4042646 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term795 B f s x) = (term785 B x f s).
Proof. exact (eq_refl (term795 B f s x)). Qed.
Lemma lem4042647 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term794 B f s x) = (term785 B x f s).
Proof. exact (TRANS (@lem4042645 B f s x) (@lem4042646 B x f s)). Qed.
Lemma lem4042648 {B : Type'} (f : B -> B) (s : B -> Prop) : (term796 B f s) = (term786 B f s).
Proof. exact (fun_ext (fun x : B => @lem4042647 B x f s)). Qed.
Lemma lem4042649 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042650 {B : Type'} (f : B -> B) (s : B -> Prop) : (term797 B f s) = (term787 B f s).
Proof. exact (MK_COMB (@lem4042649 B) (@lem4042648 B f s)). Qed.
Lemma lem4042651 {B : Type'} (f : B -> B) : (term798 B f) = (term788 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042650 B f s)). Qed.
Lemma lem4042652 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042653 {B : Type'} (f : B -> B) : (term790 B f) = (term789 B f).
Proof. exact (MK_COMB (@lem4042652 B) (@lem4042651 B f)). Qed.
Lemma lem4042654 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042655 {B : Type'} (f : B -> B) : (term799 B f) = (term800 B f).
Proof. exact (MK_COMB (@lem4042654) (@lem4042653 B f)). Qed.
Lemma lem4042656 {B : Type'} (f : B -> B) (s : B -> Prop) : (term793 B f s) = (term786 B f s).
Proof. exact (eq_refl (term793 B f s)). Qed.
Lemma lem4042657 {B : Type'} (x : type684 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4042658 {B : Type'} (f : B -> B) (x : type684 B) (s : B -> Prop) : (term801 B f x s) = (term802 B f x s).
Proof. exact (MK_COMB (@lem4042656 B f s) (@lem4042657 B x s)). Qed.
Lemma lem4042659 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term802 B f x s) = (term803 B x f s).
Proof. exact (eq_refl (term802 B f x s)). Qed.
Lemma lem4042660 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term801 B f x s) = (term803 B x f s).
Proof. exact (TRANS (@lem4042658 B f x s) (@lem4042659 B x f s)). Qed.
Lemma lem4042661 {B : Type'} (x : type684 B) (f : B -> B) : (term804 B f x) = (term805 B x f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042660 B x f s)). Qed.
Lemma lem4042662 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042663 {B : Type'} (x : type684 B) (f : B -> B) : (term806 B f x) = (term807 B x f).
Proof. exact (MK_COMB (@lem4042662 B) (@lem4042661 B x f)). Qed.
Lemma lem4042664 {B : Type'} (f : B -> B) : (term808 B f) = (term809 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4042663 B x f)). Qed.
Lemma lem4042665 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4042666 {B : Type'} (f : B -> B) : (term791 B f) = (term810 B f).
Proof. exact (MK_COMB (@lem4042665 B) (@lem4042664 B f)). Qed.
Lemma lem4042667 {B : Type'} (f : B -> B) : ((term790 B f) = (term791 B f)) = ((term789 B f) = (term810 B f)).
Proof. exact (MK_COMB (@lem4042655 B f) (@lem4042666 B f)). Qed.
Lemma lem4042668 {B : Type'} (f : B -> B) : (term789 B f) = (term810 B f).
Proof. exact (EQ_MP (@lem4042667 B f) (@lem4042642 B f)). Qed.
Lemma lem4042670 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042671 {B : Type'} (P : type672 B) : (term476 B P) = (term477 B P).
Proof. exact (@lem4042670 (B -> Prop) B P). Qed.
Lemma lem4042672 {B : Type'} (x : type684 B) (f : B -> B) : (term811 B x f) = (term812 B x f).
Proof. exact (@lem4042671 B (term813 B x f)). Qed.
Lemma lem4042673 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term814 B x f s) = (term815 B x f s).
Proof. exact (eq_refl (term814 B x f s)). Qed.
Lemma lem4042674 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4042675 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) (y : B) : (term816 B x f s y) = (term817 B x f s y).
Proof. exact (MK_COMB (@lem4042673 B x f s) (@lem4042674 B y)). Qed.
Lemma lem4042676 {B : Type'} (x : type684 B) (y : B) (f : B -> B) (s : B -> Prop) : (term817 B x f s y) = (term818 B x y f s).
Proof. exact (eq_refl (term817 B x f s y)). Qed.
Lemma lem4042677 {B : Type'} (x : type684 B) (y : B) (f : B -> B) (s : B -> Prop) : (term816 B x f s y) = (term818 B x y f s).
Proof. exact (TRANS (@lem4042675 B x f s y) (@lem4042676 B x y f s)). Qed.
Lemma lem4042678 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term819 B x f s) = (term815 B x f s).
Proof. exact (fun_ext (fun y : B => @lem4042677 B x y f s)). Qed.
Lemma lem4042679 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4042680 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term820 B x f s) = (term803 B x f s).
Proof. exact (MK_COMB (@lem4042679 B) (@lem4042678 B x f s)). Qed.
Lemma lem4042681 {B : Type'} (x : type684 B) (f : B -> B) : (term821 B x f) = (term805 B x f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042680 B x f s)). Qed.
Lemma lem4042682 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042683 {B : Type'} (x : type684 B) (f : B -> B) : (term811 B x f) = (term807 B x f).
Proof. exact (MK_COMB (@lem4042682 B) (@lem4042681 B x f)). Qed.
Lemma lem4042684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042685 {B : Type'} (x : type684 B) (f : B -> B) : (term822 B x f) = (term823 B x f).
Proof. exact (MK_COMB (@lem4042684) (@lem4042683 B x f)). Qed.
Lemma lem4042686 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term814 B x f s) = (term815 B x f s).
Proof. exact (eq_refl (term814 B x f s)). Qed.
Lemma lem4042687 {B : Type'} (y : type684 B) (s : B -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4042688 {B : Type'} (x : type684 B) (f : B -> B) (y : type684 B) (s : B -> Prop) : (term824 B x f y s) = (term825 B x f y s).
Proof. exact (MK_COMB (@lem4042686 B x f s) (@lem4042687 B y s)). Qed.
Lemma lem4042689 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) (s : B -> Prop) : (term825 B x f y s) = (term826 B x y f s).
Proof. exact (eq_refl (term825 B x f y s)). Qed.
Lemma lem4042690 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) (s : B -> Prop) : (term824 B x f y s) = (term826 B x y f s).
Proof. exact (TRANS (@lem4042688 B x f y s) (@lem4042689 B x y f s)). Qed.
Lemma lem4042691 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) : (term827 B x f y) = (term828 B x y f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4042690 B x y f s)). Qed.
Lemma lem4042692 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4042693 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) : (term829 B x f y) = (term830 B x y f).
Proof. exact (MK_COMB (@lem4042692 B) (@lem4042691 B x y f)). Qed.
Lemma lem4042694 {B : Type'} (x : type684 B) (f : B -> B) : (term831 B x f) = (term832 B x f).
Proof. exact (fun_ext (fun y : type684 B => @lem4042693 B x y f)). Qed.
Lemma lem4042695 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4042696 {B : Type'} (x : type684 B) (f : B -> B) : (term812 B x f) = (term833 B x f).
Proof. exact (MK_COMB (@lem4042695 B) (@lem4042694 B x f)). Qed.
Lemma lem4042697 {B : Type'} (x : type684 B) (f : B -> B) : ((term811 B x f) = (term812 B x f)) = ((term807 B x f) = (term833 B x f)).
Proof. exact (MK_COMB (@lem4042685 B x f) (@lem4042696 B x f)). Qed.
Lemma lem4042698 {B : Type'} (x : type684 B) (f : B -> B) : (term807 B x f) = (term833 B x f).
Proof. exact (EQ_MP (@lem4042697 B x f) (@lem4042672 B x f)). Qed.
Lemma lem4042699 {B : Type'} (f : B -> B) : (term809 B f) = (term834 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4042698 B x f)). Qed.
Lemma lem4042700 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4042701 {B : Type'} (f : B -> B) : (term810 B f) = (term835 B f).
Proof. exact (MK_COMB (@lem4042700 B) (@lem4042699 B f)). Qed.
Lemma lem4042702 {B : Type'} (f : B -> B) : (term789 B f) = (term835 B f).
Proof. exact (TRANS (@lem4042668 B f) (@lem4042701 B f)). Qed.
Lemma lem4042703 {B : Type'} (f : B -> B) : (term753 B f) = (term835 B f).
Proof. exact (TRANS (@lem4042638 B f) (@lem4042702 B f)). Qed.
Lemma lem4042704 {B : Type'} : (term754 B) = (term836 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4042703 B f)). Qed.
Lemma lem4042705 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042706 {B : Type'} : (term755 B) = (term837 B).
Proof. exact (MK_COMB (@lem4042705 B) (@lem4042704 B)). Qed.
Lemma lem4042708 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042709 {B : Type'} (P : type481 B) : (term838 B P) = (term839 B P).
Proof. exact (@lem4042708 (B -> B) (type684 B) P). Qed.
Lemma lem4042710 {B : Type'} : (term840 B) = (term841 B).
Proof. exact (@lem4042709 B (term842 B)). Qed.
Lemma lem4042711 {B : Type'} (f : B -> B) : (term843 B f) = (term834 B f).
Proof. exact (eq_refl (term843 B f)). Qed.
Lemma lem4042712 {B : Type'} (x : type684 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4042713 {B : Type'} (f : B -> B) (x : type684 B) : (term844 B f x) = (term845 B f x).
Proof. exact (MK_COMB (@lem4042711 B f) (@lem4042712 B x)). Qed.
Lemma lem4042714 {B : Type'} (x : type684 B) (f : B -> B) : (term845 B f x) = (term833 B x f).
Proof. exact (eq_refl (term845 B f x)). Qed.
Lemma lem4042715 {B : Type'} (x : type684 B) (f : B -> B) : (term844 B f x) = (term833 B x f).
Proof. exact (TRANS (@lem4042713 B f x) (@lem4042714 B x f)). Qed.
Lemma lem4042716 {B : Type'} (f : B -> B) : (term846 B f) = (term834 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4042715 B x f)). Qed.
Lemma lem4042717 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4042718 {B : Type'} (f : B -> B) : (term847 B f) = (term835 B f).
Proof. exact (MK_COMB (@lem4042717 B) (@lem4042716 B f)). Qed.
Lemma lem4042719 {B : Type'} : (term848 B) = (term836 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4042718 B f)). Qed.
Lemma lem4042720 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042721 {B : Type'} : (term840 B) = (term837 B).
Proof. exact (MK_COMB (@lem4042720 B) (@lem4042719 B)). Qed.
Lemma lem4042722 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042723 {B : Type'} : (term849 B) = (term850 B).
Proof. exact (MK_COMB (@lem4042722) (@lem4042721 B)). Qed.
Lemma lem4042724 {B : Type'} (f : B -> B) : (term843 B f) = (term834 B f).
Proof. exact (eq_refl (term843 B f)). Qed.
Lemma lem4042725 {B : Type'} (x : type485 B) (f : B -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4042726 {B : Type'} (x : type485 B) (f : B -> B) : (term851 B x f) = (term852 B x f).
Proof. exact (MK_COMB (@lem4042724 B f) (@lem4042725 B x f)). Qed.
Lemma lem4042727 {B : Type'} (x : type485 B) (f : B -> B) : (term852 B x f) = (term853 B x f).
Proof. exact (eq_refl (term852 B x f)). Qed.
Lemma lem4042728 {B : Type'} (x : type485 B) (f : B -> B) : (term851 B x f) = (term853 B x f).
Proof. exact (TRANS (@lem4042726 B x f) (@lem4042727 B x f)). Qed.
Lemma lem4042729 {B : Type'} (x : type485 B) : (term854 B x) = (term855 B x).
Proof. exact (fun_ext (fun f : B -> B => @lem4042728 B x f)). Qed.
Lemma lem4042730 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042731 {B : Type'} (x : type485 B) : (term856 B x) = (term857 B x).
Proof. exact (MK_COMB (@lem4042730 B) (@lem4042729 B x)). Qed.
Lemma lem4042732 {B : Type'} : (term858 B) = (term859 B).
Proof. exact (fun_ext (fun x : type485 B => @lem4042731 B x)). Qed.
Lemma lem4042733 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4042734 {B : Type'} : (term841 B) = (term860 B).
Proof. exact (MK_COMB (@lem4042733 B) (@lem4042732 B)). Qed.
Lemma lem4042735 {B : Type'} : ((term840 B) = (term841 B)) = ((term837 B) = (term860 B)).
Proof. exact (MK_COMB (@lem4042723 B) (@lem4042734 B)). Qed.
Lemma lem4042736 {B : Type'} : (term837 B) = (term860 B).
Proof. exact (EQ_MP (@lem4042735 B) (@lem4042710 B)). Qed.
Lemma lem4042738 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042739 {B : Type'} (P : type481 B) : (term838 B P) = (term839 B P).
Proof. exact (@lem4042738 (B -> B) (type684 B) P). Qed.
Lemma lem4042740 {B : Type'} (x : type485 B) : (term861 B x) = (term862 B x).
Proof. exact (@lem4042739 B (term863 B x)). Qed.
Lemma lem4042741 {B : Type'} (x : type485 B) (f : B -> B) : (term864 B x f) = (term865 B x f).
Proof. exact (eq_refl (term864 B x f)). Qed.
Lemma lem4042742 {B : Type'} (y : type684 B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4042743 {B : Type'} (x : type485 B) (f : B -> B) (y : type684 B) : (term866 B x f y) = (term867 B x f y).
Proof. exact (MK_COMB (@lem4042741 B x f) (@lem4042742 B y)). Qed.
Lemma lem4042744 {B : Type'} (x : type485 B) (y : type684 B) (f : B -> B) : (term867 B x f y) = (term868 B x y f).
Proof. exact (eq_refl (term867 B x f y)). Qed.
Lemma lem4042745 {B : Type'} (x : type485 B) (y : type684 B) (f : B -> B) : (term866 B x f y) = (term868 B x y f).
Proof. exact (TRANS (@lem4042743 B x f y) (@lem4042744 B x y f)). Qed.
Lemma lem4042746 {B : Type'} (x : type485 B) (f : B -> B) : (term869 B x f) = (term865 B x f).
Proof. exact (fun_ext (fun y : type684 B => @lem4042745 B x y f)). Qed.
Lemma lem4042747 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4042748 {B : Type'} (x : type485 B) (f : B -> B) : (term870 B x f) = (term853 B x f).
Proof. exact (MK_COMB (@lem4042747 B) (@lem4042746 B x f)). Qed.
Lemma lem4042749 {B : Type'} (x : type485 B) : (term871 B x) = (term855 B x).
Proof. exact (fun_ext (fun f : B -> B => @lem4042748 B x f)). Qed.
Lemma lem4042750 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042751 {B : Type'} (x : type485 B) : (term861 B x) = (term857 B x).
Proof. exact (MK_COMB (@lem4042750 B) (@lem4042749 B x)). Qed.
Lemma lem4042752 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042753 {B : Type'} (x : type485 B) : (term872 B x) = (term873 B x).
Proof. exact (MK_COMB (@lem4042752) (@lem4042751 B x)). Qed.
Lemma lem4042754 {B : Type'} (x : type485 B) (f : B -> B) : (term864 B x f) = (term865 B x f).
Proof. exact (eq_refl (term864 B x f)). Qed.
Lemma lem4042755 {B : Type'} (y : type485 B) (f : B -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4042756 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term874 B x y f) = (term875 B x y f).
Proof. exact (MK_COMB (@lem4042754 B x f) (@lem4042755 B y f)). Qed.
Lemma lem4042757 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term875 B x y f) = (term876 B x y f).
Proof. exact (eq_refl (term875 B x y f)). Qed.
Lemma lem4042758 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term874 B x y f) = (term876 B x y f).
Proof. exact (TRANS (@lem4042756 B x y f) (@lem4042757 B x y f)). Qed.
Lemma lem4042759 {B : Type'} (x : type485 B) (y : type485 B) : (term877 B x y) = (term878 B x y).
Proof. exact (fun_ext (fun f : B -> B => @lem4042758 B x y f)). Qed.
Lemma lem4042760 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4042761 {B : Type'} (x : type485 B) (y : type485 B) : (term879 B x y) = (term880 B x y).
Proof. exact (MK_COMB (@lem4042760 B) (@lem4042759 B x y)). Qed.
Lemma lem4042762 {B : Type'} (x : type485 B) : (term881 B x) = (term882 B x).
Proof. exact (fun_ext (fun y : type485 B => @lem4042761 B x y)). Qed.
Lemma lem4042763 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4042764 {B : Type'} (x : type485 B) : (term862 B x) = (term883 B x).
Proof. exact (MK_COMB (@lem4042763 B) (@lem4042762 B x)). Qed.
Lemma lem4042765 {B : Type'} (x : type485 B) : ((term861 B x) = (term862 B x)) = ((term857 B x) = (term883 B x)).
Proof. exact (MK_COMB (@lem4042753 B x) (@lem4042764 B x)). Qed.
Lemma lem4042766 {B : Type'} (x : type485 B) : (term857 B x) = (term883 B x).
Proof. exact (EQ_MP (@lem4042765 B x) (@lem4042740 B x)). Qed.
Lemma lem4042767 {B : Type'} : (term859 B) = (term884 B).
Proof. exact (fun_ext (fun x : type485 B => @lem4042766 B x)). Qed.
Lemma lem4042768 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4042769 {B : Type'} : (term860 B) = (term885 B).
Proof. exact (MK_COMB (@lem4042768 B) (@lem4042767 B)). Qed.
Lemma lem4042770 {B : Type'} : (term837 B) = (term885 B).
Proof. exact (TRANS (@lem4042736 B) (@lem4042769 B)). Qed.
Lemma lem4042772 {B : Type'} : (term755 B) = (term885 B).
Proof. exact (TRANS (@lem4042706 B) (@lem4042770 B)). Qed.
Lemma lem4042773 {B : Type'} : (term232 B) = (term885 B).
Proof. exact (TRANS (@lem4042478 B) (@lem4042772 B)). Qed.
Lemma lem4042774 {B : Type'} (h1 : term232 B) : term885 B.
Proof. exact (EQ_MP (@lem4042773 B) (@lem4039315 B h1)). Qed.
Lemma lem4042789 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1042 B s f x y) = (term1043 B s f x y).
Proof. exact (@lem17362 (term1044 B s x f y) (x = y)). Qed.
Lemma lem4042790 (P : nat -> Prop) : (term1045 P) = (term1046 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4042791 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1047 B s f x) = (term1048 B s f x).
Proof. exact (@lem4042790 (term326 B s f x)). Qed.
Lemma lem4042792 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1049 B s f x y) = (term325 B s f x y).
Proof. exact (eq_refl (term1049 B s f x y)). Qed.
Lemma lem4042793 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042794 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1050 B s f x y) = (term1042 B s f x y).
Proof. exact (MK_COMB (@lem4042793) (@lem4042792 B s f x y)). Qed.
Lemma lem4042795 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1050 B s f x y) = (term1043 B s f x y).
Proof. exact (TRANS (@lem4042794 B s f x y) (@lem4042789 B s f x y)). Qed.
Lemma lem4042796 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1051 B s f x) = (term1052 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4042795 B s f x y)). Qed.
Lemma lem4042797 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042798 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1048 B s f x) = (term1053 B s f x).
Proof. exact (MK_COMB (@lem4042797) (@lem4042796 B s f x)). Qed.
Lemma lem4042799 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1047 B s f x) = (term1053 B s f x).
Proof. exact (TRANS (@lem4042791 B s f x) (@lem4042798 B s f x)). Qed.
Lemma lem4042800 (P : nat -> Prop) : (term1045 P) = (term1046 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4042801 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1054 B s f) = (term1055 B s f).
Proof. exact (@lem4042800 (term328 B s f)). Qed.
Lemma lem4042802 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1056 B s f x) = (term327 B s f x).
Proof. exact (eq_refl (term1056 B s f x)). Qed.
Lemma lem4042803 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4042804 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1057 B s f x) = (term1047 B s f x).
Proof. exact (MK_COMB (@lem4042803) (@lem4042802 B s f x)). Qed.
Lemma lem4042805 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1057 B s f x) = (term1053 B s f x).
Proof. exact (TRANS (@lem4042804 B s f x) (@lem4042799 B s f x)). Qed.
Lemma lem4042806 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1058 B s f) = (term1059 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4042805 B s f x)). Qed.
Lemma lem4042807 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042808 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1055 B s f) = (term1060 B s f).
Proof. exact (MK_COMB (@lem4042807) (@lem4042806 B s f)). Qed.
Lemma lem4042809 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1054 B s f) = (term1060 B s f).
Proof. exact (TRANS (@lem4042801 B s f) (@lem4042808 B s f)). Qed.
Lemma lem4042824 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term324 B f s) = (@FINITE nat s)) = (term1061 B f s).
Proof. exact (@lem17784 (term324 B f s) (@FINITE nat s)). Qed.
Lemma lem4042825 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042826 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1062 B s f) = (term1063 B s f).
Proof. exact (MK_COMB (@lem4042825) (@lem4042809 B s f)). Qed.
Lemma lem4042827 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1064 B f s) = (term1065 B f s).
Proof. exact (MK_COMB (@lem4042826 B s f) (@lem4042824 B f s)). Qed.
Lemma lem4042828 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term331 B f s) = (term1064 B f s).
Proof. exact (@lem17265 (term329 B s f) ((term324 B f s) = (@FINITE nat s))). Qed.
Lemma lem4042829 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term331 B f s) = (term1065 B f s).
Proof. exact (TRANS (@lem4042828 B f s) (@lem4042827 B f s)). Qed.
Lemma lem4042830 {B : Type'} (f : nat -> B) : (term332 B f) = (term1066 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4042829 B f s)). Qed.
Lemma lem4042831 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4042832 {B : Type'} (f : nat -> B) : (term333 B f) = (term1067 B f).
Proof. exact (MK_COMB (@lem4042831) (@lem4042830 B f)). Qed.
Lemma lem4042833 {B : Type'} : (term334 B) = (term1068 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4042832 B f)). Qed.
Lemma lem4042834 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4042835 {B : Type'} : (term234 B) = (term1069 B).
Proof. exact (MK_COMB (@lem4042834 B) (@lem4042833 B)). Qed.
Lemma lem4042942 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042943 (P : nat -> Prop) (Q : Prop) : (term1070 P Q) = (term1071 P Q).
Proof. exact (@lem4042942 nat P Q). Qed.
Lemma lem4042944 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1072 B f s) = (term1073 B f s).
Proof. exact (@lem4042943 (term1059 B s f) (term1061 B f s)). Qed.
Lemma lem4042945 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1074 B s f x) = (term1053 B s f x).
Proof. exact (eq_refl (term1074 B s f x)). Qed.
Lemma lem4042946 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1075 B s f) = (term1059 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4042945 B s f x)). Qed.
Lemma lem4042947 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042948 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1076 B s f) = (term1060 B s f).
Proof. exact (MK_COMB (@lem4042947) (@lem4042946 B s f)). Qed.
Lemma lem4042949 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042950 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term1077 B s f) = (term1063 B s f).
Proof. exact (MK_COMB (@lem4042949) (@lem4042948 B s f)). Qed.
Lemma lem4042951 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1061 B f s) = (term1061 B f s).
Proof. exact (eq_refl (term1061 B f s)). Qed.
Lemma lem4042952 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1072 B f s) = (term1065 B f s).
Proof. exact (MK_COMB (@lem4042950 B s f) (@lem4042951 B f s)). Qed.
Lemma lem4042953 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042954 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1078 B f s) = (term1079 B f s).
Proof. exact (MK_COMB (@lem4042953) (@lem4042952 B f s)). Qed.
Lemma lem4042955 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1074 B s f x) = (term1053 B s f x).
Proof. exact (eq_refl (term1074 B s f x)). Qed.
Lemma lem4042956 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042957 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1080 B s f x) = (term1081 B s f x).
Proof. exact (MK_COMB (@lem4042956) (@lem4042955 B s f x)). Qed.
Lemma lem4042958 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1061 B f s) = (term1061 B f s).
Proof. exact (eq_refl (term1061 B f s)). Qed.
Lemma lem4042959 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1082 B x f s) = (term1083 B x f s).
Proof. exact (MK_COMB (@lem4042957 B s f x) (@lem4042958 B f s)). Qed.
Lemma lem4042960 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1084 B f s) = (term1085 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4042959 B x f s)). Qed.
Lemma lem4042961 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042962 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1073 B f s) = (term1086 B f s).
Proof. exact (MK_COMB (@lem4042961) (@lem4042960 B f s)). Qed.
Lemma lem4042963 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term1072 B f s) = (term1073 B f s)) = ((term1065 B f s) = (term1086 B f s)).
Proof. exact (MK_COMB (@lem4042954 B f s) (@lem4042962 B f s)). Qed.
Lemma lem4042964 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1065 B f s) = (term1086 B f s).
Proof. exact (EQ_MP (@lem4042963 B f s) (@lem4042944 B f s)). Qed.
Lemma lem4042966 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4042967 (P : nat -> Prop) (Q : Prop) : (term1070 P Q) = (term1071 P Q).
Proof. exact (@lem4042966 nat P Q). Qed.
Lemma lem4042968 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1087 B x f s) = (term1088 B x f s).
Proof. exact (@lem4042967 (term1052 B s f x) (term1061 B f s)). Qed.
Lemma lem4042969 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1089 B s f x y) = (term1043 B s f x y).
Proof. exact (eq_refl (term1089 B s f x y)). Qed.
Lemma lem4042970 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1090 B s f x) = (term1052 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4042969 B s f x y)). Qed.
Lemma lem4042971 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042972 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1091 B s f x) = (term1053 B s f x).
Proof. exact (MK_COMB (@lem4042971) (@lem4042970 B s f x)). Qed.
Lemma lem4042973 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042974 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term1092 B s f x) = (term1081 B s f x).
Proof. exact (MK_COMB (@lem4042973) (@lem4042972 B s f x)). Qed.
Lemma lem4042975 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1061 B f s) = (term1061 B f s).
Proof. exact (eq_refl (term1061 B f s)). Qed.
Lemma lem4042976 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1087 B x f s) = (term1083 B x f s).
Proof. exact (MK_COMB (@lem4042974 B s f x) (@lem4042975 B f s)). Qed.
Lemma lem4042977 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4042978 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1093 B x f s) = (term1094 B x f s).
Proof. exact (MK_COMB (@lem4042977) (@lem4042976 B x f s)). Qed.
Lemma lem4042979 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1089 B s f x y) = (term1043 B s f x y).
Proof. exact (eq_refl (term1089 B s f x y)). Qed.
Lemma lem4042980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4042981 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term1095 B s f x y) = (term1096 B s f x y).
Proof. exact (MK_COMB (@lem4042980) (@lem4042979 B s f x y)). Qed.
Lemma lem4042982 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1061 B f s) = (term1061 B f s).
Proof. exact (eq_refl (term1061 B f s)). Qed.
Lemma lem4042983 {B : Type'} (x : nat) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term1097 B x y f s) = (term1098 B x y f s).
Proof. exact (MK_COMB (@lem4042981 B s f x y) (@lem4042982 B f s)). Qed.
Lemma lem4042984 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1099 B x f s) = (term1100 B x f s).
Proof. exact (fun_ext (fun y : nat => @lem4042983 B x y f s)). Qed.
Lemma lem4042985 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042986 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1088 B x f s) = (term1101 B x f s).
Proof. exact (MK_COMB (@lem4042985) (@lem4042984 B x f s)). Qed.
Lemma lem4042987 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : ((term1087 B x f s) = (term1088 B x f s)) = ((term1083 B x f s) = (term1101 B x f s)).
Proof. exact (MK_COMB (@lem4042978 B x f s) (@lem4042986 B x f s)). Qed.
Lemma lem4042988 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1083 B x f s) = (term1101 B x f s).
Proof. exact (EQ_MP (@lem4042987 B x f s) (@lem4042968 B x f s)). Qed.
Lemma lem4042989 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1085 B f s) = (term1102 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4042988 B x f s)). Qed.
Lemma lem4042990 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4042991 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1086 B f s) = (term1103 B f s).
Proof. exact (MK_COMB (@lem4042990) (@lem4042989 B f s)). Qed.
Lemma lem4042992 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1065 B f s) = (term1103 B f s).
Proof. exact (TRANS (@lem4042964 B f s) (@lem4042991 B f s)). Qed.
Lemma lem4042993 {B : Type'} (f : nat -> B) : (term1066 B f) = (term1104 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4042992 B f s)). Qed.
Lemma lem4042994 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4042995 {B : Type'} (f : nat -> B) : (term1067 B f) = (term1105 B f).
Proof. exact (MK_COMB (@lem4042994) (@lem4042993 B f)). Qed.
Lemma lem4042997 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4042998 (P : type991) : (term1106 P) = (term1107 P).
Proof. exact (@lem4042997 (nat -> Prop) nat P). Qed.
Lemma lem4042999 {B : Type'} (f : nat -> B) : (term1108 B f) = (term1109 B f).
Proof. exact (@lem4042998 (term1110 B f)). Qed.
Lemma lem4043000 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1111 B f s) = (term1102 B f s).
Proof. exact (eq_refl (term1111 B f s)). Qed.
Lemma lem4043001 (x : nat) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043002 {B : Type'} (f : nat -> B) (s : nat -> Prop) (x : nat) : (term1112 B f s x) = (term1113 B f s x).
Proof. exact (MK_COMB (@lem4043000 B f s) (@lem4043001 x)). Qed.
Lemma lem4043003 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1113 B f s x) = (term1101 B x f s).
Proof. exact (eq_refl (term1113 B f s x)). Qed.
Lemma lem4043004 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term1112 B f s x) = (term1101 B x f s).
Proof. exact (TRANS (@lem4043002 B f s x) (@lem4043003 B x f s)). Qed.
Lemma lem4043005 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1114 B f s) = (term1102 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4043004 B x f s)). Qed.
Lemma lem4043006 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4043007 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1115 B f s) = (term1103 B f s).
Proof. exact (MK_COMB (@lem4043006) (@lem4043005 B f s)). Qed.
Lemma lem4043008 {B : Type'} (f : nat -> B) : (term1116 B f) = (term1104 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4043007 B f s)). Qed.
Lemma lem4043009 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4043010 {B : Type'} (f : nat -> B) : (term1108 B f) = (term1105 B f).
Proof. exact (MK_COMB (@lem4043009) (@lem4043008 B f)). Qed.
Lemma lem4043011 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043012 {B : Type'} (f : nat -> B) : (term1117 B f) = (term1118 B f).
Proof. exact (MK_COMB (@lem4043011) (@lem4043010 B f)). Qed.
Lemma lem4043013 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term1111 B f s) = (term1102 B f s).
Proof. exact (eq_refl (term1111 B f s)). Qed.
Lemma lem4043014 (x : type994) (s : nat -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4043015 {B : Type'} (f : nat -> B) (x : type994) (s : nat -> Prop) : (term1119 B f x s) = (term1120 B f x s).
Proof. exact (MK_COMB (@lem4043013 B f s) (@lem4043014 x s)). Qed.
Lemma lem4043016 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1120 B f x s) = (term1121 B x f s).
Proof. exact (eq_refl (term1120 B f x s)). Qed.
Lemma lem4043017 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1119 B f x s) = (term1121 B x f s).
Proof. exact (TRANS (@lem4043015 B f x s) (@lem4043016 B x f s)). Qed.
Lemma lem4043018 {B : Type'} (x : type994) (f : nat -> B) : (term1122 B f x) = (term1123 B x f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4043017 B x f s)). Qed.
Lemma lem4043019 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4043020 {B : Type'} (x : type994) (f : nat -> B) : (term1124 B f x) = (term1125 B x f).
Proof. exact (MK_COMB (@lem4043019) (@lem4043018 B x f)). Qed.
Lemma lem4043021 {B : Type'} (f : nat -> B) : (term1126 B f) = (term1127 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4043020 B x f)). Qed.
Lemma lem4043022 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4043023 {B : Type'} (f : nat -> B) : (term1109 B f) = (term1128 B f).
Proof. exact (MK_COMB (@lem4043022) (@lem4043021 B f)). Qed.
Lemma lem4043024 {B : Type'} (f : nat -> B) : ((term1108 B f) = (term1109 B f)) = ((term1105 B f) = (term1128 B f)).
Proof. exact (MK_COMB (@lem4043012 B f) (@lem4043023 B f)). Qed.
Lemma lem4043025 {B : Type'} (f : nat -> B) : (term1105 B f) = (term1128 B f).
Proof. exact (EQ_MP (@lem4043024 B f) (@lem4042999 B f)). Qed.
Lemma lem4043027 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043028 (P : type991) : (term1106 P) = (term1107 P).
Proof. exact (@lem4043027 (nat -> Prop) nat P). Qed.
Lemma lem4043029 {B : Type'} (x : type994) (f : nat -> B) : (term1129 B x f) = (term1130 B x f).
Proof. exact (@lem4043028 (term1131 B x f)). Qed.
Lemma lem4043030 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1132 B x f s) = (term1133 B x f s).
Proof. exact (eq_refl (term1132 B x f s)). Qed.
Lemma lem4043031 (y : nat) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043032 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) (y : nat) : (term1134 B x f s y) = (term1135 B x f s y).
Proof. exact (MK_COMB (@lem4043030 B x f s) (@lem4043031 y)). Qed.
Lemma lem4043033 {B : Type'} (x : type994) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term1135 B x f s y) = (term1136 B x y f s).
Proof. exact (eq_refl (term1135 B x f s y)). Qed.
Lemma lem4043034 {B : Type'} (x : type994) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term1134 B x f s y) = (term1136 B x y f s).
Proof. exact (TRANS (@lem4043032 B x f s y) (@lem4043033 B x y f s)). Qed.
Lemma lem4043035 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1137 B x f s) = (term1133 B x f s).
Proof. exact (fun_ext (fun y : nat => @lem4043034 B x y f s)). Qed.
Lemma lem4043036 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4043037 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1138 B x f s) = (term1121 B x f s).
Proof. exact (MK_COMB (@lem4043036) (@lem4043035 B x f s)). Qed.
Lemma lem4043038 {B : Type'} (x : type994) (f : nat -> B) : (term1139 B x f) = (term1123 B x f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4043037 B x f s)). Qed.
Lemma lem4043039 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4043040 {B : Type'} (x : type994) (f : nat -> B) : (term1129 B x f) = (term1125 B x f).
Proof. exact (MK_COMB (@lem4043039) (@lem4043038 B x f)). Qed.
Lemma lem4043041 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043042 {B : Type'} (x : type994) (f : nat -> B) : (term1140 B x f) = (term1141 B x f).
Proof. exact (MK_COMB (@lem4043041) (@lem4043040 B x f)). Qed.
Lemma lem4043043 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term1132 B x f s) = (term1133 B x f s).
Proof. exact (eq_refl (term1132 B x f s)). Qed.
Lemma lem4043044 (y : type994) (s : nat -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4043045 {B : Type'} (x : type994) (f : nat -> B) (y : type994) (s : nat -> Prop) : (term1142 B x f y s) = (term1143 B x f y s).
Proof. exact (MK_COMB (@lem4043043 B x f s) (@lem4043044 y s)). Qed.
Lemma lem4043046 {B : Type'} (x : type994) (y : type994) (f : nat -> B) (s : nat -> Prop) : (term1143 B x f y s) = (term1144 B x y f s).
Proof. exact (eq_refl (term1143 B x f y s)). Qed.
Lemma lem4043047 {B : Type'} (x : type994) (y : type994) (f : nat -> B) (s : nat -> Prop) : (term1142 B x f y s) = (term1144 B x y f s).
Proof. exact (TRANS (@lem4043045 B x f y s) (@lem4043046 B x y f s)). Qed.
Lemma lem4043048 {B : Type'} (x : type994) (y : type994) (f : nat -> B) : (term1145 B x f y) = (term1146 B x y f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4043047 B x y f s)). Qed.
Lemma lem4043049 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4043050 {B : Type'} (x : type994) (y : type994) (f : nat -> B) : (term1147 B x f y) = (term1148 B x y f).
Proof. exact (MK_COMB (@lem4043049) (@lem4043048 B x y f)). Qed.
Lemma lem4043051 {B : Type'} (x : type994) (f : nat -> B) : (term1149 B x f) = (term1150 B x f).
Proof. exact (fun_ext (fun y : type994 => @lem4043050 B x y f)). Qed.
Lemma lem4043052 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4043053 {B : Type'} (x : type994) (f : nat -> B) : (term1130 B x f) = (term1151 B x f).
Proof. exact (MK_COMB (@lem4043052) (@lem4043051 B x f)). Qed.
Lemma lem4043054 {B : Type'} (x : type994) (f : nat -> B) : ((term1129 B x f) = (term1130 B x f)) = ((term1125 B x f) = (term1151 B x f)).
Proof. exact (MK_COMB (@lem4043042 B x f) (@lem4043053 B x f)). Qed.
Lemma lem4043055 {B : Type'} (x : type994) (f : nat -> B) : (term1125 B x f) = (term1151 B x f).
Proof. exact (EQ_MP (@lem4043054 B x f) (@lem4043029 B x f)). Qed.
Lemma lem4043056 {B : Type'} (f : nat -> B) : (term1127 B f) = (term1152 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4043055 B x f)). Qed.
Lemma lem4043057 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4043058 {B : Type'} (f : nat -> B) : (term1128 B f) = (term1153 B f).
Proof. exact (MK_COMB (@lem4043057) (@lem4043056 B f)). Qed.
Lemma lem4043059 {B : Type'} (f : nat -> B) : (term1105 B f) = (term1153 B f).
Proof. exact (TRANS (@lem4043025 B f) (@lem4043058 B f)). Qed.
Lemma lem4043060 {B : Type'} (f : nat -> B) : (term1067 B f) = (term1153 B f).
Proof. exact (TRANS (@lem4042995 B f) (@lem4043059 B f)). Qed.
Lemma lem4043061 {B : Type'} : (term1068 B) = (term1154 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4043060 B f)). Qed.
Lemma lem4043062 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4043063 {B : Type'} : (term1069 B) = (term1155 B).
Proof. exact (MK_COMB (@lem4043062 B) (@lem4043061 B)). Qed.
Lemma lem4043065 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043066 {B : Type'} (P : type965 B) : (term1156 B P) = (term1157 B P).
Proof. exact (@lem4043065 (nat -> B) type994 P). Qed.
Lemma lem4043067 {B : Type'} : (term1158 B) = (term1159 B).
Proof. exact (@lem4043066 B (term1160 B)). Qed.
Lemma lem4043068 {B : Type'} (f : nat -> B) : (term1161 B f) = (term1152 B f).
Proof. exact (eq_refl (term1161 B f)). Qed.
Lemma lem4043069 (x : type994) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043070 {B : Type'} (f : nat -> B) (x : type994) : (term1162 B f x) = (term1163 B f x).
Proof. exact (MK_COMB (@lem4043068 B f) (@lem4043069 x)). Qed.
Lemma lem4043071 {B : Type'} (x : type994) (f : nat -> B) : (term1163 B f x) = (term1151 B x f).
Proof. exact (eq_refl (term1163 B f x)). Qed.
Lemma lem4043072 {B : Type'} (x : type994) (f : nat -> B) : (term1162 B f x) = (term1151 B x f).
Proof. exact (TRANS (@lem4043070 B f x) (@lem4043071 B x f)). Qed.
Lemma lem4043073 {B : Type'} (f : nat -> B) : (term1164 B f) = (term1152 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4043072 B x f)). Qed.
Lemma lem4043074 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4043075 {B : Type'} (f : nat -> B) : (term1165 B f) = (term1153 B f).
Proof. exact (MK_COMB (@lem4043074) (@lem4043073 B f)). Qed.
Lemma lem4043076 {B : Type'} : (term1166 B) = (term1154 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4043075 B f)). Qed.
Lemma lem4043077 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4043078 {B : Type'} : (term1158 B) = (term1155 B).
Proof. exact (MK_COMB (@lem4043077 B) (@lem4043076 B)). Qed.
Lemma lem4043079 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043080 {B : Type'} : (term1167 B) = (term1168 B).
Proof. exact (MK_COMB (@lem4043079) (@lem4043078 B)). Qed.
Lemma lem4043081 {B : Type'} (f : nat -> B) : (term1161 B f) = (term1152 B f).
Proof. exact (eq_refl (term1161 B f)). Qed.
Lemma lem4043082 {B : Type'} (x : type969 B) (f : nat -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4043083 {B : Type'} (x : type969 B) (f : nat -> B) : (term1169 B x f) = (term1170 B x f).
Proof. exact (MK_COMB (@lem4043081 B f) (@lem4043082 B x f)). Qed.
Lemma lem4043084 {B : Type'} (x : type969 B) (f : nat -> B) : (term1170 B x f) = (term1171 B x f).
Proof. exact (eq_refl (term1170 B x f)). Qed.
Lemma lem4043085 {B : Type'} (x : type969 B) (f : nat -> B) : (term1169 B x f) = (term1171 B x f).
Proof. exact (TRANS (@lem4043083 B x f) (@lem4043084 B x f)). Qed.
Lemma lem4043086 {B : Type'} (x : type969 B) : (term1172 B x) = (term1173 B x).
Proof. exact (fun_ext (fun f : nat -> B => @lem4043085 B x f)). Qed.
Lemma lem4043087 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4043088 {B : Type'} (x : type969 B) : (term1174 B x) = (term1175 B x).
Proof. exact (MK_COMB (@lem4043087 B) (@lem4043086 B x)). Qed.
Lemma lem4043089 {B : Type'} : (term1176 B) = (term1177 B).
Proof. exact (fun_ext (fun x : type969 B => @lem4043088 B x)). Qed.
Lemma lem4043090 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4043091 {B : Type'} : (term1159 B) = (term1178 B).
Proof. exact (MK_COMB (@lem4043090 B) (@lem4043089 B)). Qed.
Lemma lem4043092 {B : Type'} : ((term1158 B) = (term1159 B)) = ((term1155 B) = (term1178 B)).
Proof. exact (MK_COMB (@lem4043080 B) (@lem4043091 B)). Qed.
Lemma lem4043093 {B : Type'} : (term1155 B) = (term1178 B).
Proof. exact (EQ_MP (@lem4043092 B) (@lem4043067 B)). Qed.
Lemma lem4043095 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043096 {B : Type'} (P : type965 B) : (term1156 B P) = (term1157 B P).
Proof. exact (@lem4043095 (nat -> B) type994 P). Qed.
Lemma lem4043097 {B : Type'} (x : type969 B) : (term1179 B x) = (term1180 B x).
Proof. exact (@lem4043096 B (term1181 B x)). Qed.
Lemma lem4043098 {B : Type'} (x : type969 B) (f : nat -> B) : (term1182 B x f) = (term1183 B x f).
Proof. exact (eq_refl (term1182 B x f)). Qed.
Lemma lem4043099 (y : type994) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043100 {B : Type'} (x : type969 B) (f : nat -> B) (y : type994) : (term1184 B x f y) = (term1185 B x f y).
Proof. exact (MK_COMB (@lem4043098 B x f) (@lem4043099 y)). Qed.
Lemma lem4043101 {B : Type'} (x : type969 B) (y : type994) (f : nat -> B) : (term1185 B x f y) = (term1186 B x y f).
Proof. exact (eq_refl (term1185 B x f y)). Qed.
Lemma lem4043102 {B : Type'} (x : type969 B) (y : type994) (f : nat -> B) : (term1184 B x f y) = (term1186 B x y f).
Proof. exact (TRANS (@lem4043100 B x f y) (@lem4043101 B x y f)). Qed.
Lemma lem4043103 {B : Type'} (x : type969 B) (f : nat -> B) : (term1187 B x f) = (term1183 B x f).
Proof. exact (fun_ext (fun y : type994 => @lem4043102 B x y f)). Qed.
Lemma lem4043104 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4043105 {B : Type'} (x : type969 B) (f : nat -> B) : (term1188 B x f) = (term1171 B x f).
Proof. exact (MK_COMB (@lem4043104) (@lem4043103 B x f)). Qed.
Lemma lem4043106 {B : Type'} (x : type969 B) : (term1189 B x) = (term1173 B x).
Proof. exact (fun_ext (fun f : nat -> B => @lem4043105 B x f)). Qed.
Lemma lem4043107 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4043108 {B : Type'} (x : type969 B) : (term1179 B x) = (term1175 B x).
Proof. exact (MK_COMB (@lem4043107 B) (@lem4043106 B x)). Qed.
Lemma lem4043109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043110 {B : Type'} (x : type969 B) : (term1190 B x) = (term1191 B x).
Proof. exact (MK_COMB (@lem4043109) (@lem4043108 B x)). Qed.
Lemma lem4043111 {B : Type'} (x : type969 B) (f : nat -> B) : (term1182 B x f) = (term1183 B x f).
Proof. exact (eq_refl (term1182 B x f)). Qed.
Lemma lem4043112 {B : Type'} (y : type969 B) (f : nat -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4043113 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term1192 B x y f) = (term1193 B x y f).
Proof. exact (MK_COMB (@lem4043111 B x f) (@lem4043112 B y f)). Qed.
Lemma lem4043114 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term1193 B x y f) = (term1194 B x y f).
Proof. exact (eq_refl (term1193 B x y f)). Qed.
Lemma lem4043115 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term1192 B x y f) = (term1194 B x y f).
Proof. exact (TRANS (@lem4043113 B x y f) (@lem4043114 B x y f)). Qed.
Lemma lem4043116 {B : Type'} (x : type969 B) (y : type969 B) : (term1195 B x y) = (term1196 B x y).
Proof. exact (fun_ext (fun f : nat -> B => @lem4043115 B x y f)). Qed.
Lemma lem4043117 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4043118 {B : Type'} (x : type969 B) (y : type969 B) : (term1197 B x y) = (term1198 B x y).
Proof. exact (MK_COMB (@lem4043117 B) (@lem4043116 B x y)). Qed.
Lemma lem4043119 {B : Type'} (x : type969 B) : (term1199 B x) = (term1200 B x).
Proof. exact (fun_ext (fun y : type969 B => @lem4043118 B x y)). Qed.
Lemma lem4043120 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4043121 {B : Type'} (x : type969 B) : (term1180 B x) = (term1201 B x).
Proof. exact (MK_COMB (@lem4043120 B) (@lem4043119 B x)). Qed.
Lemma lem4043122 {B : Type'} (x : type969 B) : ((term1179 B x) = (term1180 B x)) = ((term1175 B x) = (term1201 B x)).
Proof. exact (MK_COMB (@lem4043110 B x) (@lem4043121 B x)). Qed.
Lemma lem4043123 {B : Type'} (x : type969 B) : (term1175 B x) = (term1201 B x).
Proof. exact (EQ_MP (@lem4043122 B x) (@lem4043097 B x)). Qed.
Lemma lem4043124 {B : Type'} : (term1177 B) = (term1202 B).
Proof. exact (fun_ext (fun x : type969 B => @lem4043123 B x)). Qed.
Lemma lem4043125 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4043126 {B : Type'} : (term1178 B) = (term1203 B).
Proof. exact (MK_COMB (@lem4043125 B) (@lem4043124 B)). Qed.
Lemma lem4043127 {B : Type'} : (term1155 B) = (term1203 B).
Proof. exact (TRANS (@lem4043093 B) (@lem4043126 B)). Qed.
Lemma lem4043129 {B : Type'} : (term1069 B) = (term1203 B).
Proof. exact (TRANS (@lem4043063 B) (@lem4043127 B)). Qed.
Lemma lem4043130 {B : Type'} : (term234 B) = (term1203 B).
Proof. exact (TRANS (@lem4042835 B) (@lem4043129 B)). Qed.
Lemma lem4043131 {B : Type'} (h1 : term234 B) : term1203 B.
Proof. exact (EQ_MP (@lem4043130 B) (@lem4039316 B h1)). Qed.
Lemma lem4043146 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term410 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (@lem17362 (term412 _102126 _102133 s x f y) (x = y)). Qed.
Lemma lem4043147 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4043148 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term415 _102126 _102133 s f x) = (term416 _102126 _102133 s f x).
Proof. exact (@lem4043147 _102126 (term313 _102126 _102133 s f x)). Qed.
Lemma lem4043149 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term417 _102126 _102133 s f x y) = (term312 _102126 _102133 s f x y).
Proof. exact (eq_refl (term417 _102126 _102133 s f x y)). Qed.
Lemma lem4043150 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043151 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term418 _102126 _102133 s f x y) = (term410 _102126 _102133 s f x y).
Proof. exact (MK_COMB (@lem4043150) (@lem4043149 _102126 _102133 s f x y)). Qed.
Lemma lem4043152 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term418 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (TRANS (@lem4043151 _102126 _102133 s f x y) (@lem4043146 _102126 _102133 s f x y)). Qed.
Lemma lem4043153 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term419 _102126 _102133 s f x) = (term420 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4043152 _102126 _102133 s f x y)). Qed.
Lemma lem4043154 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043155 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term416 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4043154 _102126) (@lem4043153 _102126 _102133 s f x)). Qed.
Lemma lem4043156 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term415 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (TRANS (@lem4043148 _102126 _102133 s f x) (@lem4043155 _102126 _102133 s f x)). Qed.
Lemma lem4043157 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4043158 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term422 _102126 _102133 s f) = (term423 _102126 _102133 s f).
Proof. exact (@lem4043157 _102126 (term315 _102126 _102133 s f)). Qed.
Lemma lem4043159 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term424 _102126 _102133 s f x) = (term314 _102126 _102133 s f x).
Proof. exact (eq_refl (term424 _102126 _102133 s f x)). Qed.
Lemma lem4043160 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043161 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term425 _102126 _102133 s f x) = (term415 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4043160) (@lem4043159 _102126 _102133 s f x)). Qed.
Lemma lem4043162 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term425 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (TRANS (@lem4043161 _102126 _102133 s f x) (@lem4043156 _102126 _102133 s f x)). Qed.
Lemma lem4043163 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term426 _102126 _102133 s f) = (term427 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4043162 _102126 _102133 s f x)). Qed.
Lemma lem4043164 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043165 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term423 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4043164 _102126) (@lem4043163 _102126 _102133 s f)). Qed.
Lemma lem4043166 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term422 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (TRANS (@lem4043158 _102126 _102133 s f) (@lem4043165 _102126 _102133 s f)). Qed.
Lemma lem4043167 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043168 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043169 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term430 _102126 _102133 s f) = (term431 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4043168) (@lem4043166 _102126 _102133 s f)). Qed.
Lemma lem4043170 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1205 _102126 _102133 f s) = (term1206 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043169 _102126 _102133 s f) (@lem4043167 _102126 s)). Qed.
Lemma lem4043171 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1207 _102126 _102133 f s) = (term1205 _102126 _102133 f s).
Proof. exact (@lem17045 (term316 _102126 _102133 s f) (@FINITE _102126 s)). Qed.
Lemma lem4043172 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1207 _102126 _102133 f s) = (term1206 _102126 _102133 f s).
Proof. exact (TRANS (@lem4043171 _102126 _102133 f s) (@lem4043170 _102126 _102133 f s)). Qed.
Lemma lem4043173 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043174 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043175 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1208 _102126 _102133 f s) = (term1209 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043174) (@lem4043172 _102126 _102133 f s)). Qed.
Lemma lem4043176 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1210 _102126 _102133 f s) = (term1211 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043175 _102126 _102133 f s) (@lem4043173 _102126 _102133 f s)). Qed.
Lemma lem4043177 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term320 _102126 _102133 f s) = (term1210 _102126 _102133 f s).
Proof. exact (@lem17265 (term318 _102126 _102133 f s) ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043178 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term320 _102126 _102133 f s) = (term1211 _102126 _102133 f s).
Proof. exact (TRANS (@lem4043177 _102126 _102133 f s) (@lem4043176 _102126 _102133 f s)). Qed.
Lemma lem4043179 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term321 _102126 _102133 f) = (term1212 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043178 _102126 _102133 f s)). Qed.
Lemma lem4043180 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043181 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term322 _102126 _102133 f) = (term1213 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043180 _102126) (@lem4043179 _102126 _102133 f)). Qed.
Lemma lem4043182 {_102126 _102133 : Type'} : (term323 _102126 _102133) = (term1214 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043181 _102126 _102133 f)). Qed.
Lemma lem4043183 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043184 {_102126 _102133 : Type'} : (term228 _102126 _102133) = (term1215 _102126 _102133).
Proof. exact (MK_COMB (@lem4043183 _102126 _102133) (@lem4043182 _102126 _102133)). Qed.
Lemma lem4043291 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043292 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043291 _102126 P Q). Qed.
Lemma lem4043293 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1216 _102126 _102133 f s) = (term1217 _102126 _102133 f s).
Proof. exact (@lem4043292 _102126 (term427 _102126 _102133 s f) (term1204 _102126 s)). Qed.
Lemma lem4043294 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term442 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (eq_refl (term442 _102126 _102133 s f x)). Qed.
Lemma lem4043295 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term443 _102126 _102133 s f) = (term427 _102126 _102133 s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4043294 _102126 _102133 s f x)). Qed.
Lemma lem4043296 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043297 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term444 _102126 _102133 s f) = (term428 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4043296 _102126) (@lem4043295 _102126 _102133 s f)). Qed.
Lemma lem4043298 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043299 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) : (term445 _102126 _102133 s f) = (term431 _102126 _102133 s f).
Proof. exact (MK_COMB (@lem4043298) (@lem4043297 _102126 _102133 s f)). Qed.
Lemma lem4043300 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043301 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1216 _102126 _102133 f s) = (term1206 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043299 _102126 _102133 s f) (@lem4043300 _102126 s)). Qed.
Lemma lem4043302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043303 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1218 _102126 _102133 f s) = (term1219 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043302) (@lem4043301 _102126 _102133 f s)). Qed.
Lemma lem4043304 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term442 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (eq_refl (term442 _102126 _102133 s f x)). Qed.
Lemma lem4043305 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043306 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term448 _102126 _102133 s f x) = (term449 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4043305) (@lem4043304 _102126 _102133 s f x)). Qed.
Lemma lem4043307 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043308 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1220 _102126 _102133 f x s) = (term1221 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043306 _102126 _102133 s f x) (@lem4043307 _102126 s)). Qed.
Lemma lem4043309 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1222 _102126 _102133 f s) = (term1223 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043308 _102126 _102133 f x s)). Qed.
Lemma lem4043310 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043311 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1217 _102126 _102133 f s) = (term1224 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043310 _102126) (@lem4043309 _102126 _102133 f s)). Qed.
Lemma lem4043312 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1216 _102126 _102133 f s) = (term1217 _102126 _102133 f s)) = ((term1206 _102126 _102133 f s) = (term1224 _102126 _102133 f s)).
Proof. exact (MK_COMB (@lem4043303 _102126 _102133 f s) (@lem4043311 _102126 _102133 f s)). Qed.
Lemma lem4043313 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1206 _102126 _102133 f s) = (term1224 _102126 _102133 f s).
Proof. exact (EQ_MP (@lem4043312 _102126 _102133 f s) (@lem4043293 _102126 _102133 f s)). Qed.
Lemma lem4043315 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043316 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043315 _102126 P Q). Qed.
Lemma lem4043317 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1225 _102126 _102133 f x s) = (term1226 _102126 _102133 f x s).
Proof. exact (@lem4043316 _102126 (term420 _102126 _102133 s f x) (term1204 _102126 s)). Qed.
Lemma lem4043318 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term457 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (eq_refl (term457 _102126 _102133 s f x y)). Qed.
Lemma lem4043319 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term458 _102126 _102133 s f x) = (term420 _102126 _102133 s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4043318 _102126 _102133 s f x y)). Qed.
Lemma lem4043320 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043321 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term459 _102126 _102133 s f x) = (term421 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4043320 _102126) (@lem4043319 _102126 _102133 s f x)). Qed.
Lemma lem4043322 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043323 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term460 _102126 _102133 s f x) = (term449 _102126 _102133 s f x).
Proof. exact (MK_COMB (@lem4043322) (@lem4043321 _102126 _102133 s f x)). Qed.
Lemma lem4043324 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043325 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1225 _102126 _102133 f x s) = (term1221 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043323 _102126 _102133 s f x) (@lem4043324 _102126 s)). Qed.
Lemma lem4043326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043327 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1227 _102126 _102133 f x s) = (term1228 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043326) (@lem4043325 _102126 _102133 f x s)). Qed.
Lemma lem4043328 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term457 _102126 _102133 s f x y) = (term411 _102126 _102133 s f x y).
Proof. exact (eq_refl (term457 _102126 _102133 s f x y)). Qed.
Lemma lem4043329 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043330 {_102126 _102133 : Type'} (s : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term463 _102126 _102133 s f x y) = (term464 _102126 _102133 s f x y).
Proof. exact (MK_COMB (@lem4043329) (@lem4043328 _102126 _102133 s f x y)). Qed.
Lemma lem4043331 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043332 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1229 _102126 _102133 f x y s) = (term1230 _102126 _102133 f x y s).
Proof. exact (MK_COMB (@lem4043330 _102126 _102133 s f x y) (@lem4043331 _102126 s)). Qed.
Lemma lem4043333 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1231 _102126 _102133 f x s) = (term1232 _102126 _102133 f x s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043332 _102126 _102133 f x y s)). Qed.
Lemma lem4043334 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043335 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1226 _102126 _102133 f x s) = (term1233 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043334 _102126) (@lem4043333 _102126 _102133 f x s)). Qed.
Lemma lem4043336 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : ((term1225 _102126 _102133 f x s) = (term1226 _102126 _102133 f x s)) = ((term1221 _102126 _102133 f x s) = (term1233 _102126 _102133 f x s)).
Proof. exact (MK_COMB (@lem4043327 _102126 _102133 f x s) (@lem4043335 _102126 _102133 f x s)). Qed.
Lemma lem4043337 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1221 _102126 _102133 f x s) = (term1233 _102126 _102133 f x s).
Proof. exact (EQ_MP (@lem4043336 _102126 _102133 f x s) (@lem4043317 _102126 _102133 f x s)). Qed.
Lemma lem4043338 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1223 _102126 _102133 f s) = (term1234 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043337 _102126 _102133 f x s)). Qed.
Lemma lem4043339 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043340 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1224 _102126 _102133 f s) = (term1235 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043339 _102126) (@lem4043338 _102126 _102133 f s)). Qed.
Lemma lem4043341 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1206 _102126 _102133 f s) = (term1235 _102126 _102133 f s).
Proof. exact (TRANS (@lem4043313 _102126 _102133 f s) (@lem4043340 _102126 _102133 f s)). Qed.
Lemma lem4043342 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043343 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1209 _102126 _102133 f s) = (term1236 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043342) (@lem4043341 _102126 _102133 f s)). Qed.
Lemma lem4043344 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043345 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1211 _102126 _102133 f s) = (term1237 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043343 _102126 _102133 f s) (@lem4043344 _102126 _102133 f s)). Qed.
Lemma lem4043347 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043348 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043347 _102126 P Q). Qed.
Lemma lem4043349 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1238 _102126 _102133 f s) = (term1239 _102126 _102133 f s).
Proof. exact (@lem4043348 _102126 (term1234 _102126 _102133 f s) ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043350 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1240 _102126 _102133 f s x) = (term1233 _102126 _102133 f x s).
Proof. exact (eq_refl (term1240 _102126 _102133 f s x)). Qed.
Lemma lem4043351 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1241 _102126 _102133 f s) = (term1234 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043350 _102126 _102133 f x s)). Qed.
Lemma lem4043352 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043353 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1242 _102126 _102133 f s) = (term1235 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043352 _102126) (@lem4043351 _102126 _102133 f s)). Qed.
Lemma lem4043354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043355 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1243 _102126 _102133 f s) = (term1236 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043354) (@lem4043353 _102126 _102133 f s)). Qed.
Lemma lem4043356 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043357 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1238 _102126 _102133 f s) = (term1237 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043355 _102126 _102133 f s) (@lem4043356 _102126 _102133 f s)). Qed.
Lemma lem4043358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043359 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1244 _102126 _102133 f s) = (term1245 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043358) (@lem4043357 _102126 _102133 f s)). Qed.
Lemma lem4043360 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1240 _102126 _102133 f s x) = (term1233 _102126 _102133 f x s).
Proof. exact (eq_refl (term1240 _102126 _102133 f s x)). Qed.
Lemma lem4043361 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043362 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1246 _102126 _102133 f s x) = (term1247 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043361) (@lem4043360 _102126 _102133 f x s)). Qed.
Lemma lem4043363 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043364 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1248 _102126 _102133 x f s) = (term1249 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4043362 _102126 _102133 f x s) (@lem4043363 _102126 _102133 f s)). Qed.
Lemma lem4043365 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1250 _102126 _102133 f s) = (term1251 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043364 _102126 _102133 x f s)). Qed.
Lemma lem4043366 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043367 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1239 _102126 _102133 f s) = (term1252 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043366 _102126) (@lem4043365 _102126 _102133 f s)). Qed.
Lemma lem4043368 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1238 _102126 _102133 f s) = (term1239 _102126 _102133 f s)) = ((term1237 _102126 _102133 f s) = (term1252 _102126 _102133 f s)).
Proof. exact (MK_COMB (@lem4043359 _102126 _102133 f s) (@lem4043367 _102126 _102133 f s)). Qed.
Lemma lem4043369 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1237 _102126 _102133 f s) = (term1252 _102126 _102133 f s).
Proof. exact (EQ_MP (@lem4043368 _102126 _102133 f s) (@lem4043349 _102126 _102133 f s)). Qed.
Lemma lem4043371 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043372 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043371 _102126 P Q). Qed.
Lemma lem4043373 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1253 _102126 _102133 x f s) = (term1254 _102126 _102133 x f s).
Proof. exact (@lem4043372 _102126 (term1232 _102126 _102133 f x s) ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043374 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1255 _102126 _102133 f x s y) = (term1230 _102126 _102133 f x y s).
Proof. exact (eq_refl (term1255 _102126 _102133 f x s y)). Qed.
Lemma lem4043375 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1256 _102126 _102133 f x s) = (term1232 _102126 _102133 f x s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043374 _102126 _102133 f x y s)). Qed.
Lemma lem4043376 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043377 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1257 _102126 _102133 f x s) = (term1233 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043376 _102126) (@lem4043375 _102126 _102133 f x s)). Qed.
Lemma lem4043378 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043379 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (s : _102126 -> Prop) : (term1258 _102126 _102133 f x s) = (term1247 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043378) (@lem4043377 _102126 _102133 f x s)). Qed.
Lemma lem4043380 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043381 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1253 _102126 _102133 x f s) = (term1249 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4043379 _102126 _102133 f x s) (@lem4043380 _102126 _102133 f s)). Qed.
Lemma lem4043382 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043383 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1259 _102126 _102133 x f s) = (term1260 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4043382) (@lem4043381 _102126 _102133 x f s)). Qed.
Lemma lem4043384 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1255 _102126 _102133 f x s y) = (term1230 _102126 _102133 f x y s).
Proof. exact (eq_refl (term1255 _102126 _102133 f x s y)). Qed.
Lemma lem4043385 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043386 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1261 _102126 _102133 f x s y) = (term1262 _102126 _102133 f x y s).
Proof. exact (MK_COMB (@lem4043385) (@lem4043384 _102126 _102133 f x y s)). Qed.
Lemma lem4043387 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term311 _102126 _102133 f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 _102133 f s) = (@CARD _102126 s))). Qed.
Lemma lem4043388 {_102126 _102133 : Type'} (x : _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1263 _102126 _102133 x y f s) = (term1264 _102126 _102133 x y f s).
Proof. exact (MK_COMB (@lem4043386 _102126 _102133 f x y s) (@lem4043387 _102126 _102133 f s)). Qed.
Lemma lem4043389 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1265 _102126 _102133 x f s) = (term1266 _102126 _102133 x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043388 _102126 _102133 x y f s)). Qed.
Lemma lem4043390 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043391 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1254 _102126 _102133 x f s) = (term1267 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4043390 _102126) (@lem4043389 _102126 _102133 x f s)). Qed.
Lemma lem4043392 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1253 _102126 _102133 x f s) = (term1254 _102126 _102133 x f s)) = ((term1249 _102126 _102133 x f s) = (term1267 _102126 _102133 x f s)).
Proof. exact (MK_COMB (@lem4043383 _102126 _102133 x f s) (@lem4043391 _102126 _102133 x f s)). Qed.
Lemma lem4043393 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1249 _102126 _102133 x f s) = (term1267 _102126 _102133 x f s).
Proof. exact (EQ_MP (@lem4043392 _102126 _102133 x f s) (@lem4043373 _102126 _102133 x f s)). Qed.
Lemma lem4043394 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1251 _102126 _102133 f s) = (term1268 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043393 _102126 _102133 x f s)). Qed.
Lemma lem4043395 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043396 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1252 _102126 _102133 f s) = (term1269 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043395 _102126) (@lem4043394 _102126 _102133 f s)). Qed.
Lemma lem4043397 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1237 _102126 _102133 f s) = (term1269 _102126 _102133 f s).
Proof. exact (TRANS (@lem4043369 _102126 _102133 f s) (@lem4043396 _102126 _102133 f s)). Qed.
Lemma lem4043398 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1211 _102126 _102133 f s) = (term1269 _102126 _102133 f s).
Proof. exact (TRANS (@lem4043345 _102126 _102133 f s) (@lem4043397 _102126 _102133 f s)). Qed.
Lemma lem4043399 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1212 _102126 _102133 f) = (term1270 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043398 _102126 _102133 f s)). Qed.
Lemma lem4043400 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043401 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1213 _102126 _102133 f) = (term1271 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043400 _102126) (@lem4043399 _102126 _102133 f)). Qed.
Lemma lem4043403 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043404 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4043403 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4043405 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1272 _102126 _102133 f) = (term1273 _102126 _102133 f).
Proof. exact (@lem4043404 _102126 (term1274 _102126 _102133 f)). Qed.
Lemma lem4043406 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1275 _102126 _102133 f s) = (term1268 _102126 _102133 f s).
Proof. exact (eq_refl (term1275 _102126 _102133 f s)). Qed.
Lemma lem4043407 {_102126 : Type'} (x : _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043408 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) (x : _102126) : (term1276 _102126 _102133 f s x) = (term1277 _102126 _102133 f s x).
Proof. exact (MK_COMB (@lem4043406 _102126 _102133 f s) (@lem4043407 _102126 x)). Qed.
Lemma lem4043409 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1277 _102126 _102133 f s x) = (term1267 _102126 _102133 x f s).
Proof. exact (eq_refl (term1277 _102126 _102133 f s x)). Qed.
Lemma lem4043410 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1276 _102126 _102133 f s x) = (term1267 _102126 _102133 x f s).
Proof. exact (TRANS (@lem4043408 _102126 _102133 f s x) (@lem4043409 _102126 _102133 x f s)). Qed.
Lemma lem4043411 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1278 _102126 _102133 f s) = (term1268 _102126 _102133 f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043410 _102126 _102133 x f s)). Qed.
Lemma lem4043412 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043413 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1279 _102126 _102133 f s) = (term1269 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4043412 _102126) (@lem4043411 _102126 _102133 f s)). Qed.
Lemma lem4043414 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1280 _102126 _102133 f) = (term1270 _102126 _102133 f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043413 _102126 _102133 f s)). Qed.
Lemma lem4043415 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043416 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1272 _102126 _102133 f) = (term1271 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043415 _102126) (@lem4043414 _102126 _102133 f)). Qed.
Lemma lem4043417 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043418 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1281 _102126 _102133 f) = (term1282 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043417) (@lem4043416 _102126 _102133 f)). Qed.
Lemma lem4043419 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1275 _102126 _102133 f s) = (term1268 _102126 _102133 f s).
Proof. exact (eq_refl (term1275 _102126 _102133 f s)). Qed.
Lemma lem4043420 {_102126 : Type'} (x : type684 _102126) (s : _102126 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4043421 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : type684 _102126) (s : _102126 -> Prop) : (term1283 _102126 _102133 f x s) = (term1284 _102126 _102133 f x s).
Proof. exact (MK_COMB (@lem4043419 _102126 _102133 f s) (@lem4043420 _102126 x s)). Qed.
Lemma lem4043422 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1284 _102126 _102133 f x s) = (term1285 _102126 _102133 x f s).
Proof. exact (eq_refl (term1284 _102126 _102133 f x s)). Qed.
Lemma lem4043423 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1283 _102126 _102133 f x s) = (term1285 _102126 _102133 x f s).
Proof. exact (TRANS (@lem4043421 _102126 _102133 f x s) (@lem4043422 _102126 _102133 x f s)). Qed.
Lemma lem4043424 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1286 _102126 _102133 f x) = (term1287 _102126 _102133 x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043423 _102126 _102133 x f s)). Qed.
Lemma lem4043425 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043426 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1288 _102126 _102133 f x) = (term1289 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043425 _102126) (@lem4043424 _102126 _102133 x f)). Qed.
Lemma lem4043427 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1290 _102126 _102133 f) = (term1291 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043426 _102126 _102133 x f)). Qed.
Lemma lem4043428 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043429 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1273 _102126 _102133 f) = (term1292 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043428 _102126) (@lem4043427 _102126 _102133 f)). Qed.
Lemma lem4043430 {_102126 _102133 : Type'} (f : _102126 -> _102133) : ((term1272 _102126 _102133 f) = (term1273 _102126 _102133 f)) = ((term1271 _102126 _102133 f) = (term1292 _102126 _102133 f)).
Proof. exact (MK_COMB (@lem4043418 _102126 _102133 f) (@lem4043429 _102126 _102133 f)). Qed.
Lemma lem4043431 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1271 _102126 _102133 f) = (term1292 _102126 _102133 f).
Proof. exact (EQ_MP (@lem4043430 _102126 _102133 f) (@lem4043405 _102126 _102133 f)). Qed.
Lemma lem4043433 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043434 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4043433 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4043435 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1293 _102126 _102133 x f) = (term1294 _102126 _102133 x f).
Proof. exact (@lem4043434 _102126 (term1295 _102126 _102133 x f)). Qed.
Lemma lem4043436 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1296 _102126 _102133 x f s) = (term1297 _102126 _102133 x f s).
Proof. exact (eq_refl (term1296 _102126 _102133 x f s)). Qed.
Lemma lem4043437 {_102126 : Type'} (y : _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043438 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) (y : _102126) : (term1298 _102126 _102133 x f s y) = (term1299 _102126 _102133 x f s y).
Proof. exact (MK_COMB (@lem4043436 _102126 _102133 x f s) (@lem4043437 _102126 y)). Qed.
Lemma lem4043439 {_102126 _102133 : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1299 _102126 _102133 x f s y) = (term1300 _102126 _102133 x y f s).
Proof. exact (eq_refl (term1299 _102126 _102133 x f s y)). Qed.
Lemma lem4043440 {_102126 _102133 : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1298 _102126 _102133 x f s y) = (term1300 _102126 _102133 x y f s).
Proof. exact (TRANS (@lem4043438 _102126 _102133 x f s y) (@lem4043439 _102126 _102133 x y f s)). Qed.
Lemma lem4043441 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1301 _102126 _102133 x f s) = (term1297 _102126 _102133 x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043440 _102126 _102133 x y f s)). Qed.
Lemma lem4043442 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043443 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1302 _102126 _102133 x f s) = (term1285 _102126 _102133 x f s).
Proof. exact (MK_COMB (@lem4043442 _102126) (@lem4043441 _102126 _102133 x f s)). Qed.
Lemma lem4043444 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1303 _102126 _102133 x f) = (term1287 _102126 _102133 x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043443 _102126 _102133 x f s)). Qed.
Lemma lem4043445 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043446 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1293 _102126 _102133 x f) = (term1289 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043445 _102126) (@lem4043444 _102126 _102133 x f)). Qed.
Lemma lem4043447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043448 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1304 _102126 _102133 x f) = (term1305 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043447) (@lem4043446 _102126 _102133 x f)). Qed.
Lemma lem4043449 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1296 _102126 _102133 x f s) = (term1297 _102126 _102133 x f s).
Proof. exact (eq_refl (term1296 _102126 _102133 x f s)). Qed.
Lemma lem4043450 {_102126 : Type'} (y : type684 _102126) (s : _102126 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4043451 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) (y : type684 _102126) (s : _102126 -> Prop) : (term1306 _102126 _102133 x f y s) = (term1307 _102126 _102133 x f y s).
Proof. exact (MK_COMB (@lem4043449 _102126 _102133 x f s) (@lem4043450 _102126 y s)). Qed.
Lemma lem4043452 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1307 _102126 _102133 x f y s) = (term1308 _102126 _102133 x y f s).
Proof. exact (eq_refl (term1307 _102126 _102133 x f y s)). Qed.
Lemma lem4043453 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1306 _102126 _102133 x f y s) = (term1308 _102126 _102133 x y f s).
Proof. exact (TRANS (@lem4043451 _102126 _102133 x f y s) (@lem4043452 _102126 _102133 x y f s)). Qed.
Lemma lem4043454 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) : (term1309 _102126 _102133 x f y) = (term1310 _102126 _102133 x y f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043453 _102126 _102133 x y f s)). Qed.
Lemma lem4043455 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043456 {_102126 _102133 : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> _102133) : (term1311 _102126 _102133 x f y) = (term1312 _102126 _102133 x y f).
Proof. exact (MK_COMB (@lem4043455 _102126) (@lem4043454 _102126 _102133 x y f)). Qed.
Lemma lem4043457 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1313 _102126 _102133 x f) = (term1314 _102126 _102133 x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4043456 _102126 _102133 x y f)). Qed.
Lemma lem4043458 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043459 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1294 _102126 _102133 x f) = (term1315 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043458 _102126) (@lem4043457 _102126 _102133 x f)). Qed.
Lemma lem4043460 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : ((term1293 _102126 _102133 x f) = (term1294 _102126 _102133 x f)) = ((term1289 _102126 _102133 x f) = (term1315 _102126 _102133 x f)).
Proof. exact (MK_COMB (@lem4043448 _102126 _102133 x f) (@lem4043459 _102126 _102133 x f)). Qed.
Lemma lem4043461 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1289 _102126 _102133 x f) = (term1315 _102126 _102133 x f).
Proof. exact (EQ_MP (@lem4043460 _102126 _102133 x f) (@lem4043435 _102126 _102133 x f)). Qed.
Lemma lem4043462 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1291 _102126 _102133 f) = (term1316 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043461 _102126 _102133 x f)). Qed.
Lemma lem4043463 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043464 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1292 _102126 _102133 f) = (term1317 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043463 _102126) (@lem4043462 _102126 _102133 f)). Qed.
Lemma lem4043465 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1271 _102126 _102133 f) = (term1317 _102126 _102133 f).
Proof. exact (TRANS (@lem4043431 _102126 _102133 f) (@lem4043464 _102126 _102133 f)). Qed.
Lemma lem4043466 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1213 _102126 _102133 f) = (term1317 _102126 _102133 f).
Proof. exact (TRANS (@lem4043401 _102126 _102133 f) (@lem4043465 _102126 _102133 f)). Qed.
Lemma lem4043467 {_102126 _102133 : Type'} : (term1214 _102126 _102133) = (term1318 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043466 _102126 _102133 f)). Qed.
Lemma lem4043468 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043469 {_102126 _102133 : Type'} : (term1215 _102126 _102133) = (term1319 _102126 _102133).
Proof. exact (MK_COMB (@lem4043468 _102126 _102133) (@lem4043467 _102126 _102133)). Qed.
Lemma lem4043471 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043472 {_102126 _102133 : Type'} (P : type503 _102126 _102133) : (term526 _102126 _102133 P) = (term527 _102126 _102133 P).
Proof. exact (@lem4043471 (_102126 -> _102133) (type684 _102126) P). Qed.
Lemma lem4043473 {_102126 _102133 : Type'} : (term1320 _102126 _102133) = (term1321 _102126 _102133).
Proof. exact (@lem4043472 _102126 _102133 (term1322 _102126 _102133)). Qed.
Lemma lem4043474 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1323 _102126 _102133 f) = (term1316 _102126 _102133 f).
Proof. exact (eq_refl (term1323 _102126 _102133 f)). Qed.
Lemma lem4043475 {_102126 : Type'} (x : type684 _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043476 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : type684 _102126) : (term1324 _102126 _102133 f x) = (term1325 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4043474 _102126 _102133 f) (@lem4043475 _102126 x)). Qed.
Lemma lem4043477 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1325 _102126 _102133 f x) = (term1315 _102126 _102133 x f).
Proof. exact (eq_refl (term1325 _102126 _102133 f x)). Qed.
Lemma lem4043478 {_102126 _102133 : Type'} (x : type684 _102126) (f : _102126 -> _102133) : (term1324 _102126 _102133 f x) = (term1315 _102126 _102133 x f).
Proof. exact (TRANS (@lem4043476 _102126 _102133 f x) (@lem4043477 _102126 _102133 x f)). Qed.
Lemma lem4043479 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1326 _102126 _102133 f) = (term1316 _102126 _102133 f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043478 _102126 _102133 x f)). Qed.
Lemma lem4043480 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043481 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1327 _102126 _102133 f) = (term1317 _102126 _102133 f).
Proof. exact (MK_COMB (@lem4043480 _102126) (@lem4043479 _102126 _102133 f)). Qed.
Lemma lem4043482 {_102126 _102133 : Type'} : (term1328 _102126 _102133) = (term1318 _102126 _102133).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043481 _102126 _102133 f)). Qed.
Lemma lem4043483 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043484 {_102126 _102133 : Type'} : (term1320 _102126 _102133) = (term1319 _102126 _102133).
Proof. exact (MK_COMB (@lem4043483 _102126 _102133) (@lem4043482 _102126 _102133)). Qed.
Lemma lem4043485 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043486 {_102126 _102133 : Type'} : (term1329 _102126 _102133) = (term1330 _102126 _102133).
Proof. exact (MK_COMB (@lem4043485) (@lem4043484 _102126 _102133)). Qed.
Lemma lem4043487 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (term1323 _102126 _102133 f) = (term1316 _102126 _102133 f).
Proof. exact (eq_refl (term1323 _102126 _102133 f)). Qed.
Lemma lem4043488 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4043489 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1331 _102126 _102133 x f) = (term1332 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043487 _102126 _102133 f) (@lem4043488 _102126 _102133 x f)). Qed.
Lemma lem4043490 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1332 _102126 _102133 x f) = (term1333 _102126 _102133 x f).
Proof. exact (eq_refl (term1332 _102126 _102133 x f)). Qed.
Lemma lem4043491 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1331 _102126 _102133 x f) = (term1333 _102126 _102133 x f).
Proof. exact (TRANS (@lem4043489 _102126 _102133 x f) (@lem4043490 _102126 _102133 x f)). Qed.
Lemma lem4043492 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1334 _102126 _102133 x) = (term1335 _102126 _102133 x).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043491 _102126 _102133 x f)). Qed.
Lemma lem4043493 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043494 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1336 _102126 _102133 x) = (term1337 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4043493 _102126 _102133) (@lem4043492 _102126 _102133 x)). Qed.
Lemma lem4043495 {_102126 _102133 : Type'} : (term1338 _102126 _102133) = (term1339 _102126 _102133).
Proof. exact (fun_ext (fun x : type529 _102126 _102133 => @lem4043494 _102126 _102133 x)). Qed.
Lemma lem4043496 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043497 {_102126 _102133 : Type'} : (term1321 _102126 _102133) = (term1340 _102126 _102133).
Proof. exact (MK_COMB (@lem4043496 _102126 _102133) (@lem4043495 _102126 _102133)). Qed.
Lemma lem4043498 {_102126 _102133 : Type'} : ((term1320 _102126 _102133) = (term1321 _102126 _102133)) = ((term1319 _102126 _102133) = (term1340 _102126 _102133)).
Proof. exact (MK_COMB (@lem4043486 _102126 _102133) (@lem4043497 _102126 _102133)). Qed.
Lemma lem4043499 {_102126 _102133 : Type'} : (term1319 _102126 _102133) = (term1340 _102126 _102133).
Proof. exact (EQ_MP (@lem4043498 _102126 _102133) (@lem4043473 _102126 _102133)). Qed.
Lemma lem4043501 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043502 {_102126 _102133 : Type'} (P : type503 _102126 _102133) : (term526 _102126 _102133 P) = (term527 _102126 _102133 P).
Proof. exact (@lem4043501 (_102126 -> _102133) (type684 _102126) P). Qed.
Lemma lem4043503 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1341 _102126 _102133 x) = (term1342 _102126 _102133 x).
Proof. exact (@lem4043502 _102126 _102133 (term1343 _102126 _102133 x)). Qed.
Lemma lem4043504 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1344 _102126 _102133 x f) = (term1345 _102126 _102133 x f).
Proof. exact (eq_refl (term1344 _102126 _102133 x f)). Qed.
Lemma lem4043505 {_102126 : Type'} (y : type684 _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043506 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) (y : type684 _102126) : (term1346 _102126 _102133 x f y) = (term1347 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4043504 _102126 _102133 x f) (@lem4043505 _102126 y)). Qed.
Lemma lem4043507 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type684 _102126) (f : _102126 -> _102133) : (term1347 _102126 _102133 x f y) = (term1348 _102126 _102133 x y f).
Proof. exact (eq_refl (term1347 _102126 _102133 x f y)). Qed.
Lemma lem4043508 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type684 _102126) (f : _102126 -> _102133) : (term1346 _102126 _102133 x f y) = (term1348 _102126 _102133 x y f).
Proof. exact (TRANS (@lem4043506 _102126 _102133 x f y) (@lem4043507 _102126 _102133 x y f)). Qed.
Lemma lem4043509 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1349 _102126 _102133 x f) = (term1345 _102126 _102133 x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4043508 _102126 _102133 x y f)). Qed.
Lemma lem4043510 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043511 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1350 _102126 _102133 x f) = (term1333 _102126 _102133 x f).
Proof. exact (MK_COMB (@lem4043510 _102126) (@lem4043509 _102126 _102133 x f)). Qed.
Lemma lem4043512 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1351 _102126 _102133 x) = (term1335 _102126 _102133 x).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043511 _102126 _102133 x f)). Qed.
Lemma lem4043513 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043514 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1341 _102126 _102133 x) = (term1337 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4043513 _102126 _102133) (@lem4043512 _102126 _102133 x)). Qed.
Lemma lem4043515 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043516 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1352 _102126 _102133 x) = (term1353 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4043515) (@lem4043514 _102126 _102133 x)). Qed.
Lemma lem4043517 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (f : _102126 -> _102133) : (term1344 _102126 _102133 x f) = (term1345 _102126 _102133 x f).
Proof. exact (eq_refl (term1344 _102126 _102133 x f)). Qed.
Lemma lem4043518 {_102126 _102133 : Type'} (y : type529 _102126 _102133) (f : _102126 -> _102133) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4043519 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term1354 _102126 _102133 x y f) = (term1355 _102126 _102133 x y f).
Proof. exact (MK_COMB (@lem4043517 _102126 _102133 x f) (@lem4043518 _102126 _102133 y f)). Qed.
Lemma lem4043520 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term1355 _102126 _102133 x y f) = (term1356 _102126 _102133 x y f).
Proof. exact (eq_refl (term1355 _102126 _102133 x y f)). Qed.
Lemma lem4043521 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) (f : _102126 -> _102133) : (term1354 _102126 _102133 x y f) = (term1356 _102126 _102133 x y f).
Proof. exact (TRANS (@lem4043519 _102126 _102133 x y f) (@lem4043520 _102126 _102133 x y f)). Qed.
Lemma lem4043522 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) : (term1357 _102126 _102133 x y) = (term1358 _102126 _102133 x y).
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4043521 _102126 _102133 x y f)). Qed.
Lemma lem4043523 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4043524 {_102126 _102133 : Type'} (x : type529 _102126 _102133) (y : type529 _102126 _102133) : (term1359 _102126 _102133 x y) = (term1360 _102126 _102133 x y).
Proof. exact (MK_COMB (@lem4043523 _102126 _102133) (@lem4043522 _102126 _102133 x y)). Qed.
Lemma lem4043525 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1361 _102126 _102133 x) = (term1362 _102126 _102133 x).
Proof. exact (fun_ext (fun y : type529 _102126 _102133 => @lem4043524 _102126 _102133 x y)). Qed.
Lemma lem4043526 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043527 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1342 _102126 _102133 x) = (term1363 _102126 _102133 x).
Proof. exact (MK_COMB (@lem4043526 _102126 _102133) (@lem4043525 _102126 _102133 x)). Qed.
Lemma lem4043528 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : ((term1341 _102126 _102133 x) = (term1342 _102126 _102133 x)) = ((term1337 _102126 _102133 x) = (term1363 _102126 _102133 x)).
Proof. exact (MK_COMB (@lem4043516 _102126 _102133 x) (@lem4043527 _102126 _102133 x)). Qed.
Lemma lem4043529 {_102126 _102133 : Type'} (x : type529 _102126 _102133) : (term1337 _102126 _102133 x) = (term1363 _102126 _102133 x).
Proof. exact (EQ_MP (@lem4043528 _102126 _102133 x) (@lem4043503 _102126 _102133 x)). Qed.
Lemma lem4043530 {_102126 _102133 : Type'} : (term1339 _102126 _102133) = (term1364 _102126 _102133).
Proof. exact (fun_ext (fun x : type529 _102126 _102133 => @lem4043529 _102126 _102133 x)). Qed.
Lemma lem4043531 {_102126 _102133 : Type'} : (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043532 {_102126 _102133 : Type'} : (term1340 _102126 _102133) = (term1365 _102126 _102133).
Proof. exact (MK_COMB (@lem4043531 _102126 _102133) (@lem4043530 _102126 _102133)). Qed.
Lemma lem4043533 {_102126 _102133 : Type'} : (term1319 _102126 _102133) = (term1365 _102126 _102133).
Proof. exact (TRANS (@lem4043499 _102126 _102133) (@lem4043532 _102126 _102133)). Qed.
Lemma lem4043535 {_102126 _102133 : Type'} : (term1215 _102126 _102133) = (term1365 _102126 _102133).
Proof. exact (TRANS (@lem4043469 _102126 _102133) (@lem4043533 _102126 _102133)). Qed.
Lemma lem4043536 {_102126 _102133 : Type'} : (term228 _102126 _102133) = (term1365 _102126 _102133).
Proof. exact (TRANS (@lem4043184 _102126 _102133) (@lem4043535 _102126 _102133)). Qed.
Lemma lem4043537 {_102126 _102133 : Type'} (h1 : term228 _102126 _102133) : term1365 _102126 _102133.
Proof. exact (EQ_MP (@lem4043536 _102126 _102133) (@lem4039317 _102126 _102133 h1)). Qed.
Lemma lem4043552 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term410 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (@lem17362 (term412 _102126 B s x f y) (x = y)). Qed.
Lemma lem4043553 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4043554 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term415 _102126 B s f x) = (term416 _102126 B s f x).
Proof. exact (@lem4043553 _102126 (term313 _102126 B s f x)). Qed.
Lemma lem4043555 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term417 _102126 B s f x y) = (term312 _102126 B s f x y).
Proof. exact (eq_refl (term417 _102126 B s f x y)). Qed.
Lemma lem4043556 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043557 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term418 _102126 B s f x y) = (term410 _102126 B s f x y).
Proof. exact (MK_COMB (@lem4043556) (@lem4043555 _102126 B s f x y)). Qed.
Lemma lem4043558 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term418 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (TRANS (@lem4043557 _102126 B s f x y) (@lem4043552 _102126 B s f x y)). Qed.
Lemma lem4043559 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term419 _102126 B s f x) = (term420 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4043558 _102126 B s f x y)). Qed.
Lemma lem4043560 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043561 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term416 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (MK_COMB (@lem4043560 _102126) (@lem4043559 _102126 B s f x)). Qed.
Lemma lem4043562 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term415 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (TRANS (@lem4043554 _102126 B s f x) (@lem4043561 _102126 B s f x)). Qed.
Lemma lem4043563 {_102126 : Type'} (P : _102126 -> Prop) : (term413 _102126 P) = (term414 _102126 P).
Proof. exact (@lem18392 _102126 P). Qed.
Lemma lem4043564 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term422 _102126 B s f) = (term423 _102126 B s f).
Proof. exact (@lem4043563 _102126 (term315 _102126 B s f)). Qed.
Lemma lem4043565 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term424 _102126 B s f x) = (term314 _102126 B s f x).
Proof. exact (eq_refl (term424 _102126 B s f x)). Qed.
Lemma lem4043566 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043567 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term425 _102126 B s f x) = (term415 _102126 B s f x).
Proof. exact (MK_COMB (@lem4043566) (@lem4043565 _102126 B s f x)). Qed.
Lemma lem4043568 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term425 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (TRANS (@lem4043567 _102126 B s f x) (@lem4043562 _102126 B s f x)). Qed.
Lemma lem4043569 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term426 _102126 B s f) = (term427 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4043568 _102126 B s f x)). Qed.
Lemma lem4043570 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043571 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term423 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (MK_COMB (@lem4043570 _102126) (@lem4043569 _102126 B s f)). Qed.
Lemma lem4043572 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term422 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (TRANS (@lem4043564 _102126 B s f) (@lem4043571 _102126 B s f)). Qed.
Lemma lem4043573 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043574 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043575 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term430 _102126 B s f) = (term431 _102126 B s f).
Proof. exact (MK_COMB (@lem4043574) (@lem4043572 _102126 B s f)). Qed.
Lemma lem4043576 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1205 _102126 B f s) = (term1206 _102126 B f s).
Proof. exact (MK_COMB (@lem4043575 _102126 B s f) (@lem4043573 _102126 s)). Qed.
Lemma lem4043577 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1207 _102126 B f s) = (term1205 _102126 B f s).
Proof. exact (@lem17045 (term316 _102126 B s f) (@FINITE _102126 s)). Qed.
Lemma lem4043578 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1207 _102126 B f s) = (term1206 _102126 B f s).
Proof. exact (TRANS (@lem4043577 _102126 B f s) (@lem4043576 _102126 B f s)). Qed.
Lemma lem4043579 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043580 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043581 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1208 _102126 B f s) = (term1209 _102126 B f s).
Proof. exact (MK_COMB (@lem4043580) (@lem4043578 _102126 B f s)). Qed.
Lemma lem4043582 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1210 _102126 B f s) = (term1211 _102126 B f s).
Proof. exact (MK_COMB (@lem4043581 _102126 B f s) (@lem4043579 _102126 B f s)). Qed.
Lemma lem4043583 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term320 _102126 B f s) = (term1210 _102126 B f s).
Proof. exact (@lem17265 (term318 _102126 B f s) ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043584 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term320 _102126 B f s) = (term1211 _102126 B f s).
Proof. exact (TRANS (@lem4043583 _102126 B f s) (@lem4043582 _102126 B f s)). Qed.
Lemma lem4043585 {_102126 B : Type'} (f : _102126 -> B) : (term321 _102126 B f) = (term1212 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043584 _102126 B f s)). Qed.
Lemma lem4043586 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043587 {_102126 B : Type'} (f : _102126 -> B) : (term322 _102126 B f) = (term1213 _102126 B f).
Proof. exact (MK_COMB (@lem4043586 _102126) (@lem4043585 _102126 B f)). Qed.
Lemma lem4043588 {_102126 B : Type'} : (term323 _102126 B) = (term1214 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043587 _102126 B f)). Qed.
Lemma lem4043589 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043590 {_102126 B : Type'} : (term228 _102126 B) = (term1215 _102126 B).
Proof. exact (MK_COMB (@lem4043589 _102126 B) (@lem4043588 _102126 B)). Qed.
Lemma lem4043697 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043698 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043697 _102126 P Q). Qed.
Lemma lem4043699 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1216 _102126 B f s) = (term1217 _102126 B f s).
Proof. exact (@lem4043698 _102126 (term427 _102126 B s f) (term1204 _102126 s)). Qed.
Lemma lem4043700 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term442 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (eq_refl (term442 _102126 B s f x)). Qed.
Lemma lem4043701 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term443 _102126 B s f) = (term427 _102126 B s f).
Proof. exact (fun_ext (fun x : _102126 => @lem4043700 _102126 B s f x)). Qed.
Lemma lem4043702 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043703 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term444 _102126 B s f) = (term428 _102126 B s f).
Proof. exact (MK_COMB (@lem4043702 _102126) (@lem4043701 _102126 B s f)). Qed.
Lemma lem4043704 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043705 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) : (term445 _102126 B s f) = (term431 _102126 B s f).
Proof. exact (MK_COMB (@lem4043704) (@lem4043703 _102126 B s f)). Qed.
Lemma lem4043706 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043707 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1216 _102126 B f s) = (term1206 _102126 B f s).
Proof. exact (MK_COMB (@lem4043705 _102126 B s f) (@lem4043706 _102126 s)). Qed.
Lemma lem4043708 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043709 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1218 _102126 B f s) = (term1219 _102126 B f s).
Proof. exact (MK_COMB (@lem4043708) (@lem4043707 _102126 B f s)). Qed.
Lemma lem4043710 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term442 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (eq_refl (term442 _102126 B s f x)). Qed.
Lemma lem4043711 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043712 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term448 _102126 B s f x) = (term449 _102126 B s f x).
Proof. exact (MK_COMB (@lem4043711) (@lem4043710 _102126 B s f x)). Qed.
Lemma lem4043713 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043714 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1220 _102126 B f x s) = (term1221 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043712 _102126 B s f x) (@lem4043713 _102126 s)). Qed.
Lemma lem4043715 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1222 _102126 B f s) = (term1223 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043714 _102126 B f x s)). Qed.
Lemma lem4043716 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043717 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1217 _102126 B f s) = (term1224 _102126 B f s).
Proof. exact (MK_COMB (@lem4043716 _102126) (@lem4043715 _102126 B f s)). Qed.
Lemma lem4043718 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term1216 _102126 B f s) = (term1217 _102126 B f s)) = ((term1206 _102126 B f s) = (term1224 _102126 B f s)).
Proof. exact (MK_COMB (@lem4043709 _102126 B f s) (@lem4043717 _102126 B f s)). Qed.
Lemma lem4043719 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1206 _102126 B f s) = (term1224 _102126 B f s).
Proof. exact (EQ_MP (@lem4043718 _102126 B f s) (@lem4043699 _102126 B f s)). Qed.
Lemma lem4043721 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043722 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043721 _102126 P Q). Qed.
Lemma lem4043723 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1225 _102126 B f x s) = (term1226 _102126 B f x s).
Proof. exact (@lem4043722 _102126 (term420 _102126 B s f x) (term1204 _102126 s)). Qed.
Lemma lem4043724 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term457 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (eq_refl (term457 _102126 B s f x y)). Qed.
Lemma lem4043725 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term458 _102126 B s f x) = (term420 _102126 B s f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4043724 _102126 B s f x y)). Qed.
Lemma lem4043726 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043727 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term459 _102126 B s f x) = (term421 _102126 B s f x).
Proof. exact (MK_COMB (@lem4043726 _102126) (@lem4043725 _102126 B s f x)). Qed.
Lemma lem4043728 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043729 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) : (term460 _102126 B s f x) = (term449 _102126 B s f x).
Proof. exact (MK_COMB (@lem4043728) (@lem4043727 _102126 B s f x)). Qed.
Lemma lem4043730 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043731 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1225 _102126 B f x s) = (term1221 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043729 _102126 B s f x) (@lem4043730 _102126 s)). Qed.
Lemma lem4043732 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043733 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1227 _102126 B f x s) = (term1228 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043732) (@lem4043731 _102126 B f x s)). Qed.
Lemma lem4043734 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term457 _102126 B s f x y) = (term411 _102126 B s f x y).
Proof. exact (eq_refl (term457 _102126 B s f x y)). Qed.
Lemma lem4043735 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043736 {_102126 B : Type'} (s : _102126 -> Prop) (f : _102126 -> B) (x : _102126) (y : _102126) : (term463 _102126 B s f x y) = (term464 _102126 B s f x y).
Proof. exact (MK_COMB (@lem4043735) (@lem4043734 _102126 B s f x y)). Qed.
Lemma lem4043737 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1204 _102126 s).
Proof. exact (eq_refl (term1204 _102126 s)). Qed.
Lemma lem4043738 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1229 _102126 B f x y s) = (term1230 _102126 B f x y s).
Proof. exact (MK_COMB (@lem4043736 _102126 B s f x y) (@lem4043737 _102126 s)). Qed.
Lemma lem4043739 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1231 _102126 B f x s) = (term1232 _102126 B f x s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043738 _102126 B f x y s)). Qed.
Lemma lem4043740 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043741 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1226 _102126 B f x s) = (term1233 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043740 _102126) (@lem4043739 _102126 B f x s)). Qed.
Lemma lem4043742 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : ((term1225 _102126 B f x s) = (term1226 _102126 B f x s)) = ((term1221 _102126 B f x s) = (term1233 _102126 B f x s)).
Proof. exact (MK_COMB (@lem4043733 _102126 B f x s) (@lem4043741 _102126 B f x s)). Qed.
Lemma lem4043743 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1221 _102126 B f x s) = (term1233 _102126 B f x s).
Proof. exact (EQ_MP (@lem4043742 _102126 B f x s) (@lem4043723 _102126 B f x s)). Qed.
Lemma lem4043744 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1223 _102126 B f s) = (term1234 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043743 _102126 B f x s)). Qed.
Lemma lem4043745 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043746 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1224 _102126 B f s) = (term1235 _102126 B f s).
Proof. exact (MK_COMB (@lem4043745 _102126) (@lem4043744 _102126 B f s)). Qed.
Lemma lem4043747 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1206 _102126 B f s) = (term1235 _102126 B f s).
Proof. exact (TRANS (@lem4043719 _102126 B f s) (@lem4043746 _102126 B f s)). Qed.
Lemma lem4043748 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043749 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1209 _102126 B f s) = (term1236 _102126 B f s).
Proof. exact (MK_COMB (@lem4043748) (@lem4043747 _102126 B f s)). Qed.
Lemma lem4043750 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043751 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1211 _102126 B f s) = (term1237 _102126 B f s).
Proof. exact (MK_COMB (@lem4043749 _102126 B f s) (@lem4043750 _102126 B f s)). Qed.
Lemma lem4043753 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043754 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043753 _102126 P Q). Qed.
Lemma lem4043755 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1238 _102126 B f s) = (term1239 _102126 B f s).
Proof. exact (@lem4043754 _102126 (term1234 _102126 B f s) ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043756 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1240 _102126 B f s x) = (term1233 _102126 B f x s).
Proof. exact (eq_refl (term1240 _102126 B f s x)). Qed.
Lemma lem4043757 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1241 _102126 B f s) = (term1234 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043756 _102126 B f x s)). Qed.
Lemma lem4043758 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043759 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1242 _102126 B f s) = (term1235 _102126 B f s).
Proof. exact (MK_COMB (@lem4043758 _102126) (@lem4043757 _102126 B f s)). Qed.
Lemma lem4043760 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043761 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1243 _102126 B f s) = (term1236 _102126 B f s).
Proof. exact (MK_COMB (@lem4043760) (@lem4043759 _102126 B f s)). Qed.
Lemma lem4043762 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043763 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1238 _102126 B f s) = (term1237 _102126 B f s).
Proof. exact (MK_COMB (@lem4043761 _102126 B f s) (@lem4043762 _102126 B f s)). Qed.
Lemma lem4043764 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043765 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1244 _102126 B f s) = (term1245 _102126 B f s).
Proof. exact (MK_COMB (@lem4043764) (@lem4043763 _102126 B f s)). Qed.
Lemma lem4043766 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1240 _102126 B f s x) = (term1233 _102126 B f x s).
Proof. exact (eq_refl (term1240 _102126 B f s x)). Qed.
Lemma lem4043767 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043768 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1246 _102126 B f s x) = (term1247 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043767) (@lem4043766 _102126 B f x s)). Qed.
Lemma lem4043769 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043770 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1248 _102126 B x f s) = (term1249 _102126 B x f s).
Proof. exact (MK_COMB (@lem4043768 _102126 B f x s) (@lem4043769 _102126 B f s)). Qed.
Lemma lem4043771 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1250 _102126 B f s) = (term1251 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043770 _102126 B x f s)). Qed.
Lemma lem4043772 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043773 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1239 _102126 B f s) = (term1252 _102126 B f s).
Proof. exact (MK_COMB (@lem4043772 _102126) (@lem4043771 _102126 B f s)). Qed.
Lemma lem4043774 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term1238 _102126 B f s) = (term1239 _102126 B f s)) = ((term1237 _102126 B f s) = (term1252 _102126 B f s)).
Proof. exact (MK_COMB (@lem4043765 _102126 B f s) (@lem4043773 _102126 B f s)). Qed.
Lemma lem4043775 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1237 _102126 B f s) = (term1252 _102126 B f s).
Proof. exact (EQ_MP (@lem4043774 _102126 B f s) (@lem4043755 _102126 B f s)). Qed.
Lemma lem4043777 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4043778 {_102126 : Type'} (P : _102126 -> Prop) (Q : Prop) : (term438 _102126 P Q) = (term439 _102126 P Q).
Proof. exact (@lem4043777 _102126 P Q). Qed.
Lemma lem4043779 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1253 _102126 B x f s) = (term1254 _102126 B x f s).
Proof. exact (@lem4043778 _102126 (term1232 _102126 B f x s) ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043780 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1255 _102126 B f x s y) = (term1230 _102126 B f x y s).
Proof. exact (eq_refl (term1255 _102126 B f x s y)). Qed.
Lemma lem4043781 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1256 _102126 B f x s) = (term1232 _102126 B f x s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043780 _102126 B f x y s)). Qed.
Lemma lem4043782 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043783 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1257 _102126 B f x s) = (term1233 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043782 _102126) (@lem4043781 _102126 B f x s)). Qed.
Lemma lem4043784 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043785 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (s : _102126 -> Prop) : (term1258 _102126 B f x s) = (term1247 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043784) (@lem4043783 _102126 B f x s)). Qed.
Lemma lem4043786 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043787 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1253 _102126 B x f s) = (term1249 _102126 B x f s).
Proof. exact (MK_COMB (@lem4043785 _102126 B f x s) (@lem4043786 _102126 B f s)). Qed.
Lemma lem4043788 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043789 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1259 _102126 B x f s) = (term1260 _102126 B x f s).
Proof. exact (MK_COMB (@lem4043788) (@lem4043787 _102126 B x f s)). Qed.
Lemma lem4043790 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1255 _102126 B f x s y) = (term1230 _102126 B f x y s).
Proof. exact (eq_refl (term1255 _102126 B f x s y)). Qed.
Lemma lem4043791 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043792 {_102126 B : Type'} (f : _102126 -> B) (x : _102126) (y : _102126) (s : _102126 -> Prop) : (term1261 _102126 B f x s y) = (term1262 _102126 B f x y s).
Proof. exact (MK_COMB (@lem4043791) (@lem4043790 _102126 B f x y s)). Qed.
Lemma lem4043793 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : ((term311 _102126 B f s) = (@CARD _102126 s)) = ((term311 _102126 B f s) = (@CARD _102126 s)).
Proof. exact (eq_refl ((term311 _102126 B f s) = (@CARD _102126 s))). Qed.
Lemma lem4043794 {_102126 B : Type'} (x : _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1263 _102126 B x y f s) = (term1264 _102126 B x y f s).
Proof. exact (MK_COMB (@lem4043792 _102126 B f x y s) (@lem4043793 _102126 B f s)). Qed.
Lemma lem4043795 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1265 _102126 B x f s) = (term1266 _102126 B x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043794 _102126 B x y f s)). Qed.
Lemma lem4043796 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043797 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1254 _102126 B x f s) = (term1267 _102126 B x f s).
Proof. exact (MK_COMB (@lem4043796 _102126) (@lem4043795 _102126 B x f s)). Qed.
Lemma lem4043798 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : ((term1253 _102126 B x f s) = (term1254 _102126 B x f s)) = ((term1249 _102126 B x f s) = (term1267 _102126 B x f s)).
Proof. exact (MK_COMB (@lem4043789 _102126 B x f s) (@lem4043797 _102126 B x f s)). Qed.
Lemma lem4043799 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1249 _102126 B x f s) = (term1267 _102126 B x f s).
Proof. exact (EQ_MP (@lem4043798 _102126 B x f s) (@lem4043779 _102126 B x f s)). Qed.
Lemma lem4043800 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1251 _102126 B f s) = (term1268 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043799 _102126 B x f s)). Qed.
Lemma lem4043801 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043802 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1252 _102126 B f s) = (term1269 _102126 B f s).
Proof. exact (MK_COMB (@lem4043801 _102126) (@lem4043800 _102126 B f s)). Qed.
Lemma lem4043803 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1237 _102126 B f s) = (term1269 _102126 B f s).
Proof. exact (TRANS (@lem4043775 _102126 B f s) (@lem4043802 _102126 B f s)). Qed.
Lemma lem4043804 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1211 _102126 B f s) = (term1269 _102126 B f s).
Proof. exact (TRANS (@lem4043751 _102126 B f s) (@lem4043803 _102126 B f s)). Qed.
Lemma lem4043805 {_102126 B : Type'} (f : _102126 -> B) : (term1212 _102126 B f) = (term1270 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043804 _102126 B f s)). Qed.
Lemma lem4043806 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043807 {_102126 B : Type'} (f : _102126 -> B) : (term1213 _102126 B f) = (term1271 _102126 B f).
Proof. exact (MK_COMB (@lem4043806 _102126) (@lem4043805 _102126 B f)). Qed.
Lemma lem4043809 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043810 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4043809 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4043811 {_102126 B : Type'} (f : _102126 -> B) : (term1272 _102126 B f) = (term1273 _102126 B f).
Proof. exact (@lem4043810 _102126 (term1274 _102126 B f)). Qed.
Lemma lem4043812 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1275 _102126 B f s) = (term1268 _102126 B f s).
Proof. exact (eq_refl (term1275 _102126 B f s)). Qed.
Lemma lem4043813 {_102126 : Type'} (x : _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043814 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) (x : _102126) : (term1276 _102126 B f s x) = (term1277 _102126 B f s x).
Proof. exact (MK_COMB (@lem4043812 _102126 B f s) (@lem4043813 _102126 x)). Qed.
Lemma lem4043815 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1277 _102126 B f s x) = (term1267 _102126 B x f s).
Proof. exact (eq_refl (term1277 _102126 B f s x)). Qed.
Lemma lem4043816 {_102126 B : Type'} (x : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1276 _102126 B f s x) = (term1267 _102126 B x f s).
Proof. exact (TRANS (@lem4043814 _102126 B f s x) (@lem4043815 _102126 B x f s)). Qed.
Lemma lem4043817 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1278 _102126 B f s) = (term1268 _102126 B f s).
Proof. exact (fun_ext (fun x : _102126 => @lem4043816 _102126 B x f s)). Qed.
Lemma lem4043818 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043819 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1279 _102126 B f s) = (term1269 _102126 B f s).
Proof. exact (MK_COMB (@lem4043818 _102126) (@lem4043817 _102126 B f s)). Qed.
Lemma lem4043820 {_102126 B : Type'} (f : _102126 -> B) : (term1280 _102126 B f) = (term1270 _102126 B f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043819 _102126 B f s)). Qed.
Lemma lem4043821 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043822 {_102126 B : Type'} (f : _102126 -> B) : (term1272 _102126 B f) = (term1271 _102126 B f).
Proof. exact (MK_COMB (@lem4043821 _102126) (@lem4043820 _102126 B f)). Qed.
Lemma lem4043823 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043824 {_102126 B : Type'} (f : _102126 -> B) : (term1281 _102126 B f) = (term1282 _102126 B f).
Proof. exact (MK_COMB (@lem4043823) (@lem4043822 _102126 B f)). Qed.
Lemma lem4043825 {_102126 B : Type'} (f : _102126 -> B) (s : _102126 -> Prop) : (term1275 _102126 B f s) = (term1268 _102126 B f s).
Proof. exact (eq_refl (term1275 _102126 B f s)). Qed.
Lemma lem4043826 {_102126 : Type'} (x : type684 _102126) (s : _102126 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4043827 {_102126 B : Type'} (f : _102126 -> B) (x : type684 _102126) (s : _102126 -> Prop) : (term1283 _102126 B f x s) = (term1284 _102126 B f x s).
Proof. exact (MK_COMB (@lem4043825 _102126 B f s) (@lem4043826 _102126 x s)). Qed.
Lemma lem4043828 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1284 _102126 B f x s) = (term1285 _102126 B x f s).
Proof. exact (eq_refl (term1284 _102126 B f x s)). Qed.
Lemma lem4043829 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1283 _102126 B f x s) = (term1285 _102126 B x f s).
Proof. exact (TRANS (@lem4043827 _102126 B f x s) (@lem4043828 _102126 B x f s)). Qed.
Lemma lem4043830 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1286 _102126 B f x) = (term1287 _102126 B x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043829 _102126 B x f s)). Qed.
Lemma lem4043831 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043832 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1288 _102126 B f x) = (term1289 _102126 B x f).
Proof. exact (MK_COMB (@lem4043831 _102126) (@lem4043830 _102126 B x f)). Qed.
Lemma lem4043833 {_102126 B : Type'} (f : _102126 -> B) : (term1290 _102126 B f) = (term1291 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043832 _102126 B x f)). Qed.
Lemma lem4043834 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043835 {_102126 B : Type'} (f : _102126 -> B) : (term1273 _102126 B f) = (term1292 _102126 B f).
Proof. exact (MK_COMB (@lem4043834 _102126) (@lem4043833 _102126 B f)). Qed.
Lemma lem4043836 {_102126 B : Type'} (f : _102126 -> B) : ((term1272 _102126 B f) = (term1273 _102126 B f)) = ((term1271 _102126 B f) = (term1292 _102126 B f)).
Proof. exact (MK_COMB (@lem4043824 _102126 B f) (@lem4043835 _102126 B f)). Qed.
Lemma lem4043837 {_102126 B : Type'} (f : _102126 -> B) : (term1271 _102126 B f) = (term1292 _102126 B f).
Proof. exact (EQ_MP (@lem4043836 _102126 B f) (@lem4043811 _102126 B f)). Qed.
Lemma lem4043839 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043840 {_102126 : Type'} (P : type672 _102126) : (term476 _102126 P) = (term477 _102126 P).
Proof. exact (@lem4043839 (_102126 -> Prop) _102126 P). Qed.
Lemma lem4043841 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1293 _102126 B x f) = (term1294 _102126 B x f).
Proof. exact (@lem4043840 _102126 (term1295 _102126 B x f)). Qed.
Lemma lem4043842 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1296 _102126 B x f s) = (term1297 _102126 B x f s).
Proof. exact (eq_refl (term1296 _102126 B x f s)). Qed.
Lemma lem4043843 {_102126 : Type'} (y : _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043844 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) (y : _102126) : (term1298 _102126 B x f s y) = (term1299 _102126 B x f s y).
Proof. exact (MK_COMB (@lem4043842 _102126 B x f s) (@lem4043843 _102126 y)). Qed.
Lemma lem4043845 {_102126 B : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1299 _102126 B x f s y) = (term1300 _102126 B x y f s).
Proof. exact (eq_refl (term1299 _102126 B x f s y)). Qed.
Lemma lem4043846 {_102126 B : Type'} (x : type684 _102126) (y : _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1298 _102126 B x f s y) = (term1300 _102126 B x y f s).
Proof. exact (TRANS (@lem4043844 _102126 B x f s y) (@lem4043845 _102126 B x y f s)). Qed.
Lemma lem4043847 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1301 _102126 B x f s) = (term1297 _102126 B x f s).
Proof. exact (fun_ext (fun y : _102126 => @lem4043846 _102126 B x y f s)). Qed.
Lemma lem4043848 {_102126 : Type'} : (@ex _102126) = (@ex _102126).
Proof. exact (eq_refl (@ex _102126)). Qed.
Lemma lem4043849 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1302 _102126 B x f s) = (term1285 _102126 B x f s).
Proof. exact (MK_COMB (@lem4043848 _102126) (@lem4043847 _102126 B x f s)). Qed.
Lemma lem4043850 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1303 _102126 B x f) = (term1287 _102126 B x f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043849 _102126 B x f s)). Qed.
Lemma lem4043851 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043852 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1293 _102126 B x f) = (term1289 _102126 B x f).
Proof. exact (MK_COMB (@lem4043851 _102126) (@lem4043850 _102126 B x f)). Qed.
Lemma lem4043853 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043854 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1304 _102126 B x f) = (term1305 _102126 B x f).
Proof. exact (MK_COMB (@lem4043853) (@lem4043852 _102126 B x f)). Qed.
Lemma lem4043855 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1296 _102126 B x f s) = (term1297 _102126 B x f s).
Proof. exact (eq_refl (term1296 _102126 B x f s)). Qed.
Lemma lem4043856 {_102126 : Type'} (y : type684 _102126) (s : _102126 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4043857 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) (y : type684 _102126) (s : _102126 -> Prop) : (term1306 _102126 B x f y s) = (term1307 _102126 B x f y s).
Proof. exact (MK_COMB (@lem4043855 _102126 B x f s) (@lem4043856 _102126 y s)). Qed.
Lemma lem4043858 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1307 _102126 B x f y s) = (term1308 _102126 B x y f s).
Proof. exact (eq_refl (term1307 _102126 B x f y s)). Qed.
Lemma lem4043859 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) (s : _102126 -> Prop) : (term1306 _102126 B x f y s) = (term1308 _102126 B x y f s).
Proof. exact (TRANS (@lem4043857 _102126 B x f y s) (@lem4043858 _102126 B x y f s)). Qed.
Lemma lem4043860 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) : (term1309 _102126 B x f y) = (term1310 _102126 B x y f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4043859 _102126 B x y f s)). Qed.
Lemma lem4043861 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4043862 {_102126 B : Type'} (x : type684 _102126) (y : type684 _102126) (f : _102126 -> B) : (term1311 _102126 B x f y) = (term1312 _102126 B x y f).
Proof. exact (MK_COMB (@lem4043861 _102126) (@lem4043860 _102126 B x y f)). Qed.
Lemma lem4043863 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1313 _102126 B x f) = (term1314 _102126 B x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4043862 _102126 B x y f)). Qed.
Lemma lem4043864 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043865 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1294 _102126 B x f) = (term1315 _102126 B x f).
Proof. exact (MK_COMB (@lem4043864 _102126) (@lem4043863 _102126 B x f)). Qed.
Lemma lem4043866 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : ((term1293 _102126 B x f) = (term1294 _102126 B x f)) = ((term1289 _102126 B x f) = (term1315 _102126 B x f)).
Proof. exact (MK_COMB (@lem4043854 _102126 B x f) (@lem4043865 _102126 B x f)). Qed.
Lemma lem4043867 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1289 _102126 B x f) = (term1315 _102126 B x f).
Proof. exact (EQ_MP (@lem4043866 _102126 B x f) (@lem4043841 _102126 B x f)). Qed.
Lemma lem4043868 {_102126 B : Type'} (f : _102126 -> B) : (term1291 _102126 B f) = (term1316 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043867 _102126 B x f)). Qed.
Lemma lem4043869 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043870 {_102126 B : Type'} (f : _102126 -> B) : (term1292 _102126 B f) = (term1317 _102126 B f).
Proof. exact (MK_COMB (@lem4043869 _102126) (@lem4043868 _102126 B f)). Qed.
Lemma lem4043871 {_102126 B : Type'} (f : _102126 -> B) : (term1271 _102126 B f) = (term1317 _102126 B f).
Proof. exact (TRANS (@lem4043837 _102126 B f) (@lem4043870 _102126 B f)). Qed.
Lemma lem4043872 {_102126 B : Type'} (f : _102126 -> B) : (term1213 _102126 B f) = (term1317 _102126 B f).
Proof. exact (TRANS (@lem4043807 _102126 B f) (@lem4043871 _102126 B f)). Qed.
Lemma lem4043873 {_102126 B : Type'} : (term1214 _102126 B) = (term1318 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043872 _102126 B f)). Qed.
Lemma lem4043874 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043875 {_102126 B : Type'} : (term1215 _102126 B) = (term1319 _102126 B).
Proof. exact (MK_COMB (@lem4043874 _102126 B) (@lem4043873 _102126 B)). Qed.
Lemma lem4043877 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043878 {_102126 B : Type'} (P : type503 _102126 B) : (term526 _102126 B P) = (term527 _102126 B P).
Proof. exact (@lem4043877 (_102126 -> B) (type684 _102126) P). Qed.
Lemma lem4043879 {_102126 B : Type'} : (term1320 _102126 B) = (term1321 _102126 B).
Proof. exact (@lem4043878 _102126 B (term1322 _102126 B)). Qed.
Lemma lem4043880 {_102126 B : Type'} (f : _102126 -> B) : (term1323 _102126 B f) = (term1316 _102126 B f).
Proof. exact (eq_refl (term1323 _102126 B f)). Qed.
Lemma lem4043881 {_102126 : Type'} (x : type684 _102126) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4043882 {_102126 B : Type'} (f : _102126 -> B) (x : type684 _102126) : (term1324 _102126 B f x) = (term1325 _102126 B f x).
Proof. exact (MK_COMB (@lem4043880 _102126 B f) (@lem4043881 _102126 x)). Qed.
Lemma lem4043883 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1325 _102126 B f x) = (term1315 _102126 B x f).
Proof. exact (eq_refl (term1325 _102126 B f x)). Qed.
Lemma lem4043884 {_102126 B : Type'} (x : type684 _102126) (f : _102126 -> B) : (term1324 _102126 B f x) = (term1315 _102126 B x f).
Proof. exact (TRANS (@lem4043882 _102126 B f x) (@lem4043883 _102126 B x f)). Qed.
Lemma lem4043885 {_102126 B : Type'} (f : _102126 -> B) : (term1326 _102126 B f) = (term1316 _102126 B f).
Proof. exact (fun_ext (fun x : type684 _102126 => @lem4043884 _102126 B x f)). Qed.
Lemma lem4043886 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043887 {_102126 B : Type'} (f : _102126 -> B) : (term1327 _102126 B f) = (term1317 _102126 B f).
Proof. exact (MK_COMB (@lem4043886 _102126) (@lem4043885 _102126 B f)). Qed.
Lemma lem4043888 {_102126 B : Type'} : (term1328 _102126 B) = (term1318 _102126 B).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043887 _102126 B f)). Qed.
Lemma lem4043889 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043890 {_102126 B : Type'} : (term1320 _102126 B) = (term1319 _102126 B).
Proof. exact (MK_COMB (@lem4043889 _102126 B) (@lem4043888 _102126 B)). Qed.
Lemma lem4043891 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043892 {_102126 B : Type'} : (term1329 _102126 B) = (term1330 _102126 B).
Proof. exact (MK_COMB (@lem4043891) (@lem4043890 _102126 B)). Qed.
Lemma lem4043893 {_102126 B : Type'} (f : _102126 -> B) : (term1323 _102126 B f) = (term1316 _102126 B f).
Proof. exact (eq_refl (term1323 _102126 B f)). Qed.
Lemma lem4043894 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4043895 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1331 _102126 B x f) = (term1332 _102126 B x f).
Proof. exact (MK_COMB (@lem4043893 _102126 B f) (@lem4043894 _102126 B x f)). Qed.
Lemma lem4043896 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1332 _102126 B x f) = (term1333 _102126 B x f).
Proof. exact (eq_refl (term1332 _102126 B x f)). Qed.
Lemma lem4043897 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1331 _102126 B x f) = (term1333 _102126 B x f).
Proof. exact (TRANS (@lem4043895 _102126 B x f) (@lem4043896 _102126 B x f)). Qed.
Lemma lem4043898 {_102126 B : Type'} (x : type529 _102126 B) : (term1334 _102126 B x) = (term1335 _102126 B x).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043897 _102126 B x f)). Qed.
Lemma lem4043899 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043900 {_102126 B : Type'} (x : type529 _102126 B) : (term1336 _102126 B x) = (term1337 _102126 B x).
Proof. exact (MK_COMB (@lem4043899 _102126 B) (@lem4043898 _102126 B x)). Qed.
Lemma lem4043901 {_102126 B : Type'} : (term1338 _102126 B) = (term1339 _102126 B).
Proof. exact (fun_ext (fun x : type529 _102126 B => @lem4043900 _102126 B x)). Qed.
Lemma lem4043902 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043903 {_102126 B : Type'} : (term1321 _102126 B) = (term1340 _102126 B).
Proof. exact (MK_COMB (@lem4043902 _102126 B) (@lem4043901 _102126 B)). Qed.
Lemma lem4043904 {_102126 B : Type'} : ((term1320 _102126 B) = (term1321 _102126 B)) = ((term1319 _102126 B) = (term1340 _102126 B)).
Proof. exact (MK_COMB (@lem4043892 _102126 B) (@lem4043903 _102126 B)). Qed.
Lemma lem4043905 {_102126 B : Type'} : (term1319 _102126 B) = (term1340 _102126 B).
Proof. exact (EQ_MP (@lem4043904 _102126 B) (@lem4043879 _102126 B)). Qed.
Lemma lem4043907 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4043908 {_102126 B : Type'} (P : type503 _102126 B) : (term526 _102126 B P) = (term527 _102126 B P).
Proof. exact (@lem4043907 (_102126 -> B) (type684 _102126) P). Qed.
Lemma lem4043909 {_102126 B : Type'} (x : type529 _102126 B) : (term1341 _102126 B x) = (term1342 _102126 B x).
Proof. exact (@lem4043908 _102126 B (term1343 _102126 B x)). Qed.
Lemma lem4043910 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1344 _102126 B x f) = (term1345 _102126 B x f).
Proof. exact (eq_refl (term1344 _102126 B x f)). Qed.
Lemma lem4043911 {_102126 : Type'} (y : type684 _102126) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4043912 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) (y : type684 _102126) : (term1346 _102126 B x f y) = (term1347 _102126 B x f y).
Proof. exact (MK_COMB (@lem4043910 _102126 B x f) (@lem4043911 _102126 y)). Qed.
Lemma lem4043913 {_102126 B : Type'} (x : type529 _102126 B) (y : type684 _102126) (f : _102126 -> B) : (term1347 _102126 B x f y) = (term1348 _102126 B x y f).
Proof. exact (eq_refl (term1347 _102126 B x f y)). Qed.
Lemma lem4043914 {_102126 B : Type'} (x : type529 _102126 B) (y : type684 _102126) (f : _102126 -> B) : (term1346 _102126 B x f y) = (term1348 _102126 B x y f).
Proof. exact (TRANS (@lem4043912 _102126 B x f y) (@lem4043913 _102126 B x y f)). Qed.
Lemma lem4043915 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1349 _102126 B x f) = (term1345 _102126 B x f).
Proof. exact (fun_ext (fun y : type684 _102126 => @lem4043914 _102126 B x y f)). Qed.
Lemma lem4043916 {_102126 : Type'} : (@ex ((_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043917 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1350 _102126 B x f) = (term1333 _102126 B x f).
Proof. exact (MK_COMB (@lem4043916 _102126) (@lem4043915 _102126 B x f)). Qed.
Lemma lem4043918 {_102126 B : Type'} (x : type529 _102126 B) : (term1351 _102126 B x) = (term1335 _102126 B x).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043917 _102126 B x f)). Qed.
Lemma lem4043919 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043920 {_102126 B : Type'} (x : type529 _102126 B) : (term1341 _102126 B x) = (term1337 _102126 B x).
Proof. exact (MK_COMB (@lem4043919 _102126 B) (@lem4043918 _102126 B x)). Qed.
Lemma lem4043921 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4043922 {_102126 B : Type'} (x : type529 _102126 B) : (term1352 _102126 B x) = (term1353 _102126 B x).
Proof. exact (MK_COMB (@lem4043921) (@lem4043920 _102126 B x)). Qed.
Lemma lem4043923 {_102126 B : Type'} (x : type529 _102126 B) (f : _102126 -> B) : (term1344 _102126 B x f) = (term1345 _102126 B x f).
Proof. exact (eq_refl (term1344 _102126 B x f)). Qed.
Lemma lem4043924 {_102126 B : Type'} (y : type529 _102126 B) (f : _102126 -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4043925 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term1354 _102126 B x y f) = (term1355 _102126 B x y f).
Proof. exact (MK_COMB (@lem4043923 _102126 B x f) (@lem4043924 _102126 B y f)). Qed.
Lemma lem4043926 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term1355 _102126 B x y f) = (term1356 _102126 B x y f).
Proof. exact (eq_refl (term1355 _102126 B x y f)). Qed.
Lemma lem4043927 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) (f : _102126 -> B) : (term1354 _102126 B x y f) = (term1356 _102126 B x y f).
Proof. exact (TRANS (@lem4043925 _102126 B x y f) (@lem4043926 _102126 B x y f)). Qed.
Lemma lem4043928 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) : (term1357 _102126 B x y) = (term1358 _102126 B x y).
Proof. exact (fun_ext (fun f : _102126 -> B => @lem4043927 _102126 B x y f)). Qed.
Lemma lem4043929 {_102126 B : Type'} : (@all (_102126 -> B)) = (@all (_102126 -> B)).
Proof. exact (eq_refl (@all (_102126 -> B))). Qed.
Lemma lem4043930 {_102126 B : Type'} (x : type529 _102126 B) (y : type529 _102126 B) : (term1359 _102126 B x y) = (term1360 _102126 B x y).
Proof. exact (MK_COMB (@lem4043929 _102126 B) (@lem4043928 _102126 B x y)). Qed.
Lemma lem4043931 {_102126 B : Type'} (x : type529 _102126 B) : (term1361 _102126 B x) = (term1362 _102126 B x).
Proof. exact (fun_ext (fun y : type529 _102126 B => @lem4043930 _102126 B x y)). Qed.
Lemma lem4043932 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043933 {_102126 B : Type'} (x : type529 _102126 B) : (term1342 _102126 B x) = (term1363 _102126 B x).
Proof. exact (MK_COMB (@lem4043932 _102126 B) (@lem4043931 _102126 B x)). Qed.
Lemma lem4043934 {_102126 B : Type'} (x : type529 _102126 B) : ((term1341 _102126 B x) = (term1342 _102126 B x)) = ((term1337 _102126 B x) = (term1363 _102126 B x)).
Proof. exact (MK_COMB (@lem4043922 _102126 B x) (@lem4043933 _102126 B x)). Qed.
Lemma lem4043935 {_102126 B : Type'} (x : type529 _102126 B) : (term1337 _102126 B x) = (term1363 _102126 B x).
Proof. exact (EQ_MP (@lem4043934 _102126 B x) (@lem4043909 _102126 B x)). Qed.
Lemma lem4043936 {_102126 B : Type'} : (term1339 _102126 B) = (term1364 _102126 B).
Proof. exact (fun_ext (fun x : type529 _102126 B => @lem4043935 _102126 B x)). Qed.
Lemma lem4043937 {_102126 B : Type'} : (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)) = (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126)).
Proof. exact (eq_refl (@ex ((_102126 -> B) -> (_102126 -> Prop) -> _102126))). Qed.
Lemma lem4043938 {_102126 B : Type'} : (term1340 _102126 B) = (term1365 _102126 B).
Proof. exact (MK_COMB (@lem4043937 _102126 B) (@lem4043936 _102126 B)). Qed.
Lemma lem4043939 {_102126 B : Type'} : (term1319 _102126 B) = (term1365 _102126 B).
Proof. exact (TRANS (@lem4043905 _102126 B) (@lem4043938 _102126 B)). Qed.
Lemma lem4043941 {_102126 B : Type'} : (term1215 _102126 B) = (term1365 _102126 B).
Proof. exact (TRANS (@lem4043875 _102126 B) (@lem4043939 _102126 B)). Qed.
Lemma lem4043942 {_102126 B : Type'} : (term228 _102126 B) = (term1365 _102126 B).
Proof. exact (TRANS (@lem4043590 _102126 B) (@lem4043941 _102126 B)). Qed.
Lemma lem4043943 {_102126 B : Type'} (h1 : term228 _102126 B) : term1365 _102126 B.
Proof. exact (EQ_MP (@lem4043942 _102126 B) (@lem4039318 _102126 B h1)). Qed.
Lemma lem4043958 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term410 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (@lem17362 (term412 _102133 B s x f y) (x = y)). Qed.
Lemma lem4043959 {_102133 : Type'} (P : _102133 -> Prop) : (term413 _102133 P) = (term414 _102133 P).
Proof. exact (@lem18392 _102133 P). Qed.
Lemma lem4043960 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term415 _102133 B s f x) = (term416 _102133 B s f x).
Proof. exact (@lem4043959 _102133 (term313 _102133 B s f x)). Qed.
Lemma lem4043961 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term417 _102133 B s f x y) = (term312 _102133 B s f x y).
Proof. exact (eq_refl (term417 _102133 B s f x y)). Qed.
Lemma lem4043962 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043963 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term418 _102133 B s f x y) = (term410 _102133 B s f x y).
Proof. exact (MK_COMB (@lem4043962) (@lem4043961 _102133 B s f x y)). Qed.
Lemma lem4043964 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term418 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (TRANS (@lem4043963 _102133 B s f x y) (@lem4043958 _102133 B s f x y)). Qed.
Lemma lem4043965 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term419 _102133 B s f x) = (term420 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4043964 _102133 B s f x y)). Qed.
Lemma lem4043966 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4043967 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term416 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (MK_COMB (@lem4043966 _102133) (@lem4043965 _102133 B s f x)). Qed.
Lemma lem4043968 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term415 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (TRANS (@lem4043960 _102133 B s f x) (@lem4043967 _102133 B s f x)). Qed.
Lemma lem4043969 {_102133 : Type'} (P : _102133 -> Prop) : (term413 _102133 P) = (term414 _102133 P).
Proof. exact (@lem18392 _102133 P). Qed.
Lemma lem4043970 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term422 _102133 B s f) = (term423 _102133 B s f).
Proof. exact (@lem4043969 _102133 (term315 _102133 B s f)). Qed.
Lemma lem4043971 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term424 _102133 B s f x) = (term314 _102133 B s f x).
Proof. exact (eq_refl (term424 _102133 B s f x)). Qed.
Lemma lem4043972 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4043973 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term425 _102133 B s f x) = (term415 _102133 B s f x).
Proof. exact (MK_COMB (@lem4043972) (@lem4043971 _102133 B s f x)). Qed.
Lemma lem4043974 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term425 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (TRANS (@lem4043973 _102133 B s f x) (@lem4043968 _102133 B s f x)). Qed.
Lemma lem4043975 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term426 _102133 B s f) = (term427 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4043974 _102133 B s f x)). Qed.
Lemma lem4043976 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4043977 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term423 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (MK_COMB (@lem4043976 _102133) (@lem4043975 _102133 B s f)). Qed.
Lemma lem4043978 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term422 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (TRANS (@lem4043970 _102133 B s f) (@lem4043977 _102133 B s f)). Qed.
Lemma lem4043979 {_102133 : Type'} (s : _102133 -> Prop) : (term1204 _102133 s) = (term1204 _102133 s).
Proof. exact (eq_refl (term1204 _102133 s)). Qed.
Lemma lem4043980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043981 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term430 _102133 B s f) = (term431 _102133 B s f).
Proof. exact (MK_COMB (@lem4043980) (@lem4043978 _102133 B s f)). Qed.
Lemma lem4043982 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1205 _102133 B f s) = (term1206 _102133 B f s).
Proof. exact (MK_COMB (@lem4043981 _102133 B s f) (@lem4043979 _102133 s)). Qed.
Lemma lem4043983 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1207 _102133 B f s) = (term1205 _102133 B f s).
Proof. exact (@lem17045 (term316 _102133 B s f) (@FINITE _102133 s)). Qed.
Lemma lem4043984 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1207 _102133 B f s) = (term1206 _102133 B f s).
Proof. exact (TRANS (@lem4043983 _102133 B f s) (@lem4043982 _102133 B f s)). Qed.
Lemma lem4043985 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4043986 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4043987 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1208 _102133 B f s) = (term1209 _102133 B f s).
Proof. exact (MK_COMB (@lem4043986) (@lem4043984 _102133 B f s)). Qed.
Lemma lem4043988 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1210 _102133 B f s) = (term1211 _102133 B f s).
Proof. exact (MK_COMB (@lem4043987 _102133 B f s) (@lem4043985 _102133 B f s)). Qed.
Lemma lem4043989 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term320 _102133 B f s) = (term1210 _102133 B f s).
Proof. exact (@lem17265 (term318 _102133 B f s) ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4043990 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term320 _102133 B f s) = (term1211 _102133 B f s).
Proof. exact (TRANS (@lem4043989 _102133 B f s) (@lem4043988 _102133 B f s)). Qed.
Lemma lem4043991 {_102133 B : Type'} (f : _102133 -> B) : (term321 _102133 B f) = (term1212 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4043990 _102133 B f s)). Qed.
Lemma lem4043992 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4043993 {_102133 B : Type'} (f : _102133 -> B) : (term322 _102133 B f) = (term1213 _102133 B f).
Proof. exact (MK_COMB (@lem4043992 _102133) (@lem4043991 _102133 B f)). Qed.
Lemma lem4043994 {_102133 B : Type'} : (term323 _102133 B) = (term1214 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4043993 _102133 B f)). Qed.
Lemma lem4043995 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4043996 {_102133 B : Type'} : (term228 _102133 B) = (term1215 _102133 B).
Proof. exact (MK_COMB (@lem4043995 _102133 B) (@lem4043994 _102133 B)). Qed.
Lemma lem4044103 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044104 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4044103 _102133 P Q). Qed.
Lemma lem4044105 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1216 _102133 B f s) = (term1217 _102133 B f s).
Proof. exact (@lem4044104 _102133 (term427 _102133 B s f) (term1204 _102133 s)). Qed.
Lemma lem4044106 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term442 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (eq_refl (term442 _102133 B s f x)). Qed.
Lemma lem4044107 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term443 _102133 B s f) = (term427 _102133 B s f).
Proof. exact (fun_ext (fun x : _102133 => @lem4044106 _102133 B s f x)). Qed.
Lemma lem4044108 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044109 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term444 _102133 B s f) = (term428 _102133 B s f).
Proof. exact (MK_COMB (@lem4044108 _102133) (@lem4044107 _102133 B s f)). Qed.
Lemma lem4044110 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044111 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) : (term445 _102133 B s f) = (term431 _102133 B s f).
Proof. exact (MK_COMB (@lem4044110) (@lem4044109 _102133 B s f)). Qed.
Lemma lem4044112 {_102133 : Type'} (s : _102133 -> Prop) : (term1204 _102133 s) = (term1204 _102133 s).
Proof. exact (eq_refl (term1204 _102133 s)). Qed.
Lemma lem4044113 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1216 _102133 B f s) = (term1206 _102133 B f s).
Proof. exact (MK_COMB (@lem4044111 _102133 B s f) (@lem4044112 _102133 s)). Qed.
Lemma lem4044114 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044115 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1218 _102133 B f s) = (term1219 _102133 B f s).
Proof. exact (MK_COMB (@lem4044114) (@lem4044113 _102133 B f s)). Qed.
Lemma lem4044116 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term442 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (eq_refl (term442 _102133 B s f x)). Qed.
Lemma lem4044117 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044118 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term448 _102133 B s f x) = (term449 _102133 B s f x).
Proof. exact (MK_COMB (@lem4044117) (@lem4044116 _102133 B s f x)). Qed.
Lemma lem4044119 {_102133 : Type'} (s : _102133 -> Prop) : (term1204 _102133 s) = (term1204 _102133 s).
Proof. exact (eq_refl (term1204 _102133 s)). Qed.
Lemma lem4044120 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1220 _102133 B f x s) = (term1221 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044118 _102133 B s f x) (@lem4044119 _102133 s)). Qed.
Lemma lem4044121 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1222 _102133 B f s) = (term1223 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044120 _102133 B f x s)). Qed.
Lemma lem4044122 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044123 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1217 _102133 B f s) = (term1224 _102133 B f s).
Proof. exact (MK_COMB (@lem4044122 _102133) (@lem4044121 _102133 B f s)). Qed.
Lemma lem4044124 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term1216 _102133 B f s) = (term1217 _102133 B f s)) = ((term1206 _102133 B f s) = (term1224 _102133 B f s)).
Proof. exact (MK_COMB (@lem4044115 _102133 B f s) (@lem4044123 _102133 B f s)). Qed.
Lemma lem4044125 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1206 _102133 B f s) = (term1224 _102133 B f s).
Proof. exact (EQ_MP (@lem4044124 _102133 B f s) (@lem4044105 _102133 B f s)). Qed.
Lemma lem4044127 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044128 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4044127 _102133 P Q). Qed.
Lemma lem4044129 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1225 _102133 B f x s) = (term1226 _102133 B f x s).
Proof. exact (@lem4044128 _102133 (term420 _102133 B s f x) (term1204 _102133 s)). Qed.
Lemma lem4044130 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term457 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (eq_refl (term457 _102133 B s f x y)). Qed.
Lemma lem4044131 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term458 _102133 B s f x) = (term420 _102133 B s f x).
Proof. exact (fun_ext (fun y : _102133 => @lem4044130 _102133 B s f x y)). Qed.
Lemma lem4044132 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044133 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term459 _102133 B s f x) = (term421 _102133 B s f x).
Proof. exact (MK_COMB (@lem4044132 _102133) (@lem4044131 _102133 B s f x)). Qed.
Lemma lem4044134 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044135 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) : (term460 _102133 B s f x) = (term449 _102133 B s f x).
Proof. exact (MK_COMB (@lem4044134) (@lem4044133 _102133 B s f x)). Qed.
Lemma lem4044136 {_102133 : Type'} (s : _102133 -> Prop) : (term1204 _102133 s) = (term1204 _102133 s).
Proof. exact (eq_refl (term1204 _102133 s)). Qed.
Lemma lem4044137 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1225 _102133 B f x s) = (term1221 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044135 _102133 B s f x) (@lem4044136 _102133 s)). Qed.
Lemma lem4044138 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044139 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1227 _102133 B f x s) = (term1228 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044138) (@lem4044137 _102133 B f x s)). Qed.
Lemma lem4044140 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term457 _102133 B s f x y) = (term411 _102133 B s f x y).
Proof. exact (eq_refl (term457 _102133 B s f x y)). Qed.
Lemma lem4044141 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044142 {_102133 B : Type'} (s : _102133 -> Prop) (f : _102133 -> B) (x : _102133) (y : _102133) : (term463 _102133 B s f x y) = (term464 _102133 B s f x y).
Proof. exact (MK_COMB (@lem4044141) (@lem4044140 _102133 B s f x y)). Qed.
Lemma lem4044143 {_102133 : Type'} (s : _102133 -> Prop) : (term1204 _102133 s) = (term1204 _102133 s).
Proof. exact (eq_refl (term1204 _102133 s)). Qed.
Lemma lem4044144 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (y : _102133) (s : _102133 -> Prop) : (term1229 _102133 B f x y s) = (term1230 _102133 B f x y s).
Proof. exact (MK_COMB (@lem4044142 _102133 B s f x y) (@lem4044143 _102133 s)). Qed.
Lemma lem4044145 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1231 _102133 B f x s) = (term1232 _102133 B f x s).
Proof. exact (fun_ext (fun y : _102133 => @lem4044144 _102133 B f x y s)). Qed.
Lemma lem4044146 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044147 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1226 _102133 B f x s) = (term1233 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044146 _102133) (@lem4044145 _102133 B f x s)). Qed.
Lemma lem4044148 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : ((term1225 _102133 B f x s) = (term1226 _102133 B f x s)) = ((term1221 _102133 B f x s) = (term1233 _102133 B f x s)).
Proof. exact (MK_COMB (@lem4044139 _102133 B f x s) (@lem4044147 _102133 B f x s)). Qed.
Lemma lem4044149 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1221 _102133 B f x s) = (term1233 _102133 B f x s).
Proof. exact (EQ_MP (@lem4044148 _102133 B f x s) (@lem4044129 _102133 B f x s)). Qed.
Lemma lem4044150 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1223 _102133 B f s) = (term1234 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044149 _102133 B f x s)). Qed.
Lemma lem4044151 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044152 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1224 _102133 B f s) = (term1235 _102133 B f s).
Proof. exact (MK_COMB (@lem4044151 _102133) (@lem4044150 _102133 B f s)). Qed.
Lemma lem4044153 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1206 _102133 B f s) = (term1235 _102133 B f s).
Proof. exact (TRANS (@lem4044125 _102133 B f s) (@lem4044152 _102133 B f s)). Qed.
Lemma lem4044154 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044155 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1209 _102133 B f s) = (term1236 _102133 B f s).
Proof. exact (MK_COMB (@lem4044154) (@lem4044153 _102133 B f s)). Qed.
Lemma lem4044156 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044157 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1211 _102133 B f s) = (term1237 _102133 B f s).
Proof. exact (MK_COMB (@lem4044155 _102133 B f s) (@lem4044156 _102133 B f s)). Qed.
Lemma lem4044159 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044160 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4044159 _102133 P Q). Qed.
Lemma lem4044161 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1238 _102133 B f s) = (term1239 _102133 B f s).
Proof. exact (@lem4044160 _102133 (term1234 _102133 B f s) ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044162 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1240 _102133 B f s x) = (term1233 _102133 B f x s).
Proof. exact (eq_refl (term1240 _102133 B f s x)). Qed.
Lemma lem4044163 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1241 _102133 B f s) = (term1234 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044162 _102133 B f x s)). Qed.
Lemma lem4044164 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044165 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1242 _102133 B f s) = (term1235 _102133 B f s).
Proof. exact (MK_COMB (@lem4044164 _102133) (@lem4044163 _102133 B f s)). Qed.
Lemma lem4044166 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044167 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1243 _102133 B f s) = (term1236 _102133 B f s).
Proof. exact (MK_COMB (@lem4044166) (@lem4044165 _102133 B f s)). Qed.
Lemma lem4044168 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044169 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1238 _102133 B f s) = (term1237 _102133 B f s).
Proof. exact (MK_COMB (@lem4044167 _102133 B f s) (@lem4044168 _102133 B f s)). Qed.
Lemma lem4044170 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044171 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1244 _102133 B f s) = (term1245 _102133 B f s).
Proof. exact (MK_COMB (@lem4044170) (@lem4044169 _102133 B f s)). Qed.
Lemma lem4044172 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1240 _102133 B f s x) = (term1233 _102133 B f x s).
Proof. exact (eq_refl (term1240 _102133 B f s x)). Qed.
Lemma lem4044173 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044174 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1246 _102133 B f s x) = (term1247 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044173) (@lem4044172 _102133 B f x s)). Qed.
Lemma lem4044175 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044176 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1248 _102133 B x f s) = (term1249 _102133 B x f s).
Proof. exact (MK_COMB (@lem4044174 _102133 B f x s) (@lem4044175 _102133 B f s)). Qed.
Lemma lem4044177 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1250 _102133 B f s) = (term1251 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044176 _102133 B x f s)). Qed.
Lemma lem4044178 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044179 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1239 _102133 B f s) = (term1252 _102133 B f s).
Proof. exact (MK_COMB (@lem4044178 _102133) (@lem4044177 _102133 B f s)). Qed.
Lemma lem4044180 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term1238 _102133 B f s) = (term1239 _102133 B f s)) = ((term1237 _102133 B f s) = (term1252 _102133 B f s)).
Proof. exact (MK_COMB (@lem4044171 _102133 B f s) (@lem4044179 _102133 B f s)). Qed.
Lemma lem4044181 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1237 _102133 B f s) = (term1252 _102133 B f s).
Proof. exact (EQ_MP (@lem4044180 _102133 B f s) (@lem4044161 _102133 B f s)). Qed.
Lemma lem4044183 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044184 {_102133 : Type'} (P : _102133 -> Prop) (Q : Prop) : (term438 _102133 P Q) = (term439 _102133 P Q).
Proof. exact (@lem4044183 _102133 P Q). Qed.
Lemma lem4044185 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1253 _102133 B x f s) = (term1254 _102133 B x f s).
Proof. exact (@lem4044184 _102133 (term1232 _102133 B f x s) ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044186 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (y : _102133) (s : _102133 -> Prop) : (term1255 _102133 B f x s y) = (term1230 _102133 B f x y s).
Proof. exact (eq_refl (term1255 _102133 B f x s y)). Qed.
Lemma lem4044187 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1256 _102133 B f x s) = (term1232 _102133 B f x s).
Proof. exact (fun_ext (fun y : _102133 => @lem4044186 _102133 B f x y s)). Qed.
Lemma lem4044188 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044189 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1257 _102133 B f x s) = (term1233 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044188 _102133) (@lem4044187 _102133 B f x s)). Qed.
Lemma lem4044190 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044191 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (s : _102133 -> Prop) : (term1258 _102133 B f x s) = (term1247 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044190) (@lem4044189 _102133 B f x s)). Qed.
Lemma lem4044192 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044193 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1253 _102133 B x f s) = (term1249 _102133 B x f s).
Proof. exact (MK_COMB (@lem4044191 _102133 B f x s) (@lem4044192 _102133 B f s)). Qed.
Lemma lem4044194 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044195 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1259 _102133 B x f s) = (term1260 _102133 B x f s).
Proof. exact (MK_COMB (@lem4044194) (@lem4044193 _102133 B x f s)). Qed.
Lemma lem4044196 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (y : _102133) (s : _102133 -> Prop) : (term1255 _102133 B f x s y) = (term1230 _102133 B f x y s).
Proof. exact (eq_refl (term1255 _102133 B f x s y)). Qed.
Lemma lem4044197 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044198 {_102133 B : Type'} (f : _102133 -> B) (x : _102133) (y : _102133) (s : _102133 -> Prop) : (term1261 _102133 B f x s y) = (term1262 _102133 B f x y s).
Proof. exact (MK_COMB (@lem4044197) (@lem4044196 _102133 B f x y s)). Qed.
Lemma lem4044199 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : ((term311 _102133 B f s) = (@CARD _102133 s)) = ((term311 _102133 B f s) = (@CARD _102133 s)).
Proof. exact (eq_refl ((term311 _102133 B f s) = (@CARD _102133 s))). Qed.
Lemma lem4044200 {_102133 B : Type'} (x : _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1263 _102133 B x y f s) = (term1264 _102133 B x y f s).
Proof. exact (MK_COMB (@lem4044198 _102133 B f x y s) (@lem4044199 _102133 B f s)). Qed.
Lemma lem4044201 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1265 _102133 B x f s) = (term1266 _102133 B x f s).
Proof. exact (fun_ext (fun y : _102133 => @lem4044200 _102133 B x y f s)). Qed.
Lemma lem4044202 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044203 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1254 _102133 B x f s) = (term1267 _102133 B x f s).
Proof. exact (MK_COMB (@lem4044202 _102133) (@lem4044201 _102133 B x f s)). Qed.
Lemma lem4044204 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : ((term1253 _102133 B x f s) = (term1254 _102133 B x f s)) = ((term1249 _102133 B x f s) = (term1267 _102133 B x f s)).
Proof. exact (MK_COMB (@lem4044195 _102133 B x f s) (@lem4044203 _102133 B x f s)). Qed.
Lemma lem4044205 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1249 _102133 B x f s) = (term1267 _102133 B x f s).
Proof. exact (EQ_MP (@lem4044204 _102133 B x f s) (@lem4044185 _102133 B x f s)). Qed.
Lemma lem4044206 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1251 _102133 B f s) = (term1268 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044205 _102133 B x f s)). Qed.
Lemma lem4044207 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044208 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1252 _102133 B f s) = (term1269 _102133 B f s).
Proof. exact (MK_COMB (@lem4044207 _102133) (@lem4044206 _102133 B f s)). Qed.
Lemma lem4044209 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1237 _102133 B f s) = (term1269 _102133 B f s).
Proof. exact (TRANS (@lem4044181 _102133 B f s) (@lem4044208 _102133 B f s)). Qed.
Lemma lem4044210 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1211 _102133 B f s) = (term1269 _102133 B f s).
Proof. exact (TRANS (@lem4044157 _102133 B f s) (@lem4044209 _102133 B f s)). Qed.
Lemma lem4044211 {_102133 B : Type'} (f : _102133 -> B) : (term1212 _102133 B f) = (term1270 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4044210 _102133 B f s)). Qed.
Lemma lem4044212 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4044213 {_102133 B : Type'} (f : _102133 -> B) : (term1213 _102133 B f) = (term1271 _102133 B f).
Proof. exact (MK_COMB (@lem4044212 _102133) (@lem4044211 _102133 B f)). Qed.
Lemma lem4044215 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044216 {_102133 : Type'} (P : type672 _102133) : (term476 _102133 P) = (term477 _102133 P).
Proof. exact (@lem4044215 (_102133 -> Prop) _102133 P). Qed.
Lemma lem4044217 {_102133 B : Type'} (f : _102133 -> B) : (term1272 _102133 B f) = (term1273 _102133 B f).
Proof. exact (@lem4044216 _102133 (term1274 _102133 B f)). Qed.
Lemma lem4044218 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1275 _102133 B f s) = (term1268 _102133 B f s).
Proof. exact (eq_refl (term1275 _102133 B f s)). Qed.
Lemma lem4044219 {_102133 : Type'} (x : _102133) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4044220 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) (x : _102133) : (term1276 _102133 B f s x) = (term1277 _102133 B f s x).
Proof. exact (MK_COMB (@lem4044218 _102133 B f s) (@lem4044219 _102133 x)). Qed.
Lemma lem4044221 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1277 _102133 B f s x) = (term1267 _102133 B x f s).
Proof. exact (eq_refl (term1277 _102133 B f s x)). Qed.
Lemma lem4044222 {_102133 B : Type'} (x : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1276 _102133 B f s x) = (term1267 _102133 B x f s).
Proof. exact (TRANS (@lem4044220 _102133 B f s x) (@lem4044221 _102133 B x f s)). Qed.
Lemma lem4044223 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1278 _102133 B f s) = (term1268 _102133 B f s).
Proof. exact (fun_ext (fun x : _102133 => @lem4044222 _102133 B x f s)). Qed.
Lemma lem4044224 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044225 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1279 _102133 B f s) = (term1269 _102133 B f s).
Proof. exact (MK_COMB (@lem4044224 _102133) (@lem4044223 _102133 B f s)). Qed.
Lemma lem4044226 {_102133 B : Type'} (f : _102133 -> B) : (term1280 _102133 B f) = (term1270 _102133 B f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4044225 _102133 B f s)). Qed.
Lemma lem4044227 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4044228 {_102133 B : Type'} (f : _102133 -> B) : (term1272 _102133 B f) = (term1271 _102133 B f).
Proof. exact (MK_COMB (@lem4044227 _102133) (@lem4044226 _102133 B f)). Qed.
Lemma lem4044229 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044230 {_102133 B : Type'} (f : _102133 -> B) : (term1281 _102133 B f) = (term1282 _102133 B f).
Proof. exact (MK_COMB (@lem4044229) (@lem4044228 _102133 B f)). Qed.
Lemma lem4044231 {_102133 B : Type'} (f : _102133 -> B) (s : _102133 -> Prop) : (term1275 _102133 B f s) = (term1268 _102133 B f s).
Proof. exact (eq_refl (term1275 _102133 B f s)). Qed.
Lemma lem4044232 {_102133 : Type'} (x : type684 _102133) (s : _102133 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4044233 {_102133 B : Type'} (f : _102133 -> B) (x : type684 _102133) (s : _102133 -> Prop) : (term1283 _102133 B f x s) = (term1284 _102133 B f x s).
Proof. exact (MK_COMB (@lem4044231 _102133 B f s) (@lem4044232 _102133 x s)). Qed.
Lemma lem4044234 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1284 _102133 B f x s) = (term1285 _102133 B x f s).
Proof. exact (eq_refl (term1284 _102133 B f x s)). Qed.
Lemma lem4044235 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1283 _102133 B f x s) = (term1285 _102133 B x f s).
Proof. exact (TRANS (@lem4044233 _102133 B f x s) (@lem4044234 _102133 B x f s)). Qed.
Lemma lem4044236 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1286 _102133 B f x) = (term1287 _102133 B x f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4044235 _102133 B x f s)). Qed.
Lemma lem4044237 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4044238 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1288 _102133 B f x) = (term1289 _102133 B x f).
Proof. exact (MK_COMB (@lem4044237 _102133) (@lem4044236 _102133 B x f)). Qed.
Lemma lem4044239 {_102133 B : Type'} (f : _102133 -> B) : (term1290 _102133 B f) = (term1291 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4044238 _102133 B x f)). Qed.
Lemma lem4044240 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044241 {_102133 B : Type'} (f : _102133 -> B) : (term1273 _102133 B f) = (term1292 _102133 B f).
Proof. exact (MK_COMB (@lem4044240 _102133) (@lem4044239 _102133 B f)). Qed.
Lemma lem4044242 {_102133 B : Type'} (f : _102133 -> B) : ((term1272 _102133 B f) = (term1273 _102133 B f)) = ((term1271 _102133 B f) = (term1292 _102133 B f)).
Proof. exact (MK_COMB (@lem4044230 _102133 B f) (@lem4044241 _102133 B f)). Qed.
Lemma lem4044243 {_102133 B : Type'} (f : _102133 -> B) : (term1271 _102133 B f) = (term1292 _102133 B f).
Proof. exact (EQ_MP (@lem4044242 _102133 B f) (@lem4044217 _102133 B f)). Qed.
Lemma lem4044245 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044246 {_102133 : Type'} (P : type672 _102133) : (term476 _102133 P) = (term477 _102133 P).
Proof. exact (@lem4044245 (_102133 -> Prop) _102133 P). Qed.
Lemma lem4044247 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1293 _102133 B x f) = (term1294 _102133 B x f).
Proof. exact (@lem4044246 _102133 (term1295 _102133 B x f)). Qed.
Lemma lem4044248 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1296 _102133 B x f s) = (term1297 _102133 B x f s).
Proof. exact (eq_refl (term1296 _102133 B x f s)). Qed.
Lemma lem4044249 {_102133 : Type'} (y : _102133) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4044250 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) (y : _102133) : (term1298 _102133 B x f s y) = (term1299 _102133 B x f s y).
Proof. exact (MK_COMB (@lem4044248 _102133 B x f s) (@lem4044249 _102133 y)). Qed.
Lemma lem4044251 {_102133 B : Type'} (x : type684 _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1299 _102133 B x f s y) = (term1300 _102133 B x y f s).
Proof. exact (eq_refl (term1299 _102133 B x f s y)). Qed.
Lemma lem4044252 {_102133 B : Type'} (x : type684 _102133) (y : _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1298 _102133 B x f s y) = (term1300 _102133 B x y f s).
Proof. exact (TRANS (@lem4044250 _102133 B x f s y) (@lem4044251 _102133 B x y f s)). Qed.
Lemma lem4044253 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1301 _102133 B x f s) = (term1297 _102133 B x f s).
Proof. exact (fun_ext (fun y : _102133 => @lem4044252 _102133 B x y f s)). Qed.
Lemma lem4044254 {_102133 : Type'} : (@ex _102133) = (@ex _102133).
Proof. exact (eq_refl (@ex _102133)). Qed.
Lemma lem4044255 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1302 _102133 B x f s) = (term1285 _102133 B x f s).
Proof. exact (MK_COMB (@lem4044254 _102133) (@lem4044253 _102133 B x f s)). Qed.
Lemma lem4044256 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1303 _102133 B x f) = (term1287 _102133 B x f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4044255 _102133 B x f s)). Qed.
Lemma lem4044257 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4044258 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1293 _102133 B x f) = (term1289 _102133 B x f).
Proof. exact (MK_COMB (@lem4044257 _102133) (@lem4044256 _102133 B x f)). Qed.
Lemma lem4044259 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044260 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1304 _102133 B x f) = (term1305 _102133 B x f).
Proof. exact (MK_COMB (@lem4044259) (@lem4044258 _102133 B x f)). Qed.
Lemma lem4044261 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1296 _102133 B x f s) = (term1297 _102133 B x f s).
Proof. exact (eq_refl (term1296 _102133 B x f s)). Qed.
Lemma lem4044262 {_102133 : Type'} (y : type684 _102133) (s : _102133 -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4044263 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) (y : type684 _102133) (s : _102133 -> Prop) : (term1306 _102133 B x f y s) = (term1307 _102133 B x f y s).
Proof. exact (MK_COMB (@lem4044261 _102133 B x f s) (@lem4044262 _102133 y s)). Qed.
Lemma lem4044264 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1307 _102133 B x f y s) = (term1308 _102133 B x y f s).
Proof. exact (eq_refl (term1307 _102133 B x f y s)). Qed.
Lemma lem4044265 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) (s : _102133 -> Prop) : (term1306 _102133 B x f y s) = (term1308 _102133 B x y f s).
Proof. exact (TRANS (@lem4044263 _102133 B x f y s) (@lem4044264 _102133 B x y f s)). Qed.
Lemma lem4044266 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) : (term1309 _102133 B x f y) = (term1310 _102133 B x y f).
Proof. exact (fun_ext (fun s : _102133 -> Prop => @lem4044265 _102133 B x y f s)). Qed.
Lemma lem4044267 {_102133 : Type'} : (@all (_102133 -> Prop)) = (@all (_102133 -> Prop)).
Proof. exact (eq_refl (@all (_102133 -> Prop))). Qed.
Lemma lem4044268 {_102133 B : Type'} (x : type684 _102133) (y : type684 _102133) (f : _102133 -> B) : (term1311 _102133 B x f y) = (term1312 _102133 B x y f).
Proof. exact (MK_COMB (@lem4044267 _102133) (@lem4044266 _102133 B x y f)). Qed.
Lemma lem4044269 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1313 _102133 B x f) = (term1314 _102133 B x f).
Proof. exact (fun_ext (fun y : type684 _102133 => @lem4044268 _102133 B x y f)). Qed.
Lemma lem4044270 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044271 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1294 _102133 B x f) = (term1315 _102133 B x f).
Proof. exact (MK_COMB (@lem4044270 _102133) (@lem4044269 _102133 B x f)). Qed.
Lemma lem4044272 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : ((term1293 _102133 B x f) = (term1294 _102133 B x f)) = ((term1289 _102133 B x f) = (term1315 _102133 B x f)).
Proof. exact (MK_COMB (@lem4044260 _102133 B x f) (@lem4044271 _102133 B x f)). Qed.
Lemma lem4044273 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1289 _102133 B x f) = (term1315 _102133 B x f).
Proof. exact (EQ_MP (@lem4044272 _102133 B x f) (@lem4044247 _102133 B x f)). Qed.
Lemma lem4044274 {_102133 B : Type'} (f : _102133 -> B) : (term1291 _102133 B f) = (term1316 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4044273 _102133 B x f)). Qed.
Lemma lem4044275 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044276 {_102133 B : Type'} (f : _102133 -> B) : (term1292 _102133 B f) = (term1317 _102133 B f).
Proof. exact (MK_COMB (@lem4044275 _102133) (@lem4044274 _102133 B f)). Qed.
Lemma lem4044277 {_102133 B : Type'} (f : _102133 -> B) : (term1271 _102133 B f) = (term1317 _102133 B f).
Proof. exact (TRANS (@lem4044243 _102133 B f) (@lem4044276 _102133 B f)). Qed.
Lemma lem4044278 {_102133 B : Type'} (f : _102133 -> B) : (term1213 _102133 B f) = (term1317 _102133 B f).
Proof. exact (TRANS (@lem4044213 _102133 B f) (@lem4044277 _102133 B f)). Qed.
Lemma lem4044279 {_102133 B : Type'} : (term1214 _102133 B) = (term1318 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4044278 _102133 B f)). Qed.
Lemma lem4044280 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4044281 {_102133 B : Type'} : (term1215 _102133 B) = (term1319 _102133 B).
Proof. exact (MK_COMB (@lem4044280 _102133 B) (@lem4044279 _102133 B)). Qed.
Lemma lem4044283 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044284 {_102133 B : Type'} (P : type503 _102133 B) : (term526 _102133 B P) = (term527 _102133 B P).
Proof. exact (@lem4044283 (_102133 -> B) (type684 _102133) P). Qed.
Lemma lem4044285 {_102133 B : Type'} : (term1320 _102133 B) = (term1321 _102133 B).
Proof. exact (@lem4044284 _102133 B (term1322 _102133 B)). Qed.
Lemma lem4044286 {_102133 B : Type'} (f : _102133 -> B) : (term1323 _102133 B f) = (term1316 _102133 B f).
Proof. exact (eq_refl (term1323 _102133 B f)). Qed.
Lemma lem4044287 {_102133 : Type'} (x : type684 _102133) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4044288 {_102133 B : Type'} (f : _102133 -> B) (x : type684 _102133) : (term1324 _102133 B f x) = (term1325 _102133 B f x).
Proof. exact (MK_COMB (@lem4044286 _102133 B f) (@lem4044287 _102133 x)). Qed.
Lemma lem4044289 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1325 _102133 B f x) = (term1315 _102133 B x f).
Proof. exact (eq_refl (term1325 _102133 B f x)). Qed.
Lemma lem4044290 {_102133 B : Type'} (x : type684 _102133) (f : _102133 -> B) : (term1324 _102133 B f x) = (term1315 _102133 B x f).
Proof. exact (TRANS (@lem4044288 _102133 B f x) (@lem4044289 _102133 B x f)). Qed.
Lemma lem4044291 {_102133 B : Type'} (f : _102133 -> B) : (term1326 _102133 B f) = (term1316 _102133 B f).
Proof. exact (fun_ext (fun x : type684 _102133 => @lem4044290 _102133 B x f)). Qed.
Lemma lem4044292 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044293 {_102133 B : Type'} (f : _102133 -> B) : (term1327 _102133 B f) = (term1317 _102133 B f).
Proof. exact (MK_COMB (@lem4044292 _102133) (@lem4044291 _102133 B f)). Qed.
Lemma lem4044294 {_102133 B : Type'} : (term1328 _102133 B) = (term1318 _102133 B).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4044293 _102133 B f)). Qed.
Lemma lem4044295 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4044296 {_102133 B : Type'} : (term1320 _102133 B) = (term1319 _102133 B).
Proof. exact (MK_COMB (@lem4044295 _102133 B) (@lem4044294 _102133 B)). Qed.
Lemma lem4044297 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044298 {_102133 B : Type'} : (term1329 _102133 B) = (term1330 _102133 B).
Proof. exact (MK_COMB (@lem4044297) (@lem4044296 _102133 B)). Qed.
Lemma lem4044299 {_102133 B : Type'} (f : _102133 -> B) : (term1323 _102133 B f) = (term1316 _102133 B f).
Proof. exact (eq_refl (term1323 _102133 B f)). Qed.
Lemma lem4044300 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4044301 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1331 _102133 B x f) = (term1332 _102133 B x f).
Proof. exact (MK_COMB (@lem4044299 _102133 B f) (@lem4044300 _102133 B x f)). Qed.
Lemma lem4044302 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1332 _102133 B x f) = (term1333 _102133 B x f).
Proof. exact (eq_refl (term1332 _102133 B x f)). Qed.
Lemma lem4044303 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1331 _102133 B x f) = (term1333 _102133 B x f).
Proof. exact (TRANS (@lem4044301 _102133 B x f) (@lem4044302 _102133 B x f)). Qed.
Lemma lem4044304 {_102133 B : Type'} (x : type529 _102133 B) : (term1334 _102133 B x) = (term1335 _102133 B x).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4044303 _102133 B x f)). Qed.
Lemma lem4044305 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4044306 {_102133 B : Type'} (x : type529 _102133 B) : (term1336 _102133 B x) = (term1337 _102133 B x).
Proof. exact (MK_COMB (@lem4044305 _102133 B) (@lem4044304 _102133 B x)). Qed.
Lemma lem4044307 {_102133 B : Type'} : (term1338 _102133 B) = (term1339 _102133 B).
Proof. exact (fun_ext (fun x : type529 _102133 B => @lem4044306 _102133 B x)). Qed.
Lemma lem4044308 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044309 {_102133 B : Type'} : (term1321 _102133 B) = (term1340 _102133 B).
Proof. exact (MK_COMB (@lem4044308 _102133 B) (@lem4044307 _102133 B)). Qed.
Lemma lem4044310 {_102133 B : Type'} : ((term1320 _102133 B) = (term1321 _102133 B)) = ((term1319 _102133 B) = (term1340 _102133 B)).
Proof. exact (MK_COMB (@lem4044298 _102133 B) (@lem4044309 _102133 B)). Qed.
Lemma lem4044311 {_102133 B : Type'} : (term1319 _102133 B) = (term1340 _102133 B).
Proof. exact (EQ_MP (@lem4044310 _102133 B) (@lem4044285 _102133 B)). Qed.
Lemma lem4044313 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044314 {_102133 B : Type'} (P : type503 _102133 B) : (term526 _102133 B P) = (term527 _102133 B P).
Proof. exact (@lem4044313 (_102133 -> B) (type684 _102133) P). Qed.
Lemma lem4044315 {_102133 B : Type'} (x : type529 _102133 B) : (term1341 _102133 B x) = (term1342 _102133 B x).
Proof. exact (@lem4044314 _102133 B (term1343 _102133 B x)). Qed.
Lemma lem4044316 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1344 _102133 B x f) = (term1345 _102133 B x f).
Proof. exact (eq_refl (term1344 _102133 B x f)). Qed.
Lemma lem4044317 {_102133 : Type'} (y : type684 _102133) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4044318 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) (y : type684 _102133) : (term1346 _102133 B x f y) = (term1347 _102133 B x f y).
Proof. exact (MK_COMB (@lem4044316 _102133 B x f) (@lem4044317 _102133 y)). Qed.
Lemma lem4044319 {_102133 B : Type'} (x : type529 _102133 B) (y : type684 _102133) (f : _102133 -> B) : (term1347 _102133 B x f y) = (term1348 _102133 B x y f).
Proof. exact (eq_refl (term1347 _102133 B x f y)). Qed.
Lemma lem4044320 {_102133 B : Type'} (x : type529 _102133 B) (y : type684 _102133) (f : _102133 -> B) : (term1346 _102133 B x f y) = (term1348 _102133 B x y f).
Proof. exact (TRANS (@lem4044318 _102133 B x f y) (@lem4044319 _102133 B x y f)). Qed.
Lemma lem4044321 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1349 _102133 B x f) = (term1345 _102133 B x f).
Proof. exact (fun_ext (fun y : type684 _102133 => @lem4044320 _102133 B x y f)). Qed.
Lemma lem4044322 {_102133 : Type'} : (@ex ((_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044323 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1350 _102133 B x f) = (term1333 _102133 B x f).
Proof. exact (MK_COMB (@lem4044322 _102133) (@lem4044321 _102133 B x f)). Qed.
Lemma lem4044324 {_102133 B : Type'} (x : type529 _102133 B) : (term1351 _102133 B x) = (term1335 _102133 B x).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4044323 _102133 B x f)). Qed.
Lemma lem4044325 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4044326 {_102133 B : Type'} (x : type529 _102133 B) : (term1341 _102133 B x) = (term1337 _102133 B x).
Proof. exact (MK_COMB (@lem4044325 _102133 B) (@lem4044324 _102133 B x)). Qed.
Lemma lem4044327 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044328 {_102133 B : Type'} (x : type529 _102133 B) : (term1352 _102133 B x) = (term1353 _102133 B x).
Proof. exact (MK_COMB (@lem4044327) (@lem4044326 _102133 B x)). Qed.
Lemma lem4044329 {_102133 B : Type'} (x : type529 _102133 B) (f : _102133 -> B) : (term1344 _102133 B x f) = (term1345 _102133 B x f).
Proof. exact (eq_refl (term1344 _102133 B x f)). Qed.
Lemma lem4044330 {_102133 B : Type'} (y : type529 _102133 B) (f : _102133 -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4044331 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term1354 _102133 B x y f) = (term1355 _102133 B x y f).
Proof. exact (MK_COMB (@lem4044329 _102133 B x f) (@lem4044330 _102133 B y f)). Qed.
Lemma lem4044332 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term1355 _102133 B x y f) = (term1356 _102133 B x y f).
Proof. exact (eq_refl (term1355 _102133 B x y f)). Qed.
Lemma lem4044333 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) (f : _102133 -> B) : (term1354 _102133 B x y f) = (term1356 _102133 B x y f).
Proof. exact (TRANS (@lem4044331 _102133 B x y f) (@lem4044332 _102133 B x y f)). Qed.
Lemma lem4044334 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) : (term1357 _102133 B x y) = (term1358 _102133 B x y).
Proof. exact (fun_ext (fun f : _102133 -> B => @lem4044333 _102133 B x y f)). Qed.
Lemma lem4044335 {_102133 B : Type'} : (@all (_102133 -> B)) = (@all (_102133 -> B)).
Proof. exact (eq_refl (@all (_102133 -> B))). Qed.
Lemma lem4044336 {_102133 B : Type'} (x : type529 _102133 B) (y : type529 _102133 B) : (term1359 _102133 B x y) = (term1360 _102133 B x y).
Proof. exact (MK_COMB (@lem4044335 _102133 B) (@lem4044334 _102133 B x y)). Qed.
Lemma lem4044337 {_102133 B : Type'} (x : type529 _102133 B) : (term1361 _102133 B x) = (term1362 _102133 B x).
Proof. exact (fun_ext (fun y : type529 _102133 B => @lem4044336 _102133 B x y)). Qed.
Lemma lem4044338 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044339 {_102133 B : Type'} (x : type529 _102133 B) : (term1342 _102133 B x) = (term1363 _102133 B x).
Proof. exact (MK_COMB (@lem4044338 _102133 B) (@lem4044337 _102133 B x)). Qed.
Lemma lem4044340 {_102133 B : Type'} (x : type529 _102133 B) : ((term1341 _102133 B x) = (term1342 _102133 B x)) = ((term1337 _102133 B x) = (term1363 _102133 B x)).
Proof. exact (MK_COMB (@lem4044328 _102133 B x) (@lem4044339 _102133 B x)). Qed.
Lemma lem4044341 {_102133 B : Type'} (x : type529 _102133 B) : (term1337 _102133 B x) = (term1363 _102133 B x).
Proof. exact (EQ_MP (@lem4044340 _102133 B x) (@lem4044315 _102133 B x)). Qed.
Lemma lem4044342 {_102133 B : Type'} : (term1339 _102133 B) = (term1364 _102133 B).
Proof. exact (fun_ext (fun x : type529 _102133 B => @lem4044341 _102133 B x)). Qed.
Lemma lem4044343 {_102133 B : Type'} : (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)) = (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133)).
Proof. exact (eq_refl (@ex ((_102133 -> B) -> (_102133 -> Prop) -> _102133))). Qed.
Lemma lem4044344 {_102133 B : Type'} : (term1340 _102133 B) = (term1365 _102133 B).
Proof. exact (MK_COMB (@lem4044343 _102133 B) (@lem4044342 _102133 B)). Qed.
Lemma lem4044345 {_102133 B : Type'} : (term1319 _102133 B) = (term1365 _102133 B).
Proof. exact (TRANS (@lem4044311 _102133 B) (@lem4044344 _102133 B)). Qed.
Lemma lem4044347 {_102133 B : Type'} : (term1215 _102133 B) = (term1365 _102133 B).
Proof. exact (TRANS (@lem4044281 _102133 B) (@lem4044345 _102133 B)). Qed.
Lemma lem4044348 {_102133 B : Type'} : (term228 _102133 B) = (term1365 _102133 B).
Proof. exact (TRANS (@lem4043996 _102133 B) (@lem4044347 _102133 B)). Qed.
Lemma lem4044349 {_102133 B : Type'} (h1 : term228 _102133 B) : term1365 _102133 B.
Proof. exact (EQ_MP (@lem4044348 _102133 B) (@lem4039319 _102133 B h1)). Qed.
Lemma lem4044364 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term574 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (@lem17362 (term576 _102126 A s x f y) (x = y)). Qed.
Lemma lem4044365 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4044366 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term577 _102126 A s f x) = (term578 _102126 A s f x).
Proof. exact (@lem4044365 A (term300 _102126 A s f x)). Qed.
Lemma lem4044367 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term579 _102126 A s f x y) = (term299 _102126 A s f x y).
Proof. exact (eq_refl (term579 _102126 A s f x y)). Qed.
Lemma lem4044368 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4044369 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term580 _102126 A s f x y) = (term574 _102126 A s f x y).
Proof. exact (MK_COMB (@lem4044368) (@lem4044367 _102126 A s f x y)). Qed.
Lemma lem4044370 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term580 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (TRANS (@lem4044369 _102126 A s f x y) (@lem4044364 _102126 A s f x y)). Qed.
Lemma lem4044371 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term581 _102126 A s f x) = (term582 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4044370 _102126 A s f x y)). Qed.
Lemma lem4044372 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044373 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term578 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (MK_COMB (@lem4044372 A) (@lem4044371 _102126 A s f x)). Qed.
Lemma lem4044374 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term577 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (TRANS (@lem4044366 _102126 A s f x) (@lem4044373 _102126 A s f x)). Qed.
Lemma lem4044375 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4044376 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term584 _102126 A s f) = (term585 _102126 A s f).
Proof. exact (@lem4044375 A (term302 _102126 A s f)). Qed.
Lemma lem4044377 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term586 _102126 A s f x) = (term301 _102126 A s f x).
Proof. exact (eq_refl (term586 _102126 A s f x)). Qed.
Lemma lem4044378 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4044379 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term587 _102126 A s f x) = (term577 _102126 A s f x).
Proof. exact (MK_COMB (@lem4044378) (@lem4044377 _102126 A s f x)). Qed.
Lemma lem4044380 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term587 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (TRANS (@lem4044379 _102126 A s f x) (@lem4044374 _102126 A s f x)). Qed.
Lemma lem4044381 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term588 _102126 A s f) = (term589 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4044380 _102126 A s f x)). Qed.
Lemma lem4044382 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044383 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term585 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (MK_COMB (@lem4044382 A) (@lem4044381 _102126 A s f)). Qed.
Lemma lem4044384 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term584 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (TRANS (@lem4044376 _102126 A s f) (@lem4044383 _102126 A s f)). Qed.
Lemma lem4044385 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044386 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044387 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term592 _102126 A s f) = (term593 _102126 A s f).
Proof. exact (MK_COMB (@lem4044386) (@lem4044384 _102126 A s f)). Qed.
Lemma lem4044388 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1366 _102126 A f s) = (term1367 _102126 A f s).
Proof. exact (MK_COMB (@lem4044387 _102126 A s f) (@lem4044385 A s)). Qed.
Lemma lem4044389 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1368 _102126 A f s) = (term1366 _102126 A f s).
Proof. exact (@lem17045 (term303 _102126 A s f) (@FINITE A s)). Qed.
Lemma lem4044390 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1368 _102126 A f s) = (term1367 _102126 A f s).
Proof. exact (TRANS (@lem4044389 _102126 A f s) (@lem4044388 _102126 A f s)). Qed.
Lemma lem4044391 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044392 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044393 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1369 _102126 A f s) = (term1370 _102126 A f s).
Proof. exact (MK_COMB (@lem4044392) (@lem4044390 _102126 A f s)). Qed.
Lemma lem4044394 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1371 _102126 A f s) = (term1372 _102126 A f s).
Proof. exact (MK_COMB (@lem4044393 _102126 A f s) (@lem4044391 _102126 A f s)). Qed.
Lemma lem4044395 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term307 _102126 A f s) = (term1371 _102126 A f s).
Proof. exact (@lem17265 (term305 _102126 A f s) ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044396 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term307 _102126 A f s) = (term1372 _102126 A f s).
Proof. exact (TRANS (@lem4044395 _102126 A f s) (@lem4044394 _102126 A f s)). Qed.
Lemma lem4044397 {_102126 A : Type'} (f : A -> _102126) : (term308 _102126 A f) = (term1373 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044396 _102126 A f s)). Qed.
Lemma lem4044398 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044399 {_102126 A : Type'} (f : A -> _102126) : (term309 _102126 A f) = (term1374 _102126 A f).
Proof. exact (MK_COMB (@lem4044398 A) (@lem4044397 _102126 A f)). Qed.
Lemma lem4044400 {_102126 A : Type'} : (term310 _102126 A) = (term1375 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044399 _102126 A f)). Qed.
Lemma lem4044401 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044402 {_102126 A : Type'} : (term229 _102126 A) = (term1376 _102126 A).
Proof. exact (MK_COMB (@lem4044401 _102126 A) (@lem4044400 _102126 A)). Qed.
Lemma lem4044509 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044510 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044509 A P Q). Qed.
Lemma lem4044511 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1377 _102126 A f s) = (term1378 _102126 A f s).
Proof. exact (@lem4044510 A (term589 _102126 A s f) (term1204 A s)). Qed.
Lemma lem4044512 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term602 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (eq_refl (term602 _102126 A s f x)). Qed.
Lemma lem4044513 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term603 _102126 A s f) = (term589 _102126 A s f).
Proof. exact (fun_ext (fun x : A => @lem4044512 _102126 A s f x)). Qed.
Lemma lem4044514 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044515 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term604 _102126 A s f) = (term590 _102126 A s f).
Proof. exact (MK_COMB (@lem4044514 A) (@lem4044513 _102126 A s f)). Qed.
Lemma lem4044516 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044517 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) : (term605 _102126 A s f) = (term593 _102126 A s f).
Proof. exact (MK_COMB (@lem4044516) (@lem4044515 _102126 A s f)). Qed.
Lemma lem4044518 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044519 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1377 _102126 A f s) = (term1367 _102126 A f s).
Proof. exact (MK_COMB (@lem4044517 _102126 A s f) (@lem4044518 A s)). Qed.
Lemma lem4044520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044521 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1379 _102126 A f s) = (term1380 _102126 A f s).
Proof. exact (MK_COMB (@lem4044520) (@lem4044519 _102126 A f s)). Qed.
Lemma lem4044522 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term602 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (eq_refl (term602 _102126 A s f x)). Qed.
Lemma lem4044523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044524 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term608 _102126 A s f x) = (term609 _102126 A s f x).
Proof. exact (MK_COMB (@lem4044523) (@lem4044522 _102126 A s f x)). Qed.
Lemma lem4044525 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044526 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1381 _102126 A f x s) = (term1382 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044524 _102126 A s f x) (@lem4044525 A s)). Qed.
Lemma lem4044527 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1383 _102126 A f s) = (term1384 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044526 _102126 A f x s)). Qed.
Lemma lem4044528 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044529 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1378 _102126 A f s) = (term1385 _102126 A f s).
Proof. exact (MK_COMB (@lem4044528 A) (@lem4044527 _102126 A f s)). Qed.
Lemma lem4044530 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term1377 _102126 A f s) = (term1378 _102126 A f s)) = ((term1367 _102126 A f s) = (term1385 _102126 A f s)).
Proof. exact (MK_COMB (@lem4044521 _102126 A f s) (@lem4044529 _102126 A f s)). Qed.
Lemma lem4044531 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1367 _102126 A f s) = (term1385 _102126 A f s).
Proof. exact (EQ_MP (@lem4044530 _102126 A f s) (@lem4044511 _102126 A f s)). Qed.
Lemma lem4044533 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044534 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044533 A P Q). Qed.
Lemma lem4044535 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1386 _102126 A f x s) = (term1387 _102126 A f x s).
Proof. exact (@lem4044534 A (term582 _102126 A s f x) (term1204 A s)). Qed.
Lemma lem4044536 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term617 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (eq_refl (term617 _102126 A s f x y)). Qed.
Lemma lem4044537 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term618 _102126 A s f x) = (term582 _102126 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4044536 _102126 A s f x y)). Qed.
Lemma lem4044538 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044539 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term619 _102126 A s f x) = (term583 _102126 A s f x).
Proof. exact (MK_COMB (@lem4044538 A) (@lem4044537 _102126 A s f x)). Qed.
Lemma lem4044540 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044541 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) : (term620 _102126 A s f x) = (term609 _102126 A s f x).
Proof. exact (MK_COMB (@lem4044540) (@lem4044539 _102126 A s f x)). Qed.
Lemma lem4044542 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044543 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1386 _102126 A f x s) = (term1382 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044541 _102126 A s f x) (@lem4044542 A s)). Qed.
Lemma lem4044544 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044545 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1388 _102126 A f x s) = (term1389 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044544) (@lem4044543 _102126 A f x s)). Qed.
Lemma lem4044546 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term617 _102126 A s f x y) = (term575 _102126 A s f x y).
Proof. exact (eq_refl (term617 _102126 A s f x y)). Qed.
Lemma lem4044547 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044548 {_102126 A : Type'} (s : A -> Prop) (f : A -> _102126) (x : A) (y : A) : (term623 _102126 A s f x y) = (term624 _102126 A s f x y).
Proof. exact (MK_COMB (@lem4044547) (@lem4044546 _102126 A s f x y)). Qed.
Lemma lem4044549 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044550 {_102126 A : Type'} (f : A -> _102126) (x : A) (y : A) (s : A -> Prop) : (term1390 _102126 A f x y s) = (term1391 _102126 A f x y s).
Proof. exact (MK_COMB (@lem4044548 _102126 A s f x y) (@lem4044549 A s)). Qed.
Lemma lem4044551 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1392 _102126 A f x s) = (term1393 _102126 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4044550 _102126 A f x y s)). Qed.
Lemma lem4044552 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044553 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1387 _102126 A f x s) = (term1394 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044552 A) (@lem4044551 _102126 A f x s)). Qed.
Lemma lem4044554 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : ((term1386 _102126 A f x s) = (term1387 _102126 A f x s)) = ((term1382 _102126 A f x s) = (term1394 _102126 A f x s)).
Proof. exact (MK_COMB (@lem4044545 _102126 A f x s) (@lem4044553 _102126 A f x s)). Qed.
Lemma lem4044555 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1382 _102126 A f x s) = (term1394 _102126 A f x s).
Proof. exact (EQ_MP (@lem4044554 _102126 A f x s) (@lem4044535 _102126 A f x s)). Qed.
Lemma lem4044556 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1384 _102126 A f s) = (term1395 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044555 _102126 A f x s)). Qed.
Lemma lem4044557 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044558 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1385 _102126 A f s) = (term1396 _102126 A f s).
Proof. exact (MK_COMB (@lem4044557 A) (@lem4044556 _102126 A f s)). Qed.
Lemma lem4044559 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1367 _102126 A f s) = (term1396 _102126 A f s).
Proof. exact (TRANS (@lem4044531 _102126 A f s) (@lem4044558 _102126 A f s)). Qed.
Lemma lem4044560 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044561 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1370 _102126 A f s) = (term1397 _102126 A f s).
Proof. exact (MK_COMB (@lem4044560) (@lem4044559 _102126 A f s)). Qed.
Lemma lem4044562 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044563 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1372 _102126 A f s) = (term1398 _102126 A f s).
Proof. exact (MK_COMB (@lem4044561 _102126 A f s) (@lem4044562 _102126 A f s)). Qed.
Lemma lem4044565 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044566 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044565 A P Q). Qed.
Lemma lem4044567 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1399 _102126 A f s) = (term1400 _102126 A f s).
Proof. exact (@lem4044566 A (term1395 _102126 A f s) ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044568 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1401 _102126 A f s x) = (term1394 _102126 A f x s).
Proof. exact (eq_refl (term1401 _102126 A f s x)). Qed.
Lemma lem4044569 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1402 _102126 A f s) = (term1395 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044568 _102126 A f x s)). Qed.
Lemma lem4044570 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044571 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1403 _102126 A f s) = (term1396 _102126 A f s).
Proof. exact (MK_COMB (@lem4044570 A) (@lem4044569 _102126 A f s)). Qed.
Lemma lem4044572 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044573 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1404 _102126 A f s) = (term1397 _102126 A f s).
Proof. exact (MK_COMB (@lem4044572) (@lem4044571 _102126 A f s)). Qed.
Lemma lem4044574 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044575 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1399 _102126 A f s) = (term1398 _102126 A f s).
Proof. exact (MK_COMB (@lem4044573 _102126 A f s) (@lem4044574 _102126 A f s)). Qed.
Lemma lem4044576 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044577 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1405 _102126 A f s) = (term1406 _102126 A f s).
Proof. exact (MK_COMB (@lem4044576) (@lem4044575 _102126 A f s)). Qed.
Lemma lem4044578 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1401 _102126 A f s x) = (term1394 _102126 A f x s).
Proof. exact (eq_refl (term1401 _102126 A f s x)). Qed.
Lemma lem4044579 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044580 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1407 _102126 A f s x) = (term1408 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044579) (@lem4044578 _102126 A f x s)). Qed.
Lemma lem4044581 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044582 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1409 _102126 A x f s) = (term1410 _102126 A x f s).
Proof. exact (MK_COMB (@lem4044580 _102126 A f x s) (@lem4044581 _102126 A f s)). Qed.
Lemma lem4044583 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1411 _102126 A f s) = (term1412 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044582 _102126 A x f s)). Qed.
Lemma lem4044584 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044585 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1400 _102126 A f s) = (term1413 _102126 A f s).
Proof. exact (MK_COMB (@lem4044584 A) (@lem4044583 _102126 A f s)). Qed.
Lemma lem4044586 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term1399 _102126 A f s) = (term1400 _102126 A f s)) = ((term1398 _102126 A f s) = (term1413 _102126 A f s)).
Proof. exact (MK_COMB (@lem4044577 _102126 A f s) (@lem4044585 _102126 A f s)). Qed.
Lemma lem4044587 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1398 _102126 A f s) = (term1413 _102126 A f s).
Proof. exact (EQ_MP (@lem4044586 _102126 A f s) (@lem4044567 _102126 A f s)). Qed.
Lemma lem4044589 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044590 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044589 A P Q). Qed.
Lemma lem4044591 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1414 _102126 A x f s) = (term1415 _102126 A x f s).
Proof. exact (@lem4044590 A (term1393 _102126 A f x s) ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044592 {_102126 A : Type'} (f : A -> _102126) (x : A) (y : A) (s : A -> Prop) : (term1416 _102126 A f x s y) = (term1391 _102126 A f x y s).
Proof. exact (eq_refl (term1416 _102126 A f x s y)). Qed.
Lemma lem4044593 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1417 _102126 A f x s) = (term1393 _102126 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4044592 _102126 A f x y s)). Qed.
Lemma lem4044594 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044595 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1418 _102126 A f x s) = (term1394 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044594 A) (@lem4044593 _102126 A f x s)). Qed.
Lemma lem4044596 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044597 {_102126 A : Type'} (f : A -> _102126) (x : A) (s : A -> Prop) : (term1419 _102126 A f x s) = (term1408 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044596) (@lem4044595 _102126 A f x s)). Qed.
Lemma lem4044598 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044599 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1414 _102126 A x f s) = (term1410 _102126 A x f s).
Proof. exact (MK_COMB (@lem4044597 _102126 A f x s) (@lem4044598 _102126 A f s)). Qed.
Lemma lem4044600 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044601 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1420 _102126 A x f s) = (term1421 _102126 A x f s).
Proof. exact (MK_COMB (@lem4044600) (@lem4044599 _102126 A x f s)). Qed.
Lemma lem4044602 {_102126 A : Type'} (f : A -> _102126) (x : A) (y : A) (s : A -> Prop) : (term1416 _102126 A f x s y) = (term1391 _102126 A f x y s).
Proof. exact (eq_refl (term1416 _102126 A f x s y)). Qed.
Lemma lem4044603 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044604 {_102126 A : Type'} (f : A -> _102126) (x : A) (y : A) (s : A -> Prop) : (term1422 _102126 A f x s y) = (term1423 _102126 A f x y s).
Proof. exact (MK_COMB (@lem4044603) (@lem4044602 _102126 A f x y s)). Qed.
Lemma lem4044605 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : ((term298 _102126 A f s) = (@CARD A s)) = ((term298 _102126 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102126 A f s) = (@CARD A s))). Qed.
Lemma lem4044606 {_102126 A : Type'} (x : A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term1424 _102126 A x y f s) = (term1425 _102126 A x y f s).
Proof. exact (MK_COMB (@lem4044604 _102126 A f x y s) (@lem4044605 _102126 A f s)). Qed.
Lemma lem4044607 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1426 _102126 A x f s) = (term1427 _102126 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4044606 _102126 A x y f s)). Qed.
Lemma lem4044608 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044609 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1415 _102126 A x f s) = (term1428 _102126 A x f s).
Proof. exact (MK_COMB (@lem4044608 A) (@lem4044607 _102126 A x f s)). Qed.
Lemma lem4044610 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : ((term1414 _102126 A x f s) = (term1415 _102126 A x f s)) = ((term1410 _102126 A x f s) = (term1428 _102126 A x f s)).
Proof. exact (MK_COMB (@lem4044601 _102126 A x f s) (@lem4044609 _102126 A x f s)). Qed.
Lemma lem4044611 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1410 _102126 A x f s) = (term1428 _102126 A x f s).
Proof. exact (EQ_MP (@lem4044610 _102126 A x f s) (@lem4044591 _102126 A x f s)). Qed.
Lemma lem4044612 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1412 _102126 A f s) = (term1429 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044611 _102126 A x f s)). Qed.
Lemma lem4044613 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044614 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1413 _102126 A f s) = (term1430 _102126 A f s).
Proof. exact (MK_COMB (@lem4044613 A) (@lem4044612 _102126 A f s)). Qed.
Lemma lem4044615 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1398 _102126 A f s) = (term1430 _102126 A f s).
Proof. exact (TRANS (@lem4044587 _102126 A f s) (@lem4044614 _102126 A f s)). Qed.
Lemma lem4044616 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1372 _102126 A f s) = (term1430 _102126 A f s).
Proof. exact (TRANS (@lem4044563 _102126 A f s) (@lem4044615 _102126 A f s)). Qed.
Lemma lem4044617 {_102126 A : Type'} (f : A -> _102126) : (term1373 _102126 A f) = (term1431 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044616 _102126 A f s)). Qed.
Lemma lem4044618 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044619 {_102126 A : Type'} (f : A -> _102126) : (term1374 _102126 A f) = (term1432 _102126 A f).
Proof. exact (MK_COMB (@lem4044618 A) (@lem4044617 _102126 A f)). Qed.
Lemma lem4044621 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044622 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4044621 (A -> Prop) A P). Qed.
Lemma lem4044623 {_102126 A : Type'} (f : A -> _102126) : (term1433 _102126 A f) = (term1434 _102126 A f).
Proof. exact (@lem4044622 A (term1435 _102126 A f)). Qed.
Lemma lem4044624 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1436 _102126 A f s) = (term1429 _102126 A f s).
Proof. exact (eq_refl (term1436 _102126 A f s)). Qed.
Lemma lem4044625 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4044626 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) (x : A) : (term1437 _102126 A f s x) = (term1438 _102126 A f s x).
Proof. exact (MK_COMB (@lem4044624 _102126 A f s) (@lem4044625 A x)). Qed.
Lemma lem4044627 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1438 _102126 A f s x) = (term1428 _102126 A x f s).
Proof. exact (eq_refl (term1438 _102126 A f s x)). Qed.
Lemma lem4044628 {_102126 A : Type'} (x : A) (f : A -> _102126) (s : A -> Prop) : (term1437 _102126 A f s x) = (term1428 _102126 A x f s).
Proof. exact (TRANS (@lem4044626 _102126 A f s x) (@lem4044627 _102126 A x f s)). Qed.
Lemma lem4044629 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1439 _102126 A f s) = (term1429 _102126 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044628 _102126 A x f s)). Qed.
Lemma lem4044630 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044631 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1440 _102126 A f s) = (term1430 _102126 A f s).
Proof. exact (MK_COMB (@lem4044630 A) (@lem4044629 _102126 A f s)). Qed.
Lemma lem4044632 {_102126 A : Type'} (f : A -> _102126) : (term1441 _102126 A f) = (term1431 _102126 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044631 _102126 A f s)). Qed.
Lemma lem4044633 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044634 {_102126 A : Type'} (f : A -> _102126) : (term1433 _102126 A f) = (term1432 _102126 A f).
Proof. exact (MK_COMB (@lem4044633 A) (@lem4044632 _102126 A f)). Qed.
Lemma lem4044635 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044636 {_102126 A : Type'} (f : A -> _102126) : (term1442 _102126 A f) = (term1443 _102126 A f).
Proof. exact (MK_COMB (@lem4044635) (@lem4044634 _102126 A f)). Qed.
Lemma lem4044637 {_102126 A : Type'} (f : A -> _102126) (s : A -> Prop) : (term1436 _102126 A f s) = (term1429 _102126 A f s).
Proof. exact (eq_refl (term1436 _102126 A f s)). Qed.
Lemma lem4044638 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4044639 {_102126 A : Type'} (f : A -> _102126) (x : type684 A) (s : A -> Prop) : (term1444 _102126 A f x s) = (term1445 _102126 A f x s).
Proof. exact (MK_COMB (@lem4044637 _102126 A f s) (@lem4044638 A x s)). Qed.
Lemma lem4044640 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1445 _102126 A f x s) = (term1446 _102126 A x f s).
Proof. exact (eq_refl (term1445 _102126 A f x s)). Qed.
Lemma lem4044641 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1444 _102126 A f x s) = (term1446 _102126 A x f s).
Proof. exact (TRANS (@lem4044639 _102126 A f x s) (@lem4044640 _102126 A x f s)). Qed.
Lemma lem4044642 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1447 _102126 A f x) = (term1448 _102126 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044641 _102126 A x f s)). Qed.
Lemma lem4044643 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044644 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1449 _102126 A f x) = (term1450 _102126 A x f).
Proof. exact (MK_COMB (@lem4044643 A) (@lem4044642 _102126 A x f)). Qed.
Lemma lem4044645 {_102126 A : Type'} (f : A -> _102126) : (term1451 _102126 A f) = (term1452 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4044644 _102126 A x f)). Qed.
Lemma lem4044646 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4044647 {_102126 A : Type'} (f : A -> _102126) : (term1434 _102126 A f) = (term1453 _102126 A f).
Proof. exact (MK_COMB (@lem4044646 A) (@lem4044645 _102126 A f)). Qed.
Lemma lem4044648 {_102126 A : Type'} (f : A -> _102126) : ((term1433 _102126 A f) = (term1434 _102126 A f)) = ((term1432 _102126 A f) = (term1453 _102126 A f)).
Proof. exact (MK_COMB (@lem4044636 _102126 A f) (@lem4044647 _102126 A f)). Qed.
Lemma lem4044649 {_102126 A : Type'} (f : A -> _102126) : (term1432 _102126 A f) = (term1453 _102126 A f).
Proof. exact (EQ_MP (@lem4044648 _102126 A f) (@lem4044623 _102126 A f)). Qed.
Lemma lem4044651 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044652 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4044651 (A -> Prop) A P). Qed.
Lemma lem4044653 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1454 _102126 A x f) = (term1455 _102126 A x f).
Proof. exact (@lem4044652 A (term1456 _102126 A x f)). Qed.
Lemma lem4044654 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1457 _102126 A x f s) = (term1458 _102126 A x f s).
Proof. exact (eq_refl (term1457 _102126 A x f s)). Qed.
Lemma lem4044655 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4044656 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) (y : A) : (term1459 _102126 A x f s y) = (term1460 _102126 A x f s y).
Proof. exact (MK_COMB (@lem4044654 _102126 A x f s) (@lem4044655 A y)). Qed.
Lemma lem4044657 {_102126 A : Type'} (x : type684 A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term1460 _102126 A x f s y) = (term1461 _102126 A x y f s).
Proof. exact (eq_refl (term1460 _102126 A x f s y)). Qed.
Lemma lem4044658 {_102126 A : Type'} (x : type684 A) (y : A) (f : A -> _102126) (s : A -> Prop) : (term1459 _102126 A x f s y) = (term1461 _102126 A x y f s).
Proof. exact (TRANS (@lem4044656 _102126 A x f s y) (@lem4044657 _102126 A x y f s)). Qed.
Lemma lem4044659 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1462 _102126 A x f s) = (term1458 _102126 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4044658 _102126 A x y f s)). Qed.
Lemma lem4044660 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044661 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1463 _102126 A x f s) = (term1446 _102126 A x f s).
Proof. exact (MK_COMB (@lem4044660 A) (@lem4044659 _102126 A x f s)). Qed.
Lemma lem4044662 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1464 _102126 A x f) = (term1448 _102126 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044661 _102126 A x f s)). Qed.
Lemma lem4044663 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044664 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1454 _102126 A x f) = (term1450 _102126 A x f).
Proof. exact (MK_COMB (@lem4044663 A) (@lem4044662 _102126 A x f)). Qed.
Lemma lem4044665 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044666 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1465 _102126 A x f) = (term1466 _102126 A x f).
Proof. exact (MK_COMB (@lem4044665) (@lem4044664 _102126 A x f)). Qed.
Lemma lem4044667 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1457 _102126 A x f s) = (term1458 _102126 A x f s).
Proof. exact (eq_refl (term1457 _102126 A x f s)). Qed.
Lemma lem4044668 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4044669 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) (y : type684 A) (s : A -> Prop) : (term1467 _102126 A x f y s) = (term1468 _102126 A x f y s).
Proof. exact (MK_COMB (@lem4044667 _102126 A x f s) (@lem4044668 A y s)). Qed.
Lemma lem4044670 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1468 _102126 A x f y s) = (term1469 _102126 A x y f s).
Proof. exact (eq_refl (term1468 _102126 A x f y s)). Qed.
Lemma lem4044671 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) (s : A -> Prop) : (term1467 _102126 A x f y s) = (term1469 _102126 A x y f s).
Proof. exact (TRANS (@lem4044669 _102126 A x f y s) (@lem4044670 _102126 A x y f s)). Qed.
Lemma lem4044672 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) : (term1470 _102126 A x f y) = (term1471 _102126 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044671 _102126 A x y f s)). Qed.
Lemma lem4044673 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044674 {_102126 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102126) : (term1472 _102126 A x f y) = (term1473 _102126 A x y f).
Proof. exact (MK_COMB (@lem4044673 A) (@lem4044672 _102126 A x y f)). Qed.
Lemma lem4044675 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1474 _102126 A x f) = (term1475 _102126 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4044674 _102126 A x y f)). Qed.
Lemma lem4044676 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4044677 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1455 _102126 A x f) = (term1476 _102126 A x f).
Proof. exact (MK_COMB (@lem4044676 A) (@lem4044675 _102126 A x f)). Qed.
Lemma lem4044678 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : ((term1454 _102126 A x f) = (term1455 _102126 A x f)) = ((term1450 _102126 A x f) = (term1476 _102126 A x f)).
Proof. exact (MK_COMB (@lem4044666 _102126 A x f) (@lem4044677 _102126 A x f)). Qed.
Lemma lem4044679 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1450 _102126 A x f) = (term1476 _102126 A x f).
Proof. exact (EQ_MP (@lem4044678 _102126 A x f) (@lem4044653 _102126 A x f)). Qed.
Lemma lem4044680 {_102126 A : Type'} (f : A -> _102126) : (term1452 _102126 A f) = (term1477 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4044679 _102126 A x f)). Qed.
Lemma lem4044681 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4044682 {_102126 A : Type'} (f : A -> _102126) : (term1453 _102126 A f) = (term1478 _102126 A f).
Proof. exact (MK_COMB (@lem4044681 A) (@lem4044680 _102126 A f)). Qed.
Lemma lem4044683 {_102126 A : Type'} (f : A -> _102126) : (term1432 _102126 A f) = (term1478 _102126 A f).
Proof. exact (TRANS (@lem4044649 _102126 A f) (@lem4044682 _102126 A f)). Qed.
Lemma lem4044684 {_102126 A : Type'} (f : A -> _102126) : (term1374 _102126 A f) = (term1478 _102126 A f).
Proof. exact (TRANS (@lem4044619 _102126 A f) (@lem4044683 _102126 A f)). Qed.
Lemma lem4044685 {_102126 A : Type'} : (term1375 _102126 A) = (term1479 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044684 _102126 A f)). Qed.
Lemma lem4044686 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044687 {_102126 A : Type'} : (term1376 _102126 A) = (term1480 _102126 A).
Proof. exact (MK_COMB (@lem4044686 _102126 A) (@lem4044685 _102126 A)). Qed.
Lemma lem4044689 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044690 {_102126 A : Type'} (P : type776 _102126 A) : (term682 _102126 A P) = (term683 _102126 A P).
Proof. exact (@lem4044689 (A -> _102126) (type684 A) P). Qed.
Lemma lem4044691 {_102126 A : Type'} : (term1481 _102126 A) = (term1482 _102126 A).
Proof. exact (@lem4044690 _102126 A (term1483 _102126 A)). Qed.
Lemma lem4044692 {_102126 A : Type'} (f : A -> _102126) : (term1484 _102126 A f) = (term1477 _102126 A f).
Proof. exact (eq_refl (term1484 _102126 A f)). Qed.
Lemma lem4044693 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4044694 {_102126 A : Type'} (f : A -> _102126) (x : type684 A) : (term1485 _102126 A f x) = (term1486 _102126 A f x).
Proof. exact (MK_COMB (@lem4044692 _102126 A f) (@lem4044693 A x)). Qed.
Lemma lem4044695 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1486 _102126 A f x) = (term1476 _102126 A x f).
Proof. exact (eq_refl (term1486 _102126 A f x)). Qed.
Lemma lem4044696 {_102126 A : Type'} (x : type684 A) (f : A -> _102126) : (term1485 _102126 A f x) = (term1476 _102126 A x f).
Proof. exact (TRANS (@lem4044694 _102126 A f x) (@lem4044695 _102126 A x f)). Qed.
Lemma lem4044697 {_102126 A : Type'} (f : A -> _102126) : (term1487 _102126 A f) = (term1477 _102126 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4044696 _102126 A x f)). Qed.
Lemma lem4044698 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4044699 {_102126 A : Type'} (f : A -> _102126) : (term1488 _102126 A f) = (term1478 _102126 A f).
Proof. exact (MK_COMB (@lem4044698 A) (@lem4044697 _102126 A f)). Qed.
Lemma lem4044700 {_102126 A : Type'} : (term1489 _102126 A) = (term1479 _102126 A).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044699 _102126 A f)). Qed.
Lemma lem4044701 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044702 {_102126 A : Type'} : (term1481 _102126 A) = (term1480 _102126 A).
Proof. exact (MK_COMB (@lem4044701 _102126 A) (@lem4044700 _102126 A)). Qed.
Lemma lem4044703 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044704 {_102126 A : Type'} : (term1490 _102126 A) = (term1491 _102126 A).
Proof. exact (MK_COMB (@lem4044703) (@lem4044702 _102126 A)). Qed.
Lemma lem4044705 {_102126 A : Type'} (f : A -> _102126) : (term1484 _102126 A f) = (term1477 _102126 A f).
Proof. exact (eq_refl (term1484 _102126 A f)). Qed.
Lemma lem4044706 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4044707 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1492 _102126 A x f) = (term1493 _102126 A x f).
Proof. exact (MK_COMB (@lem4044705 _102126 A f) (@lem4044706 _102126 A x f)). Qed.
Lemma lem4044708 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1493 _102126 A x f) = (term1494 _102126 A x f).
Proof. exact (eq_refl (term1493 _102126 A x f)). Qed.
Lemma lem4044709 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1492 _102126 A x f) = (term1494 _102126 A x f).
Proof. exact (TRANS (@lem4044707 _102126 A x f) (@lem4044708 _102126 A x f)). Qed.
Lemma lem4044710 {_102126 A : Type'} (x : type791 _102126 A) : (term1495 _102126 A x) = (term1496 _102126 A x).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044709 _102126 A x f)). Qed.
Lemma lem4044711 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044712 {_102126 A : Type'} (x : type791 _102126 A) : (term1497 _102126 A x) = (term1498 _102126 A x).
Proof. exact (MK_COMB (@lem4044711 _102126 A) (@lem4044710 _102126 A x)). Qed.
Lemma lem4044713 {_102126 A : Type'} : (term1499 _102126 A) = (term1500 _102126 A).
Proof. exact (fun_ext (fun x : type791 _102126 A => @lem4044712 _102126 A x)). Qed.
Lemma lem4044714 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4044715 {_102126 A : Type'} : (term1482 _102126 A) = (term1501 _102126 A).
Proof. exact (MK_COMB (@lem4044714 _102126 A) (@lem4044713 _102126 A)). Qed.
Lemma lem4044716 {_102126 A : Type'} : ((term1481 _102126 A) = (term1482 _102126 A)) = ((term1480 _102126 A) = (term1501 _102126 A)).
Proof. exact (MK_COMB (@lem4044704 _102126 A) (@lem4044715 _102126 A)). Qed.
Lemma lem4044717 {_102126 A : Type'} : (term1480 _102126 A) = (term1501 _102126 A).
Proof. exact (EQ_MP (@lem4044716 _102126 A) (@lem4044691 _102126 A)). Qed.
Lemma lem4044719 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4044720 {_102126 A : Type'} (P : type776 _102126 A) : (term682 _102126 A P) = (term683 _102126 A P).
Proof. exact (@lem4044719 (A -> _102126) (type684 A) P). Qed.
Lemma lem4044721 {_102126 A : Type'} (x : type791 _102126 A) : (term1502 _102126 A x) = (term1503 _102126 A x).
Proof. exact (@lem4044720 _102126 A (term1504 _102126 A x)). Qed.
Lemma lem4044722 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1505 _102126 A x f) = (term1506 _102126 A x f).
Proof. exact (eq_refl (term1505 _102126 A x f)). Qed.
Lemma lem4044723 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4044724 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) (y : type684 A) : (term1507 _102126 A x f y) = (term1508 _102126 A x f y).
Proof. exact (MK_COMB (@lem4044722 _102126 A x f) (@lem4044723 A y)). Qed.
Lemma lem4044725 {_102126 A : Type'} (x : type791 _102126 A) (y : type684 A) (f : A -> _102126) : (term1508 _102126 A x f y) = (term1509 _102126 A x y f).
Proof. exact (eq_refl (term1508 _102126 A x f y)). Qed.
Lemma lem4044726 {_102126 A : Type'} (x : type791 _102126 A) (y : type684 A) (f : A -> _102126) : (term1507 _102126 A x f y) = (term1509 _102126 A x y f).
Proof. exact (TRANS (@lem4044724 _102126 A x f y) (@lem4044725 _102126 A x y f)). Qed.
Lemma lem4044727 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1510 _102126 A x f) = (term1506 _102126 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4044726 _102126 A x y f)). Qed.
Lemma lem4044728 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4044729 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1511 _102126 A x f) = (term1494 _102126 A x f).
Proof. exact (MK_COMB (@lem4044728 A) (@lem4044727 _102126 A x f)). Qed.
Lemma lem4044730 {_102126 A : Type'} (x : type791 _102126 A) : (term1512 _102126 A x) = (term1496 _102126 A x).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044729 _102126 A x f)). Qed.
Lemma lem4044731 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044732 {_102126 A : Type'} (x : type791 _102126 A) : (term1502 _102126 A x) = (term1498 _102126 A x).
Proof. exact (MK_COMB (@lem4044731 _102126 A) (@lem4044730 _102126 A x)). Qed.
Lemma lem4044733 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044734 {_102126 A : Type'} (x : type791 _102126 A) : (term1513 _102126 A x) = (term1514 _102126 A x).
Proof. exact (MK_COMB (@lem4044733) (@lem4044732 _102126 A x)). Qed.
Lemma lem4044735 {_102126 A : Type'} (x : type791 _102126 A) (f : A -> _102126) : (term1505 _102126 A x f) = (term1506 _102126 A x f).
Proof. exact (eq_refl (term1505 _102126 A x f)). Qed.
Lemma lem4044736 {_102126 A : Type'} (y : type791 _102126 A) (f : A -> _102126) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4044737 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term1515 _102126 A x y f) = (term1516 _102126 A x y f).
Proof. exact (MK_COMB (@lem4044735 _102126 A x f) (@lem4044736 _102126 A y f)). Qed.
Lemma lem4044738 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term1516 _102126 A x y f) = (term1517 _102126 A x y f).
Proof. exact (eq_refl (term1516 _102126 A x y f)). Qed.
Lemma lem4044739 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) (f : A -> _102126) : (term1515 _102126 A x y f) = (term1517 _102126 A x y f).
Proof. exact (TRANS (@lem4044737 _102126 A x y f) (@lem4044738 _102126 A x y f)). Qed.
Lemma lem4044740 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) : (term1518 _102126 A x y) = (term1519 _102126 A x y).
Proof. exact (fun_ext (fun f : A -> _102126 => @lem4044739 _102126 A x y f)). Qed.
Lemma lem4044741 {_102126 A : Type'} : (@all (A -> _102126)) = (@all (A -> _102126)).
Proof. exact (eq_refl (@all (A -> _102126))). Qed.
Lemma lem4044742 {_102126 A : Type'} (x : type791 _102126 A) (y : type791 _102126 A) : (term1520 _102126 A x y) = (term1521 _102126 A x y).
Proof. exact (MK_COMB (@lem4044741 _102126 A) (@lem4044740 _102126 A x y)). Qed.
Lemma lem4044743 {_102126 A : Type'} (x : type791 _102126 A) : (term1522 _102126 A x) = (term1523 _102126 A x).
Proof. exact (fun_ext (fun y : type791 _102126 A => @lem4044742 _102126 A x y)). Qed.
Lemma lem4044744 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4044745 {_102126 A : Type'} (x : type791 _102126 A) : (term1503 _102126 A x) = (term1524 _102126 A x).
Proof. exact (MK_COMB (@lem4044744 _102126 A) (@lem4044743 _102126 A x)). Qed.
Lemma lem4044746 {_102126 A : Type'} (x : type791 _102126 A) : ((term1502 _102126 A x) = (term1503 _102126 A x)) = ((term1498 _102126 A x) = (term1524 _102126 A x)).
Proof. exact (MK_COMB (@lem4044734 _102126 A x) (@lem4044745 _102126 A x)). Qed.
Lemma lem4044747 {_102126 A : Type'} (x : type791 _102126 A) : (term1498 _102126 A x) = (term1524 _102126 A x).
Proof. exact (EQ_MP (@lem4044746 _102126 A x) (@lem4044721 _102126 A x)). Qed.
Lemma lem4044748 {_102126 A : Type'} : (term1500 _102126 A) = (term1525 _102126 A).
Proof. exact (fun_ext (fun x : type791 _102126 A => @lem4044747 _102126 A x)). Qed.
Lemma lem4044749 {_102126 A : Type'} : (@ex ((A -> _102126) -> (A -> Prop) -> A)) = (@ex ((A -> _102126) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102126) -> (A -> Prop) -> A))). Qed.
Lemma lem4044750 {_102126 A : Type'} : (term1501 _102126 A) = (term1526 _102126 A).
Proof. exact (MK_COMB (@lem4044749 _102126 A) (@lem4044748 _102126 A)). Qed.
Lemma lem4044751 {_102126 A : Type'} : (term1480 _102126 A) = (term1526 _102126 A).
Proof. exact (TRANS (@lem4044717 _102126 A) (@lem4044750 _102126 A)). Qed.
Lemma lem4044753 {_102126 A : Type'} : (term1376 _102126 A) = (term1526 _102126 A).
Proof. exact (TRANS (@lem4044687 _102126 A) (@lem4044751 _102126 A)). Qed.
Lemma lem4044754 {_102126 A : Type'} : (term229 _102126 A) = (term1526 _102126 A).
Proof. exact (TRANS (@lem4044402 _102126 A) (@lem4044753 _102126 A)). Qed.
Lemma lem4044755 {_102126 A : Type'} (h1 : term229 _102126 A) : term1526 _102126 A.
Proof. exact (EQ_MP (@lem4044754 _102126 A) (@lem4039320 _102126 A h1)). Qed.
Lemma lem4044770 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term574 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (@lem17362 (term576 _102133 A s x f y) (x = y)). Qed.
Lemma lem4044771 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4044772 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term577 _102133 A s f x) = (term578 _102133 A s f x).
Proof. exact (@lem4044771 A (term300 _102133 A s f x)). Qed.
Lemma lem4044773 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term579 _102133 A s f x y) = (term299 _102133 A s f x y).
Proof. exact (eq_refl (term579 _102133 A s f x y)). Qed.
Lemma lem4044774 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4044775 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term580 _102133 A s f x y) = (term574 _102133 A s f x y).
Proof. exact (MK_COMB (@lem4044774) (@lem4044773 _102133 A s f x y)). Qed.
Lemma lem4044776 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term580 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (TRANS (@lem4044775 _102133 A s f x y) (@lem4044770 _102133 A s f x y)). Qed.
Lemma lem4044777 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term581 _102133 A s f x) = (term582 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4044776 _102133 A s f x y)). Qed.
Lemma lem4044778 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044779 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term578 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (MK_COMB (@lem4044778 A) (@lem4044777 _102133 A s f x)). Qed.
Lemma lem4044780 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term577 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (TRANS (@lem4044772 _102133 A s f x) (@lem4044779 _102133 A s f x)). Qed.
Lemma lem4044781 {A : Type'} (P : A -> Prop) : (term413 A P) = (term414 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4044782 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term584 _102133 A s f) = (term585 _102133 A s f).
Proof. exact (@lem4044781 A (term302 _102133 A s f)). Qed.
Lemma lem4044783 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term586 _102133 A s f x) = (term301 _102133 A s f x).
Proof. exact (eq_refl (term586 _102133 A s f x)). Qed.
Lemma lem4044784 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4044785 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term587 _102133 A s f x) = (term577 _102133 A s f x).
Proof. exact (MK_COMB (@lem4044784) (@lem4044783 _102133 A s f x)). Qed.
Lemma lem4044786 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term587 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (TRANS (@lem4044785 _102133 A s f x) (@lem4044780 _102133 A s f x)). Qed.
Lemma lem4044787 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term588 _102133 A s f) = (term589 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4044786 _102133 A s f x)). Qed.
Lemma lem4044788 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044789 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term585 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (MK_COMB (@lem4044788 A) (@lem4044787 _102133 A s f)). Qed.
Lemma lem4044790 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term584 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (TRANS (@lem4044782 _102133 A s f) (@lem4044789 _102133 A s f)). Qed.
Lemma lem4044791 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044792 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044793 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term592 _102133 A s f) = (term593 _102133 A s f).
Proof. exact (MK_COMB (@lem4044792) (@lem4044790 _102133 A s f)). Qed.
Lemma lem4044794 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1366 _102133 A f s) = (term1367 _102133 A f s).
Proof. exact (MK_COMB (@lem4044793 _102133 A s f) (@lem4044791 A s)). Qed.
Lemma lem4044795 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1368 _102133 A f s) = (term1366 _102133 A f s).
Proof. exact (@lem17045 (term303 _102133 A s f) (@FINITE A s)). Qed.
Lemma lem4044796 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1368 _102133 A f s) = (term1367 _102133 A f s).
Proof. exact (TRANS (@lem4044795 _102133 A f s) (@lem4044794 _102133 A f s)). Qed.
Lemma lem4044797 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044798 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044799 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1369 _102133 A f s) = (term1370 _102133 A f s).
Proof. exact (MK_COMB (@lem4044798) (@lem4044796 _102133 A f s)). Qed.
Lemma lem4044800 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1371 _102133 A f s) = (term1372 _102133 A f s).
Proof. exact (MK_COMB (@lem4044799 _102133 A f s) (@lem4044797 _102133 A f s)). Qed.
Lemma lem4044801 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term307 _102133 A f s) = (term1371 _102133 A f s).
Proof. exact (@lem17265 (term305 _102133 A f s) ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044802 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term307 _102133 A f s) = (term1372 _102133 A f s).
Proof. exact (TRANS (@lem4044801 _102133 A f s) (@lem4044800 _102133 A f s)). Qed.
Lemma lem4044803 {_102133 A : Type'} (f : A -> _102133) : (term308 _102133 A f) = (term1373 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4044802 _102133 A f s)). Qed.
Lemma lem4044804 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4044805 {_102133 A : Type'} (f : A -> _102133) : (term309 _102133 A f) = (term1374 _102133 A f).
Proof. exact (MK_COMB (@lem4044804 A) (@lem4044803 _102133 A f)). Qed.
Lemma lem4044806 {_102133 A : Type'} : (term310 _102133 A) = (term1375 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4044805 _102133 A f)). Qed.
Lemma lem4044807 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4044808 {_102133 A : Type'} : (term229 _102133 A) = (term1376 _102133 A).
Proof. exact (MK_COMB (@lem4044807 _102133 A) (@lem4044806 _102133 A)). Qed.
Lemma lem4044915 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044916 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044915 A P Q). Qed.
Lemma lem4044917 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1377 _102133 A f s) = (term1378 _102133 A f s).
Proof. exact (@lem4044916 A (term589 _102133 A s f) (term1204 A s)). Qed.
Lemma lem4044918 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term602 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (eq_refl (term602 _102133 A s f x)). Qed.
Lemma lem4044919 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term603 _102133 A s f) = (term589 _102133 A s f).
Proof. exact (fun_ext (fun x : A => @lem4044918 _102133 A s f x)). Qed.
Lemma lem4044920 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044921 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term604 _102133 A s f) = (term590 _102133 A s f).
Proof. exact (MK_COMB (@lem4044920 A) (@lem4044919 _102133 A s f)). Qed.
Lemma lem4044922 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044923 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) : (term605 _102133 A s f) = (term593 _102133 A s f).
Proof. exact (MK_COMB (@lem4044922) (@lem4044921 _102133 A s f)). Qed.
Lemma lem4044924 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044925 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1377 _102133 A f s) = (term1367 _102133 A f s).
Proof. exact (MK_COMB (@lem4044923 _102133 A s f) (@lem4044924 A s)). Qed.
Lemma lem4044926 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044927 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1379 _102133 A f s) = (term1380 _102133 A f s).
Proof. exact (MK_COMB (@lem4044926) (@lem4044925 _102133 A f s)). Qed.
Lemma lem4044928 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term602 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (eq_refl (term602 _102133 A s f x)). Qed.
Lemma lem4044929 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044930 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term608 _102133 A s f x) = (term609 _102133 A s f x).
Proof. exact (MK_COMB (@lem4044929) (@lem4044928 _102133 A s f x)). Qed.
Lemma lem4044931 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044932 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1381 _102133 A f x s) = (term1382 _102133 A f x s).
Proof. exact (MK_COMB (@lem4044930 _102133 A s f x) (@lem4044931 A s)). Qed.
Lemma lem4044933 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1383 _102133 A f s) = (term1384 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044932 _102133 A f x s)). Qed.
Lemma lem4044934 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044935 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1378 _102133 A f s) = (term1385 _102133 A f s).
Proof. exact (MK_COMB (@lem4044934 A) (@lem4044933 _102133 A f s)). Qed.
Lemma lem4044936 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term1377 _102133 A f s) = (term1378 _102133 A f s)) = ((term1367 _102133 A f s) = (term1385 _102133 A f s)).
Proof. exact (MK_COMB (@lem4044927 _102133 A f s) (@lem4044935 _102133 A f s)). Qed.
Lemma lem4044937 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1367 _102133 A f s) = (term1385 _102133 A f s).
Proof. exact (EQ_MP (@lem4044936 _102133 A f s) (@lem4044917 _102133 A f s)). Qed.
Lemma lem4044939 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044940 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044939 A P Q). Qed.
Lemma lem4044941 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1386 _102133 A f x s) = (term1387 _102133 A f x s).
Proof. exact (@lem4044940 A (term582 _102133 A s f x) (term1204 A s)). Qed.
Lemma lem4044942 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term617 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (eq_refl (term617 _102133 A s f x y)). Qed.
Lemma lem4044943 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term618 _102133 A s f x) = (term582 _102133 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4044942 _102133 A s f x y)). Qed.
Lemma lem4044944 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044945 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term619 _102133 A s f x) = (term583 _102133 A s f x).
Proof. exact (MK_COMB (@lem4044944 A) (@lem4044943 _102133 A s f x)). Qed.
Lemma lem4044946 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044947 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) : (term620 _102133 A s f x) = (term609 _102133 A s f x).
Proof. exact (MK_COMB (@lem4044946) (@lem4044945 _102133 A s f x)). Qed.
Lemma lem4044948 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044949 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1386 _102133 A f x s) = (term1382 _102133 A f x s).
Proof. exact (MK_COMB (@lem4044947 _102133 A s f x) (@lem4044948 A s)). Qed.
Lemma lem4044950 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044951 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1388 _102133 A f x s) = (term1389 _102133 A f x s).
Proof. exact (MK_COMB (@lem4044950) (@lem4044949 _102133 A f x s)). Qed.
Lemma lem4044952 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term617 _102133 A s f x y) = (term575 _102133 A s f x y).
Proof. exact (eq_refl (term617 _102133 A s f x y)). Qed.
Lemma lem4044953 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044954 {_102133 A : Type'} (s : A -> Prop) (f : A -> _102133) (x : A) (y : A) : (term623 _102133 A s f x y) = (term624 _102133 A s f x y).
Proof. exact (MK_COMB (@lem4044953) (@lem4044952 _102133 A s f x y)). Qed.
Lemma lem4044955 {A : Type'} (s : A -> Prop) : (term1204 A s) = (term1204 A s).
Proof. exact (eq_refl (term1204 A s)). Qed.
Lemma lem4044956 {_102133 A : Type'} (f : A -> _102133) (x : A) (y : A) (s : A -> Prop) : (term1390 _102133 A f x y s) = (term1391 _102133 A f x y s).
Proof. exact (MK_COMB (@lem4044954 _102133 A s f x y) (@lem4044955 A s)). Qed.
Lemma lem4044957 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1392 _102133 A f x s) = (term1393 _102133 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4044956 _102133 A f x y s)). Qed.
Lemma lem4044958 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044959 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1387 _102133 A f x s) = (term1394 _102133 A f x s).
Proof. exact (MK_COMB (@lem4044958 A) (@lem4044957 _102133 A f x s)). Qed.
Lemma lem4044960 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : ((term1386 _102133 A f x s) = (term1387 _102133 A f x s)) = ((term1382 _102133 A f x s) = (term1394 _102133 A f x s)).
Proof. exact (MK_COMB (@lem4044951 _102133 A f x s) (@lem4044959 _102133 A f x s)). Qed.
Lemma lem4044961 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1382 _102133 A f x s) = (term1394 _102133 A f x s).
Proof. exact (EQ_MP (@lem4044960 _102133 A f x s) (@lem4044941 _102133 A f x s)). Qed.
Lemma lem4044962 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1384 _102133 A f s) = (term1395 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044961 _102133 A f x s)). Qed.
Lemma lem4044963 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044964 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1385 _102133 A f s) = (term1396 _102133 A f s).
Proof. exact (MK_COMB (@lem4044963 A) (@lem4044962 _102133 A f s)). Qed.
Lemma lem4044965 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1367 _102133 A f s) = (term1396 _102133 A f s).
Proof. exact (TRANS (@lem4044937 _102133 A f s) (@lem4044964 _102133 A f s)). Qed.
Lemma lem4044966 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044967 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1370 _102133 A f s) = (term1397 _102133 A f s).
Proof. exact (MK_COMB (@lem4044966) (@lem4044965 _102133 A f s)). Qed.
Lemma lem4044968 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044969 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1372 _102133 A f s) = (term1398 _102133 A f s).
Proof. exact (MK_COMB (@lem4044967 _102133 A f s) (@lem4044968 _102133 A f s)). Qed.
Lemma lem4044971 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044972 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044971 A P Q). Qed.
Lemma lem4044973 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1399 _102133 A f s) = (term1400 _102133 A f s).
Proof. exact (@lem4044972 A (term1395 _102133 A f s) ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044974 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1401 _102133 A f s x) = (term1394 _102133 A f x s).
Proof. exact (eq_refl (term1401 _102133 A f s x)). Qed.
Lemma lem4044975 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1402 _102133 A f s) = (term1395 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044974 _102133 A f x s)). Qed.
Lemma lem4044976 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044977 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1403 _102133 A f s) = (term1396 _102133 A f s).
Proof. exact (MK_COMB (@lem4044976 A) (@lem4044975 _102133 A f s)). Qed.
Lemma lem4044978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044979 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1404 _102133 A f s) = (term1397 _102133 A f s).
Proof. exact (MK_COMB (@lem4044978) (@lem4044977 _102133 A f s)). Qed.
Lemma lem4044980 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044981 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1399 _102133 A f s) = (term1398 _102133 A f s).
Proof. exact (MK_COMB (@lem4044979 _102133 A f s) (@lem4044980 _102133 A f s)). Qed.
Lemma lem4044982 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4044983 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1405 _102133 A f s) = (term1406 _102133 A f s).
Proof. exact (MK_COMB (@lem4044982) (@lem4044981 _102133 A f s)). Qed.
Lemma lem4044984 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1401 _102133 A f s x) = (term1394 _102133 A f x s).
Proof. exact (eq_refl (term1401 _102133 A f s x)). Qed.
Lemma lem4044985 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4044986 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1407 _102133 A f s x) = (term1408 _102133 A f x s).
Proof. exact (MK_COMB (@lem4044985) (@lem4044984 _102133 A f x s)). Qed.
Lemma lem4044987 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044988 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1409 _102133 A x f s) = (term1410 _102133 A x f s).
Proof. exact (MK_COMB (@lem4044986 _102133 A f x s) (@lem4044987 _102133 A f s)). Qed.
Lemma lem4044989 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1411 _102133 A f s) = (term1412 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4044988 _102133 A x f s)). Qed.
Lemma lem4044990 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4044991 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1400 _102133 A f s) = (term1413 _102133 A f s).
Proof. exact (MK_COMB (@lem4044990 A) (@lem4044989 _102133 A f s)). Qed.
Lemma lem4044992 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term1399 _102133 A f s) = (term1400 _102133 A f s)) = ((term1398 _102133 A f s) = (term1413 _102133 A f s)).
Proof. exact (MK_COMB (@lem4044983 _102133 A f s) (@lem4044991 _102133 A f s)). Qed.
Lemma lem4044993 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1398 _102133 A f s) = (term1413 _102133 A f s).
Proof. exact (EQ_MP (@lem4044992 _102133 A f s) (@lem4044973 _102133 A f s)). Qed.
Lemma lem4044995 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4044996 {A : Type'} (P : A -> Prop) (Q : Prop) : (term438 A P Q) = (term439 A P Q).
Proof. exact (@lem4044995 A P Q). Qed.
Lemma lem4044997 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1414 _102133 A x f s) = (term1415 _102133 A x f s).
Proof. exact (@lem4044996 A (term1393 _102133 A f x s) ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4044998 {_102133 A : Type'} (f : A -> _102133) (x : A) (y : A) (s : A -> Prop) : (term1416 _102133 A f x s y) = (term1391 _102133 A f x y s).
Proof. exact (eq_refl (term1416 _102133 A f x s y)). Qed.
Lemma lem4044999 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1417 _102133 A f x s) = (term1393 _102133 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4044998 _102133 A f x y s)). Qed.
Lemma lem4045000 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4045001 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1418 _102133 A f x s) = (term1394 _102133 A f x s).
Proof. exact (MK_COMB (@lem4045000 A) (@lem4044999 _102133 A f x s)). Qed.
Lemma lem4045002 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045003 {_102133 A : Type'} (f : A -> _102133) (x : A) (s : A -> Prop) : (term1419 _102133 A f x s) = (term1408 _102133 A f x s).
Proof. exact (MK_COMB (@lem4045002) (@lem4045001 _102133 A f x s)). Qed.
Lemma lem4045004 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4045005 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1414 _102133 A x f s) = (term1410 _102133 A x f s).
Proof. exact (MK_COMB (@lem4045003 _102133 A f x s) (@lem4045004 _102133 A f s)). Qed.
Lemma lem4045006 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4045007 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1420 _102133 A x f s) = (term1421 _102133 A x f s).
Proof. exact (MK_COMB (@lem4045006) (@lem4045005 _102133 A x f s)). Qed.
Lemma lem4045008 {_102133 A : Type'} (f : A -> _102133) (x : A) (y : A) (s : A -> Prop) : (term1416 _102133 A f x s y) = (term1391 _102133 A f x y s).
Proof. exact (eq_refl (term1416 _102133 A f x s y)). Qed.
Lemma lem4045009 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045010 {_102133 A : Type'} (f : A -> _102133) (x : A) (y : A) (s : A -> Prop) : (term1422 _102133 A f x s y) = (term1423 _102133 A f x y s).
Proof. exact (MK_COMB (@lem4045009) (@lem4045008 _102133 A f x y s)). Qed.
Lemma lem4045011 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : ((term298 _102133 A f s) = (@CARD A s)) = ((term298 _102133 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term298 _102133 A f s) = (@CARD A s))). Qed.
Lemma lem4045012 {_102133 A : Type'} (x : A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term1424 _102133 A x y f s) = (term1425 _102133 A x y f s).
Proof. exact (MK_COMB (@lem4045010 _102133 A f x y s) (@lem4045011 _102133 A f s)). Qed.
Lemma lem4045013 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1426 _102133 A x f s) = (term1427 _102133 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4045012 _102133 A x y f s)). Qed.
Lemma lem4045014 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4045015 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1415 _102133 A x f s) = (term1428 _102133 A x f s).
Proof. exact (MK_COMB (@lem4045014 A) (@lem4045013 _102133 A x f s)). Qed.
Lemma lem4045016 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : ((term1414 _102133 A x f s) = (term1415 _102133 A x f s)) = ((term1410 _102133 A x f s) = (term1428 _102133 A x f s)).
Proof. exact (MK_COMB (@lem4045007 _102133 A x f s) (@lem4045015 _102133 A x f s)). Qed.
Lemma lem4045017 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1410 _102133 A x f s) = (term1428 _102133 A x f s).
Proof. exact (EQ_MP (@lem4045016 _102133 A x f s) (@lem4044997 _102133 A x f s)). Qed.
Lemma lem4045018 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1412 _102133 A f s) = (term1429 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4045017 _102133 A x f s)). Qed.
Lemma lem4045019 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4045020 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1413 _102133 A f s) = (term1430 _102133 A f s).
Proof. exact (MK_COMB (@lem4045019 A) (@lem4045018 _102133 A f s)). Qed.
Lemma lem4045021 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1398 _102133 A f s) = (term1430 _102133 A f s).
Proof. exact (TRANS (@lem4044993 _102133 A f s) (@lem4045020 _102133 A f s)). Qed.
Lemma lem4045022 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1372 _102133 A f s) = (term1430 _102133 A f s).
Proof. exact (TRANS (@lem4044969 _102133 A f s) (@lem4045021 _102133 A f s)). Qed.
Lemma lem4045023 {_102133 A : Type'} (f : A -> _102133) : (term1373 _102133 A f) = (term1431 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4045022 _102133 A f s)). Qed.
Lemma lem4045024 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4045025 {_102133 A : Type'} (f : A -> _102133) : (term1374 _102133 A f) = (term1432 _102133 A f).
Proof. exact (MK_COMB (@lem4045024 A) (@lem4045023 _102133 A f)). Qed.
Lemma lem4045027 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4045028 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4045027 (A -> Prop) A P). Qed.
Lemma lem4045029 {_102133 A : Type'} (f : A -> _102133) : (term1433 _102133 A f) = (term1434 _102133 A f).
Proof. exact (@lem4045028 A (term1435 _102133 A f)). Qed.
Lemma lem4045030 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1436 _102133 A f s) = (term1429 _102133 A f s).
Proof. exact (eq_refl (term1436 _102133 A f s)). Qed.
Lemma lem4045031 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4045032 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) (x : A) : (term1437 _102133 A f s x) = (term1438 _102133 A f s x).
Proof. exact (MK_COMB (@lem4045030 _102133 A f s) (@lem4045031 A x)). Qed.
Lemma lem4045033 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1438 _102133 A f s x) = (term1428 _102133 A x f s).
Proof. exact (eq_refl (term1438 _102133 A f s x)). Qed.
Lemma lem4045034 {_102133 A : Type'} (x : A) (f : A -> _102133) (s : A -> Prop) : (term1437 _102133 A f s x) = (term1428 _102133 A x f s).
Proof. exact (TRANS (@lem4045032 _102133 A f s x) (@lem4045033 _102133 A x f s)). Qed.
Lemma lem4045035 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1439 _102133 A f s) = (term1429 _102133 A f s).
Proof. exact (fun_ext (fun x : A => @lem4045034 _102133 A x f s)). Qed.
Lemma lem4045036 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4045037 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1440 _102133 A f s) = (term1430 _102133 A f s).
Proof. exact (MK_COMB (@lem4045036 A) (@lem4045035 _102133 A f s)). Qed.
Lemma lem4045038 {_102133 A : Type'} (f : A -> _102133) : (term1441 _102133 A f) = (term1431 _102133 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4045037 _102133 A f s)). Qed.
Lemma lem4045039 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4045040 {_102133 A : Type'} (f : A -> _102133) : (term1433 _102133 A f) = (term1432 _102133 A f).
Proof. exact (MK_COMB (@lem4045039 A) (@lem4045038 _102133 A f)). Qed.
Lemma lem4045041 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4045042 {_102133 A : Type'} (f : A -> _102133) : (term1442 _102133 A f) = (term1443 _102133 A f).
Proof. exact (MK_COMB (@lem4045041) (@lem4045040 _102133 A f)). Qed.
Lemma lem4045043 {_102133 A : Type'} (f : A -> _102133) (s : A -> Prop) : (term1436 _102133 A f s) = (term1429 _102133 A f s).
Proof. exact (eq_refl (term1436 _102133 A f s)). Qed.
Lemma lem4045044 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4045045 {_102133 A : Type'} (f : A -> _102133) (x : type684 A) (s : A -> Prop) : (term1444 _102133 A f x s) = (term1445 _102133 A f x s).
Proof. exact (MK_COMB (@lem4045043 _102133 A f s) (@lem4045044 A x s)). Qed.
Lemma lem4045046 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1445 _102133 A f x s) = (term1446 _102133 A x f s).
Proof. exact (eq_refl (term1445 _102133 A f x s)). Qed.
Lemma lem4045047 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1444 _102133 A f x s) = (term1446 _102133 A x f s).
Proof. exact (TRANS (@lem4045045 _102133 A f x s) (@lem4045046 _102133 A x f s)). Qed.
Lemma lem4045048 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1447 _102133 A f x) = (term1448 _102133 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4045047 _102133 A x f s)). Qed.
Lemma lem4045049 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4045050 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1449 _102133 A f x) = (term1450 _102133 A x f).
Proof. exact (MK_COMB (@lem4045049 A) (@lem4045048 _102133 A x f)). Qed.
Lemma lem4045051 {_102133 A : Type'} (f : A -> _102133) : (term1451 _102133 A f) = (term1452 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4045050 _102133 A x f)). Qed.
Lemma lem4045052 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4045053 {_102133 A : Type'} (f : A -> _102133) : (term1434 _102133 A f) = (term1453 _102133 A f).
Proof. exact (MK_COMB (@lem4045052 A) (@lem4045051 _102133 A f)). Qed.
Lemma lem4045054 {_102133 A : Type'} (f : A -> _102133) : ((term1433 _102133 A f) = (term1434 _102133 A f)) = ((term1432 _102133 A f) = (term1453 _102133 A f)).
Proof. exact (MK_COMB (@lem4045042 _102133 A f) (@lem4045053 _102133 A f)). Qed.
Lemma lem4045055 {_102133 A : Type'} (f : A -> _102133) : (term1432 _102133 A f) = (term1453 _102133 A f).
Proof. exact (EQ_MP (@lem4045054 _102133 A f) (@lem4045029 _102133 A f)). Qed.
Lemma lem4045057 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4045058 {A : Type'} (P : type672 A) : (term476 A P) = (term477 A P).
Proof. exact (@lem4045057 (A -> Prop) A P). Qed.
Lemma lem4045059 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1454 _102133 A x f) = (term1455 _102133 A x f).
Proof. exact (@lem4045058 A (term1456 _102133 A x f)). Qed.
Lemma lem4045060 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1457 _102133 A x f s) = (term1458 _102133 A x f s).
Proof. exact (eq_refl (term1457 _102133 A x f s)). Qed.
Lemma lem4045061 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4045062 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) (y : A) : (term1459 _102133 A x f s y) = (term1460 _102133 A x f s y).
Proof. exact (MK_COMB (@lem4045060 _102133 A x f s) (@lem4045061 A y)). Qed.
Lemma lem4045063 {_102133 A : Type'} (x : type684 A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term1460 _102133 A x f s y) = (term1461 _102133 A x y f s).
Proof. exact (eq_refl (term1460 _102133 A x f s y)). Qed.
Lemma lem4045064 {_102133 A : Type'} (x : type684 A) (y : A) (f : A -> _102133) (s : A -> Prop) : (term1459 _102133 A x f s y) = (term1461 _102133 A x y f s).
Proof. exact (TRANS (@lem4045062 _102133 A x f s y) (@lem4045063 _102133 A x y f s)). Qed.
Lemma lem4045065 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1462 _102133 A x f s) = (term1458 _102133 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4045064 _102133 A x y f s)). Qed.
Lemma lem4045066 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4045067 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1463 _102133 A x f s) = (term1446 _102133 A x f s).
Proof. exact (MK_COMB (@lem4045066 A) (@lem4045065 _102133 A x f s)). Qed.
Lemma lem4045068 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1464 _102133 A x f) = (term1448 _102133 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4045067 _102133 A x f s)). Qed.
Lemma lem4045069 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4045070 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1454 _102133 A x f) = (term1450 _102133 A x f).
Proof. exact (MK_COMB (@lem4045069 A) (@lem4045068 _102133 A x f)). Qed.
Lemma lem4045071 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4045072 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1465 _102133 A x f) = (term1466 _102133 A x f).
Proof. exact (MK_COMB (@lem4045071) (@lem4045070 _102133 A x f)). Qed.
Lemma lem4045073 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1457 _102133 A x f s) = (term1458 _102133 A x f s).
Proof. exact (eq_refl (term1457 _102133 A x f s)). Qed.
Lemma lem4045074 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4045075 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) (y : type684 A) (s : A -> Prop) : (term1467 _102133 A x f y s) = (term1468 _102133 A x f y s).
Proof. exact (MK_COMB (@lem4045073 _102133 A x f s) (@lem4045074 A y s)). Qed.
Lemma lem4045076 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1468 _102133 A x f y s) = (term1469 _102133 A x y f s).
Proof. exact (eq_refl (term1468 _102133 A x f y s)). Qed.
Lemma lem4045077 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) (s : A -> Prop) : (term1467 _102133 A x f y s) = (term1469 _102133 A x y f s).
Proof. exact (TRANS (@lem4045075 _102133 A x f y s) (@lem4045076 _102133 A x y f s)). Qed.
Lemma lem4045078 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) : (term1470 _102133 A x f y) = (term1471 _102133 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4045077 _102133 A x y f s)). Qed.
Lemma lem4045079 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4045080 {_102133 A : Type'} (x : type684 A) (y : type684 A) (f : A -> _102133) : (term1472 _102133 A x f y) = (term1473 _102133 A x y f).
Proof. exact (MK_COMB (@lem4045079 A) (@lem4045078 _102133 A x y f)). Qed.
Lemma lem4045081 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1474 _102133 A x f) = (term1475 _102133 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4045080 _102133 A x y f)). Qed.
Lemma lem4045082 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4045083 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1455 _102133 A x f) = (term1476 _102133 A x f).
Proof. exact (MK_COMB (@lem4045082 A) (@lem4045081 _102133 A x f)). Qed.
Lemma lem4045084 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : ((term1454 _102133 A x f) = (term1455 _102133 A x f)) = ((term1450 _102133 A x f) = (term1476 _102133 A x f)).
Proof. exact (MK_COMB (@lem4045072 _102133 A x f) (@lem4045083 _102133 A x f)). Qed.
Lemma lem4045085 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1450 _102133 A x f) = (term1476 _102133 A x f).
Proof. exact (EQ_MP (@lem4045084 _102133 A x f) (@lem4045059 _102133 A x f)). Qed.
Lemma lem4045086 {_102133 A : Type'} (f : A -> _102133) : (term1452 _102133 A f) = (term1477 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4045085 _102133 A x f)). Qed.
Lemma lem4045087 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4045088 {_102133 A : Type'} (f : A -> _102133) : (term1453 _102133 A f) = (term1478 _102133 A f).
Proof. exact (MK_COMB (@lem4045087 A) (@lem4045086 _102133 A f)). Qed.
Lemma lem4045089 {_102133 A : Type'} (f : A -> _102133) : (term1432 _102133 A f) = (term1478 _102133 A f).
Proof. exact (TRANS (@lem4045055 _102133 A f) (@lem4045088 _102133 A f)). Qed.
Lemma lem4045090 {_102133 A : Type'} (f : A -> _102133) : (term1374 _102133 A f) = (term1478 _102133 A f).
Proof. exact (TRANS (@lem4045025 _102133 A f) (@lem4045089 _102133 A f)). Qed.
Lemma lem4045091 {_102133 A : Type'} : (term1375 _102133 A) = (term1479 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4045090 _102133 A f)). Qed.
Lemma lem4045092 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4045093 {_102133 A : Type'} : (term1376 _102133 A) = (term1480 _102133 A).
Proof. exact (MK_COMB (@lem4045092 _102133 A) (@lem4045091 _102133 A)). Qed.
Lemma lem4045095 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4045096 {_102133 A : Type'} (P : type776 _102133 A) : (term682 _102133 A P) = (term683 _102133 A P).
Proof. exact (@lem4045095 (A -> _102133) (type684 A) P). Qed.
Lemma lem4045097 {_102133 A : Type'} : (term1481 _102133 A) = (term1482 _102133 A).
Proof. exact (@lem4045096 _102133 A (term1483 _102133 A)). Qed.
Lemma lem4045098 {_102133 A : Type'} (f : A -> _102133) : (term1484 _102133 A f) = (term1477 _102133 A f).
Proof. exact (eq_refl (term1484 _102133 A f)). Qed.
Lemma lem4045099 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4045100 {_102133 A : Type'} (f : A -> _102133) (x : type684 A) : (term1485 _102133 A f x) = (term1486 _102133 A f x).
Proof. exact (MK_COMB (@lem4045098 _102133 A f) (@lem4045099 A x)). Qed.
Lemma lem4045101 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1486 _102133 A f x) = (term1476 _102133 A x f).
Proof. exact (eq_refl (term1486 _102133 A f x)). Qed.
Lemma lem4045102 {_102133 A : Type'} (x : type684 A) (f : A -> _102133) : (term1485 _102133 A f x) = (term1476 _102133 A x f).
Proof. exact (TRANS (@lem4045100 _102133 A f x) (@lem4045101 _102133 A x f)). Qed.
Lemma lem4045103 {_102133 A : Type'} (f : A -> _102133) : (term1487 _102133 A f) = (term1477 _102133 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4045102 _102133 A x f)). Qed.
Lemma lem4045104 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4045105 {_102133 A : Type'} (f : A -> _102133) : (term1488 _102133 A f) = (term1478 _102133 A f).
Proof. exact (MK_COMB (@lem4045104 A) (@lem4045103 _102133 A f)). Qed.
Lemma lem4045106 {_102133 A : Type'} : (term1489 _102133 A) = (term1479 _102133 A).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4045105 _102133 A f)). Qed.
Lemma lem4045107 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4045108 {_102133 A : Type'} : (term1481 _102133 A) = (term1480 _102133 A).
Proof. exact (MK_COMB (@lem4045107 _102133 A) (@lem4045106 _102133 A)). Qed.
Lemma lem4045109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4045110 {_102133 A : Type'} : (term1490 _102133 A) = (term1491 _102133 A).
Proof. exact (MK_COMB (@lem4045109) (@lem4045108 _102133 A)). Qed.
Lemma lem4045111 {_102133 A : Type'} (f : A -> _102133) : (term1484 _102133 A f) = (term1477 _102133 A f).
Proof. exact (eq_refl (term1484 _102133 A f)). Qed.
Lemma lem4045112 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4045113 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1492 _102133 A x f) = (term1493 _102133 A x f).
Proof. exact (MK_COMB (@lem4045111 _102133 A f) (@lem4045112 _102133 A x f)). Qed.
Lemma lem4045114 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1493 _102133 A x f) = (term1494 _102133 A x f).
Proof. exact (eq_refl (term1493 _102133 A x f)). Qed.
Lemma lem4045115 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1492 _102133 A x f) = (term1494 _102133 A x f).
Proof. exact (TRANS (@lem4045113 _102133 A x f) (@lem4045114 _102133 A x f)). Qed.
Lemma lem4045116 {_102133 A : Type'} (x : type791 _102133 A) : (term1495 _102133 A x) = (term1496 _102133 A x).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4045115 _102133 A x f)). Qed.
Lemma lem4045117 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4045118 {_102133 A : Type'} (x : type791 _102133 A) : (term1497 _102133 A x) = (term1498 _102133 A x).
Proof. exact (MK_COMB (@lem4045117 _102133 A) (@lem4045116 _102133 A x)). Qed.
Lemma lem4045119 {_102133 A : Type'} : (term1499 _102133 A) = (term1500 _102133 A).
Proof. exact (fun_ext (fun x : type791 _102133 A => @lem4045118 _102133 A x)). Qed.
Lemma lem4045120 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4045121 {_102133 A : Type'} : (term1482 _102133 A) = (term1501 _102133 A).
Proof. exact (MK_COMB (@lem4045120 _102133 A) (@lem4045119 _102133 A)). Qed.
Lemma lem4045122 {_102133 A : Type'} : ((term1481 _102133 A) = (term1482 _102133 A)) = ((term1480 _102133 A) = (term1501 _102133 A)).
Proof. exact (MK_COMB (@lem4045110 _102133 A) (@lem4045121 _102133 A)). Qed.
Lemma lem4045123 {_102133 A : Type'} : (term1480 _102133 A) = (term1501 _102133 A).
Proof. exact (EQ_MP (@lem4045122 _102133 A) (@lem4045097 _102133 A)). Qed.
Lemma lem4045125 {A B : Type'} (P : type1413 A B) : (term474 A B P) = (term475 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4045126 {_102133 A : Type'} (P : type776 _102133 A) : (term682 _102133 A P) = (term683 _102133 A P).
Proof. exact (@lem4045125 (A -> _102133) (type684 A) P). Qed.
Lemma lem4045127 {_102133 A : Type'} (x : type791 _102133 A) : (term1502 _102133 A x) = (term1503 _102133 A x).
Proof. exact (@lem4045126 _102133 A (term1504 _102133 A x)). Qed.
Lemma lem4045128 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1505 _102133 A x f) = (term1506 _102133 A x f).
Proof. exact (eq_refl (term1505 _102133 A x f)). Qed.
Lemma lem4045129 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4045130 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) (y : type684 A) : (term1507 _102133 A x f y) = (term1508 _102133 A x f y).
Proof. exact (MK_COMB (@lem4045128 _102133 A x f) (@lem4045129 A y)). Qed.
Lemma lem4045131 {_102133 A : Type'} (x : type791 _102133 A) (y : type684 A) (f : A -> _102133) : (term1508 _102133 A x f y) = (term1509 _102133 A x y f).
Proof. exact (eq_refl (term1508 _102133 A x f y)). Qed.
Lemma lem4045132 {_102133 A : Type'} (x : type791 _102133 A) (y : type684 A) (f : A -> _102133) : (term1507 _102133 A x f y) = (term1509 _102133 A x y f).
Proof. exact (TRANS (@lem4045130 _102133 A x f y) (@lem4045131 _102133 A x y f)). Qed.
Lemma lem4045133 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1510 _102133 A x f) = (term1506 _102133 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4045132 _102133 A x y f)). Qed.
Lemma lem4045134 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4045135 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1511 _102133 A x f) = (term1494 _102133 A x f).
Proof. exact (MK_COMB (@lem4045134 A) (@lem4045133 _102133 A x f)). Qed.
Lemma lem4045136 {_102133 A : Type'} (x : type791 _102133 A) : (term1512 _102133 A x) = (term1496 _102133 A x).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4045135 _102133 A x f)). Qed.
Lemma lem4045137 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4045138 {_102133 A : Type'} (x : type791 _102133 A) : (term1502 _102133 A x) = (term1498 _102133 A x).
Proof. exact (MK_COMB (@lem4045137 _102133 A) (@lem4045136 _102133 A x)). Qed.
Lemma lem4045139 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4045140 {_102133 A : Type'} (x : type791 _102133 A) : (term1513 _102133 A x) = (term1514 _102133 A x).
Proof. exact (MK_COMB (@lem4045139) (@lem4045138 _102133 A x)). Qed.
Lemma lem4045141 {_102133 A : Type'} (x : type791 _102133 A) (f : A -> _102133) : (term1505 _102133 A x f) = (term1506 _102133 A x f).
Proof. exact (eq_refl (term1505 _102133 A x f)). Qed.
Lemma lem4045142 {_102133 A : Type'} (y : type791 _102133 A) (f : A -> _102133) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4045143 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term1515 _102133 A x y f) = (term1516 _102133 A x y f).
Proof. exact (MK_COMB (@lem4045141 _102133 A x f) (@lem4045142 _102133 A y f)). Qed.
Lemma lem4045144 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term1516 _102133 A x y f) = (term1517 _102133 A x y f).
Proof. exact (eq_refl (term1516 _102133 A x y f)). Qed.
Lemma lem4045145 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) (f : A -> _102133) : (term1515 _102133 A x y f) = (term1517 _102133 A x y f).
Proof. exact (TRANS (@lem4045143 _102133 A x y f) (@lem4045144 _102133 A x y f)). Qed.
Lemma lem4045146 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) : (term1518 _102133 A x y) = (term1519 _102133 A x y).
Proof. exact (fun_ext (fun f : A -> _102133 => @lem4045145 _102133 A x y f)). Qed.
Lemma lem4045147 {_102133 A : Type'} : (@all (A -> _102133)) = (@all (A -> _102133)).
Proof. exact (eq_refl (@all (A -> _102133))). Qed.
Lemma lem4045148 {_102133 A : Type'} (x : type791 _102133 A) (y : type791 _102133 A) : (term1520 _102133 A x y) = (term1521 _102133 A x y).
Proof. exact (MK_COMB (@lem4045147 _102133 A) (@lem4045146 _102133 A x y)). Qed.
Lemma lem4045149 {_102133 A : Type'} (x : type791 _102133 A) : (term1522 _102133 A x) = (term1523 _102133 A x).
Proof. exact (fun_ext (fun y : type791 _102133 A => @lem4045148 _102133 A x y)). Qed.
Lemma lem4045150 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4045151 {_102133 A : Type'} (x : type791 _102133 A) : (term1503 _102133 A x) = (term1524 _102133 A x).
Proof. exact (MK_COMB (@lem4045150 _102133 A) (@lem4045149 _102133 A x)). Qed.
Lemma lem4045152 {_102133 A : Type'} (x : type791 _102133 A) : ((term1502 _102133 A x) = (term1503 _102133 A x)) = ((term1498 _102133 A x) = (term1524 _102133 A x)).
Proof. exact (MK_COMB (@lem4045140 _102133 A x) (@lem4045151 _102133 A x)). Qed.
Lemma lem4045153 {_102133 A : Type'} (x : type791 _102133 A) : (term1498 _102133 A x) = (term1524 _102133 A x).
Proof. exact (EQ_MP (@lem4045152 _102133 A x) (@lem4045127 _102133 A x)). Qed.
Lemma lem4045154 {_102133 A : Type'} : (term1500 _102133 A) = (term1525 _102133 A).
Proof. exact (fun_ext (fun x : type791 _102133 A => @lem4045153 _102133 A x)). Qed.
Lemma lem4045155 {_102133 A : Type'} : (@ex ((A -> _102133) -> (A -> Prop) -> A)) = (@ex ((A -> _102133) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> _102133) -> (A -> Prop) -> A))). Qed.
Lemma lem4045156 {_102133 A : Type'} : (term1501 _102133 A) = (term1526 _102133 A).
Proof. exact (MK_COMB (@lem4045155 _102133 A) (@lem4045154 _102133 A)). Qed.
Lemma lem4045157 {_102133 A : Type'} : (term1480 _102133 A) = (term1526 _102133 A).
Proof. exact (TRANS (@lem4045123 _102133 A) (@lem4045156 _102133 A)). Qed.
Lemma lem4045159 {_102133 A : Type'} : (term1376 _102133 A) = (term1526 _102133 A).
Proof. exact (TRANS (@lem4045093 _102133 A) (@lem4045157 _102133 A)). Qed.
Lemma lem4045160 {_102133 A : Type'} : (term229 _102133 A) = (term1526 _102133 A).
Proof. exact (TRANS (@lem4044808 _102133 A) (@lem4045159 _102133 A)). Qed.
Lemma lem4045161 {_102133 A : Type'} (h1 : term229 _102133 A) : term1526 _102133 A.
Proof. exact (EQ_MP (@lem4045160 _102133 A) (@lem4039321 _102133 A h1)). Qed.
Lemma lem4045162 {_102133 A : Type'} (x : type791 _102133 A) (h1 : term1524 _102133 A x) : term1524 _102133 A x.
Proof. exact (h1). Qed.
Lemma lem4045164 {_102126 A : Type'} (x' : type791 _102126 A) (h1 : term1524 _102126 A x') : term1524 _102126 A x'.
Proof. exact (h1). Qed.
Lemma lem4045166 {_102133 B : Type'} (x'' : type529 _102133 B) (h1 : term1363 _102133 B x'') : term1363 _102133 B x''.
Proof. exact (h1). Qed.
Lemma lem4045168 {_102126 B : Type'} (x''' : type529 _102126 B) (h1 : term1363 _102126 B x''') : term1363 _102126 B x'''.
Proof. exact (h1). Qed.
Lemma lem4045170 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (h1 : term1363 _102126 _102133 x'''') : term1363 _102126 _102133 x''''.
Proof. exact (h1). Qed.
Lemma lem4045171 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1360 _102126 _102133 x'''' y''''.
Proof. exact (h1). Qed.
Lemma lem4045172 {B : Type'} (x''''' : type969 B) (h1 : term1201 B x''''') : term1201 B x'''''.
Proof. exact (h1). Qed.
Lemma lem4045174 {B : Type'} (x'''''' : type485 B) (h1 : term883 B x'''''') : term883 B x''''''.
Proof. exact (h1). Qed.
Lemma lem4045176 {A : Type'} (x''''''' : type694 A) (h1 : term1039 A x''''''') : term1039 A x'''''''.
Proof. exact (h1). Qed.
Lemma lem4045178 {A B : Type'} (x'''''''' : type529 A B) (h1 : term571 A B x'''''''') : term571 A B x''''''''.
Proof. exact (h1). Qed.
Lemma lem4045180 {A : Type'} (x''''''''' : type485 A) (h1 : term883 A x''''''''') : term883 A x'''''''''.
Proof. exact (h1). Qed.
Lemma lem4045182 {_102133 A : Type'} (x'''''''''' : type791 _102133 A) (h1 : term727 _102133 A x'''''''''') : term727 _102133 A x''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045184 {_102126 A : Type'} (x''''''''''' : type791 _102126 A) (h1 : term727 _102126 A x''''''''''') : term727 _102126 A x'''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045186 {_102133 B : Type'} (x'''''''''''' : type529 _102133 B) (h1 : term571 _102133 B x'''''''''''') : term571 _102133 B x''''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045188 {_102126 B : Type'} (x''''''''''''' : type529 _102126 B) (h1 : term571 _102126 B x''''''''''''') : term571 _102126 B x'''''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045190 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (h1 : term571 _102126 _102133 x'''''''''''''') : term571 _102126 _102133 x''''''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045191 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term568 _102126 _102133 x'''''''''''''' y''''''''''''''.
Proof. exact (h1). Qed.
Lemma lem4045192 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem4045197 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045198 {_102126 : Type'} (f : type687 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> nat) f x).
Proof. exact (@lem4045197 (_102126 -> Prop) nat f x). Qed.
Lemma lem4045200 {_102126 : Type'} (t : _102126 -> Prop) : (@CARD _102126 t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (@lem4045198 _102126 (@CARD _102126) t). Qed.
Lemma lem4045201 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045202 {_102126 : Type'} (t : _102126 -> Prop) : (term1527 _102126 t) = (term1528 _102126 t).
Proof. exact (MK_COMB (@lem4045192) (@lem4045200 _102126 t)). Qed.
Lemma lem4045203 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term146 _102126 t n) = (term1529 _102126 t n).
Proof. exact (MK_COMB (@lem4045202 _102126 t) (@lem4045201 n)). Qed.
Lemma lem4045205 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045206 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem4045205 nat (nat -> Prop) f x). Qed.
Lemma lem4045207 {_102126 : Type'} (t : _102126 -> Prop) : (term1528 _102126 t) = (term1530 _102126 t).
Proof. exact (@lem4045206 Peano.lt (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)). Qed.
Lemma lem4045208 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045209 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1529 _102126 t n) = (term1531 _102126 t n).
Proof. exact (MK_COMB (@lem4045207 _102126 t) (@lem4045208 n)). Qed.
Lemma lem4045211 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045212 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4045211 nat Prop f x). Qed.
Lemma lem4045213 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1531 _102126 t n) = (term1532 _102126 t n).
Proof. exact (@lem4045212 (term1530 _102126 t) n). Qed.
Lemma lem4045214 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1529 _102126 t n) = (term1532 _102126 t n).
Proof. exact (TRANS (@lem4045209 _102126 t n) (@lem4045213 _102126 t n)). Qed.
Lemma lem4045215 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term146 _102126 t n) = (term1532 _102126 t n).
Proof. exact (TRANS (@lem4045203 _102126 t n) (@lem4045214 _102126 t n)). Qed.
Lemma lem4045216 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045217 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem4045218 {_102133 : Type'} : (@CARD _102133) = (@CARD _102133).
Proof. exact (eq_refl (@CARD _102133)). Qed.
Lemma lem4045225 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045226 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045225 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045227 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045226 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045228 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045229 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045227 _102126 _102133 f) (@lem4045228 _102126 t)). Qed.
Lemma lem4045231 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045232 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045231 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045233 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045232 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045235 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045229 _102126 _102133 f t) (@lem4045233 _102126 _102133 f t)). Qed.
Lemma lem4045236 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term311 _102126 _102133 f t) = (term1534 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045218 _102133) (@lem4045235 _102126 _102133 f t)). Qed.
Lemma lem4045238 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045239 {_102133 : Type'} (f : type687 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> nat) f x).
Proof. exact (@lem4045238 (_102133 -> Prop) nat f x). Qed.
Lemma lem4045240 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1534 _102126 _102133 f t) = (term1535 _102126 _102133 f t).
Proof. exact (@lem4045239 _102133 (@CARD _102133) (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045241 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term311 _102126 _102133 f t) = (term1535 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045236 _102126 _102133 f t) (@lem4045240 _102126 _102133 f t)). Qed.
Lemma lem4045242 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045243 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1536 _102126 _102133 f t) = (term1537 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045217) (@lem4045241 _102126 _102133 f t)). Qed.
Lemma lem4045244 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term206 _102126 _102133 f t n) = (term1538 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045243 _102126 _102133 f t) (@lem4045242 n)). Qed.
Lemma lem4045246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045247 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem4045246 nat (nat -> Prop) f x). Qed.
Lemma lem4045248 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1537 _102126 _102133 f t) = (term1539 _102126 _102133 f t).
Proof. exact (@lem4045247 Peano.lt (term1535 _102126 _102133 f t)). Qed.
Lemma lem4045249 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045250 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1538 _102126 _102133 f t n) = (term1540 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045248 _102126 _102133 f t) (@lem4045249 n)). Qed.
Lemma lem4045252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045253 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4045252 nat Prop f x). Qed.
Lemma lem4045254 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1540 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (@lem4045253 (term1539 _102126 _102133 f t) n). Qed.
Lemma lem4045255 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1538 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (TRANS (@lem4045250 _102126 _102133 f t n) (@lem4045254 _102126 _102133 f t n)). Qed.
Lemma lem4045256 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term206 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (TRANS (@lem4045244 _102126 _102133 f t n) (@lem4045255 _102126 _102133 f t n)). Qed.
Lemma lem4045257 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1542 _102126 _102133 f t n) = (term1543 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045216) (@lem4045256 _102126 _102133 f t n)). Qed.
Lemma lem4045258 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045259 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1544 _102126 _102133 f t n) = (term1545 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045258) (@lem4045257 _102126 _102133 f t n)). Qed.
Lemma lem4045260 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1546 _102126 _102133 f t n) = (term1547 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045259 _102126 _102133 f t n) (@lem4045215 _102126 t n)). Qed.
Lemma lem4045261 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045262 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem4045267 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045268 {_102126 : Type'} (f : type687 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> nat) f x).
Proof. exact (@lem4045267 (_102126 -> Prop) nat f x). Qed.
Lemma lem4045270 {_102126 : Type'} (t : _102126 -> Prop) : (@CARD _102126 t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (@lem4045268 _102126 (@CARD _102126) t). Qed.
Lemma lem4045271 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045272 {_102126 : Type'} (t : _102126 -> Prop) : (term1527 _102126 t) = (term1528 _102126 t).
Proof. exact (MK_COMB (@lem4045262) (@lem4045270 _102126 t)). Qed.
Lemma lem4045273 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term146 _102126 t n) = (term1529 _102126 t n).
Proof. exact (MK_COMB (@lem4045272 _102126 t) (@lem4045271 n)). Qed.
Lemma lem4045275 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045276 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem4045275 nat (nat -> Prop) f x). Qed.
Lemma lem4045277 {_102126 : Type'} (t : _102126 -> Prop) : (term1528 _102126 t) = (term1530 _102126 t).
Proof. exact (@lem4045276 Peano.lt (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)). Qed.
Lemma lem4045278 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045279 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1529 _102126 t n) = (term1531 _102126 t n).
Proof. exact (MK_COMB (@lem4045277 _102126 t) (@lem4045278 n)). Qed.
Lemma lem4045281 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045282 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4045281 nat Prop f x). Qed.
Lemma lem4045283 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1531 _102126 t n) = (term1532 _102126 t n).
Proof. exact (@lem4045282 (term1530 _102126 t) n). Qed.
Lemma lem4045284 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1529 _102126 t n) = (term1532 _102126 t n).
Proof. exact (TRANS (@lem4045279 _102126 t n) (@lem4045283 _102126 t n)). Qed.
Lemma lem4045285 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term146 _102126 t n) = (term1532 _102126 t n).
Proof. exact (TRANS (@lem4045273 _102126 t n) (@lem4045284 _102126 t n)). Qed.
Lemma lem4045286 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1548 _102126 t n) = (term1549 _102126 t n).
Proof. exact (MK_COMB (@lem4045261) (@lem4045285 _102126 t n)). Qed.
Lemma lem4045287 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem4045288 {_102133 : Type'} : (@CARD _102133) = (@CARD _102133).
Proof. exact (eq_refl (@CARD _102133)). Qed.
Lemma lem4045295 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045296 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045295 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045297 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045296 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045298 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045299 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045297 _102126 _102133 f) (@lem4045298 _102126 t)). Qed.
Lemma lem4045301 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045302 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045301 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045303 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045302 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045305 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045299 _102126 _102133 f t) (@lem4045303 _102126 _102133 f t)). Qed.
Lemma lem4045306 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term311 _102126 _102133 f t) = (term1534 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045288 _102133) (@lem4045305 _102126 _102133 f t)). Qed.
Lemma lem4045308 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045309 {_102133 : Type'} (f : type687 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> nat) f x).
Proof. exact (@lem4045308 (_102133 -> Prop) nat f x). Qed.
Lemma lem4045310 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1534 _102126 _102133 f t) = (term1535 _102126 _102133 f t).
Proof. exact (@lem4045309 _102133 (@CARD _102133) (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045311 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term311 _102126 _102133 f t) = (term1535 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045306 _102126 _102133 f t) (@lem4045310 _102126 _102133 f t)). Qed.
Lemma lem4045312 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045313 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1536 _102126 _102133 f t) = (term1537 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045287) (@lem4045311 _102126 _102133 f t)). Qed.
Lemma lem4045314 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term206 _102126 _102133 f t n) = (term1538 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045313 _102126 _102133 f t) (@lem4045312 n)). Qed.
Lemma lem4045316 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045317 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem4045316 nat (nat -> Prop) f x). Qed.
Lemma lem4045318 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1537 _102126 _102133 f t) = (term1539 _102126 _102133 f t).
Proof. exact (@lem4045317 Peano.lt (term1535 _102126 _102133 f t)). Qed.
Lemma lem4045319 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4045320 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1538 _102126 _102133 f t n) = (term1540 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045318 _102126 _102133 f t) (@lem4045319 n)). Qed.
Lemma lem4045322 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045323 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4045322 nat Prop f x). Qed.
Lemma lem4045324 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1540 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (@lem4045323 (term1539 _102126 _102133 f t) n). Qed.
Lemma lem4045325 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1538 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (TRANS (@lem4045320 _102126 _102133 f t n) (@lem4045324 _102126 _102133 f t n)). Qed.
Lemma lem4045326 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term206 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (TRANS (@lem4045314 _102126 _102133 f t n) (@lem4045325 _102126 _102133 f t n)). Qed.
Lemma lem4045327 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045328 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1550 _102126 _102133 f t n) = (term1551 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045327) (@lem4045326 _102126 _102133 f t n)). Qed.
Lemma lem4045329 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1552 _102126 _102133 f t n) = (term1553 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045328 _102126 _102133 f t n) (@lem4045286 _102126 t n)). Qed.
Lemma lem4045330 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045331 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1554 _102126 _102133 f t n) = (term1555 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045330) (@lem4045329 _102126 _102133 f t n)). Qed.
Lemma lem4045332 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term401 _102126 _102133 f t n) = (term1556 _102126 _102133 f t n).
Proof. exact (MK_COMB (@lem4045331 _102126 _102133 f t n) (@lem4045260 _102126 _102133 f t n)). Qed.
Lemma lem4045337 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045338 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045337 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045340 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4045338 _102126 (@FINITE _102126) t). Qed.
Lemma lem4045341 {_102133 : Type'} (P : type686 _102133) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem4045348 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045349 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045348 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045350 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045349 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045351 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045352 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045350 _102126 _102133 f) (@lem4045351 _102126 t)). Qed.
Lemma lem4045354 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045355 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045354 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045356 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045355 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045358 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045352 _102126 _102133 f t) (@lem4045356 _102126 _102133 f t)). Qed.
Lemma lem4045359 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term1557 _102126 _102133 P f t).
Proof. exact (MK_COMB (@lem4045341 _102133 P) (@lem4045358 _102126 _102133 f t)). Qed.
Lemma lem4045361 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045362 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4045361 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4045363 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1557 _102126 _102133 P f t) = (term1558 _102126 _102133 P f t).
Proof. exact (@lem4045362 _102133 P (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045364 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term1558 _102126 _102133 P f t).
Proof. exact (TRANS (@lem4045359 _102126 _102133 P f t) (@lem4045363 _102126 _102133 P f t)). Qed.
Lemma lem4045369 {_102126 : Type'} (x : _102126) (y : _102126) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem4045370 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045371 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4045376 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045378 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045376 _102126 _102133 f x). Qed.
Lemma lem4045383 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045384 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045383 _102126 _102133 f x). Qed.
Lemma lem4045386 {_102126 _102133 : Type'} (f : _102126 -> _102133) (y : _102126) : (f y) = (@I (_102126 -> _102133) f y).
Proof. exact (@lem4045384 _102126 _102133 f y). Qed.
Lemma lem4045387 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (term1559 _102126 _102133 f x) = (term1560 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4045371 _102133) (@lem4045378 _102126 _102133 f x)). Qed.
Lemma lem4045388 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : ((f x) = (f y)) = ((@I (_102126 -> _102133) f x) = (@I (_102126 -> _102133) f y)).
Proof. exact (MK_COMB (@lem4045387 _102126 _102133 f x) (@lem4045386 _102126 _102133 f y)). Qed.
Lemma lem4045389 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1561 _102126 _102133 x f y) = (term1562 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045370) (@lem4045388 _102126 _102133 x f y)). Qed.
Lemma lem4045390 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045391 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1563 _102126 _102133 x f y) = (term1564 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045390) (@lem4045389 _102126 _102133 x f y)). Qed.
Lemma lem4045392 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1565 _102126 _102133 f x y) = (term1566 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045391 _102126 _102133 x f y) (@lem4045369 _102126 x y)). Qed.
Lemma lem4045399 {_102126 : Type'} (x : _102126) (y : _102126) : (term1567 _102126 x y) = (term1567 _102126 x y).
Proof. exact (eq_refl (term1567 _102126 x y)). Qed.
Lemma lem4045400 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4045405 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045407 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045405 _102126 _102133 f x). Qed.
Lemma lem4045412 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045413 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045412 _102126 _102133 f x). Qed.
Lemma lem4045415 {_102126 _102133 : Type'} (f : _102126 -> _102133) (y : _102126) : (f y) = (@I (_102126 -> _102133) f y).
Proof. exact (@lem4045413 _102126 _102133 f y). Qed.
Lemma lem4045416 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (term1559 _102126 _102133 f x) = (term1560 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4045400 _102133) (@lem4045407 _102126 _102133 f x)). Qed.
Lemma lem4045417 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : ((f x) = (f y)) = ((@I (_102126 -> _102133) f x) = (@I (_102126 -> _102133) f y)).
Proof. exact (MK_COMB (@lem4045416 _102126 _102133 f x) (@lem4045415 _102126 _102133 f y)). Qed.
Lemma lem4045418 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045419 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1568 _102126 _102133 x f y) = (term1569 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045418) (@lem4045417 _102126 _102133 x f y)). Qed.
Lemma lem4045420 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1570 _102126 _102133 f x y) = (term1571 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045419 _102126 _102133 x f y) (@lem4045399 _102126 x y)). Qed.
Lemma lem4045421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045422 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1572 _102126 _102133 f x y) = (term1573 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045421) (@lem4045420 _102126 _102133 f x y)). Qed.
Lemma lem4045423 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term380 _102126 _102133 f x y) = (term1574 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045422 _102126 _102133 f x y) (@lem4045392 _102126 _102133 f x y)). Qed.
Lemma lem4045424 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045431 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045432 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045431 _102126 (type686 _102126) f x). Qed.
Lemma lem4045433 {_102126 : Type'} (y : _102126) : (@IN _102126 y) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y).
Proof. exact (@lem4045432 _102126 (@IN _102126) y). Qed.
Lemma lem4045434 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045435 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@IN _102126 y t) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y t).
Proof. exact (MK_COMB (@lem4045433 _102126 y) (@lem4045434 _102126 t)). Qed.
Lemma lem4045437 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045438 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045437 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045439 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y t) = (term1575 _102126 y t).
Proof. exact (@lem4045438 _102126 (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y) t). Qed.
Lemma lem4045441 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@IN _102126 y t) = (term1575 _102126 y t).
Proof. exact (TRANS (@lem4045435 _102126 y t) (@lem4045439 _102126 y t)). Qed.
Lemma lem4045442 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (term1576 _102126 y t) = (term1577 _102126 y t).
Proof. exact (MK_COMB (@lem4045424) (@lem4045441 _102126 y t)). Qed.
Lemma lem4045443 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045450 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045451 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045450 _102126 (type686 _102126) f x). Qed.
Lemma lem4045452 {_102126 : Type'} (x : _102126) : (@IN _102126 x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x).
Proof. exact (@lem4045451 _102126 (@IN _102126) x). Qed.
Lemma lem4045453 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045454 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@IN _102126 x t) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x t).
Proof. exact (MK_COMB (@lem4045452 _102126 x) (@lem4045453 _102126 t)). Qed.
Lemma lem4045456 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045457 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045456 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045458 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x t) = (term1575 _102126 x t).
Proof. exact (@lem4045457 _102126 (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x) t). Qed.
Lemma lem4045460 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@IN _102126 x t) = (term1575 _102126 x t).
Proof. exact (TRANS (@lem4045454 _102126 x t) (@lem4045458 _102126 x t)). Qed.
Lemma lem4045461 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (term1576 _102126 x t) = (term1577 _102126 x t).
Proof. exact (MK_COMB (@lem4045443) (@lem4045460 _102126 x t)). Qed.
Lemma lem4045462 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045463 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (term1578 _102126 x t) = (term1579 _102126 x t).
Proof. exact (MK_COMB (@lem4045462) (@lem4045461 _102126 x t)). Qed.
Lemma lem4045464 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term379 _102126 x y t) = (term1580 _102126 x y t).
Proof. exact (MK_COMB (@lem4045463 _102126 x t) (@lem4045442 _102126 y t)). Qed.
Lemma lem4045465 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045466 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term382 _102126 x y t) = (term1581 _102126 x y t).
Proof. exact (MK_COMB (@lem4045465) (@lem4045464 _102126 x y t)). Qed.
Lemma lem4045467 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term384 _102126 _102133 t f x y) = (term1582 _102126 _102133 t f x y).
Proof. exact (MK_COMB (@lem4045466 _102126 x y t) (@lem4045423 _102126 _102133 f x y)). Qed.
Lemma lem4045468 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term386 _102126 _102133 t f x) = (term1583 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4045467 _102126 _102133 t f x y)). Qed.
Lemma lem4045469 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4045470 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term387 _102126 _102133 t f x) = (term1584 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4045469 _102126) (@lem4045468 _102126 _102133 t f x)). Qed.
Lemma lem4045471 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term388 _102126 _102133 t f) = (term1585 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4045470 _102126 _102133 t f x)). Qed.
Lemma lem4045472 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4045473 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term389 _102126 _102133 t f) = (term1586 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4045472 _102126) (@lem4045471 _102126 _102133 t f)). Qed.
Lemma lem4045480 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045481 {_102126 : Type'} (f : type639 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045480 (_102126 -> Prop) (type686 _102126) f x). Qed.
Lemma lem4045482 {_102126 : Type'} (t : _102126 -> Prop) : (@SUBSET _102126 t) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t).
Proof. exact (@lem4045481 _102126 (@SUBSET _102126) t). Qed.
Lemma lem4045483 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4045484 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@SUBSET _102126 t s) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t s).
Proof. exact (MK_COMB (@lem4045482 _102126 t) (@lem4045483 _102126 s)). Qed.
Lemma lem4045486 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045487 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045486 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045488 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t s) = (term1587 _102126 t s).
Proof. exact (@lem4045487 _102126 (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t) s). Qed.
Lemma lem4045490 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@SUBSET _102126 t s) = (term1587 _102126 t s).
Proof. exact (TRANS (@lem4045484 _102126 t s) (@lem4045488 _102126 t s)). Qed.
Lemma lem4045491 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045492 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term1588 _102126 t s).
Proof. exact (MK_COMB (@lem4045491) (@lem4045490 _102126 t s)). Qed.
Lemma lem4045493 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term390 _102126 _102133 s t f) = (term1589 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4045492 _102126 t s) (@lem4045473 _102126 _102133 t f)). Qed.
Lemma lem4045494 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045495 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term391 _102126 _102133 s t f) = (term1590 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4045494) (@lem4045493 _102126 _102133 s t f)). Qed.
Lemma lem4045496 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term392 _102126 _102133 s P f t) = (term1591 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045495 _102126 _102133 s t f) (@lem4045364 _102126 _102133 P f t)). Qed.
Lemma lem4045497 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045498 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term395 _102126 _102133 s P f t) = (term1592 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045497) (@lem4045496 _102126 _102133 s P f t)). Qed.
Lemma lem4045499 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term399 _102126 _102133 s P f t) = (term1593 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045498 _102126 _102133 s P f t) (@lem4045340 _102126 t)). Qed.
Lemma lem4045500 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045501 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term402 _102126 _102133 s P f t) = (term1594 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045500) (@lem4045499 _102126 _102133 s P f t)). Qed.
Lemma lem4045502 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term404 _102126 _102133 s P f t n) = (term1595 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4045501 _102126 _102133 s P f t) (@lem4045332 _102126 _102133 f t n)). Qed.
Lemma lem4045507 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045508 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045507 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045510 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4045508 _102126 (@FINITE _102126) t). Qed.
Lemma lem4045511 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045512 {_102133 : Type'} : (@FINITE _102133) = (@FINITE _102133).
Proof. exact (eq_refl (@FINITE _102133)). Qed.
Lemma lem4045519 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045520 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045519 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045521 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045520 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045522 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045523 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045521 _102126 _102133 f) (@lem4045522 _102126 t)). Qed.
Lemma lem4045525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045526 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045525 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045527 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045526 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045529 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045523 _102126 _102133 f t) (@lem4045527 _102126 _102133 f t)). Qed.
Lemma lem4045530 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term205 _102126 _102133 f t) = (term1596 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045512 _102133) (@lem4045529 _102126 _102133 f t)). Qed.
Lemma lem4045532 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045533 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4045532 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4045534 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1596 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4045533 _102133 (@FINITE _102133) (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045535 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term205 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045530 _102126 _102133 f t) (@lem4045534 _102126 _102133 f t)). Qed.
Lemma lem4045536 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1598 _102126 _102133 f t) = (term1599 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045511) (@lem4045535 _102126 _102133 f t)). Qed.
Lemma lem4045537 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045538 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1600 _102126 _102133 f t) = (term1601 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045537) (@lem4045536 _102126 _102133 f t)). Qed.
Lemma lem4045539 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1602 _102126 _102133 f t) = (term1603 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045538 _102126 _102133 f t) (@lem4045510 _102126 t)). Qed.
Lemma lem4045540 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045545 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045546 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045545 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045548 {_102126 : Type'} (t : _102126 -> Prop) : (@FINITE _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4045546 _102126 (@FINITE _102126) t). Qed.
Lemma lem4045549 {_102126 : Type'} (t : _102126 -> Prop) : (term1204 _102126 t) = (term1604 _102126 t).
Proof. exact (MK_COMB (@lem4045540) (@lem4045548 _102126 t)). Qed.
Lemma lem4045550 {_102133 : Type'} : (@FINITE _102133) = (@FINITE _102133).
Proof. exact (eq_refl (@FINITE _102133)). Qed.
Lemma lem4045557 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045558 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045557 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045559 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045558 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045560 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045561 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045559 _102126 _102133 f) (@lem4045560 _102126 t)). Qed.
Lemma lem4045563 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045564 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045563 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045565 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045564 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045567 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045561 _102126 _102133 f t) (@lem4045565 _102126 _102133 f t)). Qed.
Lemma lem4045568 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term205 _102126 _102133 f t) = (term1596 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045550 _102133) (@lem4045567 _102126 _102133 f t)). Qed.
Lemma lem4045570 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045571 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4045570 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4045572 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1596 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4045571 _102133 (@FINITE _102133) (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045573 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term205 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045568 _102126 _102133 f t) (@lem4045572 _102126 _102133 f t)). Qed.
Lemma lem4045574 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045575 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1605 _102126 _102133 f t) = (term1606 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045574) (@lem4045573 _102126 _102133 f t)). Qed.
Lemma lem4045576 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1607 _102126 _102133 f t) = (term1608 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045575 _102126 _102133 f t) (@lem4045549 _102126 t)). Qed.
Lemma lem4045577 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045578 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1609 _102126 _102133 f t) = (term1610 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045577) (@lem4045576 _102126 _102133 f t)). Qed.
Lemma lem4045579 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term394 _102126 _102133 f t) = (term1611 _102126 _102133 f t).
Proof. exact (MK_COMB (@lem4045578 _102126 _102133 f t) (@lem4045539 _102126 _102133 f t)). Qed.
Lemma lem4045580 {_102133 : Type'} (P : type686 _102133) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem4045587 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045588 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045587 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4045589 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4045588 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4045590 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045591 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t).
Proof. exact (MK_COMB (@lem4045589 _102126 _102133 f) (@lem4045590 _102126 t)). Qed.
Lemma lem4045593 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045594 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4045593 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4045595 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f t) = (term1533 _102126 _102133 f t).
Proof. exact (@lem4045594 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) t). Qed.
Lemma lem4045597 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (@IMAGE _102126 _102133 f t) = (term1533 _102126 _102133 f t).
Proof. exact (TRANS (@lem4045591 _102126 _102133 f t) (@lem4045595 _102126 _102133 f t)). Qed.
Lemma lem4045598 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term1557 _102126 _102133 P f t).
Proof. exact (MK_COMB (@lem4045580 _102133 P) (@lem4045597 _102126 _102133 f t)). Qed.
Lemma lem4045600 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045601 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4045600 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4045602 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1557 _102126 _102133 P f t) = (term1558 _102126 _102133 P f t).
Proof. exact (@lem4045601 _102133 P (term1533 _102126 _102133 f t)). Qed.
Lemma lem4045603 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term201 _102126 _102133 P f t) = (term1558 _102126 _102133 P f t).
Proof. exact (TRANS (@lem4045598 _102126 _102133 P f t) (@lem4045602 _102126 _102133 P f t)). Qed.
Lemma lem4045608 {_102126 : Type'} (x : _102126) (y : _102126) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem4045609 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045610 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4045615 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045617 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045615 _102126 _102133 f x). Qed.
Lemma lem4045622 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045623 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045622 _102126 _102133 f x). Qed.
Lemma lem4045625 {_102126 _102133 : Type'} (f : _102126 -> _102133) (y : _102126) : (f y) = (@I (_102126 -> _102133) f y).
Proof. exact (@lem4045623 _102126 _102133 f y). Qed.
Lemma lem4045626 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (term1559 _102126 _102133 f x) = (term1560 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4045610 _102133) (@lem4045617 _102126 _102133 f x)). Qed.
Lemma lem4045627 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : ((f x) = (f y)) = ((@I (_102126 -> _102133) f x) = (@I (_102126 -> _102133) f y)).
Proof. exact (MK_COMB (@lem4045626 _102126 _102133 f x) (@lem4045625 _102126 _102133 f y)). Qed.
Lemma lem4045628 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1561 _102126 _102133 x f y) = (term1562 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045609) (@lem4045627 _102126 _102133 x f y)). Qed.
Lemma lem4045629 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045630 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1563 _102126 _102133 x f y) = (term1564 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045629) (@lem4045628 _102126 _102133 x f y)). Qed.
Lemma lem4045631 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1565 _102126 _102133 f x y) = (term1566 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045630 _102126 _102133 x f y) (@lem4045608 _102126 x y)). Qed.
Lemma lem4045638 {_102126 : Type'} (x : _102126) (y : _102126) : (term1567 _102126 x y) = (term1567 _102126 x y).
Proof. exact (eq_refl (term1567 _102126 x y)). Qed.
Lemma lem4045639 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4045644 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045646 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045644 _102126 _102133 f x). Qed.
Lemma lem4045651 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045652 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4045651 _102126 _102133 f x). Qed.
Lemma lem4045654 {_102126 _102133 : Type'} (f : _102126 -> _102133) (y : _102126) : (f y) = (@I (_102126 -> _102133) f y).
Proof. exact (@lem4045652 _102126 _102133 f y). Qed.
Lemma lem4045655 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (term1559 _102126 _102133 f x) = (term1560 _102126 _102133 f x).
Proof. exact (MK_COMB (@lem4045639 _102133) (@lem4045646 _102126 _102133 f x)). Qed.
Lemma lem4045656 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : ((f x) = (f y)) = ((@I (_102126 -> _102133) f x) = (@I (_102126 -> _102133) f y)).
Proof. exact (MK_COMB (@lem4045655 _102126 _102133 f x) (@lem4045654 _102126 _102133 f y)). Qed.
Lemma lem4045657 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045658 {_102126 _102133 : Type'} (x : _102126) (f : _102126 -> _102133) (y : _102126) : (term1568 _102126 _102133 x f y) = (term1569 _102126 _102133 x f y).
Proof. exact (MK_COMB (@lem4045657) (@lem4045656 _102126 _102133 x f y)). Qed.
Lemma lem4045659 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1570 _102126 _102133 f x y) = (term1571 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045658 _102126 _102133 x f y) (@lem4045638 _102126 x y)). Qed.
Lemma lem4045660 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045661 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1572 _102126 _102133 f x y) = (term1573 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045660) (@lem4045659 _102126 _102133 f x y)). Qed.
Lemma lem4045662 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term380 _102126 _102133 f x y) = (term1574 _102126 _102133 f x y).
Proof. exact (MK_COMB (@lem4045661 _102126 _102133 f x y) (@lem4045631 _102126 _102133 f x y)). Qed.
Lemma lem4045663 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045670 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045671 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045670 _102126 (type686 _102126) f x). Qed.
Lemma lem4045672 {_102126 : Type'} (y : _102126) : (@IN _102126 y) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y).
Proof. exact (@lem4045671 _102126 (@IN _102126) y). Qed.
Lemma lem4045673 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045674 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@IN _102126 y t) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y t).
Proof. exact (MK_COMB (@lem4045672 _102126 y) (@lem4045673 _102126 t)). Qed.
Lemma lem4045676 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045677 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045676 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045678 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y t) = (term1575 _102126 y t).
Proof. exact (@lem4045677 _102126 (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) y) t). Qed.
Lemma lem4045680 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (@IN _102126 y t) = (term1575 _102126 y t).
Proof. exact (TRANS (@lem4045674 _102126 y t) (@lem4045678 _102126 y t)). Qed.
Lemma lem4045681 {_102126 : Type'} (y : _102126) (t : _102126 -> Prop) : (term1576 _102126 y t) = (term1577 _102126 y t).
Proof. exact (MK_COMB (@lem4045663) (@lem4045680 _102126 y t)). Qed.
Lemma lem4045682 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4045689 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045690 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045689 _102126 (type686 _102126) f x). Qed.
Lemma lem4045691 {_102126 : Type'} (x : _102126) : (@IN _102126 x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x).
Proof. exact (@lem4045690 _102126 (@IN _102126) x). Qed.
Lemma lem4045692 {_102126 : Type'} (t : _102126 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4045693 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@IN _102126 x t) = (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x t).
Proof. exact (MK_COMB (@lem4045691 _102126 x) (@lem4045692 _102126 t)). Qed.
Lemma lem4045695 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045696 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045695 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045697 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x t) = (term1575 _102126 x t).
Proof. exact (@lem4045696 _102126 (@I (_102126 -> (_102126 -> Prop) -> Prop) (@IN _102126) x) t). Qed.
Lemma lem4045699 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (@IN _102126 x t) = (term1575 _102126 x t).
Proof. exact (TRANS (@lem4045693 _102126 x t) (@lem4045697 _102126 x t)). Qed.
Lemma lem4045700 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (term1576 _102126 x t) = (term1577 _102126 x t).
Proof. exact (MK_COMB (@lem4045682) (@lem4045699 _102126 x t)). Qed.
Lemma lem4045701 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045702 {_102126 : Type'} (x : _102126) (t : _102126 -> Prop) : (term1578 _102126 x t) = (term1579 _102126 x t).
Proof. exact (MK_COMB (@lem4045701) (@lem4045700 _102126 x t)). Qed.
Lemma lem4045703 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term379 _102126 x y t) = (term1580 _102126 x y t).
Proof. exact (MK_COMB (@lem4045702 _102126 x t) (@lem4045681 _102126 y t)). Qed.
Lemma lem4045704 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045705 {_102126 : Type'} (x : _102126) (y : _102126) (t : _102126 -> Prop) : (term382 _102126 x y t) = (term1581 _102126 x y t).
Proof. exact (MK_COMB (@lem4045704) (@lem4045703 _102126 x y t)). Qed.
Lemma lem4045706 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term384 _102126 _102133 t f x y) = (term1582 _102126 _102133 t f x y).
Proof. exact (MK_COMB (@lem4045705 _102126 x y t) (@lem4045662 _102126 _102133 f x y)). Qed.
Lemma lem4045707 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term386 _102126 _102133 t f x) = (term1583 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4045706 _102126 _102133 t f x y)). Qed.
Lemma lem4045708 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4045709 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term387 _102126 _102133 t f x) = (term1584 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4045708 _102126) (@lem4045707 _102126 _102133 t f x)). Qed.
Lemma lem4045710 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term388 _102126 _102133 t f) = (term1585 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4045709 _102126 _102133 t f x)). Qed.
Lemma lem4045711 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4045712 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term389 _102126 _102133 t f) = (term1586 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4045711 _102126) (@lem4045710 _102126 _102133 t f)). Qed.
Lemma lem4045719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045720 {_102126 : Type'} (f : type639 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045719 (_102126 -> Prop) (type686 _102126) f x). Qed.
Lemma lem4045721 {_102126 : Type'} (t : _102126 -> Prop) : (@SUBSET _102126 t) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t).
Proof. exact (@lem4045720 _102126 (@SUBSET _102126) t). Qed.
Lemma lem4045722 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4045723 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@SUBSET _102126 t s) = (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t s).
Proof. exact (MK_COMB (@lem4045721 _102126 t) (@lem4045722 _102126 s)). Qed.
Lemma lem4045725 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4045726 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4045725 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4045727 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t s) = (term1587 _102126 t s).
Proof. exact (@lem4045726 _102126 (@I ((_102126 -> Prop) -> (_102126 -> Prop) -> Prop) (@SUBSET _102126) t) s). Qed.
Lemma lem4045729 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (@SUBSET _102126 t s) = (term1587 _102126 t s).
Proof. exact (TRANS (@lem4045723 _102126 t s) (@lem4045727 _102126 t s)). Qed.
Lemma lem4045730 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045731 {_102126 : Type'} (t : _102126 -> Prop) (s : _102126 -> Prop) : (term190 _102126 t s) = (term1588 _102126 t s).
Proof. exact (MK_COMB (@lem4045730) (@lem4045729 _102126 t s)). Qed.
Lemma lem4045732 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term390 _102126 _102133 s t f) = (term1589 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4045731 _102126 t s) (@lem4045712 _102126 _102133 t f)). Qed.
Lemma lem4045733 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045734 {_102126 _102133 : Type'} (s : _102126 -> Prop) (t : _102126 -> Prop) (f : _102126 -> _102133) : (term391 _102126 _102133 s t f) = (term1590 _102126 _102133 s t f).
Proof. exact (MK_COMB (@lem4045733) (@lem4045732 _102126 _102133 s t f)). Qed.
Lemma lem4045735 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term392 _102126 _102133 s P f t) = (term1591 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045734 _102126 _102133 s t f) (@lem4045603 _102126 _102133 P f t)). Qed.
Lemma lem4045736 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4045737 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term395 _102126 _102133 s P f t) = (term1592 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045736) (@lem4045735 _102126 _102133 s P f t)). Qed.
Lemma lem4045738 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term397 _102126 _102133 s P f t) = (term1612 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045737 _102126 _102133 s P f t) (@lem4045579 _102126 _102133 f t)). Qed.
Lemma lem4045739 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4045740 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term407 _102126 _102133 s P f t) = (term1613 _102126 _102133 s P f t).
Proof. exact (MK_COMB (@lem4045739) (@lem4045738 _102126 _102133 s P f t)). Qed.
Lemma lem4045741 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term409 _102126 _102133 s P f t n) = (term1614 _102126 _102133 s P f t n).
Proof. exact (MK_COMB (@lem4045740 _102126 _102133 s P f t) (@lem4045502 _102126 _102133 s P f t n)). Qed.
Lemma lem4045742 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term1614 _102126 _102133 s P f t n.
Proof. exact (EQ_MP (@lem4045741 _102126 _102133 s P f t n) (@lem4039561 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4046635 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4046636 {_102133 : Type'} : (@CARD _102133) = (@CARD _102133).
Proof. exact (eq_refl (@CARD _102133)). Qed.
Lemma lem4046643 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046644 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4046643 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4046645 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4046644 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4046646 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046647 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s).
Proof. exact (MK_COMB (@lem4046645 _102126 _102133 f) (@lem4046646 _102126 s)). Qed.
Lemma lem4046649 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046650 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4046649 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4046651 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s) = (term1533 _102126 _102133 f s).
Proof. exact (@lem4046650 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) s). Qed.
Lemma lem4046653 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (term1533 _102126 _102133 f s).
Proof. exact (TRANS (@lem4046647 _102126 _102133 f s) (@lem4046651 _102126 _102133 f s)). Qed.
Lemma lem4046654 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term311 _102126 _102133 f s) = (term1534 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4046636 _102133) (@lem4046653 _102126 _102133 f s)). Qed.
Lemma lem4046656 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046657 {_102133 : Type'} (f : type687 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> nat) f x).
Proof. exact (@lem4046656 (_102133 -> Prop) nat f x). Qed.
Lemma lem4046658 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1534 _102126 _102133 f s) = (term1535 _102126 _102133 f s).
Proof. exact (@lem4046657 _102133 (@CARD _102133) (term1533 _102126 _102133 f s)). Qed.
Lemma lem4046659 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term311 _102126 _102133 f s) = (term1535 _102126 _102133 f s).
Proof. exact (TRANS (@lem4046654 _102126 _102133 f s) (@lem4046658 _102126 _102133 f s)). Qed.
Lemma lem4046664 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046665 {_102126 : Type'} (f : type687 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> nat) f x).
Proof. exact (@lem4046664 (_102126 -> Prop) nat f x). Qed.
Lemma lem4046667 {_102126 : Type'} (s : _102126 -> Prop) : (@CARD _102126 s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s).
Proof. exact (@lem4046665 _102126 (@CARD _102126) s). Qed.
Lemma lem4046668 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1615 _102126 _102133 f s) = (term1616 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4046635) (@lem4046659 _102126 _102133 f s)). Qed.
Lemma lem4046669 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term311 _102126 _102133 f s) = (@CARD _102126 s)) = ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s)).
Proof. exact (MK_COMB (@lem4046668 _102126 _102133 f s) (@lem4046667 _102126 s)). Qed.
Lemma lem4046670 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4046675 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046676 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4046675 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4046678 {_102126 : Type'} (s : _102126 -> Prop) : (@FINITE _102126 s) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) s).
Proof. exact (@lem4046676 _102126 (@FINITE _102126) s). Qed.
Lemma lem4046679 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1604 _102126 s).
Proof. exact (MK_COMB (@lem4046670) (@lem4046678 _102126 s)). Qed.
Lemma lem4046680 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4046681 {_102126 : Type'} : (@eq _102126) = (@eq _102126).
Proof. exact (eq_refl (@eq _102126)). Qed.
Lemma lem4046688 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046689 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046688 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046690 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f).
Proof. exact (@lem4046689 _102126 _102133 x'''' f). Qed.
Lemma lem4046691 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046692 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s).
Proof. exact (MK_COMB (@lem4046690 _102126 _102133 x'''' f) (@lem4046691 _102126 s)). Qed.
Lemma lem4046694 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046695 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046694 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046696 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (@lem4046695 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f) s). Qed.
Lemma lem4046698 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046692 _102126 _102133 x'''' f s) (@lem4046696 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046706 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046705 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046707 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f).
Proof. exact (@lem4046706 _102126 _102133 y'''' f). Qed.
Lemma lem4046708 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046709 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s).
Proof. exact (MK_COMB (@lem4046707 _102126 _102133 y'''' f) (@lem4046708 _102126 s)). Qed.
Lemma lem4046711 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046712 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046711 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046713 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (@lem4046712 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f) s). Qed.
Lemma lem4046715 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046709 _102126 _102133 y'''' f s) (@lem4046713 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046716 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1618 _102126 _102133 x'''' f s) = (term1619 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046681 _102126) (@lem4046698 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046717 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((x'''' f s) = (y'''' f s)) = ((term1617 _102126 _102133 x'''' f s) = (term1617 _102126 _102133 y'''' f s)).
Proof. exact (MK_COMB (@lem4046716 _102126 _102133 x'''' f s) (@lem4046715 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046718 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1620 _102126 _102133 x'''' y'''' f s) = (term1621 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046680) (@lem4046717 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046719 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4046720 {_102126 _102133 : Type'} (f : _102126 -> _102133) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4046727 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046728 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046727 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046729 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f).
Proof. exact (@lem4046728 _102126 _102133 x'''' f). Qed.
Lemma lem4046730 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046731 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s).
Proof. exact (MK_COMB (@lem4046729 _102126 _102133 x'''' f) (@lem4046730 _102126 s)). Qed.
Lemma lem4046733 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046734 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046733 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046735 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (@lem4046734 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f) s). Qed.
Lemma lem4046737 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046731 _102126 _102133 x'''' f s) (@lem4046735 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046738 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 x'''' f s) = (term1623 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046720 _102126 _102133 f) (@lem4046737 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046741 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4046740 _102126 _102133 f x). Qed.
Lemma lem4046742 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1623 _102126 _102133 x'''' f s) = (term1624 _102126 _102133 x'''' f s).
Proof. exact (@lem4046741 _102126 _102133 f (term1617 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046743 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 x'''' f s) = (term1624 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046738 _102126 _102133 x'''' f s) (@lem4046742 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046744 {_102126 _102133 : Type'} (f : _102126 -> _102133) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4046751 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046752 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046751 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046753 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f).
Proof. exact (@lem4046752 _102126 _102133 y'''' f). Qed.
Lemma lem4046754 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046755 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s).
Proof. exact (MK_COMB (@lem4046753 _102126 _102133 y'''' f) (@lem4046754 _102126 s)). Qed.
Lemma lem4046757 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046758 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046757 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046759 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (@lem4046758 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f) s). Qed.
Lemma lem4046761 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046755 _102126 _102133 y'''' f s) (@lem4046759 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046762 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 y'''' f s) = (term1623 _102126 _102133 y'''' f s).
Proof. exact (MK_COMB (@lem4046744 _102126 _102133 f) (@lem4046761 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046764 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046765 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4046764 _102126 _102133 f x). Qed.
Lemma lem4046766 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1623 _102126 _102133 y'''' f s) = (term1624 _102126 _102133 y'''' f s).
Proof. exact (@lem4046765 _102126 _102133 f (term1617 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046767 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 y'''' f s) = (term1624 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046762 _102126 _102133 y'''' f s) (@lem4046766 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046768 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1625 _102126 _102133 x'''' f s) = (term1626 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046719 _102133) (@lem4046743 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046769 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1622 _102126 _102133 x'''' f s) = (term1622 _102126 _102133 y'''' f s)) = ((term1624 _102126 _102133 x'''' f s) = (term1624 _102126 _102133 y'''' f s)).
Proof. exact (MK_COMB (@lem4046768 _102126 _102133 x'''' f s) (@lem4046767 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046770 {_102126 : Type'} : (@IN _102126) = (@IN _102126).
Proof. exact (eq_refl (@IN _102126)). Qed.
Lemma lem4046777 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046778 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046777 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046779 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f).
Proof. exact (@lem4046778 _102126 _102133 y'''' f). Qed.
Lemma lem4046780 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046781 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s).
Proof. exact (MK_COMB (@lem4046779 _102126 _102133 y'''' f) (@lem4046780 _102126 s)). Qed.
Lemma lem4046783 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046784 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046783 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046785 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (@lem4046784 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''' f) s). Qed.
Lemma lem4046787 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''' f s) = (term1617 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046781 _102126 _102133 y'''' f s) (@lem4046785 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046788 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046789 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1627 _102126 _102133 y'''' f s) = (term1628 _102126 _102133 y'''' f s).
Proof. exact (MK_COMB (@lem4046770 _102126) (@lem4046787 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046790 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 y'''' f s) = (term1630 _102126 _102133 y'''' f s).
Proof. exact (MK_COMB (@lem4046789 _102126 _102133 y'''' f s) (@lem4046788 _102126 s)). Qed.
Lemma lem4046792 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046793 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4046792 _102126 (type686 _102126) f x). Qed.
Lemma lem4046794 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1628 _102126 _102133 y'''' f s) = (term1631 _102126 _102133 y'''' f s).
Proof. exact (@lem4046793 _102126 (@IN _102126) (term1617 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046795 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046796 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 y'''' f s) = (term1632 _102126 _102133 y'''' f s).
Proof. exact (MK_COMB (@lem4046794 _102126 _102133 y'''' f s) (@lem4046795 _102126 s)). Qed.
Lemma lem4046798 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046799 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4046798 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4046800 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1632 _102126 _102133 y'''' f s) = (term1633 _102126 _102133 y'''' f s).
Proof. exact (@lem4046799 _102126 (term1631 _102126 _102133 y'''' f s) s). Qed.
Lemma lem4046801 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 y'''' f s) = (term1633 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046796 _102126 _102133 y'''' f s) (@lem4046800 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046802 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 y'''' f s) = (term1633 _102126 _102133 y'''' f s).
Proof. exact (TRANS (@lem4046790 _102126 _102133 y'''' f s) (@lem4046801 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046803 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4046804 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1634 _102126 _102133 y'''' f s) = (term1635 _102126 _102133 y'''' f s).
Proof. exact (MK_COMB (@lem4046803) (@lem4046802 _102126 _102133 y'''' f s)). Qed.
Lemma lem4046805 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1636 _102126 _102133 x'''' y'''' f s) = (term1637 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046804 _102126 _102133 y'''' f s) (@lem4046769 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046806 {_102126 : Type'} : (@IN _102126) = (@IN _102126).
Proof. exact (eq_refl (@IN _102126)). Qed.
Lemma lem4046813 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046814 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046813 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4046815 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f).
Proof. exact (@lem4046814 _102126 _102133 x'''' f). Qed.
Lemma lem4046816 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046817 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s).
Proof. exact (MK_COMB (@lem4046815 _102126 _102133 x'''' f) (@lem4046816 _102126 s)). Qed.
Lemma lem4046819 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046820 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4046819 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4046821 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (@lem4046820 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''' f) s). Qed.
Lemma lem4046823 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''' f s) = (term1617 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046817 _102126 _102133 x'''' f s) (@lem4046821 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046824 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046825 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1627 _102126 _102133 x'''' f s) = (term1628 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046806 _102126) (@lem4046823 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046826 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 x'''' f s) = (term1630 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046825 _102126 _102133 x'''' f s) (@lem4046824 _102126 s)). Qed.
Lemma lem4046828 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046829 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4046828 _102126 (type686 _102126) f x). Qed.
Lemma lem4046830 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1628 _102126 _102133 x'''' f s) = (term1631 _102126 _102133 x'''' f s).
Proof. exact (@lem4046829 _102126 (@IN _102126) (term1617 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046831 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4046832 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 x'''' f s) = (term1632 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046830 _102126 _102133 x'''' f s) (@lem4046831 _102126 s)). Qed.
Lemma lem4046834 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4046835 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4046834 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4046836 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1632 _102126 _102133 x'''' f s) = (term1633 _102126 _102133 x'''' f s).
Proof. exact (@lem4046835 _102126 (term1631 _102126 _102133 x'''' f s) s). Qed.
Lemma lem4046837 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 x'''' f s) = (term1633 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046832 _102126 _102133 x'''' f s) (@lem4046836 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046838 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 x'''' f s) = (term1633 _102126 _102133 x'''' f s).
Proof. exact (TRANS (@lem4046826 _102126 _102133 x'''' f s) (@lem4046837 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4046840 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1634 _102126 _102133 x'''' f s) = (term1635 _102126 _102133 x'''' f s).
Proof. exact (MK_COMB (@lem4046839) (@lem4046838 _102126 _102133 x'''' f s)). Qed.
Lemma lem4046841 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1638 _102126 _102133 x'''' y'''' f s) = (term1639 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046840 _102126 _102133 x'''' f s) (@lem4046805 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4046843 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1640 _102126 _102133 x'''' y'''' f s) = (term1641 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046842) (@lem4046841 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046844 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1642 _102126 _102133 x'''' y'''' f s) = (term1643 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046843 _102126 _102133 x'''' y'''' f s) (@lem4046718 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046845 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4046846 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1644 _102126 _102133 x'''' y'''' f s) = (term1645 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046845) (@lem4046844 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046847 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1646 _102126 _102133 x'''' y'''' f s) = (term1647 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046846 _102126 _102133 x'''' y'''' f s) (@lem4046679 _102126 s)). Qed.
Lemma lem4046848 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4046849 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1648 _102126 _102133 x'''' y'''' f s) = (term1649 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046848) (@lem4046847 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046850 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1650 _102126 _102133 x'''' y'''' f s) = (term1651 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4046849 _102126 _102133 x'''' y'''' f s) (@lem4046669 _102126 _102133 f s)). Qed.
Lemma lem4046851 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1652 _102126 _102133 x'''' y'''' f) = (term1653 _102126 _102133 x'''' y'''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4046850 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4046852 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4046853 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1356 _102126 _102133 x'''' y'''' f) = (term1654 _102126 _102133 x'''' y'''' f).
Proof. exact (MK_COMB (@lem4046852 _102126) (@lem4046851 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4046854 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1358 _102126 _102133 x'''' y'''') = (term1655 _102126 _102133 x'''' y'''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4046853 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4046855 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4046856 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1360 _102126 _102133 x'''' y'''') = (term1656 _102126 _102133 x'''' y'''').
Proof. exact (MK_COMB (@lem4046855 _102126 _102133) (@lem4046854 _102126 _102133 x'''' y'''')). Qed.
Lemma lem4046857 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1656 _102126 _102133 x'''' y''''.
Proof. exact (EQ_MP (@lem4046856 _102126 _102133 x'''' y'''') (@lem4045171 _102126 _102133 x'''' y'''' h1)). Qed.
Lemma lem4049130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049131 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049130 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4049133 {_102126 : Type'} (s : _102126 -> Prop) : (@FINITE _102126 s) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) s).
Proof. exact (@lem4049131 _102126 (@FINITE _102126) s). Qed.
Lemma lem4049134 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4049135 {_102133 : Type'} : (@FINITE _102133) = (@FINITE _102133).
Proof. exact (eq_refl (@FINITE _102133)). Qed.
Lemma lem4049142 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049143 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4049142 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4049144 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4049143 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4049145 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049146 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s).
Proof. exact (MK_COMB (@lem4049144 _102126 _102133 f) (@lem4049145 _102126 s)). Qed.
Lemma lem4049148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049149 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4049148 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4049150 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s) = (term1533 _102126 _102133 f s).
Proof. exact (@lem4049149 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) s). Qed.
Lemma lem4049152 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (term1533 _102126 _102133 f s).
Proof. exact (TRANS (@lem4049146 _102126 _102133 f s) (@lem4049150 _102126 _102133 f s)). Qed.
Lemma lem4049153 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term205 _102126 _102133 f s) = (term1596 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049135 _102133) (@lem4049152 _102126 _102133 f s)). Qed.
Lemma lem4049155 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049156 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4049155 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4049157 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1596 _102126 _102133 f s) = (term1597 _102126 _102133 f s).
Proof. exact (@lem4049156 _102133 (@FINITE _102133) (term1533 _102126 _102133 f s)). Qed.
Lemma lem4049158 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term205 _102126 _102133 f s) = (term1597 _102126 _102133 f s).
Proof. exact (TRANS (@lem4049153 _102126 _102133 f s) (@lem4049157 _102126 _102133 f s)). Qed.
Lemma lem4049159 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1598 _102126 _102133 f s) = (term1599 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049134) (@lem4049158 _102126 _102133 f s)). Qed.
Lemma lem4049160 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4049161 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1657 _102126 _102133 f s) = (term1658 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049160) (@lem4049159 _102126 _102133 f s)). Qed.
Lemma lem4049162 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1659 _102126 _102133 f s) = (term1660 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049161 _102126 _102133 f s) (@lem4049133 _102126 s)). Qed.
Lemma lem4049163 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4049168 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049169 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049168 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4049171 {_102126 : Type'} (s : _102126 -> Prop) : (@FINITE _102126 s) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) s).
Proof. exact (@lem4049169 _102126 (@FINITE _102126) s). Qed.
Lemma lem4049172 {_102126 : Type'} (s : _102126 -> Prop) : (term1204 _102126 s) = (term1604 _102126 s).
Proof. exact (MK_COMB (@lem4049163) (@lem4049171 _102126 s)). Qed.
Lemma lem4049173 {_102133 : Type'} : (@FINITE _102133) = (@FINITE _102133).
Proof. exact (eq_refl (@FINITE _102133)). Qed.
Lemma lem4049180 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049181 {_102126 _102133 : Type'} (f : type528 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4049180 (_102126 -> _102133) (type678 _102126 _102133) f x). Qed.
Lemma lem4049182 {_102126 _102133 : Type'} (f : _102126 -> _102133) : (@IMAGE _102126 _102133 f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f).
Proof. exact (@lem4049181 _102126 _102133 (@IMAGE _102126 _102133) f). Qed.
Lemma lem4049183 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049184 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s).
Proof. exact (MK_COMB (@lem4049182 _102126 _102133 f) (@lem4049183 _102126 s)). Qed.
Lemma lem4049186 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049187 {_102126 _102133 : Type'} (f : type678 _102126 _102133) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102133 -> Prop) f x).
Proof. exact (@lem4049186 (_102126 -> Prop) (_102133 -> Prop) f x). Qed.
Lemma lem4049188 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f s) = (term1533 _102126 _102133 f s).
Proof. exact (@lem4049187 _102126 _102133 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102133 -> Prop) (@IMAGE _102126 _102133) f) s). Qed.
Lemma lem4049190 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (@IMAGE _102126 _102133 f s) = (term1533 _102126 _102133 f s).
Proof. exact (TRANS (@lem4049184 _102126 _102133 f s) (@lem4049188 _102126 _102133 f s)). Qed.
Lemma lem4049191 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term205 _102126 _102133 f s) = (term1596 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049173 _102133) (@lem4049190 _102126 _102133 f s)). Qed.
Lemma lem4049193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049194 {_102133 : Type'} (f : type686 _102133) (x : _102133 -> Prop) : (f x) = (@I ((_102133 -> Prop) -> Prop) f x).
Proof. exact (@lem4049193 (_102133 -> Prop) Prop f x). Qed.
Lemma lem4049195 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1596 _102126 _102133 f s) = (term1597 _102126 _102133 f s).
Proof. exact (@lem4049194 _102133 (@FINITE _102133) (term1533 _102126 _102133 f s)). Qed.
Lemma lem4049196 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term205 _102126 _102133 f s) = (term1597 _102126 _102133 f s).
Proof. exact (TRANS (@lem4049191 _102126 _102133 f s) (@lem4049195 _102126 _102133 f s)). Qed.
Lemma lem4049197 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4049198 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1661 _102126 _102133 f s) = (term1662 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049197) (@lem4049196 _102126 _102133 f s)). Qed.
Lemma lem4049199 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1663 _102126 _102133 f s) = (term1664 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049198 _102126 _102133 f s) (@lem4049172 _102126 s)). Qed.
Lemma lem4049200 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4049201 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1665 _102126 _102133 f s) = (term1666 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049200) (@lem4049199 _102126 _102133 f s)). Qed.
Lemma lem4049202 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : (term429 _102126 _102133 f s) = (term1667 _102126 _102133 f s).
Proof. exact (MK_COMB (@lem4049201 _102126 _102133 f s) (@lem4049162 _102126 _102133 f s)). Qed.
Lemma lem4049203 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4049204 {_102126 : Type'} : (@eq _102126) = (@eq _102126).
Proof. exact (eq_refl (@eq _102126)). Qed.
Lemma lem4049211 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049212 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049211 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049213 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f).
Proof. exact (@lem4049212 _102126 _102133 x'''''''''''''' f). Qed.
Lemma lem4049214 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049215 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049213 _102126 _102133 x'''''''''''''' f) (@lem4049214 _102126 s)). Qed.
Lemma lem4049217 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049218 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049217 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049219 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049218 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f) s). Qed.
Lemma lem4049221 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049215 _102126 _102133 x'''''''''''''' f s) (@lem4049219 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049228 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049229 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049228 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049230 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f).
Proof. exact (@lem4049229 _102126 _102133 y'''''''''''''' f). Qed.
Lemma lem4049231 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049232 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049230 _102126 _102133 y'''''''''''''' f) (@lem4049231 _102126 s)). Qed.
Lemma lem4049234 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049235 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049234 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049236 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049235 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f) s). Qed.
Lemma lem4049238 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049232 _102126 _102133 y'''''''''''''' f s) (@lem4049236 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049239 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1618 _102126 _102133 x'''''''''''''' f s) = (term1619 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049204 _102126) (@lem4049221 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049240 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((x'''''''''''''' f s) = (y'''''''''''''' f s)) = ((term1617 _102126 _102133 x'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s)).
Proof. exact (MK_COMB (@lem4049239 _102126 _102133 x'''''''''''''' f s) (@lem4049238 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049241 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1620 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049203) (@lem4049240 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049242 {_102133 : Type'} : (@eq _102133) = (@eq _102133).
Proof. exact (eq_refl (@eq _102133)). Qed.
Lemma lem4049243 {_102126 _102133 : Type'} (f : _102126 -> _102133) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4049250 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049251 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049250 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049252 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f).
Proof. exact (@lem4049251 _102126 _102133 x'''''''''''''' f). Qed.
Lemma lem4049253 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049254 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049252 _102126 _102133 x'''''''''''''' f) (@lem4049253 _102126 s)). Qed.
Lemma lem4049256 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049257 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049256 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049258 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049257 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f) s). Qed.
Lemma lem4049260 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049254 _102126 _102133 x'''''''''''''' f s) (@lem4049258 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049261 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 x'''''''''''''' f s) = (term1623 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049243 _102126 _102133 f) (@lem4049260 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049263 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049264 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4049263 _102126 _102133 f x). Qed.
Lemma lem4049265 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1623 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049264 _102126 _102133 f (term1617 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049266 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049261 _102126 _102133 x'''''''''''''' f s) (@lem4049265 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049267 {_102126 _102133 : Type'} (f : _102126 -> _102133) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4049274 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049275 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049274 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049276 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f).
Proof. exact (@lem4049275 _102126 _102133 y'''''''''''''' f). Qed.
Lemma lem4049277 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049278 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049276 _102126 _102133 y'''''''''''''' f) (@lem4049277 _102126 s)). Qed.
Lemma lem4049280 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049281 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049280 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049282 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049281 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f) s). Qed.
Lemma lem4049284 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049278 _102126 _102133 y'''''''''''''' f s) (@lem4049282 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049285 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 y'''''''''''''' f s) = (term1623 _102126 _102133 y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049267 _102126 _102133 f) (@lem4049284 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049287 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049288 {_102126 _102133 : Type'} (f : _102126 -> _102133) (x : _102126) : (f x) = (@I (_102126 -> _102133) f x).
Proof. exact (@lem4049287 _102126 _102133 f x). Qed.
Lemma lem4049289 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1623 _102126 _102133 y'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049288 _102126 _102133 f (term1617 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049290 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1622 _102126 _102133 y'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049285 _102126 _102133 y'''''''''''''' f s) (@lem4049289 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049291 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1625 _102126 _102133 x'''''''''''''' f s) = (term1626 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049242 _102133) (@lem4049266 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049292 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1622 _102126 _102133 x'''''''''''''' f s) = (term1622 _102126 _102133 y'''''''''''''' f s)) = ((term1624 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s)).
Proof. exact (MK_COMB (@lem4049291 _102126 _102133 x'''''''''''''' f s) (@lem4049290 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049293 {_102126 : Type'} : (@IN _102126) = (@IN _102126).
Proof. exact (eq_refl (@IN _102126)). Qed.
Lemma lem4049300 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049301 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049300 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049302 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (y'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f).
Proof. exact (@lem4049301 _102126 _102133 y'''''''''''''' f). Qed.
Lemma lem4049303 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049304 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049302 _102126 _102133 y'''''''''''''' f) (@lem4049303 _102126 s)). Qed.
Lemma lem4049306 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049307 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049306 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049308 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049307 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) y'''''''''''''' f) s). Qed.
Lemma lem4049310 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (y'''''''''''''' f s) = (term1617 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049304 _102126 _102133 y'''''''''''''' f s) (@lem4049308 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049311 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049312 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1627 _102126 _102133 y'''''''''''''' f s) = (term1628 _102126 _102133 y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049293 _102126) (@lem4049310 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049313 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 y'''''''''''''' f s) = (term1630 _102126 _102133 y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049312 _102126 _102133 y'''''''''''''' f s) (@lem4049311 _102126 s)). Qed.
Lemma lem4049315 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049316 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049315 _102126 (type686 _102126) f x). Qed.
Lemma lem4049317 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1628 _102126 _102133 y'''''''''''''' f s) = (term1631 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049316 _102126 (@IN _102126) (term1617 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049318 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049319 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 y'''''''''''''' f s) = (term1632 _102126 _102133 y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049317 _102126 _102133 y'''''''''''''' f s) (@lem4049318 _102126 s)). Qed.
Lemma lem4049321 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049322 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049321 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4049323 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1632 _102126 _102133 y'''''''''''''' f s) = (term1633 _102126 _102133 y'''''''''''''' f s).
Proof. exact (@lem4049322 _102126 (term1631 _102126 _102133 y'''''''''''''' f s) s). Qed.
Lemma lem4049324 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 y'''''''''''''' f s) = (term1633 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049319 _102126 _102133 y'''''''''''''' f s) (@lem4049323 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049325 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 y'''''''''''''' f s) = (term1633 _102126 _102133 y'''''''''''''' f s).
Proof. exact (TRANS (@lem4049313 _102126 _102133 y'''''''''''''' f s) (@lem4049324 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049326 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4049327 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1634 _102126 _102133 y'''''''''''''' f s) = (term1635 _102126 _102133 y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049326) (@lem4049325 _102126 _102133 y'''''''''''''' f s)). Qed.
Lemma lem4049328 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1636 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1637 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049327 _102126 _102133 y'''''''''''''' f s) (@lem4049292 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049329 {_102126 : Type'} : (@IN _102126) = (@IN _102126).
Proof. exact (eq_refl (@IN _102126)). Qed.
Lemma lem4049336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049337 {_102126 _102133 : Type'} (f : type529 _102126 _102133) (x : _102126 -> _102133) : (f x) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049336 (_102126 -> _102133) (type684 _102126) f x). Qed.
Lemma lem4049338 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (x'''''''''''''' f) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f).
Proof. exact (@lem4049337 _102126 _102133 x'''''''''''''' f). Qed.
Lemma lem4049339 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049340 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049338 _102126 _102133 x'''''''''''''' f) (@lem4049339 _102126 s)). Qed.
Lemma lem4049342 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049343 {_102126 : Type'} (f : type684 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> _102126) f x).
Proof. exact (@lem4049342 (_102126 -> Prop) _102126 f x). Qed.
Lemma lem4049344 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049343 _102126 (@I ((_102126 -> _102133) -> (_102126 -> Prop) -> _102126) x'''''''''''''' f) s). Qed.
Lemma lem4049346 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (x'''''''''''''' f s) = (term1617 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049340 _102126 _102133 x'''''''''''''' f s) (@lem4049344 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049347 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049348 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1627 _102126 _102133 x'''''''''''''' f s) = (term1628 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049329 _102126) (@lem4049346 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049349 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 x'''''''''''''' f s) = (term1630 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049348 _102126 _102133 x'''''''''''''' f s) (@lem4049347 _102126 s)). Qed.
Lemma lem4049351 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049352 {_102126 : Type'} (f : type1364 _102126) (x : _102126) : (f x) = (@I (_102126 -> (_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049351 _102126 (type686 _102126) f x). Qed.
Lemma lem4049353 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1628 _102126 _102133 x'''''''''''''' f s) = (term1631 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049352 _102126 (@IN _102126) (term1617 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049354 {_102126 : Type'} (s : _102126 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4049355 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 x'''''''''''''' f s) = (term1632 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049353 _102126 _102133 x'''''''''''''' f s) (@lem4049354 _102126 s)). Qed.
Lemma lem4049357 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4049358 {_102126 : Type'} (f : type686 _102126) (x : _102126 -> Prop) : (f x) = (@I ((_102126 -> Prop) -> Prop) f x).
Proof. exact (@lem4049357 (_102126 -> Prop) Prop f x). Qed.
Lemma lem4049359 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1632 _102126 _102133 x'''''''''''''' f s) = (term1633 _102126 _102133 x'''''''''''''' f s).
Proof. exact (@lem4049358 _102126 (term1631 _102126 _102133 x'''''''''''''' f s) s). Qed.
Lemma lem4049360 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1630 _102126 _102133 x'''''''''''''' f s) = (term1633 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049355 _102126 _102133 x'''''''''''''' f s) (@lem4049359 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049361 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1629 _102126 _102133 x'''''''''''''' f s) = (term1633 _102126 _102133 x'''''''''''''' f s).
Proof. exact (TRANS (@lem4049349 _102126 _102133 x'''''''''''''' f s) (@lem4049360 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049362 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4049363 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1634 _102126 _102133 x'''''''''''''' f s) = (term1635 _102126 _102133 x'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049362) (@lem4049361 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4049364 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1638 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1639 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049363 _102126 _102133 x'''''''''''''' f s) (@lem4049328 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049365 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4049366 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1640 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1641 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049365) (@lem4049364 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049367 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1642 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1643 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049366 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4049241 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049368 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4049369 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1644 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1645 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049368) (@lem4049367 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049370 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1668 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1669 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4049369 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4049202 _102126 _102133 f s)). Qed.
Lemma lem4049371 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1670 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1671 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4049370 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4049372 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4049373 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term564 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1672 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (MK_COMB (@lem4049372 _102126) (@lem4049371 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4049374 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term566 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1673 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4049373 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4049375 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4049376 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term568 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1674 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (MK_COMB (@lem4049375 _102126 _102133) (@lem4049374 _102126 _102133 x'''''''''''''' y'''''''''''''')). Qed.
Lemma lem4049377 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1674 _102126 _102133 x'''''''''''''' y''''''''''''''.
Proof. exact (EQ_MP (@lem4049376 _102126 _102133 x'''''''''''''' y'''''''''''''') (@lem4045191 _102126 _102133 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4049378 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1612 _102126 _102133 s P f t.
Proof. exact (h1). Qed.
Lemma lem4049379 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1595 _102126 _102133 s P f t n.
Proof. exact (h1). Qed.
Lemma lem4049380 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1611 _102126 _102133 f t.
Proof. exact (proj2 (@lem4049378 _102126 _102133 s P f t h1)). Qed.
Lemma lem4049381 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1591 _102126 _102133 s P f t.
Proof. exact (proj1 (@lem4049378 _102126 _102133 s P f t h1)). Qed.
Lemma lem4049383 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1589 _102126 _102133 s t f.
Proof. exact (proj1 (@lem4049381 _102126 _102133 s P f t h1)). Qed.
Lemma lem4049384 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1586 _102126 _102133 t f.
Proof. exact (proj2 (@lem4049383 _102126 _102133 s P f t h1)). Qed.
Lemma lem4049386 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1608 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4049387 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1603 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4049392 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1556 _102126 _102133 f t n.
Proof. exact (proj2 (@lem4049379 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4049393 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1593 _102126 _102133 s P f t.
Proof. exact (proj1 (@lem4049379 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4049395 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1591 _102126 _102133 s P f t.
Proof. exact (proj1 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4049397 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1589 _102126 _102133 s t f.
Proof. exact (proj1 (@lem4049395 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4049398 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1586 _102126 _102133 t f.
Proof. exact (proj2 (@lem4049397 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4049400 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1553 _102126 _102133 f t n.
Proof. exact (h1). Qed.
Lemma lem4049401 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1547 _102126 _102133 f t n.
Proof. exact (h1). Qed.
Lemma lem4050564 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1669 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1675 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19490 (term1664 _102126 _102133 f s) (term1643 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4050565 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1676 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1677 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4050566 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (eq_refl (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050567 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1679 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1680 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''''''''''''' f s) (term1637 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4050574 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1681 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1682 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''''''''''''' f s) ((term1624 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s)) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4050577 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1683 _102126 _102133 x'''''''''''''' f s) = (term1683 _102126 _102133 x'''''''''''''' f s).
Proof. exact (eq_refl (term1683 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4050578 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1680 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1684 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050577 _102126 _102133 x'''''''''''''' f s) (@lem4050574 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050579 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1679 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1684 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4050567 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050578 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050580 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4050581 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1685 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1686 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050580) (@lem4050579 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050582 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1677 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1687 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050581 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050566 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050583 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1676 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1687 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4050565 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050582 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050584 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1688 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1689 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4050585 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (eq_refl (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050586 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1691 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1692 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''''''''''''' f s) (term1637 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4050593 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1693 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1694 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''''''''''''' f s) ((term1624 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s)) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4050596 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1695 _102126 _102133 x'''''''''''''' f s) = (term1695 _102126 _102133 x'''''''''''''' f s).
Proof. exact (eq_refl (term1695 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4050597 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1692 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1696 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050596 _102126 _102133 x'''''''''''''' f s) (@lem4050593 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050598 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1691 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1696 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4050586 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050597 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050599 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4050600 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1697 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1698 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050599) (@lem4050598 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050601 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1689 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1699 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050600 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050585 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050602 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1688 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1699 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4050584 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050601 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4050604 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1700 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1701 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050603) (@lem4050602 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050605 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1675 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4050604 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050583 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050607 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1669 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4050564 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4050605 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050608 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1671 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1703 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4050607 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4050609 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4050610 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1672 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (MK_COMB (@lem4050609 _102126) (@lem4050608 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4050611 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term1673 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1705 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4050610 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4050612 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4050614 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term1674 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1706 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (MK_COMB (@lem4050612 _102126 _102133) (@lem4050611 _102126 _102133 x'''''''''''''' y'''''''''''''')). Qed.
Lemma lem4050615 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1706 _102126 _102133 x'''''''''''''' y''''''''''''''.
Proof. exact (EQ_MP (@lem4050614 _102126 _102133 x'''''''''''''' y'''''''''''''') (@lem4049377 _102126 _102133 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4050659 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1582 _102126 _102133 t f x y) = (term1707 _102126 _102133 t f x y).
Proof. exact (@lem19490 (term1571 _102126 _102133 f x y) (term1580 _102126 x y t) (term1566 _102126 _102133 f x y)). Qed.
Lemma lem4050660 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1583 _102126 _102133 t f x) = (term1708 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4050659 _102126 _102133 t f x y)). Qed.
Lemma lem4050661 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4050662 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1584 _102126 _102133 t f x) = (term1709 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4050661 _102126) (@lem4050660 _102126 _102133 t f x)). Qed.
Lemma lem4050663 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1585 _102126 _102133 t f) = (term1710 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4050662 _102126 _102133 t f x)). Qed.
Lemma lem4050664 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4050666 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1586 _102126 _102133 t f) = (term1711 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4050664 _102126) (@lem4050663 _102126 _102133 t f)). Qed.
Lemma lem4050667 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1711 _102126 _102133 t f.
Proof. exact (EQ_MP (@lem4050666 _102126 _102133 t f) (@lem4049384 _102126 _102133 s P f t h1)). Qed.
Lemma lem4051834 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1669 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1675 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19490 (term1664 _102126 _102133 f s) (term1643 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4051835 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1676 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1677 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4051836 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (eq_refl (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051837 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1679 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1680 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''''''''''''' f s) (term1637 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4051844 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1681 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1682 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''''''''''''' f s) ((term1624 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s)) (term1660 _102126 _102133 f s)). Qed.
Lemma lem4051847 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1683 _102126 _102133 x'''''''''''''' f s) = (term1683 _102126 _102133 x'''''''''''''' f s).
Proof. exact (eq_refl (term1683 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4051848 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1680 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1684 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051847 _102126 _102133 x'''''''''''''' f s) (@lem4051844 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051849 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1679 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1684 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4051837 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051848 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051850 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4051851 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1685 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1686 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051850) (@lem4051849 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051852 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1677 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1687 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051851 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051836 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051853 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1676 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1687 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4051835 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051852 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051854 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1688 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1689 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4051855 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (eq_refl (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051856 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1691 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1692 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''''''''''''' f s) (term1637 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4051863 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1693 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1694 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''''''''''''' f s) ((term1624 _102126 _102133 x'''''''''''''' f s) = (term1624 _102126 _102133 y'''''''''''''' f s)) (term1664 _102126 _102133 f s)). Qed.
Lemma lem4051866 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1695 _102126 _102133 x'''''''''''''' f s) = (term1695 _102126 _102133 x'''''''''''''' f s).
Proof. exact (eq_refl (term1695 _102126 _102133 x'''''''''''''' f s)). Qed.
Lemma lem4051867 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1692 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1696 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051866 _102126 _102133 x'''''''''''''' f s) (@lem4051863 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051868 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1691 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1696 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4051856 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051867 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051869 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4051870 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1697 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1698 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051869) (@lem4051868 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051871 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1689 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1699 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051870 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051855 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051872 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1688 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1699 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4051854 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051871 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051873 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4051874 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1700 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1701 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051873) (@lem4051872 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051875 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1675 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (MK_COMB (@lem4051874 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051853 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051877 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1669 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' f s).
Proof. exact (TRANS (@lem4051834 _102126 _102133 x'''''''''''''' y'''''''''''''' f s) (@lem4051875 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051878 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1671 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1703 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4051877 _102126 _102133 x'''''''''''''' y'''''''''''''' f s)). Qed.
Lemma lem4051879 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4051880 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1672 _102126 _102133 x'''''''''''''' y'''''''''''''' f) = (term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' f).
Proof. exact (MK_COMB (@lem4051879 _102126) (@lem4051878 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4051881 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term1673 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1705 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4051880 _102126 _102133 x'''''''''''''' y'''''''''''''' f)). Qed.
Lemma lem4051882 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4051884 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) : (term1674 _102126 _102133 x'''''''''''''' y'''''''''''''') = (term1706 _102126 _102133 x'''''''''''''' y'''''''''''''').
Proof. exact (MK_COMB (@lem4051882 _102126 _102133) (@lem4051881 _102126 _102133 x'''''''''''''' y'''''''''''''')). Qed.
Lemma lem4051885 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1706 _102126 _102133 x'''''''''''''' y''''''''''''''.
Proof. exact (EQ_MP (@lem4051884 _102126 _102133 x'''''''''''''' y'''''''''''''') (@lem4049377 _102126 _102133 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4051929 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1582 _102126 _102133 t f x y) = (term1707 _102126 _102133 t f x y).
Proof. exact (@lem19490 (term1571 _102126 _102133 f x y) (term1580 _102126 x y t) (term1566 _102126 _102133 f x y)). Qed.
Lemma lem4051930 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1583 _102126 _102133 t f x) = (term1708 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4051929 _102126 _102133 t f x y)). Qed.
Lemma lem4051931 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4051932 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1584 _102126 _102133 t f x) = (term1709 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4051931 _102126) (@lem4051930 _102126 _102133 t f x)). Qed.
Lemma lem4051933 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1585 _102126 _102133 t f) = (term1710 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4051932 _102126 _102133 t f x)). Qed.
Lemma lem4051934 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4051936 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1586 _102126 _102133 t f) = (term1711 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4051934 _102126) (@lem4051933 _102126 _102133 t f)). Qed.
Lemma lem4051937 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1711 _102126 _102133 t f.
Proof. exact (EQ_MP (@lem4051936 _102126 _102133 t f) (@lem4049384 _102126 _102133 s P f t h1)). Qed.
Lemma lem4052227 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s)) = ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s)).
Proof. exact (eq_refl ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4052245 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1647 _102126 _102133 x'''' y'''' f s) = (term1712 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''' y'''' f s) (term1621 _102126 _102133 x'''' y'''' f s) (term1604 _102126 s)). Qed.
Lemma lem4052246 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1713 _102126 _102133 x'''' y'''' f s) = (term1713 _102126 _102133 x'''' y'''' f s).
Proof. exact (eq_refl (term1713 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052247 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1714 _102126 _102133 x'''' y'''' f s) = (term1715 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''' f s) (term1637 _102126 _102133 x'''' y'''' f s) (term1604 _102126 s)). Qed.
Lemma lem4052254 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1716 _102126 _102133 x'''' y'''' f s) = (term1717 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''' f s) ((term1624 _102126 _102133 x'''' f s) = (term1624 _102126 _102133 y'''' f s)) (term1604 _102126 s)). Qed.
Lemma lem4052257 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1718 _102126 _102133 x'''' f s) = (term1718 _102126 _102133 x'''' f s).
Proof. exact (eq_refl (term1718 _102126 _102133 x'''' f s)). Qed.
Lemma lem4052258 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1715 _102126 _102133 x'''' y'''' f s) = (term1719 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052257 _102126 _102133 x'''' f s) (@lem4052254 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052259 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1714 _102126 _102133 x'''' y'''' f s) = (term1719 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4052247 _102126 _102133 x'''' y'''' f s) (@lem4052258 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052260 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4052261 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1720 _102126 _102133 x'''' y'''' f s) = (term1721 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052260) (@lem4052259 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052262 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1712 _102126 _102133 x'''' y'''' f s) = (term1722 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052261 _102126 _102133 x'''' y'''' f s) (@lem4052246 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052264 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1647 _102126 _102133 x'''' y'''' f s) = (term1722 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4052245 _102126 _102133 x'''' y'''' f s) (@lem4052262 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052265 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4052266 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1649 _102126 _102133 x'''' y'''' f s) = (term1723 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052265) (@lem4052264 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052267 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1651 _102126 _102133 x'''' y'''' f s) = (term1724 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052266 _102126 _102133 x'''' y'''' f s) (@lem4052227 _102126 _102133 f s)). Qed.
Lemma lem4052268 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1724 _102126 _102133 x'''' y'''' f s) = (term1725 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1719 _102126 _102133 x'''' y'''' f s) (term1713 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4052269 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1726 _102126 _102133 x'''' y'''' f s) = (term1726 _102126 _102133 x'''' y'''' f s).
Proof. exact (eq_refl (term1726 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052270 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1727 _102126 _102133 x'''' y'''' f s) = (term1728 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1729 _102126 _102133 x'''' f s) (term1717 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4052277 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1730 _102126 _102133 x'''' y'''' f s) = (term1731 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1729 _102126 _102133 y'''' f s) (term1732 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4052280 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1733 _102126 _102133 x'''' f s) = (term1733 _102126 _102133 x'''' f s).
Proof. exact (eq_refl (term1733 _102126 _102133 x'''' f s)). Qed.
Lemma lem4052281 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1728 _102126 _102133 x'''' y'''' f s) = (term1734 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052280 _102126 _102133 x'''' f s) (@lem4052277 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052282 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1727 _102126 _102133 x'''' y'''' f s) = (term1734 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4052270 _102126 _102133 x'''' y'''' f s) (@lem4052281 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052283 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4052284 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1735 _102126 _102133 x'''' y'''' f s) = (term1736 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052283) (@lem4052282 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052285 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1725 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4052284 _102126 _102133 x'''' y'''' f s) (@lem4052269 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052286 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1724 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4052268 _102126 _102133 x'''' y'''' f s) (@lem4052285 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052287 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1651 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4052267 _102126 _102133 x'''' y'''' f s) (@lem4052286 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052288 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1653 _102126 _102133 x'''' y'''' f) = (term1738 _102126 _102133 x'''' y'''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4052287 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4052289 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4052290 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1654 _102126 _102133 x'''' y'''' f) = (term1739 _102126 _102133 x'''' y'''' f).
Proof. exact (MK_COMB (@lem4052289 _102126) (@lem4052288 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4052291 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1655 _102126 _102133 x'''' y'''') = (term1740 _102126 _102133 x'''' y'''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4052290 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4052292 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4052294 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1656 _102126 _102133 x'''' y'''') = (term1741 _102126 _102133 x'''' y'''').
Proof. exact (MK_COMB (@lem4052292 _102126 _102133) (@lem4052291 _102126 _102133 x'''' y'''')). Qed.
Lemma lem4052295 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1741 _102126 _102133 x'''' y''''.
Proof. exact (EQ_MP (@lem4052294 _102126 _102133 x'''' y'''') (@lem4046857 _102126 _102133 x'''' y'''' h1)). Qed.
Lemma lem4053203 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1582 _102126 _102133 t f x y) = (term1707 _102126 _102133 t f x y).
Proof. exact (@lem19490 (term1571 _102126 _102133 f x y) (term1580 _102126 x y t) (term1566 _102126 _102133 f x y)). Qed.
Lemma lem4053204 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1583 _102126 _102133 t f x) = (term1708 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4053203 _102126 _102133 t f x y)). Qed.
Lemma lem4053205 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4053206 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1584 _102126 _102133 t f x) = (term1709 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4053205 _102126) (@lem4053204 _102126 _102133 t f x)). Qed.
Lemma lem4053207 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1585 _102126 _102133 t f) = (term1710 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4053206 _102126 _102133 t f x)). Qed.
Lemma lem4053208 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4053210 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1586 _102126 _102133 t f) = (term1711 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4053208 _102126) (@lem4053207 _102126 _102133 t f)). Qed.
Lemma lem4053211 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1711 _102126 _102133 t f.
Proof. exact (EQ_MP (@lem4053210 _102126 _102133 t f) (@lem4049398 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4053501 {_102126 _102133 : Type'} (f : _102126 -> _102133) (s : _102126 -> Prop) : ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s)) = ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s)).
Proof. exact (eq_refl ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4053519 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1647 _102126 _102133 x'''' y'''' f s) = (term1712 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1639 _102126 _102133 x'''' y'''' f s) (term1621 _102126 _102133 x'''' y'''' f s) (term1604 _102126 s)). Qed.
Lemma lem4053520 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1713 _102126 _102133 x'''' y'''' f s) = (term1713 _102126 _102133 x'''' y'''' f s).
Proof. exact (eq_refl (term1713 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053521 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1714 _102126 _102133 x'''' y'''' f s) = (term1715 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 x'''' f s) (term1637 _102126 _102133 x'''' y'''' f s) (term1604 _102126 s)). Qed.
Lemma lem4053528 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1716 _102126 _102133 x'''' y'''' f s) = (term1717 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1633 _102126 _102133 y'''' f s) ((term1624 _102126 _102133 x'''' f s) = (term1624 _102126 _102133 y'''' f s)) (term1604 _102126 s)). Qed.
Lemma lem4053531 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1718 _102126 _102133 x'''' f s) = (term1718 _102126 _102133 x'''' f s).
Proof. exact (eq_refl (term1718 _102126 _102133 x'''' f s)). Qed.
Lemma lem4053532 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1715 _102126 _102133 x'''' y'''' f s) = (term1719 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053531 _102126 _102133 x'''' f s) (@lem4053528 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053533 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1714 _102126 _102133 x'''' y'''' f s) = (term1719 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4053521 _102126 _102133 x'''' y'''' f s) (@lem4053532 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053534 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4053535 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1720 _102126 _102133 x'''' y'''' f s) = (term1721 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053534) (@lem4053533 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053536 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1712 _102126 _102133 x'''' y'''' f s) = (term1722 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053535 _102126 _102133 x'''' y'''' f s) (@lem4053520 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053538 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1647 _102126 _102133 x'''' y'''' f s) = (term1722 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4053519 _102126 _102133 x'''' y'''' f s) (@lem4053536 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053539 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4053540 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1649 _102126 _102133 x'''' y'''' f s) = (term1723 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053539) (@lem4053538 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053541 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1651 _102126 _102133 x'''' y'''' f s) = (term1724 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053540 _102126 _102133 x'''' y'''' f s) (@lem4053501 _102126 _102133 f s)). Qed.
Lemma lem4053542 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1724 _102126 _102133 x'''' y'''' f s) = (term1725 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1719 _102126 _102133 x'''' y'''' f s) (term1713 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4053543 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1726 _102126 _102133 x'''' y'''' f s) = (term1726 _102126 _102133 x'''' y'''' f s).
Proof. exact (eq_refl (term1726 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053544 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1727 _102126 _102133 x'''' y'''' f s) = (term1728 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1729 _102126 _102133 x'''' f s) (term1717 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4053551 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1730 _102126 _102133 x'''' y'''' f s) = (term1731 _102126 _102133 x'''' y'''' f s).
Proof. exact (@lem19699 (term1729 _102126 _102133 y'''' f s) (term1732 _102126 _102133 x'''' y'''' f s) ((term1535 _102126 _102133 f s) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) s))). Qed.
Lemma lem4053554 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1733 _102126 _102133 x'''' f s) = (term1733 _102126 _102133 x'''' f s).
Proof. exact (eq_refl (term1733 _102126 _102133 x'''' f s)). Qed.
Lemma lem4053555 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1728 _102126 _102133 x'''' y'''' f s) = (term1734 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053554 _102126 _102133 x'''' f s) (@lem4053551 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053556 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1727 _102126 _102133 x'''' y'''' f s) = (term1734 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4053544 _102126 _102133 x'''' y'''' f s) (@lem4053555 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053557 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4053558 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1735 _102126 _102133 x'''' y'''' f s) = (term1736 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053557) (@lem4053556 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053559 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1725 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (MK_COMB (@lem4053558 _102126 _102133 x'''' y'''' f s) (@lem4053543 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053560 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1724 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4053542 _102126 _102133 x'''' y'''' f s) (@lem4053559 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053561 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (s : _102126 -> Prop) : (term1651 _102126 _102133 x'''' y'''' f s) = (term1737 _102126 _102133 x'''' y'''' f s).
Proof. exact (TRANS (@lem4053541 _102126 _102133 x'''' y'''' f s) (@lem4053560 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053562 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1653 _102126 _102133 x'''' y'''' f) = (term1738 _102126 _102133 x'''' y'''' f).
Proof. exact (fun_ext (fun s : _102126 -> Prop => @lem4053561 _102126 _102133 x'''' y'''' f s)). Qed.
Lemma lem4053563 {_102126 : Type'} : (@all (_102126 -> Prop)) = (@all (_102126 -> Prop)).
Proof. exact (eq_refl (@all (_102126 -> Prop))). Qed.
Lemma lem4053564 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) : (term1654 _102126 _102133 x'''' y'''' f) = (term1739 _102126 _102133 x'''' y'''' f).
Proof. exact (MK_COMB (@lem4053563 _102126) (@lem4053562 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4053565 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1655 _102126 _102133 x'''' y'''') = (term1740 _102126 _102133 x'''' y'''').
Proof. exact (fun_ext (fun f : _102126 -> _102133 => @lem4053564 _102126 _102133 x'''' y'''' f)). Qed.
Lemma lem4053566 {_102126 _102133 : Type'} : (@all (_102126 -> _102133)) = (@all (_102126 -> _102133)).
Proof. exact (eq_refl (@all (_102126 -> _102133))). Qed.
Lemma lem4053568 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) : (term1656 _102126 _102133 x'''' y'''') = (term1741 _102126 _102133 x'''' y'''').
Proof. exact (MK_COMB (@lem4053566 _102126 _102133) (@lem4053565 _102126 _102133 x'''' y'''')). Qed.
Lemma lem4053569 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1741 _102126 _102133 x'''' y''''.
Proof. exact (EQ_MP (@lem4053568 _102126 _102133 x'''' y'''') (@lem4046857 _102126 _102133 x'''' y'''' h1)). Qed.
Lemma lem4054477 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) (y : _102126) : (term1582 _102126 _102133 t f x y) = (term1707 _102126 _102133 t f x y).
Proof. exact (@lem19490 (term1571 _102126 _102133 f x y) (term1580 _102126 x y t) (term1566 _102126 _102133 f x y)). Qed.
Lemma lem4054478 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1583 _102126 _102133 t f x) = (term1708 _102126 _102133 t f x).
Proof. exact (fun_ext (fun y : _102126 => @lem4054477 _102126 _102133 t f x y)). Qed.
Lemma lem4054479 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4054480 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (x : _102126) : (term1584 _102126 _102133 t f x) = (term1709 _102126 _102133 t f x).
Proof. exact (MK_COMB (@lem4054479 _102126) (@lem4054478 _102126 _102133 t f x)). Qed.
Lemma lem4054481 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1585 _102126 _102133 t f) = (term1710 _102126 _102133 t f).
Proof. exact (fun_ext (fun x : _102126 => @lem4054480 _102126 _102133 t f x)). Qed.
Lemma lem4054482 {_102126 : Type'} : (@all _102126) = (@all _102126).
Proof. exact (eq_refl (@all _102126)). Qed.
Lemma lem4054484 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) : (term1586 _102126 _102133 t f) = (term1711 _102126 _102133 t f).
Proof. exact (MK_COMB (@lem4054482 _102126) (@lem4054481 _102126 _102133 t f)). Qed.
Lemma lem4054485 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1711 _102126 _102133 t f.
Proof. exact (EQ_MP (@lem4054484 _102126 _102133 t f) (@lem4049398 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4054578 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697.
Proof. exact (@lem4050615 _102126 _102133 x'''''''''''''' y'''''''''''''' h1 _46697). Qed.
Lemma lem4054579 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) : (term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697) = (term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697).
Proof. exact (eq_refl (term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697)). Qed.
Lemma lem4054580 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697.
Proof. exact (EQ_MP (@lem4054579 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697) (@lem4054578 _102126 _102133 _46697 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054581 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (@lem4054580 _102126 _102133 _46697 x'''''''''''''' y'''''''''''''' h1 _46698). Qed.
Lemma lem4054582 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4054583 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4054582 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4054581 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054584 {_102126 _102133 : Type'} (_46699 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1744 _102126 _102133 t f _46699.
Proof. exact (@lem4050667 _102126 _102133 s P f t h1 _46699). Qed.
Lemma lem4054585 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46699 : _102126) : (term1744 _102126 _102133 t f _46699) = (term1709 _102126 _102133 t f _46699).
Proof. exact (eq_refl (term1744 _102126 _102133 t f _46699)). Qed.
Lemma lem4054586 {_102126 _102133 : Type'} (_46699 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1709 _102126 _102133 t f _46699.
Proof. exact (EQ_MP (@lem4054585 _102126 _102133 t f _46699) (@lem4054584 _102126 _102133 _46699 s P f t h1)). Qed.
Lemma lem4054587 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1745 _102126 _102133 t f _46699 _46700.
Proof. exact (@lem4054586 _102126 _102133 _46699 s P f t h1 _46700). Qed.
Lemma lem4054588 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) : (term1745 _102126 _102133 t f _46699 _46700) = (term1707 _102126 _102133 t f _46699 _46700).
Proof. exact (eq_refl (term1745 _102126 _102133 t f _46699 _46700)). Qed.
Lemma lem4054589 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1707 _102126 _102133 t f _46699 _46700.
Proof. exact (EQ_MP (@lem4054588 _102126 _102133 t f _46699 _46700) (@lem4054587 _102126 _102133 _46699 _46700 s P f t h1)). Qed.
Lemma lem4054674 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729.
Proof. exact (@lem4051885 _102126 _102133 x'''''''''''''' y'''''''''''''' h1 _46729). Qed.
Lemma lem4054675 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) : (term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729) = (term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729).
Proof. exact (eq_refl (term1742 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729)). Qed.
Lemma lem4054676 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1704 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729.
Proof. exact (EQ_MP (@lem4054675 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729) (@lem4054674 _102126 _102133 _46729 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054677 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (@lem4054676 _102126 _102133 _46729 x'''''''''''''' y'''''''''''''' h1 _46730). Qed.
Lemma lem4054678 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1743 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4054679 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1702 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4054678 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4054677 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054680 {_102126 _102133 : Type'} (_46731 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1744 _102126 _102133 t f _46731.
Proof. exact (@lem4051937 _102126 _102133 s P f t h1 _46731). Qed.
Lemma lem4054681 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46731 : _102126) : (term1744 _102126 _102133 t f _46731) = (term1709 _102126 _102133 t f _46731).
Proof. exact (eq_refl (term1744 _102126 _102133 t f _46731)). Qed.
Lemma lem4054682 {_102126 _102133 : Type'} (_46731 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1709 _102126 _102133 t f _46731.
Proof. exact (EQ_MP (@lem4054681 _102126 _102133 t f _46731) (@lem4054680 _102126 _102133 _46731 s P f t h1)). Qed.
Lemma lem4054683 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1745 _102126 _102133 t f _46731 _46732.
Proof. exact (@lem4054682 _102126 _102133 _46731 s P f t h1 _46732). Qed.
Lemma lem4054684 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) : (term1745 _102126 _102133 t f _46731 _46732) = (term1707 _102126 _102133 t f _46731 _46732).
Proof. exact (eq_refl (term1745 _102126 _102133 t f _46731 _46732)). Qed.
Lemma lem4054685 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1707 _102126 _102133 t f _46731 _46732.
Proof. exact (EQ_MP (@lem4054684 _102126 _102133 t f _46731 _46732) (@lem4054683 _102126 _102133 _46731 _46732 s P f t h1)). Qed.
Lemma lem4054710 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1746 _102126 _102133 x'''' y'''' _46741.
Proof. exact (@lem4052295 _102126 _102133 x'''' y'''' h1 _46741). Qed.
Lemma lem4054711 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) : (term1746 _102126 _102133 x'''' y'''' _46741) = (term1739 _102126 _102133 x'''' y'''' _46741).
Proof. exact (eq_refl (term1746 _102126 _102133 x'''' y'''' _46741)). Qed.
Lemma lem4054712 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1739 _102126 _102133 x'''' y'''' _46741.
Proof. exact (EQ_MP (@lem4054711 _102126 _102133 x'''' y'''' _46741) (@lem4054710 _102126 _102133 _46741 x'''' y'''' h1)). Qed.
Lemma lem4054713 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1747 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (@lem4054712 _102126 _102133 _46741 x'''' y'''' h1 _46742). Qed.
Lemma lem4054714 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1747 _102126 _102133 x'''' y'''' _46741 _46742) = (term1737 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (eq_refl (term1747 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4054715 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1737 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4054714 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4054713 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4054776 {_102126 _102133 : Type'} (_46763 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1744 _102126 _102133 t f _46763.
Proof. exact (@lem4053211 _102126 _102133 s P f t n h1 _46763). Qed.
Lemma lem4054777 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46763 : _102126) : (term1744 _102126 _102133 t f _46763) = (term1709 _102126 _102133 t f _46763).
Proof. exact (eq_refl (term1744 _102126 _102133 t f _46763)). Qed.
Lemma lem4054778 {_102126 _102133 : Type'} (_46763 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1709 _102126 _102133 t f _46763.
Proof. exact (EQ_MP (@lem4054777 _102126 _102133 t f _46763) (@lem4054776 _102126 _102133 _46763 s P f t n h1)). Qed.
Lemma lem4054779 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1745 _102126 _102133 t f _46763 _46764.
Proof. exact (@lem4054778 _102126 _102133 _46763 s P f t n h1 _46764). Qed.
Lemma lem4054780 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) : (term1745 _102126 _102133 t f _46763 _46764) = (term1707 _102126 _102133 t f _46763 _46764).
Proof. exact (eq_refl (term1745 _102126 _102133 t f _46763 _46764)). Qed.
Lemma lem4054781 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1707 _102126 _102133 t f _46763 _46764.
Proof. exact (EQ_MP (@lem4054780 _102126 _102133 t f _46763 _46764) (@lem4054779 _102126 _102133 _46763 _46764 s P f t n h1)). Qed.
Lemma lem4054806 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1746 _102126 _102133 x'''' y'''' _46773.
Proof. exact (@lem4053569 _102126 _102133 x'''' y'''' h1 _46773). Qed.
Lemma lem4054807 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) : (term1746 _102126 _102133 x'''' y'''' _46773) = (term1739 _102126 _102133 x'''' y'''' _46773).
Proof. exact (eq_refl (term1746 _102126 _102133 x'''' y'''' _46773)). Qed.
Lemma lem4054808 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1739 _102126 _102133 x'''' y'''' _46773.
Proof. exact (EQ_MP (@lem4054807 _102126 _102133 x'''' y'''' _46773) (@lem4054806 _102126 _102133 _46773 x'''' y'''' h1)). Qed.
Lemma lem4054809 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1747 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (@lem4054808 _102126 _102133 _46773 x'''' y'''' h1 _46774). Qed.
Lemma lem4054810 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1747 _102126 _102133 x'''' y'''' _46773 _46774) = (term1737 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (eq_refl (term1747 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4054811 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1737 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4054810 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4054809 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4054872 {_102126 _102133 : Type'} (_46795 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1744 _102126 _102133 t f _46795.
Proof. exact (@lem4054485 _102126 _102133 s P f t n h1 _46795). Qed.
Lemma lem4054873 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46795 : _102126) : (term1744 _102126 _102133 t f _46795) = (term1709 _102126 _102133 t f _46795).
Proof. exact (eq_refl (term1744 _102126 _102133 t f _46795)). Qed.
Lemma lem4054874 {_102126 _102133 : Type'} (_46795 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1709 _102126 _102133 t f _46795.
Proof. exact (EQ_MP (@lem4054873 _102126 _102133 t f _46795) (@lem4054872 _102126 _102133 _46795 s P f t n h1)). Qed.
Lemma lem4054875 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1745 _102126 _102133 t f _46795 _46796.
Proof. exact (@lem4054874 _102126 _102133 _46795 s P f t n h1 _46796). Qed.
Lemma lem4054876 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) : (term1745 _102126 _102133 t f _46795 _46796) = (term1707 _102126 _102133 t f _46795 _46796).
Proof. exact (eq_refl (term1745 _102126 _102133 t f _46795 _46796)). Qed.
Lemma lem4054877 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1707 _102126 _102133 t f _46795 _46796.
Proof. exact (EQ_MP (@lem4054876 _102126 _102133 t f _46795 _46796) (@lem4054875 _102126 _102133 _46795 _46796 s P f t n h1)). Qed.
Lemma lem4054878 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1748 _102126 _102133 t f _46699 _46700.
Proof. exact (proj2 (@lem4054589 _102126 _102133 _46699 _46700 s P f t h1)). Qed.
Lemma lem4054880 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1687 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (proj2 (@lem4054583 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054883 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1684 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (proj1 (@lem4054880 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4054884 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1682 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (proj2 (@lem4054883 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055050 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1748 _102126 _102133 t f _46731 _46732.
Proof. exact (proj2 (@lem4054685 _102126 _102133 _46731 _46732 s P f t h1)). Qed.
Lemma lem4055053 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1699 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (proj1 (@lem4054679 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055061 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1696 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (proj1 (@lem4055053 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055062 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1694 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (proj2 (@lem4055061 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055222 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1748 _102126 _102133 t f _46763 _46764.
Proof. exact (proj2 (@lem4054781 _102126 _102133 _46763 _46764 s P f t n h1)). Qed.
Lemma lem4055364 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1726 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (proj2 (@lem4054715 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055365 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1734 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (proj1 (@lem4054715 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055366 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1731 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (proj2 (@lem4055365 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055367 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1749 _102126 _102133 x'''' _46741 _46742.
Proof. exact (proj1 (@lem4055365 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055368 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1750 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (proj2 (@lem4055366 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055369 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1749 _102126 _102133 y'''' _46741 _46742.
Proof. exact (proj1 (@lem4055366 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4055394 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1748 _102126 _102133 t f _46795 _46796.
Proof. exact (proj2 (@lem4054877 _102126 _102133 _46795 _46796 s P f t n h1)). Qed.
Lemma lem4055536 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1726 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (proj2 (@lem4054811 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055537 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1734 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (proj1 (@lem4054811 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055538 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1731 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (proj2 (@lem4055537 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055539 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1749 _102126 _102133 x'''' _46773 _46774.
Proof. exact (proj1 (@lem4055537 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055540 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1750 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (proj2 (@lem4055538 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055541 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1749 _102126 _102133 y'''' _46773 _46774.
Proof. exact (proj1 (@lem4055538 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4055573 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1604 _102126 t.
Proof. exact (proj2 (@lem4049386 _102126 _102133 f t h1)). Qed.
Lemma lem4055604 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) : (term1748 _102126 _102133 t f _46699 _46700) = (term1751 _102126 _102133 t f _46699 _46700).
Proof. exact (@lem4036350 (term1577 _102126 _46699 t) (term1577 _102126 _46700 t) (term1566 _102126 _102133 f _46699 _46700)). Qed.
Lemma lem4055605 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1751 _102126 _102133 t f _46699 _46700.
Proof. exact (EQ_MP (@lem4055604 _102126 _102133 t f _46699 _46700) (@lem4054878 _102126 _102133 _46699 _46700 s P f t h1)). Qed.
Lemma lem4055615 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (proj2 (@lem4054880 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055625 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1752 _102126 _102133 x'''''''''''''' _46697 _46698.
Proof. exact (proj1 (@lem4054883 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055635 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1752 _102126 _102133 y'''''''''''''' _46697 _46698.
Proof. exact (proj1 (@lem4054884 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4055645 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (proj2 (@lem4054884 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4056651 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (proj1 (@lem4049387 _102126 _102133 f t h1)). Qed.
Lemma lem4056684 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) : (term1748 _102126 _102133 t f _46731 _46732) = (term1751 _102126 _102133 t f _46731 _46732).
Proof. exact (@lem4036350 (term1577 _102126 _46731 t) (term1577 _102126 _46732 t) (term1566 _102126 _102133 f _46731 _46732)). Qed.
Lemma lem4056685 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1751 _102126 _102133 t f _46731 _46732.
Proof. exact (EQ_MP (@lem4056684 _102126 _102133 t f _46731 _46732) (@lem4055050 _102126 _102133 _46731 _46732 s P f t h1)). Qed.
Lemma lem4056735 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (proj2 (@lem4055053 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4056745 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1754 _102126 _102133 x'''''''''''''' _46729 _46730.
Proof. exact (proj1 (@lem4055061 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4056755 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1754 _102126 _102133 y'''''''''''''' _46729 _46730.
Proof. exact (proj1 (@lem4055062 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4056765 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (proj2 (@lem4055062 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4057735 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1549 _102126 t n.
Proof. exact (proj2 (@lem4049400 _102126 _102133 f t n h1)). Qed.
Lemma lem4057766 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) : (term1748 _102126 _102133 t f _46763 _46764) = (term1751 _102126 _102133 t f _46763 _46764).
Proof. exact (@lem4036350 (term1577 _102126 _46763 t) (term1577 _102126 _46764 t) (term1566 _102126 _102133 f _46763 _46764)). Qed.
Lemma lem4057767 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1751 _102126 _102133 t f _46763 _46764.
Proof. exact (EQ_MP (@lem4057766 _102126 _102133 t f _46763 _46764) (@lem4055222 _102126 _102133 _46763 _46764 s P f t n h1)). Qed.
Lemma lem4058578 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1726 _102126 _102133 x'''' y'''' _46741 _46742) = (term1756 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4036350 (term1621 _102126 _102133 x'''' y'''' _46741 _46742) (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4058579 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1756 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4058578 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4055364 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4058590 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1749 _102126 _102133 x'''' _46741 _46742) = (term1757 _102126 _102133 x'''' _46741 _46742).
Proof. exact (@lem4036350 (term1633 _102126 _102133 x'''' _46741 _46742) (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4058591 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1757 _102126 _102133 x'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4058590 _102126 _102133 x'''' _46741 _46742) (@lem4055367 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4058602 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1749 _102126 _102133 y'''' _46741 _46742) = (term1757 _102126 _102133 y'''' _46741 _46742).
Proof. exact (@lem4036350 (term1633 _102126 _102133 y'''' _46741 _46742) (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4058603 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1757 _102126 _102133 y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4058602 _102126 _102133 y'''' _46741 _46742) (@lem4055369 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4058614 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1750 _102126 _102133 x'''' y'''' _46741 _46742) = (term1758 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4036350 ((term1624 _102126 _102133 x'''' _46741 _46742) = (term1624 _102126 _102133 y'''' _46741 _46742)) (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4058615 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1758 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4058614 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4055368 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4058815 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1543 _102126 _102133 f t n.
Proof. exact (proj1 (@lem4049401 _102126 _102133 f t n h1)). Qed.
Lemma lem4058848 {_102126 _102133 : Type'} (t : _102126 -> Prop) (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) : (term1748 _102126 _102133 t f _46795 _46796) = (term1751 _102126 _102133 t f _46795 _46796).
Proof. exact (@lem4036350 (term1577 _102126 _46795 t) (term1577 _102126 _46796 t) (term1566 _102126 _102133 f _46795 _46796)). Qed.
Lemma lem4058849 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1751 _102126 _102133 t f _46795 _46796.
Proof. exact (EQ_MP (@lem4058848 _102126 _102133 t f _46795 _46796) (@lem4055394 _102126 _102133 _46795 _46796 s P f t n h1)). Qed.
Lemma lem4059660 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1726 _102126 _102133 x'''' y'''' _46773 _46774) = (term1756 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4036350 (term1621 _102126 _102133 x'''' y'''' _46773 _46774) (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4059661 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1756 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4059660 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4055536 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4059672 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1749 _102126 _102133 x'''' _46773 _46774) = (term1757 _102126 _102133 x'''' _46773 _46774).
Proof. exact (@lem4036350 (term1633 _102126 _102133 x'''' _46773 _46774) (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4059673 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1757 _102126 _102133 x'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4059672 _102126 _102133 x'''' _46773 _46774) (@lem4055539 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4059684 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1749 _102126 _102133 y'''' _46773 _46774) = (term1757 _102126 _102133 y'''' _46773 _46774).
Proof. exact (@lem4036350 (term1633 _102126 _102133 y'''' _46773 _46774) (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4059685 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1757 _102126 _102133 y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4059684 _102126 _102133 y'''' _46773 _46774) (@lem4055541 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4059696 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1750 _102126 _102133 x'''' y'''' _46773 _46774) = (term1758 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4036350 ((term1624 _102126 _102133 x'''' _46773 _46774) = (term1624 _102126 _102133 y'''' _46773 _46774)) (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4059697 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1758 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4059696 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4055540 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4060951 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (proj1 (@lem4049386 _102126 _102133 f t h1)). Qed.
Lemma lem4060952 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1759 _102126 _102133 f t.
Proof. exact (fun h0 : term1599 _102126 _102133 f t => @lem4060951 _102126 _102133 f t h1). Qed.
Lemma lem4060954 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4060955 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1759 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4060954 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4060956 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4060955 _102126 _102133 f t) (@lem4060952 _102126 _102133 f t h1)). Qed.
Lemma lem4060959 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (h1). Qed.
Lemma lem4060960 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1761 _102126 t.
Proof. exact (fun h0 : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t => @lem4060959 _102126 t h1). Qed.
Lemma lem4060962 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4060963 {_102126 : Type'} (t : _102126 -> Prop) : (term1761 _102126 t) = (term1604 _102126 t).
Proof. exact (@lem4060962 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4060964 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (EQ_MP (@lem4060963 _102126 t) (@lem4060960 _102126 t h1)). Qed.
Lemma lem4060966 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4060967 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1752 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1764 _102126 _102133 x'''''''''''''' _46697 _46698).
Proof. exact (@lem4060966 (term1660 _102126 _102133 _46697 _46698) (term1633 _102126 _102133 x'''''''''''''' _46697 _46698)). Qed.
Lemma lem4060969 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4060970 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1768 _102126 _102133 _46697 _46698).
Proof. exact (@lem4060969 (term1599 _102126 _102133 _46697 _46698) (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698)). Qed.
Lemma lem4060972 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4060973 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1770 _102126 _102133 _46697 _46698) = (term1597 _102126 _102133 _46697 _46698).
Proof. exact (@lem4060972 (term1597 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4060974 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4060975 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1771 _102126 _102133 _46697 _46698) = (term1606 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4060974) (@lem4060973 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4060976 {_102126 : Type'} (_46698 : _102126 -> Prop) : (term1604 _102126 _46698) = (term1604 _102126 _46698).
Proof. exact (eq_refl (term1604 _102126 _46698)). Qed.
Lemma lem4060977 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1768 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4060975 _102126 _102133 _46697 _46698) (@lem4060976 _102126 _46698)). Qed.
Lemma lem4060978 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (TRANS (@lem4060970 _102126 _102133 _46697 _46698) (@lem4060977 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4060979 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4060980 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1772 _102126 _102133 _46697 _46698) = (term1773 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4060979) (@lem4060978 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4060981 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1633 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1633 _102126 _102133 x'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1633 _102126 _102133 x'''''''''''''' _46697 _46698)). Qed.
Lemma lem4060982 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1764 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1774 _102126 _102133 x'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4060980 _102126 _102133 _46697 _46698) (@lem4060981 _102126 _102133 x'''''''''''''' _46697 _46698)). Qed.
Lemma lem4060983 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1752 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1774 _102126 _102133 x'''''''''''''' _46697 _46698).
Proof. exact (TRANS (@lem4060967 _102126 _102133 x'''''''''''''' _46697 _46698) (@lem4060982 _102126 _102133 x'''''''''''''' _46697 _46698)). Qed.
Lemma lem4060985 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1604 _102126 t) (h2 : term1608 _102126 _102133 f t) : term1608 _102126 _102133 f t.
Proof. exact (conj (@lem4060956 _102126 _102133 f t h2) (@lem4060964 _102126 t h1)). Qed.
Lemma lem4060987 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 x'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4060983 _102126 _102133 x'''''''''''''' _46697 _46698) (@lem4055625 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4060988 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 x'''''''''''''' _46697 _46698.
Proof. exact (@lem4060987 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4060989 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 x'''''''''''''' f t.
Proof. exact (@lem4060988 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4060992 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1633 _102126 _102133 x'''''''''''''' f t.
Proof. exact (@lem4060989 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4060985 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4060993 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1775 _102126 _102133 x'''''''''''''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 x'''''''''''''' f t => @lem4060992 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4060995 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4060996 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 x'''''''''''''' f t) = (term1633 _102126 _102133 x'''''''''''''' f t).
Proof. exact (@lem4060995 (term1633 _102126 _102133 x'''''''''''''' f t)). Qed.
Lemma lem4060997 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1633 _102126 _102133 x'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4060996 _102126 _102133 x'''''''''''''' f t) (@lem4060993 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4060999 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (proj1 (@lem4049386 _102126 _102133 f t h1)). Qed.
Lemma lem4061000 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1759 _102126 _102133 f t.
Proof. exact (fun h0 : term1599 _102126 _102133 f t => @lem4060999 _102126 _102133 f t h1). Qed.
Lemma lem4061002 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061003 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1759 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4061002 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4061004 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4061003 _102126 _102133 f t) (@lem4061000 _102126 _102133 f t h1)). Qed.
Lemma lem4061007 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (h1). Qed.
Lemma lem4061008 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1761 _102126 t.
Proof. exact (fun h0 : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t => @lem4061007 _102126 t h1). Qed.
Lemma lem4061010 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4061011 {_102126 : Type'} (t : _102126 -> Prop) : (term1761 _102126 t) = (term1604 _102126 t).
Proof. exact (@lem4061010 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4061012 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (EQ_MP (@lem4061011 _102126 t) (@lem4061008 _102126 t h1)). Qed.
Lemma lem4061014 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4061015 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1752 _102126 _102133 y'''''''''''''' _46697 _46698) = (term1764 _102126 _102133 y'''''''''''''' _46697 _46698).
Proof. exact (@lem4061014 (term1660 _102126 _102133 _46697 _46698) (term1633 _102126 _102133 y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061017 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4061018 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1768 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061017 (term1599 _102126 _102133 _46697 _46698) (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698)). Qed.
Lemma lem4061020 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4061021 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1770 _102126 _102133 _46697 _46698) = (term1597 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061020 (term1597 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061022 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4061023 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1771 _102126 _102133 _46697 _46698) = (term1606 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061022) (@lem4061021 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061024 {_102126 : Type'} (_46698 : _102126 -> Prop) : (term1604 _102126 _46698) = (term1604 _102126 _46698).
Proof. exact (eq_refl (term1604 _102126 _46698)). Qed.
Lemma lem4061025 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1768 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061023 _102126 _102133 _46697 _46698) (@lem4061024 _102126 _46698)). Qed.
Lemma lem4061026 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (TRANS (@lem4061018 _102126 _102133 _46697 _46698) (@lem4061025 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061027 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4061028 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1772 _102126 _102133 _46697 _46698) = (term1773 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061027) (@lem4061026 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061029 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1633 _102126 _102133 y'''''''''''''' _46697 _46698) = (term1633 _102126 _102133 y'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1633 _102126 _102133 y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061030 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1764 _102126 _102133 y'''''''''''''' _46697 _46698) = (term1774 _102126 _102133 y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061028 _102126 _102133 _46697 _46698) (@lem4061029 _102126 _102133 y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061031 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1752 _102126 _102133 y'''''''''''''' _46697 _46698) = (term1774 _102126 _102133 y'''''''''''''' _46697 _46698).
Proof. exact (TRANS (@lem4061015 _102126 _102133 y'''''''''''''' _46697 _46698) (@lem4061030 _102126 _102133 y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061033 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1604 _102126 t) (h2 : term1608 _102126 _102133 f t) : term1608 _102126 _102133 f t.
Proof. exact (conj (@lem4061004 _102126 _102133 f t h2) (@lem4061012 _102126 t h1)). Qed.
Lemma lem4061035 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 y'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4061031 _102126 _102133 y'''''''''''''' _46697 _46698) (@lem4055635 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4061036 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 y'''''''''''''' _46697 _46698.
Proof. exact (@lem4061035 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061037 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1774 _102126 _102133 y'''''''''''''' f t.
Proof. exact (@lem4061036 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061040 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1633 _102126 _102133 y'''''''''''''' f t.
Proof. exact (@lem4061037 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4061033 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4061041 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1775 _102126 _102133 y'''''''''''''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 y'''''''''''''' f t => @lem4061040 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4061043 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061044 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 y'''''''''''''' f t) = (term1633 _102126 _102133 y'''''''''''''' f t).
Proof. exact (@lem4061043 (term1633 _102126 _102133 y'''''''''''''' f t)). Qed.
Lemma lem4061045 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1633 _102126 _102133 y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4061044 _102126 _102133 y'''''''''''''' f t) (@lem4061041 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4061047 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (proj1 (@lem4049386 _102126 _102133 f t h1)). Qed.
Lemma lem4061048 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1759 _102126 _102133 f t.
Proof. exact (fun h0 : term1599 _102126 _102133 f t => @lem4061047 _102126 _102133 f t h1). Qed.
Lemma lem4061050 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061051 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1759 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4061050 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4061052 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4061051 _102126 _102133 f t) (@lem4061048 _102126 _102133 f t h1)). Qed.
Lemma lem4061055 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (h1). Qed.
Lemma lem4061056 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1761 _102126 t.
Proof. exact (fun h0 : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t => @lem4061055 _102126 t h1). Qed.
Lemma lem4061058 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4061059 {_102126 : Type'} (t : _102126 -> Prop) : (term1761 _102126 t) = (term1604 _102126 t).
Proof. exact (@lem4061058 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4061060 {_102126 : Type'} (t : _102126 -> Prop) (h1 : term1604 _102126 t) : term1604 _102126 t.
Proof. exact (EQ_MP (@lem4061059 _102126 t) (@lem4061056 _102126 t h1)). Qed.
Lemma lem4061062 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4061063 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1777 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (@lem4061062 (term1660 _102126 _102133 _46697 _46698) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061065 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4061066 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1768 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061065 (term1599 _102126 _102133 _46697 _46698) (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698)). Qed.
Lemma lem4061068 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4061069 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1770 _102126 _102133 _46697 _46698) = (term1597 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061068 (term1597 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061070 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4061071 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1771 _102126 _102133 _46697 _46698) = (term1606 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061070) (@lem4061069 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061072 {_102126 : Type'} (_46698 : _102126 -> Prop) : (term1604 _102126 _46698) = (term1604 _102126 _46698).
Proof. exact (eq_refl (term1604 _102126 _46698)). Qed.
Lemma lem4061073 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1768 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061071 _102126 _102133 _46697 _46698) (@lem4061072 _102126 _46698)). Qed.
Lemma lem4061074 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1767 _102126 _102133 _46697 _46698) = (term1608 _102126 _102133 _46697 _46698).
Proof. exact (TRANS (@lem4061066 _102126 _102133 _46697 _46698) (@lem4061073 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061075 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4061076 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1772 _102126 _102133 _46697 _46698) = (term1773 _102126 _102133 _46697 _46698).
Proof. exact (MK_COMB (@lem4061075) (@lem4061074 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061077 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061078 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1777 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1778 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061076 _102126 _102133 _46697 _46698) (@lem4061077 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061079 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1678 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1778 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (TRANS (@lem4061063 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061078 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061081 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1604 _102126 t) (h2 : term1608 _102126 _102133 f t) : term1608 _102126 _102133 f t.
Proof. exact (conj (@lem4061052 _102126 _102133 f t h2) (@lem4061060 _102126 t h1)). Qed.
Lemma lem4061083 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1778 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4061079 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4055615 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4061084 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1778 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (@lem4061083 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061085 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1778 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4061084 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061088 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4061085 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4061081 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4061089 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1779 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (fun h0 : (term1617 _102126 _102133 x'''''''''''''' f t) = (term1617 _102126 _102133 y'''''''''''''' f t) => @lem4061088 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4061091 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4061092 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1779 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) = (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t).
Proof. exact (@lem4061091 ((term1617 _102126 _102133 x'''''''''''''' f t) = (term1617 _102126 _102133 y'''''''''''''' f t))). Qed.
Lemma lem4061093 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4061092 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) (@lem4061089 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4061109 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061110 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1780 _102126 _102133 t f _46699 _46700) = (term1781 _102126 _102133 f t _46699 _46700).
Proof. exact (@lem4061109 (term1562 _102126 _102133 _46699 f _46700) (term1577 _102126 _46700 t) (_46699 = _46700)). Qed.
Lemma lem4061126 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4061127 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46699 _46700) = (term1783 _102126 _46699 _46700 t).
Proof. exact (@lem4061126 (_46699 = _46700) (term1577 _102126 _46700 t)). Qed.
Lemma lem4061135 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1564 _102126 _102133 _46699 f _46700) = (term1564 _102126 _102133 _46699 f _46700).
Proof. exact (eq_refl (term1564 _102126 _102133 _46699 f _46700)). Qed.
Lemma lem4061136 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46699 _46700) = (term1784 _102126 _102133 f _46699 _46700 t).
Proof. exact (MK_COMB (@lem4061135 _102126 _102133 _46699 f _46700) (@lem4061127 _102126 _46699 _46700 t)). Qed.
Lemma lem4061140 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061141 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) (t : _102126 -> Prop) : (term1784 _102126 _102133 f _46699 _46700 t) = (term1785 _102126 _102133 _46699 f _46700 t).
Proof. exact (@lem4061140 (_46699 = _46700) (term1562 _102126 _102133 _46699 f _46700) (term1577 _102126 _46700 t)). Qed.
Lemma lem4061161 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46699 _46700) = (term1785 _102126 _102133 _46699 f _46700 t).
Proof. exact (TRANS (@lem4061136 _102126 _102133 f _46699 _46700 t) (@lem4061141 _102126 _102133 _46699 f _46700 t)). Qed.
Lemma lem4061162 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) (t : _102126 -> Prop) : (term1780 _102126 _102133 t f _46699 _46700) = (term1785 _102126 _102133 _46699 f _46700 t).
Proof. exact (TRANS (@lem4061110 _102126 _102133 f t _46699 _46700) (@lem4061161 _102126 _102133 _46699 f _46700 t)). Qed.
Lemma lem4061163 {_102126 : Type'} (_46699 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46699 t) = (term1579 _102126 _46699 t).
Proof. exact (eq_refl (term1579 _102126 _46699 t)). Qed.
Lemma lem4061164 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46699 _46700) = (term1786 _102126 _102133 _46699 f _46700 t).
Proof. exact (MK_COMB (@lem4061163 _102126 _46699 t) (@lem4061162 _102126 _102133 _46699 f _46700 t)). Qed.
Lemma lem4061168 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061169 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46699 f _46700 t) = (term1787 _102126 _102133 _46699 f _46700 t).
Proof. exact (@lem4061168 (_46699 = _46700) (term1577 _102126 _46699 t) (term1788 _102126 _102133 _46699 f _46700 t)). Qed.
Lemma lem4061185 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061186 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1789 _102126 _102133 _46699 f _46700 t) = (term1790 _102126 _102133 f _46699 _46700 t).
Proof. exact (@lem4061185 (term1562 _102126 _102133 _46699 f _46700) (term1577 _102126 _46699 t) (term1577 _102126 _46700 t)). Qed.
Lemma lem4061204 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) : (term1791 _102126 _46699 _46700) = (term1791 _102126 _46699 _46700).
Proof. exact (eq_refl (term1791 _102126 _46699 _46700)). Qed.
Lemma lem4061205 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1787 _102126 _102133 _46699 f _46700 t) = (term1792 _102126 _102133 f _46699 _46700 t).
Proof. exact (MK_COMB (@lem4061204 _102126 _46699 _46700) (@lem4061186 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061216 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46699 f _46700 t) = (term1792 _102126 _102133 f _46699 _46700 t).
Proof. exact (TRANS (@lem4061169 _102126 _102133 _46699 f _46700 t) (@lem4061205 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061217 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46699 _46700) = (term1792 _102126 _102133 f _46699 _46700 t).
Proof. exact (TRANS (@lem4061164 _102126 _102133 _46699 f _46700 t) (@lem4061216 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061218 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4061219 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1793 _102126 _102133 t f _46699 _46700) = (term1794 _102126 _102133 f _46699 _46700 t).
Proof. exact (MK_COMB (@lem4061218) (@lem4061217 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061245 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4061246 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46699 _46700) = (term1783 _102126 _46699 _46700 t).
Proof. exact (@lem4061245 (_46699 = _46700) (term1577 _102126 _46700 t)). Qed.
Lemma lem4061254 {_102126 : Type'} (_46699 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46699 t) = (term1579 _102126 _46699 t).
Proof. exact (eq_refl (term1579 _102126 _46699 t)). Qed.
Lemma lem4061255 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46699 _46700) = (term1796 _102126 _46699 _46700 t).
Proof. exact (MK_COMB (@lem4061254 _102126 _46699 t) (@lem4061246 _102126 _46699 _46700 t)). Qed.
Lemma lem4061259 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061260 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1796 _102126 _46699 _46700 t) = (term1797 _102126 _46699 _46700 t).
Proof. exact (@lem4061259 (_46699 = _46700) (term1577 _102126 _46699 t) (term1577 _102126 _46700 t)). Qed.
Lemma lem4061278 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46699 _46700) = (term1797 _102126 _46699 _46700 t).
Proof. exact (TRANS (@lem4061255 _102126 _46699 _46700 t) (@lem4061260 _102126 _46699 _46700 t)). Qed.
Lemma lem4061279 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1564 _102126 _102133 _46699 f _46700) = (term1564 _102126 _102133 _46699 f _46700).
Proof. exact (eq_refl (term1564 _102126 _102133 _46699 f _46700)). Qed.
Lemma lem4061280 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46699 _46700) = (term1799 _102126 _102133 f _46699 _46700 t).
Proof. exact (MK_COMB (@lem4061279 _102126 _102133 _46699 f _46700) (@lem4061278 _102126 _46699 _46700 t)). Qed.
Lemma lem4061284 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061285 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1799 _102126 _102133 f _46699 _46700 t) = (term1792 _102126 _102133 f _46699 _46700 t).
Proof. exact (@lem4061284 (_46699 = _46700) (term1562 _102126 _102133 _46699 f _46700) (term1580 _102126 _46699 _46700 t)). Qed.
Lemma lem4061315 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46699 _46700) = (term1792 _102126 _102133 f _46699 _46700 t).
Proof. exact (TRANS (@lem4061280 _102126 _102133 f _46699 _46700 t) (@lem4061285 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061316 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : ((term1751 _102126 _102133 t f _46699 _46700) = (term1798 _102126 _102133 f t _46699 _46700)) = ((term1792 _102126 _102133 f _46699 _46700 t) = (term1792 _102126 _102133 f _46699 _46700 t)).
Proof. exact (MK_COMB (@lem4061219 _102126 _102133 f _46699 _46700 t) (@lem4061315 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061318 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4061319 (x : Prop) : (x = x) = True.
Proof. exact (@lem4061318 Prop x). Qed.
Lemma lem4061320 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46699 : _102126) (_46700 : _102126) (t : _102126 -> Prop) : ((term1792 _102126 _102133 f _46699 _46700 t) = (term1792 _102126 _102133 f _46699 _46700 t)) = True.
Proof. exact (@lem4061319 (term1792 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061321 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : ((term1751 _102126 _102133 t f _46699 _46700) = (term1798 _102126 _102133 f t _46699 _46700)) = True.
Proof. exact (TRANS (@lem4061316 _102126 _102133 f _46699 _46700 t) (@lem4061320 _102126 _102133 f _46699 _46700 t)). Qed.
Lemma lem4061322 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : True = ((term1751 _102126 _102133 t f _46699 _46700) = (term1798 _102126 _102133 f t _46699 _46700)).
Proof. exact (SYM (@lem4061321 _102126 _102133 f t _46699 _46700)). Qed.
Lemma lem4061323 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1751 _102126 _102133 t f _46699 _46700) = (term1798 _102126 _102133 f t _46699 _46700).
Proof. exact (EQ_MP (@lem4061322 _102126 _102133 f t _46699 _46700) (@lem0)). Qed.
Lemma lem4061324 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1798 _102126 _102133 f t _46699 _46700.
Proof. exact (EQ_MP (@lem4061323 _102126 _102133 f t _46699 _46700) (@lem4055605 _102126 _102133 _46699 _46700 s P f t h1)). Qed.
Lemma lem4061326 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4061327 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1798 _102126 _102133 f t _46699 _46700) = (term1800 _102126 _102133 t _46699 f _46700).
Proof. exact (@lem4061326 (term1795 _102126 t _46699 _46700) (term1562 _102126 _102133 _46699 f _46700)). Qed.
Lemma lem4061329 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4061330 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1801 _102126 t _46699 _46700) = (term1802 _102126 t _46699 _46700).
Proof. exact (@lem4061329 (term1577 _102126 _46699 t) (term1782 _102126 t _46699 _46700)). Qed.
Lemma lem4061332 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4061333 {_102126 : Type'} (_46699 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46699 t) = (term1575 _102126 _46699 t).
Proof. exact (@lem4061332 (term1575 _102126 _46699 t)). Qed.
Lemma lem4061334 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4061335 {_102126 : Type'} (_46699 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46699 t) = (term1805 _102126 _46699 t).
Proof. exact (MK_COMB (@lem4061334) (@lem4061333 _102126 _46699 t)). Qed.
Lemma lem4061337 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4061338 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1806 _102126 t _46699 _46700) = (term1807 _102126 t _46699 _46700).
Proof. exact (@lem4061337 (term1577 _102126 _46700 t) (_46699 = _46700)). Qed.
Lemma lem4061340 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4061341 {_102126 : Type'} (_46700 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46700 t) = (term1575 _102126 _46700 t).
Proof. exact (@lem4061340 (term1575 _102126 _46700 t)). Qed.
Lemma lem4061342 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4061343 {_102126 : Type'} (_46700 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46700 t) = (term1805 _102126 _46700 t).
Proof. exact (MK_COMB (@lem4061342) (@lem4061341 _102126 _46700 t)). Qed.
Lemma lem4061344 {_102126 : Type'} (_46699 : _102126) (_46700 : _102126) : (term1567 _102126 _46699 _46700) = (term1567 _102126 _46699 _46700).
Proof. exact (eq_refl (term1567 _102126 _46699 _46700)). Qed.
Lemma lem4061345 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1807 _102126 t _46699 _46700) = (term1808 _102126 t _46699 _46700).
Proof. exact (MK_COMB (@lem4061343 _102126 _46700 t) (@lem4061344 _102126 _46699 _46700)). Qed.
Lemma lem4061346 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1806 _102126 t _46699 _46700) = (term1808 _102126 t _46699 _46700).
Proof. exact (TRANS (@lem4061338 _102126 t _46699 _46700) (@lem4061345 _102126 t _46699 _46700)). Qed.
Lemma lem4061347 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1802 _102126 t _46699 _46700) = (term1809 _102126 t _46699 _46700).
Proof. exact (MK_COMB (@lem4061335 _102126 _46699 t) (@lem4061346 _102126 t _46699 _46700)). Qed.
Lemma lem4061348 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1801 _102126 t _46699 _46700) = (term1809 _102126 t _46699 _46700).
Proof. exact (TRANS (@lem4061330 _102126 t _46699 _46700) (@lem4061347 _102126 t _46699 _46700)). Qed.
Lemma lem4061349 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4061350 {_102126 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (_46700 : _102126) : (term1810 _102126 t _46699 _46700) = (term1811 _102126 t _46699 _46700).
Proof. exact (MK_COMB (@lem4061349) (@lem4061348 _102126 t _46699 _46700)). Qed.
Lemma lem4061351 {_102126 _102133 : Type'} (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1562 _102126 _102133 _46699 f _46700) = (term1562 _102126 _102133 _46699 f _46700).
Proof. exact (eq_refl (term1562 _102126 _102133 _46699 f _46700)). Qed.
Lemma lem4061352 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1800 _102126 _102133 t _46699 f _46700) = (term1812 _102126 _102133 t _46699 f _46700).
Proof. exact (MK_COMB (@lem4061350 _102126 t _46699 _46700) (@lem4061351 _102126 _102133 _46699 f _46700)). Qed.
Lemma lem4061353 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46699 : _102126) (f : _102126 -> _102133) (_46700 : _102126) : (term1798 _102126 _102133 f t _46699 _46700) = (term1812 _102126 _102133 t _46699 f _46700).
Proof. exact (TRANS (@lem4061327 _102126 _102133 t _46699 f _46700) (@lem4061352 _102126 _102133 t _46699 f _46700)). Qed.
Lemma lem4061355 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1813 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4061045 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3) (@lem4061093 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4061356 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1608 _102126 _102133 f t) : term1814 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4060997 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3) (@lem4061355 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4061358 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1812 _102126 _102133 t _46699 f _46700.
Proof. exact (EQ_MP (@lem4061353 _102126 _102133 t _46699 f _46700) (@lem4061324 _102126 _102133 _46699 _46700 s P f t h1)). Qed.
Lemma lem4061359 {_102126 _102133 : Type'} (_46699 : _102126) (_46700 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1812 _102126 _102133 t _46699 f _46700.
Proof. exact (@lem4061358 _102126 _102133 _46699 _46700 s P f t h1). Qed.
Lemma lem4061360 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1815 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4061359 _102126 _102133 (term1617 _102126 _102133 x'''''''''''''' f t) (term1617 _102126 _102133 y'''''''''''''' f t) s P f t h1). Qed.
Lemma lem4061363 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1612 _102126 _102133 s P f t) (h4 : term1608 _102126 _102133 f t) : term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4061360 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h3 (@lem4061356 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h4)). Qed.
Lemma lem4061364 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1612 _102126 _102133 s P f t) (h4 : term1608 _102126 _102133 f t) : term1817 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (fun h0 : (term1624 _102126 _102133 x'''''''''''''' f t) = (term1624 _102126 _102133 y'''''''''''''' f t) => @lem4061363 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4). Qed.
Lemma lem4061366 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4061367 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1817 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) = (term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t).
Proof. exact (@lem4061366 ((term1624 _102126 _102133 x'''''''''''''' f t) = (term1624 _102126 _102133 y'''''''''''''' f t))). Qed.
Lemma lem4061368 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1612 _102126 _102133 s P f t) (h4 : term1608 _102126 _102133 f t) : term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4061367 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) (@lem4061364 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4)). Qed.
Lemma lem4061370 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (proj1 (@lem4049386 _102126 _102133 f t h1)). Qed.
Lemma lem4061371 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1759 _102126 _102133 f t.
Proof. exact (fun h0 : term1599 _102126 _102133 f t => @lem4061370 _102126 _102133 f t h1). Qed.
Lemma lem4061373 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061374 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1759 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4061373 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4061375 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1597 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4061374 _102126 _102133 f t) (@lem4061371 _102126 _102133 f t h1)). Qed.
Lemma lem4061393 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4061394 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1660 _102126 _102133 _46697 _46698) = (term1818 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061393 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698) (term1599 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061400 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1819 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1819 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1819 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061401 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061400 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061394 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061412 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4061413 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1821 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1822 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061412) (@lem4061401 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061417 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4061418 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (@lem4061417 ((term1624 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1624 _102126 _102133 y'''''''''''''' _46697 _46698)) (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698) (term1599 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061436 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : ((term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)) = ((term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)).
Proof. exact (MK_COMB (@lem4061413 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061418 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061438 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4061439 (x : Prop) : (x = x) = True.
Proof. exact (@lem4061438 Prop x). Qed.
Lemma lem4061440 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : ((term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)) = True.
Proof. exact (@lem4061439 (term1820 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061441 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : ((term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)) = True.
Proof. exact (TRANS (@lem4061436 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061440 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061442 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : True = ((term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)).
Proof. exact (SYM (@lem4061441 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061443 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1753 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (EQ_MP (@lem4061442 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem0)). Qed.
Lemma lem4061444 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4061443 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4055645 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4061446 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4061447 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1824 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (@lem4061446 (term1825 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698)). Qed.
Lemma lem4061449 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4061450 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1826 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1827 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (@lem4061449 ((term1624 _102126 _102133 x'''''''''''''' _46697 _46698) = (term1624 _102126 _102133 y'''''''''''''' _46697 _46698)) (term1599 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061452 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4061453 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1770 _102126 _102133 _46697 _46698) = (term1597 _102126 _102133 _46697 _46698).
Proof. exact (@lem4061452 (term1597 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061454 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (eq_refl (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061455 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1827 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1829 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061454 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061453 _102126 _102133 _46697 _46698)). Qed.
Lemma lem4061456 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1826 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1829 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (TRANS (@lem4061450 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061455 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061457 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4061458 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1830 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1831 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061457) (@lem4061456 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061459 {_102126 : Type'} (_46698 : _102126 -> Prop) : (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698).
Proof. exact (eq_refl (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46698)). Qed.
Lemma lem4061460 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1824 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1832 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (MK_COMB (@lem4061458 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061459 _102126 _46698)). Qed.
Lemma lem4061461 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) : (term1823 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) = (term1832 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698).
Proof. exact (TRANS (@lem4061447 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061460 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698)). Qed.
Lemma lem4061463 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1612 _102126 _102133 s P f t) (h4 : term1608 _102126 _102133 f t) : term1829 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4061368 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4) (@lem4061375 _102126 _102133 f t h4)). Qed.
Lemma lem4061465 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1832 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (EQ_MP (@lem4061461 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698) (@lem4061444 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4061466 {_102126 _102133 : Type'} (_46697 : _102126 -> _102133) (_46698 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1832 _102126 _102133 x'''''''''''''' y'''''''''''''' _46697 _46698.
Proof. exact (@lem4061465 _102126 _102133 _46697 _46698 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061467 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1832 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4061466 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4061470 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1604 _102126 t) (h3 : term1612 _102126 _102133 s P f t) (h4 : term1608 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (@lem4061467 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4061463 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4)). Qed.
Lemma lem4061471 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) (h3 : term1608 _102126 _102133 f t) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4061470 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h0 h2 h3). Qed.
Lemma lem4061473 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061474 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4061473 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4061475 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) (h3 : term1608 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4061474 _102126 t) (@lem4061471 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4061478 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4061480 {_102126 : Type'} (t : _102126 -> Prop) : (term1604 _102126 t) = (term1834 _102126 t).
Proof. exact (@lem4061478 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4061483 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1608 _102126 _102133 f t) : term1834 _102126 t.
Proof. exact (EQ_MP (@lem4061480 _102126 t) (@lem4055573 _102126 _102133 f t h1)). Qed.
Lemma lem4061486 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) (h3 : term1608 _102126 _102133 f t) : False.
Proof. exact (@lem4061483 _102126 _102133 f t h3 (@lem4061475 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4061487 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) (h3 : term1608 _102126 _102133 f t) : term1835.
Proof. exact (fun h0 : ~ False => @lem4061486 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3). Qed.
Lemma lem4061489 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4061490 : term1835 = False.
Proof. exact (@lem4061489 False). Qed.
Lemma lem4061491 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) (h3 : term1608 _102126 _102133 f t) : False.
Proof. exact (EQ_MP (@lem4061490) (@lem4061487 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4062554 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4062555 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1836 _102126 _102133 f t.
Proof. exact (fun h0 : term1597 _102126 _102133 f t => @lem4062554 _102126 _102133 f t h1). Qed.
Lemma lem4062557 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4062558 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1836 _102126 _102133 f t) = (term1599 _102126 _102133 f t).
Proof. exact (@lem4062557 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4062559 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4062558 _102126 _102133 f t) (@lem4062555 _102126 _102133 f t h1)). Qed.
Lemma lem4062561 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049387 _102126 _102133 f t h1)). Qed.
Lemma lem4062562 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4062561 _102126 _102133 f t h1). Qed.
Lemma lem4062564 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062565 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4062564 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4062566 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4062565 _102126 t) (@lem4062562 _102126 _102133 f t h1)). Qed.
Lemma lem4062568 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4062569 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1754 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1837 _102126 _102133 x'''''''''''''' _46729 _46730).
Proof. exact (@lem4062568 (term1664 _102126 _102133 _46729 _46730) (term1633 _102126 _102133 x'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062571 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4062572 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1839 _102126 _102133 _46729 _46730).
Proof. exact (@lem4062571 (term1597 _102126 _102133 _46729 _46730) (term1604 _102126 _46730)). Qed.
Lemma lem4062574 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4062575 {_102126 : Type'} (_46730 : _102126 -> Prop) : (term1840 _102126 _46730) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730).
Proof. exact (@lem4062574 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730)). Qed.
Lemma lem4062576 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1601 _102126 _102133 _46729 _46730) = (term1601 _102126 _102133 _46729 _46730).
Proof. exact (eq_refl (term1601 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062577 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1839 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062576 _102126 _102133 _46729 _46730) (@lem4062575 _102126 _46730)). Qed.
Lemma lem4062578 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (TRANS (@lem4062572 _102126 _102133 _46729 _46730) (@lem4062577 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062579 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4062580 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1841 _102126 _102133 _46729 _46730) = (term1842 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062579) (@lem4062578 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062581 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1633 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1633 _102126 _102133 x'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1633 _102126 _102133 x'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062582 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1837 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1843 _102126 _102133 x'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4062580 _102126 _102133 _46729 _46730) (@lem4062581 _102126 _102133 x'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062583 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1754 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1843 _102126 _102133 x'''''''''''''' _46729 _46730).
Proof. exact (TRANS (@lem4062569 _102126 _102133 x'''''''''''''' _46729 _46730) (@lem4062582 _102126 _102133 x'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062585 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) (h2 : term1603 _102126 _102133 f t) : term1603 _102126 _102133 f t.
Proof. exact (conj (@lem4062559 _102126 _102133 f t h1) (@lem4062566 _102126 _102133 f t h2)). Qed.
Lemma lem4062587 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 x'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4062583 _102126 _102133 x'''''''''''''' _46729 _46730) (@lem4056745 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4062588 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 x'''''''''''''' _46729 _46730.
Proof. exact (@lem4062587 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062589 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 x'''''''''''''' f t.
Proof. exact (@lem4062588 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062592 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1633 _102126 _102133 x'''''''''''''' f t.
Proof. exact (@lem4062589 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4062585 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4062593 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1775 _102126 _102133 x'''''''''''''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 x'''''''''''''' f t => @lem4062592 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4062595 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062596 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 x'''''''''''''' f t) = (term1633 _102126 _102133 x'''''''''''''' f t).
Proof. exact (@lem4062595 (term1633 _102126 _102133 x'''''''''''''' f t)). Qed.
Lemma lem4062597 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1633 _102126 _102133 x'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4062596 _102126 _102133 x'''''''''''''' f t) (@lem4062593 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062600 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4062601 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1836 _102126 _102133 f t.
Proof. exact (fun h0 : term1597 _102126 _102133 f t => @lem4062600 _102126 _102133 f t h1). Qed.
Lemma lem4062603 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4062604 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1836 _102126 _102133 f t) = (term1599 _102126 _102133 f t).
Proof. exact (@lem4062603 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4062605 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4062604 _102126 _102133 f t) (@lem4062601 _102126 _102133 f t h1)). Qed.
Lemma lem4062607 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049387 _102126 _102133 f t h1)). Qed.
Lemma lem4062608 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4062607 _102126 _102133 f t h1). Qed.
Lemma lem4062610 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062611 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4062610 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4062612 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4062611 _102126 t) (@lem4062608 _102126 _102133 f t h1)). Qed.
Lemma lem4062614 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4062615 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1754 _102126 _102133 y'''''''''''''' _46729 _46730) = (term1837 _102126 _102133 y'''''''''''''' _46729 _46730).
Proof. exact (@lem4062614 (term1664 _102126 _102133 _46729 _46730) (term1633 _102126 _102133 y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062617 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4062618 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1839 _102126 _102133 _46729 _46730).
Proof. exact (@lem4062617 (term1597 _102126 _102133 _46729 _46730) (term1604 _102126 _46730)). Qed.
Lemma lem4062620 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4062621 {_102126 : Type'} (_46730 : _102126 -> Prop) : (term1840 _102126 _46730) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730).
Proof. exact (@lem4062620 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730)). Qed.
Lemma lem4062622 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1601 _102126 _102133 _46729 _46730) = (term1601 _102126 _102133 _46729 _46730).
Proof. exact (eq_refl (term1601 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062623 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1839 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062622 _102126 _102133 _46729 _46730) (@lem4062621 _102126 _46730)). Qed.
Lemma lem4062624 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (TRANS (@lem4062618 _102126 _102133 _46729 _46730) (@lem4062623 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062625 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4062626 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1841 _102126 _102133 _46729 _46730) = (term1842 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062625) (@lem4062624 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062627 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1633 _102126 _102133 y'''''''''''''' _46729 _46730) = (term1633 _102126 _102133 y'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1633 _102126 _102133 y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062628 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1837 _102126 _102133 y'''''''''''''' _46729 _46730) = (term1843 _102126 _102133 y'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4062626 _102126 _102133 _46729 _46730) (@lem4062627 _102126 _102133 y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062629 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1754 _102126 _102133 y'''''''''''''' _46729 _46730) = (term1843 _102126 _102133 y'''''''''''''' _46729 _46730).
Proof. exact (TRANS (@lem4062615 _102126 _102133 y'''''''''''''' _46729 _46730) (@lem4062628 _102126 _102133 y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062631 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) (h2 : term1603 _102126 _102133 f t) : term1603 _102126 _102133 f t.
Proof. exact (conj (@lem4062605 _102126 _102133 f t h1) (@lem4062612 _102126 _102133 f t h2)). Qed.
Lemma lem4062633 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 y'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4062629 _102126 _102133 y'''''''''''''' _46729 _46730) (@lem4056755 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4062634 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 y'''''''''''''' _46729 _46730.
Proof. exact (@lem4062633 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062635 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1843 _102126 _102133 y'''''''''''''' f t.
Proof. exact (@lem4062634 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062638 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1633 _102126 _102133 y'''''''''''''' f t.
Proof. exact (@lem4062635 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4062631 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4062639 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1775 _102126 _102133 y'''''''''''''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 y'''''''''''''' f t => @lem4062638 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4062641 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062642 {_102126 _102133 : Type'} (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 y'''''''''''''' f t) = (term1633 _102126 _102133 y'''''''''''''' f t).
Proof. exact (@lem4062641 (term1633 _102126 _102133 y'''''''''''''' f t)). Qed.
Lemma lem4062643 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1633 _102126 _102133 y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4062642 _102126 _102133 y'''''''''''''' f t) (@lem4062639 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062646 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4062647 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1836 _102126 _102133 f t.
Proof. exact (fun h0 : term1597 _102126 _102133 f t => @lem4062646 _102126 _102133 f t h1). Qed.
Lemma lem4062649 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4062650 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1836 _102126 _102133 f t) = (term1599 _102126 _102133 f t).
Proof. exact (@lem4062649 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4062651 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) : term1599 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4062650 _102126 _102133 f t) (@lem4062647 _102126 _102133 f t h1)). Qed.
Lemma lem4062653 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049387 _102126 _102133 f t h1)). Qed.
Lemma lem4062654 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4062653 _102126 _102133 f t h1). Qed.
Lemma lem4062656 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062657 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4062656 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4062658 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4062657 _102126 t) (@lem4062654 _102126 _102133 f t h1)). Qed.
Lemma lem4062660 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4062661 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1844 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (@lem4062660 (term1664 _102126 _102133 _46729 _46730) (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062663 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4062664 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1839 _102126 _102133 _46729 _46730).
Proof. exact (@lem4062663 (term1597 _102126 _102133 _46729 _46730) (term1604 _102126 _46730)). Qed.
Lemma lem4062666 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4062667 {_102126 : Type'} (_46730 : _102126 -> Prop) : (term1840 _102126 _46730) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730).
Proof. exact (@lem4062666 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730)). Qed.
Lemma lem4062668 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1601 _102126 _102133 _46729 _46730) = (term1601 _102126 _102133 _46729 _46730).
Proof. exact (eq_refl (term1601 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062669 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1839 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062668 _102126 _102133 _46729 _46730) (@lem4062667 _102126 _46730)). Qed.
Lemma lem4062670 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1838 _102126 _102133 _46729 _46730) = (term1603 _102126 _102133 _46729 _46730).
Proof. exact (TRANS (@lem4062664 _102126 _102133 _46729 _46730) (@lem4062669 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062671 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4062672 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1841 _102126 _102133 _46729 _46730) = (term1842 _102126 _102133 _46729 _46730).
Proof. exact (MK_COMB (@lem4062671) (@lem4062670 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4062673 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062674 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1844 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1845 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4062672 _102126 _102133 _46729 _46730) (@lem4062673 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062675 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1690 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1845 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (TRANS (@lem4062661 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4062674 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4062677 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1599 _102126 _102133 f t) (h2 : term1603 _102126 _102133 f t) : term1603 _102126 _102133 f t.
Proof. exact (conj (@lem4062651 _102126 _102133 f t h1) (@lem4062658 _102126 _102133 f t h2)). Qed.
Lemma lem4062679 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1845 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4062675 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4056735 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4062680 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1845 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (@lem4062679 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062681 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1845 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4062680 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4062684 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4062681 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4062677 _102126 _102133 f t h2 h3)). Qed.
Lemma lem4062685 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1779 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (fun h0 : (term1617 _102126 _102133 x'''''''''''''' f t) = (term1617 _102126 _102133 y'''''''''''''' f t) => @lem4062684 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3). Qed.
Lemma lem4062687 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4062688 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1779 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) = (term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t).
Proof. exact (@lem4062687 ((term1617 _102126 _102133 x'''''''''''''' f t) = (term1617 _102126 _102133 y'''''''''''''' f t))). Qed.
Lemma lem4062689 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1621 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4062688 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) (@lem4062685 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062705 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062706 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1780 _102126 _102133 t f _46731 _46732) = (term1781 _102126 _102133 f t _46731 _46732).
Proof. exact (@lem4062705 (term1562 _102126 _102133 _46731 f _46732) (term1577 _102126 _46732 t) (_46731 = _46732)). Qed.
Lemma lem4062722 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4062723 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46731 _46732) = (term1783 _102126 _46731 _46732 t).
Proof. exact (@lem4062722 (_46731 = _46732) (term1577 _102126 _46732 t)). Qed.
Lemma lem4062731 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1564 _102126 _102133 _46731 f _46732) = (term1564 _102126 _102133 _46731 f _46732).
Proof. exact (eq_refl (term1564 _102126 _102133 _46731 f _46732)). Qed.
Lemma lem4062732 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46731 _46732) = (term1784 _102126 _102133 f _46731 _46732 t).
Proof. exact (MK_COMB (@lem4062731 _102126 _102133 _46731 f _46732) (@lem4062723 _102126 _46731 _46732 t)). Qed.
Lemma lem4062736 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062737 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) (t : _102126 -> Prop) : (term1784 _102126 _102133 f _46731 _46732 t) = (term1785 _102126 _102133 _46731 f _46732 t).
Proof. exact (@lem4062736 (_46731 = _46732) (term1562 _102126 _102133 _46731 f _46732) (term1577 _102126 _46732 t)). Qed.
Lemma lem4062757 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46731 _46732) = (term1785 _102126 _102133 _46731 f _46732 t).
Proof. exact (TRANS (@lem4062732 _102126 _102133 f _46731 _46732 t) (@lem4062737 _102126 _102133 _46731 f _46732 t)). Qed.
Lemma lem4062758 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) (t : _102126 -> Prop) : (term1780 _102126 _102133 t f _46731 _46732) = (term1785 _102126 _102133 _46731 f _46732 t).
Proof. exact (TRANS (@lem4062706 _102126 _102133 f t _46731 _46732) (@lem4062757 _102126 _102133 _46731 f _46732 t)). Qed.
Lemma lem4062759 {_102126 : Type'} (_46731 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46731 t) = (term1579 _102126 _46731 t).
Proof. exact (eq_refl (term1579 _102126 _46731 t)). Qed.
Lemma lem4062760 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46731 _46732) = (term1786 _102126 _102133 _46731 f _46732 t).
Proof. exact (MK_COMB (@lem4062759 _102126 _46731 t) (@lem4062758 _102126 _102133 _46731 f _46732 t)). Qed.
Lemma lem4062764 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062765 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46731 f _46732 t) = (term1787 _102126 _102133 _46731 f _46732 t).
Proof. exact (@lem4062764 (_46731 = _46732) (term1577 _102126 _46731 t) (term1788 _102126 _102133 _46731 f _46732 t)). Qed.
Lemma lem4062781 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062782 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1789 _102126 _102133 _46731 f _46732 t) = (term1790 _102126 _102133 f _46731 _46732 t).
Proof. exact (@lem4062781 (term1562 _102126 _102133 _46731 f _46732) (term1577 _102126 _46731 t) (term1577 _102126 _46732 t)). Qed.
Lemma lem4062800 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) : (term1791 _102126 _46731 _46732) = (term1791 _102126 _46731 _46732).
Proof. exact (eq_refl (term1791 _102126 _46731 _46732)). Qed.
Lemma lem4062801 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1787 _102126 _102133 _46731 f _46732 t) = (term1792 _102126 _102133 f _46731 _46732 t).
Proof. exact (MK_COMB (@lem4062800 _102126 _46731 _46732) (@lem4062782 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062812 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46731 f _46732 t) = (term1792 _102126 _102133 f _46731 _46732 t).
Proof. exact (TRANS (@lem4062765 _102126 _102133 _46731 f _46732 t) (@lem4062801 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062813 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46731 _46732) = (term1792 _102126 _102133 f _46731 _46732 t).
Proof. exact (TRANS (@lem4062760 _102126 _102133 _46731 f _46732 t) (@lem4062812 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062814 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4062815 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1793 _102126 _102133 t f _46731 _46732) = (term1794 _102126 _102133 f _46731 _46732 t).
Proof. exact (MK_COMB (@lem4062814) (@lem4062813 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062841 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4062842 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46731 _46732) = (term1783 _102126 _46731 _46732 t).
Proof. exact (@lem4062841 (_46731 = _46732) (term1577 _102126 _46732 t)). Qed.
Lemma lem4062850 {_102126 : Type'} (_46731 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46731 t) = (term1579 _102126 _46731 t).
Proof. exact (eq_refl (term1579 _102126 _46731 t)). Qed.
Lemma lem4062851 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46731 _46732) = (term1796 _102126 _46731 _46732 t).
Proof. exact (MK_COMB (@lem4062850 _102126 _46731 t) (@lem4062842 _102126 _46731 _46732 t)). Qed.
Lemma lem4062855 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062856 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1796 _102126 _46731 _46732 t) = (term1797 _102126 _46731 _46732 t).
Proof. exact (@lem4062855 (_46731 = _46732) (term1577 _102126 _46731 t) (term1577 _102126 _46732 t)). Qed.
Lemma lem4062874 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46731 _46732) = (term1797 _102126 _46731 _46732 t).
Proof. exact (TRANS (@lem4062851 _102126 _46731 _46732 t) (@lem4062856 _102126 _46731 _46732 t)). Qed.
Lemma lem4062875 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1564 _102126 _102133 _46731 f _46732) = (term1564 _102126 _102133 _46731 f _46732).
Proof. exact (eq_refl (term1564 _102126 _102133 _46731 f _46732)). Qed.
Lemma lem4062876 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46731 _46732) = (term1799 _102126 _102133 f _46731 _46732 t).
Proof. exact (MK_COMB (@lem4062875 _102126 _102133 _46731 f _46732) (@lem4062874 _102126 _46731 _46732 t)). Qed.
Lemma lem4062880 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062881 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1799 _102126 _102133 f _46731 _46732 t) = (term1792 _102126 _102133 f _46731 _46732 t).
Proof. exact (@lem4062880 (_46731 = _46732) (term1562 _102126 _102133 _46731 f _46732) (term1580 _102126 _46731 _46732 t)). Qed.
Lemma lem4062911 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46731 _46732) = (term1792 _102126 _102133 f _46731 _46732 t).
Proof. exact (TRANS (@lem4062876 _102126 _102133 f _46731 _46732 t) (@lem4062881 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062912 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : ((term1751 _102126 _102133 t f _46731 _46732) = (term1798 _102126 _102133 f t _46731 _46732)) = ((term1792 _102126 _102133 f _46731 _46732 t) = (term1792 _102126 _102133 f _46731 _46732 t)).
Proof. exact (MK_COMB (@lem4062815 _102126 _102133 f _46731 _46732 t) (@lem4062911 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062914 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4062915 (x : Prop) : (x = x) = True.
Proof. exact (@lem4062914 Prop x). Qed.
Lemma lem4062916 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46731 : _102126) (_46732 : _102126) (t : _102126 -> Prop) : ((term1792 _102126 _102133 f _46731 _46732 t) = (term1792 _102126 _102133 f _46731 _46732 t)) = True.
Proof. exact (@lem4062915 (term1792 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062917 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : ((term1751 _102126 _102133 t f _46731 _46732) = (term1798 _102126 _102133 f t _46731 _46732)) = True.
Proof. exact (TRANS (@lem4062912 _102126 _102133 f _46731 _46732 t) (@lem4062916 _102126 _102133 f _46731 _46732 t)). Qed.
Lemma lem4062918 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : True = ((term1751 _102126 _102133 t f _46731 _46732) = (term1798 _102126 _102133 f t _46731 _46732)).
Proof. exact (SYM (@lem4062917 _102126 _102133 f t _46731 _46732)). Qed.
Lemma lem4062919 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1751 _102126 _102133 t f _46731 _46732) = (term1798 _102126 _102133 f t _46731 _46732).
Proof. exact (EQ_MP (@lem4062918 _102126 _102133 f t _46731 _46732) (@lem0)). Qed.
Lemma lem4062920 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1798 _102126 _102133 f t _46731 _46732.
Proof. exact (EQ_MP (@lem4062919 _102126 _102133 f t _46731 _46732) (@lem4056685 _102126 _102133 _46731 _46732 s P f t h1)). Qed.
Lemma lem4062922 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4062923 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1798 _102126 _102133 f t _46731 _46732) = (term1800 _102126 _102133 t _46731 f _46732).
Proof. exact (@lem4062922 (term1795 _102126 t _46731 _46732) (term1562 _102126 _102133 _46731 f _46732)). Qed.
Lemma lem4062925 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4062926 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1801 _102126 t _46731 _46732) = (term1802 _102126 t _46731 _46732).
Proof. exact (@lem4062925 (term1577 _102126 _46731 t) (term1782 _102126 t _46731 _46732)). Qed.
Lemma lem4062928 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4062929 {_102126 : Type'} (_46731 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46731 t) = (term1575 _102126 _46731 t).
Proof. exact (@lem4062928 (term1575 _102126 _46731 t)). Qed.
Lemma lem4062930 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4062931 {_102126 : Type'} (_46731 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46731 t) = (term1805 _102126 _46731 t).
Proof. exact (MK_COMB (@lem4062930) (@lem4062929 _102126 _46731 t)). Qed.
Lemma lem4062933 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4062934 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1806 _102126 t _46731 _46732) = (term1807 _102126 t _46731 _46732).
Proof. exact (@lem4062933 (term1577 _102126 _46732 t) (_46731 = _46732)). Qed.
Lemma lem4062936 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4062937 {_102126 : Type'} (_46732 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46732 t) = (term1575 _102126 _46732 t).
Proof. exact (@lem4062936 (term1575 _102126 _46732 t)). Qed.
Lemma lem4062938 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4062939 {_102126 : Type'} (_46732 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46732 t) = (term1805 _102126 _46732 t).
Proof. exact (MK_COMB (@lem4062938) (@lem4062937 _102126 _46732 t)). Qed.
Lemma lem4062940 {_102126 : Type'} (_46731 : _102126) (_46732 : _102126) : (term1567 _102126 _46731 _46732) = (term1567 _102126 _46731 _46732).
Proof. exact (eq_refl (term1567 _102126 _46731 _46732)). Qed.
Lemma lem4062941 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1807 _102126 t _46731 _46732) = (term1808 _102126 t _46731 _46732).
Proof. exact (MK_COMB (@lem4062939 _102126 _46732 t) (@lem4062940 _102126 _46731 _46732)). Qed.
Lemma lem4062942 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1806 _102126 t _46731 _46732) = (term1808 _102126 t _46731 _46732).
Proof. exact (TRANS (@lem4062934 _102126 t _46731 _46732) (@lem4062941 _102126 t _46731 _46732)). Qed.
Lemma lem4062943 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1802 _102126 t _46731 _46732) = (term1809 _102126 t _46731 _46732).
Proof. exact (MK_COMB (@lem4062931 _102126 _46731 t) (@lem4062942 _102126 t _46731 _46732)). Qed.
Lemma lem4062944 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1801 _102126 t _46731 _46732) = (term1809 _102126 t _46731 _46732).
Proof. exact (TRANS (@lem4062926 _102126 t _46731 _46732) (@lem4062943 _102126 t _46731 _46732)). Qed.
Lemma lem4062945 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4062946 {_102126 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (_46732 : _102126) : (term1810 _102126 t _46731 _46732) = (term1811 _102126 t _46731 _46732).
Proof. exact (MK_COMB (@lem4062945) (@lem4062944 _102126 t _46731 _46732)). Qed.
Lemma lem4062947 {_102126 _102133 : Type'} (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1562 _102126 _102133 _46731 f _46732) = (term1562 _102126 _102133 _46731 f _46732).
Proof. exact (eq_refl (term1562 _102126 _102133 _46731 f _46732)). Qed.
Lemma lem4062948 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1800 _102126 _102133 t _46731 f _46732) = (term1812 _102126 _102133 t _46731 f _46732).
Proof. exact (MK_COMB (@lem4062946 _102126 t _46731 _46732) (@lem4062947 _102126 _102133 _46731 f _46732)). Qed.
Lemma lem4062949 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46731 : _102126) (f : _102126 -> _102133) (_46732 : _102126) : (term1798 _102126 _102133 f t _46731 _46732) = (term1812 _102126 _102133 t _46731 f _46732).
Proof. exact (TRANS (@lem4062923 _102126 _102133 t _46731 f _46732) (@lem4062948 _102126 _102133 t _46731 f _46732)). Qed.
Lemma lem4062951 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1813 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4062643 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3) (@lem4062689 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062952 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) : term1814 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4062597 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3) (@lem4062951 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062954 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1812 _102126 _102133 t _46731 f _46732.
Proof. exact (EQ_MP (@lem4062949 _102126 _102133 t _46731 f _46732) (@lem4062920 _102126 _102133 _46731 _46732 s P f t h1)). Qed.
Lemma lem4062955 {_102126 _102133 : Type'} (_46731 : _102126) (_46732 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1812 _102126 _102133 t _46731 f _46732.
Proof. exact (@lem4062954 _102126 _102133 _46731 _46732 s P f t h1). Qed.
Lemma lem4062956 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1612 _102126 _102133 s P f t) : term1815 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4062955 _102126 _102133 (term1617 _102126 _102133 x'''''''''''''' f t) (term1617 _102126 _102133 y'''''''''''''' f t) s P f t h1). Qed.
Lemma lem4062959 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) (h4 : term1612 _102126 _102133 s P f t) : term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4062956 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h4 (@lem4062952 _102126 _102133 x'''''''''''''' y'''''''''''''' f t h1 h2 h3)). Qed.
Lemma lem4062960 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) (h4 : term1612 _102126 _102133 s P f t) : term1817 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (fun h0 : (term1624 _102126 _102133 x'''''''''''''' f t) = (term1624 _102126 _102133 y'''''''''''''' f t) => @lem4062959 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4). Qed.
Lemma lem4062962 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4062963 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1817 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) = (term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t).
Proof. exact (@lem4062962 ((term1624 _102126 _102133 x'''''''''''''' f t) = (term1624 _102126 _102133 y'''''''''''''' f t))). Qed.
Lemma lem4062964 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) (h4 : term1612 _102126 _102133 s P f t) : term1816 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (EQ_MP (@lem4062963 _102126 _102133 x'''''''''''''' y'''''''''''''' f t) (@lem4062960 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4)). Qed.
Lemma lem4062966 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049387 _102126 _102133 f t h1)). Qed.
Lemma lem4062967 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4062966 _102126 _102133 f t h1). Qed.
Lemma lem4062969 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4062970 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4062969 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4062971 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4062970 _102126 t) (@lem4062967 _102126 _102133 f t h1)). Qed.
Lemma lem4062994 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4062995 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (@lem4062994 ((term1624 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1624 _102126 _102133 y'''''''''''''' _46729 _46730)) (term1597 _102126 _102133 _46729 _46730) (term1604 _102126 _46730)). Qed.
Lemma lem4063013 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1847 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1847 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1847 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063014 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : ((term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)) = ((term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)).
Proof. exact (MK_COMB (@lem4063013 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4062995 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063016 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4063017 (x : Prop) : (x = x) = True.
Proof. exact (@lem4063016 Prop x). Qed.
Lemma lem4063018 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : ((term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)) = True.
Proof. exact (@lem4063017 (term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063019 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : ((term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)) = True.
Proof. exact (TRANS (@lem4063014 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063018 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063020 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : True = ((term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)).
Proof. exact (SYM (@lem4063019 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063021 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1755 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (EQ_MP (@lem4063020 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem0)). Qed.
Lemma lem4063022 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4063021 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4056765 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4063024 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4063025 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1848 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (@lem4063024 (term1732 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (term1597 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4063027 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4063028 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1849 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1850 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (@lem4063027 ((term1624 _102126 _102133 x'''''''''''''' _46729 _46730) = (term1624 _102126 _102133 y'''''''''''''' _46729 _46730)) (term1604 _102126 _46730)). Qed.
Lemma lem4063030 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4063031 {_102126 : Type'} (_46730 : _102126 -> Prop) : (term1840 _102126 _46730) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730).
Proof. exact (@lem4063030 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46730)). Qed.
Lemma lem4063032 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (eq_refl (term1828 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063033 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1850 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1851 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4063032 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063031 _102126 _46730)). Qed.
Lemma lem4063034 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1849 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1851 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (TRANS (@lem4063028 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063033 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063035 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4063036 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1852 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1853 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4063035) (@lem4063034 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063037 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1597 _102126 _102133 _46729 _46730) = (term1597 _102126 _102133 _46729 _46730).
Proof. exact (eq_refl (term1597 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4063038 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1848 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1854 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (MK_COMB (@lem4063036 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063037 _102126 _102133 _46729 _46730)). Qed.
Lemma lem4063039 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) : (term1846 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) = (term1854 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730).
Proof. exact (TRANS (@lem4063025 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063038 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730)). Qed.
Lemma lem4063041 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) (h4 : term1612 _102126 _102133 s P f t) : term1851 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (conj (@lem4062964 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4) (@lem4062971 _102126 _102133 f t h3)). Qed.
Lemma lem4063043 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1854 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (EQ_MP (@lem4063039 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730) (@lem4063022 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1)). Qed.
Lemma lem4063044 {_102126 _102133 : Type'} (_46729 : _102126 -> _102133) (_46730 : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1854 _102126 _102133 x'''''''''''''' y'''''''''''''' _46729 _46730.
Proof. exact (@lem4063043 _102126 _102133 _46729 _46730 x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4063045 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') : term1854 _102126 _102133 x'''''''''''''' y'''''''''''''' f t.
Proof. exact (@lem4063044 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1). Qed.
Lemma lem4063048 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1599 _102126 _102133 f t) (h3 : term1603 _102126 _102133 f t) (h4 : term1612 _102126 _102133 s P f t) : term1597 _102126 _102133 f t.
Proof. exact (@lem4063045 _102126 _102133 f t x'''''''''''''' y'''''''''''''' h1 (@lem4063041 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3 h4)). Qed.
Lemma lem4063049 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1603 _102126 _102133 f t) (h3 : term1612 _102126 _102133 s P f t) : term1759 _102126 _102133 f t.
Proof. exact (fun h0 : term1599 _102126 _102133 f t => @lem4063048 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h0 h2 h3). Qed.
Lemma lem4063051 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4063052 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1759 _102126 _102133 f t) = (term1597 _102126 _102133 f t).
Proof. exact (@lem4063051 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4063053 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1603 _102126 _102133 f t) (h3 : term1612 _102126 _102133 s P f t) : term1597 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4063052 _102126 _102133 f t) (@lem4063049 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4063056 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4063058 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1599 _102126 _102133 f t) = (term1855 _102126 _102133 f t).
Proof. exact (@lem4063056 (term1597 _102126 _102133 f t)). Qed.
Lemma lem4063061 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1603 _102126 _102133 f t) : term1855 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4063058 _102126 _102133 f t) (@lem4056651 _102126 _102133 f t h1)). Qed.
Lemma lem4063064 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1603 _102126 _102133 f t) (h3 : term1612 _102126 _102133 s P f t) : False.
Proof. exact (@lem4063061 _102126 _102133 f t h2 (@lem4063053 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4063065 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1603 _102126 _102133 f t) (h3 : term1612 _102126 _102133 s P f t) : term1835.
Proof. exact (fun h0 : ~ False => @lem4063064 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3). Qed.
Lemma lem4063067 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4063068 : term1835 = False.
Proof. exact (@lem4063067 False). Qed.
Lemma lem4063069 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1603 _102126 _102133 f t) (h3 : term1612 _102126 _102133 s P f t) : False.
Proof. exact (EQ_MP (@lem4063068) (@lem4063065 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h3)). Qed.
Lemma lem4063127 : (@I (nat -> Prop)) = (@I (nat -> Prop)).
Proof. exact (eq_refl (@I (nat -> Prop))). Qed.
Lemma lem4063128 (_47289 : nat -> Prop) (_47291 : nat -> Prop) (h1 : _47289 = _47291) : _47289 = _47291.
Proof. exact (h1). Qed.
Lemma lem4063129 (_47290 : nat) (_47292 : nat) (h1 : _47290 = _47292) : _47290 = _47292.
Proof. exact (h1). Qed.
Lemma lem4063130 (_47289 : nat -> Prop) (_47291 : nat -> Prop) (h1 : _47289 = _47291) : (@I (nat -> Prop) _47289) = (@I (nat -> Prop) _47291).
Proof. exact (MK_COMB (@lem4063127) (@lem4063128 _47289 _47291 h1)). Qed.
Lemma lem4063131 (_47289 : nat -> Prop) (_47291 : nat -> Prop) (_47290 : nat) (_47292 : nat) (h1 : _47289 = _47291) (h2 : _47290 = _47292) : (@I (nat -> Prop) _47289 _47290) = (@I (nat -> Prop) _47291 _47292).
Proof. exact (MK_COMB (@lem4063130 _47289 _47291 h1) (@lem4063129 _47290 _47292 h2)). Qed.
Lemma lem4063133 (b : Prop) (a : Prop) : term1856 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem4063134 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : term1857 _47291 _47292 _47289 _47290.
Proof. exact (@lem4063133 (@I (nat -> Prop) _47291 _47292) (@I (nat -> Prop) _47289 _47290)). Qed.
Lemma lem4063135 (_47289 : nat -> Prop) (_47291 : nat -> Prop) (_47290 : nat) (_47292 : nat) (h1 : _47289 = _47291) (h2 : _47290 = _47292) : term1858 _47291 _47292 _47289 _47290.
Proof. exact (@lem4063134 _47291 _47292 _47289 _47290 (@lem4063131 _47289 _47291 _47290 _47292 h1 h2)). Qed.
Lemma lem4063136 (_47292 : nat) (_47290 : nat) (_47289 : nat -> Prop) (_47291 : nat -> Prop) (h1 : _47289 = _47291) : term1859 _47291 _47292 _47289 _47290.
Proof. exact (fun h0 : _47290 = _47292 => @lem4063135 _47289 _47291 _47290 _47292 h1 h0). Qed.
Lemma lem4063138 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4063139 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1859 _47291 _47292 _47289 _47290) = (term1861 _47291 _47292 _47289 _47290).
Proof. exact (@lem4063138 (_47290 = _47292) (term1858 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4063140 (_47292 : nat) (_47290 : nat) (_47289 : nat -> Prop) (_47291 : nat -> Prop) (h1 : _47289 = _47291) : term1861 _47291 _47292 _47289 _47290.
Proof. exact (EQ_MP (@lem4063139 _47291 _47292 _47289 _47290) (@lem4063136 _47292 _47290 _47289 _47291 h1)). Qed.
Lemma lem4063141 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : term1862 _47291 _47292 _47289 _47290.
Proof. exact (fun h0 : _47289 = _47291 => @lem4063140 _47292 _47290 _47289 _47291 h0). Qed.
Lemma lem4063143 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4063144 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1862 _47291 _47292 _47289 _47290) = (term1863 _47291 _47292 _47289 _47290).
Proof. exact (@lem4063143 (_47289 = _47291) (term1861 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4063145 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : term1863 _47291 _47292 _47289 _47290.
Proof. exact (EQ_MP (@lem4063144 _47291 _47292 _47289 _47290) (@lem4063141 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4063964 : (@I (nat -> nat -> Prop)) = (@I (nat -> nat -> Prop)).
Proof. exact (eq_refl (@I (nat -> nat -> Prop))). Qed.
Lemma lem4063965 (_47509 : type1605) (_47511 : type1605) (h1 : _47509 = _47511) : _47509 = _47511.
Proof. exact (h1). Qed.
Lemma lem4063966 (_47510 : nat) (_47512 : nat) (h1 : _47510 = _47512) : _47510 = _47512.
Proof. exact (h1). Qed.
Lemma lem4063967 (_47509 : type1605) (_47511 : type1605) (h1 : _47509 = _47511) : (@I (nat -> nat -> Prop) _47509) = (@I (nat -> nat -> Prop) _47511).
Proof. exact (MK_COMB (@lem4063964) (@lem4063965 _47509 _47511 h1)). Qed.
Lemma lem4063968 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) (h1 : _47509 = _47511) (h2 : _47510 = _47512) : (@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512).
Proof. exact (MK_COMB (@lem4063967 _47509 _47511 h1) (@lem4063966 _47510 _47512 h2)). Qed.
Lemma lem4063969 (_47510 : nat) (_47512 : nat) (_47509 : type1605) (_47511 : type1605) (h1 : _47509 = _47511) : term1864 _47509 _47510 _47511 _47512.
Proof. exact (fun h0 : _47510 = _47512 => @lem4063968 _47509 _47511 _47510 _47512 h1 h0). Qed.
Lemma lem4063971 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4063972 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : (term1864 _47509 _47510 _47511 _47512) = (term1865 _47509 _47510 _47511 _47512).
Proof. exact (@lem4063971 (_47510 = _47512) ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512))). Qed.
Lemma lem4063973 (_47510 : nat) (_47512 : nat) (_47509 : type1605) (_47511 : type1605) (h1 : _47509 = _47511) : term1865 _47509 _47510 _47511 _47512.
Proof. exact (EQ_MP (@lem4063972 _47509 _47510 _47511 _47512) (@lem4063969 _47510 _47512 _47509 _47511 h1)). Qed.
Lemma lem4063974 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : term1866 _47509 _47510 _47511 _47512.
Proof. exact (fun h0 : _47509 = _47511 => @lem4063973 _47510 _47512 _47509 _47511 h0). Qed.
Lemma lem4063976 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4063977 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : (term1866 _47509 _47510 _47511 _47512) = (term1867 _47509 _47510 _47511 _47512).
Proof. exact (@lem4063976 (_47509 = _47511) (term1865 _47509 _47510 _47511 _47512)). Qed.
Lemma lem4063978 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : term1867 _47509 _47510 _47511 _47512.
Proof. exact (EQ_MP (@lem4063977 _47509 _47510 _47511 _47512) (@lem4063974 _47509 _47510 _47511 _47512)). Qed.
Lemma lem4064167 (x : type1605) : x = x.
Proof. exact (@lem21386 type1605 x). Qed.
Lemma lem4064168 : Peano.lt = Peano.lt.
Proof. exact (@lem4064167 Peano.lt). Qed.
Lemma lem4064169 : term1868.
Proof. exact (fun h0 : term1869 => @lem4064168). Qed.
Lemma lem4064171 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064172 : term1868 = (Peano.lt = Peano.lt).
Proof. exact (@lem4064171 (Peano.lt = Peano.lt)). Qed.
Lemma lem4064173 : Peano.lt = Peano.lt.
Proof. exact (EQ_MP (@lem4064172) (@lem4064169)). Qed.
Lemma lem4064175 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064176 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4064175 _102126 _102133 s P f t n h1). Qed.
Lemma lem4064178 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064179 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4064178 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4064180 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4064179 _102126 t) (@lem4064176 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064183 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4064184 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4064183 _102126 _102133 f t h1). Qed.
Lemma lem4064186 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4064187 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4064186 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4064188 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4064187 _102126 _102133 f t) (@lem4064184 _102126 _102133 f t h1)). Qed.
Lemma lem4064190 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064191 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1757 _102126 _102133 x'''' _46741 _46742) = (term1872 _102126 _102133 x'''' _46741 _46742).
Proof. exact (@lem4064190 (term1873 _102126 _102133 _46741 _46742) (term1633 _102126 _102133 x'''' _46741 _46742)). Qed.
Lemma lem4064193 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064194 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1875 _102126 _102133 _46741 _46742).
Proof. exact (@lem4064193 (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4064196 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064197 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1840 _102126 _46742) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742).
Proof. exact (@lem4064196 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742)). Qed.
Lemma lem4064198 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064199 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1876 _102126 _46742) = (term1877 _102126 _46742).
Proof. exact (MK_COMB (@lem4064198) (@lem4064197 _102126 _46742)). Qed.
Lemma lem4064200 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1870 _102126 _102133 _46741 _46742) = (term1870 _102126 _102133 _46741 _46742).
Proof. exact (eq_refl (term1870 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064201 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1875 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064199 _102126 _46742) (@lem4064200 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064202 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (TRANS (@lem4064194 _102126 _102133 _46741 _46742) (@lem4064201 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064203 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064204 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1879 _102126 _102133 _46741 _46742) = (term1880 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064203) (@lem4064202 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064205 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1633 _102126 _102133 x'''' _46741 _46742) = (term1633 _102126 _102133 x'''' _46741 _46742).
Proof. exact (eq_refl (term1633 _102126 _102133 x'''' _46741 _46742)). Qed.
Lemma lem4064206 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1872 _102126 _102133 x'''' _46741 _46742) = (term1881 _102126 _102133 x'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064204 _102126 _102133 _46741 _46742) (@lem4064205 _102126 _102133 x'''' _46741 _46742)). Qed.
Lemma lem4064207 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1757 _102126 _102133 x'''' _46741 _46742) = (term1881 _102126 _102133 x'''' _46741 _46742).
Proof. exact (TRANS (@lem4064191 _102126 _102133 x'''' _46741 _46742) (@lem4064206 _102126 _102133 x'''' _46741 _46742)). Qed.
Lemma lem4064209 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4064180 _102126 _102133 s P f t n h2) (@lem4064188 _102126 _102133 f t h1)). Qed.
Lemma lem4064211 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4064207 _102126 _102133 x'''' _46741 _46742) (@lem4058591 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4064212 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' _46741 _46742.
Proof. exact (@lem4064211 _102126 _102133 _46741 _46742 x'''' y'''' h1). Qed.
Lemma lem4064213 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' f t.
Proof. exact (@lem4064212 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4064216 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 x'''' f t.
Proof. exact (@lem4064213 _102126 _102133 f t x'''' y'''' h1 (@lem4064209 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4064217 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1775 _102126 _102133 x'''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 x'''' f t => @lem4064216 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4064219 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064220 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 x'''' f t) = (term1633 _102126 _102133 x'''' f t).
Proof. exact (@lem4064219 (term1633 _102126 _102133 x'''' f t)). Qed.
Lemma lem4064221 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 x'''' f t.
Proof. exact (EQ_MP (@lem4064220 _102126 _102133 x'''' f t) (@lem4064217 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064223 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064224 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4064223 _102126 _102133 s P f t n h1). Qed.
Lemma lem4064226 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064227 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4064226 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4064228 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4064227 _102126 t) (@lem4064224 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064231 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4064232 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4064231 _102126 _102133 f t h1). Qed.
Lemma lem4064234 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4064235 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4064234 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4064236 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4064235 _102126 _102133 f t) (@lem4064232 _102126 _102133 f t h1)). Qed.
Lemma lem4064238 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064239 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1757 _102126 _102133 y'''' _46741 _46742) = (term1872 _102126 _102133 y'''' _46741 _46742).
Proof. exact (@lem4064238 (term1873 _102126 _102133 _46741 _46742) (term1633 _102126 _102133 y'''' _46741 _46742)). Qed.
Lemma lem4064241 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064242 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1875 _102126 _102133 _46741 _46742).
Proof. exact (@lem4064241 (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4064244 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064245 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1840 _102126 _46742) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742).
Proof. exact (@lem4064244 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742)). Qed.
Lemma lem4064246 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064247 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1876 _102126 _46742) = (term1877 _102126 _46742).
Proof. exact (MK_COMB (@lem4064246) (@lem4064245 _102126 _46742)). Qed.
Lemma lem4064248 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1870 _102126 _102133 _46741 _46742) = (term1870 _102126 _102133 _46741 _46742).
Proof. exact (eq_refl (term1870 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064249 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1875 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064247 _102126 _46742) (@lem4064248 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064250 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (TRANS (@lem4064242 _102126 _102133 _46741 _46742) (@lem4064249 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064251 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064252 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1879 _102126 _102133 _46741 _46742) = (term1880 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064251) (@lem4064250 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064253 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1633 _102126 _102133 y'''' _46741 _46742) = (term1633 _102126 _102133 y'''' _46741 _46742).
Proof. exact (eq_refl (term1633 _102126 _102133 y'''' _46741 _46742)). Qed.
Lemma lem4064254 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1872 _102126 _102133 y'''' _46741 _46742) = (term1881 _102126 _102133 y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064252 _102126 _102133 _46741 _46742) (@lem4064253 _102126 _102133 y'''' _46741 _46742)). Qed.
Lemma lem4064255 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1757 _102126 _102133 y'''' _46741 _46742) = (term1881 _102126 _102133 y'''' _46741 _46742).
Proof. exact (TRANS (@lem4064239 _102126 _102133 y'''' _46741 _46742) (@lem4064254 _102126 _102133 y'''' _46741 _46742)). Qed.
Lemma lem4064257 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4064228 _102126 _102133 s P f t n h2) (@lem4064236 _102126 _102133 f t h1)). Qed.
Lemma lem4064259 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4064255 _102126 _102133 y'''' _46741 _46742) (@lem4058603 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4064260 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' _46741 _46742.
Proof. exact (@lem4064259 _102126 _102133 _46741 _46742 x'''' y'''' h1). Qed.
Lemma lem4064261 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' f t.
Proof. exact (@lem4064260 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4064264 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 y'''' f t.
Proof. exact (@lem4064261 _102126 _102133 f t x'''' y'''' h1 (@lem4064257 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4064265 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1775 _102126 _102133 y'''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 y'''' f t => @lem4064264 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4064267 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064268 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 y'''' f t) = (term1633 _102126 _102133 y'''' f t).
Proof. exact (@lem4064267 (term1633 _102126 _102133 y'''' f t)). Qed.
Lemma lem4064269 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 y'''' f t.
Proof. exact (EQ_MP (@lem4064268 _102126 _102133 y'''' f t) (@lem4064265 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064271 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064272 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4064271 _102126 _102133 s P f t n h1). Qed.
Lemma lem4064274 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064275 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4064274 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4064276 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4064275 _102126 t) (@lem4064272 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064279 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4064280 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4064279 _102126 _102133 f t h1). Qed.
Lemma lem4064282 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4064283 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4064282 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4064284 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4064283 _102126 _102133 f t) (@lem4064280 _102126 _102133 f t h1)). Qed.
Lemma lem4064286 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064287 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1756 _102126 _102133 x'''' y'''' _46741 _46742) = (term1882 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4064286 (term1873 _102126 _102133 _46741 _46742) (term1621 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064289 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064290 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1875 _102126 _102133 _46741 _46742).
Proof. exact (@lem4064289 (term1604 _102126 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4064292 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064293 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1840 _102126 _46742) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742).
Proof. exact (@lem4064292 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742)). Qed.
Lemma lem4064294 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064295 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1876 _102126 _46742) = (term1877 _102126 _46742).
Proof. exact (MK_COMB (@lem4064294) (@lem4064293 _102126 _46742)). Qed.
Lemma lem4064296 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1870 _102126 _102133 _46741 _46742) = (term1870 _102126 _102133 _46741 _46742).
Proof. exact (eq_refl (term1870 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064297 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1875 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064295 _102126 _46742) (@lem4064296 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064298 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1874 _102126 _102133 _46741 _46742) = (term1878 _102126 _102133 _46741 _46742).
Proof. exact (TRANS (@lem4064290 _102126 _102133 _46741 _46742) (@lem4064297 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064299 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064300 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1879 _102126 _102133 _46741 _46742) = (term1880 _102126 _102133 _46741 _46742).
Proof. exact (MK_COMB (@lem4064299) (@lem4064298 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064301 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1621 _102126 _102133 x'''' y'''' _46741 _46742) = (term1621 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (eq_refl (term1621 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064302 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1882 _102126 _102133 x'''' y'''' _46741 _46742) = (term1883 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064300 _102126 _102133 _46741 _46742) (@lem4064301 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064303 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1756 _102126 _102133 x'''' y'''' _46741 _46742) = (term1883 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (TRANS (@lem4064287 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064302 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064305 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4064276 _102126 _102133 s P f t n h2) (@lem4064284 _102126 _102133 f t h1)). Qed.
Lemma lem4064307 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4064303 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4058579 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4064308 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (@lem4064307 _102126 _102133 _46741 _46742 x'''' y'''' h1). Qed.
Lemma lem4064309 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4064308 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4064312 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1621 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4064309 _102126 _102133 f t x'''' y'''' h1 (@lem4064305 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4064313 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1779 _102126 _102133 x'''' y'''' f t.
Proof. exact (fun h0 : (term1617 _102126 _102133 x'''' f t) = (term1617 _102126 _102133 y'''' f t) => @lem4064312 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4064315 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4064316 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1779 _102126 _102133 x'''' y'''' f t) = (term1621 _102126 _102133 x'''' y'''' f t).
Proof. exact (@lem4064315 ((term1617 _102126 _102133 x'''' f t) = (term1617 _102126 _102133 y'''' f t))). Qed.
Lemma lem4064317 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1621 _102126 _102133 x'''' y'''' f t.
Proof. exact (EQ_MP (@lem4064316 _102126 _102133 x'''' y'''' f t) (@lem4064313 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064333 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064334 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1780 _102126 _102133 t f _46763 _46764) = (term1781 _102126 _102133 f t _46763 _46764).
Proof. exact (@lem4064333 (term1562 _102126 _102133 _46763 f _46764) (term1577 _102126 _46764 t) (_46763 = _46764)). Qed.
Lemma lem4064350 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4064351 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46763 _46764) = (term1783 _102126 _46763 _46764 t).
Proof. exact (@lem4064350 (_46763 = _46764) (term1577 _102126 _46764 t)). Qed.
Lemma lem4064359 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1564 _102126 _102133 _46763 f _46764) = (term1564 _102126 _102133 _46763 f _46764).
Proof. exact (eq_refl (term1564 _102126 _102133 _46763 f _46764)). Qed.
Lemma lem4064360 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46763 _46764) = (term1784 _102126 _102133 f _46763 _46764 t).
Proof. exact (MK_COMB (@lem4064359 _102126 _102133 _46763 f _46764) (@lem4064351 _102126 _46763 _46764 t)). Qed.
Lemma lem4064364 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064365 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) (t : _102126 -> Prop) : (term1784 _102126 _102133 f _46763 _46764 t) = (term1785 _102126 _102133 _46763 f _46764 t).
Proof. exact (@lem4064364 (_46763 = _46764) (term1562 _102126 _102133 _46763 f _46764) (term1577 _102126 _46764 t)). Qed.
Lemma lem4064385 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46763 _46764) = (term1785 _102126 _102133 _46763 f _46764 t).
Proof. exact (TRANS (@lem4064360 _102126 _102133 f _46763 _46764 t) (@lem4064365 _102126 _102133 _46763 f _46764 t)). Qed.
Lemma lem4064386 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) (t : _102126 -> Prop) : (term1780 _102126 _102133 t f _46763 _46764) = (term1785 _102126 _102133 _46763 f _46764 t).
Proof. exact (TRANS (@lem4064334 _102126 _102133 f t _46763 _46764) (@lem4064385 _102126 _102133 _46763 f _46764 t)). Qed.
Lemma lem4064387 {_102126 : Type'} (_46763 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46763 t) = (term1579 _102126 _46763 t).
Proof. exact (eq_refl (term1579 _102126 _46763 t)). Qed.
Lemma lem4064388 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46763 _46764) = (term1786 _102126 _102133 _46763 f _46764 t).
Proof. exact (MK_COMB (@lem4064387 _102126 _46763 t) (@lem4064386 _102126 _102133 _46763 f _46764 t)). Qed.
Lemma lem4064392 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064393 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46763 f _46764 t) = (term1787 _102126 _102133 _46763 f _46764 t).
Proof. exact (@lem4064392 (_46763 = _46764) (term1577 _102126 _46763 t) (term1788 _102126 _102133 _46763 f _46764 t)). Qed.
Lemma lem4064409 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064410 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1789 _102126 _102133 _46763 f _46764 t) = (term1790 _102126 _102133 f _46763 _46764 t).
Proof. exact (@lem4064409 (term1562 _102126 _102133 _46763 f _46764) (term1577 _102126 _46763 t) (term1577 _102126 _46764 t)). Qed.
Lemma lem4064428 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) : (term1791 _102126 _46763 _46764) = (term1791 _102126 _46763 _46764).
Proof. exact (eq_refl (term1791 _102126 _46763 _46764)). Qed.
Lemma lem4064429 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1787 _102126 _102133 _46763 f _46764 t) = (term1792 _102126 _102133 f _46763 _46764 t).
Proof. exact (MK_COMB (@lem4064428 _102126 _46763 _46764) (@lem4064410 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064440 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46763 f _46764 t) = (term1792 _102126 _102133 f _46763 _46764 t).
Proof. exact (TRANS (@lem4064393 _102126 _102133 _46763 f _46764 t) (@lem4064429 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064441 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46763 _46764) = (term1792 _102126 _102133 f _46763 _46764 t).
Proof. exact (TRANS (@lem4064388 _102126 _102133 _46763 f _46764 t) (@lem4064440 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064442 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4064443 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1793 _102126 _102133 t f _46763 _46764) = (term1794 _102126 _102133 f _46763 _46764 t).
Proof. exact (MK_COMB (@lem4064442) (@lem4064441 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064469 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4064470 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46763 _46764) = (term1783 _102126 _46763 _46764 t).
Proof. exact (@lem4064469 (_46763 = _46764) (term1577 _102126 _46764 t)). Qed.
Lemma lem4064478 {_102126 : Type'} (_46763 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46763 t) = (term1579 _102126 _46763 t).
Proof. exact (eq_refl (term1579 _102126 _46763 t)). Qed.
Lemma lem4064479 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46763 _46764) = (term1796 _102126 _46763 _46764 t).
Proof. exact (MK_COMB (@lem4064478 _102126 _46763 t) (@lem4064470 _102126 _46763 _46764 t)). Qed.
Lemma lem4064483 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064484 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1796 _102126 _46763 _46764 t) = (term1797 _102126 _46763 _46764 t).
Proof. exact (@lem4064483 (_46763 = _46764) (term1577 _102126 _46763 t) (term1577 _102126 _46764 t)). Qed.
Lemma lem4064502 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46763 _46764) = (term1797 _102126 _46763 _46764 t).
Proof. exact (TRANS (@lem4064479 _102126 _46763 _46764 t) (@lem4064484 _102126 _46763 _46764 t)). Qed.
Lemma lem4064503 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1564 _102126 _102133 _46763 f _46764) = (term1564 _102126 _102133 _46763 f _46764).
Proof. exact (eq_refl (term1564 _102126 _102133 _46763 f _46764)). Qed.
Lemma lem4064504 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46763 _46764) = (term1799 _102126 _102133 f _46763 _46764 t).
Proof. exact (MK_COMB (@lem4064503 _102126 _102133 _46763 f _46764) (@lem4064502 _102126 _46763 _46764 t)). Qed.
Lemma lem4064508 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064509 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1799 _102126 _102133 f _46763 _46764 t) = (term1792 _102126 _102133 f _46763 _46764 t).
Proof. exact (@lem4064508 (_46763 = _46764) (term1562 _102126 _102133 _46763 f _46764) (term1580 _102126 _46763 _46764 t)). Qed.
Lemma lem4064539 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46763 _46764) = (term1792 _102126 _102133 f _46763 _46764 t).
Proof. exact (TRANS (@lem4064504 _102126 _102133 f _46763 _46764 t) (@lem4064509 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064540 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : ((term1751 _102126 _102133 t f _46763 _46764) = (term1798 _102126 _102133 f t _46763 _46764)) = ((term1792 _102126 _102133 f _46763 _46764 t) = (term1792 _102126 _102133 f _46763 _46764 t)).
Proof. exact (MK_COMB (@lem4064443 _102126 _102133 f _46763 _46764 t) (@lem4064539 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064542 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4064543 (x : Prop) : (x = x) = True.
Proof. exact (@lem4064542 Prop x). Qed.
Lemma lem4064544 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46763 : _102126) (_46764 : _102126) (t : _102126 -> Prop) : ((term1792 _102126 _102133 f _46763 _46764 t) = (term1792 _102126 _102133 f _46763 _46764 t)) = True.
Proof. exact (@lem4064543 (term1792 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064545 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : ((term1751 _102126 _102133 t f _46763 _46764) = (term1798 _102126 _102133 f t _46763 _46764)) = True.
Proof. exact (TRANS (@lem4064540 _102126 _102133 f _46763 _46764 t) (@lem4064544 _102126 _102133 f _46763 _46764 t)). Qed.
Lemma lem4064546 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : True = ((term1751 _102126 _102133 t f _46763 _46764) = (term1798 _102126 _102133 f t _46763 _46764)).
Proof. exact (SYM (@lem4064545 _102126 _102133 f t _46763 _46764)). Qed.
Lemma lem4064547 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1751 _102126 _102133 t f _46763 _46764) = (term1798 _102126 _102133 f t _46763 _46764).
Proof. exact (EQ_MP (@lem4064546 _102126 _102133 f t _46763 _46764) (@lem0)). Qed.
Lemma lem4064548 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1798 _102126 _102133 f t _46763 _46764.
Proof. exact (EQ_MP (@lem4064547 _102126 _102133 f t _46763 _46764) (@lem4057767 _102126 _102133 _46763 _46764 s P f t n h1)). Qed.
Lemma lem4064550 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064551 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1798 _102126 _102133 f t _46763 _46764) = (term1800 _102126 _102133 t _46763 f _46764).
Proof. exact (@lem4064550 (term1795 _102126 t _46763 _46764) (term1562 _102126 _102133 _46763 f _46764)). Qed.
Lemma lem4064553 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064554 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1801 _102126 t _46763 _46764) = (term1802 _102126 t _46763 _46764).
Proof. exact (@lem4064553 (term1577 _102126 _46763 t) (term1782 _102126 t _46763 _46764)). Qed.
Lemma lem4064556 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064557 {_102126 : Type'} (_46763 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46763 t) = (term1575 _102126 _46763 t).
Proof. exact (@lem4064556 (term1575 _102126 _46763 t)). Qed.
Lemma lem4064558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064559 {_102126 : Type'} (_46763 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46763 t) = (term1805 _102126 _46763 t).
Proof. exact (MK_COMB (@lem4064558) (@lem4064557 _102126 _46763 t)). Qed.
Lemma lem4064561 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064562 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1806 _102126 t _46763 _46764) = (term1807 _102126 t _46763 _46764).
Proof. exact (@lem4064561 (term1577 _102126 _46764 t) (_46763 = _46764)). Qed.
Lemma lem4064564 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064565 {_102126 : Type'} (_46764 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46764 t) = (term1575 _102126 _46764 t).
Proof. exact (@lem4064564 (term1575 _102126 _46764 t)). Qed.
Lemma lem4064566 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064567 {_102126 : Type'} (_46764 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46764 t) = (term1805 _102126 _46764 t).
Proof. exact (MK_COMB (@lem4064566) (@lem4064565 _102126 _46764 t)). Qed.
Lemma lem4064568 {_102126 : Type'} (_46763 : _102126) (_46764 : _102126) : (term1567 _102126 _46763 _46764) = (term1567 _102126 _46763 _46764).
Proof. exact (eq_refl (term1567 _102126 _46763 _46764)). Qed.
Lemma lem4064569 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1807 _102126 t _46763 _46764) = (term1808 _102126 t _46763 _46764).
Proof. exact (MK_COMB (@lem4064567 _102126 _46764 t) (@lem4064568 _102126 _46763 _46764)). Qed.
Lemma lem4064570 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1806 _102126 t _46763 _46764) = (term1808 _102126 t _46763 _46764).
Proof. exact (TRANS (@lem4064562 _102126 t _46763 _46764) (@lem4064569 _102126 t _46763 _46764)). Qed.
Lemma lem4064571 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1802 _102126 t _46763 _46764) = (term1809 _102126 t _46763 _46764).
Proof. exact (MK_COMB (@lem4064559 _102126 _46763 t) (@lem4064570 _102126 t _46763 _46764)). Qed.
Lemma lem4064572 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1801 _102126 t _46763 _46764) = (term1809 _102126 t _46763 _46764).
Proof. exact (TRANS (@lem4064554 _102126 t _46763 _46764) (@lem4064571 _102126 t _46763 _46764)). Qed.
Lemma lem4064573 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064574 {_102126 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (_46764 : _102126) : (term1810 _102126 t _46763 _46764) = (term1811 _102126 t _46763 _46764).
Proof. exact (MK_COMB (@lem4064573) (@lem4064572 _102126 t _46763 _46764)). Qed.
Lemma lem4064575 {_102126 _102133 : Type'} (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1562 _102126 _102133 _46763 f _46764) = (term1562 _102126 _102133 _46763 f _46764).
Proof. exact (eq_refl (term1562 _102126 _102133 _46763 f _46764)). Qed.
Lemma lem4064576 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1800 _102126 _102133 t _46763 f _46764) = (term1812 _102126 _102133 t _46763 f _46764).
Proof. exact (MK_COMB (@lem4064574 _102126 t _46763 _46764) (@lem4064575 _102126 _102133 _46763 f _46764)). Qed.
Lemma lem4064577 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46763 : _102126) (f : _102126 -> _102133) (_46764 : _102126) : (term1798 _102126 _102133 f t _46763 _46764) = (term1812 _102126 _102133 t _46763 f _46764).
Proof. exact (TRANS (@lem4064551 _102126 _102133 t _46763 f _46764) (@lem4064576 _102126 _102133 t _46763 f _46764)). Qed.
Lemma lem4064579 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1813 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4064269 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4064317 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064580 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1814 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4064221 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4064579 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064582 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1812 _102126 _102133 t _46763 f _46764.
Proof. exact (EQ_MP (@lem4064577 _102126 _102133 t _46763 f _46764) (@lem4064548 _102126 _102133 _46763 _46764 s P f t n h1)). Qed.
Lemma lem4064583 {_102126 _102133 : Type'} (_46763 : _102126) (_46764 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1812 _102126 _102133 t _46763 f _46764.
Proof. exact (@lem4064582 _102126 _102133 _46763 _46764 s P f t n h1). Qed.
Lemma lem4064584 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1815 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4064583 _102126 _102133 (term1617 _102126 _102133 x'''' f t) (term1617 _102126 _102133 y'''' f t) s P f t n h1). Qed.
Lemma lem4064587 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1816 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4064584 _102126 _102133 x'''' y'''' s P f t n h3 (@lem4064580 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064588 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1817 _102126 _102133 x'''' y'''' f t.
Proof. exact (fun h0 : (term1624 _102126 _102133 x'''' f t) = (term1624 _102126 _102133 y'''' f t) => @lem4064587 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4064590 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4064591 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1817 _102126 _102133 x'''' y'''' f t) = (term1816 _102126 _102133 x'''' y'''' f t).
Proof. exact (@lem4064590 ((term1624 _102126 _102133 x'''' f t) = (term1624 _102126 _102133 y'''' f t))). Qed.
Lemma lem4064592 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1816 _102126 _102133 x'''' y'''' f t.
Proof. exact (EQ_MP (@lem4064591 _102126 _102133 x'''' y'''' f t) (@lem4064588 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064594 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064595 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4064594 _102126 _102133 s P f t n h1). Qed.
Lemma lem4064597 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064598 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4064597 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4064599 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4064598 _102126 t) (@lem4064595 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4064617 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4064618 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1873 _102126 _102133 _46741 _46742) = (term1884 _102126 _102133 _46741 _46742).
Proof. exact (@lem4064617 ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742)) (term1604 _102126 _46742)). Qed.
Lemma lem4064626 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1819 _102126 _102133 x'''' y'''' _46741 _46742) = (term1819 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (eq_refl (term1819 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064627 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1758 _102126 _102133 x'''' y'''' _46741 _46742) = (term1885 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064626 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064618 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064638 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4064639 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1886 _102126 _102133 x'''' y'''' _46741 _46742) = (term1887 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064638) (@lem4064627 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064643 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064644 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46741 _46742) = (term1885 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4064643 ((term1624 _102126 _102133 x'''' _46741 _46742) = (term1624 _102126 _102133 y'''' _46741 _46742)) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742)) (term1604 _102126 _46742)). Qed.
Lemma lem4064664 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : ((term1758 _102126 _102133 x'''' y'''' _46741 _46742) = (term1888 _102126 _102133 x'''' y'''' _46741 _46742)) = ((term1885 _102126 _102133 x'''' y'''' _46741 _46742) = (term1885 _102126 _102133 x'''' y'''' _46741 _46742)).
Proof. exact (MK_COMB (@lem4064639 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064644 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064666 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4064667 (x : Prop) : (x = x) = True.
Proof. exact (@lem4064666 Prop x). Qed.
Lemma lem4064668 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : ((term1885 _102126 _102133 x'''' y'''' _46741 _46742) = (term1885 _102126 _102133 x'''' y'''' _46741 _46742)) = True.
Proof. exact (@lem4064667 (term1885 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064669 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : ((term1758 _102126 _102133 x'''' y'''' _46741 _46742) = (term1888 _102126 _102133 x'''' y'''' _46741 _46742)) = True.
Proof. exact (TRANS (@lem4064664 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064668 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064670 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : True = ((term1758 _102126 _102133 x'''' y'''' _46741 _46742) = (term1888 _102126 _102133 x'''' y'''' _46741 _46742)).
Proof. exact (SYM (@lem4064669 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064671 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1758 _102126 _102133 x'''' y'''' _46741 _46742) = (term1888 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (EQ_MP (@lem4064670 _102126 _102133 x'''' y'''' _46741 _46742) (@lem0)). Qed.
Lemma lem4064672 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1888 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4064671 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4058615 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4064674 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064675 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46741 _46742) = (term1889 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4064674 (term1732 _102126 _102133 x'''' y'''' _46741 _46742) ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4064677 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064678 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1849 _102126 _102133 x'''' y'''' _46741 _46742) = (term1850 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (@lem4064677 ((term1624 _102126 _102133 x'''' _46741 _46742) = (term1624 _102126 _102133 y'''' _46741 _46742)) (term1604 _102126 _46742)). Qed.
Lemma lem4064680 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064681 {_102126 : Type'} (_46742 : _102126 -> Prop) : (term1840 _102126 _46742) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742).
Proof. exact (@lem4064680 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46742)). Qed.
Lemma lem4064682 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1828 _102126 _102133 x'''' y'''' _46741 _46742) = (term1828 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (eq_refl (term1828 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064683 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1850 _102126 _102133 x'''' y'''' _46741 _46742) = (term1851 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064682 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064681 _102126 _46742)). Qed.
Lemma lem4064684 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1849 _102126 _102133 x'''' y'''' _46741 _46742) = (term1851 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (TRANS (@lem4064678 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064683 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064685 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064686 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1852 _102126 _102133 x'''' y'''' _46741 _46742) = (term1853 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064685) (@lem4064684 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064687 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742)) = ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742)).
Proof. exact (eq_refl ((term1535 _102126 _102133 _46741 _46742) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46742))). Qed.
Lemma lem4064688 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1889 _102126 _102133 x'''' y'''' _46741 _46742) = (term1890 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (MK_COMB (@lem4064686 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064687 _102126 _102133 _46741 _46742)). Qed.
Lemma lem4064689 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46741 _46742) = (term1890 _102126 _102133 x'''' y'''' _46741 _46742).
Proof. exact (TRANS (@lem4064675 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064688 _102126 _102133 x'''' y'''' _46741 _46742)). Qed.
Lemma lem4064691 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1851 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4064592 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4064599 _102126 _102133 s P f t n h3)). Qed.
Lemma lem4064693 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (EQ_MP (@lem4064689 _102126 _102133 x'''' y'''' _46741 _46742) (@lem4064672 _102126 _102133 _46741 _46742 x'''' y'''' h1)). Qed.
Lemma lem4064694 {_102126 _102133 : Type'} (_46741 : _102126 -> _102133) (_46742 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' _46741 _46742.
Proof. exact (@lem4064693 _102126 _102133 _46741 _46742 x'''' y'''' h1). Qed.
Lemma lem4064695 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4064694 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4064698 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (@lem4064695 _102126 _102133 f t x'''' y'''' h1 (@lem4064691 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064699 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1891 _102126 _102133 f t.
Proof. exact (fun h0 : term1870 _102126 _102133 f t => @lem4064698 _102126 _102133 x'''' y'''' s P f t n h1 h0 h2). Qed.
Lemma lem4064701 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064702 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1891 _102126 _102133 f t) = ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)).
Proof. exact (@lem4064701 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4064703 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (EQ_MP (@lem4064702 _102126 _102133 f t) (@lem4064699 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4064721 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4064722 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1865 _47509 _47510 _47511 _47512) = (term1892 _47509 _47511 _47510 _47512).
Proof. exact (@lem4064721 ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512)) (term1893 _47510 _47512)). Qed.
Lemma lem4064732 (_47509 : type1605) (_47511 : type1605) : (term1894 _47509 _47511) = (term1894 _47509 _47511).
Proof. exact (eq_refl (term1894 _47509 _47511)). Qed.
Lemma lem4064733 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1867 _47509 _47510 _47511 _47512) = (term1895 _47509 _47511 _47510 _47512).
Proof. exact (MK_COMB (@lem4064732 _47509 _47511) (@lem4064722 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064737 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064738 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1895 _47509 _47511 _47510 _47512) = (term1896 _47509 _47511 _47510 _47512).
Proof. exact (@lem4064737 ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512)) (term1897 _47509 _47511) (term1893 _47510 _47512)). Qed.
Lemma lem4064760 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1867 _47509 _47510 _47511 _47512) = (term1896 _47509 _47511 _47510 _47512).
Proof. exact (TRANS (@lem4064733 _47509 _47511 _47510 _47512) (@lem4064738 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064761 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4064762 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1898 _47509 _47510 _47511 _47512) = (term1899 _47509 _47511 _47510 _47512).
Proof. exact (MK_COMB (@lem4064761) (@lem4064760 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064784 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1896 _47509 _47511 _47510 _47512) = (term1896 _47509 _47511 _47510 _47512).
Proof. exact (eq_refl (term1896 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064785 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : ((term1867 _47509 _47510 _47511 _47512) = (term1896 _47509 _47511 _47510 _47512)) = ((term1896 _47509 _47511 _47510 _47512) = (term1896 _47509 _47511 _47510 _47512)).
Proof. exact (MK_COMB (@lem4064762 _47509 _47511 _47510 _47512) (@lem4064784 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064787 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4064788 (x : Prop) : (x = x) = True.
Proof. exact (@lem4064787 Prop x). Qed.
Lemma lem4064789 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : ((term1896 _47509 _47511 _47510 _47512) = (term1896 _47509 _47511 _47510 _47512)) = True.
Proof. exact (@lem4064788 (term1896 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064790 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : ((term1867 _47509 _47510 _47511 _47512) = (term1896 _47509 _47511 _47510 _47512)) = True.
Proof. exact (TRANS (@lem4064785 _47509 _47511 _47510 _47512) (@lem4064789 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064791 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : True = ((term1867 _47509 _47510 _47511 _47512) = (term1896 _47509 _47511 _47510 _47512)).
Proof. exact (SYM (@lem4064790 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064792 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1867 _47509 _47510 _47511 _47512) = (term1896 _47509 _47511 _47510 _47512).
Proof. exact (EQ_MP (@lem4064791 _47509 _47511 _47510 _47512) (@lem0)). Qed.
Lemma lem4064793 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : term1896 _47509 _47511 _47510 _47512.
Proof. exact (EQ_MP (@lem4064792 _47509 _47511 _47510 _47512) (@lem4063978 _47509 _47510 _47511 _47512)). Qed.
Lemma lem4064795 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064796 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : (term1896 _47509 _47511 _47510 _47512) = (term1900 _47509 _47510 _47511 _47512).
Proof. exact (@lem4064795 (term1901 _47509 _47511 _47510 _47512) ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512))). Qed.
Lemma lem4064798 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064799 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1902 _47509 _47511 _47510 _47512) = (term1903 _47509 _47511 _47510 _47512).
Proof. exact (@lem4064798 (term1897 _47509 _47511) (term1893 _47510 _47512)). Qed.
Lemma lem4064801 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064802 (_47509 : type1605) (_47511 : type1605) : (term1904 _47509 _47511) = (_47509 = _47511).
Proof. exact (@lem4064801 (_47509 = _47511)). Qed.
Lemma lem4064803 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064804 (_47509 : type1605) (_47511 : type1605) : (term1905 _47509 _47511) = (term1906 _47509 _47511).
Proof. exact (MK_COMB (@lem4064803) (@lem4064802 _47509 _47511)). Qed.
Lemma lem4064806 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064807 (_47510 : nat) (_47512 : nat) : (term1907 _47510 _47512) = (_47510 = _47512).
Proof. exact (@lem4064806 (_47510 = _47512)). Qed.
Lemma lem4064808 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1903 _47509 _47511 _47510 _47512) = (term1908 _47509 _47511 _47510 _47512).
Proof. exact (MK_COMB (@lem4064804 _47509 _47511) (@lem4064807 _47510 _47512)). Qed.
Lemma lem4064809 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1902 _47509 _47511 _47510 _47512) = (term1908 _47509 _47511 _47510 _47512).
Proof. exact (TRANS (@lem4064799 _47509 _47511 _47510 _47512) (@lem4064808 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064810 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064811 (_47509 : type1605) (_47511 : type1605) (_47510 : nat) (_47512 : nat) : (term1909 _47509 _47511 _47510 _47512) = (term1910 _47509 _47511 _47510 _47512).
Proof. exact (MK_COMB (@lem4064810) (@lem4064809 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064812 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512)) = ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512)).
Proof. exact (eq_refl ((@I (nat -> nat -> Prop) _47509 _47510) = (@I (nat -> nat -> Prop) _47511 _47512))). Qed.
Lemma lem4064813 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : (term1900 _47509 _47510 _47511 _47512) = (term1911 _47509 _47510 _47511 _47512).
Proof. exact (MK_COMB (@lem4064811 _47509 _47511 _47510 _47512) (@lem4064812 _47509 _47510 _47511 _47512)). Qed.
Lemma lem4064814 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : (term1896 _47509 _47511 _47510 _47512) = (term1911 _47509 _47510 _47511 _47512).
Proof. exact (TRANS (@lem4064796 _47509 _47510 _47511 _47512) (@lem4064813 _47509 _47510 _47511 _47512)). Qed.
Lemma lem4064816 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1912 _102126 _102133 f t.
Proof. exact (conj (@lem4064173) (@lem4064703 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4064818 (_47509 : type1605) (_47510 : nat) (_47511 : type1605) (_47512 : nat) : term1911 _47509 _47510 _47511 _47512.
Proof. exact (EQ_MP (@lem4064814 _47509 _47510 _47511 _47512) (@lem4064793 _47509 _47511 _47510 _47512)). Qed.
Lemma lem4064819 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : term1913 _102126 _102133 f t.
Proof. exact (@lem4064818 Peano.lt (term1535 _102126 _102133 f t) Peano.lt (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)). Qed.
Lemma lem4064822 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1539 _102126 _102133 f t) = (term1530 _102126 t).
Proof. exact (@lem4064819 _102126 _102133 f t (@lem4064816 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4064823 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1914 _102126 _102133 f t.
Proof. exact (fun h0 : term1915 _102126 _102133 f t => @lem4064822 _102126 _102133 x'''' y'''' s P f t n h1 h2). Qed.
Lemma lem4064825 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064826 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1914 _102126 _102133 f t) = ((term1539 _102126 _102133 f t) = (term1530 _102126 t)).
Proof. exact (@lem4064825 ((term1539 _102126 _102133 f t) = (term1530 _102126 t))). Qed.
Lemma lem4064827 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1539 _102126 _102133 f t) = (term1530 _102126 t).
Proof. exact (EQ_MP (@lem4064826 _102126 _102133 f t) (@lem4064823 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4064829 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4064830 (n : nat) : n = n.
Proof. exact (@lem4064829 n). Qed.
Lemma lem4064831 (n : nat) : term1916 n.
Proof. exact (fun h0 : term1917 n => @lem4064830 n). Qed.
Lemma lem4064833 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064834 (n : nat) : (term1916 n) = (n = n).
Proof. exact (@lem4064833 (n = n)). Qed.
Lemma lem4064835 (n : nat) : n = n.
Proof. exact (EQ_MP (@lem4064834 n) (@lem4064831 n)). Qed.
Lemma lem4064837 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1541 _102126 _102133 f t n.
Proof. exact (proj1 (@lem4049400 _102126 _102133 f t n h1)). Qed.
Lemma lem4064838 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1918 _102126 _102133 f t n.
Proof. exact (fun h0 : term1543 _102126 _102133 f t n => @lem4064837 _102126 _102133 f t n h1). Qed.
Lemma lem4064840 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4064841 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1918 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (@lem4064840 (term1541 _102126 _102133 f t n)). Qed.
Lemma lem4064842 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1541 _102126 _102133 f t n.
Proof. exact (EQ_MP (@lem4064841 _102126 _102133 f t n) (@lem4064838 _102126 _102133 f t n h1)). Qed.
Lemma lem4064860 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064861 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1861 _47291 _47292 _47289 _47290) = (term1919 _47291 _47292 _47289 _47290).
Proof. exact (@lem4064860 (@I (nat -> Prop) _47291 _47292) (term1893 _47290 _47292) (term1920 _47289 _47290)). Qed.
Lemma lem4064879 (_47289 : nat -> Prop) (_47291 : nat -> Prop) : (term1921 _47289 _47291) = (term1921 _47289 _47291).
Proof. exact (eq_refl (term1921 _47289 _47291)). Qed.
Lemma lem4064880 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1863 _47291 _47292 _47289 _47290) = (term1922 _47291 _47292 _47289 _47290).
Proof. exact (MK_COMB (@lem4064879 _47289 _47291) (@lem4064861 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064884 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4064885 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1922 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290).
Proof. exact (@lem4064884 (@I (nat -> Prop) _47291 _47292) (term1924 _47289 _47291) (term1925 _47292 _47289 _47290)). Qed.
Lemma lem4064915 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1863 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290).
Proof. exact (TRANS (@lem4064880 _47291 _47292 _47289 _47290) (@lem4064885 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4064917 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1926 _47291 _47292 _47289 _47290) = (term1927 _47291 _47292 _47289 _47290).
Proof. exact (MK_COMB (@lem4064916) (@lem4064915 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064947 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1923 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290).
Proof. exact (eq_refl (term1923 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064948 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : ((term1863 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290)) = ((term1923 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290)).
Proof. exact (MK_COMB (@lem4064917 _47291 _47292 _47289 _47290) (@lem4064947 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064950 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4064951 (x : Prop) : (x = x) = True.
Proof. exact (@lem4064950 Prop x). Qed.
Lemma lem4064952 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : ((term1923 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290)) = True.
Proof. exact (@lem4064951 (term1923 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064953 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : ((term1863 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290)) = True.
Proof. exact (TRANS (@lem4064948 _47291 _47292 _47289 _47290) (@lem4064952 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064954 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : True = ((term1863 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290)).
Proof. exact (SYM (@lem4064953 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064955 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1863 _47291 _47292 _47289 _47290) = (term1923 _47291 _47292 _47289 _47290).
Proof. exact (EQ_MP (@lem4064954 _47291 _47292 _47289 _47290) (@lem0)). Qed.
Lemma lem4064956 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : term1923 _47291 _47292 _47289 _47290.
Proof. exact (EQ_MP (@lem4064955 _47291 _47292 _47289 _47290) (@lem4063145 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064958 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4064959 (_47289 : nat -> Prop) (_47290 : nat) (_47291 : nat -> Prop) (_47292 : nat) : (term1923 _47291 _47292 _47289 _47290) = (term1928 _47289 _47290 _47291 _47292).
Proof. exact (@lem4064958 (term1929 _47291 _47292 _47289 _47290) (@I (nat -> Prop) _47291 _47292)). Qed.
Lemma lem4064961 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064962 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1930 _47291 _47292 _47289 _47290) = (term1931 _47291 _47292 _47289 _47290).
Proof. exact (@lem4064961 (term1924 _47289 _47291) (term1925 _47292 _47289 _47290)). Qed.
Lemma lem4064964 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064965 (_47289 : nat -> Prop) (_47291 : nat -> Prop) : (term1932 _47289 _47291) = (_47289 = _47291).
Proof. exact (@lem4064964 (_47289 = _47291)). Qed.
Lemma lem4064966 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064967 (_47289 : nat -> Prop) (_47291 : nat -> Prop) : (term1933 _47289 _47291) = (term1934 _47289 _47291).
Proof. exact (MK_COMB (@lem4064966) (@lem4064965 _47289 _47291)). Qed.
Lemma lem4064969 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4064970 (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1935 _47292 _47289 _47290) = (term1936 _47292 _47289 _47290).
Proof. exact (@lem4064969 (term1893 _47290 _47292) (term1920 _47289 _47290)). Qed.
Lemma lem4064972 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064973 (_47290 : nat) (_47292 : nat) : (term1907 _47290 _47292) = (_47290 = _47292).
Proof. exact (@lem4064972 (_47290 = _47292)). Qed.
Lemma lem4064974 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4064975 (_47290 : nat) (_47292 : nat) : (term1937 _47290 _47292) = (term1938 _47290 _47292).
Proof. exact (MK_COMB (@lem4064974) (@lem4064973 _47290 _47292)). Qed.
Lemma lem4064977 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4064978 (_47289 : nat -> Prop) (_47290 : nat) : (term1939 _47289 _47290) = (@I (nat -> Prop) _47289 _47290).
Proof. exact (@lem4064977 (@I (nat -> Prop) _47289 _47290)). Qed.
Lemma lem4064979 (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1936 _47292 _47289 _47290) = (term1940 _47292 _47289 _47290).
Proof. exact (MK_COMB (@lem4064975 _47290 _47292) (@lem4064978 _47289 _47290)). Qed.
Lemma lem4064980 (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1935 _47292 _47289 _47290) = (term1940 _47292 _47289 _47290).
Proof. exact (TRANS (@lem4064970 _47292 _47289 _47290) (@lem4064979 _47292 _47289 _47290)). Qed.
Lemma lem4064981 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1931 _47291 _47292 _47289 _47290) = (term1941 _47291 _47292 _47289 _47290).
Proof. exact (MK_COMB (@lem4064967 _47289 _47291) (@lem4064980 _47292 _47289 _47290)). Qed.
Lemma lem4064982 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1930 _47291 _47292 _47289 _47290) = (term1941 _47291 _47292 _47289 _47290).
Proof. exact (TRANS (@lem4064962 _47291 _47292 _47289 _47290) (@lem4064981 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064983 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4064984 (_47291 : nat -> Prop) (_47292 : nat) (_47289 : nat -> Prop) (_47290 : nat) : (term1942 _47291 _47292 _47289 _47290) = (term1943 _47291 _47292 _47289 _47290).
Proof. exact (MK_COMB (@lem4064983) (@lem4064982 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064985 (_47291 : nat -> Prop) (_47292 : nat) : (@I (nat -> Prop) _47291 _47292) = (@I (nat -> Prop) _47291 _47292).
Proof. exact (eq_refl (@I (nat -> Prop) _47291 _47292)). Qed.
Lemma lem4064986 (_47289 : nat -> Prop) (_47290 : nat) (_47291 : nat -> Prop) (_47292 : nat) : (term1928 _47289 _47290 _47291 _47292) = (term1944 _47289 _47290 _47291 _47292).
Proof. exact (MK_COMB (@lem4064984 _47291 _47292 _47289 _47290) (@lem4064985 _47291 _47292)). Qed.
Lemma lem4064987 (_47289 : nat -> Prop) (_47290 : nat) (_47291 : nat -> Prop) (_47292 : nat) : (term1923 _47291 _47292 _47289 _47290) = (term1944 _47289 _47290 _47291 _47292).
Proof. exact (TRANS (@lem4064959 _47289 _47290 _47291 _47292) (@lem4064986 _47289 _47290 _47291 _47292)). Qed.
Lemma lem4064989 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1945 _102126 _102133 f t n.
Proof. exact (conj (@lem4064835 n) (@lem4064842 _102126 _102133 f t n h1)). Qed.
Lemma lem4064990 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : term1946 _102126 _102133 f t n.
Proof. exact (conj (@lem4064827 _102126 _102133 x'''' y'''' s P f t n h1 h2) (@lem4064989 _102126 _102133 f t n h3)). Qed.
Lemma lem4064992 (_47289 : nat -> Prop) (_47290 : nat) (_47291 : nat -> Prop) (_47292 : nat) : term1944 _47289 _47290 _47291 _47292.
Proof. exact (EQ_MP (@lem4064987 _47289 _47290 _47291 _47292) (@lem4064956 _47291 _47292 _47289 _47290)). Qed.
Lemma lem4064993 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term1947 _102126 _102133 f t n.
Proof. exact (@lem4064992 (term1539 _102126 _102133 f t) n (term1530 _102126 t) n). Qed.
Lemma lem4064996 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : term1532 _102126 t n.
Proof. exact (@lem4064993 _102126 _102133 f t n (@lem4064990 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4064997 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : term1948 _102126 t n.
Proof. exact (fun h0 : term1549 _102126 t n => @lem4064996 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4064999 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4065000 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1948 _102126 t n) = (term1532 _102126 t n).
Proof. exact (@lem4064999 (term1532 _102126 t n)). Qed.
Lemma lem4065001 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : term1532 _102126 t n.
Proof. exact (EQ_MP (@lem4065000 _102126 t n) (@lem4064997 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4065004 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4065006 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1549 _102126 t n) = (term1949 _102126 t n).
Proof. exact (@lem4065004 (term1532 _102126 t n)). Qed.
Lemma lem4065009 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1553 _102126 _102133 f t n) : term1949 _102126 t n.
Proof. exact (EQ_MP (@lem4065006 _102126 t n) (@lem4057735 _102126 _102133 f t n h1)). Qed.
Lemma lem4065012 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : False.
Proof. exact (@lem4065009 _102126 _102133 f t n h3 (@lem4065001 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4065013 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : term1835.
Proof. exact (fun h0 : ~ False => @lem4065012 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4065015 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4065016 : term1835 = False.
Proof. exact (@lem4065015 False). Qed.
Lemma lem4065017 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) (h3 : term1553 _102126 _102133 f t n) : False.
Proof. exact (EQ_MP (@lem4065016) (@lem4065013 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4065075 : (@I (nat -> Prop)) = (@I (nat -> Prop)).
Proof. exact (eq_refl (@I (nat -> Prop))). Qed.
Lemma lem4065076 (_47537 : nat -> Prop) (_47539 : nat -> Prop) (h1 : _47537 = _47539) : _47537 = _47539.
Proof. exact (h1). Qed.
Lemma lem4065077 (_47538 : nat) (_47540 : nat) (h1 : _47538 = _47540) : _47538 = _47540.
Proof. exact (h1). Qed.
Lemma lem4065078 (_47537 : nat -> Prop) (_47539 : nat -> Prop) (h1 : _47537 = _47539) : (@I (nat -> Prop) _47537) = (@I (nat -> Prop) _47539).
Proof. exact (MK_COMB (@lem4065075) (@lem4065076 _47537 _47539 h1)). Qed.
Lemma lem4065079 (_47537 : nat -> Prop) (_47539 : nat -> Prop) (_47538 : nat) (_47540 : nat) (h1 : _47537 = _47539) (h2 : _47538 = _47540) : (@I (nat -> Prop) _47537 _47538) = (@I (nat -> Prop) _47539 _47540).
Proof. exact (MK_COMB (@lem4065078 _47537 _47539 h1) (@lem4065077 _47538 _47540 h2)). Qed.
Lemma lem4065081 (b : Prop) (a : Prop) : term1856 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem4065082 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : term1857 _47539 _47540 _47537 _47538.
Proof. exact (@lem4065081 (@I (nat -> Prop) _47539 _47540) (@I (nat -> Prop) _47537 _47538)). Qed.
Lemma lem4065083 (_47537 : nat -> Prop) (_47539 : nat -> Prop) (_47538 : nat) (_47540 : nat) (h1 : _47537 = _47539) (h2 : _47538 = _47540) : term1858 _47539 _47540 _47537 _47538.
Proof. exact (@lem4065082 _47539 _47540 _47537 _47538 (@lem4065079 _47537 _47539 _47538 _47540 h1 h2)). Qed.
Lemma lem4065084 (_47540 : nat) (_47538 : nat) (_47537 : nat -> Prop) (_47539 : nat -> Prop) (h1 : _47537 = _47539) : term1859 _47539 _47540 _47537 _47538.
Proof. exact (fun h0 : _47538 = _47540 => @lem4065083 _47537 _47539 _47538 _47540 h1 h0). Qed.
Lemma lem4065086 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4065087 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1859 _47539 _47540 _47537 _47538) = (term1861 _47539 _47540 _47537 _47538).
Proof. exact (@lem4065086 (_47538 = _47540) (term1858 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4065088 (_47540 : nat) (_47538 : nat) (_47537 : nat -> Prop) (_47539 : nat -> Prop) (h1 : _47537 = _47539) : term1861 _47539 _47540 _47537 _47538.
Proof. exact (EQ_MP (@lem4065087 _47539 _47540 _47537 _47538) (@lem4065084 _47540 _47538 _47537 _47539 h1)). Qed.
Lemma lem4065089 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : term1862 _47539 _47540 _47537 _47538.
Proof. exact (fun h0 : _47537 = _47539 => @lem4065088 _47540 _47538 _47537 _47539 h0). Qed.
Lemma lem4065091 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4065092 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1862 _47539 _47540 _47537 _47538) = (term1863 _47539 _47540 _47537 _47538).
Proof. exact (@lem4065091 (_47537 = _47539) (term1861 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4065093 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : term1863 _47539 _47540 _47537 _47538.
Proof. exact (EQ_MP (@lem4065092 _47539 _47540 _47537 _47538) (@lem4065089 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4065912 : (@I (nat -> nat -> Prop)) = (@I (nat -> nat -> Prop)).
Proof. exact (eq_refl (@I (nat -> nat -> Prop))). Qed.
Lemma lem4065913 (_47757 : type1605) (_47759 : type1605) (h1 : _47757 = _47759) : _47757 = _47759.
Proof. exact (h1). Qed.
Lemma lem4065914 (_47758 : nat) (_47760 : nat) (h1 : _47758 = _47760) : _47758 = _47760.
Proof. exact (h1). Qed.
Lemma lem4065915 (_47757 : type1605) (_47759 : type1605) (h1 : _47757 = _47759) : (@I (nat -> nat -> Prop) _47757) = (@I (nat -> nat -> Prop) _47759).
Proof. exact (MK_COMB (@lem4065912) (@lem4065913 _47757 _47759 h1)). Qed.
Lemma lem4065916 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) (h1 : _47757 = _47759) (h2 : _47758 = _47760) : (@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760).
Proof. exact (MK_COMB (@lem4065915 _47757 _47759 h1) (@lem4065914 _47758 _47760 h2)). Qed.
Lemma lem4065917 (_47758 : nat) (_47760 : nat) (_47757 : type1605) (_47759 : type1605) (h1 : _47757 = _47759) : term1864 _47757 _47758 _47759 _47760.
Proof. exact (fun h0 : _47758 = _47760 => @lem4065916 _47757 _47759 _47758 _47760 h1 h0). Qed.
Lemma lem4065919 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4065920 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : (term1864 _47757 _47758 _47759 _47760) = (term1865 _47757 _47758 _47759 _47760).
Proof. exact (@lem4065919 (_47758 = _47760) ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760))). Qed.
Lemma lem4065921 (_47758 : nat) (_47760 : nat) (_47757 : type1605) (_47759 : type1605) (h1 : _47757 = _47759) : term1865 _47757 _47758 _47759 _47760.
Proof. exact (EQ_MP (@lem4065920 _47757 _47758 _47759 _47760) (@lem4065917 _47758 _47760 _47757 _47759 h1)). Qed.
Lemma lem4065922 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : term1866 _47757 _47758 _47759 _47760.
Proof. exact (fun h0 : _47757 = _47759 => @lem4065921 _47758 _47760 _47757 _47759 h0). Qed.
Lemma lem4065924 (a : Prop) (b : Prop) : (a -> b) = (term1860 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4065925 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : (term1866 _47757 _47758 _47759 _47760) = (term1867 _47757 _47758 _47759 _47760).
Proof. exact (@lem4065924 (_47757 = _47759) (term1865 _47757 _47758 _47759 _47760)). Qed.
Lemma lem4065926 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : term1867 _47757 _47758 _47759 _47760.
Proof. exact (EQ_MP (@lem4065925 _47757 _47758 _47759 _47760) (@lem4065922 _47757 _47758 _47759 _47760)). Qed.
Lemma lem4065987 (x : nat -> Prop) (y : nat -> Prop) (z : nat -> Prop) : term1950 x y z.
Proof. exact (@lem21385 (nat -> Prop) x y z). Qed.
Lemma lem4066115 (x : type1605) : x = x.
Proof. exact (@lem21386 type1605 x). Qed.
Lemma lem4066116 : Peano.lt = Peano.lt.
Proof. exact (@lem4066115 Peano.lt). Qed.
Lemma lem4066117 : term1868.
Proof. exact (fun h0 : term1869 => @lem4066116). Qed.
Lemma lem4066119 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066120 : term1868 = (Peano.lt = Peano.lt).
Proof. exact (@lem4066119 (Peano.lt = Peano.lt)). Qed.
Lemma lem4066121 : Peano.lt = Peano.lt.
Proof. exact (EQ_MP (@lem4066120) (@lem4066117)). Qed.
Lemma lem4066123 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066124 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4066123 _102126 _102133 s P f t n h1). Qed.
Lemma lem4066126 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066127 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4066126 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4066128 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4066127 _102126 t) (@lem4066124 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066131 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4066132 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4066131 _102126 _102133 f t h1). Qed.
Lemma lem4066134 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4066135 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4066134 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4066136 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4066135 _102126 _102133 f t) (@lem4066132 _102126 _102133 f t h1)). Qed.
Lemma lem4066138 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066139 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1757 _102126 _102133 x'''' _46773 _46774) = (term1872 _102126 _102133 x'''' _46773 _46774).
Proof. exact (@lem4066138 (term1873 _102126 _102133 _46773 _46774) (term1633 _102126 _102133 x'''' _46773 _46774)). Qed.
Lemma lem4066141 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066142 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1875 _102126 _102133 _46773 _46774).
Proof. exact (@lem4066141 (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4066144 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066145 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1840 _102126 _46774) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774).
Proof. exact (@lem4066144 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774)). Qed.
Lemma lem4066146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066147 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1876 _102126 _46774) = (term1877 _102126 _46774).
Proof. exact (MK_COMB (@lem4066146) (@lem4066145 _102126 _46774)). Qed.
Lemma lem4066148 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1870 _102126 _102133 _46773 _46774) = (term1870 _102126 _102133 _46773 _46774).
Proof. exact (eq_refl (term1870 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066149 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1875 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066147 _102126 _46774) (@lem4066148 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066150 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (TRANS (@lem4066142 _102126 _102133 _46773 _46774) (@lem4066149 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066151 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066152 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1879 _102126 _102133 _46773 _46774) = (term1880 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066151) (@lem4066150 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066153 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1633 _102126 _102133 x'''' _46773 _46774) = (term1633 _102126 _102133 x'''' _46773 _46774).
Proof. exact (eq_refl (term1633 _102126 _102133 x'''' _46773 _46774)). Qed.
Lemma lem4066154 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1872 _102126 _102133 x'''' _46773 _46774) = (term1881 _102126 _102133 x'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066152 _102126 _102133 _46773 _46774) (@lem4066153 _102126 _102133 x'''' _46773 _46774)). Qed.
Lemma lem4066155 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1757 _102126 _102133 x'''' _46773 _46774) = (term1881 _102126 _102133 x'''' _46773 _46774).
Proof. exact (TRANS (@lem4066139 _102126 _102133 x'''' _46773 _46774) (@lem4066154 _102126 _102133 x'''' _46773 _46774)). Qed.
Lemma lem4066157 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4066128 _102126 _102133 s P f t n h2) (@lem4066136 _102126 _102133 f t h1)). Qed.
Lemma lem4066159 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4066155 _102126 _102133 x'''' _46773 _46774) (@lem4059673 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4066160 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' _46773 _46774.
Proof. exact (@lem4066159 _102126 _102133 _46773 _46774 x'''' y'''' h1). Qed.
Lemma lem4066161 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 x'''' f t.
Proof. exact (@lem4066160 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4066164 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 x'''' f t.
Proof. exact (@lem4066161 _102126 _102133 f t x'''' y'''' h1 (@lem4066157 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4066165 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1775 _102126 _102133 x'''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 x'''' f t => @lem4066164 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4066167 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066168 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 x'''' f t) = (term1633 _102126 _102133 x'''' f t).
Proof. exact (@lem4066167 (term1633 _102126 _102133 x'''' f t)). Qed.
Lemma lem4066169 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 x'''' f t.
Proof. exact (EQ_MP (@lem4066168 _102126 _102133 x'''' f t) (@lem4066165 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066171 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066172 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4066171 _102126 _102133 s P f t n h1). Qed.
Lemma lem4066174 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066175 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4066174 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4066176 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4066175 _102126 t) (@lem4066172 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066179 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4066180 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4066179 _102126 _102133 f t h1). Qed.
Lemma lem4066182 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4066183 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4066182 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4066184 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4066183 _102126 _102133 f t) (@lem4066180 _102126 _102133 f t h1)). Qed.
Lemma lem4066186 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066187 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1757 _102126 _102133 y'''' _46773 _46774) = (term1872 _102126 _102133 y'''' _46773 _46774).
Proof. exact (@lem4066186 (term1873 _102126 _102133 _46773 _46774) (term1633 _102126 _102133 y'''' _46773 _46774)). Qed.
Lemma lem4066189 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066190 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1875 _102126 _102133 _46773 _46774).
Proof. exact (@lem4066189 (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4066192 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066193 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1840 _102126 _46774) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774).
Proof. exact (@lem4066192 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774)). Qed.
Lemma lem4066194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066195 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1876 _102126 _46774) = (term1877 _102126 _46774).
Proof. exact (MK_COMB (@lem4066194) (@lem4066193 _102126 _46774)). Qed.
Lemma lem4066196 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1870 _102126 _102133 _46773 _46774) = (term1870 _102126 _102133 _46773 _46774).
Proof. exact (eq_refl (term1870 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066197 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1875 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066195 _102126 _46774) (@lem4066196 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066198 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (TRANS (@lem4066190 _102126 _102133 _46773 _46774) (@lem4066197 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066199 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066200 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1879 _102126 _102133 _46773 _46774) = (term1880 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066199) (@lem4066198 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066201 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1633 _102126 _102133 y'''' _46773 _46774) = (term1633 _102126 _102133 y'''' _46773 _46774).
Proof. exact (eq_refl (term1633 _102126 _102133 y'''' _46773 _46774)). Qed.
Lemma lem4066202 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1872 _102126 _102133 y'''' _46773 _46774) = (term1881 _102126 _102133 y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066200 _102126 _102133 _46773 _46774) (@lem4066201 _102126 _102133 y'''' _46773 _46774)). Qed.
Lemma lem4066203 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1757 _102126 _102133 y'''' _46773 _46774) = (term1881 _102126 _102133 y'''' _46773 _46774).
Proof. exact (TRANS (@lem4066187 _102126 _102133 y'''' _46773 _46774) (@lem4066202 _102126 _102133 y'''' _46773 _46774)). Qed.
Lemma lem4066205 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4066176 _102126 _102133 s P f t n h2) (@lem4066184 _102126 _102133 f t h1)). Qed.
Lemma lem4066207 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4066203 _102126 _102133 y'''' _46773 _46774) (@lem4059685 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4066208 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' _46773 _46774.
Proof. exact (@lem4066207 _102126 _102133 _46773 _46774 x'''' y'''' h1). Qed.
Lemma lem4066209 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1881 _102126 _102133 y'''' f t.
Proof. exact (@lem4066208 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4066212 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 y'''' f t.
Proof. exact (@lem4066209 _102126 _102133 f t x'''' y'''' h1 (@lem4066205 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4066213 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1775 _102126 _102133 y'''' f t.
Proof. exact (fun h0 : term1776 _102126 _102133 y'''' f t => @lem4066212 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4066215 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066216 {_102126 _102133 : Type'} (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1775 _102126 _102133 y'''' f t) = (term1633 _102126 _102133 y'''' f t).
Proof. exact (@lem4066215 (term1633 _102126 _102133 y'''' f t)). Qed.
Lemma lem4066217 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1633 _102126 _102133 y'''' f t.
Proof. exact (EQ_MP (@lem4066216 _102126 _102133 y'''' f t) (@lem4066213 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066219 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066220 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4066219 _102126 _102133 s P f t n h1). Qed.
Lemma lem4066222 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066223 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4066222 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4066224 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4066223 _102126 t) (@lem4066220 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066227 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (h1). Qed.
Lemma lem4066228 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1871 _102126 _102133 f t.
Proof. exact (fun h0 : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t) => @lem4066227 _102126 _102133 f t h1). Qed.
Lemma lem4066230 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4066231 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1871 _102126 _102133 f t) = (term1870 _102126 _102133 f t).
Proof. exact (@lem4066230 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4066232 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term1870 _102126 _102133 f t) : term1870 _102126 _102133 f t.
Proof. exact (EQ_MP (@lem4066231 _102126 _102133 f t) (@lem4066228 _102126 _102133 f t h1)). Qed.
Lemma lem4066234 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066235 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1756 _102126 _102133 x'''' y'''' _46773 _46774) = (term1882 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4066234 (term1873 _102126 _102133 _46773 _46774) (term1621 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066237 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066238 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1875 _102126 _102133 _46773 _46774).
Proof. exact (@lem4066237 (term1604 _102126 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4066240 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066241 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1840 _102126 _46774) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774).
Proof. exact (@lem4066240 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774)). Qed.
Lemma lem4066242 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066243 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1876 _102126 _46774) = (term1877 _102126 _46774).
Proof. exact (MK_COMB (@lem4066242) (@lem4066241 _102126 _46774)). Qed.
Lemma lem4066244 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1870 _102126 _102133 _46773 _46774) = (term1870 _102126 _102133 _46773 _46774).
Proof. exact (eq_refl (term1870 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066245 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1875 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066243 _102126 _46774) (@lem4066244 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066246 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1874 _102126 _102133 _46773 _46774) = (term1878 _102126 _102133 _46773 _46774).
Proof. exact (TRANS (@lem4066238 _102126 _102133 _46773 _46774) (@lem4066245 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066247 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066248 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1879 _102126 _102133 _46773 _46774) = (term1880 _102126 _102133 _46773 _46774).
Proof. exact (MK_COMB (@lem4066247) (@lem4066246 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066249 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1621 _102126 _102133 x'''' y'''' _46773 _46774) = (term1621 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (eq_refl (term1621 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066250 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1882 _102126 _102133 x'''' y'''' _46773 _46774) = (term1883 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066248 _102126 _102133 _46773 _46774) (@lem4066249 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066251 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1756 _102126 _102133 x'''' y'''' _46773 _46774) = (term1883 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (TRANS (@lem4066235 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066250 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066253 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1870 _102126 _102133 f t) (h2 : term1595 _102126 _102133 s P f t n) : term1878 _102126 _102133 f t.
Proof. exact (conj (@lem4066224 _102126 _102133 s P f t n h2) (@lem4066232 _102126 _102133 f t h1)). Qed.
Lemma lem4066255 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4066251 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4059661 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4066256 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (@lem4066255 _102126 _102133 _46773 _46774 x'''' y'''' h1). Qed.
Lemma lem4066257 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1883 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4066256 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4066260 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1621 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4066257 _102126 _102133 f t x'''' y'''' h1 (@lem4066253 _102126 _102133 s P f t n h2 h3)). Qed.
Lemma lem4066261 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1779 _102126 _102133 x'''' y'''' f t.
Proof. exact (fun h0 : (term1617 _102126 _102133 x'''' f t) = (term1617 _102126 _102133 y'''' f t) => @lem4066260 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4066263 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4066264 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1779 _102126 _102133 x'''' y'''' f t) = (term1621 _102126 _102133 x'''' y'''' f t).
Proof. exact (@lem4066263 ((term1617 _102126 _102133 x'''' f t) = (term1617 _102126 _102133 y'''' f t))). Qed.
Lemma lem4066265 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1621 _102126 _102133 x'''' y'''' f t.
Proof. exact (EQ_MP (@lem4066264 _102126 _102133 x'''' y'''' f t) (@lem4066261 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066281 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066282 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1780 _102126 _102133 t f _46795 _46796) = (term1781 _102126 _102133 f t _46795 _46796).
Proof. exact (@lem4066281 (term1562 _102126 _102133 _46795 f _46796) (term1577 _102126 _46796 t) (_46795 = _46796)). Qed.
Lemma lem4066298 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4066299 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46795 _46796) = (term1783 _102126 _46795 _46796 t).
Proof. exact (@lem4066298 (_46795 = _46796) (term1577 _102126 _46796 t)). Qed.
Lemma lem4066307 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1564 _102126 _102133 _46795 f _46796) = (term1564 _102126 _102133 _46795 f _46796).
Proof. exact (eq_refl (term1564 _102126 _102133 _46795 f _46796)). Qed.
Lemma lem4066308 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46795 _46796) = (term1784 _102126 _102133 f _46795 _46796 t).
Proof. exact (MK_COMB (@lem4066307 _102126 _102133 _46795 f _46796) (@lem4066299 _102126 _46795 _46796 t)). Qed.
Lemma lem4066312 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066313 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) (t : _102126 -> Prop) : (term1784 _102126 _102133 f _46795 _46796 t) = (term1785 _102126 _102133 _46795 f _46796 t).
Proof. exact (@lem4066312 (_46795 = _46796) (term1562 _102126 _102133 _46795 f _46796) (term1577 _102126 _46796 t)). Qed.
Lemma lem4066333 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) (t : _102126 -> Prop) : (term1781 _102126 _102133 f t _46795 _46796) = (term1785 _102126 _102133 _46795 f _46796 t).
Proof. exact (TRANS (@lem4066308 _102126 _102133 f _46795 _46796 t) (@lem4066313 _102126 _102133 _46795 f _46796 t)). Qed.
Lemma lem4066334 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) (t : _102126 -> Prop) : (term1780 _102126 _102133 t f _46795 _46796) = (term1785 _102126 _102133 _46795 f _46796 t).
Proof. exact (TRANS (@lem4066282 _102126 _102133 f t _46795 _46796) (@lem4066333 _102126 _102133 _46795 f _46796 t)). Qed.
Lemma lem4066335 {_102126 : Type'} (_46795 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46795 t) = (term1579 _102126 _46795 t).
Proof. exact (eq_refl (term1579 _102126 _46795 t)). Qed.
Lemma lem4066336 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46795 _46796) = (term1786 _102126 _102133 _46795 f _46796 t).
Proof. exact (MK_COMB (@lem4066335 _102126 _46795 t) (@lem4066334 _102126 _102133 _46795 f _46796 t)). Qed.
Lemma lem4066340 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066341 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46795 f _46796 t) = (term1787 _102126 _102133 _46795 f _46796 t).
Proof. exact (@lem4066340 (_46795 = _46796) (term1577 _102126 _46795 t) (term1788 _102126 _102133 _46795 f _46796 t)). Qed.
Lemma lem4066357 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066358 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1789 _102126 _102133 _46795 f _46796 t) = (term1790 _102126 _102133 f _46795 _46796 t).
Proof. exact (@lem4066357 (term1562 _102126 _102133 _46795 f _46796) (term1577 _102126 _46795 t) (term1577 _102126 _46796 t)). Qed.
Lemma lem4066376 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) : (term1791 _102126 _46795 _46796) = (term1791 _102126 _46795 _46796).
Proof. exact (eq_refl (term1791 _102126 _46795 _46796)). Qed.
Lemma lem4066377 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1787 _102126 _102133 _46795 f _46796 t) = (term1792 _102126 _102133 f _46795 _46796 t).
Proof. exact (MK_COMB (@lem4066376 _102126 _46795 _46796) (@lem4066358 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066388 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1786 _102126 _102133 _46795 f _46796 t) = (term1792 _102126 _102133 f _46795 _46796 t).
Proof. exact (TRANS (@lem4066341 _102126 _102133 _46795 f _46796 t) (@lem4066377 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066389 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1751 _102126 _102133 t f _46795 _46796) = (term1792 _102126 _102133 f _46795 _46796 t).
Proof. exact (TRANS (@lem4066336 _102126 _102133 _46795 f _46796 t) (@lem4066388 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066390 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4066391 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1793 _102126 _102133 t f _46795 _46796) = (term1794 _102126 _102133 f _46795 _46796 t).
Proof. exact (MK_COMB (@lem4066390) (@lem4066389 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066417 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4066418 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1782 _102126 t _46795 _46796) = (term1783 _102126 _46795 _46796 t).
Proof. exact (@lem4066417 (_46795 = _46796) (term1577 _102126 _46796 t)). Qed.
Lemma lem4066426 {_102126 : Type'} (_46795 : _102126) (t : _102126 -> Prop) : (term1579 _102126 _46795 t) = (term1579 _102126 _46795 t).
Proof. exact (eq_refl (term1579 _102126 _46795 t)). Qed.
Lemma lem4066427 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46795 _46796) = (term1796 _102126 _46795 _46796 t).
Proof. exact (MK_COMB (@lem4066426 _102126 _46795 t) (@lem4066418 _102126 _46795 _46796 t)). Qed.
Lemma lem4066431 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066432 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1796 _102126 _46795 _46796 t) = (term1797 _102126 _46795 _46796 t).
Proof. exact (@lem4066431 (_46795 = _46796) (term1577 _102126 _46795 t) (term1577 _102126 _46796 t)). Qed.
Lemma lem4066450 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1795 _102126 t _46795 _46796) = (term1797 _102126 _46795 _46796 t).
Proof. exact (TRANS (@lem4066427 _102126 _46795 _46796 t) (@lem4066432 _102126 _46795 _46796 t)). Qed.
Lemma lem4066451 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1564 _102126 _102133 _46795 f _46796) = (term1564 _102126 _102133 _46795 f _46796).
Proof. exact (eq_refl (term1564 _102126 _102133 _46795 f _46796)). Qed.
Lemma lem4066452 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46795 _46796) = (term1799 _102126 _102133 f _46795 _46796 t).
Proof. exact (MK_COMB (@lem4066451 _102126 _102133 _46795 f _46796) (@lem4066450 _102126 _46795 _46796 t)). Qed.
Lemma lem4066456 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066457 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1799 _102126 _102133 f _46795 _46796 t) = (term1792 _102126 _102133 f _46795 _46796 t).
Proof. exact (@lem4066456 (_46795 = _46796) (term1562 _102126 _102133 _46795 f _46796) (term1580 _102126 _46795 _46796 t)). Qed.
Lemma lem4066487 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : (term1798 _102126 _102133 f t _46795 _46796) = (term1792 _102126 _102133 f _46795 _46796 t).
Proof. exact (TRANS (@lem4066452 _102126 _102133 f _46795 _46796 t) (@lem4066457 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066488 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : ((term1751 _102126 _102133 t f _46795 _46796) = (term1798 _102126 _102133 f t _46795 _46796)) = ((term1792 _102126 _102133 f _46795 _46796 t) = (term1792 _102126 _102133 f _46795 _46796 t)).
Proof. exact (MK_COMB (@lem4066391 _102126 _102133 f _46795 _46796 t) (@lem4066487 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066490 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4066491 (x : Prop) : (x = x) = True.
Proof. exact (@lem4066490 Prop x). Qed.
Lemma lem4066492 {_102126 _102133 : Type'} (f : _102126 -> _102133) (_46795 : _102126) (_46796 : _102126) (t : _102126 -> Prop) : ((term1792 _102126 _102133 f _46795 _46796 t) = (term1792 _102126 _102133 f _46795 _46796 t)) = True.
Proof. exact (@lem4066491 (term1792 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066493 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : ((term1751 _102126 _102133 t f _46795 _46796) = (term1798 _102126 _102133 f t _46795 _46796)) = True.
Proof. exact (TRANS (@lem4066488 _102126 _102133 f _46795 _46796 t) (@lem4066492 _102126 _102133 f _46795 _46796 t)). Qed.
Lemma lem4066494 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : True = ((term1751 _102126 _102133 t f _46795 _46796) = (term1798 _102126 _102133 f t _46795 _46796)).
Proof. exact (SYM (@lem4066493 _102126 _102133 f t _46795 _46796)). Qed.
Lemma lem4066495 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1751 _102126 _102133 t f _46795 _46796) = (term1798 _102126 _102133 f t _46795 _46796).
Proof. exact (EQ_MP (@lem4066494 _102126 _102133 f t _46795 _46796) (@lem0)). Qed.
Lemma lem4066496 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1798 _102126 _102133 f t _46795 _46796.
Proof. exact (EQ_MP (@lem4066495 _102126 _102133 f t _46795 _46796) (@lem4058849 _102126 _102133 _46795 _46796 s P f t n h1)). Qed.
Lemma lem4066498 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066499 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1798 _102126 _102133 f t _46795 _46796) = (term1800 _102126 _102133 t _46795 f _46796).
Proof. exact (@lem4066498 (term1795 _102126 t _46795 _46796) (term1562 _102126 _102133 _46795 f _46796)). Qed.
Lemma lem4066501 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066502 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1801 _102126 t _46795 _46796) = (term1802 _102126 t _46795 _46796).
Proof. exact (@lem4066501 (term1577 _102126 _46795 t) (term1782 _102126 t _46795 _46796)). Qed.
Lemma lem4066504 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066505 {_102126 : Type'} (_46795 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46795 t) = (term1575 _102126 _46795 t).
Proof. exact (@lem4066504 (term1575 _102126 _46795 t)). Qed.
Lemma lem4066506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066507 {_102126 : Type'} (_46795 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46795 t) = (term1805 _102126 _46795 t).
Proof. exact (MK_COMB (@lem4066506) (@lem4066505 _102126 _46795 t)). Qed.
Lemma lem4066509 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066510 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1806 _102126 t _46795 _46796) = (term1807 _102126 t _46795 _46796).
Proof. exact (@lem4066509 (term1577 _102126 _46796 t) (_46795 = _46796)). Qed.
Lemma lem4066512 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066513 {_102126 : Type'} (_46796 : _102126) (t : _102126 -> Prop) : (term1803 _102126 _46796 t) = (term1575 _102126 _46796 t).
Proof. exact (@lem4066512 (term1575 _102126 _46796 t)). Qed.
Lemma lem4066514 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066515 {_102126 : Type'} (_46796 : _102126) (t : _102126 -> Prop) : (term1804 _102126 _46796 t) = (term1805 _102126 _46796 t).
Proof. exact (MK_COMB (@lem4066514) (@lem4066513 _102126 _46796 t)). Qed.
Lemma lem4066516 {_102126 : Type'} (_46795 : _102126) (_46796 : _102126) : (term1567 _102126 _46795 _46796) = (term1567 _102126 _46795 _46796).
Proof. exact (eq_refl (term1567 _102126 _46795 _46796)). Qed.
Lemma lem4066517 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1807 _102126 t _46795 _46796) = (term1808 _102126 t _46795 _46796).
Proof. exact (MK_COMB (@lem4066515 _102126 _46796 t) (@lem4066516 _102126 _46795 _46796)). Qed.
Lemma lem4066518 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1806 _102126 t _46795 _46796) = (term1808 _102126 t _46795 _46796).
Proof. exact (TRANS (@lem4066510 _102126 t _46795 _46796) (@lem4066517 _102126 t _46795 _46796)). Qed.
Lemma lem4066519 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1802 _102126 t _46795 _46796) = (term1809 _102126 t _46795 _46796).
Proof. exact (MK_COMB (@lem4066507 _102126 _46795 t) (@lem4066518 _102126 t _46795 _46796)). Qed.
Lemma lem4066520 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1801 _102126 t _46795 _46796) = (term1809 _102126 t _46795 _46796).
Proof. exact (TRANS (@lem4066502 _102126 t _46795 _46796) (@lem4066519 _102126 t _46795 _46796)). Qed.
Lemma lem4066521 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066522 {_102126 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (_46796 : _102126) : (term1810 _102126 t _46795 _46796) = (term1811 _102126 t _46795 _46796).
Proof. exact (MK_COMB (@lem4066521) (@lem4066520 _102126 t _46795 _46796)). Qed.
Lemma lem4066523 {_102126 _102133 : Type'} (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1562 _102126 _102133 _46795 f _46796) = (term1562 _102126 _102133 _46795 f _46796).
Proof. exact (eq_refl (term1562 _102126 _102133 _46795 f _46796)). Qed.
Lemma lem4066524 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1800 _102126 _102133 t _46795 f _46796) = (term1812 _102126 _102133 t _46795 f _46796).
Proof. exact (MK_COMB (@lem4066522 _102126 t _46795 _46796) (@lem4066523 _102126 _102133 _46795 f _46796)). Qed.
Lemma lem4066525 {_102126 _102133 : Type'} (t : _102126 -> Prop) (_46795 : _102126) (f : _102126 -> _102133) (_46796 : _102126) : (term1798 _102126 _102133 f t _46795 _46796) = (term1812 _102126 _102133 t _46795 f _46796).
Proof. exact (TRANS (@lem4066499 _102126 _102133 t _46795 f _46796) (@lem4066524 _102126 _102133 t _46795 f _46796)). Qed.
Lemma lem4066527 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1813 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4066217 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4066265 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066528 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1814 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4066169 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4066527 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066530 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1812 _102126 _102133 t _46795 f _46796.
Proof. exact (EQ_MP (@lem4066525 _102126 _102133 t _46795 f _46796) (@lem4066496 _102126 _102133 _46795 _46796 s P f t n h1)). Qed.
Lemma lem4066531 {_102126 _102133 : Type'} (_46795 : _102126) (_46796 : _102126) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1812 _102126 _102133 t _46795 f _46796.
Proof. exact (@lem4066530 _102126 _102133 _46795 _46796 s P f t n h1). Qed.
Lemma lem4066532 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1815 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4066531 _102126 _102133 (term1617 _102126 _102133 x'''' f t) (term1617 _102126 _102133 y'''' f t) s P f t n h1). Qed.
Lemma lem4066535 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1816 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4066532 _102126 _102133 x'''' y'''' s P f t n h3 (@lem4066528 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066536 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1817 _102126 _102133 x'''' y'''' f t.
Proof. exact (fun h0 : (term1624 _102126 _102133 x'''' f t) = (term1624 _102126 _102133 y'''' f t) => @lem4066535 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4066538 (p : Prop) : (term1762 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4066539 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1817 _102126 _102133 x'''' y'''' f t) = (term1816 _102126 _102133 x'''' y'''' f t).
Proof. exact (@lem4066538 ((term1624 _102126 _102133 x'''' f t) = (term1624 _102126 _102133 y'''' f t))). Qed.
Lemma lem4066540 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1816 _102126 _102133 x'''' y'''' f t.
Proof. exact (EQ_MP (@lem4066539 _102126 _102133 x'''' y'''' f t) (@lem4066536 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066542 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (proj2 (@lem4049393 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066543 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : term1833 _102126 t.
Proof. exact (fun h0 : term1604 _102126 t => @lem4066542 _102126 _102133 s P f t n h1). Qed.
Lemma lem4066545 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066546 {_102126 : Type'} (t : _102126 -> Prop) : (term1833 _102126 t) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t).
Proof. exact (@lem4066545 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t)). Qed.
Lemma lem4066547 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1595 _102126 _102133 s P f t n) : @I ((_102126 -> Prop) -> Prop) (@FINITE _102126) t.
Proof. exact (EQ_MP (@lem4066546 _102126 t) (@lem4066543 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4066565 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4066566 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1873 _102126 _102133 _46773 _46774) = (term1884 _102126 _102133 _46773 _46774).
Proof. exact (@lem4066565 ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774)) (term1604 _102126 _46774)). Qed.
Lemma lem4066574 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1819 _102126 _102133 x'''' y'''' _46773 _46774) = (term1819 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (eq_refl (term1819 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066575 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1758 _102126 _102133 x'''' y'''' _46773 _46774) = (term1885 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066574 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066566 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066586 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4066587 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1886 _102126 _102133 x'''' y'''' _46773 _46774) = (term1887 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066586) (@lem4066575 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066591 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066592 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46773 _46774) = (term1885 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4066591 ((term1624 _102126 _102133 x'''' _46773 _46774) = (term1624 _102126 _102133 y'''' _46773 _46774)) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774)) (term1604 _102126 _46774)). Qed.
Lemma lem4066612 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : ((term1758 _102126 _102133 x'''' y'''' _46773 _46774) = (term1888 _102126 _102133 x'''' y'''' _46773 _46774)) = ((term1885 _102126 _102133 x'''' y'''' _46773 _46774) = (term1885 _102126 _102133 x'''' y'''' _46773 _46774)).
Proof. exact (MK_COMB (@lem4066587 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066592 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066614 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4066615 (x : Prop) : (x = x) = True.
Proof. exact (@lem4066614 Prop x). Qed.
Lemma lem4066616 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : ((term1885 _102126 _102133 x'''' y'''' _46773 _46774) = (term1885 _102126 _102133 x'''' y'''' _46773 _46774)) = True.
Proof. exact (@lem4066615 (term1885 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066617 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : ((term1758 _102126 _102133 x'''' y'''' _46773 _46774) = (term1888 _102126 _102133 x'''' y'''' _46773 _46774)) = True.
Proof. exact (TRANS (@lem4066612 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066616 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066618 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : True = ((term1758 _102126 _102133 x'''' y'''' _46773 _46774) = (term1888 _102126 _102133 x'''' y'''' _46773 _46774)).
Proof. exact (SYM (@lem4066617 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066619 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1758 _102126 _102133 x'''' y'''' _46773 _46774) = (term1888 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (EQ_MP (@lem4066618 _102126 _102133 x'''' y'''' _46773 _46774) (@lem0)). Qed.
Lemma lem4066620 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1888 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4066619 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4059697 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4066622 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066623 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46773 _46774) = (term1889 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4066622 (term1732 _102126 _102133 x'''' y'''' _46773 _46774) ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4066625 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066626 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1849 _102126 _102133 x'''' y'''' _46773 _46774) = (term1850 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (@lem4066625 ((term1624 _102126 _102133 x'''' _46773 _46774) = (term1624 _102126 _102133 y'''' _46773 _46774)) (term1604 _102126 _46774)). Qed.
Lemma lem4066628 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066629 {_102126 : Type'} (_46774 : _102126 -> Prop) : (term1840 _102126 _46774) = (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774).
Proof. exact (@lem4066628 (@I ((_102126 -> Prop) -> Prop) (@FINITE _102126) _46774)). Qed.
Lemma lem4066630 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1828 _102126 _102133 x'''' y'''' _46773 _46774) = (term1828 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (eq_refl (term1828 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066631 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1850 _102126 _102133 x'''' y'''' _46773 _46774) = (term1851 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066630 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066629 _102126 _46774)). Qed.
Lemma lem4066632 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1849 _102126 _102133 x'''' y'''' _46773 _46774) = (term1851 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (TRANS (@lem4066626 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066631 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066633 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066634 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1852 _102126 _102133 x'''' y'''' _46773 _46774) = (term1853 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066633) (@lem4066632 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066635 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774)) = ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774)).
Proof. exact (eq_refl ((term1535 _102126 _102133 _46773 _46774) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) _46774))). Qed.
Lemma lem4066636 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1889 _102126 _102133 x'''' y'''' _46773 _46774) = (term1890 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (MK_COMB (@lem4066634 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066635 _102126 _102133 _46773 _46774)). Qed.
Lemma lem4066637 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) : (term1888 _102126 _102133 x'''' y'''' _46773 _46774) = (term1890 _102126 _102133 x'''' y'''' _46773 _46774).
Proof. exact (TRANS (@lem4066623 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066636 _102126 _102133 x'''' y'''' _46773 _46774)). Qed.
Lemma lem4066639 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : term1851 _102126 _102133 x'''' y'''' f t.
Proof. exact (conj (@lem4066540 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3) (@lem4066547 _102126 _102133 s P f t n h3)). Qed.
Lemma lem4066641 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (EQ_MP (@lem4066637 _102126 _102133 x'''' y'''' _46773 _46774) (@lem4066620 _102126 _102133 _46773 _46774 x'''' y'''' h1)). Qed.
Lemma lem4066642 {_102126 _102133 : Type'} (_46773 : _102126 -> _102133) (_46774 : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' _46773 _46774.
Proof. exact (@lem4066641 _102126 _102133 _46773 _46774 x'''' y'''' h1). Qed.
Lemma lem4066643 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (h1 : term1360 _102126 _102133 x'''' y'''') : term1890 _102126 _102133 x'''' y'''' f t.
Proof. exact (@lem4066642 _102126 _102133 f t x'''' y'''' h1). Qed.
Lemma lem4066646 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1870 _102126 _102133 f t) (h3 : term1595 _102126 _102133 s P f t n) : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (@lem4066643 _102126 _102133 f t x'''' y'''' h1 (@lem4066639 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4066647 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1891 _102126 _102133 f t.
Proof. exact (fun h0 : term1870 _102126 _102133 f t => @lem4066646 _102126 _102133 x'''' y'''' s P f t n h1 h0 h2). Qed.
Lemma lem4066649 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066650 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1891 _102126 _102133 f t) = ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)).
Proof. exact (@lem4066649 ((term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t))). Qed.
Lemma lem4066651 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1535 _102126 _102133 f t) = (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t).
Proof. exact (EQ_MP (@lem4066650 _102126 _102133 f t) (@lem4066647 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066669 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4066670 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1865 _47757 _47758 _47759 _47760) = (term1892 _47757 _47759 _47758 _47760).
Proof. exact (@lem4066669 ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760)) (term1893 _47758 _47760)). Qed.
Lemma lem4066680 (_47757 : type1605) (_47759 : type1605) : (term1894 _47757 _47759) = (term1894 _47757 _47759).
Proof. exact (eq_refl (term1894 _47757 _47759)). Qed.
Lemma lem4066681 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1867 _47757 _47758 _47759 _47760) = (term1895 _47757 _47759 _47758 _47760).
Proof. exact (MK_COMB (@lem4066680 _47757 _47759) (@lem4066670 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066685 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066686 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1895 _47757 _47759 _47758 _47760) = (term1896 _47757 _47759 _47758 _47760).
Proof. exact (@lem4066685 ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760)) (term1897 _47757 _47759) (term1893 _47758 _47760)). Qed.
Lemma lem4066708 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1867 _47757 _47758 _47759 _47760) = (term1896 _47757 _47759 _47758 _47760).
Proof. exact (TRANS (@lem4066681 _47757 _47759 _47758 _47760) (@lem4066686 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066709 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4066710 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1898 _47757 _47758 _47759 _47760) = (term1899 _47757 _47759 _47758 _47760).
Proof. exact (MK_COMB (@lem4066709) (@lem4066708 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066732 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1896 _47757 _47759 _47758 _47760) = (term1896 _47757 _47759 _47758 _47760).
Proof. exact (eq_refl (term1896 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066733 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : ((term1867 _47757 _47758 _47759 _47760) = (term1896 _47757 _47759 _47758 _47760)) = ((term1896 _47757 _47759 _47758 _47760) = (term1896 _47757 _47759 _47758 _47760)).
Proof. exact (MK_COMB (@lem4066710 _47757 _47759 _47758 _47760) (@lem4066732 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066735 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4066736 (x : Prop) : (x = x) = True.
Proof. exact (@lem4066735 Prop x). Qed.
Lemma lem4066737 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : ((term1896 _47757 _47759 _47758 _47760) = (term1896 _47757 _47759 _47758 _47760)) = True.
Proof. exact (@lem4066736 (term1896 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066738 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : ((term1867 _47757 _47758 _47759 _47760) = (term1896 _47757 _47759 _47758 _47760)) = True.
Proof. exact (TRANS (@lem4066733 _47757 _47759 _47758 _47760) (@lem4066737 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066739 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : True = ((term1867 _47757 _47758 _47759 _47760) = (term1896 _47757 _47759 _47758 _47760)).
Proof. exact (SYM (@lem4066738 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066740 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1867 _47757 _47758 _47759 _47760) = (term1896 _47757 _47759 _47758 _47760).
Proof. exact (EQ_MP (@lem4066739 _47757 _47759 _47758 _47760) (@lem0)). Qed.
Lemma lem4066741 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : term1896 _47757 _47759 _47758 _47760.
Proof. exact (EQ_MP (@lem4066740 _47757 _47759 _47758 _47760) (@lem4065926 _47757 _47758 _47759 _47760)). Qed.
Lemma lem4066743 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066744 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : (term1896 _47757 _47759 _47758 _47760) = (term1900 _47757 _47758 _47759 _47760).
Proof. exact (@lem4066743 (term1901 _47757 _47759 _47758 _47760) ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760))). Qed.
Lemma lem4066746 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066747 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1902 _47757 _47759 _47758 _47760) = (term1903 _47757 _47759 _47758 _47760).
Proof. exact (@lem4066746 (term1897 _47757 _47759) (term1893 _47758 _47760)). Qed.
Lemma lem4066749 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066750 (_47757 : type1605) (_47759 : type1605) : (term1904 _47757 _47759) = (_47757 = _47759).
Proof. exact (@lem4066749 (_47757 = _47759)). Qed.
Lemma lem4066751 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066752 (_47757 : type1605) (_47759 : type1605) : (term1905 _47757 _47759) = (term1906 _47757 _47759).
Proof. exact (MK_COMB (@lem4066751) (@lem4066750 _47757 _47759)). Qed.
Lemma lem4066754 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066755 (_47758 : nat) (_47760 : nat) : (term1907 _47758 _47760) = (_47758 = _47760).
Proof. exact (@lem4066754 (_47758 = _47760)). Qed.
Lemma lem4066756 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1903 _47757 _47759 _47758 _47760) = (term1908 _47757 _47759 _47758 _47760).
Proof. exact (MK_COMB (@lem4066752 _47757 _47759) (@lem4066755 _47758 _47760)). Qed.
Lemma lem4066757 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1902 _47757 _47759 _47758 _47760) = (term1908 _47757 _47759 _47758 _47760).
Proof. exact (TRANS (@lem4066747 _47757 _47759 _47758 _47760) (@lem4066756 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066758 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066759 (_47757 : type1605) (_47759 : type1605) (_47758 : nat) (_47760 : nat) : (term1909 _47757 _47759 _47758 _47760) = (term1910 _47757 _47759 _47758 _47760).
Proof. exact (MK_COMB (@lem4066758) (@lem4066757 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066760 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760)) = ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760)).
Proof. exact (eq_refl ((@I (nat -> nat -> Prop) _47757 _47758) = (@I (nat -> nat -> Prop) _47759 _47760))). Qed.
Lemma lem4066761 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : (term1900 _47757 _47758 _47759 _47760) = (term1911 _47757 _47758 _47759 _47760).
Proof. exact (MK_COMB (@lem4066759 _47757 _47759 _47758 _47760) (@lem4066760 _47757 _47758 _47759 _47760)). Qed.
Lemma lem4066762 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : (term1896 _47757 _47759 _47758 _47760) = (term1911 _47757 _47758 _47759 _47760).
Proof. exact (TRANS (@lem4066744 _47757 _47758 _47759 _47760) (@lem4066761 _47757 _47758 _47759 _47760)). Qed.
Lemma lem4066764 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1912 _102126 _102133 f t.
Proof. exact (conj (@lem4066121) (@lem4066651 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066766 (_47757 : type1605) (_47758 : nat) (_47759 : type1605) (_47760 : nat) : term1911 _47757 _47758 _47759 _47760.
Proof. exact (EQ_MP (@lem4066762 _47757 _47758 _47759 _47760) (@lem4066741 _47757 _47759 _47758 _47760)). Qed.
Lemma lem4066767 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : term1913 _102126 _102133 f t.
Proof. exact (@lem4066766 Peano.lt (term1535 _102126 _102133 f t) Peano.lt (@I ((_102126 -> Prop) -> nat) (@CARD _102126) t)). Qed.
Lemma lem4066770 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1539 _102126 _102133 f t) = (term1530 _102126 t).
Proof. exact (@lem4066767 _102126 _102133 f t (@lem4066764 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066771 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1914 _102126 _102133 f t.
Proof. exact (fun h0 : term1915 _102126 _102133 f t => @lem4066770 _102126 _102133 x'''' y'''' s P f t n h1 h2). Qed.
Lemma lem4066773 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066774 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1914 _102126 _102133 f t) = ((term1539 _102126 _102133 f t) = (term1530 _102126 t)).
Proof. exact (@lem4066773 ((term1539 _102126 _102133 f t) = (term1530 _102126 t))). Qed.
Lemma lem4066775 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1539 _102126 _102133 f t) = (term1530 _102126 t).
Proof. exact (EQ_MP (@lem4066774 _102126 _102133 f t) (@lem4066771 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066777 (x : nat -> Prop) : x = x.
Proof. exact (@lem21386 (nat -> Prop) x). Qed.
Lemma lem4066778 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1539 _102126 _102133 f t) = (term1539 _102126 _102133 f t).
Proof. exact (@lem4066777 (term1539 _102126 _102133 f t)). Qed.
Lemma lem4066779 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : term1951 _102126 _102133 f t.
Proof. exact (fun h0 : term1952 _102126 _102133 f t => @lem4066778 _102126 _102133 f t). Qed.
Lemma lem4066781 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066782 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1951 _102126 _102133 f t) = ((term1539 _102126 _102133 f t) = (term1539 _102126 _102133 f t)).
Proof. exact (@lem4066781 ((term1539 _102126 _102133 f t) = (term1539 _102126 _102133 f t))). Qed.
Lemma lem4066783 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1539 _102126 _102133 f t) = (term1539 _102126 _102133 f t).
Proof. exact (EQ_MP (@lem4066782 _102126 _102133 f t) (@lem4066779 _102126 _102133 f t)). Qed.
Lemma lem4066801 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4066802 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1953 x y z) = (term1954 y x z).
Proof. exact (@lem4066801 (y = z) (term1924 x z)). Qed.
Lemma lem4066812 (x : nat -> Prop) (y : nat -> Prop) : (term1921 x y) = (term1921 x y).
Proof. exact (eq_refl (term1921 x y)). Qed.
Lemma lem4066813 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1950 x y z) = (term1955 y x z).
Proof. exact (MK_COMB (@lem4066812 x y) (@lem4066802 y x z)). Qed.
Lemma lem4066817 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066818 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1955 y x z) = (term1956 y x z).
Proof. exact (@lem4066817 (y = z) (term1924 x y) (term1924 x z)). Qed.
Lemma lem4066840 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1950 x y z) = (term1956 y x z).
Proof. exact (TRANS (@lem4066813 y x z) (@lem4066818 y x z)). Qed.
Lemma lem4066841 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4066842 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1957 x y z) = (term1958 y x z).
Proof. exact (MK_COMB (@lem4066841) (@lem4066840 y x z)). Qed.
Lemma lem4066864 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1956 y x z) = (term1956 y x z).
Proof. exact (eq_refl (term1956 y x z)). Qed.
Lemma lem4066865 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : ((term1950 x y z) = (term1956 y x z)) = ((term1956 y x z) = (term1956 y x z)).
Proof. exact (MK_COMB (@lem4066842 y x z) (@lem4066864 y x z)). Qed.
Lemma lem4066867 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4066868 (x : Prop) : (x = x) = True.
Proof. exact (@lem4066867 Prop x). Qed.
Lemma lem4066869 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : ((term1956 y x z) = (term1956 y x z)) = True.
Proof. exact (@lem4066868 (term1956 y x z)). Qed.
Lemma lem4066870 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : ((term1950 x y z) = (term1956 y x z)) = True.
Proof. exact (TRANS (@lem4066865 y x z) (@lem4066869 y x z)). Qed.
Lemma lem4066871 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : True = ((term1950 x y z) = (term1956 y x z)).
Proof. exact (SYM (@lem4066870 y x z)). Qed.
Lemma lem4066872 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1950 x y z) = (term1956 y x z).
Proof. exact (EQ_MP (@lem4066871 y x z) (@lem0)). Qed.
Lemma lem4066873 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : term1956 y x z.
Proof. exact (EQ_MP (@lem4066872 y x z) (@lem4065987 x y z)). Qed.
Lemma lem4066875 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4066876 (x : nat -> Prop) (y : nat -> Prop) (z : nat -> Prop) : (term1956 y x z) = (term1959 x y z).
Proof. exact (@lem4066875 (term1960 y x z) (y = z)). Qed.
Lemma lem4066878 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4066879 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1961 y x z) = (term1962 y x z).
Proof. exact (@lem4066878 (term1924 x y) (term1924 x z)). Qed.
Lemma lem4066881 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066882 (x : nat -> Prop) (y : nat -> Prop) : (term1932 x y) = (x = y).
Proof. exact (@lem4066881 (x = y)). Qed.
Lemma lem4066883 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4066884 (x : nat -> Prop) (y : nat -> Prop) : (term1933 x y) = (term1934 x y).
Proof. exact (MK_COMB (@lem4066883) (@lem4066882 x y)). Qed.
Lemma lem4066886 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4066887 (x : nat -> Prop) (z : nat -> Prop) : (term1932 x z) = (x = z).
Proof. exact (@lem4066886 (x = z)). Qed.
Lemma lem4066888 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1962 y x z) = (term1963 y x z).
Proof. exact (MK_COMB (@lem4066884 x y) (@lem4066887 x z)). Qed.
Lemma lem4066889 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1961 y x z) = (term1963 y x z).
Proof. exact (TRANS (@lem4066879 y x z) (@lem4066888 y x z)). Qed.
Lemma lem4066890 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4066891 (y : nat -> Prop) (x : nat -> Prop) (z : nat -> Prop) : (term1964 y x z) = (term1965 y x z).
Proof. exact (MK_COMB (@lem4066890) (@lem4066889 y x z)). Qed.
Lemma lem4066892 (y : nat -> Prop) (z : nat -> Prop) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4066893 (x : nat -> Prop) (y : nat -> Prop) (z : nat -> Prop) : (term1959 x y z) = (term1966 x y z).
Proof. exact (MK_COMB (@lem4066891 y x z) (@lem4066892 y z)). Qed.
Lemma lem4066894 (x : nat -> Prop) (y : nat -> Prop) (z : nat -> Prop) : (term1956 y x z) = (term1966 x y z).
Proof. exact (TRANS (@lem4066876 x y z) (@lem4066893 x y z)). Qed.
Lemma lem4066896 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1967 _102126 _102133 f t.
Proof. exact (conj (@lem4066775 _102126 _102133 x'''' y'''' s P f t n h1 h2) (@lem4066783 _102126 _102133 f t)). Qed.
Lemma lem4066898 (x : nat -> Prop) (y : nat -> Prop) (z : nat -> Prop) : term1966 x y z.
Proof. exact (EQ_MP (@lem4066894 x y z) (@lem4066873 y x z)). Qed.
Lemma lem4066899 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : term1968 _102126 _102133 f t.
Proof. exact (@lem4066898 (term1539 _102126 _102133 f t) (term1530 _102126 t) (term1539 _102126 _102133 f t)). Qed.
Lemma lem4066902 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1530 _102126 t) = (term1539 _102126 _102133 f t).
Proof. exact (@lem4066899 _102126 _102133 f t (@lem4066896 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066903 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : term1969 _102126 _102133 f t.
Proof. exact (fun h0 : term1970 _102126 _102133 f t => @lem4066902 _102126 _102133 x'''' y'''' s P f t n h1 h2). Qed.
Lemma lem4066905 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066906 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) : (term1969 _102126 _102133 f t) = ((term1530 _102126 t) = (term1539 _102126 _102133 f t)).
Proof. exact (@lem4066905 ((term1530 _102126 t) = (term1539 _102126 _102133 f t))). Qed.
Lemma lem4066907 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : (term1530 _102126 t) = (term1539 _102126 _102133 f t).
Proof. exact (EQ_MP (@lem4066906 _102126 _102133 f t) (@lem4066903 _102126 _102133 x'''' y'''' s P f t n h1 h2)). Qed.
Lemma lem4066909 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4066910 (n : nat) : n = n.
Proof. exact (@lem4066909 n). Qed.
Lemma lem4066911 (n : nat) : term1916 n.
Proof. exact (fun h0 : term1917 n => @lem4066910 n). Qed.
Lemma lem4066913 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066914 (n : nat) : (term1916 n) = (n = n).
Proof. exact (@lem4066913 (n = n)). Qed.
Lemma lem4066915 (n : nat) : n = n.
Proof. exact (EQ_MP (@lem4066914 n) (@lem4066911 n)). Qed.
Lemma lem4066917 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1532 _102126 t n.
Proof. exact (proj2 (@lem4049401 _102126 _102133 f t n h1)). Qed.
Lemma lem4066918 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1948 _102126 t n.
Proof. exact (fun h0 : term1549 _102126 t n => @lem4066917 _102126 _102133 f t n h1). Qed.
Lemma lem4066920 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4066921 {_102126 : Type'} (t : _102126 -> Prop) (n : nat) : (term1948 _102126 t n) = (term1532 _102126 t n).
Proof. exact (@lem4066920 (term1532 _102126 t n)). Qed.
Lemma lem4066922 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1532 _102126 t n.
Proof. exact (EQ_MP (@lem4066921 _102126 t n) (@lem4066918 _102126 _102133 f t n h1)). Qed.
Lemma lem4066940 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066941 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1861 _47539 _47540 _47537 _47538) = (term1919 _47539 _47540 _47537 _47538).
Proof. exact (@lem4066940 (@I (nat -> Prop) _47539 _47540) (term1893 _47538 _47540) (term1920 _47537 _47538)). Qed.
Lemma lem4066959 (_47537 : nat -> Prop) (_47539 : nat -> Prop) : (term1921 _47537 _47539) = (term1921 _47537 _47539).
Proof. exact (eq_refl (term1921 _47537 _47539)). Qed.
Lemma lem4066960 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1863 _47539 _47540 _47537 _47538) = (term1922 _47539 _47540 _47537 _47538).
Proof. exact (MK_COMB (@lem4066959 _47537 _47539) (@lem4066941 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4066964 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4066965 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1922 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538).
Proof. exact (@lem4066964 (@I (nat -> Prop) _47539 _47540) (term1924 _47537 _47539) (term1925 _47540 _47537 _47538)). Qed.
Lemma lem4066995 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1863 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538).
Proof. exact (TRANS (@lem4066960 _47539 _47540 _47537 _47538) (@lem4066965 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4066996 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4066997 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1926 _47539 _47540 _47537 _47538) = (term1927 _47539 _47540 _47537 _47538).
Proof. exact (MK_COMB (@lem4066996) (@lem4066995 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067027 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1923 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538).
Proof. exact (eq_refl (term1923 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067028 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : ((term1863 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538)) = ((term1923 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538)).
Proof. exact (MK_COMB (@lem4066997 _47539 _47540 _47537 _47538) (@lem4067027 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067030 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4067031 (x : Prop) : (x = x) = True.
Proof. exact (@lem4067030 Prop x). Qed.
Lemma lem4067032 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : ((term1923 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538)) = True.
Proof. exact (@lem4067031 (term1923 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067033 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : ((term1863 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538)) = True.
Proof. exact (TRANS (@lem4067028 _47539 _47540 _47537 _47538) (@lem4067032 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067034 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : True = ((term1863 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538)).
Proof. exact (SYM (@lem4067033 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067035 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1863 _47539 _47540 _47537 _47538) = (term1923 _47539 _47540 _47537 _47538).
Proof. exact (EQ_MP (@lem4067034 _47539 _47540 _47537 _47538) (@lem0)). Qed.
Lemma lem4067036 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : term1923 _47539 _47540 _47537 _47538.
Proof. exact (EQ_MP (@lem4067035 _47539 _47540 _47537 _47538) (@lem4065093 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067038 (b : Prop) (a : Prop) : (a \/ b) = (term1763 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4067039 (_47537 : nat -> Prop) (_47538 : nat) (_47539 : nat -> Prop) (_47540 : nat) : (term1923 _47539 _47540 _47537 _47538) = (term1928 _47537 _47538 _47539 _47540).
Proof. exact (@lem4067038 (term1929 _47539 _47540 _47537 _47538) (@I (nat -> Prop) _47539 _47540)). Qed.
Lemma lem4067041 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4067042 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1930 _47539 _47540 _47537 _47538) = (term1931 _47539 _47540 _47537 _47538).
Proof. exact (@lem4067041 (term1924 _47537 _47539) (term1925 _47540 _47537 _47538)). Qed.
Lemma lem4067044 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4067045 (_47537 : nat -> Prop) (_47539 : nat -> Prop) : (term1932 _47537 _47539) = (_47537 = _47539).
Proof. exact (@lem4067044 (_47537 = _47539)). Qed.
Lemma lem4067046 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4067047 (_47537 : nat -> Prop) (_47539 : nat -> Prop) : (term1933 _47537 _47539) = (term1934 _47537 _47539).
Proof. exact (MK_COMB (@lem4067046) (@lem4067045 _47537 _47539)). Qed.
Lemma lem4067049 (a : Prop) (b : Prop) : (term1765 a b) = (term1766 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4067050 (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1935 _47540 _47537 _47538) = (term1936 _47540 _47537 _47538).
Proof. exact (@lem4067049 (term1893 _47538 _47540) (term1920 _47537 _47538)). Qed.
Lemma lem4067052 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4067053 (_47538 : nat) (_47540 : nat) : (term1907 _47538 _47540) = (_47538 = _47540).
Proof. exact (@lem4067052 (_47538 = _47540)). Qed.
Lemma lem4067054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4067055 (_47538 : nat) (_47540 : nat) : (term1937 _47538 _47540) = (term1938 _47538 _47540).
Proof. exact (MK_COMB (@lem4067054) (@lem4067053 _47538 _47540)). Qed.
Lemma lem4067057 (a : Prop) : (term1769 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4067058 (_47537 : nat -> Prop) (_47538 : nat) : (term1939 _47537 _47538) = (@I (nat -> Prop) _47537 _47538).
Proof. exact (@lem4067057 (@I (nat -> Prop) _47537 _47538)). Qed.
Lemma lem4067059 (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1936 _47540 _47537 _47538) = (term1940 _47540 _47537 _47538).
Proof. exact (MK_COMB (@lem4067055 _47538 _47540) (@lem4067058 _47537 _47538)). Qed.
Lemma lem4067060 (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1935 _47540 _47537 _47538) = (term1940 _47540 _47537 _47538).
Proof. exact (TRANS (@lem4067050 _47540 _47537 _47538) (@lem4067059 _47540 _47537 _47538)). Qed.
Lemma lem4067061 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1931 _47539 _47540 _47537 _47538) = (term1941 _47539 _47540 _47537 _47538).
Proof. exact (MK_COMB (@lem4067047 _47537 _47539) (@lem4067060 _47540 _47537 _47538)). Qed.
Lemma lem4067062 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1930 _47539 _47540 _47537 _47538) = (term1941 _47539 _47540 _47537 _47538).
Proof. exact (TRANS (@lem4067042 _47539 _47540 _47537 _47538) (@lem4067061 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067063 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4067064 (_47539 : nat -> Prop) (_47540 : nat) (_47537 : nat -> Prop) (_47538 : nat) : (term1942 _47539 _47540 _47537 _47538) = (term1943 _47539 _47540 _47537 _47538).
Proof. exact (MK_COMB (@lem4067063) (@lem4067062 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067065 (_47539 : nat -> Prop) (_47540 : nat) : (@I (nat -> Prop) _47539 _47540) = (@I (nat -> Prop) _47539 _47540).
Proof. exact (eq_refl (@I (nat -> Prop) _47539 _47540)). Qed.
Lemma lem4067066 (_47537 : nat -> Prop) (_47538 : nat) (_47539 : nat -> Prop) (_47540 : nat) : (term1928 _47537 _47538 _47539 _47540) = (term1944 _47537 _47538 _47539 _47540).
Proof. exact (MK_COMB (@lem4067064 _47539 _47540 _47537 _47538) (@lem4067065 _47539 _47540)). Qed.
Lemma lem4067067 (_47537 : nat -> Prop) (_47538 : nat) (_47539 : nat -> Prop) (_47540 : nat) : (term1923 _47539 _47540 _47537 _47538) = (term1944 _47537 _47538 _47539 _47540).
Proof. exact (TRANS (@lem4067039 _47537 _47538 _47539 _47540) (@lem4067066 _47537 _47538 _47539 _47540)). Qed.
Lemma lem4067069 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1971 _102126 t n.
Proof. exact (conj (@lem4066915 n) (@lem4066922 _102126 _102133 f t n h1)). Qed.
Lemma lem4067070 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : term1972 _102126 _102133 f t n.
Proof. exact (conj (@lem4066907 _102126 _102133 x'''' y'''' s P f t n h1 h3) (@lem4067069 _102126 _102133 f t n h2)). Qed.
Lemma lem4067072 (_47537 : nat -> Prop) (_47538 : nat) (_47539 : nat -> Prop) (_47540 : nat) : term1944 _47537 _47538 _47539 _47540.
Proof. exact (EQ_MP (@lem4067067 _47537 _47538 _47539 _47540) (@lem4067036 _47539 _47540 _47537 _47538)). Qed.
Lemma lem4067073 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term1973 _102126 _102133 f t n.
Proof. exact (@lem4067072 (term1530 _102126 t) n (term1539 _102126 _102133 f t) n). Qed.
Lemma lem4067076 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : term1541 _102126 _102133 f t n.
Proof. exact (@lem4067073 _102126 _102133 f t n (@lem4067070 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4067077 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : term1918 _102126 _102133 f t n.
Proof. exact (fun h0 : term1543 _102126 _102133 f t n => @lem4067076 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4067079 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4067080 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1918 _102126 _102133 f t n) = (term1541 _102126 _102133 f t n).
Proof. exact (@lem4067079 (term1541 _102126 _102133 f t n)). Qed.
Lemma lem4067081 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : term1541 _102126 _102133 f t n.
Proof. exact (EQ_MP (@lem4067080 _102126 _102133 f t n) (@lem4067077 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4067084 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4067086 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1543 _102126 _102133 f t n) = (term1974 _102126 _102133 f t n).
Proof. exact (@lem4067084 (term1541 _102126 _102133 f t n)). Qed.
Lemma lem4067089 {_102126 _102133 : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1547 _102126 _102133 f t n) : term1974 _102126 _102133 f t n.
Proof. exact (EQ_MP (@lem4067086 _102126 _102133 f t n) (@lem4058815 _102126 _102133 f t n h1)). Qed.
Lemma lem4067092 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : False.
Proof. exact (@lem4067089 _102126 _102133 f t n h2 (@lem4067081 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4067093 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : term1835.
Proof. exact (fun h0 : ~ False => @lem4067092 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3). Qed.
Lemma lem4067095 (p : Prop) : (term1760 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4067096 : term1835 = False.
Proof. exact (@lem4067095 False). Qed.
Lemma lem4067097 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1547 _102126 _102133 f t n) (h3 : term1595 _102126 _102133 s P f t n) : False.
Proof. exact (EQ_MP (@lem4067096) (@lem4067093 _102126 _102133 x'''' y'''' s P f t n h1 h2 h3)). Qed.
Lemma lem4067098 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term1595 _102126 _102133 s P f t n) : False.
Proof. exact (or_elim (@lem4049392 _102126 _102133 s P f t n h2) (fun h0 : term1553 _102126 _102133 f t n => @lem4065017 _102126 _102133 x'''' y'''' s P f t n h1 h2 h0) (fun h0 : term1547 _102126 _102133 f t n => @lem4067097 _102126 _102133 x'''' y'''' s P f t n h1 h0 h2)). Qed.
Lemma lem4067099 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1612 _102126 _102133 s P f t) : False.
Proof. exact (or_elim (@lem4049380 _102126 _102133 s P f t h2) (fun h0 : term1608 _102126 _102133 f t => @lem4061491 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h2 h0) (fun h0 : term1603 _102126 _102133 f t => @lem4063069 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h0 h2)). Qed.
Lemma lem4067100 {_102126 _102133 : Type'} (x'''''''''''''' : type529 _102126 _102133) (y'''''''''''''' : type529 _102126 _102133) (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term568 _102126 _102133 x'''''''''''''' y'''''''''''''') (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (or_elim (@lem4045742 _102126 _102133 s P f t n h3) (fun h0 : term1612 _102126 _102133 s P f t => @lem4067099 _102126 _102133 x'''''''''''''' y'''''''''''''' s P f t h1 h0) (fun h0 : term1595 _102126 _102133 s P f t n => @lem4067098 _102126 _102133 x'''' y'''' s P f t n h2 h0)). Qed.
Lemma lem4067101 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x'''''''''''''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term1360 _102126 _102133 x'''' y'''') (h2 : term571 _102126 _102133 x'''''''''''''') (h3 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045190 _102126 _102133 x'''''''''''''' h2) (fun y'''''''''''''' : type529 _102126 _102133 => fun h0 : term570 _102126 _102133 x'''''''''''''' y'''''''''''''' => @lem4067100 _102126 _102133 x'''''''''''''' y'''''''''''''' x'''' y'''' s P f t n h0 h1 h3)). Qed.
Lemma lem4067102 {_102126 _102133 : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4039918 _102126 _102133 h1) (fun x'''''''''''''' : type529 _102126 _102133 => fun h0 : term572 _102126 _102133 x'''''''''''''' => @lem4067101 _102126 _102133 x'''' y'''' x'''''''''''''' s P f t n h2 h0 h3)). Qed.
Lemma lem4067103 {_102126 _102133 B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x''''''''''''' : type529 _102126 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term571 _102126 B x''''''''''''') (h4 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045188 _102126 B x''''''''''''' h3) (fun y''''''''''''' : type529 _102126 B => fun h0 : term570 _102126 B x''''''''''''' y''''''''''''' => @lem4067102 _102126 _102133 x'''' y'''' s P f t n h1 h2 h4)). Qed.
Lemma lem4067104 {_102126 _102133 B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4040275 _102126 B h3) (fun x''''''''''''' : type529 _102126 B => fun h0 : term572 _102126 B x''''''''''''' => @lem4067103 _102126 _102133 B x'''' y'''' x''''''''''''' s P f t n h1 h2 h0 h4)). Qed.
Lemma lem4067105 {_102126 _102133 B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x'''''''''''' : type529 _102133 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term571 _102133 B x'''''''''''') (h5 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045186 _102133 B x'''''''''''' h4) (fun y'''''''''''' : type529 _102133 B => fun h0 : term570 _102133 B x'''''''''''' y'''''''''''' => @lem4067104 _102126 _102133 B x'''' y'''' s P f t n h1 h2 h3 h5)). Qed.
Lemma lem4067106 {_102126 _102133 B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4040632 _102133 B h4) (fun x'''''''''''' : type529 _102133 B => fun h0 : term572 _102133 B x'''''''''''' => @lem4067105 _102126 _102133 B x'''' y'''' x'''''''''''' s P f t n h1 h2 h3 h0 h5)). Qed.
Lemma lem4067107 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x''''''''''' : type791 _102126 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term727 _102126 A x''''''''''') (h6 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045184 _102126 A x''''''''''' h5) (fun y''''''''''' : type791 _102126 A => fun h0 : term726 _102126 A x''''''''''' y''''''''''' => @lem4067106 _102126 _102133 B x'''' y'''' s P f t n h1 h2 h3 h4 h6)). Qed.
Lemma lem4067108 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4040989 _102126 A h5) (fun x''''''''''' : type791 _102126 A => fun h0 : term728 _102126 A x''''''''''' => @lem4067107 _102126 _102133 A B x'''' y'''' x''''''''''' s P f t n h1 h2 h3 h4 h0 h6)). Qed.
Lemma lem4067109 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x'''''''''' : type791 _102133 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term727 _102133 A x'''''''''') (h7 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045182 _102133 A x'''''''''' h6) (fun y'''''''''' : type791 _102133 A => fun h0 : term726 _102133 A x'''''''''' y'''''''''' => @lem4067108 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h7)). Qed.
Lemma lem4067110 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4041346 _102133 A h6) (fun x'''''''''' : type791 _102133 A => fun h0 : term728 _102133 A x'''''''''' => @lem4067109 _102126 _102133 A B x'''' y'''' x'''''''''' s P f t n h1 h2 h3 h4 h5 h0 h7)). Qed.
Lemma lem4067111 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x''''''''' : type485 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term883 A x''''''''') (h8 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045180 A x''''''''' h7) (fun y''''''''' : type485 A => fun h0 : term882 A x''''''''' y''''''''' => @lem4067110 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h6 h8)). Qed.
Lemma lem4067112 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4041703 A h7) (fun x''''''''' : type485 A => fun h0 : term884 A x''''''''' => @lem4067111 _102126 _102133 A B x'''' y'''' x''''''''' s P f t n h1 h2 h3 h4 h5 h6 h0 h8)). Qed.
Lemma lem4067113 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x'''''''' : type529 A B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term571 A B x'''''''') (h9 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045178 A B x'''''''' h8) (fun y'''''''' : type529 A B => fun h0 : term570 A B x'''''''' y'''''''' => @lem4067112 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h6 h7 h9)). Qed.
Lemma lem4067114 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4042060 A B h8) (fun x'''''''' : type529 A B => fun h0 : term572 A B x'''''''' => @lem4067113 _102126 _102133 A B x'''' y'''' x'''''''' s P f t n h1 h2 h3 h4 h5 h6 h7 h0 h9)). Qed.
Lemma lem4067115 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x''''''' : type694 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term1039 A x''''''') (h10 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045176 A x''''''' h9) (fun y''''''' : type694 A => fun h0 : term1038 A x''''''' y''''''' => @lem4067114 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h10)). Qed.
Lemma lem4067116 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4042417 A h9) (fun x''''''' : type694 A => fun h0 : term1040 A x''''''' => @lem4067115 _102126 _102133 A B x'''' y'''' x''''''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h0 h10)). Qed.
Lemma lem4067117 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x'''''' : type485 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term883 B x'''''') (h11 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045174 B x'''''' h10) (fun y'''''' : type485 B => fun h0 : term882 B x'''''' y'''''' => @lem4067116 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h11)). Qed.
Lemma lem4067118 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4042774 B h10) (fun x'''''' : type485 B => fun h0 : term884 B x'''''' => @lem4067117 _102126 _102133 A B x'''' y'''' x'''''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h11)). Qed.
Lemma lem4067119 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (x''''' : type969 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term1201 B x''''') (h12 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045172 B x''''' h11) (fun y''''' : type969 B => fun h0 : term1200 B x''''' y''''' => @lem4067118 _102126 _102133 A B x'''' y'''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h12)). Qed.
Lemma lem4067120 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (y'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term1360 _102126 _102133 x'''' y'''') (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term234 B) (h12 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4043131 B h11) (fun x''''' : type969 B => fun h0 : term1202 B x''''' => @lem4067119 _102126 _102133 A B x'''' y'''' x''''' s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h0 h12)). Qed.
Lemma lem4067121 {_102126 _102133 A B : Type'} (x'''' : type529 _102126 _102133) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term230 A B) (h8 : term233 A) (h9 : term232 B) (h10 : term234 B) (h11 : term1363 _102126 _102133 x'''') (h12 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045170 _102126 _102133 x'''' h11) (fun y'''' : type529 _102126 _102133 => fun h0 : term1362 _102126 _102133 x'''' y'''' => @lem4067120 _102126 _102133 A B x'''' y'''' s P f t n h1 h0 h2 h3 h4 h5 h6 h7 h8 h9 h10 h12)). Qed.
Lemma lem4067122 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term234 B) (h12 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4043537 _102126 _102133 h2) (fun x'''' : type529 _102126 _102133 => fun h0 : term1364 _102126 _102133 x'''' => @lem4067121 _102126 _102133 A B x'''' s P f t n h1 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0 h12)). Qed.
Lemma lem4067123 {_102126 _102133 A B : Type'} (x''' : type529 _102126 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term234 B) (h12 : term1363 _102126 B x''') (h13 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045168 _102126 B x''' h12) (fun y''' : type529 _102126 B => fun h0 : term1362 _102126 B x''' y''' => @lem4067122 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h13)). Qed.
Lemma lem4067124 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term231 _102126 A) (h7 : term231 _102133 A) (h8 : term232 A) (h9 : term230 A B) (h10 : term233 A) (h11 : term232 B) (h12 : term234 B) (h13 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4043943 _102126 B h4) (fun x''' : type529 _102126 B => fun h0 : term1364 _102126 B x''' => @lem4067123 _102126 _102133 A B x''' s P f t n h1 h2 h3 h5 h6 h7 h8 h9 h10 h11 h12 h0 h13)). Qed.
Lemma lem4067125 {_102126 _102133 A B : Type'} (x'' : type529 _102133 B) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term231 _102126 A) (h7 : term231 _102133 A) (h8 : term232 A) (h9 : term230 A B) (h10 : term233 A) (h11 : term232 B) (h12 : term234 B) (h13 : term1363 _102133 B x'') (h14 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045166 _102133 B x'' h13) (fun y'' : type529 _102133 B => fun h0 : term1362 _102133 B x'' y'' => @lem4067124 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h14)). Qed.
Lemma lem4067126 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term231 _102133 A) (h9 : term232 A) (h10 : term230 A B) (h11 : term233 A) (h12 : term232 B) (h13 : term234 B) (h14 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4044349 _102133 B h6) (fun x'' : type529 _102133 B => fun h0 : term1364 _102133 B x'' => @lem4067125 _102126 _102133 A B x'' s P f t n h1 h2 h3 h4 h5 h7 h8 h9 h10 h11 h12 h13 h0 h14)). Qed.
Lemma lem4067127 {_102126 _102133 A B : Type'} (x' : type791 _102126 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term231 _102133 A) (h9 : term232 A) (h10 : term230 A B) (h11 : term233 A) (h12 : term232 B) (h13 : term234 B) (h14 : term1524 _102126 A x') (h15 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045164 _102126 A x' h14) (fun y' : type791 _102126 A => fun h0 : term1523 _102126 A x' y' => @lem4067126 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h15)). Qed.
Lemma lem4067128 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term229 _102126 A) (h9 : term231 _102133 A) (h10 : term232 A) (h11 : term230 A B) (h12 : term233 A) (h13 : term232 B) (h14 : term234 B) (h15 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4044755 _102126 A h8) (fun x' : type791 _102126 A => fun h0 : term1525 _102126 A x' => @lem4067127 _102126 _102133 A B x' s P f t n h1 h2 h3 h4 h5 h6 h7 h9 h10 h11 h12 h13 h14 h0 h15)). Qed.
Lemma lem4067129 {_102126 _102133 A B : Type'} (x : type791 _102133 A) (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term229 _102126 A) (h9 : term231 _102133 A) (h10 : term232 A) (h11 : term230 A B) (h12 : term233 A) (h13 : term232 B) (h14 : term234 B) (h15 : term1524 _102133 A x) (h16 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045162 _102133 A x h15) (fun y : type791 _102133 A => fun h0 : term1523 _102133 A x y => @lem4067128 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h16)). Qed.
Lemma lem4067130 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term229 _102126 A) (h9 : term231 _102133 A) (h10 : term229 _102133 A) (h11 : term232 A) (h12 : term230 A B) (h13 : term233 A) (h14 : term232 B) (h15 : term234 B) (h16 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (ex_elim (@lem4045161 _102133 A h10) (fun x : type791 _102133 A => fun h0 : term1525 _102133 A x => @lem4067129 _102126 _102133 A B x s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h11 h12 h13 h14 h15 h0 h16)). Qed.
Lemma lem4067131 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term229 _102126 A) (h9 : term231 _102133 A) (h10 : term232 A) (h11 : term230 A B) (h12 : term233 A) (h13 : term232 B) (h14 : term234 B) (h15 : term227 _102126 _102133 s P f t n) : term239 _102133 A.
Proof. exact (fun h0 : term229 _102133 A => @lem4067130 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h10 h11 h12 h13 h14 h15). Qed.
Lemma lem4067132 {_102133 A : Type'} : (term239 _102133 A) = (term240 _102133 A).
Proof. exact (@lem69 (term229 _102133 A)). Qed.
Lemma lem4067133 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term229 _102126 A) (h9 : term231 _102133 A) (h10 : term232 A) (h11 : term230 A B) (h12 : term233 A) (h13 : term232 B) (h14 : term234 B) (h15 : term227 _102126 _102133 s P f t n) : term240 _102133 A.
Proof. exact (EQ_MP (@lem4067132 _102133 A) (@lem4067131 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15)). Qed.
Lemma lem4067134 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term228 _102133 B) (h7 : term231 _102126 A) (h8 : term231 _102133 A) (h9 : term232 A) (h10 : term230 A B) (h11 : term233 A) (h12 : term232 B) (h13 : term234 B) (h14 : term227 _102126 _102133 s P f t n) : term243 _102126 _102133 A.
Proof. exact (fun h0 : term229 _102126 A => @lem4067133 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h0 h8 h9 h10 h11 h12 h13 h14). Qed.
Lemma lem4067135 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term228 _102126 B) (h5 : term230 _102133 B) (h6 : term231 _102126 A) (h7 : term231 _102133 A) (h8 : term232 A) (h9 : term230 A B) (h10 : term233 A) (h11 : term232 B) (h12 : term234 B) (h13 : term227 _102126 _102133 s P f t n) : term246 _102126 _102133 A B.
Proof. exact (fun h0 : term228 _102133 B => @lem4067134 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h0 h6 h7 h8 h9 h10 h11 h12 h13). Qed.
Lemma lem4067136 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term228 _102126 _102133) (h3 : term230 _102126 B) (h4 : term230 _102133 B) (h5 : term231 _102126 A) (h6 : term231 _102133 A) (h7 : term232 A) (h8 : term230 A B) (h9 : term233 A) (h10 : term232 B) (h11 : term234 B) (h12 : term227 _102126 _102133 s P f t n) : term248 _102126 _102133 A B.
Proof. exact (fun h0 : term228 _102126 B => @lem4067135 _102126 _102133 A B s P f t n h1 h2 h3 h0 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4067137 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term230 A B) (h8 : term233 A) (h9 : term232 B) (h10 : term234 B) (h11 : term227 _102126 _102133 s P f t n) : term250 _102126 _102133 A B.
Proof. exact (fun h0 : term228 _102126 _102133 => @lem4067136 _102126 _102133 A B s P f t n h1 h0 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4067138 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term230 A B) (h8 : term233 A) (h9 : term232 B) (h10 : term227 _102126 _102133 s P f t n) : term253 _102126 _102133 A B.
Proof. exact (fun h0 : term234 B => @lem4067137 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h10). Qed.
Lemma lem4067139 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term230 A B) (h8 : term233 A) (h9 : term227 _102126 _102133 s P f t n) : term256 _102126 _102133 A B.
Proof. exact (fun h0 : term232 B => @lem4067138 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h8 h0 h9). Qed.
Lemma lem4067140 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term230 A B) (h8 : term227 _102126 _102133 s P f t n) : term259 _102126 _102133 A B.
Proof. exact (fun h0 : term233 A => @lem4067139 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h7 h0 h8). Qed.
Lemma lem4067141 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term232 A) (h7 : term227 _102126 _102133 s P f t n) : term262 _102126 _102133 A B.
Proof. exact (fun h0 : term230 A B => @lem4067140 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h6 h0 h7). Qed.
Lemma lem4067142 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term231 _102133 A) (h6 : term227 _102126 _102133 s P f t n) : term264 _102126 _102133 A B.
Proof. exact (fun h0 : term232 A => @lem4067141 _102126 _102133 A B s P f t n h1 h2 h3 h4 h5 h0 h6). Qed.
Lemma lem4067143 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term231 _102126 A) (h5 : term227 _102126 _102133 s P f t n) : term267 _102126 _102133 A B.
Proof. exact (fun h0 : term231 _102133 A => @lem4067142 _102126 _102133 A B s P f t n h1 h2 h3 h4 h0 h5). Qed.
Lemma lem4067144 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term230 _102133 B) (h4 : term227 _102126 _102133 s P f t n) : term269 _102126 _102133 A B.
Proof. exact (fun h0 : term231 _102126 A => @lem4067143 _102126 _102133 A B s P f t n h1 h2 h3 h0 h4). Qed.
Lemma lem4067145 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term230 _102126 B) (h3 : term227 _102126 _102133 s P f t n) : term271 _102126 _102133 A B.
Proof. exact (fun h0 : term230 _102133 B => @lem4067144 _102126 _102133 A B s P f t n h1 h2 h0 h3). Qed.
Lemma lem4067146 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term230 _102126 _102133) (h2 : term227 _102126 _102133 s P f t n) : term273 _102126 _102133 A B.
Proof. exact (fun h0 : term230 _102126 B => @lem4067145 _102126 _102133 A B s P f t n h1 h0 h2). Qed.
Lemma lem4067147 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term275 _102126 _102133 A B.
Proof. exact (fun h0 : term230 _102126 _102133 => @lem4067146 _102126 _102133 A B s P f t n h0 h1). Qed.
Lemma lem4067148 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term277 _102126 _102133 A B s P f t n.
Proof. exact (fun h0 : term227 _102126 _102133 s P f t n => @lem4067147 _102126 _102133 A B s P f t n h0). Qed.
Lemma lem4067153 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term281 _102126 _102133 A B P f t n.
Proof. exact (fun s : _102126 -> Prop => @lem4067148 _102126 _102133 A B s P f t n). Qed.
Lemma lem4067158 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term285 _102126 _102133 A B f t n.
Proof. exact (fun P : type686 _102133 => @lem4067153 _102126 _102133 A B P f t n). Qed.
Lemma lem4067163 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : term289 _102126 _102133 A B t n.
Proof. exact (fun f : _102126 -> _102133 => @lem4067158 _102126 _102133 A B f t n). Qed.
Lemma lem4067168 {_102126 _102133 A B : Type'} (n : nat) : term293 _102126 _102133 A B n.
Proof. exact (fun t : _102126 -> Prop => @lem4067163 _102126 _102133 A B t n). Qed.
Lemma lem4067173 {_102126 _102133 A B : Type'} : term297 _102126 _102133 A B.
Proof. exact (fun n : nat => @lem4067168 _102126 _102133 A B n). Qed.
Lemma lem4067174 {_102126 _102133 A B : Type'} : term296 _102126 _102133 A B.
Proof. exact (EQ_MP (@lem4039305 _102126 _102133 A B) (@lem4067173 _102126 _102133 A B)). Qed.
Lemma lem4067175 {_102126 _102133 A B : Type'} (n : nat) : term1975 _102126 _102133 A B n.
Proof. exact (@lem4067174 _102126 _102133 A B n). Qed.
Lemma lem4067176 {_102126 _102133 A B : Type'} (n : nat) : (term1975 _102126 _102133 A B n) = (term292 _102126 _102133 A B n).
Proof. exact (eq_refl (term1975 _102126 _102133 A B n)). Qed.
Lemma lem4067177 {_102126 _102133 A B : Type'} (n : nat) : term292 _102126 _102133 A B n.
Proof. exact (EQ_MP (@lem4067176 _102126 _102133 A B n) (@lem4067175 _102126 _102133 A B n)). Qed.
Lemma lem4067178 {_102126 _102133 A B : Type'} (n : nat) (t : _102126 -> Prop) : term1976 _102126 _102133 A B n t.
Proof. exact (@lem4067177 _102126 _102133 A B n t). Qed.
Lemma lem4067179 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : (term1976 _102126 _102133 A B n t) = (term288 _102126 _102133 A B t n).
Proof. exact (eq_refl (term1976 _102126 _102133 A B n t)). Qed.
Lemma lem4067180 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) : term288 _102126 _102133 A B t n.
Proof. exact (EQ_MP (@lem4067179 _102126 _102133 A B t n) (@lem4067178 _102126 _102133 A B n t)). Qed.
Lemma lem4067181 {_102126 _102133 A B : Type'} (t : _102126 -> Prop) (n : nat) (f : _102126 -> _102133) : term1977 _102126 _102133 A B t n f.
Proof. exact (@lem4067180 _102126 _102133 A B t n f). Qed.
Lemma lem4067182 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1977 _102126 _102133 A B t n f) = (term284 _102126 _102133 A B f t n).
Proof. exact (eq_refl (term1977 _102126 _102133 A B t n f)). Qed.
Lemma lem4067183 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term284 _102126 _102133 A B f t n.
Proof. exact (EQ_MP (@lem4067182 _102126 _102133 A B f t n) (@lem4067181 _102126 _102133 A B t n f)). Qed.
Lemma lem4067184 {_102126 _102133 A B : Type'} (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (P : type686 _102133) : term1978 _102126 _102133 A B f t n P.
Proof. exact (@lem4067183 _102126 _102133 A B f t n P). Qed.
Lemma lem4067185 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1978 _102126 _102133 A B f t n P) = (term280 _102126 _102133 A B P f t n).
Proof. exact (eq_refl (term1978 _102126 _102133 A B f t n P)). Qed.
Lemma lem4067186 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term280 _102126 _102133 A B P f t n.
Proof. exact (EQ_MP (@lem4067185 _102126 _102133 A B P f t n) (@lem4067184 _102126 _102133 A B f t n P)). Qed.
Lemma lem4067187 {_102126 _102133 A B : Type'} (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (s : _102126 -> Prop) : term1979 _102126 _102133 A B P f t n s.
Proof. exact (@lem4067186 _102126 _102133 A B P f t n s). Qed.
Lemma lem4067188 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term1979 _102126 _102133 A B P f t n s) = (term235 _102126 _102133 A B s P f t n).
Proof. exact (eq_refl (term1979 _102126 _102133 A B P f t n s)). Qed.
Lemma lem4067189 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term235 _102126 _102133 A B s P f t n.
Proof. exact (EQ_MP (@lem4067188 _102126 _102133 A B s P f t n) (@lem4067187 _102126 _102133 A B P f t n s)). Qed.
Lemma lem4067191 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term235 _102126 _102133 A B s P f t n.
Proof. exact (@lem4037505 _102126 _102133 A B s P f t n (@lem4067189 _102126 _102133 A B s P f t n)). Qed.
Lemma lem4067192 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term274 _102126 _102133 A B.
Proof. exact (@lem4067191 _102126 _102133 A B s P f t n (@lem4037453 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4067193 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term272 _102126 _102133 A B.
Proof. exact (@lem4067192 _102126 _102133 A B s P f t n h1 (@lem4037482 _102126 _102133)). Qed.
Lemma lem4067194 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term270 _102126 _102133 A B.
Proof. exact (@lem4067193 _102126 _102133 A B s P f t n h1 (@lem4037466 _102126 B)). Qed.
Lemma lem4067195 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term268 _102126 _102133 A B.
Proof. exact (@lem4067194 _102126 _102133 A B s P f t n h1 (@lem4037468 _102133 B)). Qed.
Lemma lem4067196 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term266 _102126 _102133 A B.
Proof. exact (@lem4067195 _102126 _102133 A B s P f t n h1 (@lem4037470 _102126 A)). Qed.
Lemma lem4067197 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term263 _102126 _102133 A B.
Proof. exact (@lem4067196 _102126 _102133 A B s P f t n h1 (@lem4037469 _102133 A)). Qed.
Lemma lem4067198 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term261 _102126 _102133 A B.
Proof. exact (@lem4067197 _102126 _102133 A B s P f t n h1 (@lem4037471 A)). Qed.
Lemma lem4067199 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term258 _102126 _102133 A B.
Proof. exact (@lem4067198 _102126 _102133 A B s P f t n h1 (@lem4037467 A B)). Qed.
Lemma lem4067200 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term255 _102126 _102133 A B.
Proof. exact (@lem4067199 _102126 _102133 A B s P f t n h1 (@lem4037472 A)). Qed.
Lemma lem4067201 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term252 _102126 _102133 A B.
Proof. exact (@lem4067200 _102126 _102133 A B s P f t n h1 (@lem4037478 B)). Qed.
Lemma lem4067202 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term249 _102126 _102133 A B.
Proof. exact (@lem4067201 _102126 _102133 A B s P f t n h1 (@lem4037477 B)). Qed.
Lemma lem4067203 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term247 _102126 _102133 A B.
Proof. exact (@lem4067202 _102126 _102133 A B s P f t n h1 (@lem4037463 _102126 _102133)). Qed.
Lemma lem4067204 {_102126 _102133 A B : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term245 _102126 _102133 A B.
Proof. exact (@lem4067203 _102126 _102133 A B s P f t n h1 (@lem4037454 _102126 B)). Qed.
Lemma lem4067205 {_102126 _102133 A : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term242 _102126 _102133 A.
Proof. exact (@lem4067204 _102126 _102133 A Prop s P f t n h1 (@lem4037457 _102133 Prop)). Qed.
Lemma lem4067206 {_102126 _102133 A : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : term239 _102133 A.
Proof. exact (@lem4067205 _102126 _102133 A s P f t n h1 (@lem4037456 _102126 A)). Qed.
Lemma lem4067207 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (@lem4067206 _102126 _102133 Prop s P f t n h1 (@lem4037455 _102133 Prop)). Qed.
Lemma lem4067208 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : (term227 _102126 _102133 s P f t n) = False.
Proof. exact (prop_ext (fun h2 : term227 _102126 _102133 s P f t n => @lem4067207 _102126 _102133 s P f t n h1) (fun h2 : False => @lem4037453 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4067209 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) (h1 : term227 _102126 _102133 s P f t n) : False.
Proof. exact (EQ_MP (@lem4067208 _102126 _102133 s P f t n h1) (@lem4037453 _102126 _102133 s P f t n h1)). Qed.
Lemma lem4067210 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term226 _102126 _102133 s P f t n.
Proof. exact (fun h0 : term227 _102126 _102133 s P f t n => @lem4067209 _102126 _102133 s P f t n h0). Qed.
Lemma lem4067211 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : term225 _102126 _102133 s P f t n.
Proof. exact (EQ_MP (@lem4037452 _102126 _102133 s P f t n) (@lem4067210 _102126 _102133 s P f t n)). Qed.
Lemma lem4067212 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (t : _102126 -> Prop) (n : nat) : (term203 _102126 _102133 s P f t n) = (term220 _102126 _102133 s P f t n).
Proof. exact (@lem4037448 _102126 _102133 s P f t n (@lem4067211 _102126 _102133 s P f t n)). Qed.
Lemma lem4067215 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term207 _102126 _102133 s P f n) = (term221 _102126 _102133 s P f n).
Proof. exact (fun_ext (fun t : _102126 -> Prop => @lem4067212 _102126 _102133 s P f t n)). Qed.
Lemma lem4067216 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term208 _102126 _102133 s P f n) = (term222 _102126 _102133 s P f n).
Proof. exact (MK_COMB (@lem4037445 _102126) (@lem4067215 _102126 _102133 s P f n)). Qed.
Lemma lem4067217 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term195 _102126 _102133 s P f n) = (term159 _102126 _102133 s P f n).
Proof. exact (EQ_MP (@lem4037444 _102126 _102133 s P f n) (@lem4067216 _102126 _102133 s P f n)). Qed.
Lemma lem4067218 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) (n : nat) : (term150 _102126 _102133 f s P n) = (term159 _102126 _102133 s P f n).
Proof. exact (EQ_MP (@lem4037328 _102126 _102133 s P f n) (@lem4067217 _102126 _102133 s P f n)). Qed.
Lemma lem4067223 {_102126 _102133 : Type'} (s : _102126 -> Prop) (P : type686 _102133) (f : _102126 -> _102133) : term163 _102126 _102133 s P f.
Proof. exact (fun n : nat => @lem4067218 _102126 _102133 s P f n). Qed.
Lemma lem4067228 {_102126 _102133 : Type'} (P : type686 _102133) (f : _102126 -> _102133) : term167 _102126 _102133 P f.
Proof. exact (fun s : _102126 -> Prop => @lem4067223 _102126 _102133 s P f). Qed.
Lemma lem4067233 {_102126 _102133 : Type'} (P : type686 _102133) : term171 _102126 _102133 P.
Proof. exact (fun f : _102126 -> _102133 => @lem4067228 _102126 _102133 P f). Qed.
Lemma lem4067238 {_102126 _102133 : Type'} : term175 _102126 _102133.
Proof. exact (fun P : type686 _102133 => @lem4067233 _102126 _102133 P). Qed.
Lemma lem4067239 {_102126 _102133 : Type'} : term174 _102126 _102133.
Proof. exact (EQ_MP (@lem4037237 _102126 _102133) (@lem4067238 _102126 _102133)). Qed.
