require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
require open hol-light.hol_axioms;
require open hol-light.hol_type_abbrevs;
require open hol-light.finite_index_term_abbrevs;
private symbol lem7616091 [_139760 _139770] : Prf (= (@﹩ _139760 _139770) (term0 _139760 _139770)) ≔ @﹩_def _139760 _139770;
private symbol lem7616092 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (= _98029 _98029) ≔ REFL _98029;
private symbol lem7616093 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (= ((@﹩ _139760 _139770) _98029) (term1 _139760 _139770 _98029)) ≔ MK_COMB (@lem7616091 _139760 _139770) (@lem7616092 _139760 _139770 _98029);
private symbol lem7616094 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (= (term1 _139760 _139770 _98029) (term2 _139760 _139770 _98029)) ≔ REFL (term1 _139760 _139770 _98029);
private symbol lem7616095 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (= ((@﹩ _139760 _139770) _98029) (term2 _139760 _139770 _98029)) ≔ TRANS (@lem7616093 _139760 _139770 _98029) (@lem7616094 _139760 _139770 _98029);
private symbol lem7616096 (_98030 : El num) : Prf (= _98030 _98030) ≔ REFL _98030;
private symbol lem7616097 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (= ((@﹩ _139760 _139770) _98029 _98030) (term3 _139760 _139770 _98029 _98030)) ≔ MK_COMB (@lem7616095 _139760 _139770 _98029) (@lem7616096 _98030);
private symbol lem7616098 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (= (term3 _139760 _139770 _98029 _98030) (term4 _139760 _139770 _98029 _98030)) ≔ REFL (term3 _139760 _139770 _98029 _98030);
private symbol lem7616099 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (= ((@﹩ _139760 _139770) _98029 _98030) (term4 _139760 _139770 _98029 _98030)) ≔ TRANS (@lem7616097 _139760 _139770 _98029 _98030) (@lem7616098 _139760 _139770 _98029 _98030);
private symbol lem7616100 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (term5 _139760 _139770 _98029) ≔ λ _98030 : El num, (@lem7616099 _139760 _139770 _98029 _98030);
private symbol lem7616101 [_139760 _139770] : Prf (term6 _139760 _139770) ≔ λ _98029 : El (cart _139760 _139770), (@lem7616100 _139760 _139770 _98029);
private symbol lem7616102 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (term7 _139760 _139770 _98029) ≔ (@lem7616101 _139760 _139770) _98029;
private symbol lem7616103 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (= (term7 _139760 _139770 _98029) (term5 _139760 _139770 _98029)) ≔ REFL (term7 _139760 _139770 _98029);
private symbol lem7616104 [_139760 _139770] (_98029 : El (cart _139760 _139770)) : Prf (term5 _139760 _139770 _98029) ≔ EQ_MP (@lem7616103 _139760 _139770 _98029) (@lem7616102 _139760 _139770 _98029);
private symbol lem7616105 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (term8 _139760 _139770 _98029 _98030) ≔ (@lem7616104 _139760 _139770 _98029) _98030;
private symbol lem7616106 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (= (term8 _139760 _139770 _98029 _98030) (= ((@﹩ _139760 _139770) _98029 _98030) (term4 _139760 _139770 _98029 _98030))) ≔ REFL (term8 _139760 _139770 _98029 _98030);
private symbol lem7616107 [_139760 _139770] (_98029 : El (cart _139760 _139770)) (_98030 : El num) : Prf (= ((@﹩ _139760 _139770) _98029 _98030) (term4 _139760 _139770 _98029 _98030)) ≔ EQ_MP (@lem7616106 _139760 _139770 _98029 _98030) (@lem7616105 _139760 _139770 _98029 _98030);
private symbol lem7616150 [_139760 _139770] (x : El (cart _139760 _139770)) (i : El num) : Prf (= ((@﹩ _139760 _139770) x i) (term4 _139760 _139770 x i)) ≔ (@lem7616107 _139760 _139770 x i);
opaque symbol lem7616151 [_139760 _139770] (x : El (cart _139760 _139770)) : Prf (term5 _139760 _139770 x) ≔ λ i : El num, (@lem7616150 _139760 _139770 x i);
opaque symbol lem7616152 [_139760 _139770] : Prf (term6 _139760 _139770) ≔ λ x : El (cart _139760 _139770), (@lem7616151 _139760 _139770 x);
