Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm8048829_term_abbrevs.
Require Import DISJ_ASSOC_spec.
Require Import EXTENSION_spec.
Require Import PASTECART_IN_PCROSS_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17646_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18970_spec.
Require Import thm18971_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm3184736_spec.
Require Import thm3184739_spec.
Require Import thm3211609_spec.
Require Import thm3211610_spec.
Require Import thm3211662_spec.
Require Import thm3211663_spec.
Require Import thm3458960_spec.
Require Import thm3458963_spec.
Require Import thm3458971_spec.
Require Import thm3458974_spec.
Require Import thm7660850_spec.
Require Import thm7662539_spec.
Lemma lem8039578 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8039579 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8039580 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8039579 t1) (@lem8039578 t1)). Qed.
Lemma lem8039581 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8039580 t1 t2). Qed.
Lemma lem8039582 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8039583 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8039582 t1 t2) (@lem8039581 t1 t2)). Qed.
Lemma lem8039584 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8039583 t1 t2 t3). Qed.
Lemma lem8039585 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8039586 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8039585 t1 t2 t3) (@lem8039584 t1 t2 t3)). Qed.
Lemma lem8039587 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8039586 t1 t2 t3)). Qed.
Lemma lem8039588 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) : term7 _141927 _141928 _141929 s.
Proof. exact (@lem8004229 _141927 _141928 _141929 s). Qed.
Lemma lem8039589 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) : (term7 _141927 _141928 _141929 s) = (term8 _141927 _141928 _141929 s).
Proof. exact (eq_refl (term7 _141927 _141928 _141929 s)). Qed.
Lemma lem8039590 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) : term8 _141927 _141928 _141929 s.
Proof. exact (EQ_MP (@lem8039589 _141927 _141928 _141929 s) (@lem8039588 _141927 _141928 _141929 s)). Qed.
Lemma lem8039591 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) (t : type24 _141927 _141929) : term9 _141927 _141928 _141929 s t.
Proof. exact (@lem8039590 _141927 _141928 _141929 s t). Qed.
Lemma lem8039592 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) (t : type24 _141927 _141929) : (term9 _141927 _141928 _141929 s t) = (term10 _141927 _141928 _141929 s t).
Proof. exact (eq_refl (term9 _141927 _141928 _141929 s t)). Qed.
Lemma lem8039593 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) (t : type24 _141927 _141929) : term10 _141927 _141928 _141929 s t.
Proof. exact (EQ_MP (@lem8039592 _141927 _141928 _141929 s t) (@lem8039591 _141927 _141928 _141929 s t)). Qed.
Lemma lem8039594 {_141927 _141928 _141929 : Type'} (s : type24 _141927 _141928) (t : type24 _141927 _141929) (x : cart _141927 _141928) : term11 _141927 _141928 _141929 s t x.
Proof. exact (@lem8039593 _141927 _141928 _141929 s t x). Qed.
Lemma lem8039595 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (t : type24 _141927 _141929) : (term11 _141927 _141928 _141929 s t x) = (term12 _141927 _141928 _141929 x s t).
Proof. exact (eq_refl (term11 _141927 _141928 _141929 s t x)). Qed.
Lemma lem8039596 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (t : type24 _141927 _141929) : term12 _141927 _141928 _141929 x s t.
Proof. exact (EQ_MP (@lem8039595 _141927 _141928 _141929 x s t) (@lem8039594 _141927 _141928 _141929 s t x)). Qed.
Lemma lem8039597 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (t : type24 _141927 _141929) (y : cart _141927 _141929) : term13 _141927 _141928 _141929 x s t y.
Proof. exact (@lem8039596 _141927 _141928 _141929 x s t y). Qed.
Lemma lem8039598 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term13 _141927 _141928 _141929 x s t y) = ((term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t)).
Proof. exact (eq_refl (term13 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8039624 {_83095 : Type'} : term16 _83095.
Proof. exact (EQ_MP (@lem3184739 _83095) (@lem3184736 _83095)). Qed.
Lemma lem8039625 {_83095 : Type'} (p : _83095 -> Prop) : term17 _83095 p.
Proof. exact (@lem8039624 _83095 p). Qed.
Lemma lem8039626 {_83095 : Type'} (p : _83095 -> Prop) : (term17 _83095 p) = (term18 _83095 p).
Proof. exact (eq_refl (term17 _83095 p)). Qed.
Lemma lem8039627 {_83095 : Type'} (p : _83095 -> Prop) : term18 _83095 p.
Proof. exact (EQ_MP (@lem8039626 _83095 p) (@lem8039625 _83095 p)). Qed.
Lemma lem8039628 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : term19 _83095 p x.
Proof. exact (@lem8039627 _83095 p x). Qed.
Lemma lem8039629 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term19 _83095 p x) = ((term20 _83095 x p) = (p x)).
Proof. exact (eq_refl (term19 _83095 p x)). Qed.
Lemma lem8039638 {A : Type'} (s : A -> Prop) : term21 A s.
Proof. exact (@lem3181245 A s). Qed.
Lemma lem8039639 {A : Type'} (s : A -> Prop) : (term21 A s) = (term22 A s).
Proof. exact (eq_refl (term21 A s)). Qed.
Lemma lem8039640 {A : Type'} (s : A -> Prop) : term22 A s.
Proof. exact (EQ_MP (@lem8039639 A s) (@lem8039638 A s)). Qed.
Lemma lem8039641 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term23 A s t.
Proof. exact (@lem8039640 A s t). Qed.
Lemma lem8039642 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term23 A s t) = ((s = t) = (term24 A s t)).
Proof. exact (eq_refl (term23 A s t)). Qed.
Lemma lem8039652 {_89578 _89597 _89598 : Type'} : term25 _89578 _89597 _89598.
Proof. exact (EQ_MP (@lem3458963 _89578 _89597 _89598) (@lem3458960 _89578 _89597 _89598)). Qed.
Lemma lem8039653 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) : term26 _89578 _89597 _89598 P.
Proof. exact (@lem8039652 _89578 _89597 _89598 P). Qed.
Lemma lem8039654 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) : (term26 _89578 _89597 _89598 P) = (term27 _89578 _89597 _89598 P).
Proof. exact (eq_refl (term26 _89578 _89597 _89598 P)). Qed.
Lemma lem8039655 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) : term27 _89578 _89597 _89598 P.
Proof. exact (EQ_MP (@lem8039654 _89578 _89597 _89598 P) (@lem8039653 _89578 _89597 _89598 P)). Qed.
Lemma lem8039656 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) (f : type1517 _89578 _89597 _89598) : term28 _89578 _89597 _89598 P f.
Proof. exact (@lem8039655 _89578 _89597 _89598 P f). Qed.
Lemma lem8039657 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) (f : type1517 _89578 _89597 _89598) : (term28 _89578 _89597 _89598 P f) = ((term29 _89578 _89597 _89598 P f) = (term30 _89578 _89597 _89598 P f)).
Proof. exact (eq_refl (term28 _89578 _89597 _89598 P f)). Qed.
Lemma lem8039659 {_89520 _89534 : Type'} : term31 _89520 _89534.
Proof. exact (EQ_MP (@lem3458974 _89520 _89534) (@lem3458971 _89520 _89534)). Qed.
Lemma lem8039660 {_89520 _89534 : Type'} (P : _89534 -> Prop) : term32 _89520 _89534 P.
Proof. exact (@lem8039659 _89520 _89534 P). Qed.
Lemma lem8039661 {_89520 _89534 : Type'} (P : _89534 -> Prop) : (term32 _89520 _89534 P) = (term33 _89520 _89534 P).
Proof. exact (eq_refl (term32 _89520 _89534 P)). Qed.
Lemma lem8039662 {_89520 _89534 : Type'} (P : _89534 -> Prop) : term33 _89520 _89534 P.
Proof. exact (EQ_MP (@lem8039661 _89520 _89534 P) (@lem8039660 _89520 _89534 P)). Qed.
Lemma lem8039663 {_89520 _89534 : Type'} (P : _89534 -> Prop) (f : type1470 _89520 _89534) : term34 _89520 _89534 P f.
Proof. exact (@lem8039662 _89520 _89534 P f). Qed.
Lemma lem8039664 {_89520 _89534 : Type'} (P : _89534 -> Prop) (f : type1470 _89520 _89534) : (term34 _89520 _89534 P f) = ((term35 _89520 _89534 P f) = (term36 _89520 _89534 P f)).
Proof. exact (eq_refl (term34 _89520 _89534 P f)). Qed.
Lemma lem8039683 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term24 A s t).
Proof. exact (EQ_MP (@lem8039642 A s t) (@lem8039641 A s t)). Qed.
Lemma lem8039684 {_142753 _142754 _142755 : Type'} (s : type16 _142753 _142754 _142755) (t : type16 _142753 _142754 _142755) : (s = t) = (term37 _142753 _142754 _142755 s t).
Proof. exact (@lem8039683 (type2 _142753 _142754 _142755) s t). Qed.
Lemma lem8039685 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term38 _142753 _142754 _142755 f g) = (term39 _142753 _142754 _142755 f g)) = (term40 _142753 _142754 _142755 f g).
Proof. exact (@lem8039684 _142753 _142754 _142755 (term38 _142753 _142754 _142755 f g) (term39 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039691 {_140454 _140455 _140456 : Type'} (P : type16 _140454 _140455 _140456) : (term41 _140454 _140455 _140456 P) = (term42 _140454 _140455 _140456 P).
Proof. exact (EQ_MP (@lem7660850 _140454 _140455 _140456 P) (@lem7662539 _140454 _140455 _140456 P)). Qed.
Lemma lem8039692 {_142753 _142754 _142755 : Type'} (P : type16 _142753 _142754 _142755) : (term41 _142753 _142754 _142755 P) = (term42 _142753 _142754 _142755 P).
Proof. exact (@lem8039691 _142753 _142754 _142755 P). Qed.
Lemma lem8039693 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term43 _142753 _142754 _142755 f g) = (term44 _142753 _142754 _142755 f g).
Proof. exact (@lem8039692 _142753 _142754 _142755 (term45 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039694 {_142753 _142754 _142755 : Type'} (x : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term46 _142753 _142754 _142755 f g x) = ((term47 _142753 _142754 _142755 x f g) = (term48 _142753 _142754 _142755 x f g)).
Proof. exact (eq_refl (term46 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8039695 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term49 _142753 _142754 _142755 f g) = (term45 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : type2 _142753 _142754 _142755 => @lem8039694 _142753 _142754 _142755 x f g)). Qed.
Lemma lem8039696 {_142753 _142754 _142755 : Type'} : (@all (cart _142753 (finite_sum _142754 _142755))) = (@all (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@all (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039697 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term43 _142753 _142754 _142755 f g) = (term40 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039696 _142753 _142754 _142755) (@lem8039695 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039698 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8039699 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term50 _142753 _142754 _142755 f g) = (term51 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039698) (@lem8039697 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039700 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term52 _142753 _142754 _142755 f g x y) = ((term53 _142753 _142754 _142755 x y f g) = (term54 _142753 _142754 _142755 x y f g)).
Proof. exact (eq_refl (term52 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039701 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term55 _142753 _142754 _142755 f g x) = (term56 _142753 _142754 _142755 x f g).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8039700 _142753 _142754 _142755 x y f g)). Qed.
Lemma lem8039702 {_142753 _142755 : Type'} : (@all (cart _142753 _142755)) = (@all (cart _142753 _142755)).
Proof. exact (eq_refl (@all (cart _142753 _142755))). Qed.
Lemma lem8039703 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term57 _142753 _142754 _142755 f g x) = (term58 _142753 _142754 _142755 x f g).
Proof. exact (MK_COMB (@lem8039702 _142753 _142755) (@lem8039701 _142753 _142754 _142755 x f g)). Qed.
Lemma lem8039704 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term59 _142753 _142754 _142755 f g) = (term60 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8039703 _142753 _142754 _142755 x f g)). Qed.
Lemma lem8039705 {_142753 _142754 : Type'} : (@all (cart _142753 _142754)) = (@all (cart _142753 _142754)).
Proof. exact (eq_refl (@all (cart _142753 _142754))). Qed.
Lemma lem8039706 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term44 _142753 _142754 _142755 f g) = (term61 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039705 _142753 _142754) (@lem8039704 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039707 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term43 _142753 _142754 _142755 f g) = (term44 _142753 _142754 _142755 f g)) = ((term40 _142753 _142754 _142755 f g) = (term61 _142753 _142754 _142755 f g)).
Proof. exact (MK_COMB (@lem8039699 _142753 _142754 _142755 f g) (@lem8039706 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039708 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term40 _142753 _142754 _142755 f g) = (term61 _142753 _142754 _142755 f g).
Proof. exact (EQ_MP (@lem8039707 _142753 _142754 _142755 f g) (@lem8039693 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039715 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term38 _142753 _142754 _142755 f g) = (term39 _142753 _142754 _142755 f g)) = (term61 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8039685 _142753 _142754 _142755 f g) (@lem8039708 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039727 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8039728 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (s : type24 _142753 _142754) (y : cart _142753 _142755) (t : type24 _142753 _142755) : (term14 _142753 _142754 _142755 x y s t) = (term15 _142753 _142754 _142755 x s y t).
Proof. exact (@lem8039727 _142753 _142754 _142755 x s y t). Qed.
Lemma lem8039729 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (f : type56 _142753 _142754) (y : cart _142753 _142755) (g : type56 _142753 _142755) : (term53 _142753 _142754 _142755 x y f g) = (term62 _142753 _142754 _142755 x f y g).
Proof. exact (@lem8039728 _142753 _142754 _142755 x (@UNIONS (cart _142753 _142754) f) y (@UNIONS (cart _142753 _142755) g)). Qed.
Lemma lem8039732 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8039733 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (f : type56 _142753 _142754) (y : cart _142753 _142755) (g : type56 _142753 _142755) : (term63 _142753 _142754 _142755 x y f g) = (term64 _142753 _142754 _142755 x f y g).
Proof. exact (MK_COMB (@lem8039732) (@lem8039729 _142753 _142754 _142755 x f y g)). Qed.
Lemma lem8039735 {_89578 _89597 _89598 : Type'} (P : type1470 _89597 _89598) (f : type1517 _89578 _89597 _89598) : (term29 _89578 _89597 _89598 P f) = (term30 _89578 _89597 _89598 P f).
Proof. exact (EQ_MP (@lem8039657 _89578 _89597 _89598 P f) (@lem8039656 _89578 _89597 _89598 P f)). Qed.
Lemma lem8039736 {_142753 _142754 _142755 : Type'} (P : type55 _142753 _142754 _142755) (f : type54 _142753 _142754 _142755) : (term65 _142753 _142754 _142755 P f) = (term66 _142753 _142754 _142755 P f).
Proof. exact (@lem8039735 (type2 _142753 _142754 _142755) (type24 _142753 _142755) (type24 _142753 _142754) P f). Qed.
Lemma lem8039737 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term67 _142753 _142754 _142755 f g) = (term68 _142753 _142754 _142755 f g).
Proof. exact (@lem8039736 _142753 _142754 _142755 (term69 _142753 _142754 _142755 f g) (@PCROSS _142753 _142754 _142755)). Qed.
Lemma lem8039738 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term70 _142753 _142754 _142755 f g s) = (term71 _142753 _142754 _142755 s f g).
Proof. exact (eq_refl (term70 _142753 _142754 _142755 f g s)). Qed.
Lemma lem8039739 {_142753 _142755 : Type'} (t : type24 _142753 _142755) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8039740 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term72 _142753 _142754 _142755 f g s t) = (term73 _142753 _142754 _142755 s f g t).
Proof. exact (MK_COMB (@lem8039738 _142753 _142754 _142755 s f g) (@lem8039739 _142753 _142755 t)). Qed.
Lemma lem8039741 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term73 _142753 _142754 _142755 s f g t) = (term74 _142753 _142754 _142755 s f t g).
Proof. exact (eq_refl (term73 _142753 _142754 _142755 s f g t)). Qed.
Lemma lem8039742 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term72 _142753 _142754 _142755 f g s t) = (term74 _142753 _142754 _142755 s f t g).
Proof. exact (TRANS (@lem8039740 _142753 _142754 _142755 s f g t) (@lem8039741 _142753 _142754 _142755 s f t g)). Qed.
Lemma lem8039743 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) : (@SETSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop) GEN_PVAR_362) = (@SETSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop) GEN_PVAR_362).
Proof. exact (eq_refl (@SETSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop) GEN_PVAR_362)). Qed.
Lemma lem8039744 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term75 _142753 _142754 _142755 GEN_PVAR_362 f g s t) = (term76 _142753 _142754 _142755 GEN_PVAR_362 s f t g).
Proof. exact (MK_COMB (@lem8039743 _142753 _142754 _142755 GEN_PVAR_362) (@lem8039742 _142753 _142754 _142755 s f t g)). Qed.
Lemma lem8039745 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (t : type24 _142753 _142755) : (@PCROSS _142753 _142754 _142755 s t) = (@PCROSS _142753 _142754 _142755 s t).
Proof. exact (eq_refl (@PCROSS _142753 _142754 _142755 s t)). Qed.
Lemma lem8039746 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (t : type24 _142753 _142755) : (term77 _142753 _142754 _142755 GEN_PVAR_362 f g s t) = (term78 _142753 _142754 _142755 GEN_PVAR_362 f g s t).
Proof. exact (MK_COMB (@lem8039744 _142753 _142754 _142755 GEN_PVAR_362 s f t g) (@lem8039745 _142753 _142754 _142755 s t)). Qed.
Lemma lem8039747 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) : (term79 _142753 _142754 _142755 GEN_PVAR_362 f g s) = (term80 _142753 _142754 _142755 GEN_PVAR_362 f g s).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8039746 _142753 _142754 _142755 GEN_PVAR_362 f g s t)). Qed.
Lemma lem8039748 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8039749 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) : (term81 _142753 _142754 _142755 GEN_PVAR_362 f g s) = (term82 _142753 _142754 _142755 GEN_PVAR_362 f g s).
Proof. exact (MK_COMB (@lem8039748 _142753 _142755) (@lem8039747 _142753 _142754 _142755 GEN_PVAR_362 f g s)). Qed.
Lemma lem8039750 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term83 _142753 _142754 _142755 GEN_PVAR_362 f g) = (term84 _142753 _142754 _142755 GEN_PVAR_362 f g).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8039749 _142753 _142754 _142755 GEN_PVAR_362 f g s)). Qed.
Lemma lem8039751 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8039752 {_142753 _142754 _142755 : Type'} (GEN_PVAR_362 : type16 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term85 _142753 _142754 _142755 GEN_PVAR_362 f g) = (term86 _142753 _142754 _142755 GEN_PVAR_362 f g).
Proof. exact (MK_COMB (@lem8039751 _142753 _142754) (@lem8039750 _142753 _142754 _142755 GEN_PVAR_362 f g)). Qed.
Lemma lem8039753 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term87 _142753 _142754 _142755 f g) = (term88 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun GEN_PVAR_362 : type16 _142753 _142754 _142755 => @lem8039752 _142753 _142754 _142755 GEN_PVAR_362 f g)). Qed.
Lemma lem8039754 {_142753 _142754 _142755 : Type'} : (@GSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop)) = (@GSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop)).
Proof. exact (eq_refl (@GSPEC ((cart _142753 (finite_sum _142754 _142755)) -> Prop))). Qed.
Lemma lem8039755 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term89 _142753 _142754 _142755 f g) = (term90 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039754 _142753 _142754 _142755) (@lem8039753 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039756 {_142753 _142754 _142755 : Type'} : (@UNIONS (cart _142753 (finite_sum _142754 _142755))) = (@UNIONS (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@UNIONS (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039757 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term67 _142753 _142754 _142755 f g) = (term39 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039756 _142753 _142754 _142755) (@lem8039755 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039758 {_142753 _142754 _142755 : Type'} : (@eq ((cart _142753 (finite_sum _142754 _142755)) -> Prop)) = (@eq ((cart _142753 (finite_sum _142754 _142755)) -> Prop)).
Proof. exact (eq_refl (@eq ((cart _142753 (finite_sum _142754 _142755)) -> Prop))). Qed.
Lemma lem8039759 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term91 _142753 _142754 _142755 f g) = (term92 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039758 _142753 _142754 _142755) (@lem8039757 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039760 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term70 _142753 _142754 _142755 f g s) = (term71 _142753 _142754 _142755 s f g).
Proof. exact (eq_refl (term70 _142753 _142754 _142755 f g s)). Qed.
Lemma lem8039761 {_142753 _142755 : Type'} (t : type24 _142753 _142755) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8039762 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term72 _142753 _142754 _142755 f g s t) = (term73 _142753 _142754 _142755 s f g t).
Proof. exact (MK_COMB (@lem8039760 _142753 _142754 _142755 s f g) (@lem8039761 _142753 _142755 t)). Qed.
Lemma lem8039763 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term73 _142753 _142754 _142755 s f g t) = (term74 _142753 _142754 _142755 s f t g).
Proof. exact (eq_refl (term73 _142753 _142754 _142755 s f g t)). Qed.
Lemma lem8039764 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term72 _142753 _142754 _142755 f g s t) = (term74 _142753 _142754 _142755 s f t g).
Proof. exact (TRANS (@lem8039762 _142753 _142754 _142755 s f g t) (@lem8039763 _142753 _142754 _142755 s f t g)). Qed.
Lemma lem8039765 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8039766 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term93 _142753 _142754 _142755 f g s t) = (term94 _142753 _142754 _142755 s f t g).
Proof. exact (MK_COMB (@lem8039765) (@lem8039764 _142753 _142754 _142755 s f t g)). Qed.
Lemma lem8039767 {_142753 _142754 _142755 : Type'} (a : type2 _142753 _142754 _142755) (s : type24 _142753 _142754) (t : type24 _142753 _142755) : (term95 _142753 _142754 _142755 a s t) = (term95 _142753 _142754 _142755 a s t).
Proof. exact (eq_refl (term95 _142753 _142754 _142755 a s t)). Qed.
Lemma lem8039768 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) (s : type24 _142753 _142754) (t : type24 _142753 _142755) : (term96 _142753 _142754 _142755 f g a s t) = (term97 _142753 _142754 _142755 f g a s t).
Proof. exact (MK_COMB (@lem8039766 _142753 _142754 _142755 s f t g) (@lem8039767 _142753 _142754 _142755 a s t)). Qed.
Lemma lem8039769 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) (s : type24 _142753 _142754) : (term98 _142753 _142754 _142755 f g a s) = (term99 _142753 _142754 _142755 f g a s).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8039768 _142753 _142754 _142755 f g a s t)). Qed.
Lemma lem8039770 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8039771 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) (s : type24 _142753 _142754) : (term100 _142753 _142754 _142755 f g a s) = (term101 _142753 _142754 _142755 f g a s).
Proof. exact (MK_COMB (@lem8039770 _142753 _142755) (@lem8039769 _142753 _142754 _142755 f g a s)). Qed.
Lemma lem8039772 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term102 _142753 _142754 _142755 f g a) = (term103 _142753 _142754 _142755 f g a).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8039771 _142753 _142754 _142755 f g a s)). Qed.
Lemma lem8039773 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8039774 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term104 _142753 _142754 _142755 f g a) = (term105 _142753 _142754 _142755 f g a).
Proof. exact (MK_COMB (@lem8039773 _142753 _142754) (@lem8039772 _142753 _142754 _142755 f g a)). Qed.
Lemma lem8039775 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) : (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52) = (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52).
Proof. exact (eq_refl (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52)). Qed.
Lemma lem8039776 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term106 _142753 _142754 _142755 GEN_PVAR_52 f g a) = (term107 _142753 _142754 _142755 GEN_PVAR_52 f g a).
Proof. exact (MK_COMB (@lem8039775 _142753 _142754 _142755 GEN_PVAR_52) (@lem8039774 _142753 _142754 _142755 f g a)). Qed.
Lemma lem8039777 {_142753 _142754 _142755 : Type'} (a : type2 _142753 _142754 _142755) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8039778 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term108 _142753 _142754 _142755 GEN_PVAR_52 f g a) = (term109 _142753 _142754 _142755 GEN_PVAR_52 f g a).
Proof. exact (MK_COMB (@lem8039776 _142753 _142754 _142755 GEN_PVAR_52 f g a) (@lem8039777 _142753 _142754 _142755 a)). Qed.
Lemma lem8039779 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term110 _142753 _142754 _142755 GEN_PVAR_52 f g) = (term111 _142753 _142754 _142755 GEN_PVAR_52 f g).
Proof. exact (fun_ext (fun a : type2 _142753 _142754 _142755 => @lem8039778 _142753 _142754 _142755 GEN_PVAR_52 f g a)). Qed.
Lemma lem8039780 {_142753 _142754 _142755 : Type'} : (@ex (cart _142753 (finite_sum _142754 _142755))) = (@ex (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@ex (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039781 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term112 _142753 _142754 _142755 GEN_PVAR_52 f g) = (term113 _142753 _142754 _142755 GEN_PVAR_52 f g).
Proof. exact (MK_COMB (@lem8039780 _142753 _142754 _142755) (@lem8039779 _142753 _142754 _142755 GEN_PVAR_52 f g)). Qed.
Lemma lem8039782 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term114 _142753 _142754 _142755 f g) = (term115 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun GEN_PVAR_52 : type2 _142753 _142754 _142755 => @lem8039781 _142753 _142754 _142755 GEN_PVAR_52 f g)). Qed.
Lemma lem8039783 {_142753 _142754 _142755 : Type'} : (@GSPEC (cart _142753 (finite_sum _142754 _142755))) = (@GSPEC (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@GSPEC (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039784 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term68 _142753 _142754 _142755 f g) = (term116 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039783 _142753 _142754 _142755) (@lem8039782 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039785 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term67 _142753 _142754 _142755 f g) = (term68 _142753 _142754 _142755 f g)) = ((term39 _142753 _142754 _142755 f g) = (term116 _142753 _142754 _142755 f g)).
Proof. exact (MK_COMB (@lem8039759 _142753 _142754 _142755 f g) (@lem8039784 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039786 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term39 _142753 _142754 _142755 f g) = (term116 _142753 _142754 _142755 f g).
Proof. exact (EQ_MP (@lem8039785 _142753 _142754 _142755 f g) (@lem8039737 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039803 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) : (term117 _142753 _142754 _142755 x y) = (term117 _142753 _142754 _142755 x y).
Proof. exact (eq_refl (term117 _142753 _142754 _142755 x y)). Qed.
Lemma lem8039804 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term54 _142753 _142754 _142755 x y f g) = (term118 _142753 _142754 _142755 x y f g).
Proof. exact (MK_COMB (@lem8039803 _142753 _142754 _142755 x y) (@lem8039786 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039806 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term20 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem8039629 _83095 p x) (@lem8039628 _83095 p x)). Qed.
Lemma lem8039807 {_142753 _142754 _142755 : Type'} (p : type16 _142753 _142754 _142755) (x : type2 _142753 _142754 _142755) : (term119 _142753 _142754 _142755 x p) = (p x).
Proof. exact (@lem8039806 (type2 _142753 _142754 _142755) p x). Qed.
Lemma lem8039808 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term120 _142753 _142754 _142755 x y f g) = (term121 _142753 _142754 _142755 f g x y).
Proof. exact (@lem8039807 _142753 _142754 _142755 (term122 _142753 _142754 _142755 f g) (@pastecart _142753 _142754 _142755 x y)). Qed.
Lemma lem8039809 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term123 _142753 _142754 _142755 f g a) = (term105 _142753 _142754 _142755 f g a).
Proof. exact (eq_refl (term123 _142753 _142754 _142755 f g a)). Qed.
Lemma lem8039810 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) : (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52) = (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52).
Proof. exact (eq_refl (@SETSPEC (cart _142753 (finite_sum _142754 _142755)) GEN_PVAR_52)). Qed.
Lemma lem8039811 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term124 _142753 _142754 _142755 GEN_PVAR_52 f g a) = (term107 _142753 _142754 _142755 GEN_PVAR_52 f g a).
Proof. exact (MK_COMB (@lem8039810 _142753 _142754 _142755 GEN_PVAR_52) (@lem8039809 _142753 _142754 _142755 f g a)). Qed.
Lemma lem8039812 {_142753 _142754 _142755 : Type'} (a : type2 _142753 _142754 _142755) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8039813 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (a : type2 _142753 _142754 _142755) : (term125 _142753 _142754 _142755 GEN_PVAR_52 f g a) = (term109 _142753 _142754 _142755 GEN_PVAR_52 f g a).
Proof. exact (MK_COMB (@lem8039811 _142753 _142754 _142755 GEN_PVAR_52 f g a) (@lem8039812 _142753 _142754 _142755 a)). Qed.
Lemma lem8039814 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term126 _142753 _142754 _142755 GEN_PVAR_52 f g) = (term111 _142753 _142754 _142755 GEN_PVAR_52 f g).
Proof. exact (fun_ext (fun a : type2 _142753 _142754 _142755 => @lem8039813 _142753 _142754 _142755 GEN_PVAR_52 f g a)). Qed.
Lemma lem8039815 {_142753 _142754 _142755 : Type'} : (@ex (cart _142753 (finite_sum _142754 _142755))) = (@ex (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@ex (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039816 {_142753 _142754 _142755 : Type'} (GEN_PVAR_52 : type2 _142753 _142754 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term127 _142753 _142754 _142755 GEN_PVAR_52 f g) = (term113 _142753 _142754 _142755 GEN_PVAR_52 f g).
Proof. exact (MK_COMB (@lem8039815 _142753 _142754 _142755) (@lem8039814 _142753 _142754 _142755 GEN_PVAR_52 f g)). Qed.
Lemma lem8039817 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term128 _142753 _142754 _142755 f g) = (term115 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun GEN_PVAR_52 : type2 _142753 _142754 _142755 => @lem8039816 _142753 _142754 _142755 GEN_PVAR_52 f g)). Qed.
Lemma lem8039818 {_142753 _142754 _142755 : Type'} : (@GSPEC (cart _142753 (finite_sum _142754 _142755))) = (@GSPEC (cart _142753 (finite_sum _142754 _142755))).
Proof. exact (eq_refl (@GSPEC (cart _142753 (finite_sum _142754 _142755)))). Qed.
Lemma lem8039819 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term129 _142753 _142754 _142755 f g) = (term116 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039818 _142753 _142754 _142755) (@lem8039817 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039820 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) : (term117 _142753 _142754 _142755 x y) = (term117 _142753 _142754 _142755 x y).
Proof. exact (eq_refl (term117 _142753 _142754 _142755 x y)). Qed.
Lemma lem8039821 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term120 _142753 _142754 _142755 x y f g) = (term118 _142753 _142754 _142755 x y f g).
Proof. exact (MK_COMB (@lem8039820 _142753 _142754 _142755 x y) (@lem8039819 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039822 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8039823 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (y : cart _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term130 _142753 _142754 _142755 x y f g) = (term131 _142753 _142754 _142755 x y f g).
Proof. exact (MK_COMB (@lem8039822) (@lem8039821 _142753 _142754 _142755 x y f g)). Qed.
Lemma lem8039824 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term121 _142753 _142754 _142755 f g x y) = (term132 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term121 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039825 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term120 _142753 _142754 _142755 x y f g) = (term121 _142753 _142754 _142755 f g x y)) = ((term118 _142753 _142754 _142755 x y f g) = (term132 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8039823 _142753 _142754 _142755 x y f g) (@lem8039824 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039826 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term118 _142753 _142754 _142755 x y f g) = (term132 _142753 _142754 _142755 f g x y).
Proof. exact (EQ_MP (@lem8039825 _142753 _142754 _142755 f g x y) (@lem8039808 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039840 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8039841 {_142753 _142754 _142755 : Type'} (x : cart _142753 _142754) (s : type24 _142753 _142754) (y : cart _142753 _142755) (t : type24 _142753 _142755) : (term14 _142753 _142754 _142755 x y s t) = (term15 _142753 _142754 _142755 x s y t).
Proof. exact (@lem8039840 _142753 _142754 _142755 x s y t). Qed.
Lemma lem8039844 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (f : type56 _142753 _142754) (t : type24 _142753 _142755) (g : type56 _142753 _142755) : (term94 _142753 _142754 _142755 s f t g) = (term94 _142753 _142754 _142755 s f t g).
Proof. exact (eq_refl (term94 _142753 _142754 _142755 s f t g)). Qed.
Lemma lem8039845 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (s : type24 _142753 _142754) (y : cart _142753 _142755) (t : type24 _142753 _142755) : (term133 _142753 _142754 _142755 f g x y s t) = (term134 _142753 _142754 _142755 f g x s y t).
Proof. exact (MK_COMB (@lem8039844 _142753 _142754 _142755 s f t g) (@lem8039841 _142753 _142754 _142755 x s y t)). Qed.
Lemma lem8039848 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (s : type24 _142753 _142754) (y : cart _142753 _142755) : (term135 _142753 _142754 _142755 f g x y s) = (term136 _142753 _142754 _142755 f g x s y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8039845 _142753 _142754 _142755 f g x s y t)). Qed.
Lemma lem8039849 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8039850 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (s : type24 _142753 _142754) (y : cart _142753 _142755) : (term137 _142753 _142754 _142755 f g x y s) = (term138 _142753 _142754 _142755 f g x s y).
Proof. exact (MK_COMB (@lem8039849 _142753 _142755) (@lem8039848 _142753 _142754 _142755 f g x s y)). Qed.
Lemma lem8039855 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term139 _142753 _142754 _142755 f g x y) = (term140 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8039850 _142753 _142754 _142755 f g x s y)). Qed.
Lemma lem8039856 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8039857 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term132 _142753 _142754 _142755 f g x y) = (term141 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8039856 _142753 _142754) (@lem8039855 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039862 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term118 _142753 _142754 _142755 x y f g) = (term141 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8039826 _142753 _142754 _142755 f g x y) (@lem8039857 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039863 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term54 _142753 _142754 _142755 x y f g) = (term141 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8039804 _142753 _142754 _142755 x y f g) (@lem8039862 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039864 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term53 _142753 _142754 _142755 x y f g) = (term54 _142753 _142754 _142755 x y f g)) = ((term62 _142753 _142754 _142755 x f y g) = (term141 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8039733 _142753 _142754 _142755 x f y g) (@lem8039863 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039869 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term56 _142753 _142754 _142755 x f g) = (term142 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8039864 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8039870 {_142753 _142755 : Type'} : (@all (cart _142753 _142755)) = (@all (cart _142753 _142755)).
Proof. exact (eq_refl (@all (cart _142753 _142755))). Qed.
Lemma lem8039871 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term58 _142753 _142754 _142755 x f g) = (term143 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8039870 _142753 _142755) (@lem8039869 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8039878 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term60 _142753 _142754 _142755 f g) = (term144 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8039871 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8039879 {_142753 _142754 : Type'} : (@all (cart _142753 _142754)) = (@all (cart _142753 _142754)).
Proof. exact (eq_refl (@all (cart _142753 _142754))). Qed.
Lemma lem8039880 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term61 _142753 _142754 _142755 f g) = (term145 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8039879 _142753 _142754) (@lem8039878 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039887 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term38 _142753 _142754 _142755 f g) = (term39 _142753 _142754 _142755 f g)) = (term145 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8039715 _142753 _142754 _142755 f g) (@lem8039880 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039888 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term146 _142753 _142754 _142755 f) = (term147 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8039887 _142753 _142754 _142755 f g)). Qed.
Lemma lem8039889 {_142753 _142755 : Type'} : (@all (((cart _142753 _142755) -> Prop) -> Prop)) = (@all (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8039890 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term148 _142753 _142754 _142755 f) = (term149 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8039889 _142753 _142755) (@lem8039888 _142753 _142754 _142755 f)). Qed.
Lemma lem8039897 {_142753 _142754 _142755 : Type'} : (term150 _142753 _142754 _142755) = (term151 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8039890 _142753 _142754 _142755 f)). Qed.
Lemma lem8039898 {_142753 _142754 : Type'} : (@all (((cart _142753 _142754) -> Prop) -> Prop)) = (@all (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8039899 {_142753 _142754 _142755 : Type'} : (term152 _142753 _142754 _142755) = (term153 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8039898 _142753 _142754) (@lem8039897 _142753 _142754 _142755)). Qed.
Lemma lem8039906 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8039907 {_142753 _142754 _142755 : Type'} : (term154 _142753 _142754 _142755) = (term155 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8039906) (@lem8039899 _142753 _142754 _142755)). Qed.
Lemma lem8039925 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term24 A s t).
Proof. exact (EQ_MP (@lem8039642 A s t) (@lem8039641 A s t)). Qed.
Lemma lem8039926 {_142795 _142796 _142797 : Type'} (s : type16 _142795 _142796 _142797) (t : type16 _142795 _142796 _142797) : (s = t) = (term37 _142795 _142796 _142797 s t).
Proof. exact (@lem8039925 (type2 _142795 _142796 _142797) s t). Qed.
Lemma lem8039927 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term156 _142795 _142796 _142797 s f) = (term157 _142795 _142796 _142797 f s)) = (term158 _142795 _142796 _142797 f s).
Proof. exact (@lem8039926 _142795 _142796 _142797 (term156 _142795 _142796 _142797 s f) (term157 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039933 {_140454 _140455 _140456 : Type'} (P : type16 _140454 _140455 _140456) : (term41 _140454 _140455 _140456 P) = (term42 _140454 _140455 _140456 P).
Proof. exact (EQ_MP (@lem7660850 _140454 _140455 _140456 P) (@lem7662539 _140454 _140455 _140456 P)). Qed.
Lemma lem8039934 {_142795 _142796 _142797 : Type'} (P : type16 _142795 _142796 _142797) : (term41 _142795 _142796 _142797 P) = (term42 _142795 _142796 _142797 P).
Proof. exact (@lem8039933 _142795 _142796 _142797 P). Qed.
Lemma lem8039935 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term159 _142795 _142796 _142797 f s) = (term160 _142795 _142796 _142797 f s).
Proof. exact (@lem8039934 _142795 _142796 _142797 (term161 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039936 {_142795 _142796 _142797 : Type'} (x : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term162 _142795 _142796 _142797 f s x) = ((term163 _142795 _142796 _142797 x s f) = (term164 _142795 _142796 _142797 x f s)).
Proof. exact (eq_refl (term162 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8039937 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term165 _142795 _142796 _142797 f s) = (term161 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : type2 _142795 _142796 _142797 => @lem8039936 _142795 _142796 _142797 x f s)). Qed.
Lemma lem8039938 {_142795 _142796 _142797 : Type'} : (@all (cart _142795 (finite_sum _142796 _142797))) = (@all (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@all (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8039939 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term159 _142795 _142796 _142797 f s) = (term158 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039938 _142795 _142796 _142797) (@lem8039937 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039940 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8039941 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term166 _142795 _142796 _142797 f s) = (term167 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039940) (@lem8039939 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039942 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term168 _142795 _142796 _142797 f s x y) = ((term169 _142795 _142796 _142797 x y s f) = (term170 _142795 _142796 _142797 x y f s)).
Proof. exact (eq_refl (term168 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8039943 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term171 _142795 _142796 _142797 f s x) = (term172 _142795 _142796 _142797 x f s).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8039942 _142795 _142796 _142797 x y f s)). Qed.
Lemma lem8039944 {_142795 _142797 : Type'} : (@all (cart _142795 _142797)) = (@all (cart _142795 _142797)).
Proof. exact (eq_refl (@all (cart _142795 _142797))). Qed.
Lemma lem8039945 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term173 _142795 _142796 _142797 f s x) = (term174 _142795 _142796 _142797 x f s).
Proof. exact (MK_COMB (@lem8039944 _142795 _142797) (@lem8039943 _142795 _142796 _142797 x f s)). Qed.
Lemma lem8039946 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term175 _142795 _142796 _142797 f s) = (term176 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8039945 _142795 _142796 _142797 x f s)). Qed.
Lemma lem8039947 {_142795 _142796 : Type'} : (@all (cart _142795 _142796)) = (@all (cart _142795 _142796)).
Proof. exact (eq_refl (@all (cart _142795 _142796))). Qed.
Lemma lem8039948 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term160 _142795 _142796 _142797 f s) = (term177 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039947 _142795 _142796) (@lem8039946 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039949 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term159 _142795 _142796 _142797 f s) = (term160 _142795 _142796 _142797 f s)) = ((term158 _142795 _142796 _142797 f s) = (term177 _142795 _142796 _142797 f s)).
Proof. exact (MK_COMB (@lem8039941 _142795 _142796 _142797 f s) (@lem8039948 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039950 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term158 _142795 _142796 _142797 f s) = (term177 _142795 _142796 _142797 f s).
Proof. exact (EQ_MP (@lem8039949 _142795 _142796 _142797 f s) (@lem8039935 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039957 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term156 _142795 _142796 _142797 s f) = (term157 _142795 _142796 _142797 f s)) = (term177 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8039927 _142795 _142796 _142797 f s) (@lem8039950 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039969 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8039970 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) (t : type24 _142795 _142797) : (term14 _142795 _142796 _142797 x y s t) = (term15 _142795 _142796 _142797 x s y t).
Proof. exact (@lem8039969 _142795 _142796 _142797 x s y t). Qed.
Lemma lem8039971 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) : (term169 _142795 _142796 _142797 x y s f) = (term178 _142795 _142796 _142797 x s y f).
Proof. exact (@lem8039970 _142795 _142796 _142797 x s y (@UNIONS (cart _142795 _142797) f)). Qed.
Lemma lem8039974 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8039975 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) : (term179 _142795 _142796 _142797 x y s f) = (term180 _142795 _142796 _142797 x s y f).
Proof. exact (MK_COMB (@lem8039974) (@lem8039971 _142795 _142796 _142797 x s y f)). Qed.
Lemma lem8039977 {_89520 _89534 : Type'} (P : _89534 -> Prop) (f : type1470 _89520 _89534) : (term35 _89520 _89534 P f) = (term36 _89520 _89534 P f).
Proof. exact (EQ_MP (@lem8039664 _89520 _89534 P f) (@lem8039663 _89520 _89534 P f)). Qed.
Lemma lem8039978 {_142795 _142796 _142797 : Type'} (P : type56 _142795 _142797) (f : type57 _142795 _142796 _142797) : (term181 _142795 _142796 _142797 P f) = (term182 _142795 _142796 _142797 P f).
Proof. exact (@lem8039977 (type2 _142795 _142796 _142797) (type24 _142795 _142797) P f). Qed.
Lemma lem8039979 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term183 _142795 _142796 _142797 f s) = (term184 _142795 _142796 _142797 f s).
Proof. exact (@lem8039978 _142795 _142796 _142797 (term185 _142795 _142797 f) (term186 _142795 _142796 _142797 s)). Qed.
Lemma lem8039980 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) : (term187 _142795 _142797 f t) = (@IN ((cart _142795 _142797) -> Prop) t f).
Proof. exact (eq_refl (term187 _142795 _142797 f t)). Qed.
Lemma lem8039981 {_142795 _142796 _142797 : Type'} (GEN_PVAR_363 : type16 _142795 _142796 _142797) : (@SETSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop) GEN_PVAR_363) = (@SETSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop) GEN_PVAR_363).
Proof. exact (eq_refl (@SETSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop) GEN_PVAR_363)). Qed.
Lemma lem8039982 {_142795 _142796 _142797 : Type'} (GEN_PVAR_363 : type16 _142795 _142796 _142797) (t : type24 _142795 _142797) (f : type56 _142795 _142797) : (term188 _142795 _142796 _142797 GEN_PVAR_363 f t) = (term189 _142795 _142796 _142797 GEN_PVAR_363 t f).
Proof. exact (MK_COMB (@lem8039981 _142795 _142796 _142797 GEN_PVAR_363) (@lem8039980 _142795 _142797 t f)). Qed.
Lemma lem8039983 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (t : type24 _142795 _142797) : (term190 _142795 _142796 _142797 s t) = (@PCROSS _142795 _142796 _142797 s t).
Proof. exact (eq_refl (term190 _142795 _142796 _142797 s t)). Qed.
Lemma lem8039984 {_142795 _142796 _142797 : Type'} (GEN_PVAR_363 : type16 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (t : type24 _142795 _142797) : (term191 _142795 _142796 _142797 GEN_PVAR_363 f s t) = (term192 _142795 _142796 _142797 GEN_PVAR_363 f s t).
Proof. exact (MK_COMB (@lem8039982 _142795 _142796 _142797 GEN_PVAR_363 t f) (@lem8039983 _142795 _142796 _142797 s t)). Qed.
Lemma lem8039985 {_142795 _142796 _142797 : Type'} (GEN_PVAR_363 : type16 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term193 _142795 _142796 _142797 GEN_PVAR_363 f s) = (term194 _142795 _142796 _142797 GEN_PVAR_363 f s).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8039984 _142795 _142796 _142797 GEN_PVAR_363 f s t)). Qed.
Lemma lem8039986 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8039987 {_142795 _142796 _142797 : Type'} (GEN_PVAR_363 : type16 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term195 _142795 _142796 _142797 GEN_PVAR_363 f s) = (term196 _142795 _142796 _142797 GEN_PVAR_363 f s).
Proof. exact (MK_COMB (@lem8039986 _142795 _142797) (@lem8039985 _142795 _142796 _142797 GEN_PVAR_363 f s)). Qed.
Lemma lem8039988 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term197 _142795 _142796 _142797 f s) = (term198 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun GEN_PVAR_363 : type16 _142795 _142796 _142797 => @lem8039987 _142795 _142796 _142797 GEN_PVAR_363 f s)). Qed.
Lemma lem8039989 {_142795 _142796 _142797 : Type'} : (@GSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop)) = (@GSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop)).
Proof. exact (eq_refl (@GSPEC ((cart _142795 (finite_sum _142796 _142797)) -> Prop))). Qed.
Lemma lem8039990 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term199 _142795 _142796 _142797 f s) = (term200 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039989 _142795 _142796 _142797) (@lem8039988 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039991 {_142795 _142796 _142797 : Type'} : (@UNIONS (cart _142795 (finite_sum _142796 _142797))) = (@UNIONS (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@UNIONS (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8039992 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term183 _142795 _142796 _142797 f s) = (term157 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039991 _142795 _142796 _142797) (@lem8039990 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039993 {_142795 _142796 _142797 : Type'} : (@eq ((cart _142795 (finite_sum _142796 _142797)) -> Prop)) = (@eq ((cart _142795 (finite_sum _142796 _142797)) -> Prop)).
Proof. exact (eq_refl (@eq ((cart _142795 (finite_sum _142796 _142797)) -> Prop))). Qed.
Lemma lem8039994 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term201 _142795 _142796 _142797 f s) = (term202 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8039993 _142795 _142796 _142797) (@lem8039992 _142795 _142796 _142797 f s)). Qed.
Lemma lem8039995 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) : (term187 _142795 _142797 f t) = (@IN ((cart _142795 _142797) -> Prop) t f).
Proof. exact (eq_refl (term187 _142795 _142797 f t)). Qed.
Lemma lem8039996 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8039997 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) : (term203 _142795 _142797 f t) = (term204 _142795 _142797 t f).
Proof. exact (MK_COMB (@lem8039996) (@lem8039995 _142795 _142797 t f)). Qed.
Lemma lem8039998 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (t : type24 _142795 _142797) : (term190 _142795 _142796 _142797 s t) = (@PCROSS _142795 _142796 _142797 s t).
Proof. exact (eq_refl (term190 _142795 _142796 _142797 s t)). Qed.
Lemma lem8039999 {_142795 _142796 _142797 : Type'} (a : type2 _142795 _142796 _142797) : (@IN (cart _142795 (finite_sum _142796 _142797)) a) = (@IN (cart _142795 (finite_sum _142796 _142797)) a).
Proof. exact (eq_refl (@IN (cart _142795 (finite_sum _142796 _142797)) a)). Qed.
Lemma lem8040000 {_142795 _142796 _142797 : Type'} (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) (t : type24 _142795 _142797) : (term205 _142795 _142796 _142797 a s t) = (term95 _142795 _142796 _142797 a s t).
Proof. exact (MK_COMB (@lem8039999 _142795 _142796 _142797 a) (@lem8039998 _142795 _142796 _142797 s t)). Qed.
Lemma lem8040001 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) (t : type24 _142795 _142797) : (term206 _142795 _142796 _142797 f a s t) = (term207 _142795 _142796 _142797 f a s t).
Proof. exact (MK_COMB (@lem8039997 _142795 _142797 t f) (@lem8040000 _142795 _142796 _142797 a s t)). Qed.
Lemma lem8040002 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) : (term208 _142795 _142796 _142797 f a s) = (term209 _142795 _142796 _142797 f a s).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8040001 _142795 _142796 _142797 f a s t)). Qed.
Lemma lem8040003 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8040004 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) : (term210 _142795 _142796 _142797 f a s) = (term211 _142795 _142796 _142797 f a s).
Proof. exact (MK_COMB (@lem8040003 _142795 _142797) (@lem8040002 _142795 _142796 _142797 f a s)). Qed.
Lemma lem8040005 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) : (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50) = (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50).
Proof. exact (eq_refl (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50)). Qed.
Lemma lem8040006 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) : (term212 _142795 _142796 _142797 GEN_PVAR_50 f a s) = (term213 _142795 _142796 _142797 GEN_PVAR_50 f a s).
Proof. exact (MK_COMB (@lem8040005 _142795 _142796 _142797 GEN_PVAR_50) (@lem8040004 _142795 _142796 _142797 f a s)). Qed.
Lemma lem8040007 {_142795 _142796 _142797 : Type'} (a : type2 _142795 _142796 _142797) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8040008 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (a : type2 _142795 _142796 _142797) : (term214 _142795 _142796 _142797 GEN_PVAR_50 f s a) = (term215 _142795 _142796 _142797 GEN_PVAR_50 f s a).
Proof. exact (MK_COMB (@lem8040006 _142795 _142796 _142797 GEN_PVAR_50 f a s) (@lem8040007 _142795 _142796 _142797 a)). Qed.
Lemma lem8040009 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term216 _142795 _142796 _142797 GEN_PVAR_50 f s) = (term217 _142795 _142796 _142797 GEN_PVAR_50 f s).
Proof. exact (fun_ext (fun a : type2 _142795 _142796 _142797 => @lem8040008 _142795 _142796 _142797 GEN_PVAR_50 f s a)). Qed.
Lemma lem8040010 {_142795 _142796 _142797 : Type'} : (@ex (cart _142795 (finite_sum _142796 _142797))) = (@ex (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@ex (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8040011 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term218 _142795 _142796 _142797 GEN_PVAR_50 f s) = (term219 _142795 _142796 _142797 GEN_PVAR_50 f s).
Proof. exact (MK_COMB (@lem8040010 _142795 _142796 _142797) (@lem8040009 _142795 _142796 _142797 GEN_PVAR_50 f s)). Qed.
Lemma lem8040012 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term220 _142795 _142796 _142797 f s) = (term221 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun GEN_PVAR_50 : type2 _142795 _142796 _142797 => @lem8040011 _142795 _142796 _142797 GEN_PVAR_50 f s)). Qed.
Lemma lem8040013 {_142795 _142796 _142797 : Type'} : (@GSPEC (cart _142795 (finite_sum _142796 _142797))) = (@GSPEC (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@GSPEC (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8040014 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term184 _142795 _142796 _142797 f s) = (term222 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8040013 _142795 _142796 _142797) (@lem8040012 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040015 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term183 _142795 _142796 _142797 f s) = (term184 _142795 _142796 _142797 f s)) = ((term157 _142795 _142796 _142797 f s) = (term222 _142795 _142796 _142797 f s)).
Proof. exact (MK_COMB (@lem8039994 _142795 _142796 _142797 f s) (@lem8040014 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040016 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term157 _142795 _142796 _142797 f s) = (term222 _142795 _142796 _142797 f s).
Proof. exact (EQ_MP (@lem8040015 _142795 _142796 _142797 f s) (@lem8039979 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040027 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) : (term117 _142795 _142796 _142797 x y) = (term117 _142795 _142796 _142797 x y).
Proof. exact (eq_refl (term117 _142795 _142796 _142797 x y)). Qed.
Lemma lem8040028 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term170 _142795 _142796 _142797 x y f s) = (term223 _142795 _142796 _142797 x y f s).
Proof. exact (MK_COMB (@lem8040027 _142795 _142796 _142797 x y) (@lem8040016 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040030 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term20 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem8039629 _83095 p x) (@lem8039628 _83095 p x)). Qed.
Lemma lem8040031 {_142795 _142796 _142797 : Type'} (p : type16 _142795 _142796 _142797) (x : type2 _142795 _142796 _142797) : (term119 _142795 _142796 _142797 x p) = (p x).
Proof. exact (@lem8040030 (type2 _142795 _142796 _142797) p x). Qed.
Lemma lem8040032 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term224 _142795 _142796 _142797 x y f s) = (term225 _142795 _142796 _142797 f s x y).
Proof. exact (@lem8040031 _142795 _142796 _142797 (term226 _142795 _142796 _142797 f s) (@pastecart _142795 _142796 _142797 x y)). Qed.
Lemma lem8040033 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) : (term227 _142795 _142796 _142797 f s a) = (term211 _142795 _142796 _142797 f a s).
Proof. exact (eq_refl (term227 _142795 _142796 _142797 f s a)). Qed.
Lemma lem8040034 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) : (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50) = (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50).
Proof. exact (eq_refl (@SETSPEC (cart _142795 (finite_sum _142796 _142797)) GEN_PVAR_50)). Qed.
Lemma lem8040035 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (a : type2 _142795 _142796 _142797) (s : type24 _142795 _142796) : (term228 _142795 _142796 _142797 GEN_PVAR_50 f s a) = (term213 _142795 _142796 _142797 GEN_PVAR_50 f a s).
Proof. exact (MK_COMB (@lem8040034 _142795 _142796 _142797 GEN_PVAR_50) (@lem8040033 _142795 _142796 _142797 f a s)). Qed.
Lemma lem8040036 {_142795 _142796 _142797 : Type'} (a : type2 _142795 _142796 _142797) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8040037 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (a : type2 _142795 _142796 _142797) : (term229 _142795 _142796 _142797 GEN_PVAR_50 f s a) = (term215 _142795 _142796 _142797 GEN_PVAR_50 f s a).
Proof. exact (MK_COMB (@lem8040035 _142795 _142796 _142797 GEN_PVAR_50 f a s) (@lem8040036 _142795 _142796 _142797 a)). Qed.
Lemma lem8040038 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term230 _142795 _142796 _142797 GEN_PVAR_50 f s) = (term217 _142795 _142796 _142797 GEN_PVAR_50 f s).
Proof. exact (fun_ext (fun a : type2 _142795 _142796 _142797 => @lem8040037 _142795 _142796 _142797 GEN_PVAR_50 f s a)). Qed.
Lemma lem8040039 {_142795 _142796 _142797 : Type'} : (@ex (cart _142795 (finite_sum _142796 _142797))) = (@ex (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@ex (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8040040 {_142795 _142796 _142797 : Type'} (GEN_PVAR_50 : type2 _142795 _142796 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term231 _142795 _142796 _142797 GEN_PVAR_50 f s) = (term219 _142795 _142796 _142797 GEN_PVAR_50 f s).
Proof. exact (MK_COMB (@lem8040039 _142795 _142796 _142797) (@lem8040038 _142795 _142796 _142797 GEN_PVAR_50 f s)). Qed.
Lemma lem8040041 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term232 _142795 _142796 _142797 f s) = (term221 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun GEN_PVAR_50 : type2 _142795 _142796 _142797 => @lem8040040 _142795 _142796 _142797 GEN_PVAR_50 f s)). Qed.
Lemma lem8040042 {_142795 _142796 _142797 : Type'} : (@GSPEC (cart _142795 (finite_sum _142796 _142797))) = (@GSPEC (cart _142795 (finite_sum _142796 _142797))).
Proof. exact (eq_refl (@GSPEC (cart _142795 (finite_sum _142796 _142797)))). Qed.
Lemma lem8040043 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term233 _142795 _142796 _142797 f s) = (term222 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8040042 _142795 _142796 _142797) (@lem8040041 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040044 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) : (term117 _142795 _142796 _142797 x y) = (term117 _142795 _142796 _142797 x y).
Proof. exact (eq_refl (term117 _142795 _142796 _142797 x y)). Qed.
Lemma lem8040045 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term224 _142795 _142796 _142797 x y f s) = (term223 _142795 _142796 _142797 x y f s).
Proof. exact (MK_COMB (@lem8040044 _142795 _142796 _142797 x y) (@lem8040043 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040046 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040047 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (y : cart _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term234 _142795 _142796 _142797 x y f s) = (term235 _142795 _142796 _142797 x y f s).
Proof. exact (MK_COMB (@lem8040046) (@lem8040045 _142795 _142796 _142797 x y f s)). Qed.
Lemma lem8040048 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (y : cart _142795 _142797) (s : type24 _142795 _142796) : (term225 _142795 _142796 _142797 f s x y) = (term236 _142795 _142796 _142797 f x y s).
Proof. exact (eq_refl (term225 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8040049 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (y : cart _142795 _142797) (s : type24 _142795 _142796) : ((term224 _142795 _142796 _142797 x y f s) = (term225 _142795 _142796 _142797 f s x y)) = ((term223 _142795 _142796 _142797 x y f s) = (term236 _142795 _142796 _142797 f x y s)).
Proof. exact (MK_COMB (@lem8040047 _142795 _142796 _142797 x y f s) (@lem8040048 _142795 _142796 _142797 f x y s)). Qed.
Lemma lem8040050 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (y : cart _142795 _142797) (s : type24 _142795 _142796) : (term223 _142795 _142796 _142797 x y f s) = (term236 _142795 _142796 _142797 f x y s).
Proof. exact (EQ_MP (@lem8040049 _142795 _142796 _142797 f x y s) (@lem8040032 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8040058 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8040059 {_142795 _142796 _142797 : Type'} (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) (t : type24 _142795 _142797) : (term14 _142795 _142796 _142797 x y s t) = (term15 _142795 _142796 _142797 x s y t).
Proof. exact (@lem8040058 _142795 _142796 _142797 x s y t). Qed.
Lemma lem8040062 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) : (term204 _142795 _142797 t f) = (term204 _142795 _142797 t f).
Proof. exact (eq_refl (term204 _142795 _142797 t f)). Qed.
Lemma lem8040063 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) (t : type24 _142795 _142797) : (term237 _142795 _142796 _142797 f x y s t) = (term238 _142795 _142796 _142797 f x s y t).
Proof. exact (MK_COMB (@lem8040062 _142795 _142797 t f) (@lem8040059 _142795 _142796 _142797 x s y t)). Qed.
Lemma lem8040066 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) : (term239 _142795 _142796 _142797 f x y s) = (term240 _142795 _142796 _142797 f x s y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8040063 _142795 _142796 _142797 f x s y t)). Qed.
Lemma lem8040067 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8040068 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) : (term236 _142795 _142796 _142797 f x y s) = (term241 _142795 _142796 _142797 f x s y).
Proof. exact (MK_COMB (@lem8040067 _142795 _142797) (@lem8040066 _142795 _142796 _142797 f x s y)). Qed.
Lemma lem8040073 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) : (term223 _142795 _142796 _142797 x y f s) = (term241 _142795 _142796 _142797 f x s y).
Proof. exact (TRANS (@lem8040050 _142795 _142796 _142797 f x y s) (@lem8040068 _142795 _142796 _142797 f x s y)). Qed.
Lemma lem8040074 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) : (term170 _142795 _142796 _142797 x y f s) = (term241 _142795 _142796 _142797 f x s y).
Proof. exact (TRANS (@lem8040028 _142795 _142796 _142797 x y f s) (@lem8040073 _142795 _142796 _142797 f x s y)). Qed.
Lemma lem8040075 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) (y : cart _142795 _142797) : ((term169 _142795 _142796 _142797 x y s f) = (term170 _142795 _142796 _142797 x y f s)) = ((term178 _142795 _142796 _142797 x s y f) = (term241 _142795 _142796 _142797 f x s y)).
Proof. exact (MK_COMB (@lem8039975 _142795 _142796 _142797 x s y f) (@lem8040074 _142795 _142796 _142797 f x s y)). Qed.
Lemma lem8040080 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) : (term172 _142795 _142796 _142797 x f s) = (term242 _142795 _142796 _142797 f x s).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8040075 _142795 _142796 _142797 f x s y)). Qed.
Lemma lem8040081 {_142795 _142797 : Type'} : (@all (cart _142795 _142797)) = (@all (cart _142795 _142797)).
Proof. exact (eq_refl (@all (cart _142795 _142797))). Qed.
Lemma lem8040082 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (x : cart _142795 _142796) (s : type24 _142795 _142796) : (term174 _142795 _142796 _142797 x f s) = (term243 _142795 _142796 _142797 f x s).
Proof. exact (MK_COMB (@lem8040081 _142795 _142797) (@lem8040080 _142795 _142796 _142797 f x s)). Qed.
Lemma lem8040089 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term176 _142795 _142796 _142797 f s) = (term244 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8040082 _142795 _142796 _142797 f x s)). Qed.
Lemma lem8040090 {_142795 _142796 : Type'} : (@all (cart _142795 _142796)) = (@all (cart _142795 _142796)).
Proof. exact (eq_refl (@all (cart _142795 _142796))). Qed.
Lemma lem8040091 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term177 _142795 _142796 _142797 f s) = (term245 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8040090 _142795 _142796) (@lem8040089 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040098 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term156 _142795 _142796 _142797 s f) = (term157 _142795 _142796 _142797 f s)) = (term245 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8039957 _142795 _142796 _142797 f s) (@lem8040091 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040099 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term246 _142795 _142796 _142797 s) = (term247 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8040098 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040100 {_142795 _142797 : Type'} : (@all (((cart _142795 _142797) -> Prop) -> Prop)) = (@all (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8040101 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term248 _142795 _142796 _142797 s) = (term249 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8040100 _142795 _142797) (@lem8040099 _142795 _142796 _142797 s)). Qed.
Lemma lem8040108 {_142795 _142796 _142797 : Type'} : (term250 _142795 _142796 _142797) = (term251 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8040101 _142795 _142796 _142797 s)). Qed.
Lemma lem8040109 {_142795 _142796 : Type'} : (@all ((cart _142795 _142796) -> Prop)) = (@all ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8040110 {_142795 _142796 _142797 : Type'} : (term252 _142795 _142796 _142797) = (term253 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8040109 _142795 _142796) (@lem8040108 _142795 _142796 _142797)). Qed.
Lemma lem8040117 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040118 {_142795 _142796 _142797 : Type'} : (term254 _142795 _142796 _142797) = (term255 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8040117) (@lem8040110 _142795 _142796 _142797)). Qed.
Lemma lem8040134 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term24 A s t).
Proof. exact (EQ_MP (@lem8039642 A s t) (@lem8039641 A s t)). Qed.
Lemma lem8040135 {_142835 _142836 _142837 : Type'} (s : type16 _142835 _142836 _142837) (t : type16 _142835 _142836 _142837) : (s = t) = (term37 _142835 _142836 _142837 s t).
Proof. exact (@lem8040134 (type2 _142835 _142836 _142837) s t). Qed.
Lemma lem8040136 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term256 _142835 _142836 _142837 f t) = (term257 _142835 _142836 _142837 f t)) = (term258 _142835 _142836 _142837 f t).
Proof. exact (@lem8040135 _142835 _142836 _142837 (term256 _142835 _142836 _142837 f t) (term257 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040142 {_140454 _140455 _140456 : Type'} (P : type16 _140454 _140455 _140456) : (term41 _140454 _140455 _140456 P) = (term42 _140454 _140455 _140456 P).
Proof. exact (EQ_MP (@lem7660850 _140454 _140455 _140456 P) (@lem7662539 _140454 _140455 _140456 P)). Qed.
Lemma lem8040143 {_142835 _142836 _142837 : Type'} (P : type16 _142835 _142836 _142837) : (term41 _142835 _142836 _142837 P) = (term42 _142835 _142836 _142837 P).
Proof. exact (@lem8040142 _142835 _142836 _142837 P). Qed.
Lemma lem8040144 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term259 _142835 _142836 _142837 f t) = (term260 _142835 _142836 _142837 f t).
Proof. exact (@lem8040143 _142835 _142836 _142837 (term261 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040145 {_142835 _142836 _142837 : Type'} (x : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term262 _142835 _142836 _142837 f t x) = ((term263 _142835 _142836 _142837 x f t) = (term264 _142835 _142836 _142837 x f t)).
Proof. exact (eq_refl (term262 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8040146 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term265 _142835 _142836 _142837 f t) = (term261 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : type2 _142835 _142836 _142837 => @lem8040145 _142835 _142836 _142837 x f t)). Qed.
Lemma lem8040147 {_142835 _142836 _142837 : Type'} : (@all (cart _142835 (finite_sum _142836 _142837))) = (@all (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@all (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040148 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term259 _142835 _142836 _142837 f t) = (term258 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040147 _142835 _142836 _142837) (@lem8040146 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040149 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040150 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term266 _142835 _142836 _142837 f t) = (term267 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040149) (@lem8040148 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040151 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term268 _142835 _142836 _142837 f t x y) = ((term269 _142835 _142836 _142837 x y f t) = (term270 _142835 _142836 _142837 x y f t)).
Proof. exact (eq_refl (term268 _142835 _142836 _142837 f t x y)). Qed.
Lemma lem8040152 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term271 _142835 _142836 _142837 f t x) = (term272 _142835 _142836 _142837 x f t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8040151 _142835 _142836 _142837 x y f t)). Qed.
Lemma lem8040153 {_142835 _142837 : Type'} : (@all (cart _142835 _142837)) = (@all (cart _142835 _142837)).
Proof. exact (eq_refl (@all (cart _142835 _142837))). Qed.
Lemma lem8040154 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term273 _142835 _142836 _142837 f t x) = (term274 _142835 _142836 _142837 x f t).
Proof. exact (MK_COMB (@lem8040153 _142835 _142837) (@lem8040152 _142835 _142836 _142837 x f t)). Qed.
Lemma lem8040155 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term275 _142835 _142836 _142837 f t) = (term276 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8040154 _142835 _142836 _142837 x f t)). Qed.
Lemma lem8040156 {_142835 _142836 : Type'} : (@all (cart _142835 _142836)) = (@all (cart _142835 _142836)).
Proof. exact (eq_refl (@all (cart _142835 _142836))). Qed.
Lemma lem8040157 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term260 _142835 _142836 _142837 f t) = (term277 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040156 _142835 _142836) (@lem8040155 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040158 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term259 _142835 _142836 _142837 f t) = (term260 _142835 _142836 _142837 f t)) = ((term258 _142835 _142836 _142837 f t) = (term277 _142835 _142836 _142837 f t)).
Proof. exact (MK_COMB (@lem8040150 _142835 _142836 _142837 f t) (@lem8040157 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040159 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term258 _142835 _142836 _142837 f t) = (term277 _142835 _142836 _142837 f t).
Proof. exact (EQ_MP (@lem8040158 _142835 _142836 _142837 f t) (@lem8040144 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040166 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term256 _142835 _142836 _142837 f t) = (term257 _142835 _142836 _142837 f t)) = (term277 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8040136 _142835 _142836 _142837 f t) (@lem8040159 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040178 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8040179 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (s : type24 _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term14 _142835 _142836 _142837 x y s t) = (term15 _142835 _142836 _142837 x s y t).
Proof. exact (@lem8040178 _142835 _142836 _142837 x s y t). Qed.
Lemma lem8040180 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (f : type56 _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term269 _142835 _142836 _142837 x y f t) = (term278 _142835 _142836 _142837 x f y t).
Proof. exact (@lem8040179 _142835 _142836 _142837 x (@UNIONS (cart _142835 _142836) f) y t). Qed.
Lemma lem8040183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040184 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (f : type56 _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term279 _142835 _142836 _142837 x y f t) = (term280 _142835 _142836 _142837 x f y t).
Proof. exact (MK_COMB (@lem8040183) (@lem8040180 _142835 _142836 _142837 x f y t)). Qed.
Lemma lem8040186 {_89520 _89534 : Type'} (P : _89534 -> Prop) (f : type1470 _89520 _89534) : (term35 _89520 _89534 P f) = (term36 _89520 _89534 P f).
Proof. exact (EQ_MP (@lem8039664 _89520 _89534 P f) (@lem8039663 _89520 _89534 P f)). Qed.
Lemma lem8040187 {_142835 _142836 _142837 : Type'} (P : type56 _142835 _142836) (f : type52 _142835 _142836 _142837) : (term281 _142835 _142836 _142837 P f) = (term282 _142835 _142836 _142837 P f).
Proof. exact (@lem8040186 (type2 _142835 _142836 _142837) (type24 _142835 _142836) P f). Qed.
Lemma lem8040188 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term283 _142835 _142836 _142837 f t) = (term284 _142835 _142836 _142837 f t).
Proof. exact (@lem8040187 _142835 _142836 _142837 (term185 _142835 _142836 f) (term285 _142835 _142836 _142837 t)). Qed.
Lemma lem8040189 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (f : type56 _142835 _142836) : (term187 _142835 _142836 f s) = (@IN ((cart _142835 _142836) -> Prop) s f).
Proof. exact (eq_refl (term187 _142835 _142836 f s)). Qed.
Lemma lem8040190 {_142835 _142836 _142837 : Type'} (GEN_PVAR_364 : type16 _142835 _142836 _142837) : (@SETSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop) GEN_PVAR_364) = (@SETSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop) GEN_PVAR_364).
Proof. exact (eq_refl (@SETSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop) GEN_PVAR_364)). Qed.
Lemma lem8040191 {_142835 _142836 _142837 : Type'} (GEN_PVAR_364 : type16 _142835 _142836 _142837) (s : type24 _142835 _142836) (f : type56 _142835 _142836) : (term286 _142835 _142836 _142837 GEN_PVAR_364 f s) = (term287 _142835 _142836 _142837 GEN_PVAR_364 s f).
Proof. exact (MK_COMB (@lem8040190 _142835 _142836 _142837 GEN_PVAR_364) (@lem8040189 _142835 _142836 s f)). Qed.
Lemma lem8040192 {_142835 _142836 _142837 : Type'} (s : type24 _142835 _142836) (t : type24 _142835 _142837) : (term288 _142835 _142836 _142837 t s) = (@PCROSS _142835 _142836 _142837 s t).
Proof. exact (eq_refl (term288 _142835 _142836 _142837 t s)). Qed.
Lemma lem8040193 {_142835 _142836 _142837 : Type'} (GEN_PVAR_364 : type16 _142835 _142836 _142837) (f : type56 _142835 _142836) (s : type24 _142835 _142836) (t : type24 _142835 _142837) : (term289 _142835 _142836 _142837 GEN_PVAR_364 f t s) = (term290 _142835 _142836 _142837 GEN_PVAR_364 f s t).
Proof. exact (MK_COMB (@lem8040191 _142835 _142836 _142837 GEN_PVAR_364 s f) (@lem8040192 _142835 _142836 _142837 s t)). Qed.
Lemma lem8040194 {_142835 _142836 _142837 : Type'} (GEN_PVAR_364 : type16 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term291 _142835 _142836 _142837 GEN_PVAR_364 f t) = (term292 _142835 _142836 _142837 GEN_PVAR_364 f t).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8040193 _142835 _142836 _142837 GEN_PVAR_364 f s t)). Qed.
Lemma lem8040195 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8040196 {_142835 _142836 _142837 : Type'} (GEN_PVAR_364 : type16 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term293 _142835 _142836 _142837 GEN_PVAR_364 f t) = (term294 _142835 _142836 _142837 GEN_PVAR_364 f t).
Proof. exact (MK_COMB (@lem8040195 _142835 _142836) (@lem8040194 _142835 _142836 _142837 GEN_PVAR_364 f t)). Qed.
Lemma lem8040197 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term295 _142835 _142836 _142837 f t) = (term296 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun GEN_PVAR_364 : type16 _142835 _142836 _142837 => @lem8040196 _142835 _142836 _142837 GEN_PVAR_364 f t)). Qed.
Lemma lem8040198 {_142835 _142836 _142837 : Type'} : (@GSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop)) = (@GSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop)).
Proof. exact (eq_refl (@GSPEC ((cart _142835 (finite_sum _142836 _142837)) -> Prop))). Qed.
Lemma lem8040199 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term297 _142835 _142836 _142837 f t) = (term298 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040198 _142835 _142836 _142837) (@lem8040197 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040200 {_142835 _142836 _142837 : Type'} : (@UNIONS (cart _142835 (finite_sum _142836 _142837))) = (@UNIONS (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@UNIONS (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040201 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term283 _142835 _142836 _142837 f t) = (term257 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040200 _142835 _142836 _142837) (@lem8040199 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040202 {_142835 _142836 _142837 : Type'} : (@eq ((cart _142835 (finite_sum _142836 _142837)) -> Prop)) = (@eq ((cart _142835 (finite_sum _142836 _142837)) -> Prop)).
Proof. exact (eq_refl (@eq ((cart _142835 (finite_sum _142836 _142837)) -> Prop))). Qed.
Lemma lem8040203 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term299 _142835 _142836 _142837 f t) = (term300 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040202 _142835 _142836 _142837) (@lem8040201 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040204 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (f : type56 _142835 _142836) : (term187 _142835 _142836 f s) = (@IN ((cart _142835 _142836) -> Prop) s f).
Proof. exact (eq_refl (term187 _142835 _142836 f s)). Qed.
Lemma lem8040205 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040206 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (f : type56 _142835 _142836) : (term203 _142835 _142836 f s) = (term204 _142835 _142836 s f).
Proof. exact (MK_COMB (@lem8040205) (@lem8040204 _142835 _142836 s f)). Qed.
Lemma lem8040207 {_142835 _142836 _142837 : Type'} (s : type24 _142835 _142836) (t : type24 _142835 _142837) : (term288 _142835 _142836 _142837 t s) = (@PCROSS _142835 _142836 _142837 s t).
Proof. exact (eq_refl (term288 _142835 _142836 _142837 t s)). Qed.
Lemma lem8040208 {_142835 _142836 _142837 : Type'} (a : type2 _142835 _142836 _142837) : (@IN (cart _142835 (finite_sum _142836 _142837)) a) = (@IN (cart _142835 (finite_sum _142836 _142837)) a).
Proof. exact (eq_refl (@IN (cart _142835 (finite_sum _142836 _142837)) a)). Qed.
Lemma lem8040209 {_142835 _142836 _142837 : Type'} (a : type2 _142835 _142836 _142837) (s : type24 _142835 _142836) (t : type24 _142835 _142837) : (term301 _142835 _142836 _142837 a t s) = (term95 _142835 _142836 _142837 a s t).
Proof. exact (MK_COMB (@lem8040208 _142835 _142836 _142837 a) (@lem8040207 _142835 _142836 _142837 s t)). Qed.
Lemma lem8040210 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (s : type24 _142835 _142836) (t : type24 _142835 _142837) : (term302 _142835 _142836 _142837 f a t s) = (term303 _142835 _142836 _142837 f a s t).
Proof. exact (MK_COMB (@lem8040206 _142835 _142836 s f) (@lem8040209 _142835 _142836 _142837 a s t)). Qed.
Lemma lem8040211 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (t : type24 _142835 _142837) : (term304 _142835 _142836 _142837 f a t) = (term305 _142835 _142836 _142837 f a t).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8040210 _142835 _142836 _142837 f a s t)). Qed.
Lemma lem8040212 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8040213 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (t : type24 _142835 _142837) : (term306 _142835 _142836 _142837 f a t) = (term307 _142835 _142836 _142837 f a t).
Proof. exact (MK_COMB (@lem8040212 _142835 _142836) (@lem8040211 _142835 _142836 _142837 f a t)). Qed.
Lemma lem8040214 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) : (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50) = (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50).
Proof. exact (eq_refl (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50)). Qed.
Lemma lem8040215 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (t : type24 _142835 _142837) : (term308 _142835 _142836 _142837 GEN_PVAR_50 f a t) = (term309 _142835 _142836 _142837 GEN_PVAR_50 f a t).
Proof. exact (MK_COMB (@lem8040214 _142835 _142836 _142837 GEN_PVAR_50) (@lem8040213 _142835 _142836 _142837 f a t)). Qed.
Lemma lem8040216 {_142835 _142836 _142837 : Type'} (a : type2 _142835 _142836 _142837) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8040217 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) (a : type2 _142835 _142836 _142837) : (term310 _142835 _142836 _142837 GEN_PVAR_50 f t a) = (term311 _142835 _142836 _142837 GEN_PVAR_50 f t a).
Proof. exact (MK_COMB (@lem8040215 _142835 _142836 _142837 GEN_PVAR_50 f a t) (@lem8040216 _142835 _142836 _142837 a)). Qed.
Lemma lem8040218 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term312 _142835 _142836 _142837 GEN_PVAR_50 f t) = (term313 _142835 _142836 _142837 GEN_PVAR_50 f t).
Proof. exact (fun_ext (fun a : type2 _142835 _142836 _142837 => @lem8040217 _142835 _142836 _142837 GEN_PVAR_50 f t a)). Qed.
Lemma lem8040219 {_142835 _142836 _142837 : Type'} : (@ex (cart _142835 (finite_sum _142836 _142837))) = (@ex (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@ex (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040220 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term314 _142835 _142836 _142837 GEN_PVAR_50 f t) = (term315 _142835 _142836 _142837 GEN_PVAR_50 f t).
Proof. exact (MK_COMB (@lem8040219 _142835 _142836 _142837) (@lem8040218 _142835 _142836 _142837 GEN_PVAR_50 f t)). Qed.
Lemma lem8040221 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term316 _142835 _142836 _142837 f t) = (term317 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun GEN_PVAR_50 : type2 _142835 _142836 _142837 => @lem8040220 _142835 _142836 _142837 GEN_PVAR_50 f t)). Qed.
Lemma lem8040222 {_142835 _142836 _142837 : Type'} : (@GSPEC (cart _142835 (finite_sum _142836 _142837))) = (@GSPEC (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@GSPEC (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040223 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term284 _142835 _142836 _142837 f t) = (term318 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040222 _142835 _142836 _142837) (@lem8040221 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040224 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term283 _142835 _142836 _142837 f t) = (term284 _142835 _142836 _142837 f t)) = ((term257 _142835 _142836 _142837 f t) = (term318 _142835 _142836 _142837 f t)).
Proof. exact (MK_COMB (@lem8040203 _142835 _142836 _142837 f t) (@lem8040223 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040225 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term257 _142835 _142836 _142837 f t) = (term318 _142835 _142836 _142837 f t).
Proof. exact (EQ_MP (@lem8040224 _142835 _142836 _142837 f t) (@lem8040188 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040236 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) : (term117 _142835 _142836 _142837 x y) = (term117 _142835 _142836 _142837 x y).
Proof. exact (eq_refl (term117 _142835 _142836 _142837 x y)). Qed.
Lemma lem8040237 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term270 _142835 _142836 _142837 x y f t) = (term319 _142835 _142836 _142837 x y f t).
Proof. exact (MK_COMB (@lem8040236 _142835 _142836 _142837 x y) (@lem8040225 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040239 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term20 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem8039629 _83095 p x) (@lem8039628 _83095 p x)). Qed.
Lemma lem8040240 {_142835 _142836 _142837 : Type'} (p : type16 _142835 _142836 _142837) (x : type2 _142835 _142836 _142837) : (term119 _142835 _142836 _142837 x p) = (p x).
Proof. exact (@lem8040239 (type2 _142835 _142836 _142837) p x). Qed.
Lemma lem8040241 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) (x : cart _142835 _142836) (y : cart _142835 _142837) : (term320 _142835 _142836 _142837 x y f t) = (term321 _142835 _142836 _142837 f t x y).
Proof. exact (@lem8040240 _142835 _142836 _142837 (term322 _142835 _142836 _142837 f t) (@pastecart _142835 _142836 _142837 x y)). Qed.
Lemma lem8040242 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (t : type24 _142835 _142837) : (term323 _142835 _142836 _142837 f t a) = (term307 _142835 _142836 _142837 f a t).
Proof. exact (eq_refl (term323 _142835 _142836 _142837 f t a)). Qed.
Lemma lem8040243 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) : (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50) = (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50).
Proof. exact (eq_refl (@SETSPEC (cart _142835 (finite_sum _142836 _142837)) GEN_PVAR_50)). Qed.
Lemma lem8040244 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (a : type2 _142835 _142836 _142837) (t : type24 _142835 _142837) : (term324 _142835 _142836 _142837 GEN_PVAR_50 f t a) = (term309 _142835 _142836 _142837 GEN_PVAR_50 f a t).
Proof. exact (MK_COMB (@lem8040243 _142835 _142836 _142837 GEN_PVAR_50) (@lem8040242 _142835 _142836 _142837 f a t)). Qed.
Lemma lem8040245 {_142835 _142836 _142837 : Type'} (a : type2 _142835 _142836 _142837) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8040246 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) (a : type2 _142835 _142836 _142837) : (term325 _142835 _142836 _142837 GEN_PVAR_50 f t a) = (term311 _142835 _142836 _142837 GEN_PVAR_50 f t a).
Proof. exact (MK_COMB (@lem8040244 _142835 _142836 _142837 GEN_PVAR_50 f a t) (@lem8040245 _142835 _142836 _142837 a)). Qed.
Lemma lem8040247 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term326 _142835 _142836 _142837 GEN_PVAR_50 f t) = (term313 _142835 _142836 _142837 GEN_PVAR_50 f t).
Proof. exact (fun_ext (fun a : type2 _142835 _142836 _142837 => @lem8040246 _142835 _142836 _142837 GEN_PVAR_50 f t a)). Qed.
Lemma lem8040248 {_142835 _142836 _142837 : Type'} : (@ex (cart _142835 (finite_sum _142836 _142837))) = (@ex (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@ex (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040249 {_142835 _142836 _142837 : Type'} (GEN_PVAR_50 : type2 _142835 _142836 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term327 _142835 _142836 _142837 GEN_PVAR_50 f t) = (term315 _142835 _142836 _142837 GEN_PVAR_50 f t).
Proof. exact (MK_COMB (@lem8040248 _142835 _142836 _142837) (@lem8040247 _142835 _142836 _142837 GEN_PVAR_50 f t)). Qed.
Lemma lem8040250 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term328 _142835 _142836 _142837 f t) = (term317 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun GEN_PVAR_50 : type2 _142835 _142836 _142837 => @lem8040249 _142835 _142836 _142837 GEN_PVAR_50 f t)). Qed.
Lemma lem8040251 {_142835 _142836 _142837 : Type'} : (@GSPEC (cart _142835 (finite_sum _142836 _142837))) = (@GSPEC (cart _142835 (finite_sum _142836 _142837))).
Proof. exact (eq_refl (@GSPEC (cart _142835 (finite_sum _142836 _142837)))). Qed.
Lemma lem8040252 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term329 _142835 _142836 _142837 f t) = (term318 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040251 _142835 _142836 _142837) (@lem8040250 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040253 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) : (term117 _142835 _142836 _142837 x y) = (term117 _142835 _142836 _142837 x y).
Proof. exact (eq_refl (term117 _142835 _142836 _142837 x y)). Qed.
Lemma lem8040254 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term320 _142835 _142836 _142837 x y f t) = (term319 _142835 _142836 _142837 x y f t).
Proof. exact (MK_COMB (@lem8040253 _142835 _142836 _142837 x y) (@lem8040252 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040255 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040256 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (y : cart _142835 _142837) (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term330 _142835 _142836 _142837 x y f t) = (term331 _142835 _142836 _142837 x y f t).
Proof. exact (MK_COMB (@lem8040255) (@lem8040254 _142835 _142836 _142837 x y f t)). Qed.
Lemma lem8040257 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term321 _142835 _142836 _142837 f t x y) = (term332 _142835 _142836 _142837 f x y t).
Proof. exact (eq_refl (term321 _142835 _142836 _142837 f t x y)). Qed.
Lemma lem8040258 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : ((term320 _142835 _142836 _142837 x y f t) = (term321 _142835 _142836 _142837 f t x y)) = ((term319 _142835 _142836 _142837 x y f t) = (term332 _142835 _142836 _142837 f x y t)).
Proof. exact (MK_COMB (@lem8040256 _142835 _142836 _142837 x y f t) (@lem8040257 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040259 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term319 _142835 _142836 _142837 x y f t) = (term332 _142835 _142836 _142837 f x y t).
Proof. exact (EQ_MP (@lem8040258 _142835 _142836 _142837 f x y t) (@lem8040241 _142835 _142836 _142837 f t x y)). Qed.
Lemma lem8040267 {_141927 _141928 _141929 : Type'} (x : cart _141927 _141928) (s : type24 _141927 _141928) (y : cart _141927 _141929) (t : type24 _141927 _141929) : (term14 _141927 _141928 _141929 x y s t) = (term15 _141927 _141928 _141929 x s y t).
Proof. exact (EQ_MP (@lem8039598 _141927 _141928 _141929 x s y t) (@lem8039597 _141927 _141928 _141929 x s t y)). Qed.
Lemma lem8040268 {_142835 _142836 _142837 : Type'} (x : cart _142835 _142836) (s : type24 _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term14 _142835 _142836 _142837 x y s t) = (term15 _142835 _142836 _142837 x s y t).
Proof. exact (@lem8040267 _142835 _142836 _142837 x s y t). Qed.
Lemma lem8040271 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (f : type56 _142835 _142836) : (term204 _142835 _142836 s f) = (term204 _142835 _142836 s f).
Proof. exact (eq_refl (term204 _142835 _142836 s f)). Qed.
Lemma lem8040272 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (s : type24 _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term333 _142835 _142836 _142837 f x y s t) = (term334 _142835 _142836 _142837 f x s y t).
Proof. exact (MK_COMB (@lem8040271 _142835 _142836 s f) (@lem8040268 _142835 _142836 _142837 x s y t)). Qed.
Lemma lem8040275 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term335 _142835 _142836 _142837 f x y t) = (term336 _142835 _142836 _142837 f x y t).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8040272 _142835 _142836 _142837 f x s y t)). Qed.
Lemma lem8040276 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8040277 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term332 _142835 _142836 _142837 f x y t) = (term337 _142835 _142836 _142837 f x y t).
Proof. exact (MK_COMB (@lem8040276 _142835 _142836) (@lem8040275 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040282 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term319 _142835 _142836 _142837 x y f t) = (term337 _142835 _142836 _142837 f x y t).
Proof. exact (TRANS (@lem8040259 _142835 _142836 _142837 f x y t) (@lem8040277 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040283 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : (term270 _142835 _142836 _142837 x y f t) = (term337 _142835 _142836 _142837 f x y t).
Proof. exact (TRANS (@lem8040237 _142835 _142836 _142837 x y f t) (@lem8040282 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040284 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (y : cart _142835 _142837) (t : type24 _142835 _142837) : ((term269 _142835 _142836 _142837 x y f t) = (term270 _142835 _142836 _142837 x y f t)) = ((term278 _142835 _142836 _142837 x f y t) = (term337 _142835 _142836 _142837 f x y t)).
Proof. exact (MK_COMB (@lem8040184 _142835 _142836 _142837 x f y t) (@lem8040283 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040289 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term272 _142835 _142836 _142837 x f t) = (term338 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8040284 _142835 _142836 _142837 f x y t)). Qed.
Lemma lem8040290 {_142835 _142837 : Type'} : (@all (cart _142835 _142837)) = (@all (cart _142835 _142837)).
Proof. exact (eq_refl (@all (cart _142835 _142837))). Qed.
Lemma lem8040291 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term274 _142835 _142836 _142837 x f t) = (term339 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8040290 _142835 _142837) (@lem8040289 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8040298 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term276 _142835 _142836 _142837 f t) = (term340 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8040291 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8040299 {_142835 _142836 : Type'} : (@all (cart _142835 _142836)) = (@all (cart _142835 _142836)).
Proof. exact (eq_refl (@all (cart _142835 _142836))). Qed.
Lemma lem8040300 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term277 _142835 _142836 _142837 f t) = (term341 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040299 _142835 _142836) (@lem8040298 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040307 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term256 _142835 _142836 _142837 f t) = (term257 _142835 _142836 _142837 f t)) = (term341 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8040166 _142835 _142836 _142837 f t) (@lem8040300 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040308 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term342 _142835 _142836 _142837 f) = (term343 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8040307 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040309 {_142835 _142837 : Type'} : (@all ((cart _142835 _142837) -> Prop)) = (@all ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8040310 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term344 _142835 _142836 _142837 f) = (term345 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8040309 _142835 _142837) (@lem8040308 _142835 _142836 _142837 f)). Qed.
Lemma lem8040317 {_142835 _142836 _142837 : Type'} : (term346 _142835 _142836 _142837) = (term347 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8040310 _142835 _142836 _142837 f)). Qed.
Lemma lem8040318 {_142835 _142836 : Type'} : (@all (((cart _142835 _142836) -> Prop) -> Prop)) = (@all (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8040319 {_142835 _142836 _142837 : Type'} : (term348 _142835 _142836 _142837) = (term349 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8040318 _142835 _142836) (@lem8040317 _142835 _142836 _142837)). Qed.
Lemma lem8040326 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term350 _142795 _142796 _142797 _142835 _142836 _142837) = (term351 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8040118 _142795 _142796 _142797) (@lem8040319 _142835 _142836 _142837)). Qed.
Lemma lem8040329 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term352 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term353 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8039907 _142753 _142754 _142755) (@lem8040326 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040332 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term353 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term352 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (SYM (@lem8040329 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040458 {A : Type'} (s : type686 A) (x : A) : (term354 A x s) = (term355 A s x).
Proof. exact (EQ_MP (@lem3211663 A s x) (@lem3211662 A s x)). Qed.
Lemma lem8040459 {_142753 _142754 : Type'} (s : type56 _142753 _142754) (x : cart _142753 _142754) : (term356 _142753 _142754 x s) = (term357 _142753 _142754 s x).
Proof. exact (@lem8040458 (cart _142753 _142754) s x). Qed.
Lemma lem8040460 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term356 _142753 _142754 x f) = (term357 _142753 _142754 f x).
Proof. exact (@lem8040459 _142753 _142754 f x). Qed.
Lemma lem8040468 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040469 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (x : type24 _142753 _142754) : (@IN ((cart _142753 _142754) -> Prop) x P) = (P x).
Proof. exact (@lem8040468 (type24 _142753 _142754) P x). Qed.
Lemma lem8040470 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (@IN ((cart _142753 _142754) -> Prop) t f) = (f t).
Proof. exact (@lem8040469 _142753 _142754 f t). Qed.
Lemma lem8040471 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040472 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term204 _142753 _142754 t f) = (term358 _142753 _142754 f t).
Proof. exact (MK_COMB (@lem8040471) (@lem8040470 _142753 _142754 f t)). Qed.
Lemma lem8040474 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040475 {_142753 _142754 : Type'} (P : type24 _142753 _142754) (x : cart _142753 _142754) : (@IN (cart _142753 _142754) x P) = (P x).
Proof. exact (@lem8040474 (cart _142753 _142754) P x). Qed.
Lemma lem8040476 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (@IN (cart _142753 _142754) x t) = (t x).
Proof. exact (@lem8040475 _142753 _142754 t x). Qed.
Lemma lem8040477 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term359 _142753 _142754 f x t) = (term360 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8040472 _142753 _142754 f t) (@lem8040476 _142753 _142754 t x)). Qed.
Lemma lem8040480 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term361 _142753 _142754 f x) = (term362 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8040477 _142753 _142754 f t x)). Qed.
Lemma lem8040481 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8040482 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term357 _142753 _142754 f x) = (term363 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8040481 _142753 _142754) (@lem8040480 _142753 _142754 f x)). Qed.
Lemma lem8040487 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term356 _142753 _142754 x f) = (term363 _142753 _142754 f x).
Proof. exact (TRANS (@lem8040460 _142753 _142754 f x) (@lem8040482 _142753 _142754 f x)). Qed.
Lemma lem8040488 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040489 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term364 _142753 _142754 x f) = (term365 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8040488) (@lem8040487 _142753 _142754 f x)). Qed.
Lemma lem8040491 {A : Type'} (s : type686 A) (x : A) : (term354 A x s) = (term355 A s x).
Proof. exact (EQ_MP (@lem3211663 A s x) (@lem3211662 A s x)). Qed.
Lemma lem8040492 {_142753 _142755 : Type'} (s : type56 _142753 _142755) (x : cart _142753 _142755) : (term356 _142753 _142755 x s) = (term357 _142753 _142755 s x).
Proof. exact (@lem8040491 (cart _142753 _142755) s x). Qed.
Lemma lem8040493 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term356 _142753 _142755 y g) = (term357 _142753 _142755 g y).
Proof. exact (@lem8040492 _142753 _142755 g y). Qed.
Lemma lem8040501 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040502 {_142753 _142755 : Type'} (P : type56 _142753 _142755) (x : type24 _142753 _142755) : (@IN ((cart _142753 _142755) -> Prop) x P) = (P x).
Proof. exact (@lem8040501 (type24 _142753 _142755) P x). Qed.
Lemma lem8040503 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (@IN ((cart _142753 _142755) -> Prop) t g) = (g t).
Proof. exact (@lem8040502 _142753 _142755 g t). Qed.
Lemma lem8040504 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040505 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term204 _142753 _142755 t g) = (term358 _142753 _142755 g t).
Proof. exact (MK_COMB (@lem8040504) (@lem8040503 _142753 _142755 g t)). Qed.
Lemma lem8040507 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040508 {_142753 _142755 : Type'} (P : type24 _142753 _142755) (x : cart _142753 _142755) : (@IN (cart _142753 _142755) x P) = (P x).
Proof. exact (@lem8040507 (cart _142753 _142755) P x). Qed.
Lemma lem8040509 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (@IN (cart _142753 _142755) y t) = (t y).
Proof. exact (@lem8040508 _142753 _142755 t y). Qed.
Lemma lem8040510 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term359 _142753 _142755 g y t) = (term360 _142753 _142755 g t y).
Proof. exact (MK_COMB (@lem8040505 _142753 _142755 g t) (@lem8040509 _142753 _142755 t y)). Qed.
Lemma lem8040513 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term361 _142753 _142755 g y) = (term362 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8040510 _142753 _142755 g t y)). Qed.
Lemma lem8040514 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8040515 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term357 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8040514 _142753 _142755) (@lem8040513 _142753 _142755 g y)). Qed.
Lemma lem8040520 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term356 _142753 _142755 y g) = (term363 _142753 _142755 g y).
Proof. exact (TRANS (@lem8040493 _142753 _142755 g y) (@lem8040515 _142753 _142755 g y)). Qed.
Lemma lem8040521 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term62 _142753 _142754 _142755 x f y g) = (term366 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8040489 _142753 _142754 f x) (@lem8040520 _142753 _142755 g y)). Qed.
Lemma lem8040524 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040525 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term64 _142753 _142754 _142755 x f y g) = (term367 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8040524) (@lem8040521 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8040539 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040540 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (x : type24 _142753 _142754) : (@IN ((cart _142753 _142754) -> Prop) x P) = (P x).
Proof. exact (@lem8040539 (type24 _142753 _142754) P x). Qed.
Lemma lem8040541 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) : (@IN ((cart _142753 _142754) -> Prop) s f) = (f s).
Proof. exact (@lem8040540 _142753 _142754 f s). Qed.
Lemma lem8040542 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040543 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) : (term204 _142753 _142754 s f) = (term358 _142753 _142754 f s).
Proof. exact (MK_COMB (@lem8040542) (@lem8040541 _142753 _142754 f s)). Qed.
Lemma lem8040545 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040546 {_142753 _142755 : Type'} (P : type56 _142753 _142755) (x : type24 _142753 _142755) : (@IN ((cart _142753 _142755) -> Prop) x P) = (P x).
Proof. exact (@lem8040545 (type24 _142753 _142755) P x). Qed.
Lemma lem8040547 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (@IN ((cart _142753 _142755) -> Prop) t g) = (g t).
Proof. exact (@lem8040546 _142753 _142755 g t). Qed.
Lemma lem8040548 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term74 _142753 _142754 _142755 s f t g) = (term368 _142753 _142754 _142755 f s g t).
Proof. exact (MK_COMB (@lem8040543 _142753 _142754 f s) (@lem8040547 _142753 _142755 g t)). Qed.
Lemma lem8040551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040552 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term94 _142753 _142754 _142755 s f t g) = (term369 _142753 _142754 _142755 f s g t).
Proof. exact (MK_COMB (@lem8040551) (@lem8040548 _142753 _142754 _142755 f s g t)). Qed.
Lemma lem8040556 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040557 {_142753 _142754 : Type'} (P : type24 _142753 _142754) (x : cart _142753 _142754) : (@IN (cart _142753 _142754) x P) = (P x).
Proof. exact (@lem8040556 (cart _142753 _142754) P x). Qed.
Lemma lem8040558 {_142753 _142754 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) : (@IN (cart _142753 _142754) x s) = (s x).
Proof. exact (@lem8040557 _142753 _142754 s x). Qed.
Lemma lem8040559 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040560 {_142753 _142754 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) : (term370 _142753 _142754 x s) = (term371 _142753 _142754 s x).
Proof. exact (MK_COMB (@lem8040559) (@lem8040558 _142753 _142754 s x)). Qed.
Lemma lem8040562 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040563 {_142753 _142755 : Type'} (P : type24 _142753 _142755) (x : cart _142753 _142755) : (@IN (cart _142753 _142755) x P) = (P x).
Proof. exact (@lem8040562 (cart _142753 _142755) P x). Qed.
Lemma lem8040564 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (@IN (cart _142753 _142755) y t) = (t y).
Proof. exact (@lem8040563 _142753 _142755 t y). Qed.
Lemma lem8040565 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term15 _142753 _142754 _142755 x s y t) = (term372 _142753 _142754 _142755 s x t y).
Proof. exact (MK_COMB (@lem8040560 _142753 _142754 s x) (@lem8040564 _142753 _142755 t y)). Qed.
Lemma lem8040568 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term134 _142753 _142754 _142755 f g x s y t) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (MK_COMB (@lem8040552 _142753 _142754 _142755 f s g t) (@lem8040565 _142753 _142754 _142755 s x t y)). Qed.
Lemma lem8040571 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term136 _142753 _142754 _142755 f g x s y) = (term374 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8040568 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8040572 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8040573 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term138 _142753 _142754 _142755 f g x s y) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8040572 _142753 _142755) (@lem8040571 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8040578 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term140 _142753 _142754 _142755 f g x y) = (term376 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8040573 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8040579 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8040580 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term141 _142753 _142754 _142755 f g x y) = (term377 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8040579 _142753 _142754) (@lem8040578 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8040585 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term62 _142753 _142754 _142755 x f y g) = (term141 _142753 _142754 _142755 f g x y)) = ((term366 _142753 _142754 _142755 f x g y) = (term377 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8040525 _142753 _142754 _142755 f x g y) (@lem8040580 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8040588 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term142 _142753 _142754 _142755 f g x) = (term378 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8040585 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8040589 {_142753 _142755 : Type'} : (@all (cart _142753 _142755)) = (@all (cart _142753 _142755)).
Proof. exact (eq_refl (@all (cart _142753 _142755))). Qed.
Lemma lem8040590 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term143 _142753 _142754 _142755 f g x) = (term379 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8040589 _142753 _142755) (@lem8040588 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8040595 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term144 _142753 _142754 _142755 f g) = (term380 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8040590 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8040596 {_142753 _142754 : Type'} : (@all (cart _142753 _142754)) = (@all (cart _142753 _142754)).
Proof. exact (eq_refl (@all (cart _142753 _142754))). Qed.
Lemma lem8040597 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term145 _142753 _142754 _142755 f g) = (term381 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8040596 _142753 _142754) (@lem8040595 _142753 _142754 _142755 f g)). Qed.
Lemma lem8040602 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term147 _142753 _142754 _142755 f) = (term382 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8040597 _142753 _142754 _142755 f g)). Qed.
Lemma lem8040603 {_142753 _142755 : Type'} : (@all (((cart _142753 _142755) -> Prop) -> Prop)) = (@all (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8040604 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term149 _142753 _142754 _142755 f) = (term383 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8040603 _142753 _142755) (@lem8040602 _142753 _142754 _142755 f)). Qed.
Lemma lem8040609 {_142753 _142754 _142755 : Type'} : (term151 _142753 _142754 _142755) = (term384 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8040604 _142753 _142754 _142755 f)). Qed.
Lemma lem8040610 {_142753 _142754 : Type'} : (@all (((cart _142753 _142754) -> Prop) -> Prop)) = (@all (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8040611 {_142753 _142754 _142755 : Type'} : (term153 _142753 _142754 _142755) = (term385 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8040610 _142753 _142754) (@lem8040609 _142753 _142754 _142755)). Qed.
Lemma lem8040616 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040617 {_142753 _142754 _142755 : Type'} : (term155 _142753 _142754 _142755) = (term386 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8040616) (@lem8040611 _142753 _142754 _142755)). Qed.
Lemma lem8040641 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040642 {_142795 _142796 : Type'} (P : type24 _142795 _142796) (x : cart _142795 _142796) : (@IN (cart _142795 _142796) x P) = (P x).
Proof. exact (@lem8040641 (cart _142795 _142796) P x). Qed.
Lemma lem8040643 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (@IN (cart _142795 _142796) x s) = (s x).
Proof. exact (@lem8040642 _142795 _142796 s x). Qed.
Lemma lem8040644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040645 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term370 _142795 _142796 x s) = (term371 _142795 _142796 s x).
Proof. exact (MK_COMB (@lem8040644) (@lem8040643 _142795 _142796 s x)). Qed.
Lemma lem8040647 {A : Type'} (s : type686 A) (x : A) : (term354 A x s) = (term355 A s x).
Proof. exact (EQ_MP (@lem3211663 A s x) (@lem3211662 A s x)). Qed.
Lemma lem8040648 {_142795 _142797 : Type'} (s : type56 _142795 _142797) (x : cart _142795 _142797) : (term356 _142795 _142797 x s) = (term357 _142795 _142797 s x).
Proof. exact (@lem8040647 (cart _142795 _142797) s x). Qed.
Lemma lem8040649 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term356 _142795 _142797 y f) = (term357 _142795 _142797 f y).
Proof. exact (@lem8040648 _142795 _142797 f y). Qed.
Lemma lem8040657 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040658 {_142795 _142797 : Type'} (P : type56 _142795 _142797) (x : type24 _142795 _142797) : (@IN ((cart _142795 _142797) -> Prop) x P) = (P x).
Proof. exact (@lem8040657 (type24 _142795 _142797) P x). Qed.
Lemma lem8040659 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) : (@IN ((cart _142795 _142797) -> Prop) t f) = (f t).
Proof. exact (@lem8040658 _142795 _142797 f t). Qed.
Lemma lem8040660 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040661 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) : (term204 _142795 _142797 t f) = (term358 _142795 _142797 f t).
Proof. exact (MK_COMB (@lem8040660) (@lem8040659 _142795 _142797 f t)). Qed.
Lemma lem8040663 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040664 {_142795 _142797 : Type'} (P : type24 _142795 _142797) (x : cart _142795 _142797) : (@IN (cart _142795 _142797) x P) = (P x).
Proof. exact (@lem8040663 (cart _142795 _142797) P x). Qed.
Lemma lem8040665 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y : cart _142795 _142797) : (@IN (cart _142795 _142797) y t) = (t y).
Proof. exact (@lem8040664 _142795 _142797 t y). Qed.
Lemma lem8040666 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term359 _142795 _142797 f y t) = (term360 _142795 _142797 f t y).
Proof. exact (MK_COMB (@lem8040661 _142795 _142797 f t) (@lem8040665 _142795 _142797 t y)). Qed.
Lemma lem8040669 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term361 _142795 _142797 f y) = (term362 _142795 _142797 f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8040666 _142795 _142797 f t y)). Qed.
Lemma lem8040670 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8040671 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term357 _142795 _142797 f y) = (term363 _142795 _142797 f y).
Proof. exact (MK_COMB (@lem8040670 _142795 _142797) (@lem8040669 _142795 _142797 f y)). Qed.
Lemma lem8040676 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term356 _142795 _142797 y f) = (term363 _142795 _142797 f y).
Proof. exact (TRANS (@lem8040649 _142795 _142797 f y) (@lem8040671 _142795 _142797 f y)). Qed.
Lemma lem8040677 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term178 _142795 _142796 _142797 x s y f) = (term387 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8040645 _142795 _142796 s x) (@lem8040676 _142795 _142797 f y)). Qed.
Lemma lem8040680 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040681 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term180 _142795 _142796 _142797 x s y f) = (term388 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8040680) (@lem8040677 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8040689 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040690 {_142795 _142797 : Type'} (P : type56 _142795 _142797) (x : type24 _142795 _142797) : (@IN ((cart _142795 _142797) -> Prop) x P) = (P x).
Proof. exact (@lem8040689 (type24 _142795 _142797) P x). Qed.
Lemma lem8040691 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) : (@IN ((cart _142795 _142797) -> Prop) t f) = (f t).
Proof. exact (@lem8040690 _142795 _142797 f t). Qed.
Lemma lem8040692 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040693 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) : (term204 _142795 _142797 t f) = (term358 _142795 _142797 f t).
Proof. exact (MK_COMB (@lem8040692) (@lem8040691 _142795 _142797 f t)). Qed.
Lemma lem8040697 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040698 {_142795 _142796 : Type'} (P : type24 _142795 _142796) (x : cart _142795 _142796) : (@IN (cart _142795 _142796) x P) = (P x).
Proof. exact (@lem8040697 (cart _142795 _142796) P x). Qed.
Lemma lem8040699 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (@IN (cart _142795 _142796) x s) = (s x).
Proof. exact (@lem8040698 _142795 _142796 s x). Qed.
Lemma lem8040700 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040701 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term370 _142795 _142796 x s) = (term371 _142795 _142796 s x).
Proof. exact (MK_COMB (@lem8040700) (@lem8040699 _142795 _142796 s x)). Qed.
Lemma lem8040703 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040704 {_142795 _142797 : Type'} (P : type24 _142795 _142797) (x : cart _142795 _142797) : (@IN (cart _142795 _142797) x P) = (P x).
Proof. exact (@lem8040703 (cart _142795 _142797) P x). Qed.
Lemma lem8040705 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y : cart _142795 _142797) : (@IN (cart _142795 _142797) y t) = (t y).
Proof. exact (@lem8040704 _142795 _142797 t y). Qed.
Lemma lem8040706 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term15 _142795 _142796 _142797 x s y t) = (term372 _142795 _142796 _142797 s x t y).
Proof. exact (MK_COMB (@lem8040701 _142795 _142796 s x) (@lem8040705 _142795 _142797 t y)). Qed.
Lemma lem8040709 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term238 _142795 _142796 _142797 f x s y t) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8040693 _142795 _142797 f t) (@lem8040706 _142795 _142796 _142797 s x t y)). Qed.
Lemma lem8040712 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term240 _142795 _142796 _142797 f x s y) = (term390 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8040709 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8040713 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8040714 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term241 _142795 _142796 _142797 f x s y) = (term391 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8040713 _142795 _142797) (@lem8040712 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8040719 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term178 _142795 _142796 _142797 x s y f) = (term241 _142795 _142796 _142797 f x s y)) = ((term387 _142795 _142796 _142797 s x f y) = (term391 _142795 _142796 _142797 f s x y)).
Proof. exact (MK_COMB (@lem8040681 _142795 _142796 _142797 s x f y) (@lem8040714 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8040722 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term242 _142795 _142796 _142797 f x s) = (term392 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8040719 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8040723 {_142795 _142797 : Type'} : (@all (cart _142795 _142797)) = (@all (cart _142795 _142797)).
Proof. exact (eq_refl (@all (cart _142795 _142797))). Qed.
Lemma lem8040724 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term243 _142795 _142796 _142797 f x s) = (term393 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8040723 _142795 _142797) (@lem8040722 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8040729 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term244 _142795 _142796 _142797 f s) = (term394 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8040724 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8040730 {_142795 _142796 : Type'} : (@all (cart _142795 _142796)) = (@all (cart _142795 _142796)).
Proof. exact (eq_refl (@all (cart _142795 _142796))). Qed.
Lemma lem8040731 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term245 _142795 _142796 _142797 f s) = (term395 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8040730 _142795 _142796) (@lem8040729 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040736 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term247 _142795 _142796 _142797 s) = (term396 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8040731 _142795 _142796 _142797 f s)). Qed.
Lemma lem8040737 {_142795 _142797 : Type'} : (@all (((cart _142795 _142797) -> Prop) -> Prop)) = (@all (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8040738 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term249 _142795 _142796 _142797 s) = (term397 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8040737 _142795 _142797) (@lem8040736 _142795 _142796 _142797 s)). Qed.
Lemma lem8040743 {_142795 _142796 _142797 : Type'} : (term251 _142795 _142796 _142797) = (term398 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8040738 _142795 _142796 _142797 s)). Qed.
Lemma lem8040744 {_142795 _142796 : Type'} : (@all ((cart _142795 _142796) -> Prop)) = (@all ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8040745 {_142795 _142796 _142797 : Type'} : (term253 _142795 _142796 _142797) = (term399 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8040744 _142795 _142796) (@lem8040743 _142795 _142796 _142797)). Qed.
Lemma lem8040750 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040751 {_142795 _142796 _142797 : Type'} : (term255 _142795 _142796 _142797) = (term400 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8040750) (@lem8040745 _142795 _142796 _142797)). Qed.
Lemma lem8040773 {A : Type'} (s : type686 A) (x : A) : (term354 A x s) = (term355 A s x).
Proof. exact (EQ_MP (@lem3211663 A s x) (@lem3211662 A s x)). Qed.
Lemma lem8040774 {_142835 _142836 : Type'} (s : type56 _142835 _142836) (x : cart _142835 _142836) : (term356 _142835 _142836 x s) = (term357 _142835 _142836 s x).
Proof. exact (@lem8040773 (cart _142835 _142836) s x). Qed.
Lemma lem8040775 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term356 _142835 _142836 x f) = (term357 _142835 _142836 f x).
Proof. exact (@lem8040774 _142835 _142836 f x). Qed.
Lemma lem8040783 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040784 {_142835 _142836 : Type'} (P : type56 _142835 _142836) (x : type24 _142835 _142836) : (@IN ((cart _142835 _142836) -> Prop) x P) = (P x).
Proof. exact (@lem8040783 (type24 _142835 _142836) P x). Qed.
Lemma lem8040785 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) : (@IN ((cart _142835 _142836) -> Prop) t f) = (f t).
Proof. exact (@lem8040784 _142835 _142836 f t). Qed.
Lemma lem8040786 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040787 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) : (term204 _142835 _142836 t f) = (term358 _142835 _142836 f t).
Proof. exact (MK_COMB (@lem8040786) (@lem8040785 _142835 _142836 f t)). Qed.
Lemma lem8040789 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040790 {_142835 _142836 : Type'} (P : type24 _142835 _142836) (x : cart _142835 _142836) : (@IN (cart _142835 _142836) x P) = (P x).
Proof. exact (@lem8040789 (cart _142835 _142836) P x). Qed.
Lemma lem8040791 {_142835 _142836 : Type'} (t : type24 _142835 _142836) (x : cart _142835 _142836) : (@IN (cart _142835 _142836) x t) = (t x).
Proof. exact (@lem8040790 _142835 _142836 t x). Qed.
Lemma lem8040792 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term359 _142835 _142836 f x t) = (term360 _142835 _142836 f t x).
Proof. exact (MK_COMB (@lem8040787 _142835 _142836 f t) (@lem8040791 _142835 _142836 t x)). Qed.
Lemma lem8040795 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term361 _142835 _142836 f x) = (term362 _142835 _142836 f x).
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8040792 _142835 _142836 f t x)). Qed.
Lemma lem8040796 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8040797 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term357 _142835 _142836 f x) = (term363 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8040796 _142835 _142836) (@lem8040795 _142835 _142836 f x)). Qed.
Lemma lem8040802 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term356 _142835 _142836 x f) = (term363 _142835 _142836 f x).
Proof. exact (TRANS (@lem8040775 _142835 _142836 f x) (@lem8040797 _142835 _142836 f x)). Qed.
Lemma lem8040803 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040804 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term364 _142835 _142836 x f) = (term365 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8040803) (@lem8040802 _142835 _142836 f x)). Qed.
Lemma lem8040806 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040807 {_142835 _142837 : Type'} (P : type24 _142835 _142837) (x : cart _142835 _142837) : (@IN (cart _142835 _142837) x P) = (P x).
Proof. exact (@lem8040806 (cart _142835 _142837) P x). Qed.
Lemma lem8040808 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (@IN (cart _142835 _142837) y t) = (t y).
Proof. exact (@lem8040807 _142835 _142837 t y). Qed.
Lemma lem8040809 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term278 _142835 _142836 _142837 x f y t) = (term401 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8040804 _142835 _142836 f x) (@lem8040808 _142835 _142837 t y)). Qed.
Lemma lem8040812 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8040813 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term280 _142835 _142836 _142837 x f y t) = (term402 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8040812) (@lem8040809 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8040821 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040822 {_142835 _142836 : Type'} (P : type56 _142835 _142836) (x : type24 _142835 _142836) : (@IN ((cart _142835 _142836) -> Prop) x P) = (P x).
Proof. exact (@lem8040821 (type24 _142835 _142836) P x). Qed.
Lemma lem8040823 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) : (@IN ((cart _142835 _142836) -> Prop) s f) = (f s).
Proof. exact (@lem8040822 _142835 _142836 f s). Qed.
Lemma lem8040824 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040825 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) : (term204 _142835 _142836 s f) = (term358 _142835 _142836 f s).
Proof. exact (MK_COMB (@lem8040824) (@lem8040823 _142835 _142836 f s)). Qed.
Lemma lem8040829 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040830 {_142835 _142836 : Type'} (P : type24 _142835 _142836) (x : cart _142835 _142836) : (@IN (cart _142835 _142836) x P) = (P x).
Proof. exact (@lem8040829 (cart _142835 _142836) P x). Qed.
Lemma lem8040831 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (x : cart _142835 _142836) : (@IN (cart _142835 _142836) x s) = (s x).
Proof. exact (@lem8040830 _142835 _142836 s x). Qed.
Lemma lem8040832 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8040833 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (x : cart _142835 _142836) : (term370 _142835 _142836 x s) = (term371 _142835 _142836 s x).
Proof. exact (MK_COMB (@lem8040832) (@lem8040831 _142835 _142836 s x)). Qed.
Lemma lem8040835 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem8040836 {_142835 _142837 : Type'} (P : type24 _142835 _142837) (x : cart _142835 _142837) : (@IN (cart _142835 _142837) x P) = (P x).
Proof. exact (@lem8040835 (cart _142835 _142837) P x). Qed.
Lemma lem8040837 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (@IN (cart _142835 _142837) y t) = (t y).
Proof. exact (@lem8040836 _142835 _142837 t y). Qed.
Lemma lem8040838 {_142835 _142836 _142837 : Type'} (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term15 _142835 _142836 _142837 x s y t) = (term372 _142835 _142836 _142837 s x t y).
Proof. exact (MK_COMB (@lem8040833 _142835 _142836 s x) (@lem8040837 _142835 _142837 t y)). Qed.
Lemma lem8040841 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term334 _142835 _142836 _142837 f x s y t) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8040825 _142835 _142836 f s) (@lem8040838 _142835 _142836 _142837 s x t y)). Qed.
Lemma lem8040844 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term336 _142835 _142836 _142837 f x y t) = (term404 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8040841 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8040845 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8040846 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term337 _142835 _142836 _142837 f x y t) = (term405 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8040845 _142835 _142836) (@lem8040844 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8040851 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term278 _142835 _142836 _142837 x f y t) = (term337 _142835 _142836 _142837 f x y t)) = ((term401 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8040813 _142835 _142836 _142837 f x t y) (@lem8040846 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8040854 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term338 _142835 _142836 _142837 f x t) = (term406 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8040851 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8040855 {_142835 _142837 : Type'} : (@all (cart _142835 _142837)) = (@all (cart _142835 _142837)).
Proof. exact (eq_refl (@all (cart _142835 _142837))). Qed.
Lemma lem8040856 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term339 _142835 _142836 _142837 f x t) = (term407 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8040855 _142835 _142837) (@lem8040854 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8040861 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term340 _142835 _142836 _142837 f t) = (term408 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8040856 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8040862 {_142835 _142836 : Type'} : (@all (cart _142835 _142836)) = (@all (cart _142835 _142836)).
Proof. exact (eq_refl (@all (cart _142835 _142836))). Qed.
Lemma lem8040863 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term341 _142835 _142836 _142837 f t) = (term409 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8040862 _142835 _142836) (@lem8040861 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040868 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term343 _142835 _142836 _142837 f) = (term410 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8040863 _142835 _142836 _142837 f t)). Qed.
Lemma lem8040869 {_142835 _142837 : Type'} : (@all ((cart _142835 _142837) -> Prop)) = (@all ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8040870 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term345 _142835 _142836 _142837 f) = (term411 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8040869 _142835 _142837) (@lem8040868 _142835 _142836 _142837 f)). Qed.
Lemma lem8040875 {_142835 _142836 _142837 : Type'} : (term347 _142835 _142836 _142837) = (term412 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8040870 _142835 _142836 _142837 f)). Qed.
Lemma lem8040876 {_142835 _142836 : Type'} : (@all (((cart _142835 _142836) -> Prop) -> Prop)) = (@all (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8040877 {_142835 _142836 _142837 : Type'} : (term349 _142835 _142836 _142837) = (term413 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8040876 _142835 _142836) (@lem8040875 _142835 _142836 _142837)). Qed.
Lemma lem8040882 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term351 _142795 _142796 _142797 _142835 _142836 _142837) = (term414 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8040751 _142795 _142796 _142797) (@lem8040877 _142835 _142836 _142837)). Qed.
Lemma lem8040885 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term353 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8040617 _142753 _142754 _142755) (@lem8040882 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040888 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term353 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (SYM (@lem8040885 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040890 (p : Prop) : p = (term416 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8040891 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8040890 (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040892 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (SYM (@lem8040891 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040893 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8040896 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8040897 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8040896 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h0). Qed.
Lemma lem8040898 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8040899 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8040900 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (h2 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (@lem8040898 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h2 (@lem8040899 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8040901 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term420 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8040900 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1 h0). Qed.
Lemma lem8040902 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8040903 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (h2 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (@lem8040901 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1 (@lem8040902 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h2)). Qed.
Lemma lem8040904 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8040903 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h0 h1). Qed.
Lemma lem8040905 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term421 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8040904 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h0). Qed.
Lemma lem8040908 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (@lem8040905 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 (@lem8040897 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040909 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (@lem8040908 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837). Qed.
Lemma lem8040911 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8040912 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term422 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8040911 (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8040914 (t : Prop) : (term423 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8040915 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term422 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8040914 (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041220 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8040912 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8040915 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041229 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term403 _142835 _142836 _142837 f s x t y) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term403 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041230 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term404 _142835 _142836 _142837 f x t y) = (term404 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8041229 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041231 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041232 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term405 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041231 _142835 _142836) (@lem8041230 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041233 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (t y) = (t y).
Proof. exact (eq_refl (t y)). Qed.
Lemma lem8041238 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term360 _142835 _142836 f t x) = (term360 _142835 _142836 f t x).
Proof. exact (eq_refl (term360 _142835 _142836 f t x)). Qed.
Lemma lem8041239 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term362 _142835 _142836 f x) = (term362 _142835 _142836 f x).
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8041238 _142835 _142836 f t x)). Qed.
Lemma lem8041240 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041241 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term363 _142835 _142836 f x) = (term363 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041240 _142835 _142836) (@lem8041239 _142835 _142836 f x)). Qed.
Lemma lem8041242 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041243 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term365 _142835 _142836 f x) = (term365 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041242) (@lem8041241 _142835 _142836 f x)). Qed.
Lemma lem8041244 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term401 _142835 _142836 _142837 f x t y) = (term401 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041243 _142835 _142836 f x) (@lem8041233 _142835 _142837 t y)). Qed.
Lemma lem8041245 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8041246 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term402 _142835 _142836 _142837 f x t y) = (term402 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041245) (@lem8041244 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041247 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term401 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y)) = ((term401 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8041246 _142835 _142836 _142837 f x t y) (@lem8041232 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041248 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term406 _142835 _142836 _142837 f x t) = (term406 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8041247 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041249 {_142835 _142837 : Type'} : (@all (cart _142835 _142837)) = (@all (cart _142835 _142837)).
Proof. exact (eq_refl (@all (cart _142835 _142837))). Qed.
Lemma lem8041250 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term407 _142835 _142836 _142837 f x t) = (term407 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8041249 _142835 _142837) (@lem8041248 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041251 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term408 _142835 _142836 _142837 f t) = (term408 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8041250 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041252 {_142835 _142836 : Type'} : (@all (cart _142835 _142836)) = (@all (cart _142835 _142836)).
Proof. exact (eq_refl (@all (cart _142835 _142836))). Qed.
Lemma lem8041253 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term409 _142835 _142836 _142837 f t) = (term409 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8041252 _142835 _142836) (@lem8041251 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041254 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term410 _142835 _142836 _142837 f) = (term410 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8041253 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041255 {_142835 _142837 : Type'} : (@all ((cart _142835 _142837) -> Prop)) = (@all ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8041256 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term411 _142835 _142836 _142837 f) = (term411 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8041255 _142835 _142837) (@lem8041254 _142835 _142836 _142837 f)). Qed.
Lemma lem8041257 {_142835 _142836 _142837 : Type'} : (term412 _142835 _142836 _142837) = (term412 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8041256 _142835 _142836 _142837 f)). Qed.
Lemma lem8041258 {_142835 _142836 : Type'} : (@all (((cart _142835 _142836) -> Prop) -> Prop)) = (@all (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8041259 {_142835 _142836 _142837 : Type'} : (term413 _142835 _142836 _142837) = (term413 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041258 _142835 _142836) (@lem8041257 _142835 _142836 _142837)). Qed.
Lemma lem8041268 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term389 _142795 _142796 _142797 f s x t y) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term389 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041269 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term390 _142795 _142796 _142797 f s x y) = (term390 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041268 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041270 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041271 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term391 _142795 _142796 _142797 f s x y) = (term391 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041270 _142795 _142797) (@lem8041269 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041276 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term360 _142795 _142797 f t y) = (term360 _142795 _142797 f t y).
Proof. exact (eq_refl (term360 _142795 _142797 f t y)). Qed.
Lemma lem8041277 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term362 _142795 _142797 f y) = (term362 _142795 _142797 f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041276 _142795 _142797 f t y)). Qed.
Lemma lem8041278 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041279 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term363 _142795 _142797 f y) = (term363 _142795 _142797 f y).
Proof. exact (MK_COMB (@lem8041278 _142795 _142797) (@lem8041277 _142795 _142797 f y)). Qed.
Lemma lem8041282 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term371 _142795 _142796 s x) = (term371 _142795 _142796 s x).
Proof. exact (eq_refl (term371 _142795 _142796 s x)). Qed.
Lemma lem8041283 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term387 _142795 _142796 _142797 s x f y) = (term387 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041282 _142795 _142796 s x) (@lem8041279 _142795 _142797 f y)). Qed.
Lemma lem8041284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8041285 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term388 _142795 _142796 _142797 s x f y) = (term388 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041284) (@lem8041283 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8041286 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term387 _142795 _142796 _142797 s x f y) = (term391 _142795 _142796 _142797 f s x y)) = ((term387 _142795 _142796 _142797 s x f y) = (term391 _142795 _142796 _142797 f s x y)).
Proof. exact (MK_COMB (@lem8041285 _142795 _142796 _142797 s x f y) (@lem8041271 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041287 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term392 _142795 _142796 _142797 f s x) = (term392 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8041286 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041288 {_142795 _142797 : Type'} : (@all (cart _142795 _142797)) = (@all (cart _142795 _142797)).
Proof. exact (eq_refl (@all (cart _142795 _142797))). Qed.
Lemma lem8041289 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term393 _142795 _142796 _142797 f s x) = (term393 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8041288 _142795 _142797) (@lem8041287 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041290 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term394 _142795 _142796 _142797 f s) = (term394 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8041289 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041291 {_142795 _142796 : Type'} : (@all (cart _142795 _142796)) = (@all (cart _142795 _142796)).
Proof. exact (eq_refl (@all (cart _142795 _142796))). Qed.
Lemma lem8041292 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term395 _142795 _142796 _142797 f s) = (term395 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8041291 _142795 _142796) (@lem8041290 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041293 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term396 _142795 _142796 _142797 s) = (term396 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8041292 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041294 {_142795 _142797 : Type'} : (@all (((cart _142795 _142797) -> Prop) -> Prop)) = (@all (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8041295 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term397 _142795 _142796 _142797 s) = (term397 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8041294 _142795 _142797) (@lem8041293 _142795 _142796 _142797 s)). Qed.
Lemma lem8041296 {_142795 _142796 _142797 : Type'} : (term398 _142795 _142796 _142797) = (term398 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8041295 _142795 _142796 _142797 s)). Qed.
Lemma lem8041297 {_142795 _142796 : Type'} : (@all ((cart _142795 _142796) -> Prop)) = (@all ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8041298 {_142795 _142796 _142797 : Type'} : (term399 _142795 _142796 _142797) = (term399 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8041297 _142795 _142796) (@lem8041296 _142795 _142796 _142797)). Qed.
Lemma lem8041299 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041300 {_142795 _142796 _142797 : Type'} : (term400 _142795 _142796 _142797) = (term400 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8041299) (@lem8041298 _142795 _142796 _142797)). Qed.
Lemma lem8041301 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term414 _142795 _142796 _142797 _142835 _142836 _142837) = (term414 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041300 _142795 _142796 _142797) (@lem8041259 _142835 _142836 _142837)). Qed.
Lemma lem8041314 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term373 _142753 _142754 _142755 f g s x t y) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term373 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041315 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term374 _142753 _142754 _142755 f g s x y) = (term374 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041314 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041316 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041317 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term375 _142753 _142754 _142755 f g s x y) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8041316 _142753 _142755) (@lem8041315 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041318 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term376 _142753 _142754 _142755 f g x y) = (term376 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8041317 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041319 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041320 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term377 _142753 _142754 _142755 f g x y) = (term377 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041319 _142753 _142754) (@lem8041318 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041325 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term360 _142753 _142755 g t y) = (term360 _142753 _142755 g t y).
Proof. exact (eq_refl (term360 _142753 _142755 g t y)). Qed.
Lemma lem8041326 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term362 _142753 _142755 g y) = (term362 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041325 _142753 _142755 g t y)). Qed.
Lemma lem8041327 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041328 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term363 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8041327 _142753 _142755) (@lem8041326 _142753 _142755 g y)). Qed.
Lemma lem8041333 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term360 _142753 _142754 f t x) = (term360 _142753 _142754 f t x).
Proof. exact (eq_refl (term360 _142753 _142754 f t x)). Qed.
Lemma lem8041334 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term362 _142753 _142754 f x) = (term362 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8041333 _142753 _142754 f t x)). Qed.
Lemma lem8041335 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041336 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term363 _142753 _142754 f x) = (term363 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041335 _142753 _142754) (@lem8041334 _142753 _142754 f x)). Qed.
Lemma lem8041337 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041338 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term365 _142753 _142754 f x) = (term365 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041337) (@lem8041336 _142753 _142754 f x)). Qed.
Lemma lem8041339 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term366 _142753 _142754 _142755 f x g y) = (term366 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041338 _142753 _142754 f x) (@lem8041328 _142753 _142755 g y)). Qed.
Lemma lem8041340 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8041341 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term367 _142753 _142754 _142755 f x g y) = (term367 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041340) (@lem8041339 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8041342 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term366 _142753 _142754 _142755 f x g y) = (term377 _142753 _142754 _142755 f g x y)) = ((term366 _142753 _142754 _142755 f x g y) = (term377 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8041341 _142753 _142754 _142755 f x g y) (@lem8041320 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041343 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term378 _142753 _142754 _142755 f g x) = (term378 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8041342 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041344 {_142753 _142755 : Type'} : (@all (cart _142753 _142755)) = (@all (cart _142753 _142755)).
Proof. exact (eq_refl (@all (cart _142753 _142755))). Qed.
Lemma lem8041345 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term379 _142753 _142754 _142755 f g x) = (term379 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041344 _142753 _142755) (@lem8041343 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041346 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term380 _142753 _142754 _142755 f g) = (term380 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8041345 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041347 {_142753 _142754 : Type'} : (@all (cart _142753 _142754)) = (@all (cart _142753 _142754)).
Proof. exact (eq_refl (@all (cart _142753 _142754))). Qed.
Lemma lem8041348 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term381 _142753 _142754 _142755 f g) = (term381 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8041347 _142753 _142754) (@lem8041346 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041349 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term382 _142753 _142754 _142755 f) = (term382 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8041348 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041350 {_142753 _142755 : Type'} : (@all (((cart _142753 _142755) -> Prop) -> Prop)) = (@all (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8041351 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term383 _142753 _142754 _142755 f) = (term383 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8041350 _142753 _142755) (@lem8041349 _142753 _142754 _142755 f)). Qed.
Lemma lem8041352 {_142753 _142754 _142755 : Type'} : (term384 _142753 _142754 _142755) = (term384 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8041351 _142753 _142754 _142755 f)). Qed.
Lemma lem8041353 {_142753 _142754 : Type'} : (@all (((cart _142753 _142754) -> Prop) -> Prop)) = (@all (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8041354 {_142753 _142754 _142755 : Type'} : (term385 _142753 _142754 _142755) = (term385 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8041353 _142753 _142754) (@lem8041352 _142753 _142754 _142755)). Qed.
Lemma lem8041355 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041356 {_142753 _142754 _142755 : Type'} : (term386 _142753 _142754 _142755) = (term386 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8041355) (@lem8041354 _142753 _142754 _142755)). Qed.
Lemma lem8041357 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041356 _142753 _142754 _142755) (@lem8041301 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041512 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8041220 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8041357 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041513 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (SYM (@lem8041512 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041515 (p : Prop) : p = (term416 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8041516 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8041515 (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041517 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (SYM (@lem8041516 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041518 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (h1). Qed.
Lemma lem8041527 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term424 _142753 _142754 f t x) = (term425 _142753 _142754 f t x).
Proof. exact (@lem17045 (f t) (t x)). Qed.
Lemma lem8041530 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term360 _142753 _142754 f t x) = (term360 _142753 _142754 f t x).
Proof. exact (eq_refl (term360 _142753 _142754 f t x)). Qed.
Lemma lem8041531 {_142753 _142754 : Type'} (P : type56 _142753 _142754) : (term426 _142753 _142754 P) = (term427 _142753 _142754 P).
Proof. exact (@lem18394 (type24 _142753 _142754) P). Qed.
Lemma lem8041532 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term428 _142753 _142754 f x) = (term429 _142753 _142754 f x).
Proof. exact (@lem8041531 _142753 _142754 (term362 _142753 _142754 f x)). Qed.
Lemma lem8041533 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term430 _142753 _142754 f x t) = (term360 _142753 _142754 f t x).
Proof. exact (eq_refl (term430 _142753 _142754 f x t)). Qed.
Lemma lem8041534 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041535 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term431 _142753 _142754 f x t) = (term424 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8041534) (@lem8041533 _142753 _142754 f t x)). Qed.
Lemma lem8041536 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term431 _142753 _142754 f x t) = (term425 _142753 _142754 f t x).
Proof. exact (TRANS (@lem8041535 _142753 _142754 f t x) (@lem8041527 _142753 _142754 f t x)). Qed.
Lemma lem8041537 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term432 _142753 _142754 f x) = (term433 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8041536 _142753 _142754 f t x)). Qed.
Lemma lem8041538 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041539 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term429 _142753 _142754 f x) = (term434 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041538 _142753 _142754) (@lem8041537 _142753 _142754 f x)). Qed.
Lemma lem8041540 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term428 _142753 _142754 f x) = (term434 _142753 _142754 f x).
Proof. exact (TRANS (@lem8041532 _142753 _142754 f x) (@lem8041539 _142753 _142754 f x)). Qed.
Lemma lem8041541 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term362 _142753 _142754 f x) = (term362 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8041530 _142753 _142754 f t x)). Qed.
Lemma lem8041542 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041543 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term363 _142753 _142754 f x) = (term363 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041542 _142753 _142754) (@lem8041541 _142753 _142754 f x)). Qed.
Lemma lem8041552 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term424 _142753 _142755 g t y) = (term425 _142753 _142755 g t y).
Proof. exact (@lem17045 (g t) (t y)). Qed.
Lemma lem8041555 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term360 _142753 _142755 g t y) = (term360 _142753 _142755 g t y).
Proof. exact (eq_refl (term360 _142753 _142755 g t y)). Qed.
Lemma lem8041556 {_142753 _142755 : Type'} (P : type56 _142753 _142755) : (term426 _142753 _142755 P) = (term427 _142753 _142755 P).
Proof. exact (@lem18394 (type24 _142753 _142755) P). Qed.
Lemma lem8041557 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term428 _142753 _142755 g y) = (term429 _142753 _142755 g y).
Proof. exact (@lem8041556 _142753 _142755 (term362 _142753 _142755 g y)). Qed.
Lemma lem8041558 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term430 _142753 _142755 g y t) = (term360 _142753 _142755 g t y).
Proof. exact (eq_refl (term430 _142753 _142755 g y t)). Qed.
Lemma lem8041559 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041560 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term431 _142753 _142755 g y t) = (term424 _142753 _142755 g t y).
Proof. exact (MK_COMB (@lem8041559) (@lem8041558 _142753 _142755 g t y)). Qed.
Lemma lem8041561 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term431 _142753 _142755 g y t) = (term425 _142753 _142755 g t y).
Proof. exact (TRANS (@lem8041560 _142753 _142755 g t y) (@lem8041552 _142753 _142755 g t y)). Qed.
Lemma lem8041562 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term432 _142753 _142755 g y) = (term433 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041561 _142753 _142755 g t y)). Qed.
Lemma lem8041563 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041564 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term429 _142753 _142755 g y) = (term434 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8041563 _142753 _142755) (@lem8041562 _142753 _142755 g y)). Qed.
Lemma lem8041565 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term428 _142753 _142755 g y) = (term434 _142753 _142755 g y).
Proof. exact (TRANS (@lem8041557 _142753 _142755 g y) (@lem8041564 _142753 _142755 g y)). Qed.
Lemma lem8041566 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term362 _142753 _142755 g y) = (term362 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041555 _142753 _142755 g t y)). Qed.
Lemma lem8041567 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041568 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term363 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8041567 _142753 _142755) (@lem8041566 _142753 _142755 g y)). Qed.
Lemma lem8041569 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041570 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term435 _142753 _142754 f x) = (term436 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041569) (@lem8041540 _142753 _142754 f x)). Qed.
Lemma lem8041571 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term437 _142753 _142754 _142755 f x g y) = (term438 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041570 _142753 _142754 f x) (@lem8041565 _142753 _142755 g y)). Qed.
Lemma lem8041572 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term439 _142753 _142754 _142755 f x g y) = (term437 _142753 _142754 _142755 f x g y).
Proof. exact (@lem17045 (term363 _142753 _142754 f x) (term363 _142753 _142755 g y)). Qed.
Lemma lem8041573 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term439 _142753 _142754 _142755 f x g y) = (term438 _142753 _142754 _142755 f x g y).
Proof. exact (TRANS (@lem8041572 _142753 _142754 _142755 f x g y) (@lem8041571 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8041574 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041575 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term365 _142753 _142754 f x) = (term365 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8041574) (@lem8041543 _142753 _142754 f x)). Qed.
Lemma lem8041576 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term366 _142753 _142754 _142755 f x g y) = (term366 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041575 _142753 _142754 f x) (@lem8041568 _142753 _142755 g y)). Qed.
Lemma lem8041585 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term440 _142753 _142754 _142755 f s g t) = (term441 _142753 _142754 _142755 f s g t).
Proof. exact (@lem17045 (f s) (g t)). Qed.
Lemma lem8041597 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term442 _142753 _142754 _142755 s x t y) = (term443 _142753 _142754 _142755 s x t y).
Proof. exact (@lem17045 (s x) (t y)). Qed.
Lemma lem8041601 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041602 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term444 _142753 _142754 _142755 f s g t) = (term445 _142753 _142754 _142755 f s g t).
Proof. exact (MK_COMB (@lem8041601) (@lem8041585 _142753 _142754 _142755 f s g t)). Qed.
Lemma lem8041603 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term446 _142753 _142754 _142755 f g s x t y) = (term447 _142753 _142754 _142755 f g s x t y).
Proof. exact (MK_COMB (@lem8041602 _142753 _142754 _142755 f s g t) (@lem8041597 _142753 _142754 _142755 s x t y)). Qed.
Lemma lem8041604 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term448 _142753 _142754 _142755 f g s x t y) = (term446 _142753 _142754 _142755 f g s x t y).
Proof. exact (@lem17045 (term368 _142753 _142754 _142755 f s g t) (term372 _142753 _142754 _142755 s x t y)). Qed.
Lemma lem8041605 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term448 _142753 _142754 _142755 f g s x t y) = (term447 _142753 _142754 _142755 f g s x t y).
Proof. exact (TRANS (@lem8041604 _142753 _142754 _142755 f g s x t y) (@lem8041603 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041608 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term373 _142753 _142754 _142755 f g s x t y) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term373 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041609 {_142753 _142755 : Type'} (P : type56 _142753 _142755) : (term426 _142753 _142755 P) = (term427 _142753 _142755 P).
Proof. exact (@lem18394 (type24 _142753 _142755) P). Qed.
Lemma lem8041610 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term449 _142753 _142754 _142755 f g s x y) = (term450 _142753 _142754 _142755 f g s x y).
Proof. exact (@lem8041609 _142753 _142755 (term374 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041611 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term451 _142753 _142754 _142755 f g s x y t) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term451 _142753 _142754 _142755 f g s x y t)). Qed.
Lemma lem8041612 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041613 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term452 _142753 _142754 _142755 f g s x y t) = (term448 _142753 _142754 _142755 f g s x t y).
Proof. exact (MK_COMB (@lem8041612) (@lem8041611 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041614 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term452 _142753 _142754 _142755 f g s x y t) = (term447 _142753 _142754 _142755 f g s x t y).
Proof. exact (TRANS (@lem8041613 _142753 _142754 _142755 f g s x t y) (@lem8041605 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041615 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term453 _142753 _142754 _142755 f g s x y) = (term454 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041614 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041616 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041617 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term450 _142753 _142754 _142755 f g s x y) = (term455 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8041616 _142753 _142755) (@lem8041615 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041618 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term449 _142753 _142754 _142755 f g s x y) = (term455 _142753 _142754 _142755 f g s x y).
Proof. exact (TRANS (@lem8041610 _142753 _142754 _142755 f g s x y) (@lem8041617 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041619 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term374 _142753 _142754 _142755 f g s x y) = (term374 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8041608 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8041620 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8041621 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term375 _142753 _142754 _142755 f g s x y) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8041620 _142753 _142755) (@lem8041619 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041622 {_142753 _142754 : Type'} (P : type56 _142753 _142754) : (term426 _142753 _142754 P) = (term427 _142753 _142754 P).
Proof. exact (@lem18394 (type24 _142753 _142754) P). Qed.
Lemma lem8041623 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term456 _142753 _142754 _142755 f g x y) = (term457 _142753 _142754 _142755 f g x y).
Proof. exact (@lem8041622 _142753 _142754 (term376 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041624 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term458 _142753 _142754 _142755 f g x y s) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (eq_refl (term458 _142753 _142754 _142755 f g x y s)). Qed.
Lemma lem8041625 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041626 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term459 _142753 _142754 _142755 f g x y s) = (term449 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8041625) (@lem8041624 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041627 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term459 _142753 _142754 _142755 f g x y s) = (term455 _142753 _142754 _142755 f g s x y).
Proof. exact (TRANS (@lem8041626 _142753 _142754 _142755 f g s x y) (@lem8041618 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041628 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term460 _142753 _142754 _142755 f g x y) = (term461 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8041627 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041629 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041630 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term457 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041629 _142753 _142754) (@lem8041628 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041631 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term456 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8041623 _142753 _142754 _142755 f g x y) (@lem8041630 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041632 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term376 _142753 _142754 _142755 f g x y) = (term376 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8041621 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8041633 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8041634 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term377 _142753 _142754 _142755 f g x y) = (term377 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041633 _142753 _142754) (@lem8041632 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041635 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041636 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term463 _142753 _142754 _142755 f x g y) = (term464 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041635) (@lem8041573 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8041637 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term465 _142753 _142754 _142755 f g x y) = (term466 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041636 _142753 _142754 _142755 f x g y) (@lem8041634 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041638 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041639 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term467 _142753 _142754 _142755 f x g y) = (term467 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8041638) (@lem8041576 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8041640 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term468 _142753 _142754 _142755 f g x y) = (term469 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041639 _142753 _142754 _142755 f x g y) (@lem8041631 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041641 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041642 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term470 _142753 _142754 _142755 f g x y) = (term471 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041641) (@lem8041640 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041643 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term472 _142753 _142754 _142755 f g x y) = (term473 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041642 _142753 _142754 _142755 f g x y) (@lem8041637 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041644 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term474 _142753 _142754 _142755 f g x y) = (term472 _142753 _142754 _142755 f g x y).
Proof. exact (@lem17646 (term366 _142753 _142754 _142755 f x g y) (term377 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041645 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term474 _142753 _142754 _142755 f g x y) = (term473 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8041644 _142753 _142754 _142755 f g x y) (@lem8041643 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041646 {_142753 _142755 : Type'} (P : type24 _142753 _142755) : (term475 _142753 _142755 P) = (term476 _142753 _142755 P).
Proof. exact (@lem18392 (cart _142753 _142755) P). Qed.
Lemma lem8041647 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term477 _142753 _142754 _142755 f g x) = (term478 _142753 _142754 _142755 f g x).
Proof. exact (@lem8041646 _142753 _142755 (term378 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041648 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term479 _142753 _142754 _142755 f g x y) = ((term366 _142753 _142754 _142755 f x g y) = (term377 _142753 _142754 _142755 f g x y)).
Proof. exact (eq_refl (term479 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041649 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041650 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term480 _142753 _142754 _142755 f g x y) = (term474 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041649) (@lem8041648 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041651 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term480 _142753 _142754 _142755 f g x y) = (term473 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8041650 _142753 _142754 _142755 f g x y) (@lem8041645 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041652 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term481 _142753 _142754 _142755 f g x) = (term482 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8041651 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041653 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8041654 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term478 _142753 _142754 _142755 f g x) = (term483 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041653 _142753 _142755) (@lem8041652 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041655 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term477 _142753 _142754 _142755 f g x) = (term483 _142753 _142754 _142755 f g x).
Proof. exact (TRANS (@lem8041647 _142753 _142754 _142755 f g x) (@lem8041654 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041656 {_142753 _142754 : Type'} (P : type24 _142753 _142754) : (term475 _142753 _142754 P) = (term476 _142753 _142754 P).
Proof. exact (@lem18392 (cart _142753 _142754) P). Qed.
Lemma lem8041657 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term484 _142753 _142754 _142755 f g) = (term485 _142753 _142754 _142755 f g).
Proof. exact (@lem8041656 _142753 _142754 (term380 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041658 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term486 _142753 _142754 _142755 f g x) = (term379 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term486 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041659 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041660 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term487 _142753 _142754 _142755 f g x) = (term477 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041659) (@lem8041658 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041661 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term487 _142753 _142754 _142755 f g x) = (term483 _142753 _142754 _142755 f g x).
Proof. exact (TRANS (@lem8041660 _142753 _142754 _142755 f g x) (@lem8041655 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041662 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term488 _142753 _142754 _142755 f g) = (term489 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8041661 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041663 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8041664 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term485 _142753 _142754 _142755 f g) = (term490 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8041663 _142753 _142754) (@lem8041662 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041665 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term484 _142753 _142754 _142755 f g) = (term490 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8041657 _142753 _142754 _142755 f g) (@lem8041664 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041666 {_142753 _142755 : Type'} (P : type64 _142753 _142755) : (term491 _142753 _142755 P) = (term492 _142753 _142755 P).
Proof. exact (@lem18392 (type56 _142753 _142755) P). Qed.
Lemma lem8041667 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term493 _142753 _142754 _142755 f) = (term494 _142753 _142754 _142755 f).
Proof. exact (@lem8041666 _142753 _142755 (term382 _142753 _142754 _142755 f)). Qed.
Lemma lem8041668 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term495 _142753 _142754 _142755 f g) = (term381 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term495 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041669 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041670 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term496 _142753 _142754 _142755 f g) = (term484 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8041669) (@lem8041668 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041671 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term496 _142753 _142754 _142755 f g) = (term490 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8041670 _142753 _142754 _142755 f g) (@lem8041665 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041672 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term497 _142753 _142754 _142755 f) = (term498 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8041671 _142753 _142754 _142755 f g)). Qed.
Lemma lem8041673 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8041674 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term494 _142753 _142754 _142755 f) = (term499 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8041673 _142753 _142755) (@lem8041672 _142753 _142754 _142755 f)). Qed.
Lemma lem8041675 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term493 _142753 _142754 _142755 f) = (term499 _142753 _142754 _142755 f).
Proof. exact (TRANS (@lem8041667 _142753 _142754 _142755 f) (@lem8041674 _142753 _142754 _142755 f)). Qed.
Lemma lem8041676 {_142753 _142754 : Type'} (P : type64 _142753 _142754) : (term491 _142753 _142754 P) = (term492 _142753 _142754 P).
Proof. exact (@lem18392 (type56 _142753 _142754) P). Qed.
Lemma lem8041677 {_142753 _142754 _142755 : Type'} : (term500 _142753 _142754 _142755) = (term501 _142753 _142754 _142755).
Proof. exact (@lem8041676 _142753 _142754 (term384 _142753 _142754 _142755)). Qed.
Lemma lem8041678 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term502 _142753 _142754 _142755 f) = (term383 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term502 _142753 _142754 _142755 f)). Qed.
Lemma lem8041679 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041680 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term503 _142753 _142754 _142755 f) = (term493 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8041679) (@lem8041678 _142753 _142754 _142755 f)). Qed.
Lemma lem8041681 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term503 _142753 _142754 _142755 f) = (term499 _142753 _142754 _142755 f).
Proof. exact (TRANS (@lem8041680 _142753 _142754 _142755 f) (@lem8041675 _142753 _142754 _142755 f)). Qed.
Lemma lem8041682 {_142753 _142754 _142755 : Type'} : (term504 _142753 _142754 _142755) = (term505 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8041681 _142753 _142754 _142755 f)). Qed.
Lemma lem8041683 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8041684 {_142753 _142754 _142755 : Type'} : (term501 _142753 _142754 _142755) = (term506 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8041683 _142753 _142754) (@lem8041682 _142753 _142754 _142755)). Qed.
Lemma lem8041685 {_142753 _142754 _142755 : Type'} : (term500 _142753 _142754 _142755) = (term506 _142753 _142754 _142755).
Proof. exact (TRANS (@lem8041677 _142753 _142754 _142755) (@lem8041684 _142753 _142754 _142755)). Qed.
Lemma lem8041696 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term424 _142795 _142797 f t y) = (term425 _142795 _142797 f t y).
Proof. exact (@lem17045 (f t) (t y)). Qed.
Lemma lem8041699 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term360 _142795 _142797 f t y) = (term360 _142795 _142797 f t y).
Proof. exact (eq_refl (term360 _142795 _142797 f t y)). Qed.
Lemma lem8041700 {_142795 _142797 : Type'} (P : type56 _142795 _142797) : (term426 _142795 _142797 P) = (term427 _142795 _142797 P).
Proof. exact (@lem18394 (type24 _142795 _142797) P). Qed.
Lemma lem8041701 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term428 _142795 _142797 f y) = (term429 _142795 _142797 f y).
Proof. exact (@lem8041700 _142795 _142797 (term362 _142795 _142797 f y)). Qed.
Lemma lem8041702 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term430 _142795 _142797 f y t) = (term360 _142795 _142797 f t y).
Proof. exact (eq_refl (term430 _142795 _142797 f y t)). Qed.
Lemma lem8041703 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041704 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term431 _142795 _142797 f y t) = (term424 _142795 _142797 f t y).
Proof. exact (MK_COMB (@lem8041703) (@lem8041702 _142795 _142797 f t y)). Qed.
Lemma lem8041705 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term431 _142795 _142797 f y t) = (term425 _142795 _142797 f t y).
Proof. exact (TRANS (@lem8041704 _142795 _142797 f t y) (@lem8041696 _142795 _142797 f t y)). Qed.
Lemma lem8041706 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term432 _142795 _142797 f y) = (term433 _142795 _142797 f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041705 _142795 _142797 f t y)). Qed.
Lemma lem8041707 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041708 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term429 _142795 _142797 f y) = (term434 _142795 _142797 f y).
Proof. exact (MK_COMB (@lem8041707 _142795 _142797) (@lem8041706 _142795 _142797 f y)). Qed.
Lemma lem8041709 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term428 _142795 _142797 f y) = (term434 _142795 _142797 f y).
Proof. exact (TRANS (@lem8041701 _142795 _142797 f y) (@lem8041708 _142795 _142797 f y)). Qed.
Lemma lem8041710 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term362 _142795 _142797 f y) = (term362 _142795 _142797 f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041699 _142795 _142797 f t y)). Qed.
Lemma lem8041711 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041712 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term363 _142795 _142797 f y) = (term363 _142795 _142797 f y).
Proof. exact (MK_COMB (@lem8041711 _142795 _142797) (@lem8041710 _142795 _142797 f y)). Qed.
Lemma lem8041714 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term507 _142795 _142796 s x) = (term507 _142795 _142796 s x).
Proof. exact (eq_refl (term507 _142795 _142796 s x)). Qed.
Lemma lem8041715 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term508 _142795 _142796 _142797 s x f y) = (term509 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041714 _142795 _142796 s x) (@lem8041709 _142795 _142797 f y)). Qed.
Lemma lem8041716 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term510 _142795 _142796 _142797 s x f y) = (term508 _142795 _142796 _142797 s x f y).
Proof. exact (@lem17045 (s x) (term363 _142795 _142797 f y)). Qed.
Lemma lem8041717 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term510 _142795 _142796 _142797 s x f y) = (term509 _142795 _142796 _142797 s x f y).
Proof. exact (TRANS (@lem8041716 _142795 _142796 _142797 s x f y) (@lem8041715 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8041719 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term371 _142795 _142796 s x) = (term371 _142795 _142796 s x).
Proof. exact (eq_refl (term371 _142795 _142796 s x)). Qed.
Lemma lem8041720 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term387 _142795 _142796 _142797 s x f y) = (term387 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041719 _142795 _142796 s x) (@lem8041712 _142795 _142797 f y)). Qed.
Lemma lem8041731 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term442 _142795 _142796 _142797 s x t y) = (term443 _142795 _142796 _142797 s x t y).
Proof. exact (@lem17045 (s x) (t y)). Qed.
Lemma lem8041736 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) : (term511 _142795 _142797 f t) = (term511 _142795 _142797 f t).
Proof. exact (eq_refl (term511 _142795 _142797 f t)). Qed.
Lemma lem8041737 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term512 _142795 _142796 _142797 f s x t y) = (term513 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8041736 _142795 _142797 f t) (@lem8041731 _142795 _142796 _142797 s x t y)). Qed.
Lemma lem8041738 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term514 _142795 _142796 _142797 f s x t y) = (term512 _142795 _142796 _142797 f s x t y).
Proof. exact (@lem17045 (f t) (term372 _142795 _142796 _142797 s x t y)). Qed.
Lemma lem8041739 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term514 _142795 _142796 _142797 f s x t y) = (term513 _142795 _142796 _142797 f s x t y).
Proof. exact (TRANS (@lem8041738 _142795 _142796 _142797 f s x t y) (@lem8041737 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041742 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term389 _142795 _142796 _142797 f s x t y) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term389 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041743 {_142795 _142797 : Type'} (P : type56 _142795 _142797) : (term426 _142795 _142797 P) = (term427 _142795 _142797 P).
Proof. exact (@lem18394 (type24 _142795 _142797) P). Qed.
Lemma lem8041744 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term515 _142795 _142796 _142797 f s x y) = (term516 _142795 _142796 _142797 f s x y).
Proof. exact (@lem8041743 _142795 _142797 (term390 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041745 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term517 _142795 _142796 _142797 f s x y t) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term517 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8041746 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041747 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term518 _142795 _142796 _142797 f s x y t) = (term514 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8041746) (@lem8041745 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041748 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term518 _142795 _142796 _142797 f s x y t) = (term513 _142795 _142796 _142797 f s x t y).
Proof. exact (TRANS (@lem8041747 _142795 _142796 _142797 f s x t y) (@lem8041739 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041749 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term519 _142795 _142796 _142797 f s x y) = (term520 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041748 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041750 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041751 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term516 _142795 _142796 _142797 f s x y) = (term521 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041750 _142795 _142797) (@lem8041749 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041752 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term515 _142795 _142796 _142797 f s x y) = (term521 _142795 _142796 _142797 f s x y).
Proof. exact (TRANS (@lem8041744 _142795 _142796 _142797 f s x y) (@lem8041751 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041753 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term390 _142795 _142796 _142797 f s x y) = (term390 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8041742 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8041754 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8041755 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term391 _142795 _142796 _142797 f s x y) = (term391 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041754 _142795 _142797) (@lem8041753 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041756 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041757 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term522 _142795 _142796 _142797 s x f y) = (term523 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041756) (@lem8041717 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8041758 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term524 _142795 _142796 _142797 f s x y) = (term525 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041757 _142795 _142796 _142797 s x f y) (@lem8041755 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041759 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041760 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term526 _142795 _142796 _142797 s x f y) = (term526 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8041759) (@lem8041720 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8041761 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term527 _142795 _142796 _142797 f s x y) = (term528 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041760 _142795 _142796 _142797 s x f y) (@lem8041752 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041762 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041763 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term529 _142795 _142796 _142797 f s x y) = (term530 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041762) (@lem8041761 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041764 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term531 _142795 _142796 _142797 f s x y) = (term532 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041763 _142795 _142796 _142797 f s x y) (@lem8041758 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041765 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term533 _142795 _142796 _142797 f s x y) = (term531 _142795 _142796 _142797 f s x y).
Proof. exact (@lem17646 (term387 _142795 _142796 _142797 s x f y) (term391 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041766 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term533 _142795 _142796 _142797 f s x y) = (term532 _142795 _142796 _142797 f s x y).
Proof. exact (TRANS (@lem8041765 _142795 _142796 _142797 f s x y) (@lem8041764 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041767 {_142795 _142797 : Type'} (P : type24 _142795 _142797) : (term475 _142795 _142797 P) = (term476 _142795 _142797 P).
Proof. exact (@lem18392 (cart _142795 _142797) P). Qed.
Lemma lem8041768 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term534 _142795 _142796 _142797 f s x) = (term535 _142795 _142796 _142797 f s x).
Proof. exact (@lem8041767 _142795 _142797 (term392 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041769 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term536 _142795 _142796 _142797 f s x y) = ((term387 _142795 _142796 _142797 s x f y) = (term391 _142795 _142796 _142797 f s x y)).
Proof. exact (eq_refl (term536 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041770 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041771 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term537 _142795 _142796 _142797 f s x y) = (term533 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8041770) (@lem8041769 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041772 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term537 _142795 _142796 _142797 f s x y) = (term532 _142795 _142796 _142797 f s x y).
Proof. exact (TRANS (@lem8041771 _142795 _142796 _142797 f s x y) (@lem8041766 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041773 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term538 _142795 _142796 _142797 f s x) = (term539 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8041772 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8041774 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8041775 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term535 _142795 _142796 _142797 f s x) = (term540 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8041774 _142795 _142797) (@lem8041773 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041776 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term534 _142795 _142796 _142797 f s x) = (term540 _142795 _142796 _142797 f s x).
Proof. exact (TRANS (@lem8041768 _142795 _142796 _142797 f s x) (@lem8041775 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041777 {_142795 _142796 : Type'} (P : type24 _142795 _142796) : (term475 _142795 _142796 P) = (term476 _142795 _142796 P).
Proof. exact (@lem18392 (cart _142795 _142796) P). Qed.
Lemma lem8041778 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term541 _142795 _142796 _142797 f s) = (term542 _142795 _142796 _142797 f s).
Proof. exact (@lem8041777 _142795 _142796 (term394 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041779 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term543 _142795 _142796 _142797 f s x) = (term393 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term543 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041780 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041781 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term544 _142795 _142796 _142797 f s x) = (term534 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8041780) (@lem8041779 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041782 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term544 _142795 _142796 _142797 f s x) = (term540 _142795 _142796 _142797 f s x).
Proof. exact (TRANS (@lem8041781 _142795 _142796 _142797 f s x) (@lem8041776 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041783 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term545 _142795 _142796 _142797 f s) = (term546 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8041782 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8041784 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8041785 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term542 _142795 _142796 _142797 f s) = (term547 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8041784 _142795 _142796) (@lem8041783 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041786 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term541 _142795 _142796 _142797 f s) = (term547 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8041778 _142795 _142796 _142797 f s) (@lem8041785 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041787 {_142795 _142797 : Type'} (P : type64 _142795 _142797) : (term491 _142795 _142797 P) = (term492 _142795 _142797 P).
Proof. exact (@lem18392 (type56 _142795 _142797) P). Qed.
Lemma lem8041788 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term548 _142795 _142796 _142797 s) = (term549 _142795 _142796 _142797 s).
Proof. exact (@lem8041787 _142795 _142797 (term396 _142795 _142796 _142797 s)). Qed.
Lemma lem8041789 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term550 _142795 _142796 _142797 s f) = (term395 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term550 _142795 _142796 _142797 s f)). Qed.
Lemma lem8041790 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041791 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term551 _142795 _142796 _142797 s f) = (term541 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8041790) (@lem8041789 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041792 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term551 _142795 _142796 _142797 s f) = (term547 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8041791 _142795 _142796 _142797 f s) (@lem8041786 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041793 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term552 _142795 _142796 _142797 s) = (term553 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8041792 _142795 _142796 _142797 f s)). Qed.
Lemma lem8041794 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8041795 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term549 _142795 _142796 _142797 s) = (term554 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8041794 _142795 _142797) (@lem8041793 _142795 _142796 _142797 s)). Qed.
Lemma lem8041796 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term548 _142795 _142796 _142797 s) = (term554 _142795 _142796 _142797 s).
Proof. exact (TRANS (@lem8041788 _142795 _142796 _142797 s) (@lem8041795 _142795 _142796 _142797 s)). Qed.
Lemma lem8041797 {_142795 _142796 : Type'} (P : type56 _142795 _142796) : (term555 _142795 _142796 P) = (term556 _142795 _142796 P).
Proof. exact (@lem18392 (type24 _142795 _142796) P). Qed.
Lemma lem8041798 {_142795 _142796 _142797 : Type'} : (term557 _142795 _142796 _142797) = (term558 _142795 _142796 _142797).
Proof. exact (@lem8041797 _142795 _142796 (term398 _142795 _142796 _142797)). Qed.
Lemma lem8041799 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term559 _142795 _142796 _142797 s) = (term397 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term559 _142795 _142796 _142797 s)). Qed.
Lemma lem8041800 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041801 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term560 _142795 _142796 _142797 s) = (term548 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8041800) (@lem8041799 _142795 _142796 _142797 s)). Qed.
Lemma lem8041802 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term560 _142795 _142796 _142797 s) = (term554 _142795 _142796 _142797 s).
Proof. exact (TRANS (@lem8041801 _142795 _142796 _142797 s) (@lem8041796 _142795 _142796 _142797 s)). Qed.
Lemma lem8041803 {_142795 _142796 _142797 : Type'} : (term561 _142795 _142796 _142797) = (term562 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8041802 _142795 _142796 _142797 s)). Qed.
Lemma lem8041804 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8041805 {_142795 _142796 _142797 : Type'} : (term558 _142795 _142796 _142797) = (term563 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8041804 _142795 _142796) (@lem8041803 _142795 _142796 _142797)). Qed.
Lemma lem8041806 {_142795 _142796 _142797 : Type'} : (term557 _142795 _142796 _142797) = (term563 _142795 _142796 _142797).
Proof. exact (TRANS (@lem8041798 _142795 _142796 _142797) (@lem8041805 _142795 _142796 _142797)). Qed.
Lemma lem8041815 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term424 _142835 _142836 f t x) = (term425 _142835 _142836 f t x).
Proof. exact (@lem17045 (f t) (t x)). Qed.
Lemma lem8041818 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term360 _142835 _142836 f t x) = (term360 _142835 _142836 f t x).
Proof. exact (eq_refl (term360 _142835 _142836 f t x)). Qed.
Lemma lem8041819 {_142835 _142836 : Type'} (P : type56 _142835 _142836) : (term426 _142835 _142836 P) = (term427 _142835 _142836 P).
Proof. exact (@lem18394 (type24 _142835 _142836) P). Qed.
Lemma lem8041820 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term428 _142835 _142836 f x) = (term429 _142835 _142836 f x).
Proof. exact (@lem8041819 _142835 _142836 (term362 _142835 _142836 f x)). Qed.
Lemma lem8041821 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term430 _142835 _142836 f x t) = (term360 _142835 _142836 f t x).
Proof. exact (eq_refl (term430 _142835 _142836 f x t)). Qed.
Lemma lem8041822 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041823 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term431 _142835 _142836 f x t) = (term424 _142835 _142836 f t x).
Proof. exact (MK_COMB (@lem8041822) (@lem8041821 _142835 _142836 f t x)). Qed.
Lemma lem8041824 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term431 _142835 _142836 f x t) = (term425 _142835 _142836 f t x).
Proof. exact (TRANS (@lem8041823 _142835 _142836 f t x) (@lem8041815 _142835 _142836 f t x)). Qed.
Lemma lem8041825 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term432 _142835 _142836 f x) = (term433 _142835 _142836 f x).
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8041824 _142835 _142836 f t x)). Qed.
Lemma lem8041826 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041827 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term429 _142835 _142836 f x) = (term434 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041826 _142835 _142836) (@lem8041825 _142835 _142836 f x)). Qed.
Lemma lem8041828 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term428 _142835 _142836 f x) = (term434 _142835 _142836 f x).
Proof. exact (TRANS (@lem8041820 _142835 _142836 f x) (@lem8041827 _142835 _142836 f x)). Qed.
Lemma lem8041829 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term362 _142835 _142836 f x) = (term362 _142835 _142836 f x).
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8041818 _142835 _142836 f t x)). Qed.
Lemma lem8041830 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041831 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term363 _142835 _142836 f x) = (term363 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041830 _142835 _142836) (@lem8041829 _142835 _142836 f x)). Qed.
Lemma lem8041832 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term564 _142835 _142837 t y) = (term564 _142835 _142837 t y).
Proof. exact (eq_refl (term564 _142835 _142837 t y)). Qed.
Lemma lem8041833 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (t y) = (t y).
Proof. exact (eq_refl (t y)). Qed.
Lemma lem8041834 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041835 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term435 _142835 _142836 f x) = (term436 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041834) (@lem8041828 _142835 _142836 f x)). Qed.
Lemma lem8041836 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term565 _142835 _142836 _142837 f x t y) = (term566 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041835 _142835 _142836 f x) (@lem8041832 _142835 _142837 t y)). Qed.
Lemma lem8041837 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term567 _142835 _142836 _142837 f x t y) = (term565 _142835 _142836 _142837 f x t y).
Proof. exact (@lem17045 (term363 _142835 _142836 f x) (t y)). Qed.
Lemma lem8041838 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term567 _142835 _142836 _142837 f x t y) = (term566 _142835 _142836 _142837 f x t y).
Proof. exact (TRANS (@lem8041837 _142835 _142836 _142837 f x t y) (@lem8041836 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041840 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term365 _142835 _142836 f x) = (term365 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8041839) (@lem8041831 _142835 _142836 f x)). Qed.
Lemma lem8041841 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term401 _142835 _142836 _142837 f x t y) = (term401 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041840 _142835 _142836 f x) (@lem8041833 _142835 _142837 t y)). Qed.
Lemma lem8041852 {_142835 _142836 _142837 : Type'} (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term442 _142835 _142836 _142837 s x t y) = (term443 _142835 _142836 _142837 s x t y).
Proof. exact (@lem17045 (s x) (t y)). Qed.
Lemma lem8041857 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) : (term511 _142835 _142836 f s) = (term511 _142835 _142836 f s).
Proof. exact (eq_refl (term511 _142835 _142836 f s)). Qed.
Lemma lem8041858 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term568 _142835 _142836 _142837 f s x t y) = (term569 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8041857 _142835 _142836 f s) (@lem8041852 _142835 _142836 _142837 s x t y)). Qed.
Lemma lem8041859 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term570 _142835 _142836 _142837 f s x t y) = (term568 _142835 _142836 _142837 f s x t y).
Proof. exact (@lem17045 (f s) (term372 _142835 _142836 _142837 s x t y)). Qed.
Lemma lem8041860 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term570 _142835 _142836 _142837 f s x t y) = (term569 _142835 _142836 _142837 f s x t y).
Proof. exact (TRANS (@lem8041859 _142835 _142836 _142837 f s x t y) (@lem8041858 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041863 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term403 _142835 _142836 _142837 f s x t y) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term403 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041864 {_142835 _142836 : Type'} (P : type56 _142835 _142836) : (term426 _142835 _142836 P) = (term427 _142835 _142836 P).
Proof. exact (@lem18394 (type24 _142835 _142836) P). Qed.
Lemma lem8041865 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term571 _142835 _142836 _142837 f x t y) = (term572 _142835 _142836 _142837 f x t y).
Proof. exact (@lem8041864 _142835 _142836 (term404 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041866 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term573 _142835 _142836 _142837 f x t y s) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term573 _142835 _142836 _142837 f x t y s)). Qed.
Lemma lem8041867 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041868 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term574 _142835 _142836 _142837 f x t y s) = (term570 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8041867) (@lem8041866 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041869 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term574 _142835 _142836 _142837 f x t y s) = (term569 _142835 _142836 _142837 f s x t y).
Proof. exact (TRANS (@lem8041868 _142835 _142836 _142837 f s x t y) (@lem8041860 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041870 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term575 _142835 _142836 _142837 f x t y) = (term576 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8041869 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041871 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041872 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term572 _142835 _142836 _142837 f x t y) = (term577 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041871 _142835 _142836) (@lem8041870 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041873 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term571 _142835 _142836 _142837 f x t y) = (term577 _142835 _142836 _142837 f x t y).
Proof. exact (TRANS (@lem8041865 _142835 _142836 _142837 f x t y) (@lem8041872 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041874 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term404 _142835 _142836 _142837 f x t y) = (term404 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8041863 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8041875 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8041876 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term405 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041875 _142835 _142836) (@lem8041874 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041877 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041878 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term578 _142835 _142836 _142837 f x t y) = (term579 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041877) (@lem8041838 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041879 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term580 _142835 _142836 _142837 f x t y) = (term581 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041878 _142835 _142836 _142837 f x t y) (@lem8041876 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8041881 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term582 _142835 _142836 _142837 f x t y) = (term582 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041880) (@lem8041841 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041882 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term583 _142835 _142836 _142837 f x t y) = (term584 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041881 _142835 _142836 _142837 f x t y) (@lem8041873 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041883 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041884 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term585 _142835 _142836 _142837 f x t y) = (term586 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041883) (@lem8041882 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041885 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term587 _142835 _142836 _142837 f x t y) = (term588 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041884 _142835 _142836 _142837 f x t y) (@lem8041879 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041886 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term589 _142835 _142836 _142837 f x t y) = (term587 _142835 _142836 _142837 f x t y).
Proof. exact (@lem17646 (term401 _142835 _142836 _142837 f x t y) (term405 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041887 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term589 _142835 _142836 _142837 f x t y) = (term588 _142835 _142836 _142837 f x t y).
Proof. exact (TRANS (@lem8041886 _142835 _142836 _142837 f x t y) (@lem8041885 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041888 {_142835 _142837 : Type'} (P : type24 _142835 _142837) : (term475 _142835 _142837 P) = (term476 _142835 _142837 P).
Proof. exact (@lem18392 (cart _142835 _142837) P). Qed.
Lemma lem8041889 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term590 _142835 _142836 _142837 f x t) = (term591 _142835 _142836 _142837 f x t).
Proof. exact (@lem8041888 _142835 _142837 (term406 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041890 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term592 _142835 _142836 _142837 f x t y) = ((term401 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y)).
Proof. exact (eq_refl (term592 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041891 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041892 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term593 _142835 _142836 _142837 f x t y) = (term589 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8041891) (@lem8041890 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041893 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term593 _142835 _142836 _142837 f x t y) = (term588 _142835 _142836 _142837 f x t y).
Proof. exact (TRANS (@lem8041892 _142835 _142836 _142837 f x t y) (@lem8041887 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041894 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term594 _142835 _142836 _142837 f x t) = (term595 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8041893 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8041895 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8041896 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term591 _142835 _142836 _142837 f x t) = (term596 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8041895 _142835 _142837) (@lem8041894 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041897 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term590 _142835 _142836 _142837 f x t) = (term596 _142835 _142836 _142837 f x t).
Proof. exact (TRANS (@lem8041889 _142835 _142836 _142837 f x t) (@lem8041896 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041898 {_142835 _142836 : Type'} (P : type24 _142835 _142836) : (term475 _142835 _142836 P) = (term476 _142835 _142836 P).
Proof. exact (@lem18392 (cart _142835 _142836) P). Qed.
Lemma lem8041899 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term597 _142835 _142836 _142837 f t) = (term598 _142835 _142836 _142837 f t).
Proof. exact (@lem8041898 _142835 _142836 (term408 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041900 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term599 _142835 _142836 _142837 f t x) = (term407 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term599 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8041901 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041902 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term600 _142835 _142836 _142837 f t x) = (term590 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8041901) (@lem8041900 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041903 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term600 _142835 _142836 _142837 f t x) = (term596 _142835 _142836 _142837 f x t).
Proof. exact (TRANS (@lem8041902 _142835 _142836 _142837 f x t) (@lem8041897 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041904 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term601 _142835 _142836 _142837 f t) = (term602 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8041903 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8041905 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8041906 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term598 _142835 _142836 _142837 f t) = (term603 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8041905 _142835 _142836) (@lem8041904 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041907 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term597 _142835 _142836 _142837 f t) = (term603 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8041899 _142835 _142836 _142837 f t) (@lem8041906 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041908 {_142835 _142837 : Type'} (P : type56 _142835 _142837) : (term555 _142835 _142837 P) = (term556 _142835 _142837 P).
Proof. exact (@lem18392 (type24 _142835 _142837) P). Qed.
Lemma lem8041909 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term604 _142835 _142836 _142837 f) = (term605 _142835 _142836 _142837 f).
Proof. exact (@lem8041908 _142835 _142837 (term410 _142835 _142836 _142837 f)). Qed.
Lemma lem8041910 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term606 _142835 _142836 _142837 f t) = (term409 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term606 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041911 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041912 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term607 _142835 _142836 _142837 f t) = (term597 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8041911) (@lem8041910 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041913 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term607 _142835 _142836 _142837 f t) = (term603 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8041912 _142835 _142836 _142837 f t) (@lem8041907 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041914 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term608 _142835 _142836 _142837 f) = (term609 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8041913 _142835 _142836 _142837 f t)). Qed.
Lemma lem8041915 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8041916 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term605 _142835 _142836 _142837 f) = (term610 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8041915 _142835 _142837) (@lem8041914 _142835 _142836 _142837 f)). Qed.
Lemma lem8041917 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term604 _142835 _142836 _142837 f) = (term610 _142835 _142836 _142837 f).
Proof. exact (TRANS (@lem8041909 _142835 _142836 _142837 f) (@lem8041916 _142835 _142836 _142837 f)). Qed.
Lemma lem8041918 {_142835 _142836 : Type'} (P : type64 _142835 _142836) : (term491 _142835 _142836 P) = (term492 _142835 _142836 P).
Proof. exact (@lem18392 (type56 _142835 _142836) P). Qed.
Lemma lem8041919 {_142835 _142836 _142837 : Type'} : (term611 _142835 _142836 _142837) = (term612 _142835 _142836 _142837).
Proof. exact (@lem8041918 _142835 _142836 (term412 _142835 _142836 _142837)). Qed.
Lemma lem8041920 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term613 _142835 _142836 _142837 f) = (term411 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term613 _142835 _142836 _142837 f)). Qed.
Lemma lem8041921 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8041922 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term614 _142835 _142836 _142837 f) = (term604 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8041921) (@lem8041920 _142835 _142836 _142837 f)). Qed.
Lemma lem8041923 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term614 _142835 _142836 _142837 f) = (term610 _142835 _142836 _142837 f).
Proof. exact (TRANS (@lem8041922 _142835 _142836 _142837 f) (@lem8041917 _142835 _142836 _142837 f)). Qed.
Lemma lem8041924 {_142835 _142836 _142837 : Type'} : (term615 _142835 _142836 _142837) = (term616 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8041923 _142835 _142836 _142837 f)). Qed.
Lemma lem8041925 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8041926 {_142835 _142836 _142837 : Type'} : (term612 _142835 _142836 _142837) = (term617 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041925 _142835 _142836) (@lem8041924 _142835 _142836 _142837)). Qed.
Lemma lem8041927 {_142835 _142836 _142837 : Type'} : (term611 _142835 _142836 _142837) = (term617 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8041919 _142835 _142836 _142837) (@lem8041926 _142835 _142836 _142837)). Qed.
Lemma lem8041928 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041929 {_142795 _142796 _142797 : Type'} : (term618 _142795 _142796 _142797) = (term619 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8041928) (@lem8041806 _142795 _142796 _142797)). Qed.
Lemma lem8041930 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term620 _142795 _142796 _142797 _142835 _142836 _142837) = (term621 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041929 _142795 _142796 _142797) (@lem8041927 _142835 _142836 _142837)). Qed.
Lemma lem8041931 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term622 _142795 _142796 _142797 _142835 _142836 _142837) = (term620 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem17045 (term399 _142795 _142796 _142797) (term413 _142835 _142836 _142837)). Qed.
Lemma lem8041932 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term622 _142795 _142796 _142797 _142835 _142836 _142837) = (term621 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8041931 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8041930 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041933 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041934 {_142753 _142754 _142755 : Type'} : (term623 _142753 _142754 _142755) = (term624 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8041933) (@lem8041685 _142753 _142754 _142755)). Qed.
Lemma lem8041935 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term625 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term626 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8041934 _142753 _142754 _142755) (@lem8041932 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041936 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term625 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem17045 (term385 _142753 _142754 _142755) (term414 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041937 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term626 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8041936 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8041935 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8041951 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8041952 {_142753 _142755 : Type'} (P : type24 _142753 _142755) (Q : type24 _142753 _142755) : (term629 _142753 _142755 P Q) = (term630 _142753 _142755 P Q).
Proof. exact (@lem8041951 (cart _142753 _142755) P Q). Qed.
Lemma lem8041953 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term631 _142753 _142754 _142755 f g x) = (term632 _142753 _142754 _142755 f g x).
Proof. exact (@lem8041952 _142753 _142755 (term633 _142753 _142754 _142755 f g x) (term634 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041954 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term635 _142753 _142754 _142755 f g x y) = (term469 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term635 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041955 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041956 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term636 _142753 _142754 _142755 f g x y) = (term471 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041955) (@lem8041954 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041957 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term637 _142753 _142754 _142755 f g x y) = (term466 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term637 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041958 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term638 _142753 _142754 _142755 f g x y) = (term473 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8041956 _142753 _142754 _142755 f g x y) (@lem8041957 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041959 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term639 _142753 _142754 _142755 f g x) = (term482 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8041958 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041960 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8041961 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term631 _142753 _142754 _142755 f g x) = (term483 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041960 _142753 _142755) (@lem8041959 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041962 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8041963 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term640 _142753 _142754 _142755 f g x) = (term641 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041962) (@lem8041961 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041964 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term635 _142753 _142754 _142755 f g x y) = (term469 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term635 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041965 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term642 _142753 _142754 _142755 f g x) = (term633 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8041964 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041966 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8041967 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term643 _142753 _142754 _142755 f g x) = (term644 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041966 _142753 _142755) (@lem8041965 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041968 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8041969 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term645 _142753 _142754 _142755 f g x) = (term646 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041968) (@lem8041967 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041970 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term637 _142753 _142754 _142755 f g x y) = (term466 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term637 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041971 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term647 _142753 _142754 _142755 f g x) = (term634 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8041970 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8041972 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8041973 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term648 _142753 _142754 _142755 f g x) = (term649 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041972 _142753 _142755) (@lem8041971 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041974 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term632 _142753 _142754 _142755 f g x) = (term650 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8041969 _142753 _142754 _142755 f g x) (@lem8041973 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041975 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : ((term631 _142753 _142754 _142755 f g x) = (term632 _142753 _142754 _142755 f g x)) = ((term483 _142753 _142754 _142755 f g x) = (term650 _142753 _142754 _142755 f g x)).
Proof. exact (MK_COMB (@lem8041963 _142753 _142754 _142755 f g x) (@lem8041974 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8041976 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term483 _142753 _142754 _142755 f g x) = (term650 _142753 _142754 _142755 f g x).
Proof. exact (EQ_MP (@lem8041975 _142753 _142754 _142755 f g x) (@lem8041953 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042329 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term489 _142753 _142754 _142755 f g) = (term651 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8041976 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042330 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8042331 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term490 _142753 _142754 _142755 f g) = (term652 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042330 _142753 _142754) (@lem8042329 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042333 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8042334 {_142753 _142754 : Type'} (P : type24 _142753 _142754) (Q : type24 _142753 _142754) : (term629 _142753 _142754 P Q) = (term630 _142753 _142754 P Q).
Proof. exact (@lem8042333 (cart _142753 _142754) P Q). Qed.
Lemma lem8042335 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term653 _142753 _142754 _142755 f g) = (term654 _142753 _142754 _142755 f g).
Proof. exact (@lem8042334 _142753 _142754 (term655 _142753 _142754 _142755 f g) (term656 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042336 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term657 _142753 _142754 _142755 f g x) = (term644 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term657 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042337 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8042338 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term658 _142753 _142754 _142755 f g x) = (term646 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8042337) (@lem8042336 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042339 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term659 _142753 _142754 _142755 f g x) = (term649 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term659 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042340 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term660 _142753 _142754 _142755 f g x) = (term650 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8042338 _142753 _142754 _142755 f g x) (@lem8042339 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042341 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term661 _142753 _142754 _142755 f g) = (term651 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8042340 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042342 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8042343 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term653 _142753 _142754 _142755 f g) = (term652 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042342 _142753 _142754) (@lem8042341 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8042345 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term662 _142753 _142754 _142755 f g) = (term663 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042344) (@lem8042343 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042346 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term657 _142753 _142754 _142755 f g x) = (term644 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term657 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042347 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term664 _142753 _142754 _142755 f g) = (term655 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8042346 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042348 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8042349 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term665 _142753 _142754 _142755 f g) = (term666 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042348 _142753 _142754) (@lem8042347 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042350 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8042351 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term667 _142753 _142754 _142755 f g) = (term668 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042350) (@lem8042349 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042352 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term659 _142753 _142754 _142755 f g x) = (term649 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term659 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042353 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term669 _142753 _142754 _142755 f g) = (term656 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8042352 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8042354 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8042355 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term670 _142753 _142754 _142755 f g) = (term671 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042354 _142753 _142754) (@lem8042353 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042356 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term654 _142753 _142754 _142755 f g) = (term672 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042351 _142753 _142754 _142755 f g) (@lem8042355 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042357 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term653 _142753 _142754 _142755 f g) = (term654 _142753 _142754 _142755 f g)) = ((term652 _142753 _142754 _142755 f g) = (term672 _142753 _142754 _142755 f g)).
Proof. exact (MK_COMB (@lem8042345 _142753 _142754 _142755 f g) (@lem8042356 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042358 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term652 _142753 _142754 _142755 f g) = (term672 _142753 _142754 _142755 f g).
Proof. exact (EQ_MP (@lem8042357 _142753 _142754 _142755 f g) (@lem8042335 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042719 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term490 _142753 _142754 _142755 f g) = (term672 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8042331 _142753 _142754 _142755 f g) (@lem8042358 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042720 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term498 _142753 _142754 _142755 f) = (term673 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8042719 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042721 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8042722 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term499 _142753 _142754 _142755 f) = (term674 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042721 _142753 _142755) (@lem8042720 _142753 _142754 _142755 f)). Qed.
Lemma lem8042724 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8042725 {_142753 _142755 : Type'} (P : type64 _142753 _142755) (Q : type64 _142753 _142755) : (term675 _142753 _142755 P Q) = (term676 _142753 _142755 P Q).
Proof. exact (@lem8042724 (type56 _142753 _142755) P Q). Qed.
Lemma lem8042726 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term677 _142753 _142754 _142755 f) = (term678 _142753 _142754 _142755 f).
Proof. exact (@lem8042725 _142753 _142755 (term679 _142753 _142754 _142755 f) (term680 _142753 _142754 _142755 f)). Qed.
Lemma lem8042727 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term681 _142753 _142754 _142755 f g) = (term666 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term681 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042728 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8042729 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term682 _142753 _142754 _142755 f g) = (term668 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042728) (@lem8042727 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042730 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term683 _142753 _142754 _142755 f g) = (term671 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term683 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042731 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term684 _142753 _142754 _142755 f g) = (term672 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8042729 _142753 _142754 _142755 f g) (@lem8042730 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042732 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term685 _142753 _142754 _142755 f) = (term673 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8042731 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042733 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8042734 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term677 _142753 _142754 _142755 f) = (term674 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042733 _142753 _142755) (@lem8042732 _142753 _142754 _142755 f)). Qed.
Lemma lem8042735 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8042736 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term686 _142753 _142754 _142755 f) = (term687 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042735) (@lem8042734 _142753 _142754 _142755 f)). Qed.
Lemma lem8042737 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term681 _142753 _142754 _142755 f g) = (term666 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term681 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042738 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term688 _142753 _142754 _142755 f) = (term679 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8042737 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042739 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8042740 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term689 _142753 _142754 _142755 f) = (term690 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042739 _142753 _142755) (@lem8042738 _142753 _142754 _142755 f)). Qed.
Lemma lem8042741 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8042742 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term691 _142753 _142754 _142755 f) = (term692 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042741) (@lem8042740 _142753 _142754 _142755 f)). Qed.
Lemma lem8042743 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term683 _142753 _142754 _142755 f g) = (term671 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term683 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042744 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term693 _142753 _142754 _142755 f) = (term680 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8042743 _142753 _142754 _142755 f g)). Qed.
Lemma lem8042745 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8042746 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term694 _142753 _142754 _142755 f) = (term695 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042745 _142753 _142755) (@lem8042744 _142753 _142754 _142755 f)). Qed.
Lemma lem8042747 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term678 _142753 _142754 _142755 f) = (term696 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8042742 _142753 _142754 _142755 f) (@lem8042746 _142753 _142754 _142755 f)). Qed.
Lemma lem8042748 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : ((term677 _142753 _142754 _142755 f) = (term678 _142753 _142754 _142755 f)) = ((term674 _142753 _142754 _142755 f) = (term696 _142753 _142754 _142755 f)).
Proof. exact (MK_COMB (@lem8042736 _142753 _142754 _142755 f) (@lem8042747 _142753 _142754 _142755 f)). Qed.
Lemma lem8042749 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term674 _142753 _142754 _142755 f) = (term696 _142753 _142754 _142755 f).
Proof. exact (EQ_MP (@lem8042748 _142753 _142754 _142755 f) (@lem8042726 _142753 _142754 _142755 f)). Qed.
Lemma lem8043118 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term499 _142753 _142754 _142755 f) = (term696 _142753 _142754 _142755 f).
Proof. exact (TRANS (@lem8042722 _142753 _142754 _142755 f) (@lem8042749 _142753 _142754 _142755 f)). Qed.
Lemma lem8043119 {_142753 _142754 _142755 : Type'} : (term505 _142753 _142754 _142755) = (term697 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8043118 _142753 _142754 _142755 f)). Qed.
Lemma lem8043120 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8043121 {_142753 _142754 _142755 : Type'} : (term506 _142753 _142754 _142755) = (term698 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043120 _142753 _142754) (@lem8043119 _142753 _142754 _142755)). Qed.
Lemma lem8043123 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8043124 {_142753 _142754 : Type'} (P : type64 _142753 _142754) (Q : type64 _142753 _142754) : (term675 _142753 _142754 P Q) = (term676 _142753 _142754 P Q).
Proof. exact (@lem8043123 (type56 _142753 _142754) P Q). Qed.
Lemma lem8043125 {_142753 _142754 _142755 : Type'} : (term699 _142753 _142754 _142755) = (term700 _142753 _142754 _142755).
Proof. exact (@lem8043124 _142753 _142754 (term701 _142753 _142754 _142755) (term702 _142753 _142754 _142755)). Qed.
Lemma lem8043126 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term703 _142753 _142754 _142755 f) = (term690 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term703 _142753 _142754 _142755 f)). Qed.
Lemma lem8043127 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043128 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term704 _142753 _142754 _142755 f) = (term692 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8043127) (@lem8043126 _142753 _142754 _142755 f)). Qed.
Lemma lem8043129 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term705 _142753 _142754 _142755 f) = (term695 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term705 _142753 _142754 _142755 f)). Qed.
Lemma lem8043130 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term706 _142753 _142754 _142755 f) = (term696 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8043128 _142753 _142754 _142755 f) (@lem8043129 _142753 _142754 _142755 f)). Qed.
Lemma lem8043131 {_142753 _142754 _142755 : Type'} : (term707 _142753 _142754 _142755) = (term697 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8043130 _142753 _142754 _142755 f)). Qed.
Lemma lem8043132 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8043133 {_142753 _142754 _142755 : Type'} : (term699 _142753 _142754 _142755) = (term698 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043132 _142753 _142754) (@lem8043131 _142753 _142754 _142755)). Qed.
Lemma lem8043134 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8043135 {_142753 _142754 _142755 : Type'} : (term708 _142753 _142754 _142755) = (term709 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043134) (@lem8043133 _142753 _142754 _142755)). Qed.
Lemma lem8043136 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term703 _142753 _142754 _142755 f) = (term690 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term703 _142753 _142754 _142755 f)). Qed.
Lemma lem8043137 {_142753 _142754 _142755 : Type'} : (term710 _142753 _142754 _142755) = (term701 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8043136 _142753 _142754 _142755 f)). Qed.
Lemma lem8043138 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8043139 {_142753 _142754 _142755 : Type'} : (term711 _142753 _142754 _142755) = (term712 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043138 _142753 _142754) (@lem8043137 _142753 _142754 _142755)). Qed.
Lemma lem8043140 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043141 {_142753 _142754 _142755 : Type'} : (term713 _142753 _142754 _142755) = (term714 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043140) (@lem8043139 _142753 _142754 _142755)). Qed.
Lemma lem8043142 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term705 _142753 _142754 _142755 f) = (term695 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term705 _142753 _142754 _142755 f)). Qed.
Lemma lem8043143 {_142753 _142754 _142755 : Type'} : (term715 _142753 _142754 _142755) = (term702 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8043142 _142753 _142754 _142755 f)). Qed.
Lemma lem8043144 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8043145 {_142753 _142754 _142755 : Type'} : (term716 _142753 _142754 _142755) = (term717 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043144 _142753 _142754) (@lem8043143 _142753 _142754 _142755)). Qed.
Lemma lem8043146 {_142753 _142754 _142755 : Type'} : (term700 _142753 _142754 _142755) = (term718 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043141 _142753 _142754 _142755) (@lem8043145 _142753 _142754 _142755)). Qed.
Lemma lem8043147 {_142753 _142754 _142755 : Type'} : ((term699 _142753 _142754 _142755) = (term700 _142753 _142754 _142755)) = ((term698 _142753 _142754 _142755) = (term718 _142753 _142754 _142755)).
Proof. exact (MK_COMB (@lem8043135 _142753 _142754 _142755) (@lem8043146 _142753 _142754 _142755)). Qed.
Lemma lem8043148 {_142753 _142754 _142755 : Type'} : (term698 _142753 _142754 _142755) = (term718 _142753 _142754 _142755).
Proof. exact (EQ_MP (@lem8043147 _142753 _142754 _142755) (@lem8043125 _142753 _142754 _142755)). Qed.
Lemma lem8043525 {_142753 _142754 _142755 : Type'} : (term506 _142753 _142754 _142755) = (term718 _142753 _142754 _142755).
Proof. exact (TRANS (@lem8043121 _142753 _142754 _142755) (@lem8043148 _142753 _142754 _142755)). Qed.
Lemma lem8043526 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043527 {_142753 _142754 _142755 : Type'} : (term624 _142753 _142754 _142755) = (term719 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8043526) (@lem8043525 _142753 _142754 _142755)). Qed.
Lemma lem8043541 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8043542 {_142795 _142797 : Type'} (P : type24 _142795 _142797) (Q : type24 _142795 _142797) : (term629 _142795 _142797 P Q) = (term630 _142795 _142797 P Q).
Proof. exact (@lem8043541 (cart _142795 _142797) P Q). Qed.
Lemma lem8043543 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term720 _142795 _142796 _142797 f s x) = (term721 _142795 _142796 _142797 f s x).
Proof. exact (@lem8043542 _142795 _142797 (term722 _142795 _142796 _142797 f s x) (term723 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043544 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term724 _142795 _142796 _142797 f s x y) = (term528 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term724 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043546 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term725 _142795 _142796 _142797 f s x y) = (term530 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8043545) (@lem8043544 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043547 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term726 _142795 _142796 _142797 f s x y) = (term525 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term726 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043548 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term727 _142795 _142796 _142797 f s x y) = (term532 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8043546 _142795 _142796 _142797 f s x y) (@lem8043547 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043549 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term728 _142795 _142796 _142797 f s x) = (term539 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8043548 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043550 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8043551 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term720 _142795 _142796 _142797 f s x) = (term540 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043550 _142795 _142797) (@lem8043549 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043552 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8043553 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term729 _142795 _142796 _142797 f s x) = (term730 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043552) (@lem8043551 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043554 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term724 _142795 _142796 _142797 f s x y) = (term528 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term724 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043555 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term731 _142795 _142796 _142797 f s x) = (term722 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8043554 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043556 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8043557 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term732 _142795 _142796 _142797 f s x) = (term733 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043556 _142795 _142797) (@lem8043555 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043558 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043559 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term734 _142795 _142796 _142797 f s x) = (term735 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043558) (@lem8043557 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043560 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term726 _142795 _142796 _142797 f s x y) = (term525 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term726 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043561 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term736 _142795 _142796 _142797 f s x) = (term723 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8043560 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8043562 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8043563 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term737 _142795 _142796 _142797 f s x) = (term738 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043562 _142795 _142797) (@lem8043561 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043564 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term721 _142795 _142796 _142797 f s x) = (term739 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043559 _142795 _142796 _142797 f s x) (@lem8043563 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043565 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : ((term720 _142795 _142796 _142797 f s x) = (term721 _142795 _142796 _142797 f s x)) = ((term540 _142795 _142796 _142797 f s x) = (term739 _142795 _142796 _142797 f s x)).
Proof. exact (MK_COMB (@lem8043553 _142795 _142796 _142797 f s x) (@lem8043564 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043566 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term540 _142795 _142796 _142797 f s x) = (term739 _142795 _142796 _142797 f s x).
Proof. exact (EQ_MP (@lem8043565 _142795 _142796 _142797 f s x) (@lem8043543 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043815 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term546 _142795 _142796 _142797 f s) = (term740 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8043566 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043816 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8043817 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term547 _142795 _142796 _142797 f s) = (term741 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043816 _142795 _142796) (@lem8043815 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043819 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8043820 {_142795 _142796 : Type'} (P : type24 _142795 _142796) (Q : type24 _142795 _142796) : (term629 _142795 _142796 P Q) = (term630 _142795 _142796 P Q).
Proof. exact (@lem8043819 (cart _142795 _142796) P Q). Qed.
Lemma lem8043821 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term742 _142795 _142796 _142797 f s) = (term743 _142795 _142796 _142797 f s).
Proof. exact (@lem8043820 _142795 _142796 (term744 _142795 _142796 _142797 f s) (term745 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043822 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term746 _142795 _142796 _142797 f s x) = (term733 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term746 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043823 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043824 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term747 _142795 _142796 _142797 f s x) = (term735 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043823) (@lem8043822 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043825 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term748 _142795 _142796 _142797 f s x) = (term738 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term748 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043826 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term749 _142795 _142796 _142797 f s x) = (term739 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8043824 _142795 _142796 _142797 f s x) (@lem8043825 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043827 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term750 _142795 _142796 _142797 f s) = (term740 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8043826 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043828 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8043829 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term742 _142795 _142796 _142797 f s) = (term741 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043828 _142795 _142796) (@lem8043827 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043830 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8043831 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term751 _142795 _142796 _142797 f s) = (term752 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043830) (@lem8043829 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043832 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term746 _142795 _142796 _142797 f s x) = (term733 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term746 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043833 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term753 _142795 _142796 _142797 f s) = (term744 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8043832 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043834 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8043835 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term754 _142795 _142796 _142797 f s) = (term755 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043834 _142795 _142796) (@lem8043833 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043836 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8043837 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term756 _142795 _142796 _142797 f s) = (term757 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043836) (@lem8043835 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043838 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term748 _142795 _142796 _142797 f s x) = (term738 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term748 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043839 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term758 _142795 _142796 _142797 f s) = (term745 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8043838 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8043840 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8043841 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term759 _142795 _142796 _142797 f s) = (term760 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043840 _142795 _142796) (@lem8043839 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043842 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term743 _142795 _142796 _142797 f s) = (term761 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8043837 _142795 _142796 _142797 f s) (@lem8043841 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043843 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term742 _142795 _142796 _142797 f s) = (term743 _142795 _142796 _142797 f s)) = ((term741 _142795 _142796 _142797 f s) = (term761 _142795 _142796 _142797 f s)).
Proof. exact (MK_COMB (@lem8043831 _142795 _142796 _142797 f s) (@lem8043842 _142795 _142796 _142797 f s)). Qed.
Lemma lem8043844 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term741 _142795 _142796 _142797 f s) = (term761 _142795 _142796 _142797 f s).
Proof. exact (EQ_MP (@lem8043843 _142795 _142796 _142797 f s) (@lem8043821 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044101 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term547 _142795 _142796 _142797 f s) = (term761 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8043817 _142795 _142796 _142797 f s) (@lem8043844 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044102 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term553 _142795 _142796 _142797 s) = (term762 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8044101 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044103 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8044104 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term554 _142795 _142796 _142797 s) = (term763 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044103 _142795 _142797) (@lem8044102 _142795 _142796 _142797 s)). Qed.
Lemma lem8044106 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8044107 {_142795 _142797 : Type'} (P : type64 _142795 _142797) (Q : type64 _142795 _142797) : (term675 _142795 _142797 P Q) = (term676 _142795 _142797 P Q).
Proof. exact (@lem8044106 (type56 _142795 _142797) P Q). Qed.
Lemma lem8044108 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term764 _142795 _142796 _142797 s) = (term765 _142795 _142796 _142797 s).
Proof. exact (@lem8044107 _142795 _142797 (term766 _142795 _142796 _142797 s) (term767 _142795 _142796 _142797 s)). Qed.
Lemma lem8044109 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term768 _142795 _142796 _142797 s f) = (term755 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term768 _142795 _142796 _142797 s f)). Qed.
Lemma lem8044110 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044111 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term769 _142795 _142796 _142797 s f) = (term757 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8044110) (@lem8044109 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044112 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term770 _142795 _142796 _142797 s f) = (term760 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term770 _142795 _142796 _142797 s f)). Qed.
Lemma lem8044113 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term771 _142795 _142796 _142797 s f) = (term761 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8044111 _142795 _142796 _142797 f s) (@lem8044112 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044114 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term772 _142795 _142796 _142797 s) = (term762 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8044113 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044115 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8044116 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term764 _142795 _142796 _142797 s) = (term763 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044115 _142795 _142797) (@lem8044114 _142795 _142796 _142797 s)). Qed.
Lemma lem8044117 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8044118 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term773 _142795 _142796 _142797 s) = (term774 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044117) (@lem8044116 _142795 _142796 _142797 s)). Qed.
Lemma lem8044119 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term768 _142795 _142796 _142797 s f) = (term755 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term768 _142795 _142796 _142797 s f)). Qed.
Lemma lem8044120 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term775 _142795 _142796 _142797 s) = (term766 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8044119 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044121 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8044122 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term776 _142795 _142796 _142797 s) = (term777 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044121 _142795 _142797) (@lem8044120 _142795 _142796 _142797 s)). Qed.
Lemma lem8044123 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044124 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term778 _142795 _142796 _142797 s) = (term779 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044123) (@lem8044122 _142795 _142796 _142797 s)). Qed.
Lemma lem8044125 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term770 _142795 _142796 _142797 s f) = (term760 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term770 _142795 _142796 _142797 s f)). Qed.
Lemma lem8044126 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term780 _142795 _142796 _142797 s) = (term767 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8044125 _142795 _142796 _142797 f s)). Qed.
Lemma lem8044127 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8044128 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term781 _142795 _142796 _142797 s) = (term782 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044127 _142795 _142797) (@lem8044126 _142795 _142796 _142797 s)). Qed.
Lemma lem8044129 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term765 _142795 _142796 _142797 s) = (term783 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044124 _142795 _142796 _142797 s) (@lem8044128 _142795 _142796 _142797 s)). Qed.
Lemma lem8044130 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : ((term764 _142795 _142796 _142797 s) = (term765 _142795 _142796 _142797 s)) = ((term763 _142795 _142796 _142797 s) = (term783 _142795 _142796 _142797 s)).
Proof. exact (MK_COMB (@lem8044118 _142795 _142796 _142797 s) (@lem8044129 _142795 _142796 _142797 s)). Qed.
Lemma lem8044131 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term763 _142795 _142796 _142797 s) = (term783 _142795 _142796 _142797 s).
Proof. exact (EQ_MP (@lem8044130 _142795 _142796 _142797 s) (@lem8044108 _142795 _142796 _142797 s)). Qed.
Lemma lem8044396 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term554 _142795 _142796 _142797 s) = (term783 _142795 _142796 _142797 s).
Proof. exact (TRANS (@lem8044104 _142795 _142796 _142797 s) (@lem8044131 _142795 _142796 _142797 s)). Qed.
Lemma lem8044397 {_142795 _142796 _142797 : Type'} : (term562 _142795 _142796 _142797) = (term784 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8044396 _142795 _142796 _142797 s)). Qed.
Lemma lem8044398 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8044399 {_142795 _142796 _142797 : Type'} : (term563 _142795 _142796 _142797) = (term785 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044398 _142795 _142796) (@lem8044397 _142795 _142796 _142797)). Qed.
Lemma lem8044401 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8044402 {_142795 _142796 : Type'} (P : type56 _142795 _142796) (Q : type56 _142795 _142796) : (term786 _142795 _142796 P Q) = (term787 _142795 _142796 P Q).
Proof. exact (@lem8044401 (type24 _142795 _142796) P Q). Qed.
Lemma lem8044403 {_142795 _142796 _142797 : Type'} : (term788 _142795 _142796 _142797) = (term789 _142795 _142796 _142797).
Proof. exact (@lem8044402 _142795 _142796 (term790 _142795 _142796 _142797) (term791 _142795 _142796 _142797)). Qed.
Lemma lem8044404 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term792 _142795 _142796 _142797 s) = (term777 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term792 _142795 _142796 _142797 s)). Qed.
Lemma lem8044405 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044406 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term793 _142795 _142796 _142797 s) = (term779 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044405) (@lem8044404 _142795 _142796 _142797 s)). Qed.
Lemma lem8044407 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term794 _142795 _142796 _142797 s) = (term782 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term794 _142795 _142796 _142797 s)). Qed.
Lemma lem8044408 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term795 _142795 _142796 _142797 s) = (term783 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8044406 _142795 _142796 _142797 s) (@lem8044407 _142795 _142796 _142797 s)). Qed.
Lemma lem8044409 {_142795 _142796 _142797 : Type'} : (term796 _142795 _142796 _142797) = (term784 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8044408 _142795 _142796 _142797 s)). Qed.
Lemma lem8044410 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8044411 {_142795 _142796 _142797 : Type'} : (term788 _142795 _142796 _142797) = (term785 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044410 _142795 _142796) (@lem8044409 _142795 _142796 _142797)). Qed.
Lemma lem8044412 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8044413 {_142795 _142796 _142797 : Type'} : (term797 _142795 _142796 _142797) = (term798 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044412) (@lem8044411 _142795 _142796 _142797)). Qed.
Lemma lem8044414 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term792 _142795 _142796 _142797 s) = (term777 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term792 _142795 _142796 _142797 s)). Qed.
Lemma lem8044415 {_142795 _142796 _142797 : Type'} : (term799 _142795 _142796 _142797) = (term790 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8044414 _142795 _142796 _142797 s)). Qed.
Lemma lem8044416 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8044417 {_142795 _142796 _142797 : Type'} : (term800 _142795 _142796 _142797) = (term801 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044416 _142795 _142796) (@lem8044415 _142795 _142796 _142797)). Qed.
Lemma lem8044418 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044419 {_142795 _142796 _142797 : Type'} : (term802 _142795 _142796 _142797) = (term803 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044418) (@lem8044417 _142795 _142796 _142797)). Qed.
Lemma lem8044420 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term794 _142795 _142796 _142797 s) = (term782 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term794 _142795 _142796 _142797 s)). Qed.
Lemma lem8044421 {_142795 _142796 _142797 : Type'} : (term804 _142795 _142796 _142797) = (term791 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8044420 _142795 _142796 _142797 s)). Qed.
Lemma lem8044422 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8044423 {_142795 _142796 _142797 : Type'} : (term805 _142795 _142796 _142797) = (term806 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044422 _142795 _142796) (@lem8044421 _142795 _142796 _142797)). Qed.
Lemma lem8044424 {_142795 _142796 _142797 : Type'} : (term789 _142795 _142796 _142797) = (term807 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044419 _142795 _142796 _142797) (@lem8044423 _142795 _142796 _142797)). Qed.
Lemma lem8044425 {_142795 _142796 _142797 : Type'} : ((term788 _142795 _142796 _142797) = (term789 _142795 _142796 _142797)) = ((term785 _142795 _142796 _142797) = (term807 _142795 _142796 _142797)).
Proof. exact (MK_COMB (@lem8044413 _142795 _142796 _142797) (@lem8044424 _142795 _142796 _142797)). Qed.
Lemma lem8044426 {_142795 _142796 _142797 : Type'} : (term785 _142795 _142796 _142797) = (term807 _142795 _142796 _142797).
Proof. exact (EQ_MP (@lem8044425 _142795 _142796 _142797) (@lem8044403 _142795 _142796 _142797)). Qed.
Lemma lem8044699 {_142795 _142796 _142797 : Type'} : (term563 _142795 _142796 _142797) = (term807 _142795 _142796 _142797).
Proof. exact (TRANS (@lem8044399 _142795 _142796 _142797) (@lem8044426 _142795 _142796 _142797)). Qed.
Lemma lem8044700 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044701 {_142795 _142796 _142797 : Type'} : (term619 _142795 _142796 _142797) = (term808 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8044700) (@lem8044699 _142795 _142796 _142797)). Qed.
Lemma lem8044715 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8044716 {_142835 _142837 : Type'} (P : type24 _142835 _142837) (Q : type24 _142835 _142837) : (term629 _142835 _142837 P Q) = (term630 _142835 _142837 P Q).
Proof. exact (@lem8044715 (cart _142835 _142837) P Q). Qed.
Lemma lem8044717 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term809 _142835 _142836 _142837 f x t) = (term810 _142835 _142836 _142837 f x t).
Proof. exact (@lem8044716 _142835 _142837 (term811 _142835 _142836 _142837 f x t) (term812 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044718 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term813 _142835 _142836 _142837 f x t y) = (term584 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term813 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044719 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044720 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term814 _142835 _142836 _142837 f x t y) = (term586 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8044719) (@lem8044718 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044721 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term815 _142835 _142836 _142837 f x t y) = (term581 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term815 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044722 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term816 _142835 _142836 _142837 f x t y) = (term588 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8044720 _142835 _142836 _142837 f x t y) (@lem8044721 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044723 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term817 _142835 _142836 _142837 f x t) = (term595 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8044722 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044724 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8044725 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term809 _142835 _142836 _142837 f x t) = (term596 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044724 _142835 _142837) (@lem8044723 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8044727 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term818 _142835 _142836 _142837 f x t) = (term819 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044726) (@lem8044725 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044728 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term813 _142835 _142836 _142837 f x t y) = (term584 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term813 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044729 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term820 _142835 _142836 _142837 f x t) = (term811 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8044728 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044730 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8044731 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term821 _142835 _142836 _142837 f x t) = (term822 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044730 _142835 _142837) (@lem8044729 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044732 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044733 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term823 _142835 _142836 _142837 f x t) = (term824 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044732) (@lem8044731 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044734 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term815 _142835 _142836 _142837 f x t y) = (term581 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term815 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044735 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term825 _142835 _142836 _142837 f x t) = (term812 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8044734 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8044736 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8044737 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term826 _142835 _142836 _142837 f x t) = (term827 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044736 _142835 _142837) (@lem8044735 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044738 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term810 _142835 _142836 _142837 f x t) = (term828 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044733 _142835 _142836 _142837 f x t) (@lem8044737 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044739 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : ((term809 _142835 _142836 _142837 f x t) = (term810 _142835 _142836 _142837 f x t)) = ((term596 _142835 _142836 _142837 f x t) = (term828 _142835 _142836 _142837 f x t)).
Proof. exact (MK_COMB (@lem8044727 _142835 _142836 _142837 f x t) (@lem8044738 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044740 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term596 _142835 _142836 _142837 f x t) = (term828 _142835 _142836 _142837 f x t).
Proof. exact (EQ_MP (@lem8044739 _142835 _142836 _142837 f x t) (@lem8044717 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044989 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term602 _142835 _142836 _142837 f t) = (term829 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8044740 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044990 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8044991 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term603 _142835 _142836 _142837 f t) = (term830 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8044990 _142835 _142836) (@lem8044989 _142835 _142836 _142837 f t)). Qed.
Lemma lem8044993 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8044994 {_142835 _142836 : Type'} (P : type24 _142835 _142836) (Q : type24 _142835 _142836) : (term629 _142835 _142836 P Q) = (term630 _142835 _142836 P Q).
Proof. exact (@lem8044993 (cart _142835 _142836) P Q). Qed.
Lemma lem8044995 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term831 _142835 _142836 _142837 f t) = (term832 _142835 _142836 _142837 f t).
Proof. exact (@lem8044994 _142835 _142836 (term833 _142835 _142836 _142837 f t) (term834 _142835 _142836 _142837 f t)). Qed.
Lemma lem8044996 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term835 _142835 _142836 _142837 f t x) = (term822 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term835 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8044997 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8044998 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term836 _142835 _142836 _142837 f t x) = (term824 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044997) (@lem8044996 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8044999 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term837 _142835 _142836 _142837 f t x) = (term827 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term837 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8045000 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term838 _142835 _142836 _142837 f t x) = (term828 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8044998 _142835 _142836 _142837 f x t) (@lem8044999 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8045001 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term839 _142835 _142836 _142837 f t) = (term829 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8045000 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8045002 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8045003 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term831 _142835 _142836 _142837 f t) = (term830 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045002 _142835 _142836) (@lem8045001 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045004 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045005 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term840 _142835 _142836 _142837 f t) = (term841 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045004) (@lem8045003 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045006 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term835 _142835 _142836 _142837 f t x) = (term822 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term835 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8045007 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term842 _142835 _142836 _142837 f t) = (term833 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8045006 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8045008 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8045009 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term843 _142835 _142836 _142837 f t) = (term844 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045008 _142835 _142836) (@lem8045007 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045010 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045011 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term845 _142835 _142836 _142837 f t) = (term846 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045010) (@lem8045009 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045012 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term837 _142835 _142836 _142837 f t x) = (term827 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term837 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8045013 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term847 _142835 _142836 _142837 f t) = (term834 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8045012 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8045014 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8045015 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term848 _142835 _142836 _142837 f t) = (term849 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045014 _142835 _142836) (@lem8045013 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045016 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term832 _142835 _142836 _142837 f t) = (term850 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045011 _142835 _142836 _142837 f t) (@lem8045015 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045017 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term831 _142835 _142836 _142837 f t) = (term832 _142835 _142836 _142837 f t)) = ((term830 _142835 _142836 _142837 f t) = (term850 _142835 _142836 _142837 f t)).
Proof. exact (MK_COMB (@lem8045005 _142835 _142836 _142837 f t) (@lem8045016 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045018 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term830 _142835 _142836 _142837 f t) = (term850 _142835 _142836 _142837 f t).
Proof. exact (EQ_MP (@lem8045017 _142835 _142836 _142837 f t) (@lem8044995 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045275 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term603 _142835 _142836 _142837 f t) = (term850 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8044991 _142835 _142836 _142837 f t) (@lem8045018 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045276 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term609 _142835 _142836 _142837 f) = (term851 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8045275 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045277 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8045278 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term610 _142835 _142836 _142837 f) = (term852 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045277 _142835 _142837) (@lem8045276 _142835 _142836 _142837 f)). Qed.
Lemma lem8045280 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8045281 {_142835 _142837 : Type'} (P : type56 _142835 _142837) (Q : type56 _142835 _142837) : (term786 _142835 _142837 P Q) = (term787 _142835 _142837 P Q).
Proof. exact (@lem8045280 (type24 _142835 _142837) P Q). Qed.
Lemma lem8045282 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term853 _142835 _142836 _142837 f) = (term854 _142835 _142836 _142837 f).
Proof. exact (@lem8045281 _142835 _142837 (term855 _142835 _142836 _142837 f) (term856 _142835 _142836 _142837 f)). Qed.
Lemma lem8045283 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term857 _142835 _142836 _142837 f t) = (term844 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term857 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045284 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045285 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term858 _142835 _142836 _142837 f t) = (term846 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045284) (@lem8045283 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045286 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term859 _142835 _142836 _142837 f t) = (term849 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term859 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045287 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term860 _142835 _142836 _142837 f t) = (term850 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8045285 _142835 _142836 _142837 f t) (@lem8045286 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045288 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term861 _142835 _142836 _142837 f) = (term851 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8045287 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045289 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8045290 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term853 _142835 _142836 _142837 f) = (term852 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045289 _142835 _142837) (@lem8045288 _142835 _142836 _142837 f)). Qed.
Lemma lem8045291 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045292 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term862 _142835 _142836 _142837 f) = (term863 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045291) (@lem8045290 _142835 _142836 _142837 f)). Qed.
Lemma lem8045293 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term857 _142835 _142836 _142837 f t) = (term844 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term857 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045294 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term864 _142835 _142836 _142837 f) = (term855 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8045293 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045295 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8045296 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term865 _142835 _142836 _142837 f) = (term866 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045295 _142835 _142837) (@lem8045294 _142835 _142836 _142837 f)). Qed.
Lemma lem8045297 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045298 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term867 _142835 _142836 _142837 f) = (term868 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045297) (@lem8045296 _142835 _142836 _142837 f)). Qed.
Lemma lem8045299 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term859 _142835 _142836 _142837 f t) = (term849 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term859 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045300 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term869 _142835 _142836 _142837 f) = (term856 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8045299 _142835 _142836 _142837 f t)). Qed.
Lemma lem8045301 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8045302 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term870 _142835 _142836 _142837 f) = (term871 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045301 _142835 _142837) (@lem8045300 _142835 _142836 _142837 f)). Qed.
Lemma lem8045303 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term854 _142835 _142836 _142837 f) = (term872 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045298 _142835 _142836 _142837 f) (@lem8045302 _142835 _142836 _142837 f)). Qed.
Lemma lem8045304 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : ((term853 _142835 _142836 _142837 f) = (term854 _142835 _142836 _142837 f)) = ((term852 _142835 _142836 _142837 f) = (term872 _142835 _142836 _142837 f)).
Proof. exact (MK_COMB (@lem8045292 _142835 _142836 _142837 f) (@lem8045303 _142835 _142836 _142837 f)). Qed.
Lemma lem8045305 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term852 _142835 _142836 _142837 f) = (term872 _142835 _142836 _142837 f).
Proof. exact (EQ_MP (@lem8045304 _142835 _142836 _142837 f) (@lem8045282 _142835 _142836 _142837 f)). Qed.
Lemma lem8045570 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term610 _142835 _142836 _142837 f) = (term872 _142835 _142836 _142837 f).
Proof. exact (TRANS (@lem8045278 _142835 _142836 _142837 f) (@lem8045305 _142835 _142836 _142837 f)). Qed.
Lemma lem8045571 {_142835 _142836 _142837 : Type'} : (term616 _142835 _142836 _142837) = (term873 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8045570 _142835 _142836 _142837 f)). Qed.
Lemma lem8045572 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8045573 {_142835 _142836 _142837 : Type'} : (term617 _142835 _142836 _142837) = (term874 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045572 _142835 _142836) (@lem8045571 _142835 _142836 _142837)). Qed.
Lemma lem8045575 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term627 A P Q) = (term628 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8045576 {_142835 _142836 : Type'} (P : type64 _142835 _142836) (Q : type64 _142835 _142836) : (term675 _142835 _142836 P Q) = (term676 _142835 _142836 P Q).
Proof. exact (@lem8045575 (type56 _142835 _142836) P Q). Qed.
Lemma lem8045577 {_142835 _142836 _142837 : Type'} : (term875 _142835 _142836 _142837) = (term876 _142835 _142836 _142837).
Proof. exact (@lem8045576 _142835 _142836 (term877 _142835 _142836 _142837) (term878 _142835 _142836 _142837)). Qed.
Lemma lem8045578 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term879 _142835 _142836 _142837 f) = (term866 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term879 _142835 _142836 _142837 f)). Qed.
Lemma lem8045579 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045580 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term880 _142835 _142836 _142837 f) = (term868 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045579) (@lem8045578 _142835 _142836 _142837 f)). Qed.
Lemma lem8045581 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term881 _142835 _142836 _142837 f) = (term871 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term881 _142835 _142836 _142837 f)). Qed.
Lemma lem8045582 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term882 _142835 _142836 _142837 f) = (term872 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8045580 _142835 _142836 _142837 f) (@lem8045581 _142835 _142836 _142837 f)). Qed.
Lemma lem8045583 {_142835 _142836 _142837 : Type'} : (term883 _142835 _142836 _142837) = (term873 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8045582 _142835 _142836 _142837 f)). Qed.
Lemma lem8045584 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8045585 {_142835 _142836 _142837 : Type'} : (term875 _142835 _142836 _142837) = (term874 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045584 _142835 _142836) (@lem8045583 _142835 _142836 _142837)). Qed.
Lemma lem8045586 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045587 {_142835 _142836 _142837 : Type'} : (term884 _142835 _142836 _142837) = (term885 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045586) (@lem8045585 _142835 _142836 _142837)). Qed.
Lemma lem8045588 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term879 _142835 _142836 _142837 f) = (term866 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term879 _142835 _142836 _142837 f)). Qed.
Lemma lem8045589 {_142835 _142836 _142837 : Type'} : (term886 _142835 _142836 _142837) = (term877 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8045588 _142835 _142836 _142837 f)). Qed.
Lemma lem8045590 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8045591 {_142835 _142836 _142837 : Type'} : (term887 _142835 _142836 _142837) = (term888 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045590 _142835 _142836) (@lem8045589 _142835 _142836 _142837)). Qed.
Lemma lem8045592 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045593 {_142835 _142836 _142837 : Type'} : (term889 _142835 _142836 _142837) = (term890 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045592) (@lem8045591 _142835 _142836 _142837)). Qed.
Lemma lem8045594 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term881 _142835 _142836 _142837 f) = (term871 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term881 _142835 _142836 _142837 f)). Qed.
Lemma lem8045595 {_142835 _142836 _142837 : Type'} : (term891 _142835 _142836 _142837) = (term878 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8045594 _142835 _142836 _142837 f)). Qed.
Lemma lem8045596 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8045597 {_142835 _142836 _142837 : Type'} : (term892 _142835 _142836 _142837) = (term893 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045596 _142835 _142836) (@lem8045595 _142835 _142836 _142837)). Qed.
Lemma lem8045598 {_142835 _142836 _142837 : Type'} : (term876 _142835 _142836 _142837) = (term894 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8045593 _142835 _142836 _142837) (@lem8045597 _142835 _142836 _142837)). Qed.
Lemma lem8045599 {_142835 _142836 _142837 : Type'} : ((term875 _142835 _142836 _142837) = (term876 _142835 _142836 _142837)) = ((term874 _142835 _142836 _142837) = (term894 _142835 _142836 _142837)).
Proof. exact (MK_COMB (@lem8045587 _142835 _142836 _142837) (@lem8045598 _142835 _142836 _142837)). Qed.
Lemma lem8045600 {_142835 _142836 _142837 : Type'} : (term874 _142835 _142836 _142837) = (term894 _142835 _142836 _142837).
Proof. exact (EQ_MP (@lem8045599 _142835 _142836 _142837) (@lem8045577 _142835 _142836 _142837)). Qed.
Lemma lem8045873 {_142835 _142836 _142837 : Type'} : (term617 _142835 _142836 _142837) = (term894 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8045573 _142835 _142836 _142837) (@lem8045600 _142835 _142836 _142837)). Qed.
Lemma lem8045874 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term621 _142795 _142796 _142797 _142835 _142836 _142837) = (term895 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8044701 _142795 _142796 _142797) (@lem8045873 _142835 _142836 _142837)). Qed.
Lemma lem8045875 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term626 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term896 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8043527 _142753 _142754 _142755) (@lem8045874 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8045877 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8045878 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (Q : Prop) : (term899 _142753 _142754 P Q) = (term900 _142753 _142754 P Q).
Proof. exact (@lem8045877 (type24 _142753 _142754) P Q). Qed.
Lemma lem8045879 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term901 _142753 _142754 _142755 f x g y) = (term902 _142753 _142754 _142755 f x g y).
Proof. exact (@lem8045878 _142753 _142754 (term362 _142753 _142754 f x) (term363 _142753 _142755 g y)). Qed.
Lemma lem8045880 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term430 _142753 _142754 f x t) = (term360 _142753 _142754 f t x).
Proof. exact (eq_refl (term430 _142753 _142754 f x t)). Qed.
Lemma lem8045881 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term903 _142753 _142754 f x) = (term362 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045880 _142753 _142754 f t x)). Qed.
Lemma lem8045882 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045883 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term904 _142753 _142754 f x) = (term363 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8045882 _142753 _142754) (@lem8045881 _142753 _142754 f x)). Qed.
Lemma lem8045884 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045885 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term905 _142753 _142754 f x) = (term365 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8045884) (@lem8045883 _142753 _142754 f x)). Qed.
Lemma lem8045886 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term363 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (eq_refl (term363 _142753 _142755 g y)). Qed.
Lemma lem8045887 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term901 _142753 _142754 _142755 f x g y) = (term366 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045885 _142753 _142754 f x) (@lem8045886 _142753 _142755 g y)). Qed.
Lemma lem8045888 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045889 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term906 _142753 _142754 _142755 f x g y) = (term367 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045888) (@lem8045887 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045890 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term430 _142753 _142754 f x t) = (term360 _142753 _142754 f t x).
Proof. exact (eq_refl (term430 _142753 _142754 f x t)). Qed.
Lemma lem8045891 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045892 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term907 _142753 _142754 f x t) = (term908 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8045891) (@lem8045890 _142753 _142754 f t x)). Qed.
Lemma lem8045893 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term363 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (eq_refl (term363 _142753 _142755 g y)). Qed.
Lemma lem8045894 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term909 _142753 _142754 _142755 f x t g y) = (term910 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045892 _142753 _142754 f t x) (@lem8045893 _142753 _142755 g y)). Qed.
Lemma lem8045895 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term911 _142753 _142754 _142755 f x g y) = (term912 _142753 _142754 _142755 f x g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045894 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045896 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045897 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term902 _142753 _142754 _142755 f x g y) = (term913 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045896 _142753 _142754) (@lem8045895 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045898 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : ((term901 _142753 _142754 _142755 f x g y) = (term902 _142753 _142754 _142755 f x g y)) = ((term366 _142753 _142754 _142755 f x g y) = (term913 _142753 _142754 _142755 f x g y)).
Proof. exact (MK_COMB (@lem8045889 _142753 _142754 _142755 f x g y) (@lem8045897 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045899 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term366 _142753 _142754 _142755 f x g y) = (term913 _142753 _142754 _142755 f x g y).
Proof. exact (EQ_MP (@lem8045898 _142753 _142754 _142755 f x g y) (@lem8045879 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045901 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8045902 {_142753 _142755 : Type'} (P : Prop) (Q : type56 _142753 _142755) : (term916 _142753 _142755 P Q) = (term917 _142753 _142755 P Q).
Proof. exact (@lem8045901 (type24 _142753 _142755) P Q). Qed.
Lemma lem8045903 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term918 _142753 _142754 _142755 f t x g y) = (term919 _142753 _142754 _142755 f t x g y).
Proof. exact (@lem8045902 _142753 _142755 (term360 _142753 _142754 f t x) (term362 _142753 _142755 g y)). Qed.
Lemma lem8045904 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term430 _142753 _142755 g y t) = (term360 _142753 _142755 g t y).
Proof. exact (eq_refl (term430 _142753 _142755 g y t)). Qed.
Lemma lem8045905 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term903 _142753 _142755 g y) = (term362 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8045904 _142753 _142755 g t y)). Qed.
Lemma lem8045906 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8045907 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term904 _142753 _142755 g y) = (term363 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8045906 _142753 _142755) (@lem8045905 _142753 _142755 g y)). Qed.
Lemma lem8045908 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term908 _142753 _142754 f t x) = (term908 _142753 _142754 f t x).
Proof. exact (eq_refl (term908 _142753 _142754 f t x)). Qed.
Lemma lem8045909 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term918 _142753 _142754 _142755 f t x g y) = (term910 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045908 _142753 _142754 f t x) (@lem8045907 _142753 _142755 g y)). Qed.
Lemma lem8045910 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045911 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term920 _142753 _142754 _142755 f t x g y) = (term921 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045910) (@lem8045909 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045912 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term430 _142753 _142755 g y t) = (term360 _142753 _142755 g t y).
Proof. exact (eq_refl (term430 _142753 _142755 g y t)). Qed.
Lemma lem8045913 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term908 _142753 _142754 f t x) = (term908 _142753 _142754 f t x).
Proof. exact (eq_refl (term908 _142753 _142754 f t x)). Qed.
Lemma lem8045914 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term922 _142753 _142754 _142755 f t x g y t') = (term923 _142753 _142754 _142755 f t x g t' y).
Proof. exact (MK_COMB (@lem8045913 _142753 _142754 f t x) (@lem8045912 _142753 _142755 g t' y)). Qed.
Lemma lem8045915 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term924 _142753 _142754 _142755 f t x g y) = (term925 _142753 _142754 _142755 f t x g y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8045914 _142753 _142754 _142755 f t x g t' y)). Qed.
Lemma lem8045916 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8045917 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term919 _142753 _142754 _142755 f t x g y) = (term926 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045916 _142753 _142755) (@lem8045915 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045918 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : ((term918 _142753 _142754 _142755 f t x g y) = (term919 _142753 _142754 _142755 f t x g y)) = ((term910 _142753 _142754 _142755 f t x g y) = (term926 _142753 _142754 _142755 f t x g y)).
Proof. exact (MK_COMB (@lem8045911 _142753 _142754 _142755 f t x g y) (@lem8045917 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045919 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term910 _142753 _142754 _142755 f t x g y) = (term926 _142753 _142754 _142755 f t x g y).
Proof. exact (EQ_MP (@lem8045918 _142753 _142754 _142755 f t x g y) (@lem8045903 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045920 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term912 _142753 _142754 _142755 f x g y) = (term927 _142753 _142754 _142755 f x g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045919 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045921 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045922 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term913 _142753 _142754 _142755 f x g y) = (term928 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045921 _142753 _142754) (@lem8045920 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045923 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term366 _142753 _142754 _142755 f x g y) = (term928 _142753 _142754 _142755 f x g y).
Proof. exact (TRANS (@lem8045899 _142753 _142754 _142755 f x g y) (@lem8045922 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045924 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045925 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term467 _142753 _142754 _142755 f x g y) = (term929 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045924) (@lem8045923 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045926 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045927 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term469 _142753 _142754 _142755 f g x y) = (term930 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8045925 _142753 _142754 _142755 f x g y) (@lem8045926 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045929 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8045930 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (Q : Prop) : (term899 _142753 _142754 P Q) = (term900 _142753 _142754 P Q).
Proof. exact (@lem8045929 (type24 _142753 _142754) P Q). Qed.
Lemma lem8045931 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term931 _142753 _142754 _142755 f g x y) = (term932 _142753 _142754 _142755 f g x y).
Proof. exact (@lem8045930 _142753 _142754 (term927 _142753 _142754 _142755 f x g y) (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045932 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term933 _142753 _142754 _142755 f x g y t) = (term926 _142753 _142754 _142755 f t x g y).
Proof. exact (eq_refl (term933 _142753 _142754 _142755 f x g y t)). Qed.
Lemma lem8045933 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term934 _142753 _142754 _142755 f x g y) = (term927 _142753 _142754 _142755 f x g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045932 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045934 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045935 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term935 _142753 _142754 _142755 f x g y) = (term928 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045934 _142753 _142754) (@lem8045933 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045936 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045937 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term936 _142753 _142754 _142755 f x g y) = (term929 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8045936) (@lem8045935 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8045938 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045939 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term931 _142753 _142754 _142755 f g x y) = (term930 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8045937 _142753 _142754 _142755 f x g y) (@lem8045938 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045940 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045941 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term937 _142753 _142754 _142755 f g x y) = (term938 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8045940) (@lem8045939 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045942 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term933 _142753 _142754 _142755 f x g y t) = (term926 _142753 _142754 _142755 f t x g y).
Proof. exact (eq_refl (term933 _142753 _142754 _142755 f x g y t)). Qed.
Lemma lem8045943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045944 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term939 _142753 _142754 _142755 f x g y t) = (term940 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045943) (@lem8045942 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045945 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045946 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term941 _142753 _142754 _142755 t f g x y) = (term942 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8045944 _142753 _142754 _142755 f t x g y) (@lem8045945 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045947 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term943 _142753 _142754 _142755 f g x y) = (term944 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045946 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045948 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045949 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term932 _142753 _142754 _142755 f g x y) = (term945 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8045948 _142753 _142754) (@lem8045947 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045950 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term931 _142753 _142754 _142755 f g x y) = (term932 _142753 _142754 _142755 f g x y)) = ((term930 _142753 _142754 _142755 f g x y) = (term945 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8045941 _142753 _142754 _142755 f g x y) (@lem8045949 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045951 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term930 _142753 _142754 _142755 f g x y) = (term945 _142753 _142754 _142755 f g x y).
Proof. exact (EQ_MP (@lem8045950 _142753 _142754 _142755 f g x y) (@lem8045931 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045953 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8045954 {_142753 _142755 : Type'} (P : type56 _142753 _142755) (Q : Prop) : (term899 _142753 _142755 P Q) = (term900 _142753 _142755 P Q).
Proof. exact (@lem8045953 (type24 _142753 _142755) P Q). Qed.
Lemma lem8045955 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term946 _142753 _142754 _142755 t f g x y) = (term947 _142753 _142754 _142755 t f g x y).
Proof. exact (@lem8045954 _142753 _142755 (term925 _142753 _142754 _142755 f t x g y) (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045956 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term948 _142753 _142754 _142755 f t x g y t') = (term923 _142753 _142754 _142755 f t x g t' y).
Proof. exact (eq_refl (term948 _142753 _142754 _142755 f t x g y t')). Qed.
Lemma lem8045957 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term949 _142753 _142754 _142755 f t x g y) = (term925 _142753 _142754 _142755 f t x g y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8045956 _142753 _142754 _142755 f t x g t' y)). Qed.
Lemma lem8045958 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8045959 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term950 _142753 _142754 _142755 f t x g y) = (term926 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045958 _142753 _142755) (@lem8045957 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045960 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045961 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term951 _142753 _142754 _142755 f t x g y) = (term940 _142753 _142754 _142755 f t x g y).
Proof. exact (MK_COMB (@lem8045960) (@lem8045959 _142753 _142754 _142755 f t x g y)). Qed.
Lemma lem8045962 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045963 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term946 _142753 _142754 _142755 t f g x y) = (term942 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8045961 _142753 _142754 _142755 f t x g y) (@lem8045962 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045964 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8045965 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term952 _142753 _142754 _142755 t f g x y) = (term953 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8045964) (@lem8045963 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045966 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term948 _142753 _142754 _142755 f t x g y t') = (term923 _142753 _142754 _142755 f t x g t' y).
Proof. exact (eq_refl (term948 _142753 _142754 _142755 f t x g y t')). Qed.
Lemma lem8045967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8045968 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term954 _142753 _142754 _142755 f t x g y t') = (term955 _142753 _142754 _142755 f t x g t' y).
Proof. exact (MK_COMB (@lem8045967) (@lem8045966 _142753 _142754 _142755 f t x g t' y)). Qed.
Lemma lem8045969 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term462 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term462 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045970 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term956 _142753 _142754 _142755 t t' f g x y) = (term957 _142753 _142754 _142755 t t' f g x y).
Proof. exact (MK_COMB (@lem8045968 _142753 _142754 _142755 f t x g t' y) (@lem8045969 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045971 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term958 _142753 _142754 _142755 t f g x y) = (term959 _142753 _142754 _142755 t f g x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8045970 _142753 _142754 _142755 t t' f g x y)). Qed.
Lemma lem8045972 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8045973 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term947 _142753 _142754 _142755 t f g x y) = (term960 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8045972 _142753 _142755) (@lem8045971 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045974 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term946 _142753 _142754 _142755 t f g x y) = (term947 _142753 _142754 _142755 t f g x y)) = ((term942 _142753 _142754 _142755 t f g x y) = (term960 _142753 _142754 _142755 t f g x y)).
Proof. exact (MK_COMB (@lem8045965 _142753 _142754 _142755 t f g x y) (@lem8045973 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045975 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term942 _142753 _142754 _142755 t f g x y) = (term960 _142753 _142754 _142755 t f g x y).
Proof. exact (EQ_MP (@lem8045974 _142753 _142754 _142755 t f g x y) (@lem8045955 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045976 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term944 _142753 _142754 _142755 f g x y) = (term961 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8045975 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8045977 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8045978 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term945 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8045977 _142753 _142754) (@lem8045976 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045979 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term930 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8045951 _142753 _142754 _142755 f g x y) (@lem8045978 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045980 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term469 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8045927 _142753 _142754 _142755 f g x y) (@lem8045979 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045981 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term633 _142753 _142754 _142755 f g x) = (term963 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8045980 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045982 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8045983 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term644 _142753 _142754 _142755 f g x) = (term964 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8045982 _142753 _142755) (@lem8045981 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8045984 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term655 _142753 _142754 _142755 f g) = (term965 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8045983 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8045985 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8045986 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term666 _142753 _142754 _142755 f g) = (term966 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8045985 _142753 _142754) (@lem8045984 _142753 _142754 _142755 f g)). Qed.
Lemma lem8045987 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term679 _142753 _142754 _142755 f) = (term967 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8045986 _142753 _142754 _142755 f g)). Qed.
Lemma lem8045988 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8045989 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term690 _142753 _142754 _142755 f) = (term968 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8045988 _142753 _142755) (@lem8045987 _142753 _142754 _142755 f)). Qed.
Lemma lem8045990 {_142753 _142754 _142755 : Type'} : (term701 _142753 _142754 _142755) = (term969 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8045989 _142753 _142754 _142755 f)). Qed.
Lemma lem8045991 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8045992 {_142753 _142754 _142755 : Type'} : (term712 _142753 _142754 _142755) = (term970 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8045991 _142753 _142754) (@lem8045990 _142753 _142754 _142755)). Qed.
Lemma lem8045993 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8045994 {_142753 _142754 _142755 : Type'} : (term714 _142753 _142754 _142755) = (term971 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8045993) (@lem8045992 _142753 _142754 _142755)). Qed.
Lemma lem8045996 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8045997 {_142753 _142754 : Type'} (P : Prop) (Q : type56 _142753 _142754) : (term916 _142753 _142754 P Q) = (term917 _142753 _142754 P Q).
Proof. exact (@lem8045996 (type24 _142753 _142754) P Q). Qed.
Lemma lem8045998 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term972 _142753 _142754 _142755 f g x y) = (term973 _142753 _142754 _142755 f g x y).
Proof. exact (@lem8045997 _142753 _142754 (term438 _142753 _142754 _142755 f x g y) (term376 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8045999 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term458 _142753 _142754 _142755 f g x y s) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (eq_refl (term458 _142753 _142754 _142755 f g x y s)). Qed.
Lemma lem8046000 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term974 _142753 _142754 _142755 f g x y) = (term376 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8045999 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046001 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046002 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term975 _142753 _142754 _142755 f g x y) = (term377 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046001 _142753 _142754) (@lem8046000 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046003 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term464 _142753 _142754 _142755 f x g y) = (term464 _142753 _142754 _142755 f x g y).
Proof. exact (eq_refl (term464 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8046004 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term972 _142753 _142754 _142755 f g x y) = (term466 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046003 _142753 _142754 _142755 f x g y) (@lem8046002 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046005 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046006 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term976 _142753 _142754 _142755 f g x y) = (term977 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046005) (@lem8046004 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046007 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term458 _142753 _142754 _142755 f g x y s) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (eq_refl (term458 _142753 _142754 _142755 f g x y s)). Qed.
Lemma lem8046008 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term464 _142753 _142754 _142755 f x g y) = (term464 _142753 _142754 _142755 f x g y).
Proof. exact (eq_refl (term464 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8046009 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term978 _142753 _142754 _142755 f g x y s) = (term979 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8046008 _142753 _142754 _142755 f x g y) (@lem8046007 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046010 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term980 _142753 _142754 _142755 f g x y) = (term981 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8046009 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046011 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046012 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term973 _142753 _142754 _142755 f g x y) = (term982 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046011 _142753 _142754) (@lem8046010 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046013 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term972 _142753 _142754 _142755 f g x y) = (term973 _142753 _142754 _142755 f g x y)) = ((term466 _142753 _142754 _142755 f g x y) = (term982 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8046006 _142753 _142754 _142755 f g x y) (@lem8046012 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046014 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term466 _142753 _142754 _142755 f g x y) = (term982 _142753 _142754 _142755 f g x y).
Proof. exact (EQ_MP (@lem8046013 _142753 _142754 _142755 f g x y) (@lem8045998 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046016 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8046017 {_142753 _142755 : Type'} (P : Prop) (Q : type56 _142753 _142755) : (term916 _142753 _142755 P Q) = (term917 _142753 _142755 P Q).
Proof. exact (@lem8046016 (type24 _142753 _142755) P Q). Qed.
Lemma lem8046018 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term983 _142753 _142754 _142755 f g s x y) = (term984 _142753 _142754 _142755 f g s x y).
Proof. exact (@lem8046017 _142753 _142755 (term438 _142753 _142754 _142755 f x g y) (term374 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046019 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term451 _142753 _142754 _142755 f g s x y t) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term451 _142753 _142754 _142755 f g s x y t)). Qed.
Lemma lem8046020 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term985 _142753 _142754 _142755 f g s x y) = (term374 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8046019 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8046021 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8046022 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term986 _142753 _142754 _142755 f g s x y) = (term375 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8046021 _142753 _142755) (@lem8046020 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046023 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term464 _142753 _142754 _142755 f x g y) = (term464 _142753 _142754 _142755 f x g y).
Proof. exact (eq_refl (term464 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8046024 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term983 _142753 _142754 _142755 f g s x y) = (term979 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8046023 _142753 _142754 _142755 f x g y) (@lem8046022 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046025 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046026 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term987 _142753 _142754 _142755 f g s x y) = (term988 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8046025) (@lem8046024 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046027 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term451 _142753 _142754 _142755 f g s x y t) = (term373 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term451 _142753 _142754 _142755 f g s x y t)). Qed.
Lemma lem8046028 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term464 _142753 _142754 _142755 f x g y) = (term464 _142753 _142754 _142755 f x g y).
Proof. exact (eq_refl (term464 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8046029 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term989 _142753 _142754 _142755 f g s x y t) = (term990 _142753 _142754 _142755 f g s x t y).
Proof. exact (MK_COMB (@lem8046028 _142753 _142754 _142755 f x g y) (@lem8046027 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8046030 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term991 _142753 _142754 _142755 f g s x y) = (term992 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8046029 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8046031 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8046032 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term984 _142753 _142754 _142755 f g s x y) = (term993 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8046031 _142753 _142755) (@lem8046030 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046033 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term983 _142753 _142754 _142755 f g s x y) = (term984 _142753 _142754 _142755 f g s x y)) = ((term979 _142753 _142754 _142755 f g s x y) = (term993 _142753 _142754 _142755 f g s x y)).
Proof. exact (MK_COMB (@lem8046026 _142753 _142754 _142755 f g s x y) (@lem8046032 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046034 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term979 _142753 _142754 _142755 f g s x y) = (term993 _142753 _142754 _142755 f g s x y).
Proof. exact (EQ_MP (@lem8046033 _142753 _142754 _142755 f g s x y) (@lem8046018 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046035 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term981 _142753 _142754 _142755 f g x y) = (term994 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8046034 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8046036 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046037 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term982 _142753 _142754 _142755 f g x y) = (term995 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046036 _142753 _142754) (@lem8046035 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046038 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term466 _142753 _142754 _142755 f g x y) = (term995 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8046014 _142753 _142754 _142755 f g x y) (@lem8046037 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046039 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term634 _142753 _142754 _142755 f g x) = (term996 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8046038 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046040 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8046041 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term649 _142753 _142754 _142755 f g x) = (term997 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046040 _142753 _142755) (@lem8046039 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046042 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term656 _142753 _142754 _142755 f g) = (term998 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8046041 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046043 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8046044 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term671 _142753 _142754 _142755 f g) = (term999 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046043 _142753 _142754) (@lem8046042 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046045 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term680 _142753 _142754 _142755 f) = (term1000 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8046044 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046046 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8046047 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term695 _142753 _142754 _142755 f) = (term1001 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046046 _142753 _142755) (@lem8046045 _142753 _142754 _142755 f)). Qed.
Lemma lem8046048 {_142753 _142754 _142755 : Type'} : (term702 _142753 _142754 _142755) = (term1002 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8046047 _142753 _142754 _142755 f)). Qed.
Lemma lem8046049 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8046050 {_142753 _142754 _142755 : Type'} : (term717 _142753 _142754 _142755) = (term1003 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046049 _142753 _142754) (@lem8046048 _142753 _142754 _142755)). Qed.
Lemma lem8046051 {_142753 _142754 _142755 : Type'} : (term718 _142753 _142754 _142755) = (term1004 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8045994 _142753 _142754 _142755) (@lem8046050 _142753 _142754 _142755)). Qed.
Lemma lem8046053 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046054 {_142753 _142754 : Type'} (P : type64 _142753 _142754) (Q : type64 _142753 _142754) : (term676 _142753 _142754 P Q) = (term675 _142753 _142754 P Q).
Proof. exact (@lem8046053 (type56 _142753 _142754) P Q). Qed.
Lemma lem8046055 {_142753 _142754 _142755 : Type'} : (term1005 _142753 _142754 _142755) = (term1006 _142753 _142754 _142755).
Proof. exact (@lem8046054 _142753 _142754 (term969 _142753 _142754 _142755) (term1002 _142753 _142754 _142755)). Qed.
Lemma lem8046056 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1007 _142753 _142754 _142755 f) = (term968 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1007 _142753 _142754 _142755 f)). Qed.
Lemma lem8046057 {_142753 _142754 _142755 : Type'} : (term1008 _142753 _142754 _142755) = (term969 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8046056 _142753 _142754 _142755 f)). Qed.
Lemma lem8046058 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8046059 {_142753 _142754 _142755 : Type'} : (term1009 _142753 _142754 _142755) = (term970 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046058 _142753 _142754) (@lem8046057 _142753 _142754 _142755)). Qed.
Lemma lem8046060 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046061 {_142753 _142754 _142755 : Type'} : (term1010 _142753 _142754 _142755) = (term971 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046060) (@lem8046059 _142753 _142754 _142755)). Qed.
Lemma lem8046062 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1011 _142753 _142754 _142755 f) = (term1001 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1011 _142753 _142754 _142755 f)). Qed.
Lemma lem8046063 {_142753 _142754 _142755 : Type'} : (term1012 _142753 _142754 _142755) = (term1002 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8046062 _142753 _142754 _142755 f)). Qed.
Lemma lem8046064 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8046065 {_142753 _142754 _142755 : Type'} : (term1013 _142753 _142754 _142755) = (term1003 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046064 _142753 _142754) (@lem8046063 _142753 _142754 _142755)). Qed.
Lemma lem8046066 {_142753 _142754 _142755 : Type'} : (term1005 _142753 _142754 _142755) = (term1004 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046061 _142753 _142754 _142755) (@lem8046065 _142753 _142754 _142755)). Qed.
Lemma lem8046067 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046068 {_142753 _142754 _142755 : Type'} : (term1014 _142753 _142754 _142755) = (term1015 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046067) (@lem8046066 _142753 _142754 _142755)). Qed.
Lemma lem8046069 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1007 _142753 _142754 _142755 f) = (term968 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1007 _142753 _142754 _142755 f)). Qed.
Lemma lem8046070 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046071 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1016 _142753 _142754 _142755 f) = (term1017 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046070) (@lem8046069 _142753 _142754 _142755 f)). Qed.
Lemma lem8046072 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1011 _142753 _142754 _142755 f) = (term1001 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1011 _142753 _142754 _142755 f)). Qed.
Lemma lem8046073 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1018 _142753 _142754 _142755 f) = (term1019 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046071 _142753 _142754 _142755 f) (@lem8046072 _142753 _142754 _142755 f)). Qed.
Lemma lem8046074 {_142753 _142754 _142755 : Type'} : (term1020 _142753 _142754 _142755) = (term1021 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8046073 _142753 _142754 _142755 f)). Qed.
Lemma lem8046075 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8046076 {_142753 _142754 _142755 : Type'} : (term1006 _142753 _142754 _142755) = (term1022 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046075 _142753 _142754) (@lem8046074 _142753 _142754 _142755)). Qed.
Lemma lem8046077 {_142753 _142754 _142755 : Type'} : ((term1005 _142753 _142754 _142755) = (term1006 _142753 _142754 _142755)) = ((term1004 _142753 _142754 _142755) = (term1022 _142753 _142754 _142755)).
Proof. exact (MK_COMB (@lem8046068 _142753 _142754 _142755) (@lem8046076 _142753 _142754 _142755)). Qed.
Lemma lem8046078 {_142753 _142754 _142755 : Type'} : (term1004 _142753 _142754 _142755) = (term1022 _142753 _142754 _142755).
Proof. exact (EQ_MP (@lem8046077 _142753 _142754 _142755) (@lem8046055 _142753 _142754 _142755)). Qed.
Lemma lem8046080 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046081 {_142753 _142755 : Type'} (P : type64 _142753 _142755) (Q : type64 _142753 _142755) : (term676 _142753 _142755 P Q) = (term675 _142753 _142755 P Q).
Proof. exact (@lem8046080 (type56 _142753 _142755) P Q). Qed.
Lemma lem8046082 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1023 _142753 _142754 _142755 f) = (term1024 _142753 _142754 _142755 f).
Proof. exact (@lem8046081 _142753 _142755 (term967 _142753 _142754 _142755 f) (term1000 _142753 _142754 _142755 f)). Qed.
Lemma lem8046083 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1025 _142753 _142754 _142755 f g) = (term966 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1025 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046084 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1026 _142753 _142754 _142755 f) = (term967 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8046083 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046085 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8046086 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1027 _142753 _142754 _142755 f) = (term968 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046085 _142753 _142755) (@lem8046084 _142753 _142754 _142755 f)). Qed.
Lemma lem8046087 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046088 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1028 _142753 _142754 _142755 f) = (term1017 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046087) (@lem8046086 _142753 _142754 _142755 f)). Qed.
Lemma lem8046089 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1029 _142753 _142754 _142755 f g) = (term999 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1029 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046090 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1030 _142753 _142754 _142755 f) = (term1000 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8046089 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046091 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8046092 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1031 _142753 _142754 _142755 f) = (term1001 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046091 _142753 _142755) (@lem8046090 _142753 _142754 _142755 f)). Qed.
Lemma lem8046093 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1023 _142753 _142754 _142755 f) = (term1019 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046088 _142753 _142754 _142755 f) (@lem8046092 _142753 _142754 _142755 f)). Qed.
Lemma lem8046094 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046095 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1032 _142753 _142754 _142755 f) = (term1033 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046094) (@lem8046093 _142753 _142754 _142755 f)). Qed.
Lemma lem8046096 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1025 _142753 _142754 _142755 f g) = (term966 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1025 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046097 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046098 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1034 _142753 _142754 _142755 f g) = (term1035 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046097) (@lem8046096 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046099 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1029 _142753 _142754 _142755 f g) = (term999 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1029 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046100 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1036 _142753 _142754 _142755 f g) = (term1037 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046098 _142753 _142754 _142755 f g) (@lem8046099 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046101 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1038 _142753 _142754 _142755 f) = (term1039 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8046100 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046102 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8046103 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1024 _142753 _142754 _142755 f) = (term1040 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046102 _142753 _142755) (@lem8046101 _142753 _142754 _142755 f)). Qed.
Lemma lem8046104 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : ((term1023 _142753 _142754 _142755 f) = (term1024 _142753 _142754 _142755 f)) = ((term1019 _142753 _142754 _142755 f) = (term1040 _142753 _142754 _142755 f)).
Proof. exact (MK_COMB (@lem8046095 _142753 _142754 _142755 f) (@lem8046103 _142753 _142754 _142755 f)). Qed.
Lemma lem8046105 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1019 _142753 _142754 _142755 f) = (term1040 _142753 _142754 _142755 f).
Proof. exact (EQ_MP (@lem8046104 _142753 _142754 _142755 f) (@lem8046082 _142753 _142754 _142755 f)). Qed.
Lemma lem8046107 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046108 {_142753 _142754 : Type'} (P : type24 _142753 _142754) (Q : type24 _142753 _142754) : (term630 _142753 _142754 P Q) = (term629 _142753 _142754 P Q).
Proof. exact (@lem8046107 (cart _142753 _142754) P Q). Qed.
Lemma lem8046109 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1041 _142753 _142754 _142755 f g) = (term1042 _142753 _142754 _142755 f g).
Proof. exact (@lem8046108 _142753 _142754 (term965 _142753 _142754 _142755 f g) (term998 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046110 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1043 _142753 _142754 _142755 f g x) = (term964 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1043 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046111 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1044 _142753 _142754 _142755 f g) = (term965 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8046110 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046112 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8046113 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1045 _142753 _142754 _142755 f g) = (term966 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046112 _142753 _142754) (@lem8046111 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046114 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046115 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1046 _142753 _142754 _142755 f g) = (term1035 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046114) (@lem8046113 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046116 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1047 _142753 _142754 _142755 f g x) = (term997 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1047 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046117 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1048 _142753 _142754 _142755 f g) = (term998 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8046116 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046118 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8046119 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1049 _142753 _142754 _142755 f g) = (term999 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046118 _142753 _142754) (@lem8046117 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046120 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1041 _142753 _142754 _142755 f g) = (term1037 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046115 _142753 _142754 _142755 f g) (@lem8046119 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046121 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046122 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1050 _142753 _142754 _142755 f g) = (term1051 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046121) (@lem8046120 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046123 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1043 _142753 _142754 _142755 f g x) = (term964 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1043 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046124 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046125 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1052 _142753 _142754 _142755 f g x) = (term1053 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046124) (@lem8046123 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046126 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1047 _142753 _142754 _142755 f g x) = (term997 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1047 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046127 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1054 _142753 _142754 _142755 f g x) = (term1055 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046125 _142753 _142754 _142755 f g x) (@lem8046126 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046128 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1056 _142753 _142754 _142755 f g) = (term1057 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8046127 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046129 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8046130 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1042 _142753 _142754 _142755 f g) = (term1058 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046129 _142753 _142754) (@lem8046128 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046131 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term1041 _142753 _142754 _142755 f g) = (term1042 _142753 _142754 _142755 f g)) = ((term1037 _142753 _142754 _142755 f g) = (term1058 _142753 _142754 _142755 f g)).
Proof. exact (MK_COMB (@lem8046122 _142753 _142754 _142755 f g) (@lem8046130 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046132 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1037 _142753 _142754 _142755 f g) = (term1058 _142753 _142754 _142755 f g).
Proof. exact (EQ_MP (@lem8046131 _142753 _142754 _142755 f g) (@lem8046109 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046134 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046135 {_142753 _142755 : Type'} (P : type24 _142753 _142755) (Q : type24 _142753 _142755) : (term630 _142753 _142755 P Q) = (term629 _142753 _142755 P Q).
Proof. exact (@lem8046134 (cart _142753 _142755) P Q). Qed.
Lemma lem8046136 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1059 _142753 _142754 _142755 f g x) = (term1060 _142753 _142754 _142755 f g x).
Proof. exact (@lem8046135 _142753 _142755 (term963 _142753 _142754 _142755 f g x) (term996 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046137 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1061 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1061 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046138 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1062 _142753 _142754 _142755 f g x) = (term963 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8046137 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046139 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8046140 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1063 _142753 _142754 _142755 f g x) = (term964 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046139 _142753 _142755) (@lem8046138 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046141 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046142 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1064 _142753 _142754 _142755 f g x) = (term1053 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046141) (@lem8046140 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046143 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1065 _142753 _142754 _142755 f g x y) = (term995 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1065 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046144 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1066 _142753 _142754 _142755 f g x) = (term996 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8046143 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046145 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8046146 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1067 _142753 _142754 _142755 f g x) = (term997 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046145 _142753 _142755) (@lem8046144 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046147 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1059 _142753 _142754 _142755 f g x) = (term1055 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046142 _142753 _142754 _142755 f g x) (@lem8046146 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046148 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046149 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1068 _142753 _142754 _142755 f g x) = (term1069 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046148) (@lem8046147 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046150 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1061 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1061 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046151 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046152 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1070 _142753 _142754 _142755 f g x y) = (term1071 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046151) (@lem8046150 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046153 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1065 _142753 _142754 _142755 f g x y) = (term995 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1065 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046154 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1072 _142753 _142754 _142755 f g x y) = (term1073 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046152 _142753 _142754 _142755 f g x y) (@lem8046153 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046155 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1074 _142753 _142754 _142755 f g x) = (term1075 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8046154 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046156 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8046157 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1060 _142753 _142754 _142755 f g x) = (term1076 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046156 _142753 _142755) (@lem8046155 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046158 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : ((term1059 _142753 _142754 _142755 f g x) = (term1060 _142753 _142754 _142755 f g x)) = ((term1055 _142753 _142754 _142755 f g x) = (term1076 _142753 _142754 _142755 f g x)).
Proof. exact (MK_COMB (@lem8046149 _142753 _142754 _142755 f g x) (@lem8046157 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046159 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1055 _142753 _142754 _142755 f g x) = (term1076 _142753 _142754 _142755 f g x).
Proof. exact (EQ_MP (@lem8046158 _142753 _142754 _142755 f g x) (@lem8046136 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046161 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046162 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (Q : type56 _142753 _142754) : (term787 _142753 _142754 P Q) = (term786 _142753 _142754 P Q).
Proof. exact (@lem8046161 (type24 _142753 _142754) P Q). Qed.
Lemma lem8046163 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1077 _142753 _142754 _142755 f g x y) = (term1078 _142753 _142754 _142755 f g x y).
Proof. exact (@lem8046162 _142753 _142754 (term961 _142753 _142754 _142755 f g x y) (term994 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046164 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1079 _142753 _142754 _142755 f g x y t) = (term960 _142753 _142754 _142755 t f g x y).
Proof. exact (eq_refl (term1079 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8046165 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1080 _142753 _142754 _142755 f g x y) = (term961 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8046164 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8046166 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046167 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1081 _142753 _142754 _142755 f g x y) = (term962 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046166 _142753 _142754) (@lem8046165 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046168 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046169 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1082 _142753 _142754 _142755 f g x y) = (term1071 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046168) (@lem8046167 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046170 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1083 _142753 _142754 _142755 f g x y t) = (term993 _142753 _142754 _142755 f g t x y).
Proof. exact (eq_refl (term1083 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8046171 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1084 _142753 _142754 _142755 f g x y) = (term994 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8046170 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046172 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046173 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1085 _142753 _142754 _142755 f g x y) = (term995 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046172 _142753 _142754) (@lem8046171 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046174 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1077 _142753 _142754 _142755 f g x y) = (term1073 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046169 _142753 _142754 _142755 f g x y) (@lem8046173 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046175 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046176 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1086 _142753 _142754 _142755 f g x y) = (term1087 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046175) (@lem8046174 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046177 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1079 _142753 _142754 _142755 f g x y t) = (term960 _142753 _142754 _142755 t f g x y).
Proof. exact (eq_refl (term1079 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8046178 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046179 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1088 _142753 _142754 _142755 f g x y t) = (term1089 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8046178) (@lem8046177 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8046180 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1083 _142753 _142754 _142755 f g x y t) = (term993 _142753 _142754 _142755 f g t x y).
Proof. exact (eq_refl (term1083 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8046181 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1090 _142753 _142754 _142755 f g x y t) = (term1091 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8046179 _142753 _142754 _142755 t f g x y) (@lem8046180 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046182 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1092 _142753 _142754 _142755 f g x y) = (term1093 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8046181 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046183 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046184 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1078 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046183 _142753 _142754) (@lem8046182 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046185 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1077 _142753 _142754 _142755 f g x y) = (term1078 _142753 _142754 _142755 f g x y)) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)).
Proof. exact (MK_COMB (@lem8046176 _142753 _142754 _142755 f g x y) (@lem8046184 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046186 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y).
Proof. exact (EQ_MP (@lem8046185 _142753 _142754 _142755 f g x y) (@lem8046163 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046189 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1095 _142753 _142754 _142755 f g x y) = (term1095 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1095 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046190 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1095 _142753 _142754 _142755 f g x y) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)).
Proof. exact (eq_refl (term1095 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046191 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1096 _142753 _142754 _142755 f g x y) = (term1096 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1096 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046192 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1095 _142753 _142754 _142755 f g x y) = (term1095 _142753 _142754 _142755 f g x y)) = ((term1095 _142753 _142754 _142755 f g x y) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y))).
Proof. exact (MK_COMB (@lem8046191 _142753 _142754 _142755 f g x y) (@lem8046190 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046193 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1095 _142753 _142754 _142755 f g x y) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)).
Proof. exact (eq_refl (term1095 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046194 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046195 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1096 _142753 _142754 _142755 f g x y) = (term1097 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046194) (@lem8046193 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046196 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)).
Proof. exact (eq_refl ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y))). Qed.
Lemma lem8046197 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1095 _142753 _142754 _142755 f g x y) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y))) = (((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y))).
Proof. exact (MK_COMB (@lem8046195 _142753 _142754 _142755 f g x y) (@lem8046196 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046198 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1095 _142753 _142754 _142755 f g x y) = (term1095 _142753 _142754 _142755 f g x y)) = (((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y))).
Proof. exact (TRANS (@lem8046192 _142753 _142754 _142755 f g x y) (@lem8046197 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046199 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)) = ((term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y)).
Proof. exact (EQ_MP (@lem8046198 _142753 _142754 _142755 f g x y) (@lem8046189 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046200 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1073 _142753 _142754 _142755 f g x y) = (term1094 _142753 _142754 _142755 f g x y).
Proof. exact (EQ_MP (@lem8046199 _142753 _142754 _142755 f g x y) (@lem8046186 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046202 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046203 {_142753 _142755 : Type'} (P : type56 _142753 _142755) (Q : type56 _142753 _142755) : (term787 _142753 _142755 P Q) = (term786 _142753 _142755 P Q).
Proof. exact (@lem8046202 (type24 _142753 _142755) P Q). Qed.
Lemma lem8046204 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1098 _142753 _142754 _142755 f g t x y) = (term1099 _142753 _142754 _142755 f g t x y).
Proof. exact (@lem8046203 _142753 _142755 (term959 _142753 _142754 _142755 t f g x y) (term992 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046205 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1100 _142753 _142754 _142755 t f g x y t') = (term957 _142753 _142754 _142755 t t' f g x y).
Proof. exact (eq_refl (term1100 _142753 _142754 _142755 t f g x y t')). Qed.
Lemma lem8046206 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1101 _142753 _142754 _142755 t f g x y) = (term959 _142753 _142754 _142755 t f g x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8046205 _142753 _142754 _142755 t t' f g x y)). Qed.
Lemma lem8046207 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8046208 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1102 _142753 _142754 _142755 t f g x y) = (term960 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8046207 _142753 _142755) (@lem8046206 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8046209 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046210 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1103 _142753 _142754 _142755 t f g x y) = (term1089 _142753 _142754 _142755 t f g x y).
Proof. exact (MK_COMB (@lem8046209) (@lem8046208 _142753 _142754 _142755 t f g x y)). Qed.
Lemma lem8046211 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1104 _142753 _142754 _142755 f g t x y t') = (term990 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1104 _142753 _142754 _142755 f g t x y t')). Qed.
Lemma lem8046212 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1105 _142753 _142754 _142755 f g t x y) = (term992 _142753 _142754 _142755 f g t x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8046211 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8046213 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8046214 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1106 _142753 _142754 _142755 f g t x y) = (term993 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8046213 _142753 _142755) (@lem8046212 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046215 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1098 _142753 _142754 _142755 f g t x y) = (term1091 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8046210 _142753 _142754 _142755 t f g x y) (@lem8046214 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046216 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046217 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1107 _142753 _142754 _142755 f g t x y) = (term1108 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8046216) (@lem8046215 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046218 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1100 _142753 _142754 _142755 t f g x y t') = (term957 _142753 _142754 _142755 t t' f g x y).
Proof. exact (eq_refl (term1100 _142753 _142754 _142755 t f g x y t')). Qed.
Lemma lem8046219 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046220 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1109 _142753 _142754 _142755 t f g x y t') = (term1110 _142753 _142754 _142755 t t' f g x y).
Proof. exact (MK_COMB (@lem8046219) (@lem8046218 _142753 _142754 _142755 t t' f g x y)). Qed.
Lemma lem8046221 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1104 _142753 _142754 _142755 f g t x y t') = (term990 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1104 _142753 _142754 _142755 f g t x y t')). Qed.
Lemma lem8046222 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1111 _142753 _142754 _142755 f g t x y t') = (term1112 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8046220 _142753 _142754 _142755 t t' f g x y) (@lem8046221 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8046223 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1113 _142753 _142754 _142755 f g t x y) = (term1114 _142753 _142754 _142755 f g t x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8046222 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8046224 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8046225 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1099 _142753 _142754 _142755 f g t x y) = (term1115 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8046224 _142753 _142755) (@lem8046223 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046226 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1098 _142753 _142754 _142755 f g t x y) = (term1099 _142753 _142754 _142755 f g t x y)) = ((term1091 _142753 _142754 _142755 f g t x y) = (term1115 _142753 _142754 _142755 f g t x y)).
Proof. exact (MK_COMB (@lem8046217 _142753 _142754 _142755 f g t x y) (@lem8046225 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046227 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1091 _142753 _142754 _142755 f g t x y) = (term1115 _142753 _142754 _142755 f g t x y).
Proof. exact (EQ_MP (@lem8046226 _142753 _142754 _142755 f g t x y) (@lem8046204 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046228 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1093 _142753 _142754 _142755 f g x y) = (term1116 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8046227 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8046229 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8046230 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1094 _142753 _142754 _142755 f g x y) = (term1117 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8046229 _142753 _142754) (@lem8046228 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046231 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1073 _142753 _142754 _142755 f g x y) = (term1117 _142753 _142754 _142755 f g x y).
Proof. exact (TRANS (@lem8046200 _142753 _142754 _142755 f g x y) (@lem8046230 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046232 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1075 _142753 _142754 _142755 f g x) = (term1118 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8046231 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8046233 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8046234 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1076 _142753 _142754 _142755 f g x) = (term1119 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8046233 _142753 _142755) (@lem8046232 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046235 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1055 _142753 _142754 _142755 f g x) = (term1119 _142753 _142754 _142755 f g x).
Proof. exact (TRANS (@lem8046159 _142753 _142754 _142755 f g x) (@lem8046234 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046236 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1057 _142753 _142754 _142755 f g) = (term1120 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8046235 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8046237 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8046238 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1058 _142753 _142754 _142755 f g) = (term1121 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8046237 _142753 _142754) (@lem8046236 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046239 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1037 _142753 _142754 _142755 f g) = (term1121 _142753 _142754 _142755 f g).
Proof. exact (TRANS (@lem8046132 _142753 _142754 _142755 f g) (@lem8046238 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046240 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1039 _142753 _142754 _142755 f) = (term1122 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8046239 _142753 _142754 _142755 f g)). Qed.
Lemma lem8046241 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8046242 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1040 _142753 _142754 _142755 f) = (term1123 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8046241 _142753 _142755) (@lem8046240 _142753 _142754 _142755 f)). Qed.
Lemma lem8046243 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1019 _142753 _142754 _142755 f) = (term1123 _142753 _142754 _142755 f).
Proof. exact (TRANS (@lem8046105 _142753 _142754 _142755 f) (@lem8046242 _142753 _142754 _142755 f)). Qed.
Lemma lem8046244 {_142753 _142754 _142755 : Type'} : (term1021 _142753 _142754 _142755) = (term1124 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8046243 _142753 _142754 _142755 f)). Qed.
Lemma lem8046245 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8046246 {_142753 _142754 _142755 : Type'} : (term1022 _142753 _142754 _142755) = (term1125 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046245 _142753 _142754) (@lem8046244 _142753 _142754 _142755)). Qed.
Lemma lem8046247 {_142753 _142754 _142755 : Type'} : (term1004 _142753 _142754 _142755) = (term1125 _142753 _142754 _142755).
Proof. exact (TRANS (@lem8046078 _142753 _142754 _142755) (@lem8046246 _142753 _142754 _142755)). Qed.
Lemma lem8046248 {_142753 _142754 _142755 : Type'} : (term718 _142753 _142754 _142755) = (term1125 _142753 _142754 _142755).
Proof. exact (TRANS (@lem8046051 _142753 _142754 _142755) (@lem8046247 _142753 _142754 _142755)). Qed.
Lemma lem8046249 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046250 {_142753 _142754 _142755 : Type'} : (term719 _142753 _142754 _142755) = (term1126 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8046249) (@lem8046248 _142753 _142754 _142755)). Qed.
Lemma lem8046252 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8046253 {_142795 _142797 : Type'} (P : Prop) (Q : type56 _142795 _142797) : (term916 _142795 _142797 P Q) = (term917 _142795 _142797 P Q).
Proof. exact (@lem8046252 (type24 _142795 _142797) P Q). Qed.
Lemma lem8046254 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1127 _142795 _142796 _142797 s x f y) = (term1128 _142795 _142796 _142797 s x f y).
Proof. exact (@lem8046253 _142795 _142797 (s x) (term362 _142795 _142797 f y)). Qed.
Lemma lem8046255 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term430 _142795 _142797 f y t) = (term360 _142795 _142797 f t y).
Proof. exact (eq_refl (term430 _142795 _142797 f y t)). Qed.
Lemma lem8046256 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term903 _142795 _142797 f y) = (term362 _142795 _142797 f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046255 _142795 _142797 f t y)). Qed.
Lemma lem8046257 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046258 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term904 _142795 _142797 f y) = (term363 _142795 _142797 f y).
Proof. exact (MK_COMB (@lem8046257 _142795 _142797) (@lem8046256 _142795 _142797 f y)). Qed.
Lemma lem8046259 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term371 _142795 _142796 s x) = (term371 _142795 _142796 s x).
Proof. exact (eq_refl (term371 _142795 _142796 s x)). Qed.
Lemma lem8046260 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1127 _142795 _142796 _142797 s x f y) = (term387 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046259 _142795 _142796 s x) (@lem8046258 _142795 _142797 f y)). Qed.
Lemma lem8046261 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046262 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1129 _142795 _142796 _142797 s x f y) = (term388 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046261) (@lem8046260 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046263 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term430 _142795 _142797 f y t) = (term360 _142795 _142797 f t y).
Proof. exact (eq_refl (term430 _142795 _142797 f y t)). Qed.
Lemma lem8046264 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term371 _142795 _142796 s x) = (term371 _142795 _142796 s x).
Proof. exact (eq_refl (term371 _142795 _142796 s x)). Qed.
Lemma lem8046265 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1130 _142795 _142796 _142797 s x f y t) = (term1131 _142795 _142796 _142797 s x f t y).
Proof. exact (MK_COMB (@lem8046264 _142795 _142796 s x) (@lem8046263 _142795 _142797 f t y)). Qed.
Lemma lem8046266 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1132 _142795 _142796 _142797 s x f y) = (term1133 _142795 _142796 _142797 s x f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046265 _142795 _142796 _142797 s x f t y)). Qed.
Lemma lem8046267 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046268 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1128 _142795 _142796 _142797 s x f y) = (term1134 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046267 _142795 _142797) (@lem8046266 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046269 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : ((term1127 _142795 _142796 _142797 s x f y) = (term1128 _142795 _142796 _142797 s x f y)) = ((term387 _142795 _142796 _142797 s x f y) = (term1134 _142795 _142796 _142797 s x f y)).
Proof. exact (MK_COMB (@lem8046262 _142795 _142796 _142797 s x f y) (@lem8046268 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046270 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term387 _142795 _142796 _142797 s x f y) = (term1134 _142795 _142796 _142797 s x f y).
Proof. exact (EQ_MP (@lem8046269 _142795 _142796 _142797 s x f y) (@lem8046254 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046272 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term526 _142795 _142796 _142797 s x f y) = (term1135 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046271) (@lem8046270 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046273 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term521 _142795 _142796 _142797 f s x y) = (term521 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term521 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046274 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term528 _142795 _142796 _142797 f s x y) = (term1136 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046272 _142795 _142796 _142797 s x f y) (@lem8046273 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046276 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8046277 {_142795 _142797 : Type'} (P : type56 _142795 _142797) (Q : Prop) : (term899 _142795 _142797 P Q) = (term900 _142795 _142797 P Q).
Proof. exact (@lem8046276 (type24 _142795 _142797) P Q). Qed.
Lemma lem8046278 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1137 _142795 _142796 _142797 f s x y) = (term1138 _142795 _142796 _142797 f s x y).
Proof. exact (@lem8046277 _142795 _142797 (term1133 _142795 _142796 _142797 s x f y) (term521 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046279 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1139 _142795 _142796 _142797 s x f y t) = (term1131 _142795 _142796 _142797 s x f t y).
Proof. exact (eq_refl (term1139 _142795 _142796 _142797 s x f y t)). Qed.
Lemma lem8046280 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1140 _142795 _142796 _142797 s x f y) = (term1133 _142795 _142796 _142797 s x f y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046279 _142795 _142796 _142797 s x f t y)). Qed.
Lemma lem8046281 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046282 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1141 _142795 _142796 _142797 s x f y) = (term1134 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046281 _142795 _142797) (@lem8046280 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046283 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046284 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term1142 _142795 _142796 _142797 s x f y) = (term1135 _142795 _142796 _142797 s x f y).
Proof. exact (MK_COMB (@lem8046283) (@lem8046282 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046285 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term521 _142795 _142796 _142797 f s x y) = (term521 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term521 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046286 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1137 _142795 _142796 _142797 f s x y) = (term1136 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046284 _142795 _142796 _142797 s x f y) (@lem8046285 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046288 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1143 _142795 _142796 _142797 f s x y) = (term1144 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046287) (@lem8046286 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046289 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1139 _142795 _142796 _142797 s x f y t) = (term1131 _142795 _142796 _142797 s x f t y).
Proof. exact (eq_refl (term1139 _142795 _142796 _142797 s x f y t)). Qed.
Lemma lem8046290 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046291 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1145 _142795 _142796 _142797 s x f y t) = (term1146 _142795 _142796 _142797 s x f t y).
Proof. exact (MK_COMB (@lem8046290) (@lem8046289 _142795 _142796 _142797 s x f t y)). Qed.
Lemma lem8046292 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term521 _142795 _142796 _142797 f s x y) = (term521 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term521 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046293 {_142795 _142796 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1147 _142795 _142796 _142797 t f s x y) = (term1148 _142795 _142796 _142797 t f s x y).
Proof. exact (MK_COMB (@lem8046291 _142795 _142796 _142797 s x f t y) (@lem8046292 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046294 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1149 _142795 _142796 _142797 f s x y) = (term1150 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046293 _142795 _142796 _142797 t f s x y)). Qed.
Lemma lem8046295 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046296 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1138 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046295 _142795 _142797) (@lem8046294 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046297 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term1137 _142795 _142796 _142797 f s x y) = (term1138 _142795 _142796 _142797 f s x y)) = ((term1136 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y)).
Proof. exact (MK_COMB (@lem8046288 _142795 _142796 _142797 f s x y) (@lem8046296 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046298 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1136 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (EQ_MP (@lem8046297 _142795 _142796 _142797 f s x y) (@lem8046278 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046299 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term528 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (TRANS (@lem8046274 _142795 _142796 _142797 f s x y) (@lem8046298 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046300 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term722 _142795 _142796 _142797 f s x) = (term1152 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046299 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046301 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046302 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term733 _142795 _142796 _142797 f s x) = (term1153 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046301 _142795 _142797) (@lem8046300 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046303 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term744 _142795 _142796 _142797 f s) = (term1154 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046302 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046304 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046305 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term755 _142795 _142796 _142797 f s) = (term1155 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046304 _142795 _142796) (@lem8046303 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046306 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term766 _142795 _142796 _142797 s) = (term1156 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046305 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046307 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046308 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term777 _142795 _142796 _142797 s) = (term1157 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046307 _142795 _142797) (@lem8046306 _142795 _142796 _142797 s)). Qed.
Lemma lem8046309 {_142795 _142796 _142797 : Type'} : (term790 _142795 _142796 _142797) = (term1158 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046308 _142795 _142796 _142797 s)). Qed.
Lemma lem8046310 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046311 {_142795 _142796 _142797 : Type'} : (term801 _142795 _142796 _142797) = (term1159 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046310 _142795 _142796) (@lem8046309 _142795 _142796 _142797)). Qed.
Lemma lem8046312 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046313 {_142795 _142796 _142797 : Type'} : (term803 _142795 _142796 _142797) = (term1160 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046312) (@lem8046311 _142795 _142796 _142797)). Qed.
Lemma lem8046315 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8046316 {_142795 _142797 : Type'} (P : Prop) (Q : type56 _142795 _142797) : (term916 _142795 _142797 P Q) = (term917 _142795 _142797 P Q).
Proof. exact (@lem8046315 (type24 _142795 _142797) P Q). Qed.
Lemma lem8046317 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1161 _142795 _142796 _142797 f s x y) = (term1162 _142795 _142796 _142797 f s x y).
Proof. exact (@lem8046316 _142795 _142797 (term509 _142795 _142796 _142797 s x f y) (term390 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046318 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term517 _142795 _142796 _142797 f s x y t) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term517 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046319 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1163 _142795 _142796 _142797 f s x y) = (term390 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046318 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046320 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046321 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1164 _142795 _142796 _142797 f s x y) = (term391 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046320 _142795 _142797) (@lem8046319 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046322 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term523 _142795 _142796 _142797 s x f y) = (term523 _142795 _142796 _142797 s x f y).
Proof. exact (eq_refl (term523 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046323 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1161 _142795 _142796 _142797 f s x y) = (term525 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046322 _142795 _142796 _142797 s x f y) (@lem8046321 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046325 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1165 _142795 _142796 _142797 f s x y) = (term1166 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046324) (@lem8046323 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046326 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term517 _142795 _142796 _142797 f s x y t) = (term389 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term517 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046327 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x : cart _142795 _142796) (f : type56 _142795 _142797) (y : cart _142795 _142797) : (term523 _142795 _142796 _142797 s x f y) = (term523 _142795 _142796 _142797 s x f y).
Proof. exact (eq_refl (term523 _142795 _142796 _142797 s x f y)). Qed.
Lemma lem8046328 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1167 _142795 _142796 _142797 f s x y t) = (term1168 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8046327 _142795 _142796 _142797 s x f y) (@lem8046326 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046329 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1169 _142795 _142796 _142797 f s x y) = (term1170 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046328 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046330 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046331 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1162 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046330 _142795 _142797) (@lem8046329 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046332 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term1161 _142795 _142796 _142797 f s x y) = (term1162 _142795 _142796 _142797 f s x y)) = ((term525 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y)).
Proof. exact (MK_COMB (@lem8046325 _142795 _142796 _142797 f s x y) (@lem8046331 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046333 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term525 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y).
Proof. exact (EQ_MP (@lem8046332 _142795 _142796 _142797 f s x y) (@lem8046317 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046334 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term723 _142795 _142796 _142797 f s x) = (term1172 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046333 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046335 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046336 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term738 _142795 _142796 _142797 f s x) = (term1173 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046335 _142795 _142797) (@lem8046334 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046337 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term745 _142795 _142796 _142797 f s) = (term1174 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046336 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046338 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046339 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term760 _142795 _142796 _142797 f s) = (term1175 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046338 _142795 _142796) (@lem8046337 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046340 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term767 _142795 _142796 _142797 s) = (term1176 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046339 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046341 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046342 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term782 _142795 _142796 _142797 s) = (term1177 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046341 _142795 _142797) (@lem8046340 _142795 _142796 _142797 s)). Qed.
Lemma lem8046343 {_142795 _142796 _142797 : Type'} : (term791 _142795 _142796 _142797) = (term1178 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046342 _142795 _142796 _142797 s)). Qed.
Lemma lem8046344 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046345 {_142795 _142796 _142797 : Type'} : (term806 _142795 _142796 _142797) = (term1179 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046344 _142795 _142796) (@lem8046343 _142795 _142796 _142797)). Qed.
Lemma lem8046346 {_142795 _142796 _142797 : Type'} : (term807 _142795 _142796 _142797) = (term1180 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046313 _142795 _142796 _142797) (@lem8046345 _142795 _142796 _142797)). Qed.
Lemma lem8046348 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046349 {_142795 _142796 : Type'} (P : type56 _142795 _142796) (Q : type56 _142795 _142796) : (term787 _142795 _142796 P Q) = (term786 _142795 _142796 P Q).
Proof. exact (@lem8046348 (type24 _142795 _142796) P Q). Qed.
Lemma lem8046350 {_142795 _142796 _142797 : Type'} : (term1181 _142795 _142796 _142797) = (term1182 _142795 _142796 _142797).
Proof. exact (@lem8046349 _142795 _142796 (term1158 _142795 _142796 _142797) (term1178 _142795 _142796 _142797)). Qed.
Lemma lem8046351 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1183 _142795 _142796 _142797 s) = (term1157 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1183 _142795 _142796 _142797 s)). Qed.
Lemma lem8046352 {_142795 _142796 _142797 : Type'} : (term1184 _142795 _142796 _142797) = (term1158 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046351 _142795 _142796 _142797 s)). Qed.
Lemma lem8046353 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046354 {_142795 _142796 _142797 : Type'} : (term1185 _142795 _142796 _142797) = (term1159 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046353 _142795 _142796) (@lem8046352 _142795 _142796 _142797)). Qed.
Lemma lem8046355 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046356 {_142795 _142796 _142797 : Type'} : (term1186 _142795 _142796 _142797) = (term1160 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046355) (@lem8046354 _142795 _142796 _142797)). Qed.
Lemma lem8046357 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1187 _142795 _142796 _142797 s) = (term1177 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1187 _142795 _142796 _142797 s)). Qed.
Lemma lem8046358 {_142795 _142796 _142797 : Type'} : (term1188 _142795 _142796 _142797) = (term1178 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046357 _142795 _142796 _142797 s)). Qed.
Lemma lem8046359 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046360 {_142795 _142796 _142797 : Type'} : (term1189 _142795 _142796 _142797) = (term1179 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046359 _142795 _142796) (@lem8046358 _142795 _142796 _142797)). Qed.
Lemma lem8046361 {_142795 _142796 _142797 : Type'} : (term1181 _142795 _142796 _142797) = (term1180 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046356 _142795 _142796 _142797) (@lem8046360 _142795 _142796 _142797)). Qed.
Lemma lem8046362 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046363 {_142795 _142796 _142797 : Type'} : (term1190 _142795 _142796 _142797) = (term1191 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046362) (@lem8046361 _142795 _142796 _142797)). Qed.
Lemma lem8046364 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1183 _142795 _142796 _142797 s) = (term1157 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1183 _142795 _142796 _142797 s)). Qed.
Lemma lem8046365 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046366 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1192 _142795 _142796 _142797 s) = (term1193 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046365) (@lem8046364 _142795 _142796 _142797 s)). Qed.
Lemma lem8046367 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1187 _142795 _142796 _142797 s) = (term1177 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1187 _142795 _142796 _142797 s)). Qed.
Lemma lem8046368 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1194 _142795 _142796 _142797 s) = (term1195 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046366 _142795 _142796 _142797 s) (@lem8046367 _142795 _142796 _142797 s)). Qed.
Lemma lem8046369 {_142795 _142796 _142797 : Type'} : (term1196 _142795 _142796 _142797) = (term1197 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046368 _142795 _142796 _142797 s)). Qed.
Lemma lem8046370 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046371 {_142795 _142796 _142797 : Type'} : (term1182 _142795 _142796 _142797) = (term1198 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046370 _142795 _142796) (@lem8046369 _142795 _142796 _142797)). Qed.
Lemma lem8046372 {_142795 _142796 _142797 : Type'} : ((term1181 _142795 _142796 _142797) = (term1182 _142795 _142796 _142797)) = ((term1180 _142795 _142796 _142797) = (term1198 _142795 _142796 _142797)).
Proof. exact (MK_COMB (@lem8046363 _142795 _142796 _142797) (@lem8046371 _142795 _142796 _142797)). Qed.
Lemma lem8046373 {_142795 _142796 _142797 : Type'} : (term1180 _142795 _142796 _142797) = (term1198 _142795 _142796 _142797).
Proof. exact (EQ_MP (@lem8046372 _142795 _142796 _142797) (@lem8046350 _142795 _142796 _142797)). Qed.
Lemma lem8046375 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046376 {_142795 _142797 : Type'} (P : type64 _142795 _142797) (Q : type64 _142795 _142797) : (term676 _142795 _142797 P Q) = (term675 _142795 _142797 P Q).
Proof. exact (@lem8046375 (type56 _142795 _142797) P Q). Qed.
Lemma lem8046377 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1199 _142795 _142796 _142797 s) = (term1200 _142795 _142796 _142797 s).
Proof. exact (@lem8046376 _142795 _142797 (term1156 _142795 _142796 _142797 s) (term1176 _142795 _142796 _142797 s)). Qed.
Lemma lem8046378 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1201 _142795 _142796 _142797 s f) = (term1155 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1201 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046379 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1202 _142795 _142796 _142797 s) = (term1156 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046378 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046380 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046381 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1203 _142795 _142796 _142797 s) = (term1157 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046380 _142795 _142797) (@lem8046379 _142795 _142796 _142797 s)). Qed.
Lemma lem8046382 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046383 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1204 _142795 _142796 _142797 s) = (term1193 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046382) (@lem8046381 _142795 _142796 _142797 s)). Qed.
Lemma lem8046384 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1205 _142795 _142796 _142797 s f) = (term1175 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1205 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046385 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1206 _142795 _142796 _142797 s) = (term1176 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046384 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046386 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046387 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1207 _142795 _142796 _142797 s) = (term1177 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046386 _142795 _142797) (@lem8046385 _142795 _142796 _142797 s)). Qed.
Lemma lem8046388 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1199 _142795 _142796 _142797 s) = (term1195 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046383 _142795 _142796 _142797 s) (@lem8046387 _142795 _142796 _142797 s)). Qed.
Lemma lem8046389 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046390 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1208 _142795 _142796 _142797 s) = (term1209 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046389) (@lem8046388 _142795 _142796 _142797 s)). Qed.
Lemma lem8046391 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1201 _142795 _142796 _142797 s f) = (term1155 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1201 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046392 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046393 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1210 _142795 _142796 _142797 s f) = (term1211 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046392) (@lem8046391 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046394 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1205 _142795 _142796 _142797 s f) = (term1175 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1205 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046395 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1212 _142795 _142796 _142797 s f) = (term1213 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046393 _142795 _142796 _142797 f s) (@lem8046394 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046396 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1214 _142795 _142796 _142797 s) = (term1215 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046395 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046397 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046398 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1200 _142795 _142796 _142797 s) = (term1216 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046397 _142795 _142797) (@lem8046396 _142795 _142796 _142797 s)). Qed.
Lemma lem8046399 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : ((term1199 _142795 _142796 _142797 s) = (term1200 _142795 _142796 _142797 s)) = ((term1195 _142795 _142796 _142797 s) = (term1216 _142795 _142796 _142797 s)).
Proof. exact (MK_COMB (@lem8046390 _142795 _142796 _142797 s) (@lem8046398 _142795 _142796 _142797 s)). Qed.
Lemma lem8046400 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1195 _142795 _142796 _142797 s) = (term1216 _142795 _142796 _142797 s).
Proof. exact (EQ_MP (@lem8046399 _142795 _142796 _142797 s) (@lem8046377 _142795 _142796 _142797 s)). Qed.
Lemma lem8046402 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046403 {_142795 _142796 : Type'} (P : type24 _142795 _142796) (Q : type24 _142795 _142796) : (term630 _142795 _142796 P Q) = (term629 _142795 _142796 P Q).
Proof. exact (@lem8046402 (cart _142795 _142796) P Q). Qed.
Lemma lem8046404 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1217 _142795 _142796 _142797 f s) = (term1218 _142795 _142796 _142797 f s).
Proof. exact (@lem8046403 _142795 _142796 (term1154 _142795 _142796 _142797 f s) (term1174 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046405 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1219 _142795 _142796 _142797 f s x) = (term1153 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1219 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046406 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1220 _142795 _142796 _142797 f s) = (term1154 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046405 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046407 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046408 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1221 _142795 _142796 _142797 f s) = (term1155 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046407 _142795 _142796) (@lem8046406 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046409 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046410 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1222 _142795 _142796 _142797 f s) = (term1211 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046409) (@lem8046408 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046411 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1223 _142795 _142796 _142797 f s x) = (term1173 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1223 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046412 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1224 _142795 _142796 _142797 f s) = (term1174 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046411 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046413 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046414 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1225 _142795 _142796 _142797 f s) = (term1175 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046413 _142795 _142796) (@lem8046412 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046415 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1217 _142795 _142796 _142797 f s) = (term1213 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046410 _142795 _142796 _142797 f s) (@lem8046414 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046416 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046417 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1226 _142795 _142796 _142797 f s) = (term1227 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046416) (@lem8046415 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046418 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1219 _142795 _142796 _142797 f s x) = (term1153 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1219 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046419 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046420 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1228 _142795 _142796 _142797 f s x) = (term1229 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046419) (@lem8046418 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046421 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1223 _142795 _142796 _142797 f s x) = (term1173 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1223 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046422 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1230 _142795 _142796 _142797 f s x) = (term1231 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046420 _142795 _142796 _142797 f s x) (@lem8046421 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046423 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1232 _142795 _142796 _142797 f s) = (term1233 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046422 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046424 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046425 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1218 _142795 _142796 _142797 f s) = (term1234 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046424 _142795 _142796) (@lem8046423 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046426 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term1217 _142795 _142796 _142797 f s) = (term1218 _142795 _142796 _142797 f s)) = ((term1213 _142795 _142796 _142797 f s) = (term1234 _142795 _142796 _142797 f s)).
Proof. exact (MK_COMB (@lem8046417 _142795 _142796 _142797 f s) (@lem8046425 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046427 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1213 _142795 _142796 _142797 f s) = (term1234 _142795 _142796 _142797 f s).
Proof. exact (EQ_MP (@lem8046426 _142795 _142796 _142797 f s) (@lem8046404 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046429 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046430 {_142795 _142797 : Type'} (P : type24 _142795 _142797) (Q : type24 _142795 _142797) : (term630 _142795 _142797 P Q) = (term629 _142795 _142797 P Q).
Proof. exact (@lem8046429 (cart _142795 _142797) P Q). Qed.
Lemma lem8046431 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1235 _142795 _142796 _142797 f s x) = (term1236 _142795 _142796 _142797 f s x).
Proof. exact (@lem8046430 _142795 _142797 (term1152 _142795 _142796 _142797 f s x) (term1172 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046432 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1237 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1237 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046433 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1238 _142795 _142796 _142797 f s x) = (term1152 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046432 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046434 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046435 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1239 _142795 _142796 _142797 f s x) = (term1153 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046434 _142795 _142797) (@lem8046433 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046436 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046437 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1240 _142795 _142796 _142797 f s x) = (term1229 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046436) (@lem8046435 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046438 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1241 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1241 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046439 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1242 _142795 _142796 _142797 f s x) = (term1172 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046438 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046440 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046441 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1243 _142795 _142796 _142797 f s x) = (term1173 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046440 _142795 _142797) (@lem8046439 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046442 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1235 _142795 _142796 _142797 f s x) = (term1231 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046437 _142795 _142796 _142797 f s x) (@lem8046441 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046443 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046444 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1244 _142795 _142796 _142797 f s x) = (term1245 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046443) (@lem8046442 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046445 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1237 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1237 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046446 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046447 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1246 _142795 _142796 _142797 f s x y) = (term1247 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046446) (@lem8046445 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046448 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1241 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1241 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046449 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1248 _142795 _142796 _142797 f s x y) = (term1249 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046447 _142795 _142796 _142797 f s x y) (@lem8046448 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046450 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1250 _142795 _142796 _142797 f s x) = (term1251 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046449 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046451 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046452 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1236 _142795 _142796 _142797 f s x) = (term1252 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046451 _142795 _142797) (@lem8046450 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046453 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : ((term1235 _142795 _142796 _142797 f s x) = (term1236 _142795 _142796 _142797 f s x)) = ((term1231 _142795 _142796 _142797 f s x) = (term1252 _142795 _142796 _142797 f s x)).
Proof. exact (MK_COMB (@lem8046444 _142795 _142796 _142797 f s x) (@lem8046452 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046454 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1231 _142795 _142796 _142797 f s x) = (term1252 _142795 _142796 _142797 f s x).
Proof. exact (EQ_MP (@lem8046453 _142795 _142796 _142797 f s x) (@lem8046431 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046456 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046457 {_142795 _142797 : Type'} (P : type56 _142795 _142797) (Q : type56 _142795 _142797) : (term787 _142795 _142797 P Q) = (term786 _142795 _142797 P Q).
Proof. exact (@lem8046456 (type24 _142795 _142797) P Q). Qed.
Lemma lem8046458 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1253 _142795 _142796 _142797 f s x y) = (term1254 _142795 _142796 _142797 f s x y).
Proof. exact (@lem8046457 _142795 _142797 (term1150 _142795 _142796 _142797 f s x y) (term1170 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046459 {_142795 _142796 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1255 _142795 _142796 _142797 f s x y t) = (term1148 _142795 _142796 _142797 t f s x y).
Proof. exact (eq_refl (term1255 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046460 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1256 _142795 _142796 _142797 f s x y) = (term1150 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046459 _142795 _142796 _142797 t f s x y)). Qed.
Lemma lem8046461 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046462 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1257 _142795 _142796 _142797 f s x y) = (term1151 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046461 _142795 _142797) (@lem8046460 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046463 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046464 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1258 _142795 _142796 _142797 f s x y) = (term1247 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046463) (@lem8046462 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046465 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1259 _142795 _142796 _142797 f s x y t) = (term1168 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1259 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046466 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1260 _142795 _142796 _142797 f s x y) = (term1170 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046465 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046467 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046468 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1261 _142795 _142796 _142797 f s x y) = (term1171 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046467 _142795 _142797) (@lem8046466 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046469 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1253 _142795 _142796 _142797 f s x y) = (term1249 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046464 _142795 _142796 _142797 f s x y) (@lem8046468 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046470 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046471 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1262 _142795 _142796 _142797 f s x y) = (term1263 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046470) (@lem8046469 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046472 {_142795 _142796 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1255 _142795 _142796 _142797 f s x y t) = (term1148 _142795 _142796 _142797 t f s x y).
Proof. exact (eq_refl (term1255 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046473 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046474 {_142795 _142796 _142797 : Type'} (t : type24 _142795 _142797) (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1264 _142795 _142796 _142797 f s x y t) = (term1265 _142795 _142796 _142797 t f s x y).
Proof. exact (MK_COMB (@lem8046473) (@lem8046472 _142795 _142796 _142797 t f s x y)). Qed.
Lemma lem8046475 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1259 _142795 _142796 _142797 f s x y t) = (term1168 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1259 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046476 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1266 _142795 _142796 _142797 f s x y t) = (term1267 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8046474 _142795 _142796 _142797 t f s x y) (@lem8046475 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046477 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1268 _142795 _142796 _142797 f s x y) = (term1269 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046476 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046478 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046479 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1254 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046478 _142795 _142797) (@lem8046477 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046480 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term1253 _142795 _142796 _142797 f s x y) = (term1254 _142795 _142796 _142797 f s x y)) = ((term1249 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y)).
Proof. exact (MK_COMB (@lem8046471 _142795 _142796 _142797 f s x y) (@lem8046479 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046481 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1249 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y).
Proof. exact (EQ_MP (@lem8046480 _142795 _142796 _142797 f s x y) (@lem8046458 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046482 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1251 _142795 _142796 _142797 f s x) = (term1271 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046481 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046483 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046484 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1252 _142795 _142796 _142797 f s x) = (term1272 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046483 _142795 _142797) (@lem8046482 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046485 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1231 _142795 _142796 _142797 f s x) = (term1272 _142795 _142796 _142797 f s x).
Proof. exact (TRANS (@lem8046454 _142795 _142796 _142797 f s x) (@lem8046484 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046486 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1233 _142795 _142796 _142797 f s) = (term1273 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046485 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046487 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046488 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1234 _142795 _142796 _142797 f s) = (term1274 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046487 _142795 _142796) (@lem8046486 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046489 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1213 _142795 _142796 _142797 f s) = (term1274 _142795 _142796 _142797 f s).
Proof. exact (TRANS (@lem8046427 _142795 _142796 _142797 f s) (@lem8046488 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046490 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1215 _142795 _142796 _142797 s) = (term1275 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046489 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046491 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046492 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1216 _142795 _142796 _142797 s) = (term1276 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046491 _142795 _142797) (@lem8046490 _142795 _142796 _142797 s)). Qed.
Lemma lem8046493 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1195 _142795 _142796 _142797 s) = (term1276 _142795 _142796 _142797 s).
Proof. exact (TRANS (@lem8046400 _142795 _142796 _142797 s) (@lem8046492 _142795 _142796 _142797 s)). Qed.
Lemma lem8046494 {_142795 _142796 _142797 : Type'} : (term1197 _142795 _142796 _142797) = (term1277 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046493 _142795 _142796 _142797 s)). Qed.
Lemma lem8046495 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046496 {_142795 _142796 _142797 : Type'} : (term1198 _142795 _142796 _142797) = (term1278 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046495 _142795 _142796) (@lem8046494 _142795 _142796 _142797)). Qed.
Lemma lem8046497 {_142795 _142796 _142797 : Type'} : (term1180 _142795 _142796 _142797) = (term1278 _142795 _142796 _142797).
Proof. exact (TRANS (@lem8046373 _142795 _142796 _142797) (@lem8046496 _142795 _142796 _142797)). Qed.
Lemma lem8046498 {_142795 _142796 _142797 : Type'} : (term807 _142795 _142796 _142797) = (term1278 _142795 _142796 _142797).
Proof. exact (TRANS (@lem8046346 _142795 _142796 _142797) (@lem8046497 _142795 _142796 _142797)). Qed.
Lemma lem8046499 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046500 {_142795 _142796 _142797 : Type'} : (term808 _142795 _142796 _142797) = (term1279 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046499) (@lem8046498 _142795 _142796 _142797)). Qed.
Lemma lem8046502 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8046503 {_142835 _142836 : Type'} (P : type56 _142835 _142836) (Q : Prop) : (term899 _142835 _142836 P Q) = (term900 _142835 _142836 P Q).
Proof. exact (@lem8046502 (type24 _142835 _142836) P Q). Qed.
Lemma lem8046504 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1280 _142835 _142836 _142837 f x t y) = (term1281 _142835 _142836 _142837 f x t y).
Proof. exact (@lem8046503 _142835 _142836 (term362 _142835 _142836 f x) (t y)). Qed.
Lemma lem8046505 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term430 _142835 _142836 f x t) = (term360 _142835 _142836 f t x).
Proof. exact (eq_refl (term430 _142835 _142836 f x t)). Qed.
Lemma lem8046506 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term903 _142835 _142836 f x) = (term362 _142835 _142836 f x).
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8046505 _142835 _142836 f t x)). Qed.
Lemma lem8046507 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046508 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term904 _142835 _142836 f x) = (term363 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8046507 _142835 _142836) (@lem8046506 _142835 _142836 f x)). Qed.
Lemma lem8046509 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046510 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) : (term905 _142835 _142836 f x) = (term365 _142835 _142836 f x).
Proof. exact (MK_COMB (@lem8046509) (@lem8046508 _142835 _142836 f x)). Qed.
Lemma lem8046511 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (t y) = (t y).
Proof. exact (eq_refl (t y)). Qed.
Lemma lem8046512 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1280 _142835 _142836 _142837 f x t y) = (term401 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046510 _142835 _142836 f x) (@lem8046511 _142835 _142837 t y)). Qed.
Lemma lem8046513 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046514 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1282 _142835 _142836 _142837 f x t y) = (term402 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046513) (@lem8046512 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046515 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term430 _142835 _142836 f x t) = (term360 _142835 _142836 f t x).
Proof. exact (eq_refl (term430 _142835 _142836 f x t)). Qed.
Lemma lem8046516 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046517 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) : (term907 _142835 _142836 f x t) = (term908 _142835 _142836 f t x).
Proof. exact (MK_COMB (@lem8046516) (@lem8046515 _142835 _142836 f t x)). Qed.
Lemma lem8046518 {_142835 _142837 : Type'} (t : type24 _142835 _142837) (y : cart _142835 _142837) : (t y) = (t y).
Proof. exact (eq_refl (t y)). Qed.
Lemma lem8046519 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1283 _142835 _142836 _142837 f x t t' y) = (term1284 _142835 _142836 _142837 f t x t' y).
Proof. exact (MK_COMB (@lem8046517 _142835 _142836 f t x) (@lem8046518 _142835 _142837 t' y)). Qed.
Lemma lem8046520 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1285 _142835 _142836 _142837 f x t y) = (term1286 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046519 _142835 _142836 _142837 f t' x t y)). Qed.
Lemma lem8046521 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046522 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1281 _142835 _142836 _142837 f x t y) = (term1287 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046521 _142835 _142836) (@lem8046520 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046523 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1280 _142835 _142836 _142837 f x t y) = (term1281 _142835 _142836 _142837 f x t y)) = ((term401 _142835 _142836 _142837 f x t y) = (term1287 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8046514 _142835 _142836 _142837 f x t y) (@lem8046522 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046524 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term401 _142835 _142836 _142837 f x t y) = (term1287 _142835 _142836 _142837 f x t y).
Proof. exact (EQ_MP (@lem8046523 _142835 _142836 _142837 f x t y) (@lem8046504 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046525 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046526 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term582 _142835 _142836 _142837 f x t y) = (term1288 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046525) (@lem8046524 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046527 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term577 _142835 _142836 _142837 f x t y) = (term577 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term577 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046528 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term584 _142835 _142836 _142837 f x t y) = (term1289 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046526 _142835 _142836 _142837 f x t y) (@lem8046527 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046530 {A : Type'} (P : A -> Prop) (Q : Prop) : (term897 A P Q) = (term898 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8046531 {_142835 _142836 : Type'} (P : type56 _142835 _142836) (Q : Prop) : (term899 _142835 _142836 P Q) = (term900 _142835 _142836 P Q).
Proof. exact (@lem8046530 (type24 _142835 _142836) P Q). Qed.
Lemma lem8046532 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1290 _142835 _142836 _142837 f x t y) = (term1291 _142835 _142836 _142837 f x t y).
Proof. exact (@lem8046531 _142835 _142836 (term1286 _142835 _142836 _142837 f x t y) (term577 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046533 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1292 _142835 _142836 _142837 f x t' y t) = (term1284 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1292 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046534 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1293 _142835 _142836 _142837 f x t y) = (term1286 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046533 _142835 _142836 _142837 f t' x t y)). Qed.
Lemma lem8046535 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046536 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1294 _142835 _142836 _142837 f x t y) = (term1287 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046535 _142835 _142836) (@lem8046534 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046537 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046538 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1295 _142835 _142836 _142837 f x t y) = (term1288 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046537) (@lem8046536 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046539 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term577 _142835 _142836 _142837 f x t y) = (term577 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term577 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046540 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1290 _142835 _142836 _142837 f x t y) = (term1289 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046538 _142835 _142836 _142837 f x t y) (@lem8046539 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046541 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046542 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1296 _142835 _142836 _142837 f x t y) = (term1297 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046541) (@lem8046540 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046543 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1292 _142835 _142836 _142837 f x t' y t) = (term1284 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1292 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046544 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8046545 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1298 _142835 _142836 _142837 f x t' y t) = (term1299 _142835 _142836 _142837 f t x t' y).
Proof. exact (MK_COMB (@lem8046544) (@lem8046543 _142835 _142836 _142837 f t x t' y)). Qed.
Lemma lem8046546 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term577 _142835 _142836 _142837 f x t y) = (term577 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term577 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046547 {_142835 _142836 _142837 : Type'} (t : type24 _142835 _142836) (f : type56 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1300 _142835 _142836 _142837 t f x t' y) = (term1301 _142835 _142836 _142837 t f x t' y).
Proof. exact (MK_COMB (@lem8046545 _142835 _142836 _142837 f t x t' y) (@lem8046546 _142835 _142836 _142837 f x t' y)). Qed.
Lemma lem8046548 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1302 _142835 _142836 _142837 f x t y) = (term1303 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046547 _142835 _142836 _142837 t' f x t y)). Qed.
Lemma lem8046549 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046550 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1291 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046549 _142835 _142836) (@lem8046548 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046551 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1290 _142835 _142836 _142837 f x t y) = (term1291 _142835 _142836 _142837 f x t y)) = ((term1289 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8046542 _142835 _142836 _142837 f x t y) (@lem8046550 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046552 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1289 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (EQ_MP (@lem8046551 _142835 _142836 _142837 f x t y) (@lem8046532 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046553 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term584 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (TRANS (@lem8046528 _142835 _142836 _142837 f x t y) (@lem8046552 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046554 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term811 _142835 _142836 _142837 f x t) = (term1305 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046553 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046555 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046556 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term822 _142835 _142836 _142837 f x t) = (term1306 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046555 _142835 _142837) (@lem8046554 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046557 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term833 _142835 _142836 _142837 f t) = (term1307 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046556 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046558 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046559 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term844 _142835 _142836 _142837 f t) = (term1308 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046558 _142835 _142836) (@lem8046557 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046560 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term855 _142835 _142836 _142837 f) = (term1309 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046559 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046561 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046562 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term866 _142835 _142836 _142837 f) = (term1310 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046561 _142835 _142837) (@lem8046560 _142835 _142836 _142837 f)). Qed.
Lemma lem8046563 {_142835 _142836 _142837 : Type'} : (term877 _142835 _142836 _142837) = (term1311 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046562 _142835 _142836 _142837 f)). Qed.
Lemma lem8046564 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046565 {_142835 _142836 _142837 : Type'} : (term888 _142835 _142836 _142837) = (term1312 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046564 _142835 _142836) (@lem8046563 _142835 _142836 _142837)). Qed.
Lemma lem8046566 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046567 {_142835 _142836 _142837 : Type'} : (term890 _142835 _142836 _142837) = (term1313 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046566) (@lem8046565 _142835 _142836 _142837)). Qed.
Lemma lem8046569 {A : Type'} (P : Prop) (Q : A -> Prop) : (term914 A P Q) = (term915 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8046570 {_142835 _142836 : Type'} (P : Prop) (Q : type56 _142835 _142836) : (term916 _142835 _142836 P Q) = (term917 _142835 _142836 P Q).
Proof. exact (@lem8046569 (type24 _142835 _142836) P Q). Qed.
Lemma lem8046571 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1314 _142835 _142836 _142837 f x t y) = (term1315 _142835 _142836 _142837 f x t y).
Proof. exact (@lem8046570 _142835 _142836 (term566 _142835 _142836 _142837 f x t y) (term404 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046572 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term573 _142835 _142836 _142837 f x t y s) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term573 _142835 _142836 _142837 f x t y s)). Qed.
Lemma lem8046573 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1316 _142835 _142836 _142837 f x t y) = (term404 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8046572 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046574 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046575 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1317 _142835 _142836 _142837 f x t y) = (term405 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046574 _142835 _142836) (@lem8046573 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046576 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term579 _142835 _142836 _142837 f x t y) = (term579 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term579 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046577 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1314 _142835 _142836 _142837 f x t y) = (term581 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046576 _142835 _142836 _142837 f x t y) (@lem8046575 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046578 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046579 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1318 _142835 _142836 _142837 f x t y) = (term1319 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046578) (@lem8046577 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046580 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term573 _142835 _142836 _142837 f x t y s) = (term403 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term573 _142835 _142836 _142837 f x t y s)). Qed.
Lemma lem8046581 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term579 _142835 _142836 _142837 f x t y) = (term579 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term579 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046582 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (s : type24 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1320 _142835 _142836 _142837 f x t y s) = (term1321 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8046581 _142835 _142836 _142837 f x t y) (@lem8046580 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046583 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1322 _142835 _142836 _142837 f x t y) = (term1323 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8046582 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046584 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046585 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1315 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046584 _142835 _142836) (@lem8046583 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046586 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1314 _142835 _142836 _142837 f x t y) = (term1315 _142835 _142836 _142837 f x t y)) = ((term581 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8046579 _142835 _142836 _142837 f x t y) (@lem8046585 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046587 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term581 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y).
Proof. exact (EQ_MP (@lem8046586 _142835 _142836 _142837 f x t y) (@lem8046571 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046588 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term812 _142835 _142836 _142837 f x t) = (term1325 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046587 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046589 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046590 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term827 _142835 _142836 _142837 f x t) = (term1326 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046589 _142835 _142837) (@lem8046588 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046591 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term834 _142835 _142836 _142837 f t) = (term1327 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046590 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046592 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046593 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term849 _142835 _142836 _142837 f t) = (term1328 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046592 _142835 _142836) (@lem8046591 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046594 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term856 _142835 _142836 _142837 f) = (term1329 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046593 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046595 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046596 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term871 _142835 _142836 _142837 f) = (term1330 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046595 _142835 _142837) (@lem8046594 _142835 _142836 _142837 f)). Qed.
Lemma lem8046597 {_142835 _142836 _142837 : Type'} : (term878 _142835 _142836 _142837) = (term1331 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046596 _142835 _142836 _142837 f)). Qed.
Lemma lem8046598 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046599 {_142835 _142836 _142837 : Type'} : (term893 _142835 _142836 _142837) = (term1332 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046598 _142835 _142836) (@lem8046597 _142835 _142836 _142837)). Qed.
Lemma lem8046600 {_142835 _142836 _142837 : Type'} : (term894 _142835 _142836 _142837) = (term1333 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046567 _142835 _142836 _142837) (@lem8046599 _142835 _142836 _142837)). Qed.
Lemma lem8046602 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046603 {_142835 _142836 : Type'} (P : type64 _142835 _142836) (Q : type64 _142835 _142836) : (term676 _142835 _142836 P Q) = (term675 _142835 _142836 P Q).
Proof. exact (@lem8046602 (type56 _142835 _142836) P Q). Qed.
Lemma lem8046604 {_142835 _142836 _142837 : Type'} : (term1334 _142835 _142836 _142837) = (term1335 _142835 _142836 _142837).
Proof. exact (@lem8046603 _142835 _142836 (term1311 _142835 _142836 _142837) (term1331 _142835 _142836 _142837)). Qed.
Lemma lem8046605 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1336 _142835 _142836 _142837 f) = (term1310 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1336 _142835 _142836 _142837 f)). Qed.
Lemma lem8046606 {_142835 _142836 _142837 : Type'} : (term1337 _142835 _142836 _142837) = (term1311 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046605 _142835 _142836 _142837 f)). Qed.
Lemma lem8046607 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046608 {_142835 _142836 _142837 : Type'} : (term1338 _142835 _142836 _142837) = (term1312 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046607 _142835 _142836) (@lem8046606 _142835 _142836 _142837)). Qed.
Lemma lem8046609 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046610 {_142835 _142836 _142837 : Type'} : (term1339 _142835 _142836 _142837) = (term1313 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046609) (@lem8046608 _142835 _142836 _142837)). Qed.
Lemma lem8046611 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1340 _142835 _142836 _142837 f) = (term1330 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1340 _142835 _142836 _142837 f)). Qed.
Lemma lem8046612 {_142835 _142836 _142837 : Type'} : (term1341 _142835 _142836 _142837) = (term1331 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046611 _142835 _142836 _142837 f)). Qed.
Lemma lem8046613 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046614 {_142835 _142836 _142837 : Type'} : (term1342 _142835 _142836 _142837) = (term1332 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046613 _142835 _142836) (@lem8046612 _142835 _142836 _142837)). Qed.
Lemma lem8046615 {_142835 _142836 _142837 : Type'} : (term1334 _142835 _142836 _142837) = (term1333 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046610 _142835 _142836 _142837) (@lem8046614 _142835 _142836 _142837)). Qed.
Lemma lem8046616 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046617 {_142835 _142836 _142837 : Type'} : (term1343 _142835 _142836 _142837) = (term1344 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046616) (@lem8046615 _142835 _142836 _142837)). Qed.
Lemma lem8046618 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1336 _142835 _142836 _142837 f) = (term1310 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1336 _142835 _142836 _142837 f)). Qed.
Lemma lem8046619 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046620 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1345 _142835 _142836 _142837 f) = (term1346 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046619) (@lem8046618 _142835 _142836 _142837 f)). Qed.
Lemma lem8046621 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1340 _142835 _142836 _142837 f) = (term1330 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1340 _142835 _142836 _142837 f)). Qed.
Lemma lem8046622 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1347 _142835 _142836 _142837 f) = (term1348 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046620 _142835 _142836 _142837 f) (@lem8046621 _142835 _142836 _142837 f)). Qed.
Lemma lem8046623 {_142835 _142836 _142837 : Type'} : (term1349 _142835 _142836 _142837) = (term1350 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046622 _142835 _142836 _142837 f)). Qed.
Lemma lem8046624 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046625 {_142835 _142836 _142837 : Type'} : (term1335 _142835 _142836 _142837) = (term1351 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046624 _142835 _142836) (@lem8046623 _142835 _142836 _142837)). Qed.
Lemma lem8046626 {_142835 _142836 _142837 : Type'} : ((term1334 _142835 _142836 _142837) = (term1335 _142835 _142836 _142837)) = ((term1333 _142835 _142836 _142837) = (term1351 _142835 _142836 _142837)).
Proof. exact (MK_COMB (@lem8046617 _142835 _142836 _142837) (@lem8046625 _142835 _142836 _142837)). Qed.
Lemma lem8046627 {_142835 _142836 _142837 : Type'} : (term1333 _142835 _142836 _142837) = (term1351 _142835 _142836 _142837).
Proof. exact (EQ_MP (@lem8046626 _142835 _142836 _142837) (@lem8046604 _142835 _142836 _142837)). Qed.
Lemma lem8046629 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046630 {_142835 _142837 : Type'} (P : type56 _142835 _142837) (Q : type56 _142835 _142837) : (term787 _142835 _142837 P Q) = (term786 _142835 _142837 P Q).
Proof. exact (@lem8046629 (type24 _142835 _142837) P Q). Qed.
Lemma lem8046631 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1352 _142835 _142836 _142837 f) = (term1353 _142835 _142836 _142837 f).
Proof. exact (@lem8046630 _142835 _142837 (term1309 _142835 _142836 _142837 f) (term1329 _142835 _142836 _142837 f)). Qed.
Lemma lem8046632 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1354 _142835 _142836 _142837 f t) = (term1308 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1354 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046633 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1355 _142835 _142836 _142837 f) = (term1309 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046632 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046634 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046635 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1356 _142835 _142836 _142837 f) = (term1310 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046634 _142835 _142837) (@lem8046633 _142835 _142836 _142837 f)). Qed.
Lemma lem8046636 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046637 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1357 _142835 _142836 _142837 f) = (term1346 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046636) (@lem8046635 _142835 _142836 _142837 f)). Qed.
Lemma lem8046638 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1358 _142835 _142836 _142837 f t) = (term1328 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1358 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046639 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1359 _142835 _142836 _142837 f) = (term1329 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046638 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046640 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046641 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1360 _142835 _142836 _142837 f) = (term1330 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046640 _142835 _142837) (@lem8046639 _142835 _142836 _142837 f)). Qed.
Lemma lem8046642 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1352 _142835 _142836 _142837 f) = (term1348 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046637 _142835 _142836 _142837 f) (@lem8046641 _142835 _142836 _142837 f)). Qed.
Lemma lem8046643 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046644 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1361 _142835 _142836 _142837 f) = (term1362 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046643) (@lem8046642 _142835 _142836 _142837 f)). Qed.
Lemma lem8046645 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1354 _142835 _142836 _142837 f t) = (term1308 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1354 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046646 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046647 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1363 _142835 _142836 _142837 f t) = (term1364 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046646) (@lem8046645 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046648 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1358 _142835 _142836 _142837 f t) = (term1328 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1358 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046649 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1365 _142835 _142836 _142837 f t) = (term1366 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046647 _142835 _142836 _142837 f t) (@lem8046648 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046650 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1367 _142835 _142836 _142837 f) = (term1368 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046649 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046651 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046652 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1353 _142835 _142836 _142837 f) = (term1369 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046651 _142835 _142837) (@lem8046650 _142835 _142836 _142837 f)). Qed.
Lemma lem8046653 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : ((term1352 _142835 _142836 _142837 f) = (term1353 _142835 _142836 _142837 f)) = ((term1348 _142835 _142836 _142837 f) = (term1369 _142835 _142836 _142837 f)).
Proof. exact (MK_COMB (@lem8046644 _142835 _142836 _142837 f) (@lem8046652 _142835 _142836 _142837 f)). Qed.
Lemma lem8046654 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1348 _142835 _142836 _142837 f) = (term1369 _142835 _142836 _142837 f).
Proof. exact (EQ_MP (@lem8046653 _142835 _142836 _142837 f) (@lem8046631 _142835 _142836 _142837 f)). Qed.
Lemma lem8046656 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046657 {_142835 _142836 : Type'} (P : type24 _142835 _142836) (Q : type24 _142835 _142836) : (term630 _142835 _142836 P Q) = (term629 _142835 _142836 P Q).
Proof. exact (@lem8046656 (cart _142835 _142836) P Q). Qed.
Lemma lem8046658 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1370 _142835 _142836 _142837 f t) = (term1371 _142835 _142836 _142837 f t).
Proof. exact (@lem8046657 _142835 _142836 (term1307 _142835 _142836 _142837 f t) (term1327 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046659 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1372 _142835 _142836 _142837 f t x) = (term1306 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1372 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046660 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1373 _142835 _142836 _142837 f t) = (term1307 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046659 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046661 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046662 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1374 _142835 _142836 _142837 f t) = (term1308 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046661 _142835 _142836) (@lem8046660 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046663 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046664 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1375 _142835 _142836 _142837 f t) = (term1364 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046663) (@lem8046662 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046665 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1376 _142835 _142836 _142837 f t x) = (term1326 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1376 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046666 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1377 _142835 _142836 _142837 f t) = (term1327 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046665 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046667 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046668 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1378 _142835 _142836 _142837 f t) = (term1328 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046667 _142835 _142836) (@lem8046666 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046669 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1370 _142835 _142836 _142837 f t) = (term1366 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046664 _142835 _142836 _142837 f t) (@lem8046668 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046670 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046671 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1379 _142835 _142836 _142837 f t) = (term1380 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046670) (@lem8046669 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046672 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1372 _142835 _142836 _142837 f t x) = (term1306 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1372 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046673 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046674 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1381 _142835 _142836 _142837 f t x) = (term1382 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046673) (@lem8046672 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046675 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1376 _142835 _142836 _142837 f t x) = (term1326 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1376 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046676 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1383 _142835 _142836 _142837 f t x) = (term1384 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046674 _142835 _142836 _142837 f x t) (@lem8046675 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046677 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1385 _142835 _142836 _142837 f t) = (term1386 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046676 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046678 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046679 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1371 _142835 _142836 _142837 f t) = (term1387 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046678 _142835 _142836) (@lem8046677 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046680 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : ((term1370 _142835 _142836 _142837 f t) = (term1371 _142835 _142836 _142837 f t)) = ((term1366 _142835 _142836 _142837 f t) = (term1387 _142835 _142836 _142837 f t)).
Proof. exact (MK_COMB (@lem8046671 _142835 _142836 _142837 f t) (@lem8046679 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046681 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1366 _142835 _142836 _142837 f t) = (term1387 _142835 _142836 _142837 f t).
Proof. exact (EQ_MP (@lem8046680 _142835 _142836 _142837 f t) (@lem8046658 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046683 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046684 {_142835 _142837 : Type'} (P : type24 _142835 _142837) (Q : type24 _142835 _142837) : (term630 _142835 _142837 P Q) = (term629 _142835 _142837 P Q).
Proof. exact (@lem8046683 (cart _142835 _142837) P Q). Qed.
Lemma lem8046685 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1388 _142835 _142836 _142837 f x t) = (term1389 _142835 _142836 _142837 f x t).
Proof. exact (@lem8046684 _142835 _142837 (term1305 _142835 _142836 _142837 f x t) (term1325 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046686 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1390 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1390 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046687 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1391 _142835 _142836 _142837 f x t) = (term1305 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046686 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046688 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046689 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1392 _142835 _142836 _142837 f x t) = (term1306 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046688 _142835 _142837) (@lem8046687 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046690 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046691 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1393 _142835 _142836 _142837 f x t) = (term1382 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046690) (@lem8046689 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046692 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1394 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1394 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046693 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1395 _142835 _142836 _142837 f x t) = (term1325 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046692 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046694 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046695 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1396 _142835 _142836 _142837 f x t) = (term1326 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046694 _142835 _142837) (@lem8046693 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046696 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1388 _142835 _142836 _142837 f x t) = (term1384 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046691 _142835 _142836 _142837 f x t) (@lem8046695 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046697 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046698 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1397 _142835 _142836 _142837 f x t) = (term1398 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046697) (@lem8046696 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046699 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1390 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1390 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046700 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046701 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1399 _142835 _142836 _142837 f x t y) = (term1400 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046700) (@lem8046699 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046702 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1394 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1394 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046703 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1401 _142835 _142836 _142837 f x t y) = (term1402 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046701 _142835 _142836 _142837 f x t y) (@lem8046702 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046704 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1403 _142835 _142836 _142837 f x t) = (term1404 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046703 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046705 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046706 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1389 _142835 _142836 _142837 f x t) = (term1405 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046705 _142835 _142837) (@lem8046704 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046707 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : ((term1388 _142835 _142836 _142837 f x t) = (term1389 _142835 _142836 _142837 f x t)) = ((term1384 _142835 _142836 _142837 f x t) = (term1405 _142835 _142836 _142837 f x t)).
Proof. exact (MK_COMB (@lem8046698 _142835 _142836 _142837 f x t) (@lem8046706 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046708 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1384 _142835 _142836 _142837 f x t) = (term1405 _142835 _142836 _142837 f x t).
Proof. exact (EQ_MP (@lem8046707 _142835 _142836 _142837 f x t) (@lem8046685 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046710 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term628 A P Q) = (term627 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8046711 {_142835 _142836 : Type'} (P : type56 _142835 _142836) (Q : type56 _142835 _142836) : (term787 _142835 _142836 P Q) = (term786 _142835 _142836 P Q).
Proof. exact (@lem8046710 (type24 _142835 _142836) P Q). Qed.
Lemma lem8046712 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1406 _142835 _142836 _142837 f x t y) = (term1407 _142835 _142836 _142837 f x t y).
Proof. exact (@lem8046711 _142835 _142836 (term1303 _142835 _142836 _142837 f x t y) (term1323 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046713 {_142835 _142836 _142837 : Type'} (t : type24 _142835 _142836) (f : type56 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1408 _142835 _142836 _142837 f x t' y t) = (term1301 _142835 _142836 _142837 t f x t' y).
Proof. exact (eq_refl (term1408 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046714 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1409 _142835 _142836 _142837 f x t y) = (term1303 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046713 _142835 _142836 _142837 t' f x t y)). Qed.
Lemma lem8046715 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046716 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1410 _142835 _142836 _142837 f x t y) = (term1304 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046715 _142835 _142836) (@lem8046714 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046717 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046718 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1411 _142835 _142836 _142837 f x t y) = (term1400 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046717) (@lem8046716 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046719 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1412 _142835 _142836 _142837 f x t' y t) = (term1321 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1412 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046720 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1413 _142835 _142836 _142837 f x t y) = (term1323 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046719 _142835 _142836 _142837 f t' x t y)). Qed.
Lemma lem8046721 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046722 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1414 _142835 _142836 _142837 f x t y) = (term1324 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046721 _142835 _142836) (@lem8046720 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046723 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1406 _142835 _142836 _142837 f x t y) = (term1402 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046718 _142835 _142836 _142837 f x t y) (@lem8046722 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046724 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046725 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1415 _142835 _142836 _142837 f x t y) = (term1416 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046724) (@lem8046723 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046726 {_142835 _142836 _142837 : Type'} (t : type24 _142835 _142836) (f : type56 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1408 _142835 _142836 _142837 f x t' y t) = (term1301 _142835 _142836 _142837 t f x t' y).
Proof. exact (eq_refl (term1408 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046727 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046728 {_142835 _142836 _142837 : Type'} (t : type24 _142835 _142836) (f : type56 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1417 _142835 _142836 _142837 f x t' y t) = (term1418 _142835 _142836 _142837 t f x t' y).
Proof. exact (MK_COMB (@lem8046727) (@lem8046726 _142835 _142836 _142837 t f x t' y)). Qed.
Lemma lem8046729 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1412 _142835 _142836 _142837 f x t' y t) = (term1321 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1412 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046730 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1419 _142835 _142836 _142837 f x t' y t) = (term1420 _142835 _142836 _142837 f t x t' y).
Proof. exact (MK_COMB (@lem8046728 _142835 _142836 _142837 t f x t' y) (@lem8046729 _142835 _142836 _142837 f t x t' y)). Qed.
Lemma lem8046731 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1421 _142835 _142836 _142837 f x t y) = (term1422 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046730 _142835 _142836 _142837 f t' x t y)). Qed.
Lemma lem8046732 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046733 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1407 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046732 _142835 _142836) (@lem8046731 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046734 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1406 _142835 _142836 _142837 f x t y) = (term1407 _142835 _142836 _142837 f x t y)) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)).
Proof. exact (MK_COMB (@lem8046725 _142835 _142836 _142837 f x t y) (@lem8046733 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046735 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (EQ_MP (@lem8046734 _142835 _142836 _142837 f x t y) (@lem8046712 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046738 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1424 _142835 _142836 _142837 f x t y) = (term1424 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1424 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046739 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1424 _142835 _142836 _142837 f x t y) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)).
Proof. exact (eq_refl (term1424 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046740 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1425 _142835 _142836 _142837 f x t y) = (term1425 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1425 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046741 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1424 _142835 _142836 _142837 f x t y) = (term1424 _142835 _142836 _142837 f x t y)) = ((term1424 _142835 _142836 _142837 f x t y) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y))).
Proof. exact (MK_COMB (@lem8046740 _142835 _142836 _142837 f x t y) (@lem8046739 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046742 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1424 _142835 _142836 _142837 f x t y) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)).
Proof. exact (eq_refl (term1424 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046743 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046744 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1425 _142835 _142836 _142837 f x t y) = (term1426 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046743) (@lem8046742 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046745 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)).
Proof. exact (eq_refl ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y))). Qed.
Lemma lem8046746 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1424 _142835 _142836 _142837 f x t y) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y))) = (((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y))).
Proof. exact (MK_COMB (@lem8046744 _142835 _142836 _142837 f x t y) (@lem8046745 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046747 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1424 _142835 _142836 _142837 f x t y) = (term1424 _142835 _142836 _142837 f x t y)) = (((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y))).
Proof. exact (TRANS (@lem8046741 _142835 _142836 _142837 f x t y) (@lem8046746 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046748 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)) = ((term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y)).
Proof. exact (EQ_MP (@lem8046747 _142835 _142836 _142837 f x t y) (@lem8046738 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046749 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1402 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (EQ_MP (@lem8046748 _142835 _142836 _142837 f x t y) (@lem8046735 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046750 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1404 _142835 _142836 _142837 f x t) = (term1427 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046749 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046751 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046752 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1405 _142835 _142836 _142837 f x t) = (term1428 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046751 _142835 _142837) (@lem8046750 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046753 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1384 _142835 _142836 _142837 f x t) = (term1428 _142835 _142836 _142837 f x t).
Proof. exact (TRANS (@lem8046708 _142835 _142836 _142837 f x t) (@lem8046752 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046754 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1386 _142835 _142836 _142837 f t) = (term1429 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046753 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046755 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046756 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1387 _142835 _142836 _142837 f t) = (term1430 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046755 _142835 _142836) (@lem8046754 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046757 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1366 _142835 _142836 _142837 f t) = (term1430 _142835 _142836 _142837 f t).
Proof. exact (TRANS (@lem8046681 _142835 _142836 _142837 f t) (@lem8046756 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046758 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1368 _142835 _142836 _142837 f) = (term1431 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046757 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046759 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046760 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1369 _142835 _142836 _142837 f) = (term1432 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046759 _142835 _142837) (@lem8046758 _142835 _142836 _142837 f)). Qed.
Lemma lem8046761 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1348 _142835 _142836 _142837 f) = (term1432 _142835 _142836 _142837 f).
Proof. exact (TRANS (@lem8046654 _142835 _142836 _142837 f) (@lem8046760 _142835 _142836 _142837 f)). Qed.
Lemma lem8046762 {_142835 _142836 _142837 : Type'} : (term1350 _142835 _142836 _142837) = (term1433 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046761 _142835 _142836 _142837 f)). Qed.
Lemma lem8046763 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046764 {_142835 _142836 _142837 : Type'} : (term1351 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046763 _142835 _142836) (@lem8046762 _142835 _142836 _142837)). Qed.
Lemma lem8046765 {_142835 _142836 _142837 : Type'} : (term1333 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8046627 _142835 _142836 _142837) (@lem8046764 _142835 _142836 _142837)). Qed.
Lemma lem8046766 {_142835 _142836 _142837 : Type'} : (term894 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8046600 _142835 _142836 _142837) (@lem8046765 _142835 _142836 _142837)). Qed.
Lemma lem8046767 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term895 _142795 _142796 _142797 _142835 _142836 _142837) = (term1435 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046500 _142795 _142796 _142797) (@lem8046766 _142835 _142836 _142837)). Qed.
Lemma lem8046771 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8046772 {_142795 _142796 : Type'} (P : type56 _142795 _142796) (Q : Prop) : (term1438 _142795 _142796 P Q) = (term1439 _142795 _142796 P Q).
Proof. exact (@lem8046771 (type24 _142795 _142796) P Q). Qed.
Lemma lem8046773 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1440 _142795 _142796 _142797 _142835 _142836 _142837) = (term1441 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8046772 _142795 _142796 (term1277 _142795 _142796 _142797) (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046774 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1442 _142795 _142796 _142797 s) = (term1276 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1442 _142795 _142796 _142797 s)). Qed.
Lemma lem8046775 {_142795 _142796 _142797 : Type'} : (term1443 _142795 _142796 _142797) = (term1277 _142795 _142796 _142797).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046774 _142795 _142796 _142797 s)). Qed.
Lemma lem8046776 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046777 {_142795 _142796 _142797 : Type'} : (term1444 _142795 _142796 _142797) = (term1278 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046776 _142795 _142796) (@lem8046775 _142795 _142796 _142797)). Qed.
Lemma lem8046778 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046779 {_142795 _142796 _142797 : Type'} : (term1445 _142795 _142796 _142797) = (term1279 _142795 _142796 _142797).
Proof. exact (MK_COMB (@lem8046778) (@lem8046777 _142795 _142796 _142797)). Qed.
Lemma lem8046780 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046781 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1440 _142795 _142796 _142797 _142835 _142836 _142837) = (term1435 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046779 _142795 _142796 _142797) (@lem8046780 _142835 _142836 _142837)). Qed.
Lemma lem8046782 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046783 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1446 _142795 _142796 _142797 _142835 _142836 _142837) = (term1447 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046782) (@lem8046781 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8046784 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1442 _142795 _142796 _142797 s) = (term1276 _142795 _142796 _142797 s).
Proof. exact (eq_refl (term1442 _142795 _142796 _142797 s)). Qed.
Lemma lem8046785 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046786 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1448 _142795 _142796 _142797 s) = (term1449 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046785) (@lem8046784 _142795 _142796 _142797 s)). Qed.
Lemma lem8046787 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046788 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1450 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1451 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8046786 _142795 _142796 _142797 s) (@lem8046787 _142835 _142836 _142837)). Qed.
Lemma lem8046789 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1452 _142795 _142796 _142797 _142835 _142836 _142837) = (term1453 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8046788 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8046790 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8046791 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1441 _142795 _142796 _142797 _142835 _142836 _142837) = (term1454 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046790 _142795 _142796) (@lem8046789 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8046792 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : ((term1440 _142795 _142796 _142797 _142835 _142836 _142837) = (term1441 _142795 _142796 _142797 _142835 _142836 _142837)) = ((term1435 _142795 _142796 _142797 _142835 _142836 _142837) = (term1454 _142795 _142796 _142797 _142835 _142836 _142837)).
Proof. exact (MK_COMB (@lem8046783 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8046791 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8046793 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1435 _142795 _142796 _142797 _142835 _142836 _142837) = (term1454 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (EQ_MP (@lem8046792 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8046773 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8046797 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8046798 {_142795 _142797 : Type'} (P : type64 _142795 _142797) (Q : Prop) : (term1455 _142795 _142797 P Q) = (term1456 _142795 _142797 P Q).
Proof. exact (@lem8046797 (type56 _142795 _142797) P Q). Qed.
Lemma lem8046799 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1457 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1458 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (@lem8046798 _142795 _142797 (term1275 _142795 _142796 _142797 s) (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046800 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1459 _142795 _142796 _142797 s f) = (term1274 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1459 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046801 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1460 _142795 _142796 _142797 s) = (term1275 _142795 _142796 _142797 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046800 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046802 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046803 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1461 _142795 _142796 _142797 s) = (term1276 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046802 _142795 _142797) (@lem8046801 _142795 _142796 _142797 s)). Qed.
Lemma lem8046804 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046805 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) : (term1462 _142795 _142796 _142797 s) = (term1449 _142795 _142796 _142797 s).
Proof. exact (MK_COMB (@lem8046804) (@lem8046803 _142795 _142796 _142797 s)). Qed.
Lemma lem8046806 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046807 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1457 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1451 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8046805 _142795 _142796 _142797 s) (@lem8046806 _142835 _142836 _142837)). Qed.
Lemma lem8046808 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046809 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1463 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1464 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8046808) (@lem8046807 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8046810 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1459 _142795 _142796 _142797 s f) = (term1274 _142795 _142796 _142797 f s).
Proof. exact (eq_refl (term1459 _142795 _142796 _142797 s f)). Qed.
Lemma lem8046811 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046812 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1465 _142795 _142796 _142797 s f) = (term1466 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046811) (@lem8046810 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046813 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046814 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1467 _142795 _142796 _142797 _142835 _142836 _142837 s f) = (term1468 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8046812 _142795 _142796 _142797 f s) (@lem8046813 _142835 _142836 _142837)). Qed.
Lemma lem8046815 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1469 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1470 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8046814 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8046816 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8046817 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1458 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1471 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8046816 _142795 _142797) (@lem8046815 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8046818 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : ((term1457 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1458 _142795 _142796 _142797 _142835 _142836 _142837 s)) = ((term1451 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1471 _142795 _142796 _142797 _142835 _142836 _142837 s)).
Proof. exact (MK_COMB (@lem8046809 _142795 _142796 _142797 _142835 _142836 _142837 s) (@lem8046817 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8046819 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1451 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1471 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (EQ_MP (@lem8046818 _142795 _142796 _142797 _142835 _142836 _142837 s) (@lem8046799 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8046823 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8046824 {_142795 _142796 : Type'} (P : type24 _142795 _142796) (Q : Prop) : (term1472 _142795 _142796 P Q) = (term1473 _142795 _142796 P Q).
Proof. exact (@lem8046823 (cart _142795 _142796) P Q). Qed.
Lemma lem8046825 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1474 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1475 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (@lem8046824 _142795 _142796 (term1273 _142795 _142796 _142797 f s) (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046826 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1476 _142795 _142796 _142797 f s x) = (term1272 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1476 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046827 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1477 _142795 _142796 _142797 f s) = (term1273 _142795 _142796 _142797 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046826 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046828 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046829 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1478 _142795 _142796 _142797 f s) = (term1274 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046828 _142795 _142796) (@lem8046827 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046830 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046831 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1479 _142795 _142796 _142797 f s) = (term1466 _142795 _142796 _142797 f s).
Proof. exact (MK_COMB (@lem8046830) (@lem8046829 _142795 _142796 _142797 f s)). Qed.
Lemma lem8046832 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046833 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1474 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1468 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8046831 _142795 _142796 _142797 f s) (@lem8046832 _142835 _142836 _142837)). Qed.
Lemma lem8046834 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046835 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1480 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1481 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8046834) (@lem8046833 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8046836 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1476 _142795 _142796 _142797 f s x) = (term1272 _142795 _142796 _142797 f s x).
Proof. exact (eq_refl (term1476 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046837 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046838 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1482 _142795 _142796 _142797 f s x) = (term1483 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046837) (@lem8046836 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046839 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046840 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1484 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1485 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8046838 _142795 _142796 _142797 f s x) (@lem8046839 _142835 _142836 _142837)). Qed.
Lemma lem8046841 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1486 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1487 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8046840 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8046842 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8046843 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1475 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1488 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8046842 _142795 _142796) (@lem8046841 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8046844 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term1474 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1475 _142795 _142796 _142797 _142835 _142836 _142837 f s)) = ((term1468 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1488 _142795 _142796 _142797 _142835 _142836 _142837 f s)).
Proof. exact (MK_COMB (@lem8046835 _142795 _142796 _142797 _142835 _142836 _142837 f s) (@lem8046843 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8046845 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1468 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1488 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (EQ_MP (@lem8046844 _142795 _142796 _142797 _142835 _142836 _142837 f s) (@lem8046825 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8046849 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8046850 {_142795 _142797 : Type'} (P : type24 _142795 _142797) (Q : Prop) : (term1472 _142795 _142797 P Q) = (term1473 _142795 _142797 P Q).
Proof. exact (@lem8046849 (cart _142795 _142797) P Q). Qed.
Lemma lem8046851 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1489 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1490 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (@lem8046850 _142795 _142797 (term1271 _142795 _142796 _142797 f s x) (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046852 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1491 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1491 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046853 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1492 _142795 _142796 _142797 f s x) = (term1271 _142795 _142796 _142797 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046852 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046854 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046855 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1493 _142795 _142796 _142797 f s x) = (term1272 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046854 _142795 _142797) (@lem8046853 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046856 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046857 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1494 _142795 _142796 _142797 f s x) = (term1483 _142795 _142796 _142797 f s x).
Proof. exact (MK_COMB (@lem8046856) (@lem8046855 _142795 _142796 _142797 f s x)). Qed.
Lemma lem8046858 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046859 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1489 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1485 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8046857 _142795 _142796 _142797 f s x) (@lem8046858 _142835 _142836 _142837)). Qed.
Lemma lem8046860 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046861 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1495 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1496 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8046860) (@lem8046859 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8046862 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1491 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y).
Proof. exact (eq_refl (term1491 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046863 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046864 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1497 _142795 _142796 _142797 f s x y) = (term1498 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046863) (@lem8046862 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046865 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046866 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1499 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1500 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8046864 _142795 _142796 _142797 f s x y) (@lem8046865 _142835 _142836 _142837)). Qed.
Lemma lem8046867 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1501 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1502 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8046866 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8046868 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8046869 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1490 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1503 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8046868 _142795 _142797) (@lem8046867 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8046870 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : ((term1489 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1490 _142795 _142796 _142797 _142835 _142836 _142837 f s x)) = ((term1485 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1503 _142795 _142796 _142797 _142835 _142836 _142837 f s x)).
Proof. exact (MK_COMB (@lem8046861 _142795 _142796 _142797 _142835 _142836 _142837 f s x) (@lem8046869 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8046871 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1485 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1503 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (EQ_MP (@lem8046870 _142795 _142796 _142797 _142835 _142836 _142837 f s x) (@lem8046851 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8046875 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8046876 {_142795 _142797 : Type'} (P : type56 _142795 _142797) (Q : Prop) : (term1438 _142795 _142797 P Q) = (term1439 _142795 _142797 P Q).
Proof. exact (@lem8046875 (type24 _142795 _142797) P Q). Qed.
Lemma lem8046877 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1504 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1505 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (@lem8046876 _142795 _142797 (term1269 _142795 _142796 _142797 f s x y) (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046878 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1506 _142795 _142796 _142797 f s x y t) = (term1267 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1506 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046879 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1507 _142795 _142796 _142797 f s x y) = (term1269 _142795 _142796 _142797 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046878 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046880 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046881 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1508 _142795 _142796 _142797 f s x y) = (term1270 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046880 _142795 _142797) (@lem8046879 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046882 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046883 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1509 _142795 _142796 _142797 f s x y) = (term1498 _142795 _142796 _142797 f s x y).
Proof. exact (MK_COMB (@lem8046882) (@lem8046881 _142795 _142796 _142797 f s x y)). Qed.
Lemma lem8046884 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046885 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1504 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1500 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8046883 _142795 _142796 _142797 f s x y) (@lem8046884 _142835 _142836 _142837)). Qed.
Lemma lem8046886 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046887 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1510 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1511 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8046886) (@lem8046885 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8046888 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1506 _142795 _142796 _142797 f s x y t) = (term1267 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1506 _142795 _142796 _142797 f s x y t)). Qed.
Lemma lem8046889 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8046890 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1512 _142795 _142796 _142797 f s x y t) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (MK_COMB (@lem8046889) (@lem8046888 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046891 {_142835 _142836 _142837 : Type'} : (term1434 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (eq_refl (term1434 _142835 _142836 _142837)). Qed.
Lemma lem8046892 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1514 _142795 _142796 _142797 _142835 _142836 _142837 f s x y t) = (term1515 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8046890 _142795 _142796 _142797 f s x t y) (@lem8046891 _142835 _142836 _142837)). Qed.
Lemma lem8046893 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1516 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1517 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8046892 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046894 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8046895 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1505 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1518 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8046894 _142795 _142797) (@lem8046893 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8046896 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : ((term1504 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1505 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)) = ((term1500 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1518 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)).
Proof. exact (MK_COMB (@lem8046887 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) (@lem8046895 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8046897 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1500 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1518 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (EQ_MP (@lem8046896 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) (@lem8046877 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8046899 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8046900 {_142835 _142836 : Type'} (P : Prop) (Q : type64 _142835 _142836) : (term1521 _142835 _142836 P Q) = (term1522 _142835 _142836 P Q).
Proof. exact (@lem8046899 (type56 _142835 _142836) P Q). Qed.
Lemma lem8046901 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1523 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1524 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (@lem8046900 _142835 _142836 (term1267 _142795 _142796 _142797 f s x t y) (term1433 _142835 _142836 _142837)). Qed.
Lemma lem8046902 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1525 _142835 _142836 _142837 f) = (term1432 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1525 _142835 _142836 _142837 f)). Qed.
Lemma lem8046903 {_142835 _142836 _142837 : Type'} : (term1526 _142835 _142836 _142837) = (term1433 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142835 _142836 => @lem8046902 _142835 _142836 _142837 f)). Qed.
Lemma lem8046904 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046905 {_142835 _142836 _142837 : Type'} : (term1527 _142835 _142836 _142837) = (term1434 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046904 _142835 _142836) (@lem8046903 _142835 _142836 _142837)). Qed.
Lemma lem8046906 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046907 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1523 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1515 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8046906 _142795 _142796 _142797 f s x t y) (@lem8046905 _142835 _142836 _142837)). Qed.
Lemma lem8046908 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046909 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1528 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1529 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8046908) (@lem8046907 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046910 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1525 _142835 _142836 _142837 f) = (term1432 _142835 _142836 _142837 f).
Proof. exact (eq_refl (term1525 _142835 _142836 _142837 f)). Qed.
Lemma lem8046911 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046912 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1530 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1531 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8046911 _142795 _142796 _142797 f s x t y) (@lem8046910 _142835 _142836 _142837 f')). Qed.
Lemma lem8046913 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1532 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1533 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (fun_ext (fun f' : type56 _142835 _142836 => @lem8046912 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8046914 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8046915 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1524 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1534 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8046914 _142835 _142836) (@lem8046913 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046916 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : ((term1523 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1524 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)) = ((term1515 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1534 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)).
Proof. exact (MK_COMB (@lem8046909 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) (@lem8046915 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046917 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1515 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1534 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (EQ_MP (@lem8046916 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) (@lem8046901 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8046919 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8046920 {_142835 _142837 : Type'} (P : Prop) (Q : type56 _142835 _142837) : (term1535 _142835 _142837 P Q) = (term1536 _142835 _142837 P Q).
Proof. exact (@lem8046919 (type24 _142835 _142837) P Q). Qed.
Lemma lem8046921 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1537 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1538 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (@lem8046920 _142835 _142837 (term1267 _142795 _142796 _142797 f s x t y) (term1431 _142835 _142836 _142837 f')). Qed.
Lemma lem8046922 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1539 _142835 _142836 _142837 f t) = (term1430 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1539 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046923 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1540 _142835 _142836 _142837 f) = (term1431 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun t : type24 _142835 _142837 => @lem8046922 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046924 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046925 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) : (term1541 _142835 _142836 _142837 f) = (term1432 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8046924 _142835 _142837) (@lem8046923 _142835 _142836 _142837 f)). Qed.
Lemma lem8046926 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046927 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1537 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1531 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8046926 _142795 _142796 _142797 f s x t y) (@lem8046925 _142835 _142836 _142837 f')). Qed.
Lemma lem8046928 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046929 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1542 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1543 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8046928) (@lem8046927 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8046930 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1539 _142835 _142836 _142837 f t) = (term1430 _142835 _142836 _142837 f t).
Proof. exact (eq_refl (term1539 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046931 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046932 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1544 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1545 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8046931 _142795 _142796 _142797 f s x t y) (@lem8046930 _142835 _142836 _142837 f' t')). Qed.
Lemma lem8046933 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1546 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1547 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (fun_ext (fun t' : type24 _142835 _142837 => @lem8046932 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8046934 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8046935 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1538 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1548 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8046934 _142835 _142837) (@lem8046933 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8046936 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : ((term1537 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1538 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')) = ((term1531 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1548 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')).
Proof. exact (MK_COMB (@lem8046929 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') (@lem8046935 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8046937 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1531 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1548 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (EQ_MP (@lem8046936 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') (@lem8046921 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8046939 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8046940 {_142835 _142836 : Type'} (P : Prop) (Q : type24 _142835 _142836) : (term1549 _142835 _142836 P Q) = (term1550 _142835 _142836 P Q).
Proof. exact (@lem8046939 (cart _142835 _142836) P Q). Qed.
Lemma lem8046941 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1551 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1552 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (@lem8046940 _142835 _142836 (term1267 _142795 _142796 _142797 f s x t y) (term1429 _142835 _142836 _142837 f' t')). Qed.
Lemma lem8046942 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1553 _142835 _142836 _142837 f t x) = (term1428 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1553 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046943 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1554 _142835 _142836 _142837 f t) = (term1429 _142835 _142836 _142837 f t).
Proof. exact (fun_ext (fun x : cart _142835 _142836 => @lem8046942 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046944 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046945 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142837) : (term1555 _142835 _142836 _142837 f t) = (term1430 _142835 _142836 _142837 f t).
Proof. exact (MK_COMB (@lem8046944 _142835 _142836) (@lem8046943 _142835 _142836 _142837 f t)). Qed.
Lemma lem8046946 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046947 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1551 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1545 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8046946 _142795 _142796 _142797 f s x t y) (@lem8046945 _142835 _142836 _142837 f' t')). Qed.
Lemma lem8046948 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046949 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1556 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1557 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8046948) (@lem8046947 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8046950 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1553 _142835 _142836 _142837 f t x) = (term1428 _142835 _142836 _142837 f x t).
Proof. exact (eq_refl (term1553 _142835 _142836 _142837 f t x)). Qed.
Lemma lem8046951 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046952 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1558 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x') = (term1559 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8046951 _142795 _142796 _142797 f s x t y) (@lem8046950 _142835 _142836 _142837 f' x' t')). Qed.
Lemma lem8046953 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1560 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1561 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (fun_ext (fun x' : cart _142835 _142836 => @lem8046952 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8046954 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8046955 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1552 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1562 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8046954 _142835 _142836) (@lem8046953 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8046956 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : ((term1551 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1552 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')) = ((term1545 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1562 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')).
Proof. exact (MK_COMB (@lem8046949 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') (@lem8046955 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8046957 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1545 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1562 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (EQ_MP (@lem8046956 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') (@lem8046941 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8046959 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8046960 {_142835 _142837 : Type'} (P : Prop) (Q : type24 _142835 _142837) : (term1549 _142835 _142837 P Q) = (term1550 _142835 _142837 P Q).
Proof. exact (@lem8046959 (cart _142835 _142837) P Q). Qed.
Lemma lem8046961 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1563 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1564 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (@lem8046960 _142835 _142837 (term1267 _142795 _142796 _142797 f s x t y) (term1427 _142835 _142836 _142837 f' x' t')). Qed.
Lemma lem8046962 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1565 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1565 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046963 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1566 _142835 _142836 _142837 f x t) = (term1427 _142835 _142836 _142837 f x t).
Proof. exact (fun_ext (fun y : cart _142835 _142837 => @lem8046962 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046964 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046965 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) : (term1567 _142835 _142836 _142837 f x t) = (term1428 _142835 _142836 _142837 f x t).
Proof. exact (MK_COMB (@lem8046964 _142835 _142837) (@lem8046963 _142835 _142836 _142837 f x t)). Qed.
Lemma lem8046966 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046967 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1563 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1559 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8046966 _142795 _142796 _142797 f s x t y) (@lem8046965 _142835 _142836 _142837 f' x' t')). Qed.
Lemma lem8046968 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046969 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1568 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1569 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8046968) (@lem8046967 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8046970 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1565 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (eq_refl (term1565 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046971 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046972 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1570 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1571 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (MK_COMB (@lem8046971 _142795 _142796 _142797 f s x t y) (@lem8046970 _142835 _142836 _142837 f' x' t' y')). Qed.
Lemma lem8046973 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1572 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1573 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (fun_ext (fun y' : cart _142835 _142837 => @lem8046972 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046974 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8046975 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1564 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1574 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8046974 _142835 _142837) (@lem8046973 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8046976 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : ((term1563 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1564 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')) = ((term1559 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1574 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')).
Proof. exact (MK_COMB (@lem8046969 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') (@lem8046975 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8046977 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1559 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1574 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (EQ_MP (@lem8046976 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') (@lem8046961 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8046979 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8046980 {_142835 _142836 : Type'} (P : Prop) (Q : type56 _142835 _142836) : (term1535 _142835 _142836 P Q) = (term1536 _142835 _142836 P Q).
Proof. exact (@lem8046979 (type24 _142835 _142836) P Q). Qed.
Lemma lem8046981 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1575 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1576 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (@lem8046980 _142835 _142836 (term1267 _142795 _142796 _142797 f s x t y) (term1422 _142835 _142836 _142837 f' x' t' y')). Qed.
Lemma lem8046982 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1577 _142835 _142836 _142837 f x t' y t) = (term1420 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1577 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046983 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1578 _142835 _142836 _142837 f x t y) = (term1422 _142835 _142836 _142837 f x t y).
Proof. exact (fun_ext (fun t' : type24 _142835 _142836 => @lem8046982 _142835 _142836 _142837 f t' x t y)). Qed.
Lemma lem8046984 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046985 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (x : cart _142835 _142836) (t : type24 _142835 _142837) (y : cart _142835 _142837) : (term1579 _142835 _142836 _142837 f x t y) = (term1423 _142835 _142836 _142837 f x t y).
Proof. exact (MK_COMB (@lem8046984 _142835 _142836) (@lem8046983 _142835 _142836 _142837 f x t y)). Qed.
Lemma lem8046986 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046987 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1575 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1571 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (MK_COMB (@lem8046986 _142795 _142796 _142797 f s x t y) (@lem8046985 _142835 _142836 _142837 f' x' t' y')). Qed.
Lemma lem8046988 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8046989 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1580 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1581 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (MK_COMB (@lem8046988) (@lem8046987 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046990 {_142835 _142836 _142837 : Type'} (f : type56 _142835 _142836) (t : type24 _142835 _142836) (x : cart _142835 _142836) (t' : type24 _142835 _142837) (y : cart _142835 _142837) : (term1577 _142835 _142836 _142837 f x t' y t) = (term1420 _142835 _142836 _142837 f t x t' y).
Proof. exact (eq_refl (term1577 _142835 _142836 _142837 f x t' y t)). Qed.
Lemma lem8046991 {_142795 _142796 _142797 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f s x t y) = (term1513 _142795 _142796 _142797 f s x t y).
Proof. exact (eq_refl (term1513 _142795 _142796 _142797 f s x t y)). Qed.
Lemma lem8046992 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142836) (x' : cart _142835 _142836) (t'' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1582 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t'' y' t') = (term1583 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x' t'' y').
Proof. exact (MK_COMB (@lem8046991 _142795 _142796 _142797 f s x t y) (@lem8046990 _142835 _142836 _142837 f' t' x' t'' y')). Qed.
Lemma lem8046993 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1584 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1585 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (fun_ext (fun t'' : type24 _142835 _142836 => @lem8046992 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t'' x' t' y')). Qed.
Lemma lem8046994 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8046995 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1576 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (MK_COMB (@lem8046994 _142835 _142836) (@lem8046993 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046996 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : ((term1575 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1576 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')) = ((term1571 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')).
Proof. exact (MK_COMB (@lem8046989 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') (@lem8046995 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046997 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1571 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (EQ_MP (@lem8046996 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') (@lem8046981 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046998 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1573 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1587 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (fun_ext (fun y' : cart _142835 _142837 => @lem8046997 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8046999 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8047000 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1574 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1588 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8046999 _142835 _142837) (@lem8046998 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8047001 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1559 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1588 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (TRANS (@lem8046977 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') (@lem8047000 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8047002 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1561 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1589 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (fun_ext (fun x' : cart _142835 _142836 => @lem8047001 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8047003 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8047004 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1562 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1590 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8047003 _142835 _142836) (@lem8047002 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047005 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1545 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1590 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (TRANS (@lem8046957 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') (@lem8047004 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047006 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1547 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1591 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (fun_ext (fun t' : type24 _142835 _142837 => @lem8047005 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047007 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8047008 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1548 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1592 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8047007 _142835 _142837) (@lem8047006 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047009 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1531 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1592 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (TRANS (@lem8046937 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') (@lem8047008 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047010 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1533 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1593 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (fun_ext (fun f' : type56 _142835 _142836 => @lem8047009 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047011 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8047012 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1534 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1594 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8047011 _142835 _142836) (@lem8047010 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8047013 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1515 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1594 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (TRANS (@lem8046917 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) (@lem8047012 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8047014 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1517 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1595 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8047013 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8047015 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047016 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1518 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1596 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8047015 _142795 _142797) (@lem8047014 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047017 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1500 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1596 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (TRANS (@lem8046897 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) (@lem8047016 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047018 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1502 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1597 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8047017 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047019 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8047020 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1503 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1598 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8047019 _142795 _142797) (@lem8047018 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047021 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1485 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1598 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (TRANS (@lem8046871 _142795 _142796 _142797 _142835 _142836 _142837 f s x) (@lem8047020 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047022 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1487 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1599 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8047021 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047023 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8047024 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1488 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1600 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8047023 _142795 _142796) (@lem8047022 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8047025 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1468 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1600 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (TRANS (@lem8046845 _142795 _142796 _142797 _142835 _142836 _142837 f s) (@lem8047024 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8047026 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1470 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1601 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8047025 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8047027 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8047028 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1471 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1602 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8047027 _142795 _142797) (@lem8047026 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047029 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1451 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1602 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (TRANS (@lem8046819 _142795 _142796 _142797 _142835 _142836 _142837 s) (@lem8047028 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047030 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1453 _142795 _142796 _142797 _142835 _142836 _142837) = (term1603 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8047029 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047031 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8047032 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1454 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047031 _142795 _142796) (@lem8047030 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047033 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1435 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8046793 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047032 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047034 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term895 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8046767 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047033 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047035 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term896 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1605 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8046250 _142753 _142754 _142755) (@lem8047034 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047039 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047040 {_142753 _142754 : Type'} (P : type64 _142753 _142754) (Q : Prop) : (term1455 _142753 _142754 P Q) = (term1456 _142753 _142754 P Q).
Proof. exact (@lem8047039 (type56 _142753 _142754) P Q). Qed.
Lemma lem8047041 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1606 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1607 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (@lem8047040 _142753 _142754 (term1124 _142753 _142754 _142755) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047042 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1608 _142753 _142754 _142755 f) = (term1123 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1608 _142753 _142754 _142755 f)). Qed.
Lemma lem8047043 {_142753 _142754 _142755 : Type'} : (term1609 _142753 _142754 _142755) = (term1124 _142753 _142754 _142755).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8047042 _142753 _142754 _142755 f)). Qed.
Lemma lem8047044 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8047045 {_142753 _142754 _142755 : Type'} : (term1610 _142753 _142754 _142755) = (term1125 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8047044 _142753 _142754) (@lem8047043 _142753 _142754 _142755)). Qed.
Lemma lem8047046 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047047 {_142753 _142754 _142755 : Type'} : (term1611 _142753 _142754 _142755) = (term1126 _142753 _142754 _142755).
Proof. exact (MK_COMB (@lem8047046) (@lem8047045 _142753 _142754 _142755)). Qed.
Lemma lem8047048 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047049 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1606 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1605 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047047 _142753 _142754 _142755) (@lem8047048 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047050 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047051 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1612 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1613 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047050) (@lem8047049 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047052 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1608 _142753 _142754 _142755 f) = (term1123 _142753 _142754 _142755 f).
Proof. exact (eq_refl (term1608 _142753 _142754 _142755 f)). Qed.
Lemma lem8047053 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047054 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1614 _142753 _142754 _142755 f) = (term1615 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8047053) (@lem8047052 _142753 _142754 _142755 f)). Qed.
Lemma lem8047055 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047056 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1616 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1617 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8047054 _142753 _142754 _142755 f) (@lem8047055 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047057 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1618 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1619 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8047056 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047058 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8047059 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1607 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1620 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047058 _142753 _142754) (@lem8047057 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047060 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : ((term1606 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1607 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)) = ((term1605 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1620 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)).
Proof. exact (MK_COMB (@lem8047051 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047059 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047061 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1605 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1620 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (EQ_MP (@lem8047060 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047041 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047065 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047066 {_142753 _142755 : Type'} (P : type64 _142753 _142755) (Q : Prop) : (term1455 _142753 _142755 P Q) = (term1456 _142753 _142755 P Q).
Proof. exact (@lem8047065 (type56 _142753 _142755) P Q). Qed.
Lemma lem8047067 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1621 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1622 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (@lem8047066 _142753 _142755 (term1122 _142753 _142754 _142755 f) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047068 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1623 _142753 _142754 _142755 f g) = (term1121 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1623 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047069 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1624 _142753 _142754 _142755 f) = (term1122 _142753 _142754 _142755 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8047068 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047070 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8047071 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1625 _142753 _142754 _142755 f) = (term1123 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8047070 _142753 _142755) (@lem8047069 _142753 _142754 _142755 f)). Qed.
Lemma lem8047072 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047073 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) : (term1626 _142753 _142754 _142755 f) = (term1615 _142753 _142754 _142755 f).
Proof. exact (MK_COMB (@lem8047072) (@lem8047071 _142753 _142754 _142755 f)). Qed.
Lemma lem8047074 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047075 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1621 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1617 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8047073 _142753 _142754 _142755 f) (@lem8047074 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047076 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047077 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1627 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1628 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8047076) (@lem8047075 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047078 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1623 _142753 _142754 _142755 f g) = (term1121 _142753 _142754 _142755 f g).
Proof. exact (eq_refl (term1623 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047079 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047080 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1629 _142753 _142754 _142755 f g) = (term1630 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8047079) (@lem8047078 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047081 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047082 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1631 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1632 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (MK_COMB (@lem8047080 _142753 _142754 _142755 f g) (@lem8047081 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047083 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1633 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1634 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8047082 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047084 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8047085 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1622 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1635 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8047084 _142753 _142755) (@lem8047083 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047086 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : ((term1621 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1622 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)) = ((term1617 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1635 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)).
Proof. exact (MK_COMB (@lem8047077 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) (@lem8047085 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047087 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1617 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1635 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (EQ_MP (@lem8047086 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) (@lem8047067 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047091 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047092 {_142753 _142754 : Type'} (P : type24 _142753 _142754) (Q : Prop) : (term1472 _142753 _142754 P Q) = (term1473 _142753 _142754 P Q).
Proof. exact (@lem8047091 (cart _142753 _142754) P Q). Qed.
Lemma lem8047093 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1636 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1637 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (@lem8047092 _142753 _142754 (term1120 _142753 _142754 _142755 f g) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047094 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1638 _142753 _142754 _142755 f g x) = (term1119 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1638 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047095 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1639 _142753 _142754 _142755 f g) = (term1120 _142753 _142754 _142755 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8047094 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047096 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8047097 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1640 _142753 _142754 _142755 f g) = (term1121 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8047096 _142753 _142754) (@lem8047095 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047098 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047099 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1641 _142753 _142754 _142755 f g) = (term1630 _142753 _142754 _142755 f g).
Proof. exact (MK_COMB (@lem8047098) (@lem8047097 _142753 _142754 _142755 f g)). Qed.
Lemma lem8047100 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047101 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1636 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1632 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (MK_COMB (@lem8047099 _142753 _142754 _142755 f g) (@lem8047100 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047102 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047103 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1642 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1643 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (MK_COMB (@lem8047102) (@lem8047101 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047104 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1638 _142753 _142754 _142755 f g x) = (term1119 _142753 _142754 _142755 f g x).
Proof. exact (eq_refl (term1638 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047105 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047106 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1644 _142753 _142754 _142755 f g x) = (term1645 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8047105) (@lem8047104 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047107 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047108 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1646 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1647 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (MK_COMB (@lem8047106 _142753 _142754 _142755 f g x) (@lem8047107 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047109 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1648 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1649 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8047108 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047110 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8047111 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1637 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1650 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (MK_COMB (@lem8047110 _142753 _142754) (@lem8047109 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047112 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : ((term1636 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1637 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)) = ((term1632 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1650 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)).
Proof. exact (MK_COMB (@lem8047103 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) (@lem8047111 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047113 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1632 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1650 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (EQ_MP (@lem8047112 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) (@lem8047093 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047117 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047118 {_142753 _142755 : Type'} (P : type24 _142753 _142755) (Q : Prop) : (term1472 _142753 _142755 P Q) = (term1473 _142753 _142755 P Q).
Proof. exact (@lem8047117 (cart _142753 _142755) P Q). Qed.
Lemma lem8047119 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1651 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1652 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (@lem8047118 _142753 _142755 (term1118 _142753 _142754 _142755 f g x) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047120 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1653 _142753 _142754 _142755 f g x y) = (term1117 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1653 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047121 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1654 _142753 _142754 _142755 f g x) = (term1118 _142753 _142754 _142755 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8047120 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047122 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8047123 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1655 _142753 _142754 _142755 f g x) = (term1119 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8047122 _142753 _142755) (@lem8047121 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047124 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047125 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1656 _142753 _142754 _142755 f g x) = (term1645 _142753 _142754 _142755 f g x).
Proof. exact (MK_COMB (@lem8047124) (@lem8047123 _142753 _142754 _142755 f g x)). Qed.
Lemma lem8047126 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047127 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1651 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1647 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (MK_COMB (@lem8047125 _142753 _142754 _142755 f g x) (@lem8047126 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047128 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047129 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1657 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1658 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (MK_COMB (@lem8047128) (@lem8047127 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047130 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1653 _142753 _142754 _142755 f g x y) = (term1117 _142753 _142754 _142755 f g x y).
Proof. exact (eq_refl (term1653 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047131 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047132 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1659 _142753 _142754 _142755 f g x y) = (term1660 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8047131) (@lem8047130 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047133 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047134 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1661 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1662 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (MK_COMB (@lem8047132 _142753 _142754 _142755 f g x y) (@lem8047133 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047135 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1663 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1664 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8047134 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047136 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8047137 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1652 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1665 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (MK_COMB (@lem8047136 _142753 _142755) (@lem8047135 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047138 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : ((term1651 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1652 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)) = ((term1647 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1665 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)).
Proof. exact (MK_COMB (@lem8047129 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) (@lem8047137 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047139 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1647 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1665 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (EQ_MP (@lem8047138 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) (@lem8047119 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047143 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047144 {_142753 _142754 : Type'} (P : type56 _142753 _142754) (Q : Prop) : (term1438 _142753 _142754 P Q) = (term1439 _142753 _142754 P Q).
Proof. exact (@lem8047143 (type24 _142753 _142754) P Q). Qed.
Lemma lem8047145 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1666 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1667 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (@lem8047144 _142753 _142754 (term1116 _142753 _142754 _142755 f g x y) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047146 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1668 _142753 _142754 _142755 f g x y t) = (term1115 _142753 _142754 _142755 f g t x y).
Proof. exact (eq_refl (term1668 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8047147 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1669 _142753 _142754 _142755 f g x y) = (term1116 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8047146 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8047148 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8047149 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1670 _142753 _142754 _142755 f g x y) = (term1117 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8047148 _142753 _142754) (@lem8047147 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047150 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047151 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1671 _142753 _142754 _142755 f g x y) = (term1660 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8047150) (@lem8047149 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047152 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047153 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1666 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1662 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (MK_COMB (@lem8047151 _142753 _142754 _142755 f g x y) (@lem8047152 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047154 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047155 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1672 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1673 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (MK_COMB (@lem8047154) (@lem8047153 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047156 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1668 _142753 _142754 _142755 f g x y t) = (term1115 _142753 _142754 _142755 f g t x y).
Proof. exact (eq_refl (term1668 _142753 _142754 _142755 f g x y t)). Qed.
Lemma lem8047157 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047158 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1674 _142753 _142754 _142755 f g x y t) = (term1675 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8047157) (@lem8047156 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8047159 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047160 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1676 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y t) = (term1677 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (MK_COMB (@lem8047158 _142753 _142754 _142755 f g t x y) (@lem8047159 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047161 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1678 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1679 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8047160 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047162 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8047163 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1667 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1680 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (MK_COMB (@lem8047162 _142753 _142754) (@lem8047161 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047164 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1666 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1667 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)) = ((term1662 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1680 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)).
Proof. exact (MK_COMB (@lem8047155 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) (@lem8047163 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047165 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1662 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1680 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (EQ_MP (@lem8047164 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) (@lem8047145 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047169 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1436 A P Q) = (term1437 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8047170 {_142753 _142755 : Type'} (P : type56 _142753 _142755) (Q : Prop) : (term1438 _142753 _142755 P Q) = (term1439 _142753 _142755 P Q).
Proof. exact (@lem8047169 (type24 _142753 _142755) P Q). Qed.
Lemma lem8047171 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1681 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1682 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (@lem8047170 _142753 _142755 (term1114 _142753 _142754 _142755 f g t x y) (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047172 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1683 _142753 _142754 _142755 f g t x y t') = (term1112 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1683 _142753 _142754 _142755 f g t x y t')). Qed.
Lemma lem8047173 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1684 _142753 _142754 _142755 f g t x y) = (term1114 _142753 _142754 _142755 f g t x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8047172 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047174 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8047175 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1685 _142753 _142754 _142755 f g t x y) = (term1115 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8047174 _142753 _142755) (@lem8047173 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8047176 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047177 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1686 _142753 _142754 _142755 f g t x y) = (term1675 _142753 _142754 _142755 f g t x y).
Proof. exact (MK_COMB (@lem8047176) (@lem8047175 _142753 _142754 _142755 f g t x y)). Qed.
Lemma lem8047178 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047179 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1681 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1677 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (MK_COMB (@lem8047177 _142753 _142754 _142755 f g t x y) (@lem8047178 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047180 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047181 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1687 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1688 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (MK_COMB (@lem8047180) (@lem8047179 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047182 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1683 _142753 _142754 _142755 f g t x y t') = (term1112 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1683 _142753 _142754 _142755 f g t x y t')). Qed.
Lemma lem8047183 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047184 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1689 _142753 _142754 _142755 f g t x y t') = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8047183) (@lem8047182 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047185 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1604 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (eq_refl (term1604 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047186 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1691 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y t') = (term1692 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (MK_COMB (@lem8047184 _142753 _142754 _142755 f g t x t' y) (@lem8047185 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047187 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1693 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1694 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8047186 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047188 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8047189 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1682 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1695 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (MK_COMB (@lem8047188 _142753 _142755) (@lem8047187 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047190 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : ((term1681 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1682 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)) = ((term1677 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1695 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)).
Proof. exact (MK_COMB (@lem8047181 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) (@lem8047189 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047191 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1677 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1695 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (EQ_MP (@lem8047190 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) (@lem8047171 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047193 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047194 {_142795 _142796 : Type'} (P : Prop) (Q : type56 _142795 _142796) : (term1535 _142795 _142796 P Q) = (term1536 _142795 _142796 P Q).
Proof. exact (@lem8047193 (type24 _142795 _142796) P Q). Qed.
Lemma lem8047195 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1696 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1697 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (@lem8047194 _142795 _142796 (term1112 _142753 _142754 _142755 f g t x t' y) (term1603 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047196 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1698 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1602 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (eq_refl (term1698 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047197 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1699 _142795 _142796 _142797 _142835 _142836 _142837) = (term1603 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8047196 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047198 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8047199 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1700 _142795 _142796 _142797 _142835 _142836 _142837) = (term1604 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047198 _142795 _142796) (@lem8047197 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047200 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047201 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1696 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1692 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (MK_COMB (@lem8047200 _142753 _142754 _142755 f g t x t' y) (@lem8047199 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047202 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047203 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1701 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1702 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (MK_COMB (@lem8047202) (@lem8047201 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047204 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1698 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1602 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (eq_refl (term1698 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047205 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047206 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1703 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1704 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (MK_COMB (@lem8047205 _142753 _142754 _142755 f g t x t' y) (@lem8047204 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047207 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1705 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1706 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8047206 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047208 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8047209 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1697 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1707 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (MK_COMB (@lem8047208 _142795 _142796) (@lem8047207 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047210 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : ((term1696 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1697 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)) = ((term1692 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1707 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)).
Proof. exact (MK_COMB (@lem8047203 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) (@lem8047209 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047211 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1692 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1707 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (EQ_MP (@lem8047210 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) (@lem8047195 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047213 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047214 {_142795 _142797 : Type'} (P : Prop) (Q : type64 _142795 _142797) : (term1521 _142795 _142797 P Q) = (term1522 _142795 _142797 P Q).
Proof. exact (@lem8047213 (type56 _142795 _142797) P Q). Qed.
Lemma lem8047215 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1708 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1709 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (@lem8047214 _142795 _142797 (term1112 _142753 _142754 _142755 f g t x t' y) (term1601 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047216 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1710 _142795 _142796 _142797 _142835 _142836 _142837 s f) = (term1600 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (eq_refl (term1710 _142795 _142796 _142797 _142835 _142836 _142837 s f)). Qed.
Lemma lem8047217 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1711 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1601 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (fun_ext (fun f : type56 _142795 _142797 => @lem8047216 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8047218 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8047219 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (s : type24 _142795 _142796) : (term1712 _142795 _142796 _142797 _142835 _142836 _142837 s) = (term1602 _142795 _142796 _142797 _142835 _142836 _142837 s).
Proof. exact (MK_COMB (@lem8047218 _142795 _142797) (@lem8047217 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047220 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047221 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1708 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1704 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (MK_COMB (@lem8047220 _142753 _142754 _142755 f g t x t' y) (@lem8047219 _142795 _142796 _142797 _142835 _142836 _142837 s)). Qed.
Lemma lem8047222 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047223 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1713 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1714 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (MK_COMB (@lem8047222) (@lem8047221 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047224 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1710 _142795 _142796 _142797 _142835 _142836 _142837 s f) = (term1600 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (eq_refl (term1710 _142795 _142796 _142797 _142835 _142836 _142837 s f)). Qed.
Lemma lem8047225 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047226 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1715 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s f') = (term1716 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (MK_COMB (@lem8047225 _142753 _142754 _142755 f g t x t' y) (@lem8047224 _142795 _142796 _142797 _142835 _142836 _142837 f' s)). Qed.
Lemma lem8047227 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1717 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1718 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (fun_ext (fun f' : type56 _142795 _142797 => @lem8047226 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047228 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8047229 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1709 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1719 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (MK_COMB (@lem8047228 _142795 _142797) (@lem8047227 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047230 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : ((term1708 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1709 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)) = ((term1704 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1719 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)).
Proof. exact (MK_COMB (@lem8047223 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) (@lem8047229 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047231 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1704 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1719 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (EQ_MP (@lem8047230 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) (@lem8047215 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047233 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047234 {_142795 _142796 : Type'} (P : Prop) (Q : type24 _142795 _142796) : (term1549 _142795 _142796 P Q) = (term1550 _142795 _142796 P Q).
Proof. exact (@lem8047233 (cart _142795 _142796) P Q). Qed.
Lemma lem8047235 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1720 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1721 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (@lem8047234 _142795 _142796 (term1112 _142753 _142754 _142755 f g t x t' y) (term1599 _142795 _142796 _142797 _142835 _142836 _142837 f' s)). Qed.
Lemma lem8047236 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1722 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1598 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (eq_refl (term1722 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047237 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1723 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1599 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (fun_ext (fun x : cart _142795 _142796 => @lem8047236 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047238 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8047239 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1724 _142795 _142796 _142797 _142835 _142836 _142837 f s) = (term1600 _142795 _142796 _142797 _142835 _142836 _142837 f s).
Proof. exact (MK_COMB (@lem8047238 _142795 _142796) (@lem8047237 _142795 _142796 _142797 _142835 _142836 _142837 f s)). Qed.
Lemma lem8047240 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047241 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1720 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1716 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (MK_COMB (@lem8047240 _142753 _142754 _142755 f g t x t' y) (@lem8047239 _142795 _142796 _142797 _142835 _142836 _142837 f' s)). Qed.
Lemma lem8047242 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047243 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1725 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1726 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (MK_COMB (@lem8047242) (@lem8047241 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047244 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1722 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1598 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (eq_refl (term1722 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047245 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047246 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1727 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1728 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (MK_COMB (@lem8047245 _142753 _142754 _142755 f g t x t' y) (@lem8047244 _142795 _142796 _142797 _142835 _142836 _142837 f' s x')). Qed.
Lemma lem8047247 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1729 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1730 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (fun_ext (fun x' : cart _142795 _142796 => @lem8047246 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047248 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8047249 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1721 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1731 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (MK_COMB (@lem8047248 _142795 _142796) (@lem8047247 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047250 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : ((term1720 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1721 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)) = ((term1716 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1731 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)).
Proof. exact (MK_COMB (@lem8047243 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) (@lem8047249 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047251 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1716 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1731 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (EQ_MP (@lem8047250 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) (@lem8047235 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047253 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047254 {_142795 _142797 : Type'} (P : Prop) (Q : type24 _142795 _142797) : (term1549 _142795 _142797 P Q) = (term1550 _142795 _142797 P Q).
Proof. exact (@lem8047253 (cart _142795 _142797) P Q). Qed.
Lemma lem8047255 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1732 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1733 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (@lem8047254 _142795 _142797 (term1112 _142753 _142754 _142755 f g t x t' y) (term1597 _142795 _142796 _142797 _142835 _142836 _142837 f' s x')). Qed.
Lemma lem8047256 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1734 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1596 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (eq_refl (term1734 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047257 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1735 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1597 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (fun_ext (fun y : cart _142795 _142797 => @lem8047256 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047258 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8047259 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) : (term1736 _142795 _142796 _142797 _142835 _142836 _142837 f s x) = (term1598 _142795 _142796 _142797 _142835 _142836 _142837 f s x).
Proof. exact (MK_COMB (@lem8047258 _142795 _142797) (@lem8047257 _142795 _142796 _142797 _142835 _142836 _142837 f s x)). Qed.
Lemma lem8047260 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047261 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1732 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1728 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (MK_COMB (@lem8047260 _142753 _142754 _142755 f g t x t' y) (@lem8047259 _142795 _142796 _142797 _142835 _142836 _142837 f' s x')). Qed.
Lemma lem8047262 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047263 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1737 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1738 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (MK_COMB (@lem8047262) (@lem8047261 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047264 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1734 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1596 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (eq_refl (term1734 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047265 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047266 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1739 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1740 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (MK_COMB (@lem8047265 _142753 _142754 _142755 f g t x t' y) (@lem8047264 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' y')). Qed.
Lemma lem8047267 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1741 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1742 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (fun_ext (fun y' : cart _142795 _142797 => @lem8047266 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047268 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8047269 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1733 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1743 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (MK_COMB (@lem8047268 _142795 _142797) (@lem8047267 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047270 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : ((term1732 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1733 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')) = ((term1728 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1743 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')).
Proof. exact (MK_COMB (@lem8047263 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') (@lem8047269 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047271 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1728 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1743 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (EQ_MP (@lem8047270 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') (@lem8047255 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047273 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047274 {_142795 _142797 : Type'} (P : Prop) (Q : type56 _142795 _142797) : (term1535 _142795 _142797 P Q) = (term1536 _142795 _142797 P Q).
Proof. exact (@lem8047273 (type24 _142795 _142797) P Q). Qed.
Lemma lem8047275 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1744 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1745 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (@lem8047274 _142795 _142797 (term1112 _142753 _142754 _142755 f g t x t' y) (term1595 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' y')). Qed.
Lemma lem8047276 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1746 _142795 _142796 _142797 _142835 _142836 _142837 f s x y t) = (term1594 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term1746 _142795 _142796 _142797 _142835 _142836 _142837 f s x y t)). Qed.
Lemma lem8047277 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1747 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1595 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8047276 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8047278 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047279 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (y : cart _142795 _142797) : (term1748 _142795 _142796 _142797 _142835 _142836 _142837 f s x y) = (term1596 _142795 _142796 _142797 _142835 _142836 _142837 f s x y).
Proof. exact (MK_COMB (@lem8047278 _142795 _142797) (@lem8047277 _142795 _142796 _142797 _142835 _142836 _142837 f s x y)). Qed.
Lemma lem8047280 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047281 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1744 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1740 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (MK_COMB (@lem8047280 _142753 _142754 _142755 f g t x t' y) (@lem8047279 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' y')). Qed.
Lemma lem8047282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047283 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1749 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1750 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (MK_COMB (@lem8047282) (@lem8047281 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047284 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1746 _142795 _142796 _142797 _142835 _142836 _142837 f s x y t) = (term1594 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (eq_refl (term1746 _142795 _142796 _142797 _142835 _142836 _142837 f s x y t)). Qed.
Lemma lem8047285 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047286 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1751 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y' t'') = (term1752 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047285 _142753 _142754 _142755 f g t x t' y) (@lem8047284 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y')). Qed.
Lemma lem8047287 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1753 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1754 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (fun_ext (fun t'' : type24 _142795 _142797 => @lem8047286 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047288 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047289 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1745 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1755 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (MK_COMB (@lem8047288 _142795 _142797) (@lem8047287 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047290 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : ((term1744 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1745 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')) = ((term1740 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1755 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')).
Proof. exact (MK_COMB (@lem8047283 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') (@lem8047289 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047291 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1740 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1755 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (EQ_MP (@lem8047290 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') (@lem8047275 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047293 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047294 {_142835 _142836 : Type'} (P : Prop) (Q : type64 _142835 _142836) : (term1521 _142835 _142836 P Q) = (term1522 _142835 _142836 P Q).
Proof. exact (@lem8047293 (type56 _142835 _142836) P Q). Qed.
Lemma lem8047295 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1756 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1757 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (@lem8047294 _142835 _142836 (term1112 _142753 _142754 _142755 f g t x t' y) (term1593 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y')). Qed.
Lemma lem8047296 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1758 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1592 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (eq_refl (term1758 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047297 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1759 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1593 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (fun_ext (fun f' : type56 _142835 _142836 => @lem8047296 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047298 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8047299 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) : (term1760 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y) = (term1594 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y).
Proof. exact (MK_COMB (@lem8047298 _142835 _142836) (@lem8047297 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y)). Qed.
Lemma lem8047300 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047301 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1756 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1752 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047300 _142753 _142754 _142755 f g t x t' y) (@lem8047299 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y')). Qed.
Lemma lem8047302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047303 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1761 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1762 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047302) (@lem8047301 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047304 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1758 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1592 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (eq_refl (term1758 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047305 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047306 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1763 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1764 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (MK_COMB (@lem8047305 _142753 _142754 _142755 f g t x t' y) (@lem8047304 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'')). Qed.
Lemma lem8047307 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1765 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1766 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (fun_ext (fun f'' : type56 _142835 _142836 => @lem8047306 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047308 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8047309 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1757 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1767 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047308 _142835 _142836) (@lem8047307 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047310 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : ((term1756 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1757 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')) = ((term1752 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1767 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')).
Proof. exact (MK_COMB (@lem8047303 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') (@lem8047309 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047311 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1752 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1767 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (EQ_MP (@lem8047310 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') (@lem8047295 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047313 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047314 {_142835 _142837 : Type'} (P : Prop) (Q : type56 _142835 _142837) : (term1535 _142835 _142837 P Q) = (term1536 _142835 _142837 P Q).
Proof. exact (@lem8047313 (type24 _142835 _142837) P Q). Qed.
Lemma lem8047315 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1768 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1769 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (@lem8047314 _142835 _142837 (term1112 _142753 _142754 _142755 f g t x t' y) (term1591 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'')). Qed.
Lemma lem8047316 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1770 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1590 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (eq_refl (term1770 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047317 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1771 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1591 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (fun_ext (fun t' : type24 _142835 _142837 => @lem8047316 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047318 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8047319 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) : (term1772 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f') = (term1592 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f').
Proof. exact (MK_COMB (@lem8047318 _142835 _142837) (@lem8047317 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f')). Qed.
Lemma lem8047320 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047321 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1768 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1764 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (MK_COMB (@lem8047320 _142753 _142754 _142755 f g t x t' y) (@lem8047319 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'')). Qed.
Lemma lem8047322 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047323 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1773 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1774 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (MK_COMB (@lem8047322) (@lem8047321 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047324 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1770 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1590 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (eq_refl (term1770 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047325 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047326 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1775 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1776 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (MK_COMB (@lem8047325 _142753 _142754 _142755 f g t x t' y) (@lem8047324 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047327 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1777 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1778 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (fun_ext (fun t''' : type24 _142835 _142837 => @lem8047326 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047328 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8047329 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1769 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1779 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (MK_COMB (@lem8047328 _142835 _142837) (@lem8047327 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047330 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : ((term1768 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1769 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')) = ((term1764 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1779 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')).
Proof. exact (MK_COMB (@lem8047323 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') (@lem8047329 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047331 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1764 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1779 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (EQ_MP (@lem8047330 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') (@lem8047315 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047333 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047334 {_142835 _142836 : Type'} (P : Prop) (Q : type24 _142835 _142836) : (term1549 _142835 _142836 P Q) = (term1550 _142835 _142836 P Q).
Proof. exact (@lem8047333 (cart _142835 _142836) P Q). Qed.
Lemma lem8047335 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1780 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1781 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (@lem8047334 _142835 _142836 (term1112 _142753 _142754 _142755 f g t x t' y) (term1589 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047336 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1782 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x') = (term1588 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (eq_refl (term1782 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x')). Qed.
Lemma lem8047337 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1783 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1589 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (fun_ext (fun x' : cart _142835 _142836 => @lem8047336 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8047338 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8047339 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142837) : (term1784 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t') = (term1590 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t').
Proof. exact (MK_COMB (@lem8047338 _142835 _142836) (@lem8047337 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t')). Qed.
Lemma lem8047340 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047341 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1780 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1776 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (MK_COMB (@lem8047340 _142753 _142754 _142755 f g t x t' y) (@lem8047339 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047343 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1785 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1786 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (MK_COMB (@lem8047342) (@lem8047341 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047344 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1782 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x') = (term1588 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (eq_refl (term1782 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x')). Qed.
Lemma lem8047345 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047346 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1787 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' x'') = (term1788 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (MK_COMB (@lem8047345 _142753 _142754 _142755 f g t x t' y) (@lem8047344 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047347 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1789 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1790 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (fun_ext (fun x'' : cart _142835 _142836 => @lem8047346 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047348 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8047349 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1781 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1791 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (MK_COMB (@lem8047348 _142835 _142836) (@lem8047347 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047350 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : ((term1780 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1781 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')) = ((term1776 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1791 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')).
Proof. exact (MK_COMB (@lem8047343 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') (@lem8047349 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047351 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1776 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1791 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (EQ_MP (@lem8047350 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') (@lem8047335 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047353 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047354 {_142835 _142837 : Type'} (P : Prop) (Q : type24 _142835 _142837) : (term1549 _142835 _142837 P Q) = (term1550 _142835 _142837 P Q).
Proof. exact (@lem8047353 (cart _142835 _142837) P Q). Qed.
Lemma lem8047355 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1792 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1793 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (@lem8047354 _142835 _142837 (term1112 _142753 _142754 _142755 f g t x t' y) (term1587 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047356 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1794 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (eq_refl (term1794 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8047357 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1795 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1587 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (fun_ext (fun y' : cart _142835 _142837 => @lem8047356 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8047358 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8047359 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) : (term1796 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t') = (term1588 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t').
Proof. exact (MK_COMB (@lem8047358 _142835 _142837) (@lem8047357 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t')). Qed.
Lemma lem8047360 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047361 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1792 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1788 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (MK_COMB (@lem8047360 _142753 _142754 _142755 f g t x t' y) (@lem8047359 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047362 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047363 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1797 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1798 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (MK_COMB (@lem8047362) (@lem8047361 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047364 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1794 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (eq_refl (term1794 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8047365 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047366 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1799 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1800 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047365 _142753 _142754 _142755 f g t x t' y) (@lem8047364 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047367 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1801 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1802 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (fun_ext (fun y'' : cart _142835 _142837 => @lem8047366 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047368 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8047369 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1793 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1803 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (MK_COMB (@lem8047368 _142835 _142837) (@lem8047367 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047370 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : ((term1792 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1793 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')) = ((term1788 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1803 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')).
Proof. exact (MK_COMB (@lem8047363 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') (@lem8047369 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047371 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1788 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1803 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (EQ_MP (@lem8047370 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') (@lem8047355 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047373 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1519 A P Q) = (term1520 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8047374 {_142835 _142836 : Type'} (P : Prop) (Q : type56 _142835 _142836) : (term1535 _142835 _142836 P Q) = (term1536 _142835 _142836 P Q).
Proof. exact (@lem8047373 (type24 _142835 _142836) P Q). Qed.
Lemma lem8047375 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1804 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1805 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (@lem8047374 _142835 _142836 (term1112 _142753 _142754 _142755 f g t x t' y) (term1585 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047376 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142836) (x' : cart _142835 _142836) (t'' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1806 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t'' y' t') = (term1583 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x' t'' y').
Proof. exact (eq_refl (term1806 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t'' y' t')). Qed.
Lemma lem8047377 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1807 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1585 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (fun_ext (fun t'' : type24 _142835 _142836 => @lem8047376 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t'' x' t' y')). Qed.
Lemma lem8047378 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8047379 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (x' : cart _142835 _142836) (t' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1808 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y') = (term1586 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y').
Proof. exact (MK_COMB (@lem8047378 _142835 _142836) (@lem8047377 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t' y')). Qed.
Lemma lem8047380 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047381 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1804 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1800 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047380 _142753 _142754 _142755 f g t x t' y) (@lem8047379 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047382 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8047383 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1809 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1810 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047382) (@lem8047381 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047384 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142795 _142797) (s : type24 _142795 _142796) (x : cart _142795 _142796) (t : type24 _142795 _142797) (y : cart _142795 _142797) (f' : type56 _142835 _142836) (t' : type24 _142835 _142836) (x' : cart _142835 _142836) (t'' : type24 _142835 _142837) (y' : cart _142835 _142837) : (term1806 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t'' y' t') = (term1583 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' t' x' t'' y').
Proof. exact (eq_refl (term1806 _142795 _142796 _142797 _142835 _142836 _142837 f s x t y f' x' t'' y' t')). Qed.
Lemma lem8047385 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1690 _142753 _142754 _142755 f g t x t' y).
Proof. exact (eq_refl (term1690 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047386 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t'''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1811 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t'''' y'' t''') = (term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' x'' t'''' y'').
Proof. exact (MK_COMB (@lem8047385 _142753 _142754 _142755 f g t x t' y) (@lem8047384 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t''' x'' t'''' y'')). Qed.
Lemma lem8047387 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1813 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1814 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (fun_ext (fun t'''' : type24 _142835 _142836 => @lem8047386 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047388 {_142835 _142836 : Type'} : (@ex ((cart _142835 _142836) -> Prop)) = (@ex ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8047389 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1805 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047388 _142835 _142836) (@lem8047387 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047390 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : ((term1804 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1805 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')) = ((term1800 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')).
Proof. exact (MK_COMB (@lem8047383 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') (@lem8047389 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047391 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1800 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') = (term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'').
Proof. exact (EQ_MP (@lem8047390 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') (@lem8047375 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047392 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1802 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1816 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (fun_ext (fun y'' : cart _142835 _142837 => @lem8047391 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'')). Qed.
Lemma lem8047393 {_142835 _142837 : Type'} : (@ex (cart _142835 _142837)) = (@ex (cart _142835 _142837)).
Proof. exact (eq_refl (@ex (cart _142835 _142837))). Qed.
Lemma lem8047394 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1803 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (MK_COMB (@lem8047393 _142835 _142837) (@lem8047392 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047395 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) : (term1788 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') = (term1817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''').
Proof. exact (TRANS (@lem8047371 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') (@lem8047394 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047396 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1790 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1818 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (fun_ext (fun x'' : cart _142835 _142836 => @lem8047395 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''')). Qed.
Lemma lem8047397 {_142835 _142836 : Type'} : (@ex (cart _142835 _142836)) = (@ex (cart _142835 _142836)).
Proof. exact (eq_refl (@ex (cart _142835 _142836))). Qed.
Lemma lem8047398 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1791 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (MK_COMB (@lem8047397 _142835 _142836) (@lem8047396 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047399 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) : (term1776 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') = (term1819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''').
Proof. exact (TRANS (@lem8047351 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') (@lem8047398 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047400 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1778 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1820 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (fun_ext (fun t''' : type24 _142835 _142837 => @lem8047399 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''')). Qed.
Lemma lem8047401 {_142835 _142837 : Type'} : (@ex ((cart _142835 _142837) -> Prop)) = (@ex ((cart _142835 _142837) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142835 _142837) -> Prop))). Qed.
Lemma lem8047402 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1779 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (MK_COMB (@lem8047401 _142835 _142837) (@lem8047400 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047403 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) : (term1764 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') = (term1821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'').
Proof. exact (TRANS (@lem8047331 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') (@lem8047402 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047404 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1766 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1822 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (fun_ext (fun f'' : type56 _142835 _142836 => @lem8047403 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'')). Qed.
Lemma lem8047405 {_142835 _142836 : Type'} : (@ex (((cart _142835 _142836) -> Prop) -> Prop)) = (@ex (((cart _142835 _142836) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142835 _142836) -> Prop) -> Prop))). Qed.
Lemma lem8047406 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1767 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047405 _142835 _142836) (@lem8047404 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047407 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1752 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') = (term1823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y').
Proof. exact (TRANS (@lem8047311 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') (@lem8047406 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047408 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1754 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1824 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (fun_ext (fun t'' : type24 _142795 _142797 => @lem8047407 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y')). Qed.
Lemma lem8047409 {_142795 _142797 : Type'} : (@ex ((cart _142795 _142797) -> Prop)) = (@ex ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047410 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1755 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (MK_COMB (@lem8047409 _142795 _142797) (@lem8047408 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047411 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1740 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') = (term1825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y').
Proof. exact (TRANS (@lem8047291 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') (@lem8047410 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047412 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1742 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1826 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (fun_ext (fun y' : cart _142795 _142797 => @lem8047411 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y')). Qed.
Lemma lem8047413 {_142795 _142797 : Type'} : (@ex (cart _142795 _142797)) = (@ex (cart _142795 _142797)).
Proof. exact (eq_refl (@ex (cart _142795 _142797))). Qed.
Lemma lem8047414 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1743 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1827 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (MK_COMB (@lem8047413 _142795 _142797) (@lem8047412 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047415 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1728 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') = (term1827 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x').
Proof. exact (TRANS (@lem8047271 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') (@lem8047414 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047416 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1730 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1828 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (fun_ext (fun x' : cart _142795 _142796 => @lem8047415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x')). Qed.
Lemma lem8047417 {_142795 _142796 : Type'} : (@ex (cart _142795 _142796)) = (@ex (cart _142795 _142796)).
Proof. exact (eq_refl (@ex (cart _142795 _142796))). Qed.
Lemma lem8047418 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1731 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1829 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (MK_COMB (@lem8047417 _142795 _142796) (@lem8047416 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047419 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) : (term1716 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) = (term1829 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s).
Proof. exact (TRANS (@lem8047251 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) (@lem8047418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047420 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1718 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1830 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (fun_ext (fun f' : type56 _142795 _142797 => @lem8047419 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s)). Qed.
Lemma lem8047421 {_142795 _142797 : Type'} : (@ex (((cart _142795 _142797) -> Prop) -> Prop)) = (@ex (((cart _142795 _142797) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142795 _142797) -> Prop) -> Prop))). Qed.
Lemma lem8047422 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1719 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1831 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (MK_COMB (@lem8047421 _142795 _142797) (@lem8047420 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047423 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) : (term1704 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) = (term1831 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s).
Proof. exact (TRANS (@lem8047231 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) (@lem8047422 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047424 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1706 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1832 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (fun_ext (fun s : type24 _142795 _142796 => @lem8047423 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s)). Qed.
Lemma lem8047425 {_142795 _142796 : Type'} : (@ex ((cart _142795 _142796) -> Prop)) = (@ex ((cart _142795 _142796) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142795 _142796) -> Prop))). Qed.
Lemma lem8047426 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1707 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1833 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (MK_COMB (@lem8047425 _142795 _142796) (@lem8047424 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047427 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1692 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) = (term1833 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y).
Proof. exact (TRANS (@lem8047211 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) (@lem8047426 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047428 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1694 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1834 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (fun_ext (fun t' : type24 _142753 _142755 => @lem8047427 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y)). Qed.
Lemma lem8047429 {_142753 _142755 : Type'} : (@ex ((cart _142753 _142755) -> Prop)) = (@ex ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8047430 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1695 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1835 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (MK_COMB (@lem8047429 _142753 _142755) (@lem8047428 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047431 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1677 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) = (term1835 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y).
Proof. exact (TRANS (@lem8047191 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) (@lem8047430 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047432 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1679 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1836 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8047431 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y)). Qed.
Lemma lem8047433 {_142753 _142754 : Type'} : (@ex ((cart _142753 _142754) -> Prop)) = (@ex ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@ex ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8047434 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1680 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1837 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (MK_COMB (@lem8047433 _142753 _142754) (@lem8047432 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047435 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1662 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) = (term1837 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y).
Proof. exact (TRANS (@lem8047165 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) (@lem8047434 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047436 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1664 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1838 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (fun_ext (fun y : cart _142753 _142755 => @lem8047435 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y)). Qed.
Lemma lem8047437 {_142753 _142755 : Type'} : (@ex (cart _142753 _142755)) = (@ex (cart _142753 _142755)).
Proof. exact (eq_refl (@ex (cart _142753 _142755))). Qed.
Lemma lem8047438 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1665 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1839 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (MK_COMB (@lem8047437 _142753 _142755) (@lem8047436 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047439 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) : (term1647 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) = (term1839 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x).
Proof. exact (TRANS (@lem8047139 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) (@lem8047438 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047440 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1649 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1840 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (fun_ext (fun x : cart _142753 _142754 => @lem8047439 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x)). Qed.
Lemma lem8047441 {_142753 _142754 : Type'} : (@ex (cart _142753 _142754)) = (@ex (cart _142753 _142754)).
Proof. exact (eq_refl (@ex (cart _142753 _142754))). Qed.
Lemma lem8047442 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1650 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1841 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (MK_COMB (@lem8047441 _142753 _142754) (@lem8047440 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047443 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) : (term1632 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) = (term1841 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g).
Proof. exact (TRANS (@lem8047113 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) (@lem8047442 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047444 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1634 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1842 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (fun_ext (fun g : type56 _142753 _142755 => @lem8047443 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g)). Qed.
Lemma lem8047445 {_142753 _142755 : Type'} : (@ex (((cart _142753 _142755) -> Prop) -> Prop)) = (@ex (((cart _142753 _142755) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142755) -> Prop) -> Prop))). Qed.
Lemma lem8047446 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1635 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1843 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (MK_COMB (@lem8047445 _142753 _142755) (@lem8047444 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047447 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) : (term1617 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) = (term1843 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f).
Proof. exact (TRANS (@lem8047087 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) (@lem8047446 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047448 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1619 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1844 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (fun_ext (fun f : type56 _142753 _142754 => @lem8047447 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f)). Qed.
Lemma lem8047449 {_142753 _142754 : Type'} : (@ex (((cart _142753 _142754) -> Prop) -> Prop)) = (@ex (((cart _142753 _142754) -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((cart _142753 _142754) -> Prop) -> Prop))). Qed.
Lemma lem8047450 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1620 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (MK_COMB (@lem8047449 _142753 _142754) (@lem8047448 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047451 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term1605 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8047061 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047450 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047452 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term896 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8047035 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047451 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047453 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term626 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8045875 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047452 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047454 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = (term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837).
Proof. exact (TRANS (@lem8041937 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8047453 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8047455 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : term1845 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8047454 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8041518 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8047456 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (h1 : term1843 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) : term1843 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f.
Proof. exact (h1). Qed.
Lemma lem8047457 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (h1 : term1841 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) : term1841 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g.
Proof. exact (h1). Qed.
Lemma lem8047458 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (h1 : term1839 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) : term1839 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x.
Proof. exact (h1). Qed.
Lemma lem8047459 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1837 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) : term1837 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y.
Proof. exact (h1). Qed.
Lemma lem8047460 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1835 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) : term1835 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y.
Proof. exact (h1). Qed.
Lemma lem8047461 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1833 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) : term1833 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y.
Proof. exact (h1). Qed.
Lemma lem8047462 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) (h1 : term1831 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) : term1831 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s.
Proof. exact (h1). Qed.
Lemma lem8047463 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (h1 : term1829 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) : term1829 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s.
Proof. exact (h1). Qed.
Lemma lem8047464 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (h1 : term1827 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') : term1827 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x'.
Proof. exact (h1). Qed.
Lemma lem8047465 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') : term1825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y'.
Proof. exact (h1). Qed.
Lemma lem8047466 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') : term1823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y'.
Proof. exact (h1). Qed.
Lemma lem8047467 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (h1 : term1821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') : term1821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f''.
Proof. exact (h1). Qed.
Lemma lem8047468 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) (h1 : term1819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') : term1819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''.
Proof. exact (h1). Qed.
Lemma lem8047469 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (h1 : term1817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') : term1817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t'''.
Proof. exact (h1). Qed.
Lemma lem8047470 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') : term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8047471 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'') : term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8047476 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047477 {_142835 _142837 : Type'} (f : type24 _142835 _142837) (x : cart _142835 _142837) : (f x) = (@I ((cart _142835 _142837) -> Prop) f x).
Proof. exact (@lem8047476 (cart _142835 _142837) Prop f x). Qed.
Lemma lem8047479 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8047477 _142835 _142837 t''' y''). Qed.
Lemma lem8047484 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047485 {_142835 _142836 : Type'} (f : type24 _142835 _142836) (x : cart _142835 _142836) : (f x) = (@I ((cart _142835 _142836) -> Prop) f x).
Proof. exact (@lem8047484 (cart _142835 _142836) Prop f x). Qed.
Lemma lem8047487 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (t'''' x'') = (@I ((cart _142835 _142836) -> Prop) t'''' x'').
Proof. exact (@lem8047485 _142835 _142836 t'''' x''). Qed.
Lemma lem8047488 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047489 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term371 _142835 _142836 t'''' x'') = (term1846 _142835 _142836 t'''' x'').
Proof. exact (MK_COMB (@lem8047488) (@lem8047487 _142835 _142836 t'''' x'')). Qed.
Lemma lem8047490 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term372 _142835 _142836 _142837 t'''' x'' t''' y'') = (term1847 _142835 _142836 _142837 t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047489 _142835 _142836 t'''' x'') (@lem8047479 _142835 _142837 t''' y'')). Qed.
Lemma lem8047495 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047496 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : type24 _142835 _142836) : (f x) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f x).
Proof. exact (@lem8047495 (type24 _142835 _142836) Prop f x). Qed.
Lemma lem8047498 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (f'' t'''') = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''').
Proof. exact (@lem8047496 _142835 _142836 f'' t''''). Qed.
Lemma lem8047499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047500 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (term358 _142835 _142836 f'' t'''') = (term1848 _142835 _142836 f'' t'''').
Proof. exact (MK_COMB (@lem8047499) (@lem8047498 _142835 _142836 f'' t'''')). Qed.
Lemma lem8047501 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term403 _142835 _142836 _142837 f'' t'''' x'' t''' y'') = (term1849 _142835 _142836 _142837 f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047500 _142835 _142836 f'' t'''') (@lem8047490 _142835 _142836 _142837 t'''' x'' t''' y'')). Qed.
Lemma lem8047502 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047507 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047508 {_142835 _142837 : Type'} (f : type24 _142835 _142837) (x : cart _142835 _142837) : (f x) = (@I ((cart _142835 _142837) -> Prop) f x).
Proof. exact (@lem8047507 (cart _142835 _142837) Prop f x). Qed.
Lemma lem8047510 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8047508 _142835 _142837 t''' y''). Qed.
Lemma lem8047511 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term564 _142835 _142837 t''' y'') = (term1850 _142835 _142837 t''' y'').
Proof. exact (MK_COMB (@lem8047502) (@lem8047510 _142835 _142837 t''' y'')). Qed.
Lemma lem8047512 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047517 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047518 {_142835 _142836 : Type'} (f : type24 _142835 _142836) (x : cart _142835 _142836) : (f x) = (@I ((cart _142835 _142836) -> Prop) f x).
Proof. exact (@lem8047517 (cart _142835 _142836) Prop f x). Qed.
Lemma lem8047520 {_142835 _142836 : Type'} (t : type24 _142835 _142836) (x'' : cart _142835 _142836) : (t x'') = (@I ((cart _142835 _142836) -> Prop) t x'').
Proof. exact (@lem8047518 _142835 _142836 t x''). Qed.
Lemma lem8047521 {_142835 _142836 : Type'} (t : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term564 _142835 _142836 t x'') = (term1850 _142835 _142836 t x'').
Proof. exact (MK_COMB (@lem8047512) (@lem8047520 _142835 _142836 t x'')). Qed.
Lemma lem8047522 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047527 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047528 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : type24 _142835 _142836) : (f x) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f x).
Proof. exact (@lem8047527 (type24 _142835 _142836) Prop f x). Qed.
Lemma lem8047530 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t : type24 _142835 _142836) : (f'' t) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t).
Proof. exact (@lem8047528 _142835 _142836 f'' t). Qed.
Lemma lem8047531 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t : type24 _142835 _142836) : (term1851 _142835 _142836 f'' t) = (term1852 _142835 _142836 f'' t).
Proof. exact (MK_COMB (@lem8047522) (@lem8047530 _142835 _142836 f'' t)). Qed.
Lemma lem8047532 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047533 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t : type24 _142835 _142836) : (term511 _142835 _142836 f'' t) = (term1853 _142835 _142836 f'' t).
Proof. exact (MK_COMB (@lem8047532) (@lem8047531 _142835 _142836 f'' t)). Qed.
Lemma lem8047534 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term425 _142835 _142836 f'' t x'') = (term1854 _142835 _142836 f'' t x'').
Proof. exact (MK_COMB (@lem8047533 _142835 _142836 f'' t) (@lem8047521 _142835 _142836 t x'')). Qed.
Lemma lem8047535 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) : (term433 _142835 _142836 f'' x'') = (term1855 _142835 _142836 f'' x'').
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8047534 _142835 _142836 f'' t x'')). Qed.
Lemma lem8047536 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8047537 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) : (term434 _142835 _142836 f'' x'') = (term1856 _142835 _142836 f'' x'').
Proof. exact (MK_COMB (@lem8047536 _142835 _142836) (@lem8047535 _142835 _142836 f'' x'')). Qed.
Lemma lem8047538 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047539 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) : (term436 _142835 _142836 f'' x'') = (term1857 _142835 _142836 f'' x'').
Proof. exact (MK_COMB (@lem8047538) (@lem8047537 _142835 _142836 f'' x'')). Qed.
Lemma lem8047540 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term566 _142835 _142836 _142837 f'' x'' t''' y'') = (term1858 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047539 _142835 _142836 f'' x'') (@lem8047511 _142835 _142837 t''' y'')). Qed.
Lemma lem8047541 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047542 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term579 _142835 _142836 _142837 f'' x'' t''' y'') = (term1859 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047541) (@lem8047540 _142835 _142836 _142837 f'' x'' t''' y'')). Qed.
Lemma lem8047543 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1321 _142835 _142836 _142837 f'' t'''' x'' t''' y'') = (term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047542 _142835 _142836 _142837 f'' x'' t''' y'') (@lem8047501 _142835 _142836 _142837 f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047544 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047549 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047550 {_142835 _142837 : Type'} (f : type24 _142835 _142837) (x : cart _142835 _142837) : (f x) = (@I ((cart _142835 _142837) -> Prop) f x).
Proof. exact (@lem8047549 (cart _142835 _142837) Prop f x). Qed.
Lemma lem8047552 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8047550 _142835 _142837 t''' y''). Qed.
Lemma lem8047553 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term564 _142835 _142837 t''' y'') = (term1850 _142835 _142837 t''' y'').
Proof. exact (MK_COMB (@lem8047544) (@lem8047552 _142835 _142837 t''' y'')). Qed.
Lemma lem8047554 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047559 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047560 {_142835 _142836 : Type'} (f : type24 _142835 _142836) (x : cart _142835 _142836) : (f x) = (@I ((cart _142835 _142836) -> Prop) f x).
Proof. exact (@lem8047559 (cart _142835 _142836) Prop f x). Qed.
Lemma lem8047562 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (x'' : cart _142835 _142836) : (s x'') = (@I ((cart _142835 _142836) -> Prop) s x'').
Proof. exact (@lem8047560 _142835 _142836 s x''). Qed.
Lemma lem8047563 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term564 _142835 _142836 s x'') = (term1850 _142835 _142836 s x'').
Proof. exact (MK_COMB (@lem8047554) (@lem8047562 _142835 _142836 s x'')). Qed.
Lemma lem8047564 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047565 {_142835 _142836 : Type'} (s : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term507 _142835 _142836 s x'') = (term1861 _142835 _142836 s x'').
Proof. exact (MK_COMB (@lem8047564) (@lem8047563 _142835 _142836 s x'')). Qed.
Lemma lem8047566 {_142835 _142836 _142837 : Type'} (s : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term443 _142835 _142836 _142837 s x'' t''' y'') = (term1862 _142835 _142836 _142837 s x'' t''' y'').
Proof. exact (MK_COMB (@lem8047565 _142835 _142836 s x'') (@lem8047553 _142835 _142837 t''' y'')). Qed.
Lemma lem8047567 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047572 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047573 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : type24 _142835 _142836) : (f x) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f x).
Proof. exact (@lem8047572 (type24 _142835 _142836) Prop f x). Qed.
Lemma lem8047575 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (s : type24 _142835 _142836) : (f'' s) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' s).
Proof. exact (@lem8047573 _142835 _142836 f'' s). Qed.
Lemma lem8047576 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (s : type24 _142835 _142836) : (term1851 _142835 _142836 f'' s) = (term1852 _142835 _142836 f'' s).
Proof. exact (MK_COMB (@lem8047567) (@lem8047575 _142835 _142836 f'' s)). Qed.
Lemma lem8047577 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047578 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (s : type24 _142835 _142836) : (term511 _142835 _142836 f'' s) = (term1853 _142835 _142836 f'' s).
Proof. exact (MK_COMB (@lem8047577) (@lem8047576 _142835 _142836 f'' s)). Qed.
Lemma lem8047579 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (s : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term569 _142835 _142836 _142837 f'' s x'' t''' y'') = (term1863 _142835 _142836 _142837 f'' s x'' t''' y'').
Proof. exact (MK_COMB (@lem8047578 _142835 _142836 f'' s) (@lem8047566 _142835 _142836 _142837 s x'' t''' y'')). Qed.
Lemma lem8047580 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term576 _142835 _142836 _142837 f'' x'' t''' y'') = (term1864 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8047579 _142835 _142836 _142837 f'' s x'' t''' y'')). Qed.
Lemma lem8047581 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8047582 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term577 _142835 _142836 _142837 f'' x'' t''' y'') = (term1865 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047581 _142835 _142836) (@lem8047580 _142835 _142836 _142837 f'' x'' t''' y'')). Qed.
Lemma lem8047587 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047588 {_142835 _142837 : Type'} (f : type24 _142835 _142837) (x : cart _142835 _142837) : (f x) = (@I ((cart _142835 _142837) -> Prop) f x).
Proof. exact (@lem8047587 (cart _142835 _142837) Prop f x). Qed.
Lemma lem8047590 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8047588 _142835 _142837 t''' y''). Qed.
Lemma lem8047595 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047596 {_142835 _142836 : Type'} (f : type24 _142835 _142836) (x : cart _142835 _142836) : (f x) = (@I ((cart _142835 _142836) -> Prop) f x).
Proof. exact (@lem8047595 (cart _142835 _142836) Prop f x). Qed.
Lemma lem8047598 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (t'''' x'') = (@I ((cart _142835 _142836) -> Prop) t'''' x'').
Proof. exact (@lem8047596 _142835 _142836 t'''' x''). Qed.
Lemma lem8047603 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047604 {_142835 _142836 : Type'} (f : type56 _142835 _142836) (x : type24 _142835 _142836) : (f x) = (@I (((cart _142835 _142836) -> Prop) -> Prop) f x).
Proof. exact (@lem8047603 (type24 _142835 _142836) Prop f x). Qed.
Lemma lem8047606 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (f'' t'''') = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''').
Proof. exact (@lem8047604 _142835 _142836 f'' t''''). Qed.
Lemma lem8047607 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047608 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (term358 _142835 _142836 f'' t'''') = (term1848 _142835 _142836 f'' t'''').
Proof. exact (MK_COMB (@lem8047607) (@lem8047606 _142835 _142836 f'' t'''')). Qed.
Lemma lem8047609 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term360 _142835 _142836 f'' t'''' x'') = (term1866 _142835 _142836 f'' t'''' x'').
Proof. exact (MK_COMB (@lem8047608 _142835 _142836 f'' t'''') (@lem8047598 _142835 _142836 t'''' x'')). Qed.
Lemma lem8047610 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047611 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term908 _142835 _142836 f'' t'''' x'') = (term1867 _142835 _142836 f'' t'''' x'').
Proof. exact (MK_COMB (@lem8047610) (@lem8047609 _142835 _142836 f'' t'''' x'')). Qed.
Lemma lem8047612 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1284 _142835 _142836 _142837 f'' t'''' x'' t''' y'') = (term1868 _142835 _142836 _142837 f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047611 _142835 _142836 f'' t'''' x'') (@lem8047590 _142835 _142837 t''' y'')). Qed.
Lemma lem8047613 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047614 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1299 _142835 _142836 _142837 f'' t'''' x'' t''' y'') = (term1869 _142835 _142836 _142837 f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047613) (@lem8047612 _142835 _142836 _142837 f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047615 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1301 _142835 _142836 _142837 t'''' f'' x'' t''' y'') = (term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047614 _142835 _142836 _142837 f'' t'''' x'' t''' y'') (@lem8047582 _142835 _142836 _142837 f'' x'' t''' y'')). Qed.
Lemma lem8047616 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047617 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1418 _142835 _142836 _142837 t'''' f'' x'' t''' y'') = (term1871 _142835 _142836 _142837 t'''' f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047616) (@lem8047615 _142835 _142836 _142837 t'''' f'' x'' t''' y'')). Qed.
Lemma lem8047618 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1420 _142835 _142836 _142837 f'' t'''' x'' t''' y'') = (term1872 _142835 _142836 _142837 f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047617 _142835 _142836 _142837 t'''' f'' x'' t''' y'') (@lem8047543 _142835 _142836 _142837 f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047623 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047624 {_142795 _142797 : Type'} (f : type24 _142795 _142797) (x : cart _142795 _142797) : (f x) = (@I ((cart _142795 _142797) -> Prop) f x).
Proof. exact (@lem8047623 (cart _142795 _142797) Prop f x). Qed.
Lemma lem8047626 {_142795 _142797 : Type'} (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (t'' y') = (@I ((cart _142795 _142797) -> Prop) t'' y').
Proof. exact (@lem8047624 _142795 _142797 t'' y'). Qed.
Lemma lem8047631 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047632 {_142795 _142796 : Type'} (f : type24 _142795 _142796) (x : cart _142795 _142796) : (f x) = (@I ((cart _142795 _142796) -> Prop) f x).
Proof. exact (@lem8047631 (cart _142795 _142796) Prop f x). Qed.
Lemma lem8047634 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8047632 _142795 _142796 s x'). Qed.
Lemma lem8047635 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047636 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term371 _142795 _142796 s x') = (term1846 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047635) (@lem8047634 _142795 _142796 s x')). Qed.
Lemma lem8047637 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term372 _142795 _142796 _142797 s x' t'' y') = (term1847 _142795 _142796 _142797 s x' t'' y').
Proof. exact (MK_COMB (@lem8047636 _142795 _142796 s x') (@lem8047626 _142795 _142797 t'' y')). Qed.
Lemma lem8047642 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047643 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (x : type24 _142795 _142797) : (f x) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f x).
Proof. exact (@lem8047642 (type24 _142795 _142797) Prop f x). Qed.
Lemma lem8047645 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (f' t'') = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'').
Proof. exact (@lem8047643 _142795 _142797 f' t''). Qed.
Lemma lem8047646 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047647 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (term358 _142795 _142797 f' t'') = (term1848 _142795 _142797 f' t'').
Proof. exact (MK_COMB (@lem8047646) (@lem8047645 _142795 _142797 f' t'')). Qed.
Lemma lem8047648 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term389 _142795 _142796 _142797 f' s x' t'' y') = (term1873 _142795 _142796 _142797 f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047647 _142795 _142797 f' t'') (@lem8047637 _142795 _142796 _142797 s x' t'' y')). Qed.
Lemma lem8047649 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047655 {_142795 _142797 : Type'} (f : type24 _142795 _142797) (x : cart _142795 _142797) : (f x) = (@I ((cart _142795 _142797) -> Prop) f x).
Proof. exact (@lem8047654 (cart _142795 _142797) Prop f x). Qed.
Lemma lem8047657 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (t y') = (@I ((cart _142795 _142797) -> Prop) t y').
Proof. exact (@lem8047655 _142795 _142797 t y'). Qed.
Lemma lem8047658 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term564 _142795 _142797 t y') = (term1850 _142795 _142797 t y').
Proof. exact (MK_COMB (@lem8047649) (@lem8047657 _142795 _142797 t y')). Qed.
Lemma lem8047659 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047664 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047665 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (x : type24 _142795 _142797) : (f x) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f x).
Proof. exact (@lem8047664 (type24 _142795 _142797) Prop f x). Qed.
Lemma lem8047667 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (f' t) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t).
Proof. exact (@lem8047665 _142795 _142797 f' t). Qed.
Lemma lem8047668 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (term1851 _142795 _142797 f' t) = (term1852 _142795 _142797 f' t).
Proof. exact (MK_COMB (@lem8047659) (@lem8047667 _142795 _142797 f' t)). Qed.
Lemma lem8047669 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047670 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (term511 _142795 _142797 f' t) = (term1853 _142795 _142797 f' t).
Proof. exact (MK_COMB (@lem8047669) (@lem8047668 _142795 _142797 f' t)). Qed.
Lemma lem8047671 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term425 _142795 _142797 f' t y') = (term1854 _142795 _142797 f' t y').
Proof. exact (MK_COMB (@lem8047670 _142795 _142797 f' t) (@lem8047658 _142795 _142797 t y')). Qed.
Lemma lem8047672 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term433 _142795 _142797 f' y') = (term1855 _142795 _142797 f' y').
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8047671 _142795 _142797 f' t y')). Qed.
Lemma lem8047673 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047674 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term434 _142795 _142797 f' y') = (term1856 _142795 _142797 f' y').
Proof. exact (MK_COMB (@lem8047673 _142795 _142797) (@lem8047672 _142795 _142797 f' y')). Qed.
Lemma lem8047675 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047680 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047681 {_142795 _142796 : Type'} (f : type24 _142795 _142796) (x : cart _142795 _142796) : (f x) = (@I ((cart _142795 _142796) -> Prop) f x).
Proof. exact (@lem8047680 (cart _142795 _142796) Prop f x). Qed.
Lemma lem8047683 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8047681 _142795 _142796 s x'). Qed.
Lemma lem8047684 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term564 _142795 _142796 s x') = (term1850 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047675) (@lem8047683 _142795 _142796 s x')). Qed.
Lemma lem8047685 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047686 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term507 _142795 _142796 s x') = (term1861 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047685) (@lem8047684 _142795 _142796 s x')). Qed.
Lemma lem8047687 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term509 _142795 _142796 _142797 s x' f' y') = (term1874 _142795 _142796 _142797 s x' f' y').
Proof. exact (MK_COMB (@lem8047686 _142795 _142796 s x') (@lem8047674 _142795 _142797 f' y')). Qed.
Lemma lem8047688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047689 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term523 _142795 _142796 _142797 s x' f' y') = (term1875 _142795 _142796 _142797 s x' f' y').
Proof. exact (MK_COMB (@lem8047688) (@lem8047687 _142795 _142796 _142797 s x' f' y')). Qed.
Lemma lem8047690 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1168 _142795 _142796 _142797 f' s x' t'' y') = (term1876 _142795 _142796 _142797 f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047689 _142795 _142796 _142797 s x' f' y') (@lem8047648 _142795 _142796 _142797 f' s x' t'' y')). Qed.
Lemma lem8047691 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047696 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047697 {_142795 _142797 : Type'} (f : type24 _142795 _142797) (x : cart _142795 _142797) : (f x) = (@I ((cart _142795 _142797) -> Prop) f x).
Proof. exact (@lem8047696 (cart _142795 _142797) Prop f x). Qed.
Lemma lem8047699 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (t y') = (@I ((cart _142795 _142797) -> Prop) t y').
Proof. exact (@lem8047697 _142795 _142797 t y'). Qed.
Lemma lem8047700 {_142795 _142797 : Type'} (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term564 _142795 _142797 t y') = (term1850 _142795 _142797 t y').
Proof. exact (MK_COMB (@lem8047691) (@lem8047699 _142795 _142797 t y')). Qed.
Lemma lem8047701 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047706 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047707 {_142795 _142796 : Type'} (f : type24 _142795 _142796) (x : cart _142795 _142796) : (f x) = (@I ((cart _142795 _142796) -> Prop) f x).
Proof. exact (@lem8047706 (cart _142795 _142796) Prop f x). Qed.
Lemma lem8047709 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8047707 _142795 _142796 s x'). Qed.
Lemma lem8047710 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term564 _142795 _142796 s x') = (term1850 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047701) (@lem8047709 _142795 _142796 s x')). Qed.
Lemma lem8047711 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047712 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term507 _142795 _142796 s x') = (term1861 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047711) (@lem8047710 _142795 _142796 s x')). Qed.
Lemma lem8047713 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term443 _142795 _142796 _142797 s x' t y') = (term1862 _142795 _142796 _142797 s x' t y').
Proof. exact (MK_COMB (@lem8047712 _142795 _142796 s x') (@lem8047700 _142795 _142797 t y')). Qed.
Lemma lem8047714 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047720 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (x : type24 _142795 _142797) : (f x) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f x).
Proof. exact (@lem8047719 (type24 _142795 _142797) Prop f x). Qed.
Lemma lem8047722 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (f' t) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t).
Proof. exact (@lem8047720 _142795 _142797 f' t). Qed.
Lemma lem8047723 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (term1851 _142795 _142797 f' t) = (term1852 _142795 _142797 f' t).
Proof. exact (MK_COMB (@lem8047714) (@lem8047722 _142795 _142797 f' t)). Qed.
Lemma lem8047724 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047725 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) : (term511 _142795 _142797 f' t) = (term1853 _142795 _142797 f' t).
Proof. exact (MK_COMB (@lem8047724) (@lem8047723 _142795 _142797 f' t)). Qed.
Lemma lem8047726 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term513 _142795 _142796 _142797 f' s x' t y') = (term1877 _142795 _142796 _142797 f' s x' t y').
Proof. exact (MK_COMB (@lem8047725 _142795 _142797 f' t) (@lem8047713 _142795 _142796 _142797 s x' t y')). Qed.
Lemma lem8047727 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term520 _142795 _142796 _142797 f' s x' y') = (term1878 _142795 _142796 _142797 f' s x' y').
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8047726 _142795 _142796 _142797 f' s x' t y')). Qed.
Lemma lem8047728 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8047729 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term521 _142795 _142796 _142797 f' s x' y') = (term1879 _142795 _142796 _142797 f' s x' y').
Proof. exact (MK_COMB (@lem8047728 _142795 _142797) (@lem8047727 _142795 _142796 _142797 f' s x' y')). Qed.
Lemma lem8047734 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047735 {_142795 _142797 : Type'} (f : type24 _142795 _142797) (x : cart _142795 _142797) : (f x) = (@I ((cart _142795 _142797) -> Prop) f x).
Proof. exact (@lem8047734 (cart _142795 _142797) Prop f x). Qed.
Lemma lem8047737 {_142795 _142797 : Type'} (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (t'' y') = (@I ((cart _142795 _142797) -> Prop) t'' y').
Proof. exact (@lem8047735 _142795 _142797 t'' y'). Qed.
Lemma lem8047742 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047743 {_142795 _142797 : Type'} (f : type56 _142795 _142797) (x : type24 _142795 _142797) : (f x) = (@I (((cart _142795 _142797) -> Prop) -> Prop) f x).
Proof. exact (@lem8047742 (type24 _142795 _142797) Prop f x). Qed.
Lemma lem8047745 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (f' t'') = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'').
Proof. exact (@lem8047743 _142795 _142797 f' t''). Qed.
Lemma lem8047746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047747 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (term358 _142795 _142797 f' t'') = (term1848 _142795 _142797 f' t'').
Proof. exact (MK_COMB (@lem8047746) (@lem8047745 _142795 _142797 f' t'')). Qed.
Lemma lem8047748 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term360 _142795 _142797 f' t'' y') = (term1866 _142795 _142797 f' t'' y').
Proof. exact (MK_COMB (@lem8047747 _142795 _142797 f' t'') (@lem8047737 _142795 _142797 t'' y')). Qed.
Lemma lem8047753 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047754 {_142795 _142796 : Type'} (f : type24 _142795 _142796) (x : cart _142795 _142796) : (f x) = (@I ((cart _142795 _142796) -> Prop) f x).
Proof. exact (@lem8047753 (cart _142795 _142796) Prop f x). Qed.
Lemma lem8047756 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8047754 _142795 _142796 s x'). Qed.
Lemma lem8047757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047758 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term371 _142795 _142796 s x') = (term1846 _142795 _142796 s x').
Proof. exact (MK_COMB (@lem8047757) (@lem8047756 _142795 _142796 s x')). Qed.
Lemma lem8047759 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1131 _142795 _142796 _142797 s x' f' t'' y') = (term1880 _142795 _142796 _142797 s x' f' t'' y').
Proof. exact (MK_COMB (@lem8047758 _142795 _142796 s x') (@lem8047748 _142795 _142797 f' t'' y')). Qed.
Lemma lem8047760 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047761 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1146 _142795 _142796 _142797 s x' f' t'' y') = (term1881 _142795 _142796 _142797 s x' f' t'' y').
Proof. exact (MK_COMB (@lem8047760) (@lem8047759 _142795 _142796 _142797 s x' f' t'' y')). Qed.
Lemma lem8047762 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1148 _142795 _142796 _142797 t'' f' s x' y') = (term1882 _142795 _142796 _142797 t'' f' s x' y').
Proof. exact (MK_COMB (@lem8047761 _142795 _142796 _142797 s x' f' t'' y') (@lem8047729 _142795 _142796 _142797 f' s x' y')). Qed.
Lemma lem8047763 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047764 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1265 _142795 _142796 _142797 t'' f' s x' y') = (term1883 _142795 _142796 _142797 t'' f' s x' y').
Proof. exact (MK_COMB (@lem8047763) (@lem8047762 _142795 _142796 _142797 t'' f' s x' y')). Qed.
Lemma lem8047765 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1267 _142795 _142796 _142797 f' s x' t'' y') = (term1884 _142795 _142796 _142797 f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047764 _142795 _142796 _142797 t'' f' s x' y') (@lem8047690 _142795 _142796 _142797 f' s x' t'' y')). Qed.
Lemma lem8047766 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047767 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1513 _142795 _142796 _142797 f' s x' t'' y') = (term1885 _142795 _142796 _142797 f' s x' t'' y').
Proof. exact (MK_COMB (@lem8047766) (@lem8047765 _142795 _142796 _142797 f' s x' t'' y')). Qed.
Lemma lem8047768 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1583 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'') = (term1886 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047767 _142795 _142796 _142797 f' s x' t'' y') (@lem8047618 _142835 _142836 _142837 f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047773 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047774 {_142753 _142755 : Type'} (f : type24 _142753 _142755) (x : cart _142753 _142755) : (f x) = (@I ((cart _142753 _142755) -> Prop) f x).
Proof. exact (@lem8047773 (cart _142753 _142755) Prop f x). Qed.
Lemma lem8047776 {_142753 _142755 : Type'} (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (t' y) = (@I ((cart _142753 _142755) -> Prop) t' y).
Proof. exact (@lem8047774 _142753 _142755 t' y). Qed.
Lemma lem8047781 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047782 {_142753 _142754 : Type'} (f : type24 _142753 _142754) (x : cart _142753 _142754) : (f x) = (@I ((cart _142753 _142754) -> Prop) f x).
Proof. exact (@lem8047781 (cart _142753 _142754) Prop f x). Qed.
Lemma lem8047784 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (t x) = (@I ((cart _142753 _142754) -> Prop) t x).
Proof. exact (@lem8047782 _142753 _142754 t x). Qed.
Lemma lem8047785 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047786 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term371 _142753 _142754 t x) = (term1846 _142753 _142754 t x).
Proof. exact (MK_COMB (@lem8047785) (@lem8047784 _142753 _142754 t x)). Qed.
Lemma lem8047787 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term372 _142753 _142754 _142755 t x t' y) = (term1847 _142753 _142754 _142755 t x t' y).
Proof. exact (MK_COMB (@lem8047786 _142753 _142754 t x) (@lem8047776 _142753 _142755 t' y)). Qed.
Lemma lem8047792 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047793 {_142753 _142755 : Type'} (f : type56 _142753 _142755) (x : type24 _142753 _142755) : (f x) = (@I (((cart _142753 _142755) -> Prop) -> Prop) f x).
Proof. exact (@lem8047792 (type24 _142753 _142755) Prop f x). Qed.
Lemma lem8047795 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (g t') = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t').
Proof. exact (@lem8047793 _142753 _142755 g t'). Qed.
Lemma lem8047800 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047801 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : type24 _142753 _142754) : (f x) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f x).
Proof. exact (@lem8047800 (type24 _142753 _142754) Prop f x). Qed.
Lemma lem8047803 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (f t) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f t).
Proof. exact (@lem8047801 _142753 _142754 f t). Qed.
Lemma lem8047804 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047805 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term358 _142753 _142754 f t) = (term1848 _142753 _142754 f t).
Proof. exact (MK_COMB (@lem8047804) (@lem8047803 _142753 _142754 f t)). Qed.
Lemma lem8047806 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (term368 _142753 _142754 _142755 f t g t') = (term1887 _142753 _142754 _142755 f t g t').
Proof. exact (MK_COMB (@lem8047805 _142753 _142754 f t) (@lem8047795 _142753 _142755 g t')). Qed.
Lemma lem8047807 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047808 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (term369 _142753 _142754 _142755 f t g t') = (term1888 _142753 _142754 _142755 f t g t').
Proof. exact (MK_COMB (@lem8047807) (@lem8047806 _142753 _142754 _142755 f t g t')). Qed.
Lemma lem8047809 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term373 _142753 _142754 _142755 f g t x t' y) = (term1889 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8047808 _142753 _142754 _142755 f t g t') (@lem8047787 _142753 _142754 _142755 t x t' y)). Qed.
Lemma lem8047810 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047815 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047816 {_142753 _142755 : Type'} (f : type24 _142753 _142755) (x : cart _142753 _142755) : (f x) = (@I ((cart _142753 _142755) -> Prop) f x).
Proof. exact (@lem8047815 (cart _142753 _142755) Prop f x). Qed.
Lemma lem8047818 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (t y) = (@I ((cart _142753 _142755) -> Prop) t y).
Proof. exact (@lem8047816 _142753 _142755 t y). Qed.
Lemma lem8047819 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term564 _142753 _142755 t y) = (term1850 _142753 _142755 t y).
Proof. exact (MK_COMB (@lem8047810) (@lem8047818 _142753 _142755 t y)). Qed.
Lemma lem8047820 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047825 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047826 {_142753 _142755 : Type'} (f : type56 _142753 _142755) (x : type24 _142753 _142755) : (f x) = (@I (((cart _142753 _142755) -> Prop) -> Prop) f x).
Proof. exact (@lem8047825 (type24 _142753 _142755) Prop f x). Qed.
Lemma lem8047828 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (g t) = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t).
Proof. exact (@lem8047826 _142753 _142755 g t). Qed.
Lemma lem8047829 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term1851 _142753 _142755 g t) = (term1852 _142753 _142755 g t).
Proof. exact (MK_COMB (@lem8047820) (@lem8047828 _142753 _142755 g t)). Qed.
Lemma lem8047830 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047831 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term511 _142753 _142755 g t) = (term1853 _142753 _142755 g t).
Proof. exact (MK_COMB (@lem8047830) (@lem8047829 _142753 _142755 g t)). Qed.
Lemma lem8047832 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term425 _142753 _142755 g t y) = (term1854 _142753 _142755 g t y).
Proof. exact (MK_COMB (@lem8047831 _142753 _142755 g t) (@lem8047819 _142753 _142755 t y)). Qed.
Lemma lem8047833 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term433 _142753 _142755 g y) = (term1855 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8047832 _142753 _142755 g t y)). Qed.
Lemma lem8047834 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8047835 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term434 _142753 _142755 g y) = (term1856 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8047834 _142753 _142755) (@lem8047833 _142753 _142755 g y)). Qed.
Lemma lem8047836 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047841 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047842 {_142753 _142754 : Type'} (f : type24 _142753 _142754) (x : cart _142753 _142754) : (f x) = (@I ((cart _142753 _142754) -> Prop) f x).
Proof. exact (@lem8047841 (cart _142753 _142754) Prop f x). Qed.
Lemma lem8047844 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (t x) = (@I ((cart _142753 _142754) -> Prop) t x).
Proof. exact (@lem8047842 _142753 _142754 t x). Qed.
Lemma lem8047845 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term564 _142753 _142754 t x) = (term1850 _142753 _142754 t x).
Proof. exact (MK_COMB (@lem8047836) (@lem8047844 _142753 _142754 t x)). Qed.
Lemma lem8047846 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047851 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047852 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : type24 _142753 _142754) : (f x) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f x).
Proof. exact (@lem8047851 (type24 _142753 _142754) Prop f x). Qed.
Lemma lem8047854 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (f t) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f t).
Proof. exact (@lem8047852 _142753 _142754 f t). Qed.
Lemma lem8047855 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term1851 _142753 _142754 f t) = (term1852 _142753 _142754 f t).
Proof. exact (MK_COMB (@lem8047846) (@lem8047854 _142753 _142754 f t)). Qed.
Lemma lem8047856 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047857 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term511 _142753 _142754 f t) = (term1853 _142753 _142754 f t).
Proof. exact (MK_COMB (@lem8047856) (@lem8047855 _142753 _142754 f t)). Qed.
Lemma lem8047858 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term425 _142753 _142754 f t x) = (term1854 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8047857 _142753 _142754 f t) (@lem8047845 _142753 _142754 t x)). Qed.
Lemma lem8047859 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term433 _142753 _142754 f x) = (term1855 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8047858 _142753 _142754 f t x)). Qed.
Lemma lem8047860 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8047861 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term434 _142753 _142754 f x) = (term1856 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8047860 _142753 _142754) (@lem8047859 _142753 _142754 f x)). Qed.
Lemma lem8047862 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047863 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term436 _142753 _142754 f x) = (term1857 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8047862) (@lem8047861 _142753 _142754 f x)). Qed.
Lemma lem8047864 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term438 _142753 _142754 _142755 f x g y) = (term1890 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8047863 _142753 _142754 f x) (@lem8047835 _142753 _142755 g y)). Qed.
Lemma lem8047865 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047866 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term464 _142753 _142754 _142755 f x g y) = (term1891 _142753 _142754 _142755 f x g y).
Proof. exact (MK_COMB (@lem8047865) (@lem8047864 _142753 _142754 _142755 f x g y)). Qed.
Lemma lem8047867 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term990 _142753 _142754 _142755 f g t x t' y) = (term1892 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8047866 _142753 _142754 _142755 f x g y) (@lem8047809 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047868 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047873 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047874 {_142753 _142755 : Type'} (f : type24 _142753 _142755) (x : cart _142753 _142755) : (f x) = (@I ((cart _142753 _142755) -> Prop) f x).
Proof. exact (@lem8047873 (cart _142753 _142755) Prop f x). Qed.
Lemma lem8047876 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (t y) = (@I ((cart _142753 _142755) -> Prop) t y).
Proof. exact (@lem8047874 _142753 _142755 t y). Qed.
Lemma lem8047877 {_142753 _142755 : Type'} (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term564 _142753 _142755 t y) = (term1850 _142753 _142755 t y).
Proof. exact (MK_COMB (@lem8047868) (@lem8047876 _142753 _142755 t y)). Qed.
Lemma lem8047878 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047883 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047884 {_142753 _142754 : Type'} (f : type24 _142753 _142754) (x : cart _142753 _142754) : (f x) = (@I ((cart _142753 _142754) -> Prop) f x).
Proof. exact (@lem8047883 (cart _142753 _142754) Prop f x). Qed.
Lemma lem8047886 {_142753 _142754 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) : (s x) = (@I ((cart _142753 _142754) -> Prop) s x).
Proof. exact (@lem8047884 _142753 _142754 s x). Qed.
Lemma lem8047887 {_142753 _142754 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) : (term564 _142753 _142754 s x) = (term1850 _142753 _142754 s x).
Proof. exact (MK_COMB (@lem8047878) (@lem8047886 _142753 _142754 s x)). Qed.
Lemma lem8047888 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047889 {_142753 _142754 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) : (term507 _142753 _142754 s x) = (term1861 _142753 _142754 s x).
Proof. exact (MK_COMB (@lem8047888) (@lem8047887 _142753 _142754 s x)). Qed.
Lemma lem8047890 {_142753 _142754 _142755 : Type'} (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term443 _142753 _142754 _142755 s x t y) = (term1862 _142753 _142754 _142755 s x t y).
Proof. exact (MK_COMB (@lem8047889 _142753 _142754 s x) (@lem8047877 _142753 _142755 t y)). Qed.
Lemma lem8047891 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047896 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047897 {_142753 _142755 : Type'} (f : type56 _142753 _142755) (x : type24 _142753 _142755) : (f x) = (@I (((cart _142753 _142755) -> Prop) -> Prop) f x).
Proof. exact (@lem8047896 (type24 _142753 _142755) Prop f x). Qed.
Lemma lem8047899 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (g t) = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t).
Proof. exact (@lem8047897 _142753 _142755 g t). Qed.
Lemma lem8047900 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term1851 _142753 _142755 g t) = (term1852 _142753 _142755 g t).
Proof. exact (MK_COMB (@lem8047891) (@lem8047899 _142753 _142755 g t)). Qed.
Lemma lem8047901 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8047906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047907 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : type24 _142753 _142754) : (f x) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f x).
Proof. exact (@lem8047906 (type24 _142753 _142754) Prop f x). Qed.
Lemma lem8047909 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) : (f s) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f s).
Proof. exact (@lem8047907 _142753 _142754 f s). Qed.
Lemma lem8047910 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) : (term1851 _142753 _142754 f s) = (term1852 _142753 _142754 f s).
Proof. exact (MK_COMB (@lem8047901) (@lem8047909 _142753 _142754 f s)). Qed.
Lemma lem8047911 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047912 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) : (term511 _142753 _142754 f s) = (term1853 _142753 _142754 f s).
Proof. exact (MK_COMB (@lem8047911) (@lem8047910 _142753 _142754 f s)). Qed.
Lemma lem8047913 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term441 _142753 _142754 _142755 f s g t) = (term1893 _142753 _142754 _142755 f s g t).
Proof. exact (MK_COMB (@lem8047912 _142753 _142754 f s) (@lem8047900 _142753 _142755 g t)). Qed.
Lemma lem8047914 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047915 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (s : type24 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142755) : (term445 _142753 _142754 _142755 f s g t) = (term1894 _142753 _142754 _142755 f s g t).
Proof. exact (MK_COMB (@lem8047914) (@lem8047913 _142753 _142754 _142755 f s g t)). Qed.
Lemma lem8047916 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term447 _142753 _142754 _142755 f g s x t y) = (term1895 _142753 _142754 _142755 f g s x t y).
Proof. exact (MK_COMB (@lem8047915 _142753 _142754 _142755 f s g t) (@lem8047890 _142753 _142754 _142755 s x t y)). Qed.
Lemma lem8047917 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term454 _142753 _142754 _142755 f g s x y) = (term1896 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8047916 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8047918 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8047919 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term455 _142753 _142754 _142755 f g s x y) = (term1897 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8047918 _142753 _142755) (@lem8047917 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8047920 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term461 _142753 _142754 _142755 f g x y) = (term1898 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8047919 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8047921 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8047922 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term462 _142753 _142754 _142755 f g x y) = (term1899 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8047921 _142753 _142754) (@lem8047920 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047927 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047928 {_142753 _142755 : Type'} (f : type24 _142753 _142755) (x : cart _142753 _142755) : (f x) = (@I ((cart _142753 _142755) -> Prop) f x).
Proof. exact (@lem8047927 (cart _142753 _142755) Prop f x). Qed.
Lemma lem8047930 {_142753 _142755 : Type'} (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (t' y) = (@I ((cart _142753 _142755) -> Prop) t' y).
Proof. exact (@lem8047928 _142753 _142755 t' y). Qed.
Lemma lem8047935 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047936 {_142753 _142755 : Type'} (f : type56 _142753 _142755) (x : type24 _142753 _142755) : (f x) = (@I (((cart _142753 _142755) -> Prop) -> Prop) f x).
Proof. exact (@lem8047935 (type24 _142753 _142755) Prop f x). Qed.
Lemma lem8047938 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (g t') = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t').
Proof. exact (@lem8047936 _142753 _142755 g t'). Qed.
Lemma lem8047939 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047940 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (term358 _142753 _142755 g t') = (term1848 _142753 _142755 g t').
Proof. exact (MK_COMB (@lem8047939) (@lem8047938 _142753 _142755 g t')). Qed.
Lemma lem8047941 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term360 _142753 _142755 g t' y) = (term1866 _142753 _142755 g t' y).
Proof. exact (MK_COMB (@lem8047940 _142753 _142755 g t') (@lem8047930 _142753 _142755 t' y)). Qed.
Lemma lem8047946 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047947 {_142753 _142754 : Type'} (f : type24 _142753 _142754) (x : cart _142753 _142754) : (f x) = (@I ((cart _142753 _142754) -> Prop) f x).
Proof. exact (@lem8047946 (cart _142753 _142754) Prop f x). Qed.
Lemma lem8047949 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (t x) = (@I ((cart _142753 _142754) -> Prop) t x).
Proof. exact (@lem8047947 _142753 _142754 t x). Qed.
Lemma lem8047954 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8047955 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : type24 _142753 _142754) : (f x) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f x).
Proof. exact (@lem8047954 (type24 _142753 _142754) Prop f x). Qed.
Lemma lem8047957 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (f t) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f t).
Proof. exact (@lem8047955 _142753 _142754 f t). Qed.
Lemma lem8047958 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047959 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term358 _142753 _142754 f t) = (term1848 _142753 _142754 f t).
Proof. exact (MK_COMB (@lem8047958) (@lem8047957 _142753 _142754 f t)). Qed.
Lemma lem8047960 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term360 _142753 _142754 f t x) = (term1866 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8047959 _142753 _142754 f t) (@lem8047949 _142753 _142754 t x)). Qed.
Lemma lem8047961 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047962 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term908 _142753 _142754 f t x) = (term1867 _142753 _142754 f t x).
Proof. exact (MK_COMB (@lem8047961) (@lem8047960 _142753 _142754 f t x)). Qed.
Lemma lem8047963 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term923 _142753 _142754 _142755 f t x g t' y) = (term1900 _142753 _142754 _142755 f t x g t' y).
Proof. exact (MK_COMB (@lem8047962 _142753 _142754 f t x) (@lem8047941 _142753 _142755 g t' y)). Qed.
Lemma lem8047964 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8047965 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) (g : type56 _142753 _142755) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term955 _142753 _142754 _142755 f t x g t' y) = (term1901 _142753 _142754 _142755 f t x g t' y).
Proof. exact (MK_COMB (@lem8047964) (@lem8047963 _142753 _142754 _142755 f t x g t' y)). Qed.
Lemma lem8047966 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term957 _142753 _142754 _142755 t t' f g x y) = (term1902 _142753 _142754 _142755 t t' f g x y).
Proof. exact (MK_COMB (@lem8047965 _142753 _142754 _142755 f t x g t' y) (@lem8047922 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8047967 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047968 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1110 _142753 _142754 _142755 t t' f g x y) = (term1903 _142753 _142754 _142755 t t' f g x y).
Proof. exact (MK_COMB (@lem8047967) (@lem8047966 _142753 _142754 _142755 t t' f g x y)). Qed.
Lemma lem8047969 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1112 _142753 _142754 _142755 f g t x t' y) = (term1904 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8047968 _142753 _142754 _142755 t t' f g x y) (@lem8047867 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047970 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8047971 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1690 _142753 _142754 _142755 f g t x t' y) = (term1905 _142753 _142754 _142755 f g t x t' y).
Proof. exact (MK_COMB (@lem8047970) (@lem8047969 _142753 _142754 _142755 f g t x t' y)). Qed.
Lemma lem8047972 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'') = (term1906 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'').
Proof. exact (MK_COMB (@lem8047971 _142753 _142754 _142755 f g t x t' y) (@lem8047768 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'')). Qed.
Lemma lem8047973 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'') : term1906 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y''.
Proof. exact (EQ_MP (@lem8047972 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'') (@lem8047471 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8047974 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1904 _142753 _142754 _142755 f g t x t' y) : term1904 _142753 _142754 _142755 f g t x t' y.
Proof. exact (h1). Qed.
Lemma lem8047975 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1886 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'') : term1886 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8047976 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1902 _142753 _142754 _142755 t t' f g x y.
Proof. exact (h1). Qed.
Lemma lem8047977 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1892 _142753 _142754 _142755 f g t x t' y.
Proof. exact (h1). Qed.
Lemma lem8047978 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1899 _142753 _142754 _142755 f g x y.
Proof. exact (proj2 (@lem8047976 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8047979 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1900 _142753 _142754 _142755 f t x g t' y.
Proof. exact (proj1 (@lem8047976 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8047980 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1866 _142753 _142755 g t' y.
Proof. exact (proj2 (@lem8047979 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8047981 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1866 _142753 _142754 f t x.
Proof. exact (proj1 (@lem8047979 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8047986 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1889 _142753 _142754 _142755 f g t x t' y.
Proof. exact (proj2 (@lem8047977 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8047987 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1890 _142753 _142754 _142755 f x g y.
Proof. exact (proj1 (@lem8047977 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8047988 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1847 _142753 _142754 _142755 t x t' y.
Proof. exact (proj2 (@lem8047986 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8047989 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1887 _142753 _142754 _142755 f t g t'.
Proof. exact (proj1 (@lem8047986 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8047994 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1856 _142753 _142754 f x.
Proof. exact (h1). Qed.
Lemma lem8047995 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1856 _142753 _142755 g y.
Proof. exact (h1). Qed.
Lemma lem8047996 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1884 _142795 _142796 _142797 f' s x' t'' y') : term1884 _142795 _142796 _142797 f' s x' t'' y'.
Proof. exact (h1). Qed.
Lemma lem8047997 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1872 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1872 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8047998 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1882 _142795 _142796 _142797 t'' f' s x' y'.
Proof. exact (h1). Qed.
Lemma lem8047999 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1876 _142795 _142796 _142797 f' s x' t'' y'.
Proof. exact (h1). Qed.
Lemma lem8048000 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1879 _142795 _142796 _142797 f' s x' y'.
Proof. exact (proj2 (@lem8047998 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048001 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1880 _142795 _142796 _142797 s x' f' t'' y'.
Proof. exact (proj1 (@lem8047998 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048002 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1866 _142795 _142797 f' t'' y'.
Proof. exact (proj2 (@lem8048001 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048006 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1873 _142795 _142796 _142797 f' s x' t'' y'.
Proof. exact (proj2 (@lem8047999 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048007 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1874 _142795 _142796 _142797 s x' f' y'.
Proof. exact (proj1 (@lem8047999 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048008 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1847 _142795 _142796 _142797 s x' t'' y'.
Proof. exact (proj2 (@lem8048006 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048013 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1856 _142795 _142797 f' y'.
Proof. exact (h1). Qed.
Lemma lem8048014 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8048015 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (h1). Qed.
Lemma lem8048016 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1865 _142835 _142836 _142837 f'' x'' t''' y''.
Proof. exact (proj2 (@lem8048014 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048017 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1868 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (proj1 (@lem8048014 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048019 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1866 _142835 _142836 f'' t'''' x''.
Proof. exact (proj1 (@lem8048017 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048022 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1849 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (proj2 (@lem8048015 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048023 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1858 _142835 _142836 _142837 f'' x'' t''' y''.
Proof. exact (proj1 (@lem8048015 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048024 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1847 _142835 _142836 _142837 t'''' x'' t''' y''.
Proof. exact (proj2 (@lem8048022 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048028 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1856 _142835 _142836 f'' x''.
Proof. exact (h1). Qed.
Lemma lem8048049 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term1895 _142753 _142754 _142755 f g s x t y) = (term1895 _142753 _142754 _142755 f g s x t y).
Proof. exact (eq_refl (term1895 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8048050 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1896 _142753 _142754 _142755 f g s x y) = (term1896 _142753 _142754 _142755 f g s x y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8048049 _142753 _142754 _142755 f g s x t y)). Qed.
Lemma lem8048051 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8048052 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (s : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1897 _142753 _142754 _142755 f g s x y) = (term1897 _142753 _142754 _142755 f g s x y).
Proof. exact (MK_COMB (@lem8048051 _142753 _142755) (@lem8048050 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8048053 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1898 _142753 _142754 _142755 f g x y) = (term1898 _142753 _142754 _142755 f g x y).
Proof. exact (fun_ext (fun s : type24 _142753 _142754 => @lem8048052 _142753 _142754 _142755 f g s x y)). Qed.
Lemma lem8048054 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8048056 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1899 _142753 _142754 _142755 f g x y) = (term1899 _142753 _142754 _142755 f g x y).
Proof. exact (MK_COMB (@lem8048054 _142753 _142754) (@lem8048053 _142753 _142754 _142755 f g x y)). Qed.
Lemma lem8048057 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1899 _142753 _142754 _142755 f g x y.
Proof. exact (EQ_MP (@lem8048056 _142753 _142754 _142755 f g x y) (@lem8047978 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048097 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term1854 _142753 _142754 f t x) = (term1854 _142753 _142754 f t x).
Proof. exact (eq_refl (term1854 _142753 _142754 f t x)). Qed.
Lemma lem8048098 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term1855 _142753 _142754 f x) = (term1855 _142753 _142754 f x).
Proof. exact (fun_ext (fun t : type24 _142753 _142754 => @lem8048097 _142753 _142754 f t x)). Qed.
Lemma lem8048099 {_142753 _142754 : Type'} : (@all ((cart _142753 _142754) -> Prop)) = (@all ((cart _142753 _142754) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142754) -> Prop))). Qed.
Lemma lem8048101 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) : (term1856 _142753 _142754 f x) = (term1856 _142753 _142754 f x).
Proof. exact (MK_COMB (@lem8048099 _142753 _142754) (@lem8048098 _142753 _142754 f x)). Qed.
Lemma lem8048102 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1856 _142753 _142754 f x.
Proof. exact (EQ_MP (@lem8048101 _142753 _142754 f x) (@lem8047994 _142753 _142754 f x h1)). Qed.
Lemma lem8048126 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t : type24 _142753 _142755) (y : cart _142753 _142755) : (term1854 _142753 _142755 g t y) = (term1854 _142753 _142755 g t y).
Proof. exact (eq_refl (term1854 _142753 _142755 g t y)). Qed.
Lemma lem8048127 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term1855 _142753 _142755 g y) = (term1855 _142753 _142755 g y).
Proof. exact (fun_ext (fun t : type24 _142753 _142755 => @lem8048126 _142753 _142755 g t y)). Qed.
Lemma lem8048128 {_142753 _142755 : Type'} : (@all ((cart _142753 _142755) -> Prop)) = (@all ((cart _142753 _142755) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142753 _142755) -> Prop))). Qed.
Lemma lem8048130 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) : (term1856 _142753 _142755 g y) = (term1856 _142753 _142755 g y).
Proof. exact (MK_COMB (@lem8048128 _142753 _142755) (@lem8048127 _142753 _142755 g y)). Qed.
Lemma lem8048131 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1856 _142753 _142755 g y.
Proof. exact (EQ_MP (@lem8048130 _142753 _142755 g y) (@lem8047995 _142753 _142755 g y h1)). Qed.
Lemma lem8048145 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1877 _142795 _142796 _142797 f' s x' t y') = (term1877 _142795 _142796 _142797 f' s x' t y').
Proof. exact (eq_refl (term1877 _142795 _142796 _142797 f' s x' t y')). Qed.
Lemma lem8048146 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1878 _142795 _142796 _142797 f' s x' y') = (term1878 _142795 _142796 _142797 f' s x' y').
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8048145 _142795 _142796 _142797 f' s x' t y')). Qed.
Lemma lem8048147 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8048149 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) : (term1879 _142795 _142796 _142797 f' s x' y') = (term1879 _142795 _142796 _142797 f' s x' y').
Proof. exact (MK_COMB (@lem8048147 _142795 _142797) (@lem8048146 _142795 _142796 _142797 f' s x' y')). Qed.
Lemma lem8048150 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1879 _142795 _142796 _142797 f' s x' y'.
Proof. exact (EQ_MP (@lem8048149 _142795 _142796 _142797 f' s x' y') (@lem8048000 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048178 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (h1 : term1850 _142795 _142796 s x') : term1850 _142795 _142796 s x'.
Proof. exact (h1). Qed.
Lemma lem8048198 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1854 _142795 _142797 f' t y') = (term1854 _142795 _142797 f' t y').
Proof. exact (eq_refl (term1854 _142795 _142797 f' t y')). Qed.
Lemma lem8048199 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term1855 _142795 _142797 f' y') = (term1855 _142795 _142797 f' y').
Proof. exact (fun_ext (fun t : type24 _142795 _142797 => @lem8048198 _142795 _142797 f' t y')). Qed.
Lemma lem8048200 {_142795 _142797 : Type'} : (@all ((cart _142795 _142797) -> Prop)) = (@all ((cart _142795 _142797) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142795 _142797) -> Prop))). Qed.
Lemma lem8048202 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) : (term1856 _142795 _142797 f' y') = (term1856 _142795 _142797 f' y').
Proof. exact (MK_COMB (@lem8048200 _142795 _142797) (@lem8048199 _142795 _142797 f' y')). Qed.
Lemma lem8048203 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1856 _142795 _142797 f' y'.
Proof. exact (EQ_MP (@lem8048202 _142795 _142797 f' y') (@lem8048013 _142795 _142797 f' y' h1)). Qed.
Lemma lem8048217 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (s : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1863 _142835 _142836 _142837 f'' s x'' t''' y'') = (term1863 _142835 _142836 _142837 f'' s x'' t''' y'').
Proof. exact (eq_refl (term1863 _142835 _142836 _142837 f'' s x'' t''' y'')). Qed.
Lemma lem8048218 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1864 _142835 _142836 _142837 f'' x'' t''' y'') = (term1864 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (fun_ext (fun s : type24 _142835 _142836 => @lem8048217 _142835 _142836 _142837 f'' s x'' t''' y'')). Qed.
Lemma lem8048219 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8048221 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1865 _142835 _142836 _142837 f'' x'' t''' y'') = (term1865 _142835 _142836 _142837 f'' x'' t''' y'').
Proof. exact (MK_COMB (@lem8048219 _142835 _142836) (@lem8048218 _142835 _142836 _142837 f'' x'' t''' y'')). Qed.
Lemma lem8048222 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1865 _142835 _142836 _142837 f'' x'' t''' y''.
Proof. exact (EQ_MP (@lem8048221 _142835 _142836 _142837 f'' x'' t''' y'') (@lem8048016 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048254 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1854 _142835 _142836 f'' t x'') = (term1854 _142835 _142836 f'' t x'').
Proof. exact (eq_refl (term1854 _142835 _142836 f'' t x'')). Qed.
Lemma lem8048255 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) : (term1855 _142835 _142836 f'' x'') = (term1855 _142835 _142836 f'' x'').
Proof. exact (fun_ext (fun t : type24 _142835 _142836 => @lem8048254 _142835 _142836 f'' t x'')). Qed.
Lemma lem8048256 {_142835 _142836 : Type'} : (@all ((cart _142835 _142836) -> Prop)) = (@all ((cart _142835 _142836) -> Prop)).
Proof. exact (eq_refl (@all ((cart _142835 _142836) -> Prop))). Qed.
Lemma lem8048258 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) : (term1856 _142835 _142836 f'' x'') = (term1856 _142835 _142836 f'' x'').
Proof. exact (MK_COMB (@lem8048256 _142835 _142836) (@lem8048255 _142835 _142836 f'' x'')). Qed.
Lemma lem8048259 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1856 _142835 _142836 f'' x''.
Proof. exact (EQ_MP (@lem8048258 _142835 _142836 f'' x'') (@lem8048028 _142835 _142836 f'' x'' h1)). Qed.
Lemma lem8048275 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') : term1850 _142835 _142837 t''' y''.
Proof. exact (h1). Qed.
Lemma lem8048276 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1907 _142753 _142754 _142755 f g x y _106165.
Proof. exact (@lem8048057 _142753 _142754 _142755 t t' f g x y h1 _106165). Qed.
Lemma lem8048277 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) : (term1907 _142753 _142754 _142755 f g x y _106165) = (term1897 _142753 _142754 _142755 f g _106165 x y).
Proof. exact (eq_refl (term1907 _142753 _142754 _142755 f g x y _106165)). Qed.
Lemma lem8048278 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1897 _142753 _142754 _142755 f g _106165 x y.
Proof. exact (EQ_MP (@lem8048277 _142753 _142754 _142755 f g _106165 x y) (@lem8048276 _142753 _142754 _142755 _106165 t t' f g x y h1)). Qed.
Lemma lem8048279 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (_106166 : type24 _142753 _142755) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1908 _142753 _142754 _142755 f g _106165 x y _106166.
Proof. exact (@lem8048278 _142753 _142754 _142755 _106165 t t' f g x y h1 _106166). Qed.
Lemma lem8048280 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1908 _142753 _142754 _142755 f g _106165 x y _106166) = (term1895 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (eq_refl (term1908 _142753 _142754 _142755 f g _106165 x y _106166)). Qed.
Lemma lem8048281 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (_106166 : type24 _142753 _142755) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1895 _142753 _142754 _142755 f g _106165 x _106166 y.
Proof. exact (EQ_MP (@lem8048280 _142753 _142754 _142755 f g _106165 x _106166 y) (@lem8048279 _142753 _142754 _142755 _106165 _106166 t t' f g x y h1)). Qed.
Lemma lem8048282 {_142753 _142754 : Type'} (_106167 : type24 _142753 _142754) (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1909 _142753 _142754 f x _106167.
Proof. exact (@lem8048102 _142753 _142754 f x h1 _106167). Qed.
Lemma lem8048283 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (_106167 : type24 _142753 _142754) (x : cart _142753 _142754) : (term1909 _142753 _142754 f x _106167) = (term1854 _142753 _142754 f _106167 x).
Proof. exact (eq_refl (term1909 _142753 _142754 f x _106167)). Qed.
Lemma lem8048285 {_142753 _142755 : Type'} (_106168 : type24 _142753 _142755) (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1909 _142753 _142755 g y _106168.
Proof. exact (@lem8048131 _142753 _142755 g y h1 _106168). Qed.
Lemma lem8048286 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (_106168 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1909 _142753 _142755 g y _106168) = (term1854 _142753 _142755 g _106168 y).
Proof. exact (eq_refl (term1909 _142753 _142755 g y _106168)). Qed.
Lemma lem8048288 {_142795 _142796 _142797 : Type'} (_106169 : type24 _142795 _142797) (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1910 _142795 _142796 _142797 f' s x' y' _106169.
Proof. exact (@lem8048150 _142795 _142796 _142797 t'' f' s x' y' h1 _106169). Qed.
Lemma lem8048289 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1910 _142795 _142796 _142797 f' s x' y' _106169) = (term1877 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (eq_refl (term1910 _142795 _142796 _142797 f' s x' y' _106169)). Qed.
Lemma lem8048291 {_142795 _142797 : Type'} (_106170 : type24 _142795 _142797) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1909 _142795 _142797 f' y' _106170.
Proof. exact (@lem8048203 _142795 _142797 f' y' h1 _106170). Qed.
Lemma lem8048292 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (_106170 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1909 _142795 _142797 f' y' _106170) = (term1854 _142795 _142797 f' _106170 y').
Proof. exact (eq_refl (term1909 _142795 _142797 f' y' _106170)). Qed.
Lemma lem8048294 {_142835 _142836 _142837 : Type'} (_106171 : type24 _142835 _142836) (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1911 _142835 _142836 _142837 f'' x'' t''' y'' _106171.
Proof. exact (@lem8048222 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1 _106171). Qed.
Lemma lem8048295 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1911 _142835 _142836 _142837 f'' x'' t''' y'' _106171) = (term1863 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (eq_refl (term1911 _142835 _142836 _142837 f'' x'' t''' y'' _106171)). Qed.
Lemma lem8048297 {_142835 _142836 : Type'} (_106172 : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1909 _142835 _142836 f'' x'' _106172.
Proof. exact (@lem8048259 _142835 _142836 f'' x'' h1 _106172). Qed.
Lemma lem8048298 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (_106172 : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1909 _142835 _142836 f'' x'' _106172) = (term1854 _142835 _142836 f'' _106172 x'').
Proof. exact (eq_refl (term1909 _142835 _142836 f'' x'' _106172)). Qed.
Lemma lem8048314 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1895 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1912 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (@lem8039587 (term1852 _142753 _142754 f _106165) (term1852 _142753 _142755 g _106166) (term1862 _142753 _142754 _142755 _106165 x _106166 y)). Qed.
Lemma lem8048315 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (_106166 : type24 _142753 _142755) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1912 _142753 _142754 _142755 f g _106165 x _106166 y.
Proof. exact (EQ_MP (@lem8048314 _142753 _142754 _142755 f g _106165 x _106166 y) (@lem8048281 _142753 _142754 _142755 _106165 _106166 t t' f g x y h1)). Qed.
Lemma lem8048337 {_142753 _142754 : Type'} (_106167 : type24 _142753 _142754) (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1854 _142753 _142754 f _106167 x.
Proof. exact (EQ_MP (@lem8048283 _142753 _142754 f _106167 x) (@lem8048282 _142753 _142754 _106167 f x h1)). Qed.
Lemma lem8048351 {_142753 _142755 : Type'} (_106168 : type24 _142753 _142755) (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1854 _142753 _142755 g _106168 y.
Proof. exact (EQ_MP (@lem8048286 _142753 _142755 g _106168 y) (@lem8048285 _142753 _142755 _106168 g y h1)). Qed.
Lemma lem8048361 {_142795 _142796 _142797 : Type'} (_106169 : type24 _142795 _142797) (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1877 _142795 _142796 _142797 f' s x' _106169 y'.
Proof. exact (EQ_MP (@lem8048289 _142795 _142796 _142797 f' s x' _106169 y') (@lem8048288 _142795 _142796 _142797 _106169 t'' f' s x' y' h1)). Qed.
Lemma lem8048375 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (h1 : term1850 _142795 _142796 s x') : term1850 _142795 _142796 s x'.
Proof. exact (h1). Qed.
Lemma lem8048387 {_142795 _142797 : Type'} (_106170 : type24 _142795 _142797) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1854 _142795 _142797 f' _106170 y'.
Proof. exact (EQ_MP (@lem8048292 _142795 _142797 f' _106170 y') (@lem8048291 _142795 _142797 _106170 f' y' h1)). Qed.
Lemma lem8048397 {_142835 _142836 _142837 : Type'} (_106171 : type24 _142835 _142836) (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1863 _142835 _142836 _142837 f'' _106171 x'' t''' y''.
Proof. exact (EQ_MP (@lem8048295 _142835 _142836 _142837 f'' _106171 x'' t''' y'') (@lem8048294 _142835 _142836 _142837 _106171 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048415 {_142835 _142836 : Type'} (_106172 : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1854 _142835 _142836 f'' _106172 x''.
Proof. exact (EQ_MP (@lem8048298 _142835 _142836 f'' _106172 x'') (@lem8048297 _142835 _142836 _106172 f'' x'' h1)). Qed.
Lemma lem8048423 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') : term1850 _142835 _142837 t''' y''.
Proof. exact (h1). Qed.
Lemma lem8048425 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I (((cart _142753 _142754) -> Prop) -> Prop) f t.
Proof. exact (proj1 (@lem8047981 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048426 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1913 _142753 _142754 f t.
Proof. exact (fun h0 : term1852 _142753 _142754 f t => @lem8048425 _142753 _142754 _142755 t t' f g x y h1). Qed.
Lemma lem8048428 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048429 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term1913 _142753 _142754 f t) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f t).
Proof. exact (@lem8048428 (@I (((cart _142753 _142754) -> Prop) -> Prop) f t)). Qed.
Lemma lem8048430 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I (((cart _142753 _142754) -> Prop) -> Prop) f t.
Proof. exact (EQ_MP (@lem8048429 _142753 _142754 f t) (@lem8048426 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048432 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I (((cart _142753 _142755) -> Prop) -> Prop) g t'.
Proof. exact (proj1 (@lem8047980 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048433 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1913 _142753 _142755 g t'.
Proof. exact (fun h0 : term1852 _142753 _142755 g t' => @lem8048432 _142753 _142754 _142755 t t' f g x y h1). Qed.
Lemma lem8048435 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048436 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (term1913 _142753 _142755 g t') = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t').
Proof. exact (@lem8048435 (@I (((cart _142753 _142755) -> Prop) -> Prop) g t')). Qed.
Lemma lem8048437 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I (((cart _142753 _142755) -> Prop) -> Prop) g t'.
Proof. exact (EQ_MP (@lem8048436 _142753 _142755 g t') (@lem8048433 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048439 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I ((cart _142753 _142754) -> Prop) t x.
Proof. exact (proj2 (@lem8047981 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048440 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1915 _142753 _142754 t x.
Proof. exact (fun h0 : term1850 _142753 _142754 t x => @lem8048439 _142753 _142754 _142755 t t' f g x y h1). Qed.
Lemma lem8048442 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048443 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term1915 _142753 _142754 t x) = (@I ((cart _142753 _142754) -> Prop) t x).
Proof. exact (@lem8048442 (@I ((cart _142753 _142754) -> Prop) t x)). Qed.
Lemma lem8048444 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I ((cart _142753 _142754) -> Prop) t x.
Proof. exact (EQ_MP (@lem8048443 _142753 _142754 t x) (@lem8048440 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048446 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I ((cart _142753 _142755) -> Prop) t' y.
Proof. exact (proj2 (@lem8047980 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048447 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1915 _142753 _142755 t' y.
Proof. exact (fun h0 : term1850 _142753 _142755 t' y => @lem8048446 _142753 _142754 _142755 t t' f g x y h1). Qed.
Lemma lem8048449 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048450 {_142753 _142755 : Type'} (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1915 _142753 _142755 t' y) = (@I ((cart _142753 _142755) -> Prop) t' y).
Proof. exact (@lem8048449 (@I ((cart _142753 _142755) -> Prop) t' y)). Qed.
Lemma lem8048451 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : @I ((cart _142753 _142755) -> Prop) t' y.
Proof. exact (EQ_MP (@lem8048450 _142753 _142755 t' y) (@lem8048447 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048453 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048454 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1862 _142753 _142754 _142755 _106165 x _106166 y) = (term1918 _142753 _142754 _142755 _106165 x _106166 y).
Proof. exact (@lem8048453 (@I ((cart _142753 _142754) -> Prop) _106165 x) (@I ((cart _142753 _142755) -> Prop) _106166 y)). Qed.
Lemma lem8048455 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (_106166 : type24 _142753 _142755) : (term1853 _142753 _142755 g _106166) = (term1853 _142753 _142755 g _106166).
Proof. exact (eq_refl (term1853 _142753 _142755 g _106166)). Qed.
Lemma lem8048456 {_142753 _142754 _142755 : Type'} (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1877 _142753 _142754 _142755 g _106165 x _106166 y) = (term1919 _142753 _142754 _142755 g _106165 x _106166 y).
Proof. exact (MK_COMB (@lem8048455 _142753 _142755 g _106166) (@lem8048454 _142753 _142754 _142755 _106165 x _106166 y)). Qed.
Lemma lem8048458 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048459 {_142753 _142754 _142755 : Type'} (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1919 _142753 _142754 _142755 g _106165 x _106166 y) = (term1920 _142753 _142754 _142755 g _106165 x _106166 y).
Proof. exact (@lem8048458 (@I (((cart _142753 _142755) -> Prop) -> Prop) g _106166) (term1847 _142753 _142754 _142755 _106165 x _106166 y)). Qed.
Lemma lem8048460 {_142753 _142754 _142755 : Type'} (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1877 _142753 _142754 _142755 g _106165 x _106166 y) = (term1920 _142753 _142754 _142755 g _106165 x _106166 y).
Proof. exact (TRANS (@lem8048456 _142753 _142754 _142755 g _106165 x _106166 y) (@lem8048459 _142753 _142754 _142755 g _106165 x _106166 y)). Qed.
Lemma lem8048461 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (_106165 : type24 _142753 _142754) : (term1853 _142753 _142754 f _106165) = (term1853 _142753 _142754 f _106165).
Proof. exact (eq_refl (term1853 _142753 _142754 f _106165)). Qed.
Lemma lem8048462 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1912 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1921 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (MK_COMB (@lem8048461 _142753 _142754 f _106165) (@lem8048460 _142753 _142754 _142755 g _106165 x _106166 y)). Qed.
Lemma lem8048464 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048465 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1921 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1922 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (@lem8048464 (@I (((cart _142753 _142754) -> Prop) -> Prop) f _106165) (term1873 _142753 _142754 _142755 g _106165 x _106166 y)). Qed.
Lemma lem8048466 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1912 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1922 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (TRANS (@lem8048462 _142753 _142754 _142755 f g _106165 x _106166 y) (@lem8048465 _142753 _142754 _142755 f g _106165 x _106166 y)). Qed.
Lemma lem8048468 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048469 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1922 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1923 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (@lem8048468 (term1924 _142753 _142754 _142755 f g _106165 x _106166 y)). Qed.
Lemma lem8048470 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (_106165 : type24 _142753 _142754) (x : cart _142753 _142754) (_106166 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1912 _142753 _142754 _142755 f g _106165 x _106166 y) = (term1923 _142753 _142754 _142755 f g _106165 x _106166 y).
Proof. exact (TRANS (@lem8048466 _142753 _142754 _142755 f g _106165 x _106166 y) (@lem8048469 _142753 _142754 _142755 f g _106165 x _106166 y)). Qed.
Lemma lem8048472 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1847 _142753 _142754 _142755 t x t' y.
Proof. exact (conj (@lem8048444 _142753 _142754 _142755 t t' f g x y h1) (@lem8048451 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048473 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1873 _142753 _142754 _142755 g t x t' y.
Proof. exact (conj (@lem8048437 _142753 _142754 _142755 t t' f g x y h1) (@lem8048472 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048474 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1924 _142753 _142754 _142755 f g t x t' y.
Proof. exact (conj (@lem8048430 _142753 _142754 _142755 t t' f g x y h1) (@lem8048473 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048476 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (_106166 : type24 _142753 _142755) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1923 _142753 _142754 _142755 f g _106165 x _106166 y.
Proof. exact (EQ_MP (@lem8048470 _142753 _142754 _142755 f g _106165 x _106166 y) (@lem8048315 _142753 _142754 _142755 _106165 _106166 t t' f g x y h1)). Qed.
Lemma lem8048477 {_142753 _142754 _142755 : Type'} (_106165 : type24 _142753 _142754) (_106166 : type24 _142753 _142755) (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1923 _142753 _142754 _142755 f g _106165 x _106166 y.
Proof. exact (@lem8048476 _142753 _142754 _142755 _106165 _106166 t t' f g x y h1). Qed.
Lemma lem8048478 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1923 _142753 _142754 _142755 f g t x t' y.
Proof. exact (@lem8048477 _142753 _142754 _142755 t t' t t' f g x y h1). Qed.
Lemma lem8048481 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : False.
Proof. exact (@lem8048478 _142753 _142754 _142755 t t' f g x y h1 (@lem8048474 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048482 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : term1925.
Proof. exact (fun h0 : ~ False => @lem8048481 _142753 _142754 _142755 t t' f g x y h1). Qed.
Lemma lem8048484 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048485 : term1925 = False.
Proof. exact (@lem8048484 False). Qed.
Lemma lem8048486 {_142753 _142754 _142755 : Type'} (t : type24 _142753 _142754) (t' : type24 _142753 _142755) (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1902 _142753 _142754 _142755 t t' f g x y) : False.
Proof. exact (EQ_MP (@lem8048485) (@lem8048482 _142753 _142754 _142755 t t' f g x y h1)). Qed.
Lemma lem8048488 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I (((cart _142753 _142754) -> Prop) -> Prop) f t.
Proof. exact (proj1 (@lem8047989 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048489 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1913 _142753 _142754 f t.
Proof. exact (fun h0 : term1852 _142753 _142754 f t => @lem8048488 _142753 _142754 _142755 f g t x t' y h1). Qed.
Lemma lem8048491 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048492 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (t : type24 _142753 _142754) : (term1913 _142753 _142754 f t) = (@I (((cart _142753 _142754) -> Prop) -> Prop) f t).
Proof. exact (@lem8048491 (@I (((cart _142753 _142754) -> Prop) -> Prop) f t)). Qed.
Lemma lem8048493 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I (((cart _142753 _142754) -> Prop) -> Prop) f t.
Proof. exact (EQ_MP (@lem8048492 _142753 _142754 f t) (@lem8048489 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048495 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I ((cart _142753 _142754) -> Prop) t x.
Proof. exact (proj1 (@lem8047988 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048496 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1915 _142753 _142754 t x.
Proof. exact (fun h0 : term1850 _142753 _142754 t x => @lem8048495 _142753 _142754 _142755 f g t x t' y h1). Qed.
Lemma lem8048498 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048499 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (x : cart _142753 _142754) : (term1915 _142753 _142754 t x) = (@I ((cart _142753 _142754) -> Prop) t x).
Proof. exact (@lem8048498 (@I ((cart _142753 _142754) -> Prop) t x)). Qed.
Lemma lem8048500 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I ((cart _142753 _142754) -> Prop) t x.
Proof. exact (EQ_MP (@lem8048499 _142753 _142754 t x) (@lem8048496 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048502 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048503 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (_106167 : type24 _142753 _142754) (x : cart _142753 _142754) : (term1854 _142753 _142754 f _106167 x) = (term1926 _142753 _142754 f _106167 x).
Proof. exact (@lem8048502 (@I (((cart _142753 _142754) -> Prop) -> Prop) f _106167) (@I ((cart _142753 _142754) -> Prop) _106167 x)). Qed.
Lemma lem8048505 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048506 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (_106167 : type24 _142753 _142754) (x : cart _142753 _142754) : (term1926 _142753 _142754 f _106167 x) = (term1927 _142753 _142754 f _106167 x).
Proof. exact (@lem8048505 (term1866 _142753 _142754 f _106167 x)). Qed.
Lemma lem8048507 {_142753 _142754 : Type'} (f : type56 _142753 _142754) (_106167 : type24 _142753 _142754) (x : cart _142753 _142754) : (term1854 _142753 _142754 f _106167 x) = (term1927 _142753 _142754 f _106167 x).
Proof. exact (TRANS (@lem8048503 _142753 _142754 f _106167 x) (@lem8048506 _142753 _142754 f _106167 x)). Qed.
Lemma lem8048509 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1866 _142753 _142754 f t x.
Proof. exact (conj (@lem8048493 _142753 _142754 _142755 f g t x t' y h1) (@lem8048500 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048511 {_142753 _142754 : Type'} (_106167 : type24 _142753 _142754) (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1927 _142753 _142754 f _106167 x.
Proof. exact (EQ_MP (@lem8048507 _142753 _142754 f _106167 x) (@lem8048337 _142753 _142754 _106167 f x h1)). Qed.
Lemma lem8048512 {_142753 _142754 : Type'} (_106167 : type24 _142753 _142754) (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1927 _142753 _142754 f _106167 x.
Proof. exact (@lem8048511 _142753 _142754 _106167 f x h1). Qed.
Lemma lem8048513 {_142753 _142754 : Type'} (t : type24 _142753 _142754) (f : type56 _142753 _142754) (x : cart _142753 _142754) (h1 : term1856 _142753 _142754 f x) : term1927 _142753 _142754 f t x.
Proof. exact (@lem8048512 _142753 _142754 t f x h1). Qed.
Lemma lem8048516 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142754 f x) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (@lem8048513 _142753 _142754 t f x h1 (@lem8048509 _142753 _142754 _142755 f g t x t' y h2)). Qed.
Lemma lem8048517 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142754 f x) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : term1925.
Proof. exact (fun h0 : ~ False => @lem8048516 _142753 _142754 _142755 f g t x t' y h1 h2). Qed.
Lemma lem8048519 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048520 : term1925 = False.
Proof. exact (@lem8048519 False). Qed.
Lemma lem8048521 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142754 f x) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (EQ_MP (@lem8048520) (@lem8048517 _142753 _142754 _142755 f g t x t' y h1 h2)). Qed.
Lemma lem8048523 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I (((cart _142753 _142755) -> Prop) -> Prop) g t'.
Proof. exact (proj2 (@lem8047989 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048524 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1913 _142753 _142755 g t'.
Proof. exact (fun h0 : term1852 _142753 _142755 g t' => @lem8048523 _142753 _142754 _142755 f g t x t' y h1). Qed.
Lemma lem8048526 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048527 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (t' : type24 _142753 _142755) : (term1913 _142753 _142755 g t') = (@I (((cart _142753 _142755) -> Prop) -> Prop) g t').
Proof. exact (@lem8048526 (@I (((cart _142753 _142755) -> Prop) -> Prop) g t')). Qed.
Lemma lem8048528 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I (((cart _142753 _142755) -> Prop) -> Prop) g t'.
Proof. exact (EQ_MP (@lem8048527 _142753 _142755 g t') (@lem8048524 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048530 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I ((cart _142753 _142755) -> Prop) t' y.
Proof. exact (proj2 (@lem8047988 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048531 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1915 _142753 _142755 t' y.
Proof. exact (fun h0 : term1850 _142753 _142755 t' y => @lem8048530 _142753 _142754 _142755 f g t x t' y h1). Qed.
Lemma lem8048533 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048534 {_142753 _142755 : Type'} (t' : type24 _142753 _142755) (y : cart _142753 _142755) : (term1915 _142753 _142755 t' y) = (@I ((cart _142753 _142755) -> Prop) t' y).
Proof. exact (@lem8048533 (@I ((cart _142753 _142755) -> Prop) t' y)). Qed.
Lemma lem8048535 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : @I ((cart _142753 _142755) -> Prop) t' y.
Proof. exact (EQ_MP (@lem8048534 _142753 _142755 t' y) (@lem8048531 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048537 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048538 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (_106168 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1854 _142753 _142755 g _106168 y) = (term1926 _142753 _142755 g _106168 y).
Proof. exact (@lem8048537 (@I (((cart _142753 _142755) -> Prop) -> Prop) g _106168) (@I ((cart _142753 _142755) -> Prop) _106168 y)). Qed.
Lemma lem8048540 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048541 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (_106168 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1926 _142753 _142755 g _106168 y) = (term1927 _142753 _142755 g _106168 y).
Proof. exact (@lem8048540 (term1866 _142753 _142755 g _106168 y)). Qed.
Lemma lem8048542 {_142753 _142755 : Type'} (g : type56 _142753 _142755) (_106168 : type24 _142753 _142755) (y : cart _142753 _142755) : (term1854 _142753 _142755 g _106168 y) = (term1927 _142753 _142755 g _106168 y).
Proof. exact (TRANS (@lem8048538 _142753 _142755 g _106168 y) (@lem8048541 _142753 _142755 g _106168 y)). Qed.
Lemma lem8048544 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : term1866 _142753 _142755 g t' y.
Proof. exact (conj (@lem8048528 _142753 _142754 _142755 f g t x t' y h1) (@lem8048535 _142753 _142754 _142755 f g t x t' y h1)). Qed.
Lemma lem8048546 {_142753 _142755 : Type'} (_106168 : type24 _142753 _142755) (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1927 _142753 _142755 g _106168 y.
Proof. exact (EQ_MP (@lem8048542 _142753 _142755 g _106168 y) (@lem8048351 _142753 _142755 _106168 g y h1)). Qed.
Lemma lem8048547 {_142753 _142755 : Type'} (_106168 : type24 _142753 _142755) (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1927 _142753 _142755 g _106168 y.
Proof. exact (@lem8048546 _142753 _142755 _106168 g y h1). Qed.
Lemma lem8048548 {_142753 _142755 : Type'} (t' : type24 _142753 _142755) (g : type56 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) : term1927 _142753 _142755 g t' y.
Proof. exact (@lem8048547 _142753 _142755 t' g y h1). Qed.
Lemma lem8048551 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (@lem8048548 _142753 _142755 t' g y h1 (@lem8048544 _142753 _142754 _142755 f g t x t' y h2)). Qed.
Lemma lem8048552 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : term1925.
Proof. exact (fun h0 : ~ False => @lem8048551 _142753 _142754 _142755 f g t x t' y h1 h2). Qed.
Lemma lem8048554 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048555 : term1925 = False.
Proof. exact (@lem8048554 False). Qed.
Lemma lem8048556 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (EQ_MP (@lem8048555) (@lem8048552 _142753 _142754 _142755 f g t x t' y h1 h2)). Qed.
Lemma lem8048558 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I (((cart _142795 _142797) -> Prop) -> Prop) f' t''.
Proof. exact (proj1 (@lem8048002 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048559 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1913 _142795 _142797 f' t''.
Proof. exact (fun h0 : term1852 _142795 _142797 f' t'' => @lem8048558 _142795 _142796 _142797 t'' f' s x' y' h1). Qed.
Lemma lem8048561 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048562 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (term1913 _142795 _142797 f' t'') = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'').
Proof. exact (@lem8048561 (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'')). Qed.
Lemma lem8048563 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I (((cart _142795 _142797) -> Prop) -> Prop) f' t''.
Proof. exact (EQ_MP (@lem8048562 _142795 _142797 f' t'') (@lem8048559 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048565 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I ((cart _142795 _142796) -> Prop) s x'.
Proof. exact (proj1 (@lem8048001 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048566 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1915 _142795 _142796 s x'.
Proof. exact (fun h0 : term1850 _142795 _142796 s x' => @lem8048565 _142795 _142796 _142797 t'' f' s x' y' h1). Qed.
Lemma lem8048568 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048569 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1915 _142795 _142796 s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8048568 (@I ((cart _142795 _142796) -> Prop) s x')). Qed.
Lemma lem8048570 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I ((cart _142795 _142796) -> Prop) s x'.
Proof. exact (EQ_MP (@lem8048569 _142795 _142796 s x') (@lem8048566 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048572 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I ((cart _142795 _142797) -> Prop) t'' y'.
Proof. exact (proj2 (@lem8048002 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048573 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1915 _142795 _142797 t'' y'.
Proof. exact (fun h0 : term1850 _142795 _142797 t'' y' => @lem8048572 _142795 _142796 _142797 t'' f' s x' y' h1). Qed.
Lemma lem8048575 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048576 {_142795 _142797 : Type'} (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1915 _142795 _142797 t'' y') = (@I ((cart _142795 _142797) -> Prop) t'' y').
Proof. exact (@lem8048575 (@I ((cart _142795 _142797) -> Prop) t'' y')). Qed.
Lemma lem8048577 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : @I ((cart _142795 _142797) -> Prop) t'' y'.
Proof. exact (EQ_MP (@lem8048576 _142795 _142797 t'' y') (@lem8048573 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048579 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048580 {_142795 _142796 _142797 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1862 _142795 _142796 _142797 s x' _106169 y') = (term1918 _142795 _142796 _142797 s x' _106169 y').
Proof. exact (@lem8048579 (@I ((cart _142795 _142796) -> Prop) s x') (@I ((cart _142795 _142797) -> Prop) _106169 y')). Qed.
Lemma lem8048581 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (_106169 : type24 _142795 _142797) : (term1853 _142795 _142797 f' _106169) = (term1853 _142795 _142797 f' _106169).
Proof. exact (eq_refl (term1853 _142795 _142797 f' _106169)). Qed.
Lemma lem8048582 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1877 _142795 _142796 _142797 f' s x' _106169 y') = (term1919 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (MK_COMB (@lem8048581 _142795 _142797 f' _106169) (@lem8048580 _142795 _142796 _142797 s x' _106169 y')). Qed.
Lemma lem8048584 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048585 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1919 _142795 _142796 _142797 f' s x' _106169 y') = (term1920 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (@lem8048584 (@I (((cart _142795 _142797) -> Prop) -> Prop) f' _106169) (term1847 _142795 _142796 _142797 s x' _106169 y')). Qed.
Lemma lem8048586 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1877 _142795 _142796 _142797 f' s x' _106169 y') = (term1920 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (TRANS (@lem8048582 _142795 _142796 _142797 f' s x' _106169 y') (@lem8048585 _142795 _142796 _142797 f' s x' _106169 y')). Qed.
Lemma lem8048588 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048589 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1920 _142795 _142796 _142797 f' s x' _106169 y') = (term1928 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (@lem8048588 (term1873 _142795 _142796 _142797 f' s x' _106169 y')). Qed.
Lemma lem8048590 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (_106169 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1877 _142795 _142796 _142797 f' s x' _106169 y') = (term1928 _142795 _142796 _142797 f' s x' _106169 y').
Proof. exact (TRANS (@lem8048586 _142795 _142796 _142797 f' s x' _106169 y') (@lem8048589 _142795 _142796 _142797 f' s x' _106169 y')). Qed.
Lemma lem8048592 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1847 _142795 _142796 _142797 s x' t'' y'.
Proof. exact (conj (@lem8048570 _142795 _142796 _142797 t'' f' s x' y' h1) (@lem8048577 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048593 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1873 _142795 _142796 _142797 f' s x' t'' y'.
Proof. exact (conj (@lem8048563 _142795 _142796 _142797 t'' f' s x' y' h1) (@lem8048592 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048595 {_142795 _142796 _142797 : Type'} (_106169 : type24 _142795 _142797) (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1928 _142795 _142796 _142797 f' s x' _106169 y'.
Proof. exact (EQ_MP (@lem8048590 _142795 _142796 _142797 f' s x' _106169 y') (@lem8048361 _142795 _142796 _142797 _106169 t'' f' s x' y' h1)). Qed.
Lemma lem8048596 {_142795 _142796 _142797 : Type'} (_106169 : type24 _142795 _142797) (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1928 _142795 _142796 _142797 f' s x' _106169 y'.
Proof. exact (@lem8048595 _142795 _142796 _142797 _106169 t'' f' s x' y' h1). Qed.
Lemma lem8048597 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1928 _142795 _142796 _142797 f' s x' t'' y'.
Proof. exact (@lem8048596 _142795 _142796 _142797 t'' t'' f' s x' y' h1). Qed.
Lemma lem8048600 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : False.
Proof. exact (@lem8048597 _142795 _142796 _142797 t'' f' s x' y' h1 (@lem8048593 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048601 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048600 _142795 _142796 _142797 t'' f' s x' y' h1). Qed.
Lemma lem8048603 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048604 : term1925 = False.
Proof. exact (@lem8048603 False). Qed.
Lemma lem8048605 {_142795 _142796 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1882 _142795 _142796 _142797 t'' f' s x' y') : False.
Proof. exact (EQ_MP (@lem8048604) (@lem8048601 _142795 _142796 _142797 t'' f' s x' y' h1)). Qed.
Lemma lem8048607 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I ((cart _142795 _142796) -> Prop) s x'.
Proof. exact (proj1 (@lem8048008 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048608 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1915 _142795 _142796 s x'.
Proof. exact (fun h0 : term1850 _142795 _142796 s x' => @lem8048607 _142795 _142796 _142797 f' s x' t'' y' h1). Qed.
Lemma lem8048610 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048611 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1915 _142795 _142796 s x') = (@I ((cart _142795 _142796) -> Prop) s x').
Proof. exact (@lem8048610 (@I ((cart _142795 _142796) -> Prop) s x')). Qed.
Lemma lem8048612 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I ((cart _142795 _142796) -> Prop) s x'.
Proof. exact (EQ_MP (@lem8048611 _142795 _142796 s x') (@lem8048608 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048615 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048617 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) : (term1850 _142795 _142796 s x') = (term1929 _142795 _142796 s x').
Proof. exact (@lem8048615 (@I ((cart _142795 _142796) -> Prop) s x')). Qed.
Lemma lem8048620 {_142795 _142796 : Type'} (s : type24 _142795 _142796) (x' : cart _142795 _142796) (h1 : term1850 _142795 _142796 s x') : term1929 _142795 _142796 s x'.
Proof. exact (EQ_MP (@lem8048617 _142795 _142796 s x') (@lem8048375 _142795 _142796 s x' h1)). Qed.
Lemma lem8048623 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (@lem8048620 _142795 _142796 s x' h1 (@lem8048612 _142795 _142796 _142797 f' s x' t'' y' h2)). Qed.
Lemma lem8048624 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048623 _142795 _142796 _142797 f' s x' t'' y' h1 h2). Qed.
Lemma lem8048626 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048627 : term1925 = False.
Proof. exact (@lem8048626 False). Qed.
Lemma lem8048628 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048627) (@lem8048624 _142795 _142796 _142797 f' s x' t'' y' h1 h2)). Qed.
Lemma lem8048630 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I (((cart _142795 _142797) -> Prop) -> Prop) f' t''.
Proof. exact (proj1 (@lem8048006 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048631 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1913 _142795 _142797 f' t''.
Proof. exact (fun h0 : term1852 _142795 _142797 f' t'' => @lem8048630 _142795 _142796 _142797 f' s x' t'' y' h1). Qed.
Lemma lem8048633 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048634 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (t'' : type24 _142795 _142797) : (term1913 _142795 _142797 f' t'') = (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'').
Proof. exact (@lem8048633 (@I (((cart _142795 _142797) -> Prop) -> Prop) f' t'')). Qed.
Lemma lem8048635 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I (((cart _142795 _142797) -> Prop) -> Prop) f' t''.
Proof. exact (EQ_MP (@lem8048634 _142795 _142797 f' t'') (@lem8048631 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048637 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I ((cart _142795 _142797) -> Prop) t'' y'.
Proof. exact (proj2 (@lem8048008 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048638 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1915 _142795 _142797 t'' y'.
Proof. exact (fun h0 : term1850 _142795 _142797 t'' y' => @lem8048637 _142795 _142796 _142797 f' s x' t'' y' h1). Qed.
Lemma lem8048640 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048641 {_142795 _142797 : Type'} (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1915 _142795 _142797 t'' y') = (@I ((cart _142795 _142797) -> Prop) t'' y').
Proof. exact (@lem8048640 (@I ((cart _142795 _142797) -> Prop) t'' y')). Qed.
Lemma lem8048642 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : @I ((cart _142795 _142797) -> Prop) t'' y'.
Proof. exact (EQ_MP (@lem8048641 _142795 _142797 t'' y') (@lem8048638 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048644 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048645 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (_106170 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1854 _142795 _142797 f' _106170 y') = (term1926 _142795 _142797 f' _106170 y').
Proof. exact (@lem8048644 (@I (((cart _142795 _142797) -> Prop) -> Prop) f' _106170) (@I ((cart _142795 _142797) -> Prop) _106170 y')). Qed.
Lemma lem8048647 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048648 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (_106170 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1926 _142795 _142797 f' _106170 y') = (term1927 _142795 _142797 f' _106170 y').
Proof. exact (@lem8048647 (term1866 _142795 _142797 f' _106170 y')). Qed.
Lemma lem8048649 {_142795 _142797 : Type'} (f' : type56 _142795 _142797) (_106170 : type24 _142795 _142797) (y' : cart _142795 _142797) : (term1854 _142795 _142797 f' _106170 y') = (term1927 _142795 _142797 f' _106170 y').
Proof. exact (TRANS (@lem8048645 _142795 _142797 f' _106170 y') (@lem8048648 _142795 _142797 f' _106170 y')). Qed.
Lemma lem8048651 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1866 _142795 _142797 f' t'' y'.
Proof. exact (conj (@lem8048635 _142795 _142796 _142797 f' s x' t'' y' h1) (@lem8048642 _142795 _142796 _142797 f' s x' t'' y' h1)). Qed.
Lemma lem8048653 {_142795 _142797 : Type'} (_106170 : type24 _142795 _142797) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1927 _142795 _142797 f' _106170 y'.
Proof. exact (EQ_MP (@lem8048649 _142795 _142797 f' _106170 y') (@lem8048387 _142795 _142797 _106170 f' y' h1)). Qed.
Lemma lem8048654 {_142795 _142797 : Type'} (_106170 : type24 _142795 _142797) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1927 _142795 _142797 f' _106170 y'.
Proof. exact (@lem8048653 _142795 _142797 _106170 f' y' h1). Qed.
Lemma lem8048655 {_142795 _142797 : Type'} (t'' : type24 _142795 _142797) (f' : type56 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') : term1927 _142795 _142797 f' t'' y'.
Proof. exact (@lem8048654 _142795 _142797 t'' f' y' h1). Qed.
Lemma lem8048658 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (@lem8048655 _142795 _142797 t'' f' y' h1 (@lem8048651 _142795 _142796 _142797 f' s x' t'' y' h2)). Qed.
Lemma lem8048659 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048658 _142795 _142796 _142797 f' s x' t'' y' h1 h2). Qed.
Lemma lem8048661 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048662 : term1925 = False.
Proof. exact (@lem8048661 False). Qed.
Lemma lem8048663 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048662) (@lem8048659 _142795 _142796 _142797 f' s x' t'' y' h1 h2)). Qed.
Lemma lem8048665 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I (((cart _142835 _142836) -> Prop) -> Prop) f'' t''''.
Proof. exact (proj1 (@lem8048019 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048666 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1913 _142835 _142836 f'' t''''.
Proof. exact (fun h0 : term1852 _142835 _142836 f'' t'''' => @lem8048665 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048668 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048669 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (term1913 _142835 _142836 f'' t'''') = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''').
Proof. exact (@lem8048668 (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''')). Qed.
Lemma lem8048670 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I (((cart _142835 _142836) -> Prop) -> Prop) f'' t''''.
Proof. exact (EQ_MP (@lem8048669 _142835 _142836 f'' t'''') (@lem8048666 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048672 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I ((cart _142835 _142836) -> Prop) t'''' x''.
Proof. exact (proj2 (@lem8048019 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048673 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1915 _142835 _142836 t'''' x''.
Proof. exact (fun h0 : term1850 _142835 _142836 t'''' x'' => @lem8048672 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048675 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048676 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1915 _142835 _142836 t'''' x'') = (@I ((cart _142835 _142836) -> Prop) t'''' x'').
Proof. exact (@lem8048675 (@I ((cart _142835 _142836) -> Prop) t'''' x'')). Qed.
Lemma lem8048677 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I ((cart _142835 _142836) -> Prop) t'''' x''.
Proof. exact (EQ_MP (@lem8048676 _142835 _142836 t'''' x'') (@lem8048673 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048679 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I ((cart _142835 _142837) -> Prop) t''' y''.
Proof. exact (proj2 (@lem8048017 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048680 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1915 _142835 _142837 t''' y''.
Proof. exact (fun h0 : term1850 _142835 _142837 t''' y'' => @lem8048679 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048682 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048683 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1915 _142835 _142837 t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8048682 (@I ((cart _142835 _142837) -> Prop) t''' y'')). Qed.
Lemma lem8048684 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : @I ((cart _142835 _142837) -> Prop) t''' y''.
Proof. exact (EQ_MP (@lem8048683 _142835 _142837 t''' y'') (@lem8048680 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048686 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048687 {_142835 _142836 _142837 : Type'} (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1862 _142835 _142836 _142837 _106171 x'' t''' y'') = (term1918 _142835 _142836 _142837 _106171 x'' t''' y'').
Proof. exact (@lem8048686 (@I ((cart _142835 _142836) -> Prop) _106171 x'') (@I ((cart _142835 _142837) -> Prop) t''' y'')). Qed.
Lemma lem8048688 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) : (term1853 _142835 _142836 f'' _106171) = (term1853 _142835 _142836 f'' _106171).
Proof. exact (eq_refl (term1853 _142835 _142836 f'' _106171)). Qed.
Lemma lem8048689 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1863 _142835 _142836 _142837 f'' _106171 x'' t''' y'') = (term1930 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (MK_COMB (@lem8048688 _142835 _142836 f'' _106171) (@lem8048687 _142835 _142836 _142837 _106171 x'' t''' y'')). Qed.
Lemma lem8048691 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048692 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1930 _142835 _142836 _142837 f'' _106171 x'' t''' y'') = (term1931 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (@lem8048691 (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' _106171) (term1847 _142835 _142836 _142837 _106171 x'' t''' y'')). Qed.
Lemma lem8048693 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1863 _142835 _142836 _142837 f'' _106171 x'' t''' y'') = (term1931 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (TRANS (@lem8048689 _142835 _142836 _142837 f'' _106171 x'' t''' y'') (@lem8048692 _142835 _142836 _142837 f'' _106171 x'' t''' y'')). Qed.
Lemma lem8048695 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048696 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1931 _142835 _142836 _142837 f'' _106171 x'' t''' y'') = (term1932 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (@lem8048695 (term1849 _142835 _142836 _142837 f'' _106171 x'' t''' y'')). Qed.
Lemma lem8048697 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (_106171 : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1863 _142835 _142836 _142837 f'' _106171 x'' t''' y'') = (term1932 _142835 _142836 _142837 f'' _106171 x'' t''' y'').
Proof. exact (TRANS (@lem8048693 _142835 _142836 _142837 f'' _106171 x'' t''' y'') (@lem8048696 _142835 _142836 _142837 f'' _106171 x'' t''' y'')). Qed.
Lemma lem8048699 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1847 _142835 _142836 _142837 t'''' x'' t''' y''.
Proof. exact (conj (@lem8048677 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1) (@lem8048684 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048700 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1849 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (conj (@lem8048670 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1) (@lem8048699 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048702 {_142835 _142836 _142837 : Type'} (_106171 : type24 _142835 _142836) (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1932 _142835 _142836 _142837 f'' _106171 x'' t''' y''.
Proof. exact (EQ_MP (@lem8048697 _142835 _142836 _142837 f'' _106171 x'' t''' y'') (@lem8048397 _142835 _142836 _142837 _106171 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048703 {_142835 _142836 _142837 : Type'} (_106171 : type24 _142835 _142836) (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1932 _142835 _142836 _142837 f'' _106171 x'' t''' y''.
Proof. exact (@lem8048702 _142835 _142836 _142837 _106171 t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048704 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1932 _142835 _142836 _142837 f'' t'''' x'' t''' y''.
Proof. exact (@lem8048703 _142835 _142836 _142837 t'''' t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048707 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : False.
Proof. exact (@lem8048704 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1 (@lem8048700 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048708 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048707 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1). Qed.
Lemma lem8048710 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048711 : term1925 = False.
Proof. exact (@lem8048710 False). Qed.
Lemma lem8048712 {_142835 _142836 _142837 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048711) (@lem8048708 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h1)). Qed.
Lemma lem8048714 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I (((cart _142835 _142836) -> Prop) -> Prop) f'' t''''.
Proof. exact (proj1 (@lem8048022 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048715 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1913 _142835 _142836 f'' t''''.
Proof. exact (fun h0 : term1852 _142835 _142836 f'' t'''' => @lem8048714 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1). Qed.
Lemma lem8048717 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048718 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) : (term1913 _142835 _142836 f'' t'''') = (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''').
Proof. exact (@lem8048717 (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' t'''')). Qed.
Lemma lem8048719 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I (((cart _142835 _142836) -> Prop) -> Prop) f'' t''''.
Proof. exact (EQ_MP (@lem8048718 _142835 _142836 f'' t'''') (@lem8048715 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048721 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I ((cart _142835 _142836) -> Prop) t'''' x''.
Proof. exact (proj1 (@lem8048024 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048722 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1915 _142835 _142836 t'''' x''.
Proof. exact (fun h0 : term1850 _142835 _142836 t'''' x'' => @lem8048721 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1). Qed.
Lemma lem8048724 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048725 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1915 _142835 _142836 t'''' x'') = (@I ((cart _142835 _142836) -> Prop) t'''' x'').
Proof. exact (@lem8048724 (@I ((cart _142835 _142836) -> Prop) t'''' x'')). Qed.
Lemma lem8048726 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I ((cart _142835 _142836) -> Prop) t'''' x''.
Proof. exact (EQ_MP (@lem8048725 _142835 _142836 t'''' x'') (@lem8048722 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048728 (a : Prop) (b : Prop) : (term1916 a b) = (term1917 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem8048729 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (_106172 : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1854 _142835 _142836 f'' _106172 x'') = (term1926 _142835 _142836 f'' _106172 x'').
Proof. exact (@lem8048728 (@I (((cart _142835 _142836) -> Prop) -> Prop) f'' _106172) (@I ((cart _142835 _142836) -> Prop) _106172 x'')). Qed.
Lemma lem8048731 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048732 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (_106172 : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1926 _142835 _142836 f'' _106172 x'') = (term1927 _142835 _142836 f'' _106172 x'').
Proof. exact (@lem8048731 (term1866 _142835 _142836 f'' _106172 x'')). Qed.
Lemma lem8048733 {_142835 _142836 : Type'} (f'' : type56 _142835 _142836) (_106172 : type24 _142835 _142836) (x'' : cart _142835 _142836) : (term1854 _142835 _142836 f'' _106172 x'') = (term1927 _142835 _142836 f'' _106172 x'').
Proof. exact (TRANS (@lem8048729 _142835 _142836 f'' _106172 x'') (@lem8048732 _142835 _142836 f'' _106172 x'')). Qed.
Lemma lem8048735 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1866 _142835 _142836 f'' t'''' x''.
Proof. exact (conj (@lem8048719 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1) (@lem8048726 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048737 {_142835 _142836 : Type'} (_106172 : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1927 _142835 _142836 f'' _106172 x''.
Proof. exact (EQ_MP (@lem8048733 _142835 _142836 f'' _106172 x'') (@lem8048415 _142835 _142836 _106172 f'' x'' h1)). Qed.
Lemma lem8048738 {_142835 _142836 : Type'} (_106172 : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1927 _142835 _142836 f'' _106172 x''.
Proof. exact (@lem8048737 _142835 _142836 _106172 f'' x'' h1). Qed.
Lemma lem8048739 {_142835 _142836 : Type'} (t'''' : type24 _142835 _142836) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (h1 : term1856 _142835 _142836 f'' x'') : term1927 _142835 _142836 f'' t'''' x''.
Proof. exact (@lem8048738 _142835 _142836 t'''' f'' x'' h1). Qed.
Lemma lem8048742 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1856 _142835 _142836 f'' x'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (@lem8048739 _142835 _142836 t'''' f'' x'' h1 (@lem8048735 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h2)). Qed.
Lemma lem8048743 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1856 _142835 _142836 f'' x'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048742 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2). Qed.
Lemma lem8048745 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048746 : term1925 = False.
Proof. exact (@lem8048745 False). Qed.
Lemma lem8048747 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1856 _142835 _142836 f'' x'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048746) (@lem8048743 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2)). Qed.
Lemma lem8048749 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I ((cart _142835 _142837) -> Prop) t''' y''.
Proof. exact (proj2 (@lem8048024 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048750 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1915 _142835 _142837 t''' y''.
Proof. exact (fun h0 : term1850 _142835 _142837 t''' y'' => @lem8048749 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1). Qed.
Lemma lem8048752 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048753 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1915 _142835 _142837 t''' y'') = (@I ((cart _142835 _142837) -> Prop) t''' y'').
Proof. exact (@lem8048752 (@I ((cart _142835 _142837) -> Prop) t''' y'')). Qed.
Lemma lem8048754 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : @I ((cart _142835 _142837) -> Prop) t''' y''.
Proof. exact (EQ_MP (@lem8048753 _142835 _142837 t''' y'') (@lem8048750 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1)). Qed.
Lemma lem8048757 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8048759 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) : (term1850 _142835 _142837 t''' y'') = (term1929 _142835 _142837 t''' y'').
Proof. exact (@lem8048757 (@I ((cart _142835 _142837) -> Prop) t''' y'')). Qed.
Lemma lem8048762 {_142835 _142837 : Type'} (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') : term1929 _142835 _142837 t''' y''.
Proof. exact (EQ_MP (@lem8048759 _142835 _142837 t''' y'') (@lem8048423 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048765 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (@lem8048762 _142835 _142837 t''' y'' h1 (@lem8048754 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h2)). Qed.
Lemma lem8048766 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : term1925.
Proof. exact (fun h0 : ~ False => @lem8048765 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2). Qed.
Lemma lem8048768 (p : Prop) : (term1914 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8048769 : term1925 = False.
Proof. exact (@lem8048768 False). Qed.
Lemma lem8048770 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048769) (@lem8048766 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2)). Qed.
Lemma lem8048771 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : (term1850 _142835 _142837 t''' y'') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142835 _142837 t''' y'' => @lem8048770 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (fun h3 : False => @lem8048423 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048772 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048771 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (@lem8048423 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048773 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : (term1850 _142795 _142796 s x') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142795 _142796 s x' => @lem8048628 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (fun h3 : False => @lem8048375 _142795 _142796 s x' h1)). Qed.
Lemma lem8048774 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048773 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (@lem8048375 _142795 _142796 s x' h1)). Qed.
Lemma lem8048775 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : (term1850 _142835 _142837 t''' y'') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142835 _142837 t''' y'' => @lem8048772 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (fun h3 : False => @lem8048275 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048776 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048775 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (@lem8048275 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048777 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : (term1850 _142795 _142796 s x') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142795 _142796 s x' => @lem8048774 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (fun h3 : False => @lem8048178 _142795 _142796 s x' h1)). Qed.
Lemma lem8048778 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048777 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (@lem8048178 _142795 _142796 s x' h1)). Qed.
Lemma lem8048779 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : (term1850 _142835 _142837 t''' y'') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142835 _142837 t''' y'' => @lem8048776 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (fun h3 : False => @lem8048275 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048780 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1850 _142835 _142837 t''' y'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048779 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (@lem8048275 _142835 _142837 t''' y'' h1)). Qed.
Lemma lem8048781 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1856 _142835 _142836 f'' x'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : (term1856 _142835 _142836 f'' x'') = False.
Proof. exact (prop_ext (fun h3 : term1856 _142835 _142836 f'' x'' => @lem8048747 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (fun h3 : False => @lem8048259 _142835 _142836 f'' x'' h1)). Qed.
Lemma lem8048782 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1856 _142835 _142836 f'' x'') (h2 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (EQ_MP (@lem8048781 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1 h2) (@lem8048259 _142835 _142836 f'' x'' h1)). Qed.
Lemma lem8048783 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : (term1856 _142795 _142797 f' y') = False.
Proof. exact (prop_ext (fun h3 : term1856 _142795 _142797 f' y' => @lem8048663 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (fun h3 : False => @lem8048203 _142795 _142797 f' y' h1)). Qed.
Lemma lem8048784 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1856 _142795 _142797 f' y') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048783 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (@lem8048203 _142795 _142797 f' y' h1)). Qed.
Lemma lem8048785 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : (term1850 _142795 _142796 s x') = False.
Proof. exact (prop_ext (fun h3 : term1850 _142795 _142796 s x' => @lem8048778 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (fun h3 : False => @lem8048178 _142795 _142796 s x' h1)). Qed.
Lemma lem8048786 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1850 _142795 _142796 s x') (h2 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (EQ_MP (@lem8048785 _142795 _142796 _142797 f' s x' t'' y' h1 h2) (@lem8048178 _142795 _142796 s x' h1)). Qed.
Lemma lem8048787 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : (term1856 _142753 _142755 g y) = False.
Proof. exact (prop_ext (fun h3 : term1856 _142753 _142755 g y => @lem8048556 _142753 _142754 _142755 f g t x t' y h1 h2) (fun h3 : False => @lem8048131 _142753 _142755 g y h1)). Qed.
Lemma lem8048788 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142755 g y) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (EQ_MP (@lem8048787 _142753 _142754 _142755 f g t x t' y h1 h2) (@lem8048131 _142753 _142755 g y h1)). Qed.
Lemma lem8048789 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142754 f x) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : (term1856 _142753 _142754 f x) = False.
Proof. exact (prop_ext (fun h3 : term1856 _142753 _142754 f x => @lem8048521 _142753 _142754 _142755 f g t x t' y h1 h2) (fun h3 : False => @lem8048102 _142753 _142754 f x h1)). Qed.
Lemma lem8048790 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1856 _142753 _142754 f x) (h2 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (EQ_MP (@lem8048789 _142753 _142754 _142755 f g t x t' y h1 h2) (@lem8048102 _142753 _142754 f x h1)). Qed.
Lemma lem8048791 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (or_elim (@lem8048023 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1) (fun h0 : term1856 _142835 _142836 f'' x'' => @lem8048782 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h0 h1) (fun h0 : term1850 _142835 _142837 t''' y'' => @lem8048780 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h0 h1)). Qed.
Lemma lem8048792 {_142835 _142836 _142837 : Type'} (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1872 _142835 _142836 _142837 f'' t'''' x'' t''' y'') : False.
Proof. exact (or_elim (@lem8047997 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h1) (fun h0 : term1870 _142835 _142836 _142837 t'''' f'' x'' t''' y'' => @lem8048712 _142835 _142836 _142837 t'''' f'' x'' t''' y'' h0) (fun h0 : term1860 _142835 _142836 _142837 f'' t'''' x'' t''' y'' => @lem8048791 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h0)). Qed.
Lemma lem8048793 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1876 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (or_elim (@lem8048007 _142795 _142796 _142797 f' s x' t'' y' h1) (fun h0 : term1850 _142795 _142796 s x' => @lem8048786 _142795 _142796 _142797 f' s x' t'' y' h0 h1) (fun h0 : term1856 _142795 _142797 f' y' => @lem8048784 _142795 _142796 _142797 f' s x' t'' y' h0 h1)). Qed.
Lemma lem8048794 {_142795 _142796 _142797 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1884 _142795 _142796 _142797 f' s x' t'' y') : False.
Proof. exact (or_elim (@lem8047996 _142795 _142796 _142797 f' s x' t'' y' h1) (fun h0 : term1882 _142795 _142796 _142797 t'' f' s x' y' => @lem8048605 _142795 _142796 _142797 t'' f' s x' y' h0) (fun h0 : term1876 _142795 _142796 _142797 f' s x' t'' y' => @lem8048793 _142795 _142796 _142797 f' s x' t'' y' h0)). Qed.
Lemma lem8048795 {_142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1886 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'') : False.
Proof. exact (or_elim (@lem8047975 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'' h1) (fun h0 : term1884 _142795 _142796 _142797 f' s x' t'' y' => @lem8048794 _142795 _142796 _142797 f' s x' t'' y' h0) (fun h0 : term1872 _142835 _142836 _142837 f'' t'''' x'' t''' y'' => @lem8048792 _142835 _142836 _142837 f'' t'''' x'' t''' y'' h0)). Qed.
Lemma lem8048796 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1892 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (or_elim (@lem8047987 _142753 _142754 _142755 f g t x t' y h1) (fun h0 : term1856 _142753 _142754 f x => @lem8048790 _142753 _142754 _142755 f g t x t' y h0 h1) (fun h0 : term1856 _142753 _142755 g y => @lem8048788 _142753 _142754 _142755 f g t x t' y h0 h1)). Qed.
Lemma lem8048797 {_142753 _142754 _142755 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1904 _142753 _142754 _142755 f g t x t' y) : False.
Proof. exact (or_elim (@lem8047974 _142753 _142754 _142755 f g t x t' y h1) (fun h0 : term1902 _142753 _142754 _142755 t t' f g x y => @lem8048486 _142753 _142754 _142755 t t' f g x y h0) (fun h0 : term1892 _142753 _142754 _142755 f g t x t' y => @lem8048796 _142753 _142754 _142755 f g t x t' y h0)). Qed.
Lemma lem8048798 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t'''' : type24 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'') : False.
Proof. exact (or_elim (@lem8047973 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'' h1) (fun h0 : term1904 _142753 _142754 _142755 f g t x t' y => @lem8048797 _142753 _142754 _142755 f g t x t' y h0) (fun h0 : term1886 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'' => @lem8048795 _142795 _142796 _142797 _142835 _142836 _142837 f' s x' t'' y' f'' t'''' x'' t''' y'' h0)). Qed.
Lemma lem8048799 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (y'' : cart _142835 _142837) (h1 : term1815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'') : False.
Proof. exact (ex_elim (@lem8047470 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'' h1) (fun t'''' : type24 _142835 _142836 => fun h0 : term1814 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'' t'''' => @lem8048798 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t'''' x'' t''' y'' h0)). Qed.
Lemma lem8048800 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (x'' : cart _142835 _142836) (t''' : type24 _142835 _142837) (h1 : term1817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''') : False.
Proof. exact (ex_elim (@lem8047469 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' h1) (fun y'' : cart _142835 _142837 => fun h0 : term1816 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'' => @lem8048799 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' y'' h0)). Qed.
Lemma lem8048801 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (t''' : type24 _142835 _142837) (h1 : term1819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''') : False.
Proof. exact (ex_elim (@lem8047468 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' h1) (fun x'' : cart _142835 _142836 => fun h0 : term1818 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' x'' => @lem8048800 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' x'' t''' h0)). Qed.
Lemma lem8048802 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (f'' : type56 _142835 _142836) (h1 : term1821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'') : False.
Proof. exact (ex_elim (@lem8047467 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' h1) (fun t''' : type24 _142835 _142837 => fun h0 : term1820 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' => @lem8048801 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' t''' h0)). Qed.
Lemma lem8048803 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (t'' : type24 _142795 _142797) (y' : cart _142795 _142797) (h1 : term1823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y') : False.
Proof. exact (ex_elim (@lem8047466 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' h1) (fun f'' : type56 _142835 _142836 => fun h0 : term1822 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' => @lem8048802 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' f'' h0)). Qed.
Lemma lem8048804 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (y' : cart _142795 _142797) (h1 : term1825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y') : False.
Proof. exact (ex_elim (@lem8047465 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y' h1) (fun t'' : type24 _142795 _142797 => fun h0 : term1824 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y' t'' => @lem8048803 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' t'' y' h0)). Qed.
Lemma lem8048805 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (x' : cart _142795 _142796) (h1 : term1827 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x') : False.
Proof. exact (ex_elim (@lem8047464 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' h1) (fun y' : cart _142795 _142797 => fun h0 : term1826 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y' => @lem8048804 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' y' h0)). Qed.
Lemma lem8048806 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (f' : type56 _142795 _142797) (s : type24 _142795 _142796) (h1 : term1829 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s) : False.
Proof. exact (ex_elim (@lem8047463 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s h1) (fun x' : cart _142795 _142796 => fun h0 : term1828 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' => @lem8048805 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s x' h0)). Qed.
Lemma lem8048807 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (s : type24 _142795 _142796) (h1 : term1831 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s) : False.
Proof. exact (ex_elim (@lem8047462 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s h1) (fun f' : type56 _142795 _142797 => fun h0 : term1830 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s f' => @lem8048806 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y f' s h0)). Qed.
Lemma lem8048808 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (t' : type24 _142753 _142755) (y : cart _142753 _142755) (h1 : term1833 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y) : False.
Proof. exact (ex_elim (@lem8047461 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y h1) (fun s : type24 _142795 _142796 => fun h0 : term1832 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s => @lem8048807 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y s h0)). Qed.
Lemma lem8048809 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (t : type24 _142753 _142754) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1835 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y) : False.
Proof. exact (ex_elim (@lem8047460 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y h1) (fun t' : type24 _142753 _142755 => fun h0 : term1834 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y t' => @lem8048808 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x t' y h0)). Qed.
Lemma lem8048810 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (y : cart _142753 _142755) (h1 : term1837 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y) : False.
Proof. exact (ex_elim (@lem8047459 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y h1) (fun t : type24 _142753 _142754 => fun h0 : term1836 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y t => @lem8048809 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g t x y h0)). Qed.
Lemma lem8048811 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (x : cart _142753 _142754) (h1 : term1839 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x) : False.
Proof. exact (ex_elim (@lem8047458 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x h1) (fun y : cart _142753 _142755 => fun h0 : term1838 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y => @lem8048810 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x y h0)). Qed.
Lemma lem8048812 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (g : type56 _142753 _142755) (h1 : term1841 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g) : False.
Proof. exact (ex_elim (@lem8047457 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g h1) (fun x : cart _142753 _142754 => fun h0 : term1840 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x => @lem8048811 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g x h0)). Qed.
Lemma lem8048813 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (f : type56 _142753 _142754) (h1 : term1843 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f) : False.
Proof. exact (ex_elim (@lem8047456 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f h1) (fun g : type56 _142753 _142755 => fun h0 : term1842 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g => @lem8048812 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f g h0)). Qed.
Lemma lem8048814 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : False.
Proof. exact (ex_elim (@lem8047455 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1) (fun f : type56 _142753 _142754 => fun h0 : term1844 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f => @lem8048813 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 f h0)). Qed.
Lemma lem8048815 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = False.
Proof. exact (prop_ext (fun h2 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8048814 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1) (fun h2 : False => @lem8041518 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8048816 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : False.
Proof. exact (EQ_MP (@lem8048815 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1) (@lem8041518 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8048817 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8048816 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h0). Qed.
Lemma lem8048818 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8041517 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8048817 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8048819 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8041513 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8048818 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8048821 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (@lem8040909 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 (@lem8048819 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8048822 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : False.
Proof. exact (@lem8048821 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 (@lem8040893 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8048823 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : (term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) = False.
Proof. exact (prop_ext (fun h2 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8048822 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1) (fun h2 : False => @lem8040893 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8048824 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} (h1 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) : False.
Proof. exact (EQ_MP (@lem8048823 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1) (@lem8040893 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h1)). Qed.
Lemma lem8048825 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term417 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (fun h0 : term418 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 => @lem8048824 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 h0). Qed.
Lemma lem8048826 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term415 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8040892 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8048825 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8048828 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term353 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8040888 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8048826 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
Lemma lem8048829 {_142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837 : Type'} : term352 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837.
Proof. exact (EQ_MP (@lem8040332 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837) (@lem8048828 _142753 _142754 _142755 _142795 _142796 _142797 _142835 _142836 _142837)). Qed.
